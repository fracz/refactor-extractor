/**
 * Checks if all the output files of the given lineage are completed.
 *
 * @param lineage the lineage to check
 * @param fileSystemMasterView the view of the file system master where the output file lies
 * @return true if all the output files of the given lineage are completed, false otherwise
 * @throws FileDoesNotExistException if the file does not exist
 */
public static boolean isCompleted(Lineage lineage, FileSystemMasterView fileSystemMasterView) throws FileDoesNotExistException {
    for (long outputFile : lineage.getOutputFiles()) {
        FileInfo fileInfo = fileSystemMasterView.getFileInfo(outputFile);
        if (!fileInfo.isCompleted()) {
            return false;
        }
    }
    return true;
}||||||||/**
 * Checks if all the output files of the given lineage are completed.
 *
 * @param lineage the lineage to check
 * @param fileSystemMasterView the view of the file system master where the output file lies
 * @return true if all the output files of the given lineage are completed, false otherwise
 * @throws FileDoesNotExistException if the file does not exist
 * @throws AccessControlException if permission denied
 */
public static boolean isCompleted(Lineage lineage, FileSystemMasterView fileSystemMasterView) throws FileDoesNotExistException, AccessControlException {
    for (long outputFile : lineage.getOutputFiles()) {
        FileInfo fileInfo = fileSystemMasterView.getFileInfo(outputFile);
        if (!fileInfo.isCompleted()) {
            return false;
        }
    }
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

