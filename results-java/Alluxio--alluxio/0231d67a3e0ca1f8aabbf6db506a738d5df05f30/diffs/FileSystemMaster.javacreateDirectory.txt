/**
 * Creates a directory for a given path.
 * <p>
 * This operation requires the client user to have
 * {@link FileSystemAction#WRITE} permission on the parent of the path.
 *
 * @param path the path of the directory
 * @param options method options
 * @throws InvalidPathException when the path is invalid, please see documentation on
 * {@link InodeTree#createPath(LockedInodePath, CreatePathOptions)} for more details
 * @throws FileAlreadyExistsException when there is already a file at path
 * @throws IOException if a non-Alluxio related exception occurs
 * @throws AccessControlException if permission checking fails
 * @throws FileDoesNotExistException if the parent of the path does not exist and the recursive
 * option is false
 */
public void createDirectory(AlluxioURI path, CreateDirectoryOptions options) throws InvalidPathException, FileAlreadyExistsException, IOException, AccessControlException, FileDoesNotExistException {
    LOG.debug("createDirectory {} ", path);
    MasterContext.getMasterSource().incCreateDirectoriesOps(1);
    long flushCounter = AsyncJournalWriter.INVALID_FLUSH_COUNTER;
    try (LockedInodePath inodePath = mInodeTree.lockInodePath(path, InodeTree.LockMode.WRITE)) {
        mPermissionChecker.checkParentPermission(FileSystemAction.WRITE, inodePath);
        mMountTable.checkUnderWritableMountPoint(path);
        flushCounter = createDirectoryAndJournal(inodePath, options);
    } finally {
        // finally runs after resources are closed (unlocked).
        waitForJournalFlush(flushCounter);
    }
}||||||||/**
 * Creates a directory for a given path.
 * <p>
 * This operation requires the client user to have
 * {@link Mode.Bits#WRITE} permission on the parent of the path.
 *
 * @param path the path of the directory
 * @param options method options
 * @throws InvalidPathException when the path is invalid, please see documentation on
 * {@link InodeTree#createPath(LockedInodePath, CreatePathOptions)} for more details
 * @throws FileAlreadyExistsException when there is already a file at path
 * @throws IOException if a non-Alluxio related exception occurs
 * @throws AccessControlException if permission checking fails
 * @throws FileDoesNotExistException if the parent of the path does not exist and the recursive
 * option is false
 */
public void createDirectory(AlluxioURI path, CreateDirectoryOptions options) throws InvalidPathException, FileAlreadyExistsException, IOException, AccessControlException, FileDoesNotExistException {
    LOG.debug("createDirectory {} ", path);
    MasterContext.getMasterSource().incCreateDirectoriesOps(1);
    long flushCounter = AsyncJournalWriter.INVALID_FLUSH_COUNTER;
    try (LockedInodePath inodePath = mInodeTree.lockInodePath(path, InodeTree.LockMode.WRITE)) {
        mPermissionChecker.checkParentPermission(Mode.Bits.WRITE, inodePath);
        mMountTable.checkUnderWritableMountPoint(path);
        flushCounter = createDirectoryAndJournal(inodePath, options);
    } finally {
        // finally runs after resources are closed (unlocked).
        waitForJournalFlush(flushCounter);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					LineComment
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					LineComment
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

