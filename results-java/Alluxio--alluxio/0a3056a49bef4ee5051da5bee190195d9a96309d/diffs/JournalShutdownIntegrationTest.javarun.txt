/**
 * Keep creating files/tables until something crashes or fail to create. Record how many files/
 * tables are created successfully.
 */
@Override
public void run() {
    try {
        // expected since the master will shutdown at a certain time.
        while (true) {
            if (mOpType == 0) {
                try {
                    mTfs.getOutStream(new TachyonURI(TEST_FILE_DIR + mSuccessNum), ClientOptions.defaults()).close();
                } catch (IOException ioe) {
                    break;
                }
            } else if (mOpType == 1) {
            // TODO(gene): Add this back when there is new RawTable client API.
            // if (mTfs.createRawTable(new TachyonURI(TEST_TABLE_DIR + mSuccessNum), 1) == -1) {
            // break;
            // }
            }
            // The create operation may succeed at the master side but still returns false due to the
            // shutdown. So the mSuccessNum may be less than the actual success number.
            mSuccessNum++;
            CommonUtils.sleepMs(100);
        }
    } catch (Exception e) {
    // Something crashed. Stop the thread.
    }
}||||||||/**
 * Keep creating files/tables until something crashes or fail to create. Record how many files/
 * tables are created successfully.
 */
@Override
public void run() {
    try {
        // expected since the master will shutdown at a certain time.
        while (true) {
            if (mOpType == 0) {
                try {
                    mTfs.getOutStream(new TachyonURI(TEST_FILE_DIR + mSuccessNum)).close();
                } catch (IOException ioe) {
                    break;
                }
            } else if (mOpType == 1) {
            // TODO(gene): Add this back when there is new RawTable client API.
            // if (mTfs.createRawTable(new TachyonURI(TEST_TABLE_DIR + mSuccessNum), 1) == -1) {
            // break;
            // }
            }
            // The create operation may succeed at the master side but still returns false due to the
            // shutdown. So the mSuccessNum may be less than the actual success number.
            mSuccessNum++;
            CommonUtils.sleepMs(100);
        }
    } catch (Exception e) {
    // Something crashed. Stop the thread.
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(BreakStmt
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													(ObjectCreationExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
								)
							)
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(BreakStmt
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													(ObjectCreationExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

