@Test
public void allocateBlockTest() throws Exception {
    mAllocator = AllocatorFactory.create(AllocatorType.MAX_FREE, mManagerView);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 2000
    // 1      └───── 2000
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 1500, true, 2, 0);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 500   <--- alloc
    // 1      └───── 2000
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 2000, true, 2, 1);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 500
    // 1      └───── 0   <--- alloc
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 300, true, 1, 0);
    // 
    // idx | tier1 | tier2 | tier3
    // 0     700   <--- alloc
    // 0      ├───── 500
    // 1      └───── 0
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyDirInTierLoc2, 300, true, 2, 0);
// 
// idx | tier1 | tier2 | tier3
// 0     700
// 0      ├───── 200   <--- alloc
// 1      └───── 0
// 0               ├─── 3000
// 1               ├─── 3000
// 2               └─── 3000
// 
}||||||||@Test
public void allocateBlockTest() throws Exception {
    TachyonConf conf = new TachyonConf();
    conf.set(Constants.WORKER_ALLOCATE_STRATEGY, MaxFreeAllocator.class.getName());
    mAllocator = Allocator.Factory.createAllocator(conf, mManagerView);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 2000
    // 1      └───── 2000
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 1500, true, 2, 0);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 500   <--- alloc
    // 1      └───── 2000
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 2000, true, 2, 1);
    // 
    // idx | tier1 | tier2 | tier3
    // 0    1000
    // 0      ├───── 500
    // 1      └───── 0   <--- alloc
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyTierLoc, 300, true, 1, 0);
    // 
    // idx | tier1 | tier2 | tier3
    // 0     700   <--- alloc
    // 0      ├───── 500
    // 1      └───── 0
    // 0               ├─── 3000
    // 1               ├─── 3000
    // 2               └─── 3000
    // 
    assertTempBlockMeta(mAllocator, mAnyDirInTierLoc2, 300, true, 2, 0);
// 
// idx | tier1 | tier2 | tier3
// 0     700
// 0      ├───── 200   <--- alloc
// 1      └───── 0
// 0               ├─── 3000
// 1               ├─── 3000
// 2               └─── 3000
// 
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

