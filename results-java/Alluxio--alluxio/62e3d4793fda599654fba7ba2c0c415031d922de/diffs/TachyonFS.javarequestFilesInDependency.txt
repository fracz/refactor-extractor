/**
 * Requests the dependency's needed files.
 *
 * @param depId the dependency id
 * @throws IOException if the underlying master RPC fails
 */
public synchronized void requestFilesInDependency(int depId) throws IOException {
    mFSMasterClient.requestFilesInDependency(depId);
}||||||||/**
 * Requests the dependency's needed files.
 *
 * @param depId the dependency id
 * @throws IOException if the underlying master RPC fails
 */
public synchronized void requestFilesInDependency(int depId) throws IOException {
    try {
        mFSMasterClient.requestFilesInDependency(depId);
    } catch (DependencyDoesNotExistException e) {
        throw new IOException(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

