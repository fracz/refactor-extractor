/**
 * Adds metadata about a file in the under storage system to Tachyon. Only metadata will be
 * updated and no data will be transferred. The data can be added to Tachyon space by doing an
 * operation with the cache option specified, for example reading.
 *
 * @param path the path to create the file in Tachyon
 * @param ufsPath the under storage system path of the file that will back the Tachyon file
 * @param recursive if true, the parent directories to the file in Tachyon will be created
 * @return the file id of the resulting file in Tachyon
 * @throws IOException if the Tachyon path is invalid or the ufsPath does not exist
 */
public long loadFileInfoFromUfs(TachyonURI path, TachyonURI ufsPath, boolean recursive) throws IOException {
    FileSystemMasterClient masterClient = mContext.acquireMasterClient();
    try {
        return masterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(), -1L, recursive);
    } finally {
        mContext.releaseMasterClient(masterClient);
    }
}||||||||/**
 * Adds metadata about a file in the under storage system to Tachyon. Only metadata will be
 * updated and no data will be transferred. The data can be added to Tachyon space by doing an
 * operation with the cache option specified, for example reading.
 *
 * @param path the path to create the file in Tachyon
 * @param ufsPath the under storage system path of the file that will back the Tachyon file
 * @param recursive if true, the parent directories to the file in Tachyon will be created
 * @return the file id of the resulting file in Tachyon
 * @throws FileDoesNotExistException if there is no file at the given path
 * @throws IOException if the Tachyon path is invalid or the ufsPath does not exist
 */
public long loadFileInfoFromUfs(TachyonURI path, TachyonURI ufsPath, boolean recursive) throws IOException, FileDoesNotExistException {
    FileSystemMasterClient masterClient = mContext.acquireMasterClient();
    try {
        return masterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(), -1L, recursive);
    } finally {
        mContext.releaseMasterClient(masterClient);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(UnaryExpr
							(LongLiteralExpr
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

