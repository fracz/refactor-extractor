/**
 * Local user send heartbeat to local worker to keep its temporary folder.
 *
 * @param userId the id of the client heartbeating
 * @param metrics a list of the client metrics that were collected between this heartbeat and
 * the last. Each value in the list represents a specific metric based on the
 * index.
 */
public void userHeartbeat(long userId, List<Long> metrics) {
    mWorker.userHeartbeat(userId, metrics);
}||||||||/**
 * Local user send heartbeat to local worker to keep its temporary folder.
 *
 * @param userId the id of the client heartbeating
 * @param metrics a list of the client metrics that were collected between this heartbeat and
 * the last. Each value in the list represents a specific metric based on the
 * index.
 */
@Override
public void userHeartbeat(long userId, List<Long> metrics) {
    mWorker.userHeartbeat(userId, metrics);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

