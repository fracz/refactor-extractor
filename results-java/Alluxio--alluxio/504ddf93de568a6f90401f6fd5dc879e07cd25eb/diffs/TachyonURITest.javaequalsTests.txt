@Test
public void equalsTests() {
    String path = "tachyon://localhost:8080/a/b/c.txt";
    TachyonURI uri0 = new TachyonURI(path);
    TachyonURI uri1 = new TachyonURI(path);
    TachyonURI uri2 = new TachyonURI("tachyon://127.0.0.1:8080/a/b/c.txt");
    Assert.assertTrue(uri0.equals(uri0));
    Assert.assertTrue(uri0.equals(uri1));
    Assert.assertFalse(uri0.equals(path));
    Assert.assertFalse(uri0.equals(uri2));
}||||||||@Test
public void equalsTests() {
    Assert.assertFalse(new TachyonURI("tachyon://127.0.0.1:8080/a/b/c.txt").equals(new TachyonURI("tachyon://localhost:8080/a/b/c.txt")));
    TachyonURI[] uriFromDifferentConstructor = new TachyonURI[] { new TachyonURI("tachyon://127.0.0.1:8080/a/b/c.txt"), new TachyonURI("tachyon", "127.0.0.1:8080", "/a/b/c.txt"), new TachyonURI(new TachyonURI("tachyon://127.0.0.1:8080/a"), new TachyonURI("b/c.txt")) };
    for (int i = 0; i < uriFromDifferentConstructor.length - 1; i++) {
        Assert.assertTrue(uriFromDifferentConstructor[i].equals(uriFromDifferentConstructor[i + 1]));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayInitializerExpr
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ObjectCreationExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ObjectCreationExpr
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ArrayCreationLevel
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							(ArrayAccessExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

