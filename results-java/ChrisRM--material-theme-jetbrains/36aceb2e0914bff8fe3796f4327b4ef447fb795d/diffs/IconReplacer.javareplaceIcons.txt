public void replaceIcons(Class iconsClass, String iconPath) {
    Field[] fields = iconsClass.getDeclaredFields();
    int len$ = fields.length;
    int i$;
    for (i$ = 0; i$ < len$; ++i$) {
        Field subClass = fields[i$];
        if (Modifier.isStatic(subClass.getModifiers())) {
            try {
                Object ignored = subClass.get(null);
                Class byClass = ignored.getClass();
                if (byClass.getName().endsWith("$ByClass")) {
                    this.setFieldValue(ignored, "myCallerClass", IconReplacer.class);
                    this.setFieldValue(ignored, "myWasComputed", Boolean.FALSE);
                    this.setFieldValue(ignored, "myIcon", null);
                } else if (byClass.getName().endsWith("$CachedImageIcon")) {
                    this.patchUrlIfNeeded(ignored, iconPath);
                }
            } catch (IllegalAccessException var9) {
                return;
            }
        }
    }
    Class[] var10 = iconsClass.getDeclaredClasses();
    len$ = var10.length;
    for (i$ = 0; i$ < len$; ++i$) {
        Class var11 = var10[i$];
        this.replaceIcons(var11, iconPath);
    }
}||||||||public static void replaceIcons(Class iconsClass, String iconsRootPath) {
    // Iterate all fields (which hold icon locations) and patch them if necessary
    for (Field field : iconsClass.getDeclaredFields()) {
        if (Modifier.isStatic(field.getModifiers())) {
            try {
                // Object should be some kind of javax.swing.Icon
                Object value = field.get(null);
                Class byClass = value.getClass();
                if (byClass.getName().endsWith("$ByClass")) {
                    setFieldValue(value, "myCallerClass", IconReplacer.class);
                    setFieldValue(value, "myWasComputed", Boolean.FALSE);
                    setFieldValue(value, "myIcon", null);
                } else if (byClass.getName().endsWith("$CachedImageIcon")) {
                    patchUrlIfNeeded(value, iconsRootPath);
                }
            } catch (IllegalAccessException e) {
            // Suppress
            }
        }
    }
    // Recurse into nested classes
    for (Class subClass : iconsClass.getDeclaredClasses()) {
        replaceIcons(subClass, iconsRootPath);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ReturnStmt
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NullLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													(ThisExpr
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ThisExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ThisExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												NullLiteralExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NullLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												StringLiteralExpr
												NullLiteralExpr
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

