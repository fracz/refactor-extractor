/**
 * Build and add the Drawer to your activity
 *
 * @return
 */
public Result build() {
    if (mUsed) {
        throw new RuntimeException("you must not reuse a Drawer builder");
    }
    if (mActivity == null) {
        throw new RuntimeException("please pass an activity");
    }
    // set that this builder was used. now you have to create a new one
    mUsed = true;
    // if the user has not set a drawerLayout use the default one :D
    if (mDrawerLayout == null) {
        withDrawerLayout(-1);
    }
    // check if the activity was initialized correctly
    if (mRootView == null || mRootView.getChildCount() == 0) {
        throw new RuntimeException("You have to set your layout for this activity with setContentView() first. Or you build the drawer on your own with .buildView()");
    }
    // get the content view
    View contentView = mRootView.getChildAt(0);
    boolean alreadyInflated = contentView instanceof DrawerLayout;
    // get the drawer root
    mDrawerContentRoot = (ScrimInsetsFrameLayout) mDrawerLayout.getChildAt(0);
    // do some magic specific to the statusBar
    if (!alreadyInflated && mTranslucentStatusBar) {
        if (Build.VERSION.SDK_INT >= 19 && Build.VERSION.SDK_INT < 21) {
            setTranslucentStatusFlag(true);
        }
        if (Build.VERSION.SDK_INT >= 19) {
            if (mTranslucentStatusBarProgrammatically) {
                mActivity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            }
        }
        if (Build.VERSION.SDK_INT >= 21) {
            setTranslucentStatusFlag(false);
            if (mTranslucentStatusBarProgrammatically) {
                mActivity.getWindow().setStatusBarColor(Color.TRANSPARENT);
            }
        }
        mDrawerContentRoot.setPadding(0, UIUtils.getStatusBarHeight(mActivity), 0, 0);
        // define the statusBarColor
        if (mStatusBarColor == 0 && mStatusBarColorRes != -1) {
            mStatusBarColor = mActivity.getResources().getColor(mStatusBarColorRes);
        } else if (mStatusBarColor == 0) {
            mStatusBarColor = UIUtils.getThemeColorFromAttrOrRes(mActivity, R.attr.colorPrimaryDark, R.color.material_drawer_primary_dark);
        }
        mDrawerContentRoot.setInsetForeground(mStatusBarColor);
    }
    // do some magic specific to the navigationBar
    if (!alreadyInflated && mTranslucentNavigationBar) {
        if (Build.VERSION.SDK_INT >= 19 && Build.VERSION.SDK_INT < 21) {
            setTranslucentNavigationFlag(true);
        }
        if (Build.VERSION.SDK_INT >= 19) {
            if (mTranslucentNavigationBarProgrammatically) {
                mActivity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
                setTranslucentNavigationFlag(true);
            }
        }
        if (Build.VERSION.SDK_INT >= 21) {
            if (mTranslucentNavigationBarProgrammatically) {
                mActivity.getWindow().setNavigationBarColor(Color.TRANSPARENT);
            }
        }
    }
    // if we are fullscreen disable the ScrimInsetsLayout
    if (mFullscreen && Build.VERSION.SDK_INT >= 19) {
        mDrawerContentRoot.setEnabled(false);
    }
    // only add the new layout if it wasn't done before
    if (!alreadyInflated) {
        // remove the contentView
        mRootView.removeView(contentView);
    } else {
        // if it was already inflated we have to clean up again
        mRootView.removeAllViews();
    }
    // create the layoutParams to use for the contentView
    FrameLayout.LayoutParams layoutParamsContentView = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
    // if we have a translucent navigation bar set the bottom margin
    if (mTranslucentNavigationBar && Build.VERSION.SDK_INT >= 19) {
        layoutParamsContentView.bottomMargin = UIUtils.getNavigationBarHeight(mActivity);
    }
    // add the contentView to the drawer content frameLayout
    mDrawerContentRoot.addView(contentView, layoutParamsContentView);
    // add the drawerLayout to the root
    mRootView.addView(mDrawerLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
    // set the navigationOnClickListener
    View.OnClickListener toolbarNavigationListener = new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            boolean handled = false;
            if (mOnDrawerNavigationListener != null && (mActionBarDrawerToggle != null && !mActionBarDrawerToggle.isDrawerIndicatorEnabled())) {
                handled = mOnDrawerNavigationListener.onNavigationClickListener(v);
            }
            if (!handled) {
                if (mDrawerLayout.isDrawerOpen(mSliderLayout)) {
                    mDrawerLayout.closeDrawer(mSliderLayout);
                } else {
                    mDrawerLayout.openDrawer(mSliderLayout);
                }
            }
        }
    };
    // if we got a toolbar set a toolbarNavigationListener
    if (mToolbar != null) {
        this.mToolbar.setNavigationOnClickListener(toolbarNavigationListener);
    }
    // create the ActionBarDrawerToggle if not set and enabled and if we have a toolbar
    if (mActionBarDrawerToggleEnabled && mActionBarDrawerToggle == null && mToolbar != null) {
        this.mActionBarDrawerToggle = new ActionBarDrawerToggle(mActivity, mDrawerLayout, mToolbar, R.string.drawer_open, R.string.drawer_close) {

            @Override
            public void onDrawerOpened(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerOpened(drawerView);
                }
                super.onDrawerOpened(drawerView);
            }

            @Override
            public void onDrawerClosed(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerClosed(drawerView);
                }
                super.onDrawerClosed(drawerView);
            }

            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerSlide(drawerView, slideOffset);
                }
                if (!mAnimateActionBarDrawerToggle) {
                    super.onDrawerSlide(drawerView, 0);
                } else {
                    super.onDrawerSlide(drawerView, slideOffset);
                }
            }
        };
        this.mActionBarDrawerToggle.syncState();
    }
    // handle the ActionBarDrawerToggle
    if (mActionBarDrawerToggle != null) {
        mActionBarDrawerToggle.setToolbarNavigationClickListener(toolbarNavigationListener);
        mDrawerLayout.setDrawerListener(mActionBarDrawerToggle);
    } else {
        mDrawerLayout.setDrawerListener(new DrawerLayout.DrawerListener() {

            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
            }

            @Override
            public void onDrawerOpened(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerOpened(drawerView);
                }
            }

            @Override
            public void onDrawerClosed(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerClosed(drawerView);
                }
            }

            @Override
            public void onDrawerStateChanged(int newState) {
            }
        });
    }
    // build the view which will be set to the drawer
    Result result = buildView();
    // add the slider to the drawer
    mDrawerLayout.addView(mSliderLayout, 1);
    return result;
}||||||||/**
 * Build and add the Drawer to your activity
 *
 * @return
 */
public Result build() {
    if (mUsed) {
        throw new RuntimeException("you must not reuse a Drawer builder");
    }
    if (mActivity == null) {
        throw new RuntimeException("please pass an activity");
    }
    // set that this builder was used. now you have to create a new one
    mUsed = true;
    // if the user has not set a drawerLayout use the default one :D
    if (mDrawerLayout == null) {
        withDrawerLayout(-1);
    }
    // check if the activity was initialized correctly
    if (mRootView == null || mRootView.getChildCount() == 0) {
        throw new RuntimeException("You have to set your layout for this activity with setContentView() first. Or you build the drawer on your own with .buildView()");
    }
    // get the content view
    View contentView = mRootView.getChildAt(0);
    boolean alreadyInflated = contentView instanceof DrawerLayout;
    // get the drawer root
    mDrawerContentRoot = (ScrimInsetsFrameLayout) mDrawerLayout.getChildAt(0);
    // do some magic specific to the statusBar
    if (!alreadyInflated && mTranslucentStatusBar) {
        if (Build.VERSION.SDK_INT >= 19 && Build.VERSION.SDK_INT < 21) {
            setTranslucentStatusFlag(true);
        }
        if (Build.VERSION.SDK_INT >= 19) {
            if (mTranslucentStatusBarProgrammatically) {
                mActivity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            }
        }
        if (Build.VERSION.SDK_INT >= 21) {
            setTranslucentStatusFlag(false);
            if (mTranslucentStatusBarProgrammatically) {
                mActivity.getWindow().setStatusBarColor(Color.TRANSPARENT);
            }
        }
        mDrawerContentRoot.setPadding(0, UIUtils.getStatusBarHeight(mActivity), 0, 0);
        // define the statusBarColor
        if (mStatusBarColor == 0 && mStatusBarColorRes != -1) {
            mStatusBarColor = mActivity.getResources().getColor(mStatusBarColorRes);
        } else if (mStatusBarColor == 0) {
            mStatusBarColor = UIUtils.getThemeColorFromAttrOrRes(mActivity, R.attr.colorPrimaryDark, R.color.material_drawer_primary_dark);
        }
        mDrawerContentRoot.setInsetForeground(mStatusBarColor);
    }
    // do some magic specific to the navigationBar
    if (!alreadyInflated && mTranslucentNavigationBar) {
        if (Build.VERSION.SDK_INT >= 19 && Build.VERSION.SDK_INT < 21) {
            setTranslucentNavigationFlag(true);
        }
        if (Build.VERSION.SDK_INT >= 19) {
            if (mTranslucentNavigationBarProgrammatically) {
                mActivity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
                setTranslucentNavigationFlag(true);
            }
        }
        if (Build.VERSION.SDK_INT >= 21) {
            if (mTranslucentNavigationBarProgrammatically) {
                mActivity.getWindow().setNavigationBarColor(Color.TRANSPARENT);
            }
        }
    }
    // if we are fullscreen disable the ScrimInsetsLayout
    if (mFullscreen && Build.VERSION.SDK_INT >= 19) {
        mDrawerContentRoot.setEnabled(false);
    }
    // only add the new layout if it wasn't done before
    if (!alreadyInflated) {
        // remove the contentView
        mRootView.removeView(contentView);
    } else {
        // if it was already inflated we have to clean up again
        mRootView.removeAllViews();
    }
    // create the layoutParams to use for the contentView
    FrameLayout.LayoutParams layoutParamsContentView = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
    // if we have a translucent navigation bar set the bottom margin
    if (mTranslucentNavigationBar && Build.VERSION.SDK_INT >= 19) {
        layoutParamsContentView.bottomMargin = UIUtils.getNavigationBarHeight(mActivity);
    }
    // add the contentView to the drawer content frameLayout
    mDrawerContentRoot.addView(contentView, layoutParamsContentView);
    // add the drawerLayout to the root
    mRootView.addView(mDrawerLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
    // set the navigationOnClickListener
    View.OnClickListener toolbarNavigationListener = new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            boolean handled = false;
            if (mOnDrawerNavigationListener != null && (mActionBarDrawerToggle != null && !mActionBarDrawerToggle.isDrawerIndicatorEnabled())) {
                handled = mOnDrawerNavigationListener.onNavigationClickListener(v);
            }
            if (!handled) {
                if (mDrawerLayout.isDrawerOpen(mSliderLayout)) {
                    mDrawerLayout.closeDrawer(mSliderLayout);
                } else {
                    if (mDrawerGravity != null) {
                        mDrawerLayout.openDrawer(mDrawerGravity);
                    } else {
                        mDrawerLayout.openDrawer(mSliderLayout);
                    }
                }
            }
        }
    };
    // if we got a toolbar set a toolbarNavigationListener
    if (mToolbar != null) {
        this.mToolbar.setNavigationOnClickListener(toolbarNavigationListener);
    }
    // create the ActionBarDrawerToggle if not set and enabled and if we have a toolbar
    if (mActionBarDrawerToggleEnabled && mActionBarDrawerToggle == null && mToolbar != null) {
        this.mActionBarDrawerToggle = new ActionBarDrawerToggle(mActivity, mDrawerLayout, mToolbar, R.string.drawer_open, R.string.drawer_close) {

            @Override
            public void onDrawerOpened(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerOpened(drawerView);
                }
                super.onDrawerOpened(drawerView);
            }

            @Override
            public void onDrawerClosed(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerClosed(drawerView);
                }
                super.onDrawerClosed(drawerView);
            }

            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerSlide(drawerView, slideOffset);
                }
                if (!mAnimateActionBarDrawerToggle) {
                    super.onDrawerSlide(drawerView, 0);
                } else {
                    super.onDrawerSlide(drawerView, slideOffset);
                }
            }
        };
        this.mActionBarDrawerToggle.syncState();
    }
    // handle the ActionBarDrawerToggle
    if (mActionBarDrawerToggle != null) {
        mActionBarDrawerToggle.setToolbarNavigationClickListener(toolbarNavigationListener);
        mDrawerLayout.setDrawerListener(mActionBarDrawerToggle);
    } else {
        mDrawerLayout.setDrawerListener(new DrawerLayout.DrawerListener() {

            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
            }

            @Override
            public void onDrawerOpened(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerOpened(drawerView);
                }
            }

            @Override
            public void onDrawerClosed(View drawerView) {
                if (mOnDrawerListener != null) {
                    mOnDrawerListener.onDrawerClosed(drawerView);
                }
            }

            @Override
            public void onDrawerStateChanged(int newState) {
            }
        });
    }
    // build the view which will be set to the drawer
    Result result = buildView();
    // add the slider to the drawer
    mDrawerLayout.addView(mSliderLayout, 1);
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(UnaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													(SuperExpr
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													SimpleName
													(SuperExpr
													)
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(UnaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													(SuperExpr
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
													SimpleName
													(SuperExpr
													)
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(PrimitiveType
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

