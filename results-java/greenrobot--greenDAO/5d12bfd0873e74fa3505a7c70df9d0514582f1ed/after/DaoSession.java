package de.greenrobot.daotest;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import de.greenrobot.daotest.SimpleEntity;
import de.greenrobot.daotest.SimpleEntityNotNull;
import de.greenrobot.daotest.TestEntity;
import de.greenrobot.daotest.RelationEntity;
import de.greenrobot.daotest.DateEntity;
import de.greenrobot.daotest.SpecialNamesEntity;
import de.greenrobot.daotest.AbcdefEntity;

import de.greenrobot.daotest.SimpleEntityDao;
import de.greenrobot.daotest.SimpleEntityNotNullDao;
import de.greenrobot.daotest.TestEntityDao;
import de.greenrobot.daotest.RelationEntityDao;
import de.greenrobot.daotest.DateEntityDao;
import de.greenrobot.daotest.SpecialNamesEntityDao;
import de.greenrobot.daotest.AbcdefEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig simpleEntityDaoConfig;
    private final DaoConfig simpleEntityNotNullDaoConfig;
    private final DaoConfig testEntityDaoConfig;
    private final DaoConfig relationEntityDaoConfig;
    private final DaoConfig dateEntityDaoConfig;
    private final DaoConfig specialNamesEntityDaoConfig;
    private final DaoConfig abcdefEntityDaoConfig;

    private final SimpleEntityDao simpleEntityDao;
    private final SimpleEntityNotNullDao simpleEntityNotNullDao;
    private final TestEntityDao testEntityDao;
    private final RelationEntityDao relationEntityDao;
    private final DateEntityDao dateEntityDao;
    private final SpecialNamesEntityDao specialNamesEntityDao;
    private final AbcdefEntityDao abcdefEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        simpleEntityDaoConfig = daoConfigMap.get(SimpleEntityDao.class).clone();
        simpleEntityDaoConfig.initIdentityScope(type);
        simpleEntityNotNullDaoConfig = daoConfigMap.get(SimpleEntityNotNullDao.class).clone();
        simpleEntityNotNullDaoConfig.initIdentityScope(type);
        testEntityDaoConfig = daoConfigMap.get(TestEntityDao.class).clone();
        testEntityDaoConfig.initIdentityScope(type);
        relationEntityDaoConfig = daoConfigMap.get(RelationEntityDao.class).clone();
        relationEntityDaoConfig.initIdentityScope(type);
        dateEntityDaoConfig = daoConfigMap.get(DateEntityDao.class).clone();
        dateEntityDaoConfig.initIdentityScope(type);
        specialNamesEntityDaoConfig = daoConfigMap.get(SpecialNamesEntityDao.class).clone();
        specialNamesEntityDaoConfig.initIdentityScope(type);
        abcdefEntityDaoConfig = daoConfigMap.get(AbcdefEntityDao.class).clone();
        abcdefEntityDaoConfig.initIdentityScope(type);

        simpleEntityDao = new SimpleEntityDao(simpleEntityDaoConfig, this);
        simpleEntityNotNullDao = new SimpleEntityNotNullDao(simpleEntityNotNullDaoConfig, this);
        testEntityDao = new TestEntityDao(testEntityDaoConfig, this);
        relationEntityDao = new RelationEntityDao(relationEntityDaoConfig, this);
        dateEntityDao = new DateEntityDao(dateEntityDaoConfig, this);
        specialNamesEntityDao = new SpecialNamesEntityDao(specialNamesEntityDaoConfig, this);
        abcdefEntityDao = new AbcdefEntityDao(abcdefEntityDaoConfig, this);

        registerDao(SimpleEntity.class, simpleEntityDao);
        registerDao(SimpleEntityNotNull.class, simpleEntityNotNullDao);
        registerDao(TestEntity.class, testEntityDao);
        registerDao(RelationEntity.class, relationEntityDao);
        registerDao(DateEntity.class, dateEntityDao);
        registerDao(SpecialNamesEntity.class, specialNamesEntityDao);
        registerDao(AbcdefEntity.class, abcdefEntityDao);
    }

    public void clear() {
        simpleEntityDaoConfig.getIdentityScope().clear();
        simpleEntityNotNullDaoConfig.getIdentityScope().clear();
        testEntityDaoConfig.getIdentityScope().clear();
        relationEntityDaoConfig.getIdentityScope().clear();
        dateEntityDaoConfig.getIdentityScope().clear();
        specialNamesEntityDaoConfig.getIdentityScope().clear();
        abcdefEntityDaoConfig.getIdentityScope().clear();
    }

    public SimpleEntityDao getSimpleEntityDao() {
        return simpleEntityDao;
    }

    public SimpleEntityNotNullDao getSimpleEntityNotNullDao() {
        return simpleEntityNotNullDao;
    }

    public TestEntityDao getTestEntityDao() {
        return testEntityDao;
    }

    public RelationEntityDao getRelationEntityDao() {
        return relationEntityDao;
    }

    public DateEntityDao getDateEntityDao() {
        return dateEntityDao;
    }

    public SpecialNamesEntityDao getSpecialNamesEntityDao() {
        return specialNamesEntityDao;
    }

    public AbcdefEntityDao getAbcdefEntityDao() {
        return abcdefEntityDao;
    }

}