@Test
public void shouldNotDieWhenInvocationOfLauncherRaisesException_butCreationOfLauncherWentThrough() throws InterruptedException {
    final Semaphore waitForLauncherInvocation = new Semaphore(1);
    waitForLauncherInvocation.acquire();
    final AgentBootstrapper bootstrapper = new AgentBootstrapper() {

        @Override
        AgentLauncherCreator getLauncherCreator() {
            return new AgentLauncherCreator() {

                public AgentLauncher createLauncher() {
                    return new AgentLauncher() {

                        public int launch(AgentLaunchDescriptor descriptor) {
                            try {
                                throw new RuntimeException("fail!!! i say.");
                            } finally {
                                if (waitForLauncherInvocation.availablePermits() == 0) {
                                    waitForLauncherInvocation.release();
                                }
                            }
                        }
                    };
                }

                @Override
                public void destroy() {
                }
            };
        }
    };
    final AgentBootstrapper spyBootstrapper = stubJVMExit(bootstrapper);
    Thread stopLoopThd = new Thread(new Runnable() {

        public void run() {
            try {
                waitForLauncherInvocation.acquire();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
            ReflectionUtil.setField(spyBootstrapper, "loop", false);
        }
    });
    stopLoopThd.start();
    try {
        spyBootstrapper.go(true, "ghost-name", 3518);
        stopLoopThd.join();
    } catch (Exception e) {
        fail("should not have propagated exception thrown while invoking the launcher");
    }
}||||||||@Test
public void shouldNotDieWhenInvocationOfLauncherRaisesException_butCreationOfLauncherWentThrough() throws InterruptedException {
    final Semaphore waitForLauncherInvocation = new Semaphore(1);
    waitForLauncherInvocation.acquire();
    final AgentBootstrapper bootstrapper = new AgentBootstrapper() {

        @Override
        AgentLauncherCreator getLauncherCreator() {
            return new AgentLauncherCreator() {

                public AgentLauncher createLauncher() {
                    return new AgentLauncher() {

                        public int launch(AgentLaunchDescriptor descriptor) {
                            try {
                                throw new RuntimeException("fail!!! i say.");
                            } finally {
                                if (waitForLauncherInvocation.availablePermits() == 0) {
                                    waitForLauncherInvocation.release();
                                }
                            }
                        }
                    };
                }

                @Override
                public void destroy() {
                }
            };
        }
    };
    final AgentBootstrapper spyBootstrapper = stubJVMExit(bootstrapper);
    Thread stopLoopThd = new Thread(new Runnable() {

        public void run() {
            try {
                waitForLauncherInvocation.acquire();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
            ReflectionUtil.setField(spyBootstrapper, "loop", false);
        }
    });
    stopLoopThd.start();
    try {
        spyBootstrapper.go(true, new AgentBootstrapperArgs(new URL("http://" + "ghost-name" + ":" + 3518 + "/go"), null, AgentBootstrapperArgs.SslMode.NONE));
        stopLoopThd.join();
    } catch (Exception e) {
        fail("should not have propagated exception thrown while invoking the launcher");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(ObjectCreationExpr
														(MethodDeclaration
															(BlockStmt
																(TryStmt
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(ThrowStmt
																			(ObjectCreationExpr
																				StringLiteralExpr
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																)
															)
															(PrimitiveType
															)
															SimpleName
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
										)
										(MethodDeclaration
											(BlockStmt
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						StringLiteralExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(ObjectCreationExpr
														(MethodDeclaration
															(BlockStmt
																(TryStmt
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(IntegerLiteralExpr
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(ThrowStmt
																			(ObjectCreationExpr
																				StringLiteralExpr
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																)
															)
															(PrimitiveType
															)
															SimpleName
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
										)
										(MethodDeclaration
											(BlockStmt
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(ObjectCreationExpr
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										(IntegerLiteralExpr
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							NullLiteralExpr
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

