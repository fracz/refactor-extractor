@Override
protected void sendFrame(ByteBuffer frame, boolean endOfStream) {
    if (state() == StreamState.CLOSED) {
        // Ignore outbound frames after the stream has closed.
        return;
    }
    try {
        // Synchronizing here to protect against cancellation due to the transport shutting down.
        synchronized (connection) {
            // Write the data to the connection output stream.
            outputStream.write(frame.array(), frame.arrayOffset(), frame.remaining());
            if (endOfStream) {
                // Close the output stream on this connection.
                connection.getOutputStream().close();
                // The request has completed so now process the response. This results in the listener's
                // closed() callback being invoked since we're indicating that this is the end of the
                // response stream.
                // 
                // NOTE: Must read the response in the sending thread, since URLConnection has threading
                // issues.
                new InputStreamDeframer(inboundMessageHandler()).deliverFrame(connection.getInputStream(), true);
                // Close the input stream and disconnect.
                connection.getInputStream().close();
                disconnect();
            }
        }
    } catch (IOException ioe) {
        setStatus(new Status(Transport.Code.INTERNAL, ioe), new Metadata.Trailers());
    }
}||||||||@Override
protected void sendFrame(ByteBuffer frame, boolean endOfStream) {
    if (state() == StreamState.CLOSED) {
        // Ignore outbound frames after the stream has closed.
        return;
    }
    try {
        // Synchronizing here to protect against cancellation due to the transport shutting down.
        synchronized (connection) {
            // Write the data to the connection output stream.
            outputStream.write(frame.array(), frame.arrayOffset(), frame.remaining());
            if (endOfStream) {
                // Close the output stream on this connection.
                connection.getOutputStream().close();
                // The request has completed so now process the response. This results in the listener's
                // closed() callback being invoked since we're indicating that this is the end of the
                // response stream.
                // 
                // NOTE: Must read the response in the sending thread, since URLConnection has threading
                // issues.
                new InputStreamDeframer(inboundMessageHandler()).deliverFrame(connection.getInputStream(), true);
                // Close the input stream and disconnect.
                connection.getInputStream().close();
                disconnect();
            }
        }
    } catch (IOException ioe) {
        setStatus(Status.INTERNAL.withCause(ioe), new Metadata.Trailers());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(ObjectCreationExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										SimpleName
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BooleanLiteralExpr
										)
										SimpleName
										(ObjectCreationExpr
											(MethodCallExpr
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

