/**
 * Called in the channel thread to process the content of an inbound DATA frame.
 *
 * @param frame the inbound HTTP/2 DATA frame. If this buffer is not used immediately, it must be
 * retained.
 */
@Override
public void inboundDataReceived(ByteBuf frame, boolean endOfStream) {
    Preconditions.checkNotNull(frame, "frame");
    if (state() == CLOSED) {
        return;
    }
    if (isGrpcResponse) {
        // Retain the ByteBuf until it is released by the deframer.
        if (!GRPC_V2_PROTOCOL) {
            deframer.deframe(new NettyBuffer(frame.retain()), endOfStream);
        } else {
            deframer2.deframe(new NettyBuffer(frame.retain()), endOfStream);
        }
    } else {
        // It's not a GRPC response, assume that the frame contains a text-based error message.
        // TODO(user): Should we send RST_STREAM as well?
        // TODO(user): is there a better way to handle large non-GRPC error messages?
        nonGrpcErrorMessage.append(frame.toString(UTF_8));
        if (endOfStream) {
            String msg = nonGrpcErrorMessage.toString();
            setStatus(new Status(responseCode, msg), new Metadata.Trailers());
        }
    }
}||||||||/**
 * Called in the channel thread to process the content of an inbound DATA frame.
 *
 * @param frame the inbound HTTP/2 DATA frame. If this buffer is not used immediately, it must be
 * retained.
 */
@Override
public void inboundDataReceived(ByteBuf frame, boolean endOfStream) {
    Preconditions.checkNotNull(frame, "frame");
    if (state() == CLOSED) {
        return;
    }
    if (isGrpcResponse) {
        // Retain the ByteBuf until it is released by the deframer.
        if (!GRPC_V2_PROTOCOL) {
            deframer.deframe(new NettyBuffer(frame.retain()), endOfStream);
        } else {
            deframer2.deframe(new NettyBuffer(frame.retain()), endOfStream);
        }
    } else {
        // It's not a GRPC response, assume that the frame contains a text-based error message.
        // TODO(user): Should we send RST_STREAM as well?
        // TODO(user): is there a better way to handle large non-GRPC error messages?
        nonGrpcErrorMessage.append(frame.toString(UTF_8));
        if (endOfStream) {
            String msg = nonGrpcErrorMessage.toString();
            setStatus(responseStatus.withDescription(msg), new Metadata.Trailers());
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

