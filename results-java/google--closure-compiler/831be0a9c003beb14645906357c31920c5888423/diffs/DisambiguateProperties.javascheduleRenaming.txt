/**
 * Schedule the node to potentially be renamed.
 * @param node the node to rename
 * @param type the highest type in the prototype chain for which the
 * property is defined
 * @return True if type was accepted without invalidation or if the property
 * was already invalidated.  False if this property was invalidated this
 * time.
 */
boolean scheduleRenaming(Node node, JSType type) {
    if (!skipRenaming) {
        if (typeSystem.isInvalidatingType(type)) {
            invalidate();
            return false;
        }
        renameNodes.add(node);
        rootTypes.put(node, type);
    }
    return true;
}||||||||/**
 * Schedule the node to potentially be renamed.
 * @param node the node to rename
 * @param type the highest type in the prototype chain for which the
 * property is defined
 * @return True if type was accepted without invalidation or if the property
 * was already invalidated.  False if this property was invalidated this
 * time.
 */
boolean scheduleRenaming(Node node, JSType type) {
    if (!skipRenaming) {
        if (isInvalidatingType(type)) {
            invalidate();
            return false;
        }
        renameNodes.add(node);
        rootTypes.put(node, type);
    }
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

