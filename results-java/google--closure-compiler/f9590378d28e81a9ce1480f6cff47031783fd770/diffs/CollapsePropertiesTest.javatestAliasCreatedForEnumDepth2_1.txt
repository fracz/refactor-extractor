public void testAliasCreatedForEnumDepth2_1() {
    test("var a = {}; /** @enum */ a.b = {c: 0};" + "var d = a.b; d.c = 1; a.b.c != d.c;", "var a$b$c = 0; var a$b = {c: a$b$c};" + "var d = a$b; d.c = 1; a$b$c != d.c;");
    testSame("var a = {}; /** @nocollapse @enum */ a.b = {c: 0};" + "var d = a.b; d.c = 1; a.b.c == d.c;");
    test("var a = {}; /** @enum */ a.b = {/** @nocollapse */ c: 0};" + "var d = a.b; d.c = 1; a.b.c == d.c;", "var a$b = {c: 0};" + "var d = a$b; d.c = 1; a$b.c == d.c;");
}||||||||public void testAliasCreatedForEnumDepth2_1() {
    test("var a = {}; /** @enum */ a.b = {c: 0};" + "var d = 1; d = a.b; d.c = 1; a.b.c != d.c;", "var a$b$c = 0; var a$b = {c: a$b$c};" + "var d = 1; d = a$b; d.c = 1; a$b$c != d.c;");
    testSame("var a = {}; /** @nocollapse @enum */ a.b = {c: 0};" + "var d = 1; d = a.b; d.c = 1; a.b.c == d.c;");
    test("var a = {}; /** @enum */ a.b = {/** @nocollapse */ c: 0};" + "var d = 1; d = a.b; d.c = 1; a.b.c == d.c;", "var a$b = {c: 0}; var d = 1; d = a$b; d.c = 1; a$b.c == d.c;");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

