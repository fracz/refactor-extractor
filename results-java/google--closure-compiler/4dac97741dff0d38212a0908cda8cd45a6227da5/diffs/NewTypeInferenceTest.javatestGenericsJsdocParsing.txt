public void testGenericsJsdocParsing() {
    checkNoWarnings("/** @template T\n@param {T} x */ function f(x) {}");
    checkNoWarnings("/** @template T\n @param {T} x\n @return {T} */\n" + "function f(x) { return x; };");
    typeCheck("/**\n" + " * @template T\n" + " * @constructor\n" + " * @param {T} x\n" + " * @extends {Bar<T>} // error, Bar is not templatized \n" + " */\n" + "function Foo(x) {}\n" + "/** @constructor */\n" + "function Bar() {}", JSTypeCreatorFromJSDoc.INVALID_GENERICS_INSTANTIATION);
    typeCheck("/**\n" + " * @template T\n" + " * @constructor\n" + " * @param {T} x\n" + " */\n" + "function Foo(x) {}\n" + "/** @param {Foo<number, string>} x */\n" + "function f(x) {}", JSTypeCreatorFromJSDoc.INVALID_GENERICS_INSTANTIATION);
    checkNoWarnings("/** @type {Array<number>} */ var x;");
    checkNoWarnings("/** @type {Object<number>} */ var x;");
}||||||||public void testGenericsJsdocParsing() {
    checkNoWarnings("/** @template T\n@param {T} x */ function f(x) {}");
    checkNoWarnings("/** @template T\n @param {T} x\n @return {T} */\n" + "function f(x) { return x; };");
    typeCheck("/**\n" + " * @template T\n" + " * @constructor\n" + " * @param {T} x\n" + " * @extends {Bar<T>} // error, Bar is not templatized \n" + " */\n" + "function Foo(x) {}\n" + "/** @constructor */\n" + "function Bar() {}", JSTypeCreatorFromJSDoc.INVALID_GENERICS_INSTANTIATION);
    typeCheck("/**\n" + " * @template T\n" + " * @constructor\n" + " * @param {T} x\n" + " */\n" + "function Foo(x) {}\n" + "/** @param {Foo<number, string>} x */\n" + "function f(x) {}", JSTypeCreatorFromJSDoc.INVALID_GENERICS_INSTANTIATION);
    checkNoWarnings("/** @type {Array<number>} */ var x;");
    checkNoWarnings("/** @type {Object<number>} */ var x;");
    typeCheck("/** @template T\n@param {!T} x */ function f(x) {}", JSTypeCreatorFromJSDoc.BAD_JSDOC_ANNOTATION);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

