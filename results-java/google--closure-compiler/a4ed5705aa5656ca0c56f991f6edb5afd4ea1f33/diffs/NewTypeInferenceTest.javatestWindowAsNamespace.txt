public void testWindowAsNamespace() {
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {string} */", "window.prop;"), "123 - window.prop;", NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "var window;", "/** @type {string} */", "window.prop;"), "123 - window.prop;", NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheck(LINE_JOINER.join("function f() {", "  /** @type {string} */", "  window.prop = 'asdf';", "}", "function g() {", "  window.prop - 123;", "}"), NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @constructor */", "window.Foo = function() {};", "/** @constructor */", "window.Bar = function() {};"), LINE_JOINER.join("/** @type {window.Foo} */", "var x = new window.Bar;"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheck(LINE_JOINER.join("/** @type {string} */", "var x = window.closed;"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.n;"), LINE_JOINER.join("/** @type {string} */", "var x;", "x = window.n;", "x = window.closed;"), NewTypeInference.MISTYPED_ASSIGN_RHS, NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.mynum;"), LINE_JOINER.join("function f(/** !Window */ w) {", "  var /** string */ s = w.mynum;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "var mynum;"), LINE_JOINER.join("function f(/** !Window */ w) {", "  var /** string */ s = w.mynum;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    // When Window is shadowed, don't copy properties to the wrong class
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.mynum;"), LINE_JOINER.join("function f() {", "  /** @constructor */", "  function Window() {}", "  var x = (new Window).mynum;", "}"), NewTypeInference.INEXISTENT_PROPERTY);
    // When the externs add properties to window before defining "var window;",
    // we still infer that window has nominal type Window, not Object.
    typeCheckCustomExterns(LINE_JOINER.join("/** @const */ var ns = {};", "window.ns = ns;", DEFAULT_EXTERNS), LINE_JOINER.join("var /** !Window */ n = window;", // ns is present on window
    "var x = window.ns;"));
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @constructor */", "function Foo() {}", "/** @type {number} */", "Foo.prototype.prop;"), LINE_JOINER.join("function f(/** !window.Foo */ x) {", "  var /** string */ s = x.prop;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
}||||||||public void testWindowAsNamespace() {
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {string} */", "window.prop;"), "123 - window.prop;", NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "var window;", "/** @type {string} */", "window.prop;"), "123 - window.prop;", NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheck(LINE_JOINER.join("function f() {", "  /** @type {string} */", "  window.prop = 'asdf';", "}", "function g() {", "  window.prop - 123;", "}"), NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @constructor */", "window.Foo = function() {};", "/** @constructor */", "window.Bar = function() {};"), LINE_JOINER.join("/** @type {window.Foo} */", "var x = new window.Bar;"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheck(LINE_JOINER.join("/** @type {string} */", "var x = window.closed;"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.n;"), LINE_JOINER.join("/** @type {string} */", "var x;", "x = window.n;", "x = window.closed;"), NewTypeInference.MISTYPED_ASSIGN_RHS, NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.mynum;"), LINE_JOINER.join("function f(/** !Window */ w) {", "  var /** string */ s = w.mynum;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "var mynum;"), LINE_JOINER.join("function f(/** !Window */ w) {", "  var /** string */ s = w.mynum;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    // When Window is shadowed, don't copy properties to the wrong class
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @type {number} */", "window.mynum;"), LINE_JOINER.join("function f() {", "  /** @constructor */", "  function Window() {}", "  var x = (new Window).mynum;", "}"), NewTypeInference.INEXISTENT_PROPERTY);
    // When the externs add properties to window before defining "var window;",
    // we still infer that window has nominal type Window, not Object.
    typeCheckCustomExterns(LINE_JOINER.join("/** @const */ var ns = {};", "window.ns = ns;", DEFAULT_EXTERNS), LINE_JOINER.join("var /** !Window */ n = window;", // ns is present on window
    "var x = window.ns;"));
    typeCheckCustomExterns(LINE_JOINER.join(DEFAULT_EXTERNS, "/** @constructor */", "function Foo() {}", "/** @type {number} */", "Foo.prototype.prop;"), LINE_JOINER.join("function f(/** !window.Foo */ x) {", "  var /** string */ s = x.prop;", "}"), NewTypeInference.MISTYPED_ASSIGN_RHS);
    typeCheck(LINE_JOINER.join("function f(/** !Window */ w) {", "  /** @type {number} */", "  w.myprop = 123;", "}", "var /** string */ s = window.myprop;"), NewTypeInference.MISTYPED_ASSIGN_RHS);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
						LineComment
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
						LineComment
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

