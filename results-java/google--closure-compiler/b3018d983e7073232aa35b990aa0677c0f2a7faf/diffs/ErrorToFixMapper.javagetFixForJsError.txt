/**
 * Creates a SuggestedFix for the given error. Note that some errors have multiple fixes
 * so getFixesForJsError should often be used instead of this.
 */
public static SuggestedFix getFixForJsError(JSError error, AbstractCompiler compiler) {
    switch(error.getType().key) {
        case "JSC_MISSING_SEMICOLON":
            return getFixForMissingSemicolon(error);
        case "JSC_REQUIRES_NOT_SORTED":
            return getFixForUnsortedRequiresOrProvides("goog.require", error, compiler);
        case "JSC_PROVIDES_NOT_SORTED":
            return getFixForUnsortedRequiresOrProvides("goog.provide", error, compiler);
        case "JSC_DEBUGGER_STATEMENT_PRESENT":
        case "JSC_USELESS_EMPTY_STATEMENT":
            return removeNode(error);
        case "JSC_INEXISTENT_PROPERTY":
            return getFixForInexistentProperty(error);
        case "JSC_MISSING_CALL_TO_SUPER":
            return getFixForMissingSuper(error);
        case "JSC_INVALID_SUPER_CALL_WITH_SUGGESTION":
            return getFixForInvalidSuper(error, compiler);
        case "JSC_MISSING_REQUIRE_WARNING":
        case "JSC_MISSING_REQUIRE_CALL_WARNING":
            return getFixForMissingRequire(error, compiler);
        case "JSC_DUPLICATE_REQUIRE_WARNING":
            return getFixForExtraRequire(error, compiler, DUPLICATE_REQUIRE);
        case "JSC_EXTRA_REQUIRE_WARNING":
            return getFixForExtraRequire(error, compiler, EXTRA_REQUIRE);
        default:
            return null;
    }
}||||||||/**
 * Creates a SuggestedFix for the given error. Note that some errors have multiple fixes
 * so getFixesForJsError should often be used instead of this.
 */
public static SuggestedFix getFixForJsError(JSError error, AbstractCompiler compiler) {
    switch(error.getType().key) {
        case "JSC_MISSING_SEMICOLON":
            return getFixForMissingSemicolon(error, compiler);
        case "JSC_REQUIRES_NOT_SORTED":
            return getFixForUnsortedRequiresOrProvides("goog.require", error, compiler);
        case "JSC_PROVIDES_NOT_SORTED":
            return getFixForUnsortedRequiresOrProvides("goog.provide", error, compiler);
        case "JSC_DEBUGGER_STATEMENT_PRESENT":
        case "JSC_USELESS_EMPTY_STATEMENT":
            return removeNode(error, compiler);
        case "JSC_INEXISTENT_PROPERTY":
            return getFixForInexistentProperty(error, compiler);
        case "JSC_MISSING_CALL_TO_SUPER":
            return getFixForMissingSuper(error, compiler);
        case "JSC_INVALID_SUPER_CALL_WITH_SUGGESTION":
            return getFixForInvalidSuper(error, compiler);
        case "JSC_MISSING_REQUIRE_WARNING":
        case "JSC_MISSING_REQUIRE_CALL_WARNING":
            return getFixForMissingRequire(error, compiler);
        case "JSC_DUPLICATE_REQUIRE_WARNING":
            return getFixForExtraRequire(error, compiler, DUPLICATE_REQUIRE);
        case "JSC_EXTRA_REQUIRE_WARNING":
            return getFixForExtraRequire(error, compiler, EXTRA_REQUIRE);
        default:
            return null;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
			(FieldAccessExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
			(FieldAccessExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

