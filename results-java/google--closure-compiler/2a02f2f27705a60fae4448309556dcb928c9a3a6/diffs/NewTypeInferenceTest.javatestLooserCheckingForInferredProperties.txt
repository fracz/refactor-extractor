public void testLooserCheckingForInferredProperties() {
    typeCheck("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  obj.prop = true ? 1 : 'asdf';\n" + "  obj.prop - 5;\n" + "}", NewTypeInference.INVALID_OPERAND_TYPE);
    checkNoWarnings("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  if (!(typeof obj.prop == 'number')) {\n" + "    obj.prop < 'asdf';\n" + "  }\n" + "}");
    typeCheck("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  obj.prop = true ? 1 : 'asdf';\n" + "  obj.prop - 5;\n" + "  obj.prop < 'asdf';\n" + "}", ImmutableList.of(NewTypeInference.INVALID_OPERAND_TYPE, NewTypeInference.INVALID_OPERAND_TYPE));
    typeCheck("function /** string */ f(/** ?number */ x) {\n" + "  var o = { prop: 'str' };\n" + "  if (x) {\n" + "    o.prop = x;\n" + "  }\n" + "  return o.prop;\n" + "}", NewTypeInference.RETURN_NONDECLARED_TYPE);
}||||||||public void testLooserCheckingForInferredProperties() {
    checkNoWarnings("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  obj.prop = true ? 1 : 'asdf';\n" + "  obj.prop - 5;\n" + "}");
    checkNoWarnings("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  if (!(typeof obj.prop == 'number')) {\n" + "    obj.prop < 'asdf';\n" + "  }\n" + "}");
    typeCheck("/** @constructor */\n" + "function Foo(x) { this.prop = x; }\n" + "function f(/** !Foo */ obj) {\n" + "  obj.prop = true ? 1 : 'asdf';\n" + "  obj.prop - 5;\n" + "  obj.prop < 'asdf';\n" + "}", NewTypeInference.INVALID_OPERAND_TYPE);
    typeCheck("function /** string */ f(/** ?number */ x) {\n" + "  var o = { prop: 'str' };\n" + "  if (x) {\n" + "    o.prop = x;\n" + "  }\n" + "  return o.prop;\n" + "}", NewTypeInference.RETURN_NONDECLARED_TYPE);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

