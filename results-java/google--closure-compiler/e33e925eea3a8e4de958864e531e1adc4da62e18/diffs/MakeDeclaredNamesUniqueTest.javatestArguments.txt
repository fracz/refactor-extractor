public void testArguments() {
    // Set the test type
    this.useDefaultRenamer = true;
    invert = true;
    // Don't distinguish between "arguments", it can't be made unique.
    testSameWithInversion("function foo(){var arguments;function bar(){var arguments;}}");
    // Don't introduce new references to arguments, it is special.
    testSameWithInversion("function foo(){var arguments$$1;}");
}||||||||public void testArguments() {
    // Set the test type
    this.useDefaultRenamer = true;
    // Don't distinguish between "arguments", it can't be made unique.
    testSameWithInversion("function foo(){var arguments;function bar(){var arguments;}}");
    invert = true;
    // Don't introduce new references to arguments, it is special.
    test("function foo(){var arguments$$1;}", "function foo(){var arguments$$0;}");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(BooleanLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

