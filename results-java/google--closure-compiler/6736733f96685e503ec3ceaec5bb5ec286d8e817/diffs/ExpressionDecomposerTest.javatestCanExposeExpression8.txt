public void testCanExposeExpression8() {
    // Can it be decompose?
    helperCanExposeExpression(DecompositionType.DECOMPOSABLE, "HangoutStarter.prototype.launchHangout = function() {\n" + "  var self = a.b;\n" + "  var myUrl = new goog.Uri(getDomServices_(self).getDomHelper()." + "getWindow().location.href);\n" + "};", "getDomServices_");
    // Verify it is properly expose the target expression.
    helperExposeExpression("HangoutStarter.prototype.launchHangout = function() {\n" + "  var self = a.b;\n" + "  var myUrl = new goog.Uri(getDomServices_(self).getDomHelper()." + "getWindow().location.href);\n" + "};", "getDomServices_", "HangoutStarter.prototype.launchHangout = function() {" + "  var self = a.b;" + "  var temp_const$jscomp$0 = goog.Uri;" + "  var myUrl = new temp_const$jscomp$0(getDomServices_(self)." + "      getDomHelper().getWindow().location.href)}");
    // Verify the results can be properly moved.
    helperMoveExpression("HangoutStarter.prototype.launchHangout = function() {" + "  var self = a.b;" + "  var temp_const$jscomp$0 = goog.Uri;" + "  var myUrl = new temp_const$jscomp$0(getDomServices_(self)." + "      getDomHelper().getWindow().location.href)}", "getDomServices_", "HangoutStarter.prototype.launchHangout = function() {" + "  var self=a.b;" + "  var temp_const$jscomp$0=goog.Uri;" + "  var result$jscomp$0=getDomServices_(self);" + "  var myUrl=new temp_const$jscomp$0(result$jscomp$0.getDomHelper()." + "      getWindow().location.href)}");
}||||||||public void testCanExposeExpression8() {
    // Can it be decompose?
    helperCanExposeExpression(DecompositionType.DECOMPOSABLE, LINE_JOINER.join("HangoutStarter.prototype.launchHangout = function() {", "  var self = a.b;", "  var myUrl = new goog.Uri(", "      getDomServices_(self).getDomHelper().getWindow().location.href);", "};"), "getDomServices_");
    // Verify it is properly expose the target expression.
    helperExposeExpression(LINE_JOINER.join("HangoutStarter.prototype.launchHangout = function() {", "  var self = a.b;", "  var myUrl =", "      new goog.Uri(getDomServices_(self).getDomHelper().getWindow().location.href);", "};"), "getDomServices_", LINE_JOINER.join("HangoutStarter.prototype.launchHangout = function() {", "  var self = a.b;", "  var temp_const$jscomp$0 = goog.Uri;", "  var myUrl = new temp_const$jscomp$0(", "      getDomServices_(self).getDomHelper().getWindow().location.href);", "}"));
    // Verify the results can be properly moved.
    helperMoveExpression(LINE_JOINER.join("HangoutStarter.prototype.launchHangout = function() {", "  var self = a.b;", "  var temp_const$jscomp$0 = goog.Uri;", "  var myUrl = new temp_const$jscomp$0(", "      getDomServices_(self).getDomHelper().getWindow().location.href);", "}"), "getDomServices_", LINE_JOINER.join("HangoutStarter.prototype.launchHangout = function() {", "  var self=a.b;", "  var temp_const$jscomp$0=goog.Uri;", "  var result$jscomp$0=getDomServices_(self);", "  var myUrl=new temp_const$jscomp$0(", "      result$jscomp$0.getDomHelper().getWindow().location.href);", "}"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
)

