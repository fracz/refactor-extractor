public void testMultipleUnknown() {
    // TODO(johnlenz): Support multiple definitions.
    String src = "var goog1 = {};" + "goog1.foo = function () { };" + "var goog2 = {};" + "goog2.foo = function (p1) { };" + "var x = getGoog();" + "x.foo()";
    testSame(src);
}||||||||public void testMultipleUnknown() {
    String src = lines("var goog1 = {};", "goog1.foo = function () { };", "var goog2 = {};", "goog2.foo = function (p1) { };", "var x = getGoog();", "x.foo()");
    String result = lines("var goog1 = {};", "goog1.foo = function () { };", "var goog2 = {};", "goog2.foo = function () { var p1; };", "var x = getGoog();", "x.foo()");
    test(src, result);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

