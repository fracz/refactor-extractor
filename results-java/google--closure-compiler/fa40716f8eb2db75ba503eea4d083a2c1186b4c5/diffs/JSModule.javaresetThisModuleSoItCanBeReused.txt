/**
 * Removes any references to nodes of the AST and resets fields used by JSModuleGraph.
 *
 * <p>This method is needed by some tests to allow modules to be reused and their ASTs garbage
 * collected.
 * @deprecated Fix tests to avoid reusing modules.
 */
@Deprecated
void resetThisModuleSoItCanBeReused() {
    for (CompilerInput input : inputs) {
        input.clearAst();
    }
    depth = -1;
}||||||||/**
 * Removes any references to nodes of the AST and resets fields used by JSModuleGraph.
 *
 * <p>This method is needed by some tests to allow modules to be reused and their ASTs garbage
 * collected.
 * @deprecated Fix tests to avoid reusing modules.
 */
@Deprecated
void resetThisModuleSoItCanBeReused() {
    for (CompilerInput input : inputs) {
        input.clearAst();
    }
    depth = -1;
    index = -1;
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

