boolean unifyWithSubtype(JSType other, List<String> typeParameters, Multimap<String, JSType> typeMultimap, SubtypeCache subSuperMap) {
    Preconditions.checkNotNull(other);
    if (this.isUnknown() || this.isTop()) {
        return true;
    } else if (getMask() == TYPEVAR_MASK && typeParameters.contains(getTypeVar())) {
        updateTypemap(typeMultimap, getTypeVar(), other);
        return true;
    } else if (other.isUnknown() || other.isTrueOrTruthy()) {
        return true;
    } else if (other.isTop()) {
        // T|number doesn't unify with TOP
        return false;
    }
    Set<EnumType> ununifiedEnums = ImmutableSet.of();
    if (!other.getEnums().isEmpty()) {
        ununifiedEnums = new LinkedHashSet<>();
        for (EnumType e : other.getEnums()) {
            if (!fromEnum(e).isSubtypeOf(this, SubtypeCache.create())) {
                ununifiedEnums.add(e);
            }
        }
    }
    Set<ObjectType> ununifiedObjs = new LinkedHashSet<>(other.getObjs());
    // Foo<number>|Foo<string> may or may not unify with Foo<T>|Foo<string>
    for (ObjectType targetObj : getObjs()) {
        for (ObjectType sourceObj : other.getObjs()) {
            if (targetObj.unifyWithSubtype(sourceObj, typeParameters, typeMultimap, subSuperMap)) {
                ununifiedObjs.remove(sourceObj);
            }
        }
    }
    String thisTypevar = getTypeVar();
    String otherTypevar = other.getTypeVar();
    if (thisTypevar == null || !typeParameters.contains(thisTypevar)) {
        return ununifiedObjs.isEmpty() && ununifiedEnums.isEmpty() && (otherTypevar == null || otherTypevar.equals(thisTypevar)) && getMask() == (getMask() | (other.getMask() & ~ENUM_MASK));
    } else {
        // this is (T | ...)
        int thisScalarBits = getMask() & ~NON_SCALAR_MASK & ~TYPEVAR_MASK;
        int templateMask = other.getMask() & ~thisScalarBits;
        if (ununifiedObjs.isEmpty()) {
            templateMask &= ~NON_SCALAR_MASK;
        }
        if (templateMask == BOTTOM_MASK) {
            // nothing left in other to assign to thisTypevar, so don't update typemap
            return ununifiedObjs.isEmpty() && ununifiedEnums.isEmpty();
        }
        JSType templateType = makeType(promoteBoolean(templateMask), ImmutableSet.copyOf(ununifiedObjs), otherTypevar, ImmutableSet.copyOf(ununifiedEnums));
        updateTypemap(typeMultimap, getTypeVar(), templateType);
        return true;
    }
}||||||||boolean unifyWithSubtype(JSType other, List<String> typeParameters, Multimap<String, JSType> typeMultimap, SubtypeCache subSuperMap) {
    Preconditions.checkNotNull(other);
    if (this.isUnknown() || this.isTop()) {
        return true;
    } else if (getMask() == TYPEVAR_MASK && typeParameters.contains(getTypeVar())) {
        updateTypemap(typeMultimap, getTypeVar(), other);
        return true;
    } else if (other.isUnknown() || other.isTrueOrTruthy()) {
        return true;
    } else if (other.isTop()) {
        // T|number doesn't unify with TOP
        return false;
    }
    Set<EnumType> ununifiedEnums = ImmutableSet.of();
    if (!other.getEnums().isEmpty()) {
        ununifiedEnums = new LinkedHashSet<>();
        for (EnumType e : other.getEnums()) {
            if (!fromEnum(e).isSubtypeOf(this, SubtypeCache.create())) {
                ununifiedEnums.add(e);
            }
        }
    }
    Set<ObjectType> ununifiedObjs = new LinkedHashSet<>(other.getObjs());
    // Foo<number>|Foo<string> may or may not unify with Foo<T>|Foo<string>
    for (ObjectType targetObj : getObjs()) {
        for (ObjectType sourceObj : other.getObjs()) {
            if (targetObj.unifyWithSubtype(sourceObj, typeParameters, typeMultimap, subSuperMap)) {
                ununifiedObjs.remove(sourceObj);
            }
        }
    }
    String thisTypevar = getTypeVar();
    String otherTypevar = other.getTypeVar();
    if (thisTypevar == null || !typeParameters.contains(thisTypevar)) {
        return ununifiedObjs.isEmpty() && ununifiedEnums.isEmpty() && (otherTypevar == null || otherTypevar.equals(thisTypevar)) && getMask() == (getMask() | (other.getMask() & ~ENUM_MASK));
    } else {
        // this is (T | ...)
        int thisScalarBits = getMask() & ~NON_SCALAR_MASK & ~TYPEVAR_MASK;
        int templateMask = other.getMask() & ~thisScalarBits;
        if (ununifiedObjs.isEmpty()) {
            templateMask &= ~NON_SCALAR_MASK;
        }
        if (templateMask == BOTTOM_MASK) {
            // nothing left in other to assign to thisTypevar, so don't update typemap
            return ununifiedObjs.isEmpty() && ununifiedEnums.isEmpty();
        }
        JSType templateType = makeType(this.commonTypes, promoteBoolean(templateMask), ImmutableSet.copyOf(ununifiedObjs), otherTypevar, ImmutableSet.copyOf(ununifiedEnums));
        updateTypemap(typeMultimap, getTypeVar(), templateType);
        return true;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								(BooleanLiteralExpr
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									(ThisExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								(BooleanLiteralExpr
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									(ThisExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

