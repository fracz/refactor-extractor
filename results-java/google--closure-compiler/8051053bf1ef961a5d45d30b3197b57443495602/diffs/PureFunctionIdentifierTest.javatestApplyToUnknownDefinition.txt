public void testApplyToUnknownDefinition() throws Exception {
    checkMarkedCalls("var dict = {'func': function() {}};" + "function f() { var s = dict['func'];}" + "f.apply()", ImmutableList.of("f.apply"));
    // Not marked becuase the definition cannot be found so unknown side effects.
    checkMarkedCalls("var dict = {'func': function() {}};" + "function f() { var s = dict['func'].apply();}" + "f.apply()", ImmutableList.<String>of());
    // Not marked becuase the definition cannot be found so unknown side effects.
    checkMarkedCalls("var pure = function() {};" + "var dict = {'func': function() {}};" + "function f() { var s = (dict['func'] || pure)();}" + "f()", ImmutableList.<String>of());
    // Not marked becuase the definition cannot be found so unknown side effects.
    checkMarkedCalls("var pure = function() {};" + "var dict = {'func': function() {}};" + "function f() { var s = (condition ? dict['func'] : pure)();}" + "f()", ImmutableList.<String>of());
}||||||||public void testApplyToUnknownDefinition() throws Exception {
    String source = LINE_JOINER.join("var dict = {'func': function() {}};", "function f() { var s = dict['func'];}", "f.apply()");
    assertPureCallsMarked(source, ImmutableList.of("f.apply"));
    // Not marked becuase the definition cannot be found so unknown side effects.
    source = LINE_JOINER.join("var dict = {'func': function() {}};", "function f() { var s = dict['func'].apply();}", "f.apply()");
    assertPureCallsMarked(source, NO_PURE_CALLS);
    // Not marked becuase the definition cannot be found so unknown side effects.
    source = LINE_JOINER.join("var pure = function() {};", "var dict = {'func': function() {}};", "function f() { var s = (dict['func'] || pure)();}", "f()");
    assertPureCallsMarked(source, NO_PURE_CALLS);
    // Not marked becuase the definition cannot be found so unknown side effects.
    source = LINE_JOINER.join("var pure = function() {};", "var dict = {'func': function() {}};", "function f() { var s = (condition ? dict['func'] : pure)();}", "f()");
    assertPureCallsMarked(source, NO_PURE_CALLS);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

