public void testMutatesArguments3() throws Exception {
    // We could do better here with better side-effect propagation.
    String source = "function f(x) { x.y = 1; }\n" + "function g(x) { f(x); }\n" + "g({});";
    checkMarkedCalls(source, ImmutableList.<String>of());
}||||||||public void testMutatesArguments3() throws Exception {
    // We could do better here with better side-effect propagation.
    String source = LINE_JOINER.join("function f(x) { x.y = 1; }", "function g(x) { f(x); }", "g({});");
    assertPureCallsMarked(source, NO_PURE_CALLS);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

