@Test
public void shouldMatchQualifiersPerAndroidSpec() throws Exception {
    assertEquals("en-port", ResBundle.pick(asValues("", "en", "fr-rCA", "en-port", "en-notouch-12key", "port-ldpi", "port-notouch-12key"), "en-GB-port-hdpi-notouch-12key").asString());
}||||||||@Test
public void shouldMatchQualifiersPerAndroidSpec() throws Exception {
    assertEquals("en-port", asResMap("", "en", "fr-rCA", "en-port", "en-notouch-12key", "port-ldpi", "port-notouch-12key").pick(resName, "en-GB-port-hdpi-notouch-12key").asString());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

