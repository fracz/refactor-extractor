public final void completed(Object testId, TestCompleteEvent event) {
    TestState testState = executing.remove(testId);
    if (testState == null) {
        throw new IllegalArgumentException(String.format("Received a completed event for test with unknown id '%s'. Registered test ids: '%s'", testId, executing.keySet()));
    }
    // In case the output event arrives after completion of the test
    // and we need to have a matching descriptor to inform the user which test this output belongs to
    // we will use the current parent
    // (SF) This approach should generally work because at the moment we reset capturing output per suite
    // (see CaptureTestOutputTestResultProcessor) and that reset happens earlier in the chain.
    // So in theory when suite is completed, the output redirector has been already stopped
    // and there shouldn't be any output events passed
    // See also GRADLE-2035
    currentParent = testState.test.getParent();
    testState.completed(event);
    delegate.completed(testState.test, new DefaultTestResult(testState), event);
}||||||||@Override
public final void completed(Object testId, TestCompleteEvent event) {
    TestState testState = executing.remove(testId);
    if (testState == null) {
        throw new IllegalArgumentException(String.format("Received a completed event for test with unknown id '%s'. Registered test ids: '%s'", testId, executing.keySet()));
    }
    // In case the output event arrives after completion of the test
    // and we need to have a matching descriptor to inform the user which test this output belongs to
    // we will use the current parent
    // (SF) This approach should generally work because at the moment we reset capturing output per suite
    // (see CaptureTestOutputTestResultProcessor) and that reset happens earlier in the chain.
    // So in theory when suite is completed, the output redirector has been already stopped
    // and there shouldn't be any output events passed
    // See also GRADLE-2035
    currentParent = testState.test.getParent();
    testState.completed(event);
    delegate.completed(testState.test, new DefaultTestResult(testState), event);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

