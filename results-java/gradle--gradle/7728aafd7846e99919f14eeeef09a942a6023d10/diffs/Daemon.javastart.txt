/**
 * Starts the daemon, receiving connections asynchronously (i.e. returns immediately).
 *
 * @throws IllegalStateException if this daemon is already running, or has already been stopped.
 */
public void start() {
    LOGGER.info("start() called on daemon - {}", daemonContext);
    lifecyleLock.lock();
    try {
        if (stateCoordinator != null) {
            throw new IllegalStateException("cannot start daemon as it is already running");
        }
        // Get ready to accept connections, but we are assuming that no connections will be established
        // because we have not yet advertised that we are open for business by entering our address into
        // the registry, which happens a little further down in this method.
        connectorAddress = connector.start(new IncomingConnectionHandler() {

            public void handle(final Connection<Object> connection) {
                // we're spinning a thread to do work to avoid blocking the connection
                // This means that the Daemon potentially can do multiple things but we only allows a single build at a time
                handlersExecutor.execute(new Runnable() {

                    private Command command;

                    public void run() {
                        try {
                            command = (Command) connection.receive();
                            LOGGER.debug("received command {} in new thread", command);
                            commandExecuter.executeCommand(connection, command, daemonContext, stateCoordinator);
                        } catch (RuntimeException e) {
                            LOGGER.error("Error processing the incoming command.", e);
                            // in case the default exception handler needs it.
                            throw e;
                        } finally {
                            LOGGER.debug("finishing processing of command {}", command);
                        }
                    }
                });
            }
        });
        registryUpdater = new DomainRegistryUpdater(daemonRegistry, daemonContext, password, connectorAddress);
        Runnable onStart = new Runnable() {

            public void run() {
                LOGGER.debug("Daemon starting at: " + new Date() + ", with address: " + connectorAddress);
                registryUpdater.onStart();
            }
        };
        Runnable onStartCommand = new Runnable() {

            public void run() {
                registryUpdater.onStartActivity();
            }
        };
        Runnable onFinishCommand = new Runnable() {

            public void run() {
                registryUpdater.onCompleteActivity();
            }
        };
        Runnable onStop = new Runnable() {

            public void run() {
                LOGGER.info("Stop requested. Daemon is stopping accepting new connections...");
                registryUpdater.onStop();
                // will block until any running commands are finished
                connector.stop();
            }
        };
        stateCoordinator = new DaemonStateCoordinator(onStart, onStartCommand, onFinishCommand, onStop);
        // ready, set, go
        stateCoordinator.start();
    } finally {
        lifecyleLock.unlock();
    }
}||||||||/**
 * Starts the daemon, receiving connections asynchronously (i.e. returns immediately).
 *
 * @throws IllegalStateException if this daemon is already running, or has already been stopped.
 */
public void start() {
    LOGGER.info("start() called on daemon - {}", daemonContext);
    lifecyleLock.lock();
    try {
        if (stateCoordinator != null) {
            throw new IllegalStateException("cannot start daemon as it is already running");
        }
        // Get ready to accept connections, but we are assuming that no connections will be established
        // because we have not yet advertised that we are open for business by entering our address into
        // the registry, which happens a little further down in this method.
        connectorAddress = connector.start(new IncomingConnectionHandler() {

            public void handle(final Connection<Object> connection) {
                // we're spinning a thread to do work to avoid blocking the connection
                // This means that the Daemon potentially can do multiple things but we only allows a single build at a time
                handlersExecutor.execute(new Runnable() {

                    private Command command;

                    public void run() {
                        try {
                            command = (Command) connection.receive();
                            LOGGER.debug("received command {} in new thread", command);
                        } catch (RuntimeException e) {
                            String message = String.format("Unable to receive command from connection: '%s'", connection);
                            LOGGER.warn(message + ". Dispatching the failure to the daemon client...", e);
                            connection.dispatch(new DaemonFailure(new RuntimeException(message, e)));
                            // TODO SF exception handling / send typed exception / refactor / unit test and apply the same for below
                            return;
                        }
                        try {
                            commandExecuter.executeCommand(connection, command, daemonContext, stateCoordinator);
                        } catch (RuntimeException e) {
                            String message = String.format("Uncaught exception when executing command: '%s' from connection: '%s'.", command, connection);
                            LOGGER.warn(message + ". Dispatching the failure to the daemon client...", e);
                            connection.dispatch(new DaemonFailure(new RuntimeException(message, e)));
                        } finally {
                            LOGGER.debug("finishing processing of command {}", command);
                        }
                    }
                });
            }
        });
        registryUpdater = new DomainRegistryUpdater(daemonRegistry, daemonContext, password, connectorAddress);
        Runnable onStart = new Runnable() {

            public void run() {
                LOGGER.debug("Daemon starting at: " + new Date() + ", with address: " + connectorAddress);
                registryUpdater.onStart();
            }
        };
        Runnable onStartCommand = new Runnable() {

            public void run() {
                registryUpdater.onStartActivity();
            }
        };
        Runnable onFinishCommand = new Runnable() {

            public void run() {
                registryUpdater.onCompleteActivity();
            }
        };
        Runnable onStop = new Runnable() {

            public void run() {
                LOGGER.info("Stop requested. Daemon is stopping accepting new connections...");
                registryUpdater.onStop();
                // will block until any running commands are finished
                connector.stop();
            }
        };
        stateCoordinator = new DaemonStateCoordinator(onStart, onStartCommand, onFinishCommand, onStop);
        // ready, set, go
        stateCoordinator.start();
    } finally {
        lifecyleLock.unlock();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(FieldDeclaration
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(MethodDeclaration
														(BlockStmt
															(TryStmt
																(CatchClause
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ThrowStmt
																			NameExpr
																				SimpleName
																			LineComment
																		)
																	)
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(CastExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(ObjectCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(FieldDeclaration
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(MethodDeclaration
														(BlockStmt
															(TryStmt
																(CatchClause
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						StringLiteralExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					StringLiteralExpr
																				)
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(ObjectCreationExpr
																					(ObjectCreationExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ReturnStmt
																			LineComment
																		)
																	)
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(CastExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(TryStmt
																(CatchClause
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						StringLiteralExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					StringLiteralExpr
																				)
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(ObjectCreationExpr
																					(ObjectCreationExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(Parameter
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(ObjectCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

