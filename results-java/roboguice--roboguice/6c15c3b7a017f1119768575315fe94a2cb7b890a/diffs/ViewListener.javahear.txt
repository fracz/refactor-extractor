@Override
public <I> void hear(TypeLiteral<I> typeLiteral, TypeEncounter<I> typeEncounter) {
    for (Class<?> c = typeLiteral.getRawType(); c != Object.class; c = c.getSuperclass()) for (Field field : c.getDeclaredFields()) {
        if (field.isAnnotationPresent(InjectView.class))
            if (Modifier.isStatic(field.getModifiers()))
                throw new UnsupportedOperationException("Views may not be statically injected");
            else if (!View.class.isAssignableFrom(field.getType()))
                throw new UnsupportedOperationException("You may only use @InjectView on fields descended from type View");
            else if (Context.class.isAssignableFrom(field.getDeclaringClass()) && !Activity.class.isAssignableFrom(field.getDeclaringClass()))
                throw new UnsupportedOperationException("You may only use @InjectView in Activity contexts");
            else
                typeEncounter.register(new ViewMembersInjector<I>(field, field.getAnnotation(InjectView.class), typeEncounter));
        else if (field.isAnnotationPresent(InjectFragment.class))
            if (fragmentClass == null && nfragmentClass == null) {
                throw new RuntimeException(new ClassNotFoundException("Neither " + fragmentClass.getCanonicalName() + " nor " + nfragmentClass.getCanonicalName() + " was available"));
            }
        if (Modifier.isStatic(field.getModifiers())) {
            throw new UnsupportedOperationException("Fragments may not be statically injected");
        } else {
            final boolean assignableFromNative = hasNative && nfragmentClass.isAssignableFrom(field.getType());
            final boolean assignableFromSupport = hasSupport && fragmentClass.isAssignableFrom(field.getType());
            final boolean isSupportActivity = hasSupport && fragmentActivityClass.isAssignableFrom(field.getDeclaringClass());
            final boolean isNativeActivity = !isSupportActivity && Activity.class.isAssignableFrom(field.getDeclaringClass());
            if ((isNativeActivity && assignableFromNative) || (isSupportActivity && assignableFromSupport)) {
                typeEncounter.register(new ViewMembersInjector<I>(field, field.getAnnotation(InjectFragment.class), typeEncounter));
            } else // final else block will never execute.
            if (isNativeActivity && !assignableFromNative) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in native activities if fields are descended from type android.app.Fragment");
            } else if (!isSupportActivity && !isNativeActivity) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in Activity contexts");
            } else if (isSupportActivity && !assignableFromSupport) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in support activities if fields are descended from type android.support.v4.app.Fragment");
            } else {
                throw new RuntimeException("This should never happen.");
            }
        }
    }
}||||||||@Override
public <I> void hear(TypeLiteral<I> typeLiteral, TypeEncounter<I> typeEncounter) {
    for (Class<?> c = typeLiteral.getRawType(); c != Object.class; c = c.getSuperclass()) for (Field field : c.getDeclaredFields()) {
        if (field.isAnnotationPresent(InjectView.class))
            if (Modifier.isStatic(field.getModifiers()))
                throw new UnsupportedOperationException("Views may not be statically injected");
            else if (!View.class.isAssignableFrom(field.getType()))
                throw new UnsupportedOperationException("You may only use @InjectView on fields descended from type View");
            else if (Context.class.isAssignableFrom(field.getDeclaringClass()) && !Activity.class.isAssignableFrom(field.getDeclaringClass()))
                throw new UnsupportedOperationException("You may only use @InjectView in Activity contexts");
            else
                typeEncounter.register(new ViewMembersInjector<I>(field, field.getAnnotation(InjectView.class), typeEncounter, null));
        else if (field.isAnnotationPresent(InjectFragment.class))
            if (!FragmentUtil.hasNative && !FragmentUtil.hasSupport) {
                throw new RuntimeException(new ClassNotFoundException("No fragment classes were available"));
            }
        if (Modifier.isStatic(field.getModifiers())) {
            throw new UnsupportedOperationException("Fragments may not be statically injected");
        } else {
            final boolean assignableFromNative = FragmentUtil.hasNative && FragmentUtil.nativeFrag.fragmentType().isAssignableFrom(field.getType());
            final boolean assignableFromSupport = FragmentUtil.hasSupport && FragmentUtil.supportFrag.fragmentType().isAssignableFrom(field.getType());
            final boolean isSupportActivity = FragmentUtil.hasSupport && FragmentUtil.supportActivity.isAssignableFrom(field.getDeclaringClass());
            final boolean isNativeActivity = !isSupportActivity && Activity.class.isAssignableFrom(field.getDeclaringClass());
            if ((isNativeActivity && assignableFromNative) || (isSupportActivity && assignableFromSupport)) {
                typeEncounter.register(new ViewMembersInjector<I>(field, field.getAnnotation(InjectFragment.class), typeEncounter, isNativeActivity ? FragmentUtil.nativeFrag : FragmentUtil.supportFrag));
            } else // final else block will never execute.
            if (isNativeActivity && !assignableFromNative) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in native activities if fields are descended from type android.app.Fragment");
            } else if (!isSupportActivity && !isNativeActivity) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in Activity contexts");
            } else if (isSupportActivity && !assignableFromSupport) {
                throw new UnsupportedOperationException("You may only use @InjectFragment in support activities if fields are descended from type android.support.v4.app.Fragment");
            } else {
                throw new RuntimeException("This should never happen.");
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(ForeachStmt
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(UnaryExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(IfStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForStmt
			(ForeachStmt
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									(UnaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(UnaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BlockStmt
									(ThrowStmt
										(ObjectCreationExpr
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(UnaryExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												NullLiteralExpr
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ThrowStmt
										(ObjectCreationExpr
											StringLiteralExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(IfStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(BinaryExpr
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												(ConditionalExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(VariableDeclarationExpr
					(VariableDeclarator
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

