@Override
public void request(long n) {
    if (SubscriptionHelper.validate(n)) {
        for (; ; ) {
            long state = get();
            if (state == HAS_REQUEST_NO_VALUE || state == HAS_REQUEST_HAS_VALUE || state == CANCELLED) {
                return;
            }
            if (state == NO_REQUEST_HAS_VALUE) {
                // unlike complete() we need to CAS as multiple concurrent requests are allowed
                if (compareAndSet(NO_REQUEST_HAS_VALUE, HAS_REQUEST_HAS_VALUE)) {
                    if (fusionState == EMPTY) {
                        fusionState = HAS_VALUE;
                    }
                    actual.onNext(value);
                    if (get() != CANCELLED) {
                        actual.onComplete();
                    }
                }
                return;
            }
            if (compareAndSet(NO_REQUEST_NO_VALUE, HAS_REQUEST_NO_VALUE)) {
                return;
            }
        }
    }
}||||||||@Override
public final void request(long n) {
    if (SubscriptionHelper.validate(n)) {
        for (; ; ) {
            int state = get();
            // or request has been called (HAS_REQUEST_*)
            if ((state & ~NO_REQUEST_HAS_VALUE) != 0) {
                return;
            }
            if (state == NO_REQUEST_HAS_VALUE) {
                if (compareAndSet(NO_REQUEST_HAS_VALUE, HAS_REQUEST_HAS_VALUE)) {
                    T v = value;
                    value = null;
                    Subscriber<? super T> a = actual;
                    a.onNext(v);
                    if (get() != CANCELLED) {
                        a.onComplete();
                    }
                }
                return;
            }
            if (compareAndSet(NO_REQUEST_NO_VALUE, HAS_REQUEST_NO_VALUE)) {
                return;
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									LineComment
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													NameExpr
														SimpleName
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													NameExpr
														SimpleName
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(WildcardType
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
								(ReturnStmt
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(ReturnStmt
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

