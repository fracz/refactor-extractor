@Test
public void testTakeZeroDoesntLeakError() {
    final AtomicBoolean subscribed = new AtomicBoolean(false);
    final AtomicBoolean unSubscribed = new AtomicBoolean(false);
    Observable<String> source = Observable.create(new Func1<Observer<? super String>, Subscription>() {

        @Override
        public Subscription call(Observer<? super String> observer) {
            subscribed.set(true);
            observer.onError(new Throwable("test failed"));
            return new Subscription() {

                @Override
                public void unsubscribe() {
                    unSubscribed.set(true);
                }
            };
        }
    });
    @SuppressWarnings("unchecked") Observer<String> aObserver = mock(Observer.class);
    Observable.create(take(source, 0)).subscribe(aObserver);
    assertTrue("source subscribed", subscribed.get());
    assertTrue("source unsubscribed", unSubscribed.get());
    verify(aObserver, never()).onNext(anyString());
    // even though onError is called we take(0) so shouldn't see it
    verify(aObserver, never()).onError(any(Throwable.class));
    verify(aObserver, times(1)).onCompleted();
    verifyNoMoreInteractions(aObserver);
}||||||||@Test
public void testTakeZeroDoesntLeakError() {
    final AtomicBoolean subscribed = new AtomicBoolean(false);
    final AtomicBoolean unSubscribed = new AtomicBoolean(false);
    Observable<String> source = Observable.create(new OnSubscribeFunc<String>() {

        @Override
        public Subscription call(Observer<? super String> observer) {
            subscribed.set(true);
            observer.onError(new Throwable("test failed"));
            return new Subscription() {

                @Override
                public void unsubscribe() {
                    unSubscribed.set(true);
                }
            };
        }
    });
    @SuppressWarnings("unchecked") Observer<String> aObserver = mock(Observer.class);
    Observable.create(take(source, 0)).subscribe(aObserver);
    assertTrue("source subscribed", subscribed.get());
    assertTrue("source unsubscribed", unSubscribed.get());
    verify(aObserver, never()).onNext(anyString());
    // even though onError is called we take(0) so shouldn't see it
    verify(aObserver, never()).onError(any(Throwable.class));
    verify(aObserver, times(1)).onCompleted();
    verifyNoMoreInteractions(aObserver);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(WildcardType
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(SingleMemberAnnotationExpr
					StringLiteralExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BooleanLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(SingleMemberAnnotationExpr
					StringLiteralExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

