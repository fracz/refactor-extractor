/**
 * Creates an Observable that will execute the given function when an {@link Observer} subscribes to it.
 * <p>
 * <img width="640" src="https://github.com/Netflix/RxJava/wiki/images/rx-operators/create.png">
 * <p>
 * Write the function you pass to <code>create</code> so that it behaves as an Observable: It
 * should invoke the Observer's {@link Observer#onNext onNext}, {@link Observer#onError onError}, and {@link Observer#onCompleted onCompleted} methods
 * appropriately.
 * <p>
 * A well-formed Observable must invoke either the Observer's <code>onCompleted</code> method
 * exactly once or its <code>onError</code> method exactly once.
 * <p>
 * See <a href="http://go.microsoft.com/fwlink/?LinkID=205219">Rx Design Guidelines (PDF)</a>
 * for detailed information.
 *
 * @param <T>
 * the type of the items that this Observable emits
 * @param func
 * a function that accepts an {@code Observer<T>}, invokes its {@code onNext}, {@code onError}, and {@code onCompleted} methods
 * as appropriate, and returns a {@link Subscription} to allow the Observer to
 * canceling the subscription
 * @return an Observable that, when an {@link Observer} subscribes to it, will execute the given
 * function
 */
public static <T> Observable<T> create(Func1<? super Observer<? super T>, ? extends Subscription> func) {
    return new Observable<T>(func);
}||||||||/**
 * Creates an Observable that will execute the given function when an {@link Observer} subscribes to it.
 * <p>
 * <img width="640" src="https://github.com/Netflix/RxJava/wiki/images/rx-operators/create.png">
 * <p>
 * Write the function you pass to <code>create</code> so that it behaves as an Observable: It
 * should invoke the Observer's {@link Observer#onNext onNext}, {@link Observer#onError onError}, and {@link Observer#onCompleted onCompleted} methods
 * appropriately.
 * <p>
 * A well-formed Observable must invoke either the Observer's <code>onCompleted</code> method
 * exactly once or its <code>onError</code> method exactly once.
 * <p>
 * See <a href="http://go.microsoft.com/fwlink/?LinkID=205219">Rx Design Guidelines (PDF)</a>
 * for detailed information.
 *
 * @param <T>
 * the type of the items that this Observable emits
 * @param func
 * a function that accepts an {@code Observer<T>}, invokes its {@code onNext}, {@code onError}, and {@code onCompleted} methods
 * as appropriate, and returns a {@link Subscription} to allow the Observer to
 * canceling the subscription
 * @return an Observable that, when an {@link Observer} subscribes to it, will execute the given
 * function
 */
public static <T> Observable<T> create(OnSubscribeFunc<T> func) {
    return new Observable<T>(func);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
					(WildcardType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

