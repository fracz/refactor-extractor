@Test
public void testReconcile() {
    Cell left;
    Cell right;
    Cell reconciled;
    ByteBuffer context;
    // tombstone + tombstone
    left = new BufferDeletedCell(cellname("x"), 1, 1L);
    right = new BufferDeletedCell(cellname("x"), 2, 2L);
    assert left.reconcile(right).timestamp() == right.timestamp();
    assert right.reconcile(left).timestamp() == right.timestamp();
    // tombstone > live
    left = new BufferDeletedCell(cellname("x"), 1, 2L);
    right = BufferCounterCell.createLocal(cellname("x"), 0L, 1L, Long.MIN_VALUE);
    assert left.reconcile(right) == left;
    // tombstone < live last delete
    left = new BufferDeletedCell(cellname("x"), 1, 1L);
    right = BufferCounterCell.createLocal(cellname("x"), 0L, 4L, 2L);
    assert left.reconcile(right) == left;
    // tombstone == live last delete
    left = new BufferDeletedCell(cellname("x"), 1, 2L);
    right = BufferCounterCell.createLocal(cellname("x"), 0L, 4L, 2L);
    assert left.reconcile(right) == left;
    // tombstone > live last delete
    left = new BufferDeletedCell(cellname("x"), 1, 4L);
    right = BufferCounterCell.createLocal(cellname("x"), 0L, 9L, 1L);
    assert left.reconcile(right) == left;
    // live < tombstone
    left = BufferCounterCell.createLocal(cellname("x"), 0L, 1L, Long.MIN_VALUE);
    right = new BufferDeletedCell(cellname("x"), 1, 2L);
    assert left.reconcile(right) == right;
    // live last delete > tombstone
    left = BufferCounterCell.createLocal(cellname("x"), 0L, 4L, 2L);
    right = new BufferDeletedCell(cellname("x"), 1, 1L);
    assert left.reconcile(right) == right;
    // live last delete == tombstone
    left = BufferCounterCell.createLocal(cellname("x"), 0L, 4L, 2L);
    right = new BufferDeletedCell(cellname("x"), 1, 2L);
    assert left.reconcile(right) == right;
    // live last delete < tombstone
    left = BufferCounterCell.createLocal(cellname("x"), 0L, 9L, 1L);
    right = new BufferDeletedCell(cellname("x"), 1, 4L);
    assert left.reconcile(right) == right;
    // live < live last delete
    left = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 2L, 3L), 1L, Long.MIN_VALUE);
    right = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 1L, 1L), 4L, 3L);
    assert left.reconcile(right) == right;
    // live last delete > live
    left = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 2L, 3L), 6L, 5L);
    right = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 1L, 1L), 4L, 3L);
    assert left.reconcile(right) == left;
    // live + live
    left = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 1L, 1L), 4L, Long.MIN_VALUE);
    right = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(1), 2L, 3L), 1L, Long.MIN_VALUE);
    reconciled = left.reconcile(right);
    assert reconciled.name().equals(left.name());
    assert ((CounterCell) reconciled).total() == 3L;
    assert reconciled.timestamp() == 4L;
    left = reconciled;
    right = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(2), 1L, 5L), 2L, Long.MIN_VALUE);
    reconciled = left.reconcile(right);
    assert reconciled.name().equals(left.name());
    assert ((CounterCell) reconciled).total() == 8L;
    assert reconciled.timestamp() == 4L;
    left = reconciled;
    right = new BufferCounterCell(cellname("x"), cc.createRemote(CounterId.fromInt(2), 2L, 2L), 6L, Long.MIN_VALUE);
    reconciled = left.reconcile(right);
    assert reconciled.name().equals(left.name());
    assert ((CounterCell) reconciled).total() == 5L;
    assert reconciled.timestamp() == 6L;
    context = reconciled.value();
    // header
    int hd = 2;
    assert hd + 2 * stepLength == context.remaining();
    assert Util.equalsCounterId(CounterId.fromInt(1), context, hd);
    assert 2L == context.getLong(hd + idLength);
    assert 3L == context.getLong(hd + idLength + clockLength);
    assert Util.equalsCounterId(CounterId.fromInt(2), context, hd + stepLength);
    assert 2L == context.getLong(hd + stepLength + idLength);
    assert 2L == context.getLong(hd + stepLength + idLength + clockLength);
    assert ((CounterCell) reconciled).timestampOfLastDelete() == Long.MIN_VALUE;
}||||||||@Test
public void testReconcile() {
    ColumnFamilyStore cfs = Keyspace.open(KEYSPACE1).getColumnFamilyStore(COUNTER1);
    ColumnDefinition cDef = Keyspace.open(KEYSPACE1).getColumnFamilyStore(STANDARD1).metadata.getColumnDefinition(ByteBufferUtil.bytes("val"));
    ByteBuffer col = ByteBufferUtil.bytes("c1");
    AbstractCell left;
    AbstractCell right;
    // both deleted, diff deletion time, same ts
    left = createLegacyCounterCell(cfs, col, 1, 2, 0, 5);
    right = createLegacyCounterCell(cfs, col, 1, 2, 0, 10);
    assert Cells.reconcile(left, right, 10) == right;
    // diff ts
    right = createLegacyCounterCell(cfs, col, 1, 1, 0, 10);
    assert Cells.reconcile(left, right, 10) == left;
    // < tombstone
    left = new CellTest.TestCell(cDef, ByteBufferUtil.bytes(5L), SimpleLivenessInfo.forDeletion(6, 6));
    right = createLegacyCounterCell(cfs, col, 1, 5, 0, 5);
    assert Cells.reconcile(left, right, 10) == left;
    // > tombstone
    left = new CellTest.TestCell(cDef, ByteBufferUtil.bytes(5L), SimpleLivenessInfo.forDeletion(1, 1));
    right = createLegacyCounterCell(cfs, col, 1, 5, 0, Integer.MAX_VALUE);
    assert Cells.reconcile(left, right, 10) == left;
    // == tombstone
    left = new CellTest.TestCell(cDef, ByteBufferUtil.bytes(5L), SimpleLivenessInfo.forDeletion(8, 8));
    right = createLegacyCounterCell(cfs, col, 1, 8, 0, Integer.MAX_VALUE);
    assert Cells.reconcile(left, right, 10) == left;
    // live + live
    left = createLegacyCounterCell(cfs, col, 1, 2, 0, Integer.MAX_VALUE);
    right = createLegacyCounterCell(cfs, col, 3, 5, 0, Integer.MAX_VALUE);
    Cell reconciled = Cells.reconcile(left, right, 10);
    assertEquals(CounterContext.instance().total(reconciled.value()), 4);
    assertEquals(reconciled.livenessInfo().timestamp(), 5L);
    // Add, don't change TS
    Cell addTen = createLegacyCounterCell(cfs, col, 10, 4, 0, Integer.MAX_VALUE);
    reconciled = Cells.reconcile(reconciled, addTen, 10);
    assertEquals(CounterContext.instance().total(reconciled.value()), 14);
    assertEquals(reconciled.livenessInfo().timestamp(), 5L);
    // Add w/new TS
    Cell addThree = createLegacyCounterCell(cfs, col, 3, 7, 0, Integer.MAX_VALUE);
    reconciled = Cells.reconcile(reconciled, addThree, 10);
    assertEquals(CounterContext.instance().total(reconciled.value()), 17);
    assertEquals(reconciled.livenessInfo().timestamp(), 7L);
    // Confirm no deletion time
    assert reconciled.livenessInfo().localDeletionTime() == Integer.MAX_VALUE;
    Cell deleted = createLegacyCounterCell(cfs, col, 2, 8, 0, 8);
    reconciled = Cells.reconcile(reconciled, deleted, 10);
    assertEquals(2, CounterContext.instance().total(reconciled.value()));
    assertEquals(reconciled.livenessInfo().timestamp(), 8L);
    assert reconciled.livenessInfo().localDeletionTime() == 8;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(LongLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(LongLiteralExpr
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(LongLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(LongLiteralExpr
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(LongLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					(MethodCallExpr
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(LongLiteralExpr
						)
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(LongLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(LongLiteralExpr
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(LongLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(AssertStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(AssertStmt
			(BinaryExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(AssertStmt
			(BinaryExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
			LineComment
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						(LongLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(IntegerLiteralExpr
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(LongLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(LongLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(LongLiteralExpr
				)
				SimpleName
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(LongLiteralExpr
				)
				SimpleName
			)
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IntegerLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

