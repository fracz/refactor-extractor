// An iterator over all column definitions but that respect the order of a SELECT *.
public Iterator<ColumnDefinition> allColumnsInSelectOrder() {
    return new AbstractIterator<ColumnDefinition>() {

        private final Iterator<ColumnDefinition> partitionKeyIter = partitionKeyColumns.iterator();

        private final Iterator<ColumnDefinition> clusteringIter = clusteringColumns.iterator();

        private boolean valueDone;

        private final Iterator<ColumnDefinition> staticIter = staticColumns.iterator();

        private final Iterator<ColumnDefinition> regularIter = regularColumns.iterator();

        protected ColumnDefinition computeNext() {
            if (partitionKeyIter.hasNext())
                return partitionKeyIter.next();
            if (clusteringIter.hasNext())
                return clusteringIter.next();
            if (staticIter.hasNext())
                return staticIter.next();
            if (compactValueColumn != null && !valueDone) {
                valueDone = true;
                // with only a PK. As far as selects are concerned, we should ignore the value.
                if (compactValueColumn.name.bytes.hasRemaining())
                    return compactValueColumn;
            }
            if (regularIter.hasNext())
                return regularIter.next();
            return endOfData();
        }
    };
}||||||||// An iterator over all column definitions but that respect the order of a SELECT *.
// This also "hide" the clustering/regular columns for a non-CQL3 non-dense table for backward compatibility
// sake (those are accessible through thrift but not through CQL currently).
public Iterator<ColumnDefinition> allColumnsInSelectOrder() {
    final boolean isStaticCompactTable = isStaticCompactTable();
    final boolean noNonPkColumns = isCompactTable() && CompactTables.hasEmptyCompactValue(this);
    return new AbstractIterator<ColumnDefinition>() {

        private final Iterator<ColumnDefinition> partitionKeyIter = partitionKeyColumns.iterator();

        private final Iterator<ColumnDefinition> clusteringIter = isStaticCompactTable ? Collections.<ColumnDefinition>emptyIterator() : clusteringColumns.iterator();

        private final Iterator<ColumnDefinition> otherColumns = noNonPkColumns ? Collections.<ColumnDefinition>emptyIterator() : (isStaticCompactTable ? partitionColumns.statics.selectOrderIterator() : partitionColumns.selectOrderIterator());

        protected ColumnDefinition computeNext() {
            if (partitionKeyIter.hasNext())
                return partitionKeyIter.next();
            if (clusteringIter.hasNext())
                return clusteringIter.next();
            return otherColumns.hasNext() ? otherColumns.next() : endOfData();
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(FieldDeclaration
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						SimpleName
						(PrimitiveType
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							(ThisExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(FieldDeclaration
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(ConditionalExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(FieldDeclaration
					(VariableDeclarator
						(ConditionalExpr
							NameExpr
								SimpleName
							(EnclosedExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ReturnStmt
							(ConditionalExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	LineComment
)

