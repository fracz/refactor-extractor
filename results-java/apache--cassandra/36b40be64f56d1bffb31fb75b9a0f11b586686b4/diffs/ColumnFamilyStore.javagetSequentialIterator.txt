/**
 * Iterate over a range of rows and columns from memtables/sstables.
 *
 * @param superColumn optional SuperColumn to slice subcolumns of; null to slice top-level columns
 * @param range Either a Bounds, which includes start key, or a Range, which does not.
 * @param columnFilter description of the columns we're interested in for each row
 */
public AbstractScanIterator getSequentialIterator(ByteBuffer superColumn, final AbstractBounds<RowPosition> range, IFilter columnFilter) {
    assert !(range instanceof Range) || !((Range) range).isWrapAround() || range.right.isMinimum() : range;
    final RowPosition startWith = range.left;
    final RowPosition stopAt = range.right;
    QueryFilter filter = new QueryFilter(null, new QueryPath(columnFamily, superColumn, null), columnFilter);
    final ViewFragment view = markReferenced(startWith, stopAt);
    try {
        final CloseableIterator<Row> iterator = RowIteratorFactory.getIterator(view.memtables, view.sstables, startWith, stopAt, filter, this);
        final int gcBefore = (int) (System.currentTimeMillis() / 1000) - metadata.getGcGraceSeconds();
        return new AbstractScanIterator() {

            protected Row computeNext() {
                // pull a row out of the iterator
                if (!iterator.hasNext())
                    return endOfData();
                Row current = iterator.next();
                DecoratedKey key = current.key;
                if (!stopAt.isMinimum() && stopAt.compareTo(key) < 0)
                    return endOfData();
                // skipping outside of assigned range
                if (!range.contains(key))
                    return computeNext();
                if (logger.isDebugEnabled())
                    logger.debug("scanned " + key);
                // their subcolumns for relevance, so we need to do a second prune post facto here.
                return current.cf != null && current.cf.isSuper() ? new Row(current.key, removeDeleted(current.cf, gcBefore)) : current;
            }

            public void close() throws IOException {
                SSTableReader.releaseReferences(view.sstables);
                iterator.close();
            }
        };
    } catch (RuntimeException e) {
        // In case getIterator() throws, otherwise the iteror close method releases the references.
        SSTableReader.releaseReferences(view.sstables);
        throw e;
    }
}||||||||/**
 * Iterate over a range of rows and columns from memtables/sstables.
 *
 * @param superColumn optional SuperColumn to slice subcolumns of; null to slice top-level columns
 * @param range Either a Bounds, which includes start key, or a Range, which does not.
 * @param columnFilter description of the columns we're interested in for each row
 */
public AbstractScanIterator getSequentialIterator(ByteBuffer superColumn, final AbstractBounds<RowPosition> range, IFilter columnFilter) {
    assert !(range instanceof Range) || !((Range) range).isWrapAround() || range.right.isMinimum() : range;
    final RowPosition startWith = range.left;
    final RowPosition stopAt = range.right;
    QueryFilter filter = new QueryFilter(null, new QueryPath(columnFamily, superColumn, null), columnFilter);
    final ViewFragment view = markReferenced(startWith, stopAt);
    try {
        final CloseableIterator<Row> iterator = RowIteratorFactory.getIterator(view.memtables, view.sstables, startWith, stopAt, filter, this);
        final int gcBefore = (int) (System.currentTimeMillis() / 1000) - metadata.getGcGraceSeconds();
        return new AbstractScanIterator() {

            protected Row computeNext() {
                // pull a row out of the iterator
                if (!iterator.hasNext())
                    return endOfData();
                Row current = iterator.next();
                DecoratedKey key = current.key;
                if (!stopAt.isMinimum() && stopAt.compareTo(key) < 0)
                    return endOfData();
                // skipping outside of assigned range
                if (!range.contains(key))
                    return computeNext();
                logger.trace("scanned {}", key);
                // their subcolumns for relevance, so we need to do a second prune post facto here.
                return current.cf != null && current.cf.isSuper() ? new Row(current.key, removeDeleted(current.cf, gcBefore)) : current;
            }

            public void close() throws IOException {
                SSTableReader.releaseReferences(view.sstables);
                iterator.close();
            }
        };
    } catch (RuntimeException e) {
        // In case getIterator() throws, otherwise the iteror close method releases the references.
        SSTableReader.releaseReferences(view.sstables);
        throw e;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				(BinaryExpr
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							(EnclosedExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NullLiteralExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ThisExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ReturnStmt
									(ConditionalExpr
										(BinaryExpr
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										(ObjectCreationExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				(BinaryExpr
					(UnaryExpr
						(EnclosedExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							(EnclosedExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NullLiteralExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ThisExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
									(ConditionalExpr
										(BinaryExpr
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										(ObjectCreationExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
							SimpleName
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

