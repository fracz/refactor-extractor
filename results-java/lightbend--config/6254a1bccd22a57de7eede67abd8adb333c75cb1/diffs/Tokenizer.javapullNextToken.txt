private Token pullNextToken(WhitespaceSaver saver) {
    int c = nextCharAfterWhitespace(saver);
    if (c == -1) {
        return Tokens.END;
    } else if (c == '\n') {
        // newline tokens have the just-ended line number
        lineNumber += 1;
        return Tokens.newLine(lineNumber - 1);
    } else {
        Token t = null;
        switch(c) {
            case '"':
                t = pullQuotedString();
                break;
            case '$':
                t = pullSubstitution();
                break;
            case ':':
                t = Tokens.COLON;
                break;
            case ',':
                t = Tokens.COMMA;
                break;
            case '=':
                t = Tokens.EQUALS;
                break;
            case '{':
                t = Tokens.OPEN_CURLY;
                break;
            case '}':
                t = Tokens.CLOSE_CURLY;
                break;
            case '[':
                t = Tokens.OPEN_SQUARE;
                break;
            case ']':
                t = Tokens.CLOSE_SQUARE;
                break;
        }
        if (t == null) {
            if (firstNumberChars.indexOf(c) >= 0) {
                t = pullNumber(c);
            } else if (notInUnquotedText.indexOf(c) >= 0) {
                throw parseError(String.format("Character '%c' is not the start of any valid token", c));
            } else {
                putBack(c);
                t = pullUnquotedText();
            }
        }
        if (t == null)
            throw new ConfigException.BugOrBroken("bug: failed to generate next token");
        return t;
    }
}||||||||private Token pullNextToken(WhitespaceSaver saver) {
    int c = nextCharAfterWhitespace(saver);
    if (c == -1) {
        return Tokens.END;
    } else if (c == '\n') {
        // newline tokens have the just-ended line number
        lineNumber += 1;
        return Tokens.newLine(lineNumber - 1);
    } else {
        Token t = null;
        switch(c) {
            case '"':
                t = pullQuotedString();
                break;
            case '$':
                t = pullSubstitution();
                break;
            case ':':
                t = Tokens.COLON;
                break;
            case ',':
                t = Tokens.COMMA;
                break;
            case '=':
                t = Tokens.EQUALS;
                break;
            case '{':
                t = Tokens.OPEN_CURLY;
                break;
            case '}':
                t = Tokens.CLOSE_CURLY;
                break;
            case '[':
                t = Tokens.OPEN_SQUARE;
                break;
            case ']':
                t = Tokens.CLOSE_SQUARE;
                break;
        }
        if (t == null) {
            if (firstNumberChars.indexOf(c) >= 0) {
                t = pullNumber(c);
            } else if (notInUnquotedText.indexOf(c) >= 0) {
                t = Tokens.newReservedChar(lineOrigin(), c);
            } else {
                putBack(c);
                t = pullUnquotedText();
            }
        }
        if (t == null)
            throw new ConfigException.BugOrBroken("bug: failed to generate next token");
        return t;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								NullLiteralExpr
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ThrowStmt
											(MethodCallExpr
												(MethodCallExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						LineComment
					)
					(ReturnStmt
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(CharLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								NullLiteralExpr
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(CharLiteralExpr
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						LineComment
					)
					(ReturnStmt
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

