@Test
public void shouldLeftLeftJoin() throws Exception {
    verifyKTableKTableJoin(JoinType.LEFT, JoinType.LEFT, Arrays.asList(new KeyValue<>("a", "A1-null-A3"), new KeyValue<>("b", "B1-null-B3"), new KeyValue<>("b", "B1-B2-B3")));
}||||||||@Test
public void shouldLeftLeftJoin() throws Exception {
    verifyKTableKTableJoin(JoinType.LEFT, JoinType.LEFT, Arrays.asList(new KeyValue<>("a", "A1-null-A3"), new KeyValue<>("b", "B1-null-B3"), new KeyValue<>("b", "B1-B2-B3")), false);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ObjectCreationExpr
						StringLiteralExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

