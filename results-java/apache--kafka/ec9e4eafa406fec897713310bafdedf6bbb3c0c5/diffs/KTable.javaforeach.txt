/**
 * Perform an action on each update record of this {@code KTable}.
 * Note that this is a terminal operation that returns void.
 * <p>
 * Note that {@code foreach()} is not applied to the internal state store and only called for each new
 * {@code KTable} update record.
 *
 * @param action an action to perform on each record
 */
void foreach(final ForeachAction<? super K, ? super V> action);||||||||/**
 * Perform an action on each update record of this {@code KTable}.
 * Note that this is a terminal operation that returns void.
 * <p>
 * Note that {@code foreach()} is not applied to the internal state store and only called for each new
 * {@code KTable} update record.
 *
 * @param action an action to perform on each record
 * @deprecated Use the Interactive Queries APIs (e.g., {@link KafkaStreams#store(String, QueryableStoreType) }
 * followed by {@link ReadOnlyKeyValueStore#all()}) to iterate over the keys of a KTable. Alternatively
 * convert to a KStream using {@code toStream()} and then use {@link KStream#foreach(ForeachAction)}} on the result.
 */
@Deprecated
void foreach(final ForeachAction<? super K, ? super V> action);||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

