/**
 * Drain all the data for the given nodes and collate them into a list of batches that will fit within the specified
 * size on a per-node basis. This method attempts to avoid choosing the same topic-node over and over.
 *
 * @param cluster The current cluster metadata
 * @param nodes The list of node to drain
 * @param maxSize The maximum number of bytes to drain
 * @param now The current unix time in milliseconds
 * @return A list of {@link ProducerBatch} for each node specified with total size less than the requested maxSize.
 */
public Map<Integer, List<ProducerBatch>> drain(Cluster cluster, Set<Node> nodes, int maxSize, long now) {
    if (nodes.isEmpty())
        return Collections.emptyMap();
    Map<Integer, List<ProducerBatch>> batches = new HashMap<>();
    for (Node node : nodes) {
        int size = 0;
        List<PartitionInfo> parts = cluster.partitionsForNode(node.id());
        List<ProducerBatch> ready = new ArrayList<>();
        /* to make starvation less likely this loop doesn't start at 0 */
        int start = drainIndex = drainIndex % parts.size();
        do {
            PartitionInfo part = parts.get(drainIndex);
            TopicPartition tp = new TopicPartition(part.topic(), part.partition());
            // Only proceed if the partition has no in-flight batches.
            if (!muted.contains(tp)) {
                Deque<ProducerBatch> deque = getDeque(tp);
                if (deque != null) {
                    synchronized (deque) {
                        ProducerBatch first = deque.peekFirst();
                        if (first != null) {
                            boolean backoff = first.attempts() > 0 && first.waitedTimeMs(now) < retryBackoffMs;
                            // Only drain the batch if it is not during backoff period.
                            if (!backoff) {
                                if (size + first.sizeInBytes() > maxSize && !ready.isEmpty()) {
                                    // request
                                    break;
                                } else {
                                    ProducerIdAndEpoch producerIdAndEpoch = null;
                                    boolean isTransactional = false;
                                    if (transactionManager != null) {
                                        if (!transactionManager.isSendToPartitionAllowed(tp))
                                            break;
                                        producerIdAndEpoch = transactionManager.producerIdAndEpoch();
                                        if (!producerIdAndEpoch.isValid())
                                            // we cannot send the batch until we have refreshed the producer id
                                            break;
                                        isTransactional = transactionManager.isTransactional();
                                    }
                                    ProducerBatch batch = deque.pollFirst();
                                    if (producerIdAndEpoch != null && !batch.inRetry()) {
                                        // If the batch is in retry, then we should not change the producer id and
                                        // sequence number, since this may introduce duplicates. In particular,
                                        // the previous attempt may actually have been accepted, and if we change
                                        // the producer id and sequence here, this attempt will also be accepted,
                                        // causing a duplicate.
                                        int sequenceNumber = transactionManager.sequenceNumber(batch.topicPartition);
                                        log.debug("Assigning sequence number {} from producer {} to dequeued " + "batch from partition {} bound for {}.", sequenceNumber, producerIdAndEpoch, batch.topicPartition, node);
                                        batch.setProducerState(producerIdAndEpoch, sequenceNumber, isTransactional);
                                    }
                                    batch.close();
                                    size += batch.sizeInBytes();
                                    ready.add(batch);
                                    batch.drained(now);
                                }
                            }
                        }
                    }
                }
            }
            this.drainIndex = (this.drainIndex + 1) % parts.size();
        } while (start != drainIndex);
        batches.put(node.id(), ready);
    }
    return batches;
}||||||||/**
 * Drain all the data for the given nodes and collate them into a list of batches that will fit within the specified
 * size on a per-node basis. This method attempts to avoid choosing the same topic-node over and over.
 *
 * @param cluster The current cluster metadata
 * @param nodes The list of node to drain
 * @param maxSize The maximum number of bytes to drain
 * @param now The current unix time in milliseconds
 * @return A list of {@link ProducerBatch} for each node specified with total size less than the requested maxSize.
 */
public Map<Integer, List<ProducerBatch>> drain(Cluster cluster, Set<Node> nodes, int maxSize, long now) {
    if (nodes.isEmpty())
        return Collections.emptyMap();
    Map<Integer, List<ProducerBatch>> batches = new HashMap<>();
    for (Node node : nodes) {
        int size = 0;
        List<PartitionInfo> parts = cluster.partitionsForNode(node.id());
        List<ProducerBatch> ready = new ArrayList<>();
        /* to make starvation less likely this loop doesn't start at 0 */
        int start = drainIndex = drainIndex % parts.size();
        do {
            PartitionInfo part = parts.get(drainIndex);
            TopicPartition tp = new TopicPartition(part.topic(), part.partition());
            // Only proceed if the partition has no in-flight batches.
            if (!muted.contains(tp)) {
                Deque<ProducerBatch> deque = getDeque(tp);
                if (deque != null) {
                    synchronized (deque) {
                        ProducerBatch first = deque.peekFirst();
                        if (first != null) {
                            boolean backoff = first.attempts() > 0 && first.waitedTimeMs(now) < retryBackoffMs;
                            // Only drain the batch if it is not during backoff period.
                            if (!backoff) {
                                if (size + first.estimatedSizeInBytes() > maxSize && !ready.isEmpty()) {
                                    // request
                                    break;
                                } else {
                                    ProducerIdAndEpoch producerIdAndEpoch = null;
                                    boolean isTransactional = false;
                                    if (transactionManager != null) {
                                        if (!transactionManager.isSendToPartitionAllowed(tp))
                                            break;
                                        producerIdAndEpoch = transactionManager.producerIdAndEpoch();
                                        if (!producerIdAndEpoch.isValid())
                                            // we cannot send the batch until we have refreshed the producer id
                                            break;
                                        isTransactional = transactionManager.isTransactional();
                                    }
                                    ProducerBatch batch = deque.pollFirst();
                                    if (producerIdAndEpoch != null && !batch.inRetry()) {
                                        // If the batch is in retry, then we should not change the producer id and
                                        // sequence number, since this may introduce duplicates. In particular,
                                        // the previous attempt may actually have been accepted, and if we change
                                        // the producer id and sequence here, this attempt will also be accepted,
                                        // causing a duplicate.
                                        int sequenceNumber = transactionManager.sequenceNumber(batch.topicPartition);
                                        log.debug("Assigning sequence number {} from producer {} to dequeued " + "batch from partition {} bound for {}.", sequenceNumber, producerIdAndEpoch, batch.topicPartition, node);
                                        batch.setProducerState(producerIdAndEpoch, sequenceNumber, isTransactional);
                                    }
                                    batch.close();
                                    size += batch.records().sizeInBytes();
                                    ready.add(batch);
                                    batch.drained(now);
                                }
                            }
                        }
                    }
                }
            }
            this.drainIndex = (this.drainIndex + 1) % parts.size();
        } while (start != drainIndex);
        batches.put(node.id(), ready);
    }
    return batches;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(BlockComment
					)
				)
				(DoStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(SynchronizedStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(BinaryExpr
																		(BinaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(IntegerLiteralExpr
																			)
																		)
																		(BinaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
														)
														(IfStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(IfStmt
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			NameExpr
																				SimpleName
																		)
																		(UnaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					NullLiteralExpr
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(BooleanLiteralExpr
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(IfStmt
																					(UnaryExpr
																						(MethodCallExpr
																							NameExpr
																								SimpleName
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BreakStmt
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				(IfStmt
																					(UnaryExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BreakStmt
																						LineComment
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																				(UnaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(MethodCallExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						(BinaryExpr
																							StringLiteralExpr
																							StringLiteralExpr
																						)
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BlockStmt
																		(BreakStmt
																			LineComment
																		)
																	)
																)
															)
															LineComment
														)
													)
												)
											)
											NameExpr
												SimpleName
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(BlockComment
					)
				)
				(DoStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(SynchronizedStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(BinaryExpr
																		(BinaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(IntegerLiteralExpr
																			)
																		)
																		(BinaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
														)
														(IfStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(IfStmt
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			NameExpr
																				SimpleName
																		)
																		(UnaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					NullLiteralExpr
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(BooleanLiteralExpr
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(IfStmt
																					(UnaryExpr
																						(MethodCallExpr
																							NameExpr
																								SimpleName
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BreakStmt
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				(IfStmt
																					(UnaryExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(BreakStmt
																						LineComment
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					SimpleName
																					(ClassOrInterfaceType
																						SimpleName
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																				(UnaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(MethodCallExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							SimpleName
																							(PrimitiveType
																							)
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						(BinaryExpr
																							StringLiteralExpr
																							StringLiteralExpr
																						)
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BlockStmt
																		(BreakStmt
																			LineComment
																		)
																	)
																)
															)
															LineComment
														)
													)
												)
											)
											NameExpr
												SimpleName
										)
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

