/**
 * Wakeup an active poll. This will cause the polling thread to throw an exception either
 * on the current poll if one is active, or the next poll.
 */
public void wakeup() {
    // wakeup should be safe without holding the client lock since it simply delegates to
    // Selector's wakeup, which is threadsafe
    this.wakeup.set(true);
    this.client.wakeup();
}||||||||/**
 * Wakeup an active poll. This will cause the polling thread to throw an exception either
 * on the current poll if one is active, or the next poll.
 */
public void wakeup() {
    // wakeup should be safe without holding the client lock since it simply delegates to
    // Selector's wakeup, which is threadsafe
    log.trace("Received user wakeup");
    this.wakeup.set(true);
    this.client.wakeup();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

