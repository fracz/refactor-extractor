/**
 * Checks if the given service url contains the current host which is trying
 * to replicate. Only after the EIP binding is done the host has a chance to
 * identify itself in the list of replica nodes and needs to take itself out
 * of replication traffic.
 *
 * @param url
 * the service url of the replica node that the check is made.
 * @return true, if the url represents the current node which is trying to
 * replicate, false otherwise.
 */
public static boolean isThisMe(String url) {
    InstanceInfo myInfo = ApplicationInfoManager.getInstance().getInfo();
    try {
        URI uri = new URI(url);
        return (uri.getHost().equals(myInfo.getHostName()));
    } catch (URISyntaxException e) {
        logger.error("Error in syntax", e);
        return false;
    }
}||||||||/**
 * Checks if the given service url contains the current host which is trying
 * to replicate. Only after the EIP binding is done the host has a chance to
 * identify itself in the list of replica nodes and needs to take itself out
 * of replication traffic.
 *
 * @param url
 * the service url of the replica node that the check is made.
 * @return true, if the url represents the current node which is trying to
 * replicate, false otherwise.
 */
public static boolean isThisMe(String url) {
    InstanceInfo myInfo = ApplicationInfoManager.getInstance().getInfo();
    String hostName = hostFromUrl(url);
    return hostName != null && hostName.equals(myInfo.getHostName());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(EnclosedExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

