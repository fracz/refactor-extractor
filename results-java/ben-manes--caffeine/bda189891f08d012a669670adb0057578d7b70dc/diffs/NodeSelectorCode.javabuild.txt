private CodeBlock build() {
    return block.addStatement("return valueOf(sb.toString())").build();
}||||||||private CodeBlock build() {
    return block.beginControlFlow("try").addStatement("$T<?> cls = $T.class.getClassLoader().loadClass(sb.toString())", Class.class, NODE_FACTORY).addStatement("return ($T) cls.getDeclaredConstructor().newInstance()", NODE_FACTORY).nextControlFlow("catch ($T e)", ReflectiveOperationException.class).addStatement("throw new $T(sb.toString(), e)", IllegalStateException.class).endControlFlow().build();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

