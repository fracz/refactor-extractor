public Policy build() {
    String pkg = type.substring(0, type.indexOf('.'));
    String strategy = type.substring(type.lastIndexOf('.') + 1);
    switch(pkg) {
        case "opt":
            if (strategy.equalsIgnoreCase("Clairvoyant")) {
                return new ClairvoyantPolicy(type, config);
            } else if (strategy.equalsIgnoreCase("Unbounded")) {
                return new UnboundedPolicy(type);
            }
            throw new IllegalStateException("Unknown policy: " + type);
        case "linked":
            if (strategy.equalsIgnoreCase("SegmentedLru")) {
                return new SegmentedLruPolicy(name(), admittor, config);
            }
            return new LinkedPolicy(name(), admittor, config, LinkedPolicy.EvictionPolicy.valueOf(strategy.toUpperCase()));
        case "sampled":
            return new SamplingPolicy(name(), admittor, config, SamplingPolicy.EvictionPolicy.valueOf(strategy.toUpperCase()));
        case "two-queue":
            return new TwoQueuePolicy(type, config);
        case "irr":
            return new JackrabbitLirsPolicy(type, config);
        default:
            throw new IllegalStateException("Unknown policy: " + type);
    }
}||||||||public Policy build() {
    String pkg = type.substring(0, type.indexOf('.'));
    String strategy = type.substring(type.lastIndexOf('.') + 1);
    switch(pkg) {
        case "opt":
            if (strategy.equalsIgnoreCase("Clairvoyant")) {
                return new ClairvoyantPolicy(type, config);
            } else if (strategy.equalsIgnoreCase("Unbounded")) {
                return new UnboundedPolicy(type);
            }
            throw new IllegalStateException("Unknown policy: " + type);
        case "linked":
            if (strategy.equalsIgnoreCase("Lfu") || strategy.equalsIgnoreCase("Mfu")) {
                return new FrequentlyUsedPolicy(name(), admittor, Frequency.valueOf(strategy.toUpperCase()), config);
            } else if (strategy.equalsIgnoreCase("SegmentedLru")) {
                return new SegmentedLruPolicy(name(), admittor, config);
            }
            return new LinkedPolicy(name(), admittor, config, LinkedPolicy.EvictionPolicy.valueOf(strategy.toUpperCase()));
        case "sampled":
            return new SamplingPolicy(name(), admittor, config, SamplingPolicy.EvictionPolicy.valueOf(strategy.toUpperCase()));
        case "two-queue":
            return new TwoQueuePolicy(type, config);
        case "irr":
            return new JackrabbitLirsPolicy(type, config);
        default:
            throw new IllegalStateException("Unknown policy: " + type);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								(CharLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				StringLiteralExpr
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							(CharLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								(CharLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				StringLiteralExpr
				(IfStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BlockStmt
							(ReturnStmt
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
								)
								NameExpr
									SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				StringLiteralExpr
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

