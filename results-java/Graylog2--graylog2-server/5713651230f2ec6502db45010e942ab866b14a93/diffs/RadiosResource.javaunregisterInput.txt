@DELETE
@Timed
@ApiOperation(value = "Unregister input of a radio.", notes = "Radios unregister their inputs when they are stopped/terminated on the radio.")
@Path("/{radioId}/inputs/{inputId}")
@ApiResponses(value = { @ApiResponse(code = 404, message = "Radio not found.") })
public Response unregisterInput(@ApiParam(title = "radioId", required = true) @PathParam("radioId") String radioId, @ApiParam(title = "inputId", required = true) @PathParam("inputId") String inputId) {
    Node radio = Node.byNodeId(core, radioId);
    if (radio == null) {
        LOG.error("Radio <{}> not found.", radioId);
        throw new WebApplicationException(404);
    }
    DBObject query = new BasicDBObject();
    query.put("_id", new ObjectId(inputId));
    query.put("radio_id", radioId);
    Input.destroy(query, core, Input.COLLECTION);
    return Response.status(Response.Status.NO_CONTENT).build();
}||||||||@DELETE
@Timed
@ApiOperation(value = "Unregister input of a radio.", notes = "Radios unregister their inputs when they are stopped/terminated on the radio.")
@Path("/{radioId}/inputs/{inputId}")
@ApiResponses(value = { @ApiResponse(code = 404, message = "Radio not found.") })
public Response unregisterInput(@ApiParam(title = "radioId", required = true) @PathParam("radioId") String radioId, @ApiParam(title = "inputId", required = true) @PathParam("inputId") String inputId) {
    final Node radio = nodeService.byNodeId(core, radioId);
    if (radio == null) {
        LOG.error("Radio <{}> not found.", radioId);
        throw new WebApplicationException(404);
    }
    try {
        final Input input = inputService.findForThisNode(radioId, inputId);
        inputService.destroy(input);
    } catch (org.graylog2.database.NotFoundException e) {
        throw new WebApplicationException(404);
    }
    return Response.status(Response.Status.NO_CONTENT).build();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			(ArrayInitializerExpr
				(NormalAnnotationExpr
					(MemberValuePair
						SimpleName
						(IntegerLiteralExpr
						)
					)
					(MemberValuePair
						SimpleName
						StringLiteralExpr
					)
					Name
				)
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(IntegerLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(IntegerLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			(ArrayInitializerExpr
				(NormalAnnotationExpr
					(MemberValuePair
						SimpleName
						(IntegerLiteralExpr
						)
					)
					(MemberValuePair
						SimpleName
						StringLiteralExpr
					)
					Name
				)
			)
		)
		Name
	)
)

