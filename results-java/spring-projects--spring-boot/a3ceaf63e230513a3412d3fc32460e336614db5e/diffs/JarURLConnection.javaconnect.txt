@Override
public void connect() throws IOException {
    if (this.jarEntryName != null) {
        this.jarEntryData = this.jarFile.getJarEntryData(this.jarEntryName);
        if (this.jarEntryData == null) {
            throw new FileNotFoundException("JAR entry " + this.jarEntryName + " not found in " + this.jarFile.getName());
        }
    }
    this.connected = true;
}||||||||@Override
public void connect() throws IOException {
    if (!this.jarEntryName.isEmpty()) {
        this.jarEntryData = this.jarFile.getJarEntryData(this.jarEntryName.asAsciiBytes());
        if (this.jarEntryData == null) {
            if (Boolean.TRUE.equals(useFastExceptions.get())) {
                throw FILE_NOT_FOUND_EXCEPTION;
            }
            throw new FileNotFoundException("JAR entry " + this.jarEntryName + " not found in " + this.jarFile.getName());
        }
    }
    this.connected = true;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(BooleanLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NullLiteralExpr
					)
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ThrowStmt
									NameExpr
										SimpleName
								)
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(BooleanLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

