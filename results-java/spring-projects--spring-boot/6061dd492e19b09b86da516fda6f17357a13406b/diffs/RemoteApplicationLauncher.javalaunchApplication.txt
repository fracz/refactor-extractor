@Override
public LaunchedApplication launchApplication(JavaLauncher javaLauncher) throws Exception {
    int port = SocketUtils.findAvailableTcpPort();
    Process application = javaLauncher.launch("app", createApplicationClassPath(), "com.example.DevToolsTestApplication", "--server.port=" + port, "--spring.devtools.remote.secret=secret");
    Process remoteSpringApplication = javaLauncher.launch("remote-spring-application", createRemoteSpringApplicationClassPath(), RemoteSpringApplication.class.getName(), "--spring.devtools.remote.secret=secret", "http://localhost:" + port);
    return new LaunchedApplication(new File("target/remote"), application, remoteSpringApplication);
}||||||||@Override
public LaunchedApplication launchApplication(JvmLauncher javaLauncher) throws Exception {
    int port = SocketUtils.findAvailableTcpPort();
    LaunchedJvm applicationJvm = javaLauncher.launch("app", createApplicationClassPath(), "com.example.DevToolsTestApplication", "--server.port=" + port, "--spring.devtools.remote.secret=secret");
    LaunchedJvm remoteSpringApplicationJvm = javaLauncher.launch("remote-spring-application", createRemoteSpringApplicationClassPath(), RemoteSpringApplication.class.getName(), "--spring.devtools.remote.secret=secret", "http://localhost:" + port);
    return new LaunchedApplication(new File("target/remote"), applicationJvm.getStandardOut(), applicationJvm.getProcess(), remoteSpringApplicationJvm.getProcess());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

