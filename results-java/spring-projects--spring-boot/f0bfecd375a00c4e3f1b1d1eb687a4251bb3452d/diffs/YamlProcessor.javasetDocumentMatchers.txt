/**
 * A map of document matchers allowing callers to selectively use only some of the
 * documents in a YAML resource. In YAML documents are separated by
 * <code>---<code> lines, and each document is converted to properties before the match is made. E.g.
 *
 * <pre class="code">
 * environment: dev
 * url: http://dev.bar.com
 * name: Developer Setup
 * ---
 * environment: prod
 * url:http://foo.bar.com
 * name: My Cool App
 * </pre>
 *
 * when mapped with <code>documentMatchers = YamlProcessor.mapMatcher({"environment": "prod"})</code>
 * would end up as
 *
 * <pre class="code">
 * environment=prod
 * url=http://foo.bar.com
 * name=My Cool App
 * url=http://dev.bar.com
 * </pre>
 * @param matchers a map of keys to value patterns (regular expressions)
 */
public void setDocumentMatchers(List<? extends DocumentMatcher> matchers) {
    this.documentMatchers = Collections.unmodifiableList(matchers);
}||||||||/**
 * A map of document matchers allowing callers to selectively use only some of the
 * documents in a YAML resource. In YAML documents are separated by
 * <code>---<code> lines, and each document is converted to properties before the match is made. E.g.
 *
 * <pre class="code">
 * environment: dev
 * url: http://dev.bar.com
 * name: Developer Setup
 * ---
 * environment: prod
 * url:http://foo.bar.com
 * name: My Cool App
 * </pre>
 *
 * when mapped with <code>documentMatchers = YamlProcessor.mapMatcher({"environment": "prod"})</code>
 * would end up as
 *
 * <pre class="code">
 * environment=prod
 * url=http://foo.bar.com
 * name=My Cool App
 * url=http://dev.bar.com
 * </pre>
 * @param matchers a map of keys to value patterns (regular expressions)
 */
public void setDocumentMatchers(DocumentMatcher... matchers) {
    this.documentMatchers = Collections.unmodifiableList(new ArrayList<DocumentMatcher>(Arrays.asList(matchers)));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

