/**
 * Add listener for file change events. Cannot be called after the watcher has been
 * {@link #start() started}.
 * @param fileChangeListener the listener to add
 */
public synchronized void addListener(FileChangeListener fileChangeListener) {
    Assert.notNull(fileChangeListener, "FileChangeListener must not be null");
    checkNotStarted();
    this.listeners.add(fileChangeListener);
}||||||||/**
 * Add listener for file change events. Cannot be called after the watcher has been
 * {@link #start() started}.
 * @param fileChangeListener the listener to add
 */
public void addListener(FileChangeListener fileChangeListener) {
    Assert.notNull(fileChangeListener, "FileChangeListener must not be null");
    synchronized (this.monitor) {
        checkNotStarted();
        this.listeners.add(fileChangeListener);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

