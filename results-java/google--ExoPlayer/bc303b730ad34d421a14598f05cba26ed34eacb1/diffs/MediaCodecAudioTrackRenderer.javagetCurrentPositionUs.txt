/**
 * This method uses a variety of techniques to compute the current position:
 *
 * 1. Prior to playback having started, calls up to the super class to obtain the pending seek
 * position.
 * 2. During playback, uses AudioTimestamps obtained from AudioTrack.getTimestamp on supported
 * devices.
 * 3. Else, derives a smoothed position by sampling the AudioTrack's frame position.
 */
@Override
protected long getCurrentPositionUs() {
    long systemClockUs = System.nanoTime() / 1000;
    long currentPositionUs;
    if (audioTrack == null || audioTrackStartMediaTimeState == START_NOT_SET) {
        // The AudioTrack hasn't started.
        currentPositionUs = super.getCurrentPositionUs();
    } else if (audioTimestampSet) {
        // How long ago in the past the audio timestamp is (negative if it's in the future)
        long presentationDiff = systemClockUs - (audioTimestampCompat.getNanoTime() / 1000);
        long framesDiff = durationUsToFrames(presentationDiff);
        // The position of the frame that's currently being presented.
        long currentFramePosition = audioTimestampCompat.getFramePosition() + framesDiff;
        currentPositionUs = framesToDurationUs(currentFramePosition) + audioTrackStartMediaTimeUs;
    } else {
        if (playheadOffsetCount == 0) {
            // The AudioTrack has started, but we don't have any samples to compute a smoothed position.
            currentPositionUs = getPlayheadPositionUs() + audioTrackStartMediaTimeUs;
        } else {
            // getPlayheadPositionUs() only has a granularity of ~20ms, so we base the position off the
            // system clock (and a smoothed offset between it and the playhead position) so as to
            // prevent jitter in the reported positions.
            currentPositionUs = systemClockUs + smoothedPlayheadOffsetUs + audioTrackStartMediaTimeUs;
        }
        if (!isEnded()) {
            currentPositionUs -= audioTrackLatencyUs;
        }
    }
    // Make sure we don't ever report time moving backwards as a result of smoothing or switching
    // between the various code paths above.
    currentPositionUs = Math.max(lastReportedCurrentPositionUs, currentPositionUs);
    lastReportedCurrentPositionUs = currentPositionUs;
    return currentPositionUs;
}||||||||@Override
protected long getCurrentPositionUs() {
    long audioTrackCurrentPositionUs = audioTrack.getCurrentPositionUs(isEnded());
    if (audioTrackCurrentPositionUs == AudioTrack.CURRENT_POSITION_NOT_SET) {
        // Use the super class position before audio playback starts.
        currentPositionUs = Math.max(currentPositionUs, super.getCurrentPositionUs());
    } else {
        // Make sure we don't ever report time moving backwards.
        currentPositionUs = Math.max(currentPositionUs, audioTrackCurrentPositionUs);
    }
    return currentPositionUs;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				NameExpr
					SimpleName
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(MethodCallExpr
											SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
					)
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(BinaryExpr
									NameExpr
										SimpleName
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(SuperExpr
							)
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								(SuperExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

