@Override
public void run() {
    try {
        while (active) {
            try {
                // listen for and accept a client connection to serverSocket
                final Socket socket = serverSocket.accept();
                if (server.getDistributedManager() != null) {
                    final ODistributedServerManager.NODE_STATUS nodeStatus = server.getDistributedManager().getNodeStatus();
                    if (nodeStatus != ODistributedServerManager.NODE_STATUS.ONLINE) {
                        OLogManager.instance().warn(this, "Distributed server is not yet ONLINE (status=%s), reject incoming connection from %s. If you are trying to shutdown the server, please kill the process", nodeStatus, socket.getRemoteSocketAddress());
                        socket.close();
                        // PAUSE CURRENT THREAD TO SLOW DOWN ANY POSSIBLE ATTACK
                        Thread.sleep(100);
                        continue;
                    }
                }
                int conns = server.getClientConnectionManager().getTotal();
                if (conns >= OGlobalConfiguration.NETWORK_MAX_CONCURRENT_SESSIONS.getValueAsInteger()) {
                    server.getClientConnectionManager().cleanExpiredConnections();
                    conns = server.getClientConnectionManager().getTotal();
                    if (conns >= OGlobalConfiguration.NETWORK_MAX_CONCURRENT_SESSIONS.getValueAsInteger()) {
                        // MAXIMUM OF CONNECTIONS EXCEEDED
                        OLogManager.instance().warn(this, "Reached maximum number of concurrent connections (%d), reject incoming connection from %s", conns, socket.getRemoteSocketAddress());
                        socket.close();
                        // PAUSE CURRENT THREAD TO SLOW DOWN ANY POSSIBLE ATTACK
                        Thread.sleep(100);
                        continue;
                    }
                }
                socket.setPerformancePreferences(0, 2, 1);
                socket.setSendBufferSize(socketBufferSize);
                socket.setReceiveBufferSize(socketBufferSize);
                // CREATE A NEW PROTOCOL INSTANCE
                ONetworkProtocol protocol = protocolType.newInstance();
                // CONFIGURE THE PROTOCOL FOR THE INCOMING CONNECTION
                protocol.config(this, server, socket, configuration);
            } catch (Throwable e) {
                if (active)
                    OLogManager.instance().error(this, "Error on client connection", e);
            } finally {
            }
        }
    } finally {
        try {
            if (serverSocket != null && !serverSocket.isClosed())
                serverSocket.close();
        } catch (IOException ioe) {
        }
    }
}||||||||@Override
public void run() {
    try {
        while (active) {
            try {
                // listen for and accept a client connection to serverSocket
                final Socket socket = serverSocket.accept();
                if (server.getDistributedManager() != null) {
                    final ODistributedServerManager.NODE_STATUS nodeStatus = server.getDistributedManager().getNodeStatus();
                    if (nodeStatus != ODistributedServerManager.NODE_STATUS.ONLINE) {
                        OLogManager.instance().warn(this, "Distributed server is not yet ONLINE (status=%s), reject incoming connection from %s. If you are trying to shutdown the server, please kill the process", nodeStatus, socket.getRemoteSocketAddress());
                        socket.close();
                        // PAUSE CURRENT THREAD TO SLOW DOWN ANY POSSIBLE ATTACK
                        Thread.sleep(100);
                        continue;
                    }
                }
                final int max = OGlobalConfiguration.NETWORK_MAX_CONCURRENT_SESSIONS.getValueAsInteger();
                int conns = server.getClientConnectionManager().getTotal();
                if (conns >= max) {
                    server.getClientConnectionManager().cleanExpiredConnections();
                    conns = server.getClientConnectionManager().getTotal();
                    if (conns >= max) {
                        // MAXIMUM OF CONNECTIONS EXCEEDED
                        OLogManager.instance().warn(this, "Reached maximum number of concurrent connections (max=%d, current=%d), reject incoming connection from %s", max, conns, socket.getRemoteSocketAddress());
                        socket.close();
                        // PAUSE CURRENT THREAD TO SLOW DOWN ANY POSSIBLE ATTACK
                        Thread.sleep(100);
                        continue;
                    }
                }
                socket.setPerformancePreferences(0, 2, 1);
                socket.setSendBufferSize(socketBufferSize);
                socket.setReceiveBufferSize(socketBufferSize);
                // CREATE A NEW PROTOCOL INSTANCE
                ONetworkProtocol protocol = protocolType.newInstance();
                // CONFIGURE THE PROTOCOL FOR THE INCOMING CONNECTION
                protocol.config(this, server, socket, configuration);
            } catch (Throwable e) {
                if (active)
                    OLogManager.instance().error(this, "Error on client connection", e);
            } finally {
            }
        }
    } finally {
        try {
            if (serverSocket != null && !serverSocket.isClosed())
                serverSocket.close();
        } catch (IOException ioe) {
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(ThisExpr
												)
												StringLiteralExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ContinueStmt
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ContinueStmt
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(ThisExpr
												)
												StringLiteralExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ContinueStmt
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														StringLiteralExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ContinueStmt
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

