@Override
protected void execute() throws Exception {
    try {
        // storage.beginResponse(network);
        // 
        // final byte request = network.readByte();
        // 
        // switch (request) {
        // case OChannelDistributedProtocol.PUSH_DISTRIBUTED_CONFIG:
        // storage.updateClusterConfiguration(network.readBytes());
        // break;
        // 
        // case OChannelDistributedProtocol.PUSH_SCHEMA_CHANGED:
        // storage.updateClusterConfiguration(network.readBytes());
        // break;
        // }
        // NOT IN FINALLY BECAUSE IF THE SOCKET IS KILLED COULD HAVE NOT THE LOCK
        network.endResponse();
    } catch (Exception e) {
    }
}||||||||@Override
protected void execute() throws Exception {
    try {
        storage.beginResponse(network);
        final byte request = network.readByte();
        switch(request) {
            case OChannelBinaryProtocol.REQUEST_PUSH_RECORD:
                // ASYNCHRONOUS PUSH INTO THE LEVEL2 CACHE
                storage.getLevel2Cache().updateRecord((ORecordInternal<?>) OStorageRemote.readIdentifiable(network, null));
                break;
            case OChannelDistributedProtocol.PUSH_DISTRIBUTED_CONFIG:
                storage.updateClusterConfiguration(network.readBytes());
                break;
        }
        // NOT IN FINALLY BECAUSE IF THE SOCKET IS KILLED COULD HAVE NOT THE LOCK
        network.endResponse();
    } catch (Exception e) {
        OLogManager.instance().error(this, "Error in service thread", e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(ThisExpr
							)
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										NullLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(WildcardType
										)
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BreakStmt
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

