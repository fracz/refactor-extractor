/* Generated By:JJTree&JavaCC: Do not edit this line. OrientSqlTokenManager.java */
package com.orientechnologies.orient.core.sql.parser;

/** Token Manager. */
public class OrientSqlTokenManager implements OrientSqlConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x180000000000L) != 0L)
         {
            jjmatchedKind = 103;
            return 125;
         }
         if ((active0 & 0x80000010000000L) != 0L)
            return 69;
         if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x8000000L) != 0L)
            return 28;
         if ((active1 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 103;
            return 98;
         }
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 103;
            return 188;
         }
         return -1;
      case 1:
         if ((active0 & 0x10000000L) != 0L)
            return 87;
         if ((active1 & 0x300000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 103;
               jjmatchedPos = 1;
            }
            return 50;
         }
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 99;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 103;
               jjmatchedPos = 1;
            }
            return 128;
         }
         return -1;
      case 2:
         if ((active1 & 0x780000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 2;
            return 50;
         }
         return -1;
      case 3:
         if ((active1 & 0x600000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 3;
            return 50;
         }
         if ((active1 & 0x180000000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 103;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active1 & 0x180000000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 103;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active1 & 0x600000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 4;
            return 50;
         }
         return -1;
      case 5:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 5;
            return 50;
         }
         return -1;
      case 6:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 6;
            return 50;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 59;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2L);
      case 35:
         return jjStopAtPos(0, 106);
      case 37:
         jjmatchedKind = 78;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 38:
         jjmatchedKind = 75;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100010L);
      case 40:
         return jjStopAtPos(0, 46);
      case 41:
         return jjStopAtPos(0, 47);
      case 42:
         jjmatchedKind = 73;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000L);
      case 43:
         jjmatchedKind = 71;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10020L);
      case 44:
         return jjStopAtPos(0, 53);
      case 45:
         jjmatchedKind = 72;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20040L);
      case 46:
         jjmatchedKind = 54;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000000L);
      case 47:
         jjmatchedKind = 74;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000L);
      case 58:
         return jjStopAtPos(0, 62);
      case 59:
         return jjStopAtPos(0, 52);
      case 60:
         jjmatchedKind = 57;
         return jjMoveStringLiteralDfa1_0(0x8000000000000000L, 0x1008004L);
      case 61:
         return jjStopAtPos(0, 56);
      case 62:
         jjmatchedKind = 58;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x6000001L);
      case 63:
         return jjStopAtPos(0, 61);
      case 64:
         jjmatchedKind = 55;
         return jjMoveStringLiteralDfa1_0(0x10000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 50);
      case 93:
         return jjStopAtPos(0, 51);
      case 94:
         jjmatchedKind = 77;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x180000000000L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000000000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000000000L);
      case 123:
         return jjStopAtPos(0, 48);
      case 124:
         jjmatchedKind = 76;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200008L);
      case 125:
         return jjStopAtPos(0, 49);
      case 126:
         return jjStopAtPos(0, 60);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active1 & 0x10L) != 0L)
            return jjStopAtPos(1, 68);
         break;
      case 43:
         if ((active1 & 0x20L) != 0L)
            return jjStopAtPos(1, 69);
         break;
      case 45:
         if ((active1 & 0x40L) != 0L)
            return jjStopAtPos(1, 70);
         break;
      case 46:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000000L);
      case 60:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000000L);
      case 61:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(1, 63);
         else if ((active1 & 0x1L) != 0L)
            return jjStopAtPos(1, 64);
         else if ((active1 & 0x2L) != 0L)
            return jjStopAtPos(1, 65);
         else if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(1, 80);
         else if ((active1 & 0x20000L) != 0L)
            return jjStopAtPos(1, 81);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(1, 82);
         else if ((active1 & 0x80000L) != 0L)
            return jjStopAtPos(1, 83);
         else if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         else if ((active1 & 0x200000L) != 0L)
            return jjStopAtPos(1, 85);
         else if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         break;
      case 62:
         if ((active1 & 0x4L) != 0L)
            return jjStopAtPos(1, 66);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x6000000L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x300000000000L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x480000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000L, active1, 0L);
      case 124:
         if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(1, 67);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x8000000L) != 0L)
            return jjStopAtPos(2, 91);
         break;
      case 61:
         if ((active1 & 0x1000000L) != 0L)
            return jjStopAtPos(2, 88);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(2, 89);
         break;
      case 62:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000000L);
      case 100:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000000L);
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100000000000L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000000L);
      case 121:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80000000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 40:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x180000000000L);
      case 61:
         if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(3, 90);
         break;
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000000000L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 41:
         if ((active1 & 0x80000000000L) != 0L)
            return jjStopAtPos(4, 107);
         else if ((active1 & 0x100000000000L) != 0L)
            return jjStopAtPos(4, 108);
         break;
      case 115:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(4, 28);
         break;
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x200000000000L);
      case 120:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x400000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStopAtPos(5, 110);
         break;
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(7, 109);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 261;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 128:
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 6);
                  else if (curChar == 39)
                     jjCheckNAddStates(7, 11);
                  else if (curChar == 34)
                     jjCheckNAddStates(12, 14);
                  else if (curChar == 46)
                     jjCheckNAdd(28);
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddTwoStates(25, 26);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddStates(15, 19);
                  }
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 24:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(25, 26);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(25, 26);
                  break;
               case 27:
                  if (curChar == 46)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(20, 22);
                  break;
               case 30:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(31, 32);
                  break;
               case 33:
                  if (curChar == 34)
                     jjCheckNAddStates(12, 14);
                  break;
               case 34:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 36:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 37:
                  if (curChar == 34 && kind > 45)
                     kind = 45;
                  break;
               case 38:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(23, 26);
                  break;
               case 39:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 40:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(39);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 6);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 29);
                  break;
               case 54:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(55);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(55, 32);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 58:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(59);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(59, 32);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 61:
                  if (curChar != 46)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(30, 32);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(30, 32);
                  break;
               case 64:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(65);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(65, 32);
                  break;
               case 170:
                  if (curChar == 39)
                     jjCheckNAddStates(7, 11);
                  break;
               case 171:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 172:
                  if (curChar == 39 && kind > 44)
                     kind = 44;
                  break;
               case 174:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 175:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(176, 172);
                  break;
               case 176:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 177:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 178:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(176);
                  break;
               case 179:
                  if ((0xffffff7fffffdbffL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 181:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 182:
                  if (curChar == 39 && kind > 45)
                     kind = 45;
                  break;
               case 183:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 39);
                  break;
               case 184:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 185:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 186:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(184);
                  break;
               case 244:
                  if (curChar != 48)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(15, 19);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(246, 26);
                  break;
               case 247:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(247, 26);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(40, 41);
                  break;
               case 250:
                  if (curChar == 46)
                     jjCheckNAdd(251);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(251, 252);
                  break;
               case 253:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(254);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(254, 32);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 257:
                  if (curChar == 46)
                     jjCheckNAdd(258);
                  break;
               case 259:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(260);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(260, 32);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 128:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  if ((0x1000000010L & l) != 0L)
                  {
                     if (kind > 18)
                        kind = 18;
                  }
                  break;
               case 125:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  if ((0x8000000080000L & l) != 0L)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  else if (curChar == 83)
                  {
                     if (kind > 94)
                        kind = 94;
                  }
                  else if (curChar == 115)
                  {
                     if (kind > 94)
                        kind = 94;
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  if (curChar == 78)
                  {
                     if (kind > 95)
                        kind = 95;
                  }
                  else if (curChar == 110)
                  {
                     if (kind > 95)
                        kind = 95;
                  }
                  break;
               case 188:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  else if (curChar == 64)
                     jjAddStates(45, 49);
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(50, 54);
                  else if ((0x100000001000L & l) != 0L)
                     jjAddStates(55, 56);
                  else if ((0x400000004L & l) != 0L)
                     jjAddStates(57, 58);
                  else if ((0x400000004000L & l) != 0L)
                     jjAddStates(59, 60);
                  else if ((0x800000008000L & l) != 0L)
                     jjAddStates(61, 62);
                  else if ((0x4000000040000L & l) != 0L)
                     jjAddStates(63, 64);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(65, 68);
                  else if ((0x80000000800000L & l) != 0L)
                     jjAddStates(69, 70);
                  else if ((0x1000000010L & l) != 0L)
                     jjAddStates(71, 72);
                  else if ((0x20000000200L & l) != 0L)
                     jjAddStates(73, 74);
                  else if ((0x8000000080000L & l) != 0L)
                     jjAddStates(75, 76);
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1;
                  if (curChar == 73)
                     jjCheckNAddStates(77, 80);
                  else if (curChar == 105)
                     jjCheckNAddStates(81, 84);
                  break;
               case 99:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 103)
                        kind = 103;
                     jjCheckNAdd(50);
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 69:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 87;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 84;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 80;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 73;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 1:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 3:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x2000000020L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x2000000020L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 14:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x200000002000L & l) != 0L && kind > 10)
                     kind = 10;
                  break;
               case 18:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 23:
                  if ((0x8000000080000L & l) != 0L && kind > 14)
                     kind = 14;
                  break;
               case 26:
                  if ((0x100000001000L & l) != 0L && kind > 35)
                     kind = 35;
                  break;
               case 29:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(85, 86);
                  break;
               case 32:
                  if ((0x5000000050L & l) != 0L && kind > 39)
                     kind = 39;
                  break;
               case 34:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 35:
                  if (curChar == 92)
                     jjAddStates(87, 89);
                  break;
               case 36:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 42:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 47:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0x8000000080000L & l) != 0L && kind > 102)
                     kind = 102;
                  break;
               case 49:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 50:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(50);
                  break;
               case 53:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(90, 91);
                  break;
               case 57:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(92, 93);
                  break;
               case 63:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(94, 95);
                  break;
               case 66:
                  if (curChar == 64)
                     jjAddStates(45, 49);
                  break;
               case 67:
                  if (curChar == 100 && kind > 29)
                     kind = 29;
                  break;
               case 68:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 70:
                  if (curChar == 115 && kind > 29)
                     kind = 29;
                  break;
               case 71:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 110 && kind > 29)
                     kind = 29;
                  break;
               case 76:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 101 && kind > 29)
                     kind = 29;
                  break;
               case 83:
                  if (curChar == 122)
                     jjCheckNAdd(82);
                  break;
               case 84:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 112)
                     jjCheckNAdd(82);
                  break;
               case 87:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(75, 76);
                  break;
               case 90:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 91:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 92:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if ((0x10000000100000L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 95:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 96:
                  if ((0x10000000100000L & l) != 0L && kind > 15)
                     kind = 15;
                  break;
               case 97:
                  if ((0x20000000200L & l) != 0L)
                     jjAddStates(73, 74);
                  break;
               case 100:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0x10000000100000L & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 103:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if ((0x800000008000L & l) != 0L && kind > 13)
                     kind = 13;
                  break;
               case 106:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(71, 72);
                  break;
               case 107:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 108:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 109:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 110:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 111:
                  if ((0x2000000020L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 112:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 113:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x800000008L & l) != 0L && kind > 27)
                     kind = 27;
                  break;
               case 115:
                  if ((0x80000000800000L & l) != 0L)
                     jjAddStates(69, 70);
                  break;
               case 116:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 119:
                  if ((0x2000000020L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 120:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 121:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 122:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 123:
                  if ((0x2000000020L & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 124:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(65, 68);
                  break;
               case 126:
                  if ((0x1000000010L & l) != 0L && kind > 16)
                     kind = 16;
                  break;
               case 127:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 129:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if ((0x800000008L & l) != 0L && kind > 25)
                     kind = 25;
                  break;
               case 131:
                  if ((0x8000000080000L & l) != 0L && kind > 26)
                     kind = 26;
                  break;
               case 132:
                  if ((0x4000000040000L & l) != 0L)
                     jjAddStates(63, 64);
                  break;
               case 133:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 135:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 136:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if ((0x2000000020L & l) != 0L && kind > 17)
                     kind = 17;
                  break;
               case 138:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 139:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 140:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 141:
                  if ((0x2000000020L & l) != 0L && kind > 24)
                     kind = 24;
                  break;
               case 142:
                  if ((0x800000008000L & l) != 0L)
                     jjAddStates(61, 62);
                  break;
               case 143:
                  if ((0x4000000040000L & l) != 0L && kind > 19)
                     kind = 19;
                  break;
               case 144:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 145:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 146:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 147:
                  if ((0x4000000040000L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 148:
                  if ((0x400000004000L & l) != 0L)
                     jjAddStates(59, 60);
                  break;
               case 149:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 150:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 151:
                  if ((0x100000001000L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 152:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0x10000000100000L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 154:
                  if ((0x400000004L & l) != 0L)
                     jjAddStates(57, 58);
                  break;
               case 155:
                  if ((0x200000002000000L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 156:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 157:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 158:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 159:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 160:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 161:
                  if ((0x400000004000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 162:
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(55, 56);
                  break;
               case 163:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 164:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 165:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 166:
                  if ((0x10000000100000L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 167:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 168:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 169:
                  if ((0x2000000020L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 171:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 173:
                  if (curChar == 92)
                     jjAddStates(96, 98);
                  break;
               case 174:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAdd(172);
                  break;
               case 179:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 180:
                  if (curChar == 92)
                     jjAddStates(99, 101);
                  break;
               case 181:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 187:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(50, 54);
                  break;
               case 189:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 190:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 191:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 192:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 193:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 194:
                  if ((0x8000000080000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 195:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 196:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 197:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 198:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 199:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 200:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 201:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 204:
                  if ((0x100000001000L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 205:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 206:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 207:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 208:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 209:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 210:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 211:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 212:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 213:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 214:
                  if ((0x200000002000000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 215:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 218:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 219:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 220:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 221:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 222:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 223:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 224:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 225:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 226:
                  if ((0x2000000020L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 227:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 228:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 229:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 230:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 231:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 232:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 233:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 234:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 235:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x10000000100000L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 238:
                  if (curChar == 105)
                     jjCheckNAddStates(81, 84);
                  break;
               case 239:
                  if (curChar == 115 && kind > 94)
                     kind = 94;
                  break;
               case 240:
                  if (curChar == 83 && kind > 94)
                     kind = 94;
                  break;
               case 241:
                  if (curChar == 110 && kind > 95)
                     kind = 95;
                  break;
               case 242:
                  if (curChar == 78 && kind > 95)
                     kind = 95;
                  break;
               case 243:
                  if (curChar == 73)
                     jjCheckNAddStates(77, 80);
                  break;
               case 245:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(246);
                  break;
               case 246:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(246, 26);
                  break;
               case 248:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(102, 103);
                  break;
               case 252:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(104, 105);
                  break;
               case 255:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(256);
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 258:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(106, 107);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(12, 14);
                  break;
               case 171:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 179:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(33, 35);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 261 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   52, 53, 32, 56, 57, 60, 61, 171, 173, 179, 180, 182, 34, 35, 37, 245,
   247, 26, 248, 255, 28, 29, 32, 34, 35, 39, 37, 52, 53, 32, 62, 63,
   32, 179, 180, 182, 179, 180, 184, 182, 249, 250, 256, 257, 258, 69, 74, 81,
   85, 88, 188, 195, 205, 215, 227, 163, 167, 155, 156, 149, 152, 143, 144, 133,
   138, 125, 127, 129, 131, 116, 120, 107, 112, 98, 103, 90, 95, 240, 239, 242,
   241, 239, 240, 241, 242, 30, 31, 36, 38, 40, 54, 55, 58, 59, 64, 65,
   174, 175, 177, 181, 183, 185, 251, 252, 253, 254, 259, 260,
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, "\100\164\150\151\163", null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, "\50", "\51", "\173", "\175",
"\133", "\135", "\73", "\54", "\56", "\100", "\75", "\74", "\76", "\41", "\176",
"\77", "\72", "\74\75", "\76\75", "\41\75", "\74\76", "\174\174", "\46\46", "\53\53",
"\55\55", "\53", "\55", "\52", "\57", "\46", "\174", "\136", "\45", "\74\74", "\53\75",
"\55\75", "\52\75", "\57\75", "\46\75", "\174\75", "\136\75", "\45\75", "\74\74\75",
"\76\76\75", "\76\76\76\75", "\56\56\56", null, null, null, null, null, null, null, null,
null, null, null, null, null, null, "\43", "\141\156\171\50\51",
"\141\154\154\50\51", "\143\154\165\163\164\145\162\72", "\151\156\144\145\170\72", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffff0883fffffe1L, 0x7cffffffffffL,
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L,
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[261];
private final int[] jjstateSet = new int[522];
protected char curChar;
/** Constructor. */
public OrientSqlTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public OrientSqlTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 261; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken()
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}