@Override
protected void searchInClasses() {
    final OClass cls = compiledFilter.getTargetClasses().keySet().iterator().next();
    if (searchForIndexes(cls))
        Orient.instance().getProfiler().updateCounter("Query.indexUsage", 1);
    else
        super.searchInClasses();
}||||||||@Override
protected void searchInClasses() {
    final OClass cls = compiledFilter.getTargetClasses().keySet().iterator().next();
    if (searchForIndexes(cls)) {
    // final OJVMProfiler profiler = Orient.instance().getProfiler();
    // profiler.updateCounter(profiler.getDatabaseMetrics(getDatabase().getName(), "query.indexUsed"), 1);
    } else
        super.searchInClasses();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(SuperExpr
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(IntegerLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(SuperExpr
					)
				)
			)
			(BlockStmt
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

