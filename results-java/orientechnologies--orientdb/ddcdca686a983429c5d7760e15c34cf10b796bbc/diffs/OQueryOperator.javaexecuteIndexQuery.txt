/**
 * Performs index query to calculate result of execution of given operator.
 * <p/>
 * Query that should be executed can be presented like: [[property0 = keyParam0] and [property1 = keyParam1] and] propertyN
 * operator keyParamN.
 * <p/>
 * It is supped that index which passed in as parameter is used to index properties listed above and responsibility of given
 * method execute query using given parameters.
 * <p/>
 * Multiple parameters are passed in to implement composite indexes support.
 *
 * @param index
 * Instance of index that will be used to calculate result of operator execution.
 * @param iOperationType
 * TODO
 * @param keyParams
 * Parameters of query is used to calculate query result.
 * @param fetchLimit
 * Maximum amount of items to be fetched, corresponds to LIMIT operator in SQL query.
 * @return Result of execution of given operator or {@code null} if given index can not be used to calculate operator result.
 */
public Object executeIndexQuery(OIndex<?> index, INDEX_OPERATION_TYPE iOperationType, final List<Object> keyParams, final int fetchLimit) {
    return null;
}||||||||/**
 * Performs index query to calculate result of execution of given operator.
 * <p/>
 * Query that should be executed can be presented like: [[property0 = keyParam0] and [property1 = keyParam1] and] propertyN
 * operator keyParamN.
 * <p/>
 * It is supped that index which passed in as parameter is used to index properties listed above and responsibility of given
 * method execute query using given parameters.
 * <p/>
 * Multiple parameters are passed in to implement composite indexes support.
 *
 * @param iContext
 * TODO
 * @param index
 * Instance of index that will be used to calculate result of operator execution.
 * @param iOperationType
 * TODO
 * @param keyParams
 * Parameters of query is used to calculate query result.
 * @param fetchLimit
 * Maximum amount of items to be fetched, corresponds to LIMIT operator in SQL query.
 *
 * @return Result of execution of given operator or {@code null} if given index can not be used to calculate operator result.
 */
public Object executeIndexQuery(OCommandContext iContext, OIndex<?> index, INDEX_OPERATION_TYPE iOperationType, final List<Object> keyParams, final int fetchLimit) {
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

