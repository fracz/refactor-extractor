public Object enqueueLocalExecution(final OAbstractReplicatedTask<? extends Object> iTask) {
    // MANAGE ORDER
    while (true) synchronized (executionQueue) {
        final Long last = executionQueue.get(iTask.getRunId());
        if (last != null && last < iTask.getOperationSerial() - 1) {
            try {
                // SLEEP UNTIL NEXT OPERATION
                ODistributedServerLog.debug(this, getLocalNodeId(), iTask.getNodeSource(), DIRECTION.NONE, "waiting for %d tasks in queue %s. current=%d my=%d", (iTask.getOperationSerial() - last - 1), iTask.getRunId(), last, iTask.getOperationSerial());
                executionQueue.wait(1000);
            } catch (InterruptedException e) {
            }
        } else
            break;
    }
    ODistributedThreadLocal.INSTANCE.set(iTask.getNodeSource());
    try {
        // EXECUTE IT LOCALLY
        return iTask.executeOnLocalNode();
    } finally {
        // SET LAST EXECUTION SERIAL
        synchronized (executionQueue) {
            executionQueue.put(iTask.getRunId(), iTask.getOperationSerial());
            executionQueue.notifyAll();
        }
        ODistributedThreadLocal.INSTANCE.set(null);
    }
}||||||||@Override
public Object enqueueLocalExecution(final OAbstractRemoteTask<? extends Object> iTask) throws Exception {
    // MANAGE ORDER
    while (true) synchronized (executionQueue) {
        final Long last = executionQueue.get(iTask.getRunId());
        if (last != null && last < iTask.getOperationSerial() - 1) {
            try {
                // SLEEP UNTIL NEXT OPERATION
                ODistributedServerLog.debug(this, getLocalNodeId(), iTask.getNodeSource(), DIRECTION.NONE, "waiting for %d tasks in queue %s. current=%d my=%d", (iTask.getOperationSerial() - last - 1), iTask.getRunId(), last, iTask.getOperationSerial());
                executionQueue.wait(1000);
            } catch (InterruptedException e) {
            }
        } else
            break;
    }
    ODistributedThreadLocal.INSTANCE.set(iTask.getNodeSource());
    try {
        // EXECUTE IT LOCALLY
        return iTask.executeOnLocalNode();
    } finally {
        // SET LAST EXECUTION SERIAL
        synchronized (executionQueue) {
            executionQueue.put(iTask.getRunId(), iTask.getOperationSerial());
            executionQueue.notifyAll();
        }
        ODistributedThreadLocal.INSTANCE.set(null);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(WhileStmt
			(SynchronizedStmt
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BooleanLiteralExpr
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(WhileStmt
			(SynchronizedStmt
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(BreakStmt
						)
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											StringLiteralExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
				)
				NameExpr
					SimpleName
			)
			(BooleanLiteralExpr
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

