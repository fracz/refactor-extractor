private void fetchValuesFromIndexCursor(OIndexCursor cursor, boolean evaluateRecords) {
    int needsToFetch;
    if (fetchLimit > 0)
        needsToFetch = fetchLimit + skip;
    else
        needsToFetch = -1;
    Entry<Object, OIdentifiable> entryRecord = cursor.next(needsToFetch);
    if (needsToFetch > 0)
        needsToFetch--;
    cursorLoop: while (entryRecord != null) {
        final OIdentifiable identifiable = entryRecord.getValue();
        final ORecord record = identifiable.getRecord();
        if (record instanceof ORecordSchemaAware<?>) {
            final ORecordSchemaAware<?> recordSchemaAware = (ORecordSchemaAware<?>) record;
            final Map<OClass, String> targetClasses = parsedTarget.getTargetClasses();
            if ((targetClasses != null) && (!targetClasses.isEmpty())) {
                for (OClass targetClass : targetClasses.keySet()) {
                    if (!targetClass.isSuperClassOf(recordSchemaAware.getSchemaClass()))
                        continue cursorLoop;
                }
            }
        }
        if (compiledFilter == null || !evaluateRecords || evaluateRecord(record)) {
            if (!handleResult(record, true))
                break;
        }
        entryRecord = cursor.next(needsToFetch);
        if (needsToFetch > 0)
            needsToFetch--;
    }
}||||||||private void fetchValuesFromIndexCursor(final OIndexCursor cursor, final boolean evaluateRecords) {
    int needsToFetch;
    if (fetchLimit > 0)
        needsToFetch = fetchLimit + skip;
    else
        needsToFetch = -1;
    cursor.setPrefetchSize(needsToFetch);
    fetchFromTarget(cursor, evaluateRecords);
// 
// Entry<Object, OIdentifiable> entryRecord = cursor.nextEntry();
// if (needsToFetch > 0)
// needsToFetch--;
// 
// while (entryRecord != null) {
// final OIdentifiable identifiable = entryRecord.getValue();
// final ORecord record = identifiable.getRecord();
// 
// if (!executeSearchRecord(record, evaluateRecords))
// // LIMIT REACHED
// break;
// 
// entryRecord = cursor.nextEntry();
// 
// if (needsToFetch > 0)
// needsToFetch--;
// }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
		)
		(LabeledStmt
			SimpleName
			(WhileStmt
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
												(WildcardType
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(EnclosedExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ForeachStmt
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ContinueStmt
													SimpleName
												)
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(VariableDeclarationExpr
											(VariableDeclarator
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

