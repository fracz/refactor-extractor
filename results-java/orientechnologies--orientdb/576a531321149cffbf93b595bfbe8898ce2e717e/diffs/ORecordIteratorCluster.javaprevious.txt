/**
 * Return the element at the current position and move backward the cursor to the previous position available.
 *
 * @return the previous record found, otherwise the NoSuchElementException exception is thrown when no more records are found.
 */
@Override
public REC previous() {
    checkDirection(false);
    final REC record = getRecord();
    // ITERATE UNTIL THE PREVIOUS GOOD RECORD
    while (hasPrevious()) {
        if (readCurrentRecord(record, -1) != null)
            // FOUND
            return record;
    }
    throw new NoSuchElementException();
}||||||||/**
 * Return the element at the current position and move backward the cursor to the previous position available.
 *
 * @return the previous record found, otherwise the NoSuchElementException exception is thrown when no more records are found.
 */
@SuppressWarnings("unchecked")
@Override
public REC previous() {
    checkDirection(false);
    final ORecordInternal<?> record = getRecord();
    // ITERATE UNTIL THE PREVIOUS GOOD RECORD
    while (hasPrevious()) {
        if (readCurrentRecord(record, -1) != null)
            // FOUND
            return (REC) record;
    }
    throw new NoSuchElementException();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
						)
						NullLiteralExpr
					)
					(ReturnStmt
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						LineComment
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(ThrowStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

