public boolean installDatabase(final boolean iStartup, final String databaseName, final ODocument config) {
    final ODistributedConfiguration cfg = getDatabaseConfiguration(databaseName);
    ODistributedServerLog.info(this, nodeName, null, DIRECTION.NONE, "Current node started as %s for database '%s'", cfg.getServerRole(nodeName), databaseName);
    final boolean backupDatabase = iStartup;
    final Set<String> configuredDatabases = serverInstance.getAvailableStorageNames().keySet();
    if (configuredDatabases.contains(databaseName)) {
        if (!backupDatabase)
            // HOT ALIGNMENT RUNNING, DON'T INSTALL THE DB FROM SCRATCH BUT RATHER LET TO THE NODE TO ALIGN BY READING THE QUEUE
            return false;
    }
    final ODistributedDatabaseImpl distrDatabase = messageService.registerDatabase(databaseName);
    // CREATE THE DISTRIBUTED QUEUE
    if (distrDatabase.getSyncConfiguration().isEmpty()) {
        return requestFullDatabase(databaseName, backupDatabase, distrDatabase);
    } else {
        try {
            // TRY WITH DELTA
            return requestDatabaseDelta(distrDatabase, databaseName);
        // return requestFullDatabase(databaseName, backupDatabase, distrDatabase);
        } catch (ODistributedDatabaseDeltaSyncException e) {
            // SWITCH TO FULL
            return requestFullDatabase(databaseName, backupDatabase, distrDatabase);
        }
    }
}||||||||public boolean installDatabase(final boolean iStartup, final String databaseName, final ODocument config) {
    final ODistributedConfiguration cfg = getDatabaseConfiguration(databaseName);
    ODistributedServerLog.info(this, nodeName, null, DIRECTION.NONE, "Current node started as %s for database '%s'", cfg.getServerRole(nodeName), databaseName);
    final Set<String> configuredDatabases = serverInstance.getAvailableStorageNames().keySet();
    if (!iStartup && configuredDatabases.contains(databaseName))
        return false;
    final ODistributedDatabaseImpl distrDatabase = messageService.registerDatabase(databaseName);
    // CREATE THE DISTRIBUTED QUEUE
    if (distrDatabase.getSyncConfiguration().isEmpty()) {
        return requestFullDatabase(databaseName, iStartup, distrDatabase);
    } else {
        try {
            // TRY WITH DELTA
            return requestDatabaseDelta(distrDatabase, databaseName);
        // return requestFullDatabase(databaseName, backupDatabase, distrDatabase);
        } catch (ODistributedDatabaseDeltaSyncException e) {
            // SWITCH TO FULL
            return requestFullDatabase(databaseName, iStartup, distrDatabase);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
				NullLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
						LineComment
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							LineComment
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				NameExpr
					SimpleName
				NullLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
							LineComment
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

