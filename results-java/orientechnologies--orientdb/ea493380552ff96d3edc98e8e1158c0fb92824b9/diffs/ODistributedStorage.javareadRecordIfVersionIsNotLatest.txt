@Override
public OStorageOperationResult<ORawBuffer> readRecordIfVersionIsNotLatest(final ORecordId rid, final String fetchPlan, final boolean ignoreCache, final int recordVersion) throws ORecordNotFoundException {
    try {
        final String clusterName = getClusterNameByRID(rid);
        final ODistributedConfiguration dbCfg = dManager.getDatabaseConfiguration(getName());
        final List<String> nodes = dbCfg.getServers(clusterName, null);
        final int availableNodes = dManager.getAvailableNodes(nodes, getName());
        // CHECK IF LOCAL NODE OWNS THE DATA AND READ-QUORUM = 1: GET IT LOCALLY BECAUSE IT'S FASTER
        if (nodes.isEmpty() || nodes.contains(dManager.getLocalNodeName()) && dbCfg.getReadQuorum(clusterName, availableNodes) <= 1) {
            // DON'T REPLICATE
            return (OStorageOperationResult<ORawBuffer>) ODistributedAbstractPlugin.runInDistributedMode(new Callable() {

                @Override
                public Object call() throws Exception {
                    return wrapped.readRecordIfVersionIsNotLatest(rid, fetchPlan, ignoreCache, recordVersion);
                }
            });
        }
        // DISTRIBUTE IT
        final Object result = dManager.sendRequest(getName(), Collections.singleton(clusterName), nodes, new OReadRecordIfNotLatestTask(rid, recordVersion), dManager.getNextMessageIdCounter(), EXECUTION_MODE.RESPONSE, null, null).getPayload();
        if (result instanceof ONeedRetryException)
            throw (ONeedRetryException) result;
        else if (result instanceof Exception)
            throw OException.wrapException(new ODistributedException("Error on execution distributed READ_RECORD"), (Exception) result);
        return new OStorageOperationResult<ORawBuffer>((ORawBuffer) result);
    } catch (ONeedRetryException e) {
        // PASS THROUGH
        throw e;
    } catch (HazelcastInstanceNotActiveException e) {
        throw new OOfflineNodeException("Hazelcast instance is not available");
    } catch (HazelcastException e) {
        throw new OOfflineNodeException("Hazelcast instance is not available");
    } catch (Exception e) {
        handleDistributedException("Cannot route READ_RECORD operation for %s to the distributed node", e, rid);
        // UNREACHABLE
        return null;
    }
}||||||||@Override
public OStorageOperationResult<ORawBuffer> readRecordIfVersionIsNotLatest(final ORecordId rid, final String fetchPlan, final boolean ignoreCache, final int recordVersion) throws ORecordNotFoundException {
    try {
        final String clusterName = getClusterNameByRID(rid);
        final ODistributedConfiguration dbCfg = distributedConfiguration;
        final List<String> nodes = dbCfg.getServers(clusterName, null);
        final int availableNodes = dManager.getAvailableNodes(nodes, getName());
        // CHECK IF LOCAL NODE OWNS THE DATA AND READ-QUORUM = 1: GET IT LOCALLY BECAUSE IT'S FASTER
        if (nodes.isEmpty() || nodes.contains(dManager.getLocalNodeName()) && dbCfg.getReadQuorum(clusterName, availableNodes) <= 1) {
            // DON'T REPLICATE
            return (OStorageOperationResult<ORawBuffer>) OScenarioThreadLocal.executeAsDistributed(new Callable() {

                @Override
                public Object call() throws Exception {
                    return wrapped.readRecordIfVersionIsNotLatest(rid, fetchPlan, ignoreCache, recordVersion);
                }
            });
        }
        // DISTRIBUTE IT
        final Object result = dManager.sendRequest(getName(), Collections.singleton(clusterName), nodes, new OReadRecordIfNotLatestTask(rid, recordVersion), dManager.getNextMessageIdCounter(), EXECUTION_MODE.RESPONSE, null, null).getPayload();
        if (result instanceof ONeedRetryException)
            throw (ONeedRetryException) result;
        else if (result instanceof Exception)
            throw OException.wrapException(new ODistributedException("Error on execution distributed READ_RECORD"), (Exception) result);
        return new OStorageOperationResult<ORawBuffer>((ORawBuffer) result);
    } catch (ONeedRetryException e) {
        // PASS THROUGH
        throw e;
    } catch (HazelcastInstanceNotActiveException e) {
        throw new OOfflineNodeException("Hazelcast instance is not available");
    } catch (HazelcastException e) {
        throw new OOfflineNodeException("Hazelcast instance is not available");
    } catch (Exception e) {
        handleDistributedException("Cannot route READ_RECORD operation for %s to the distributed node", e, rid);
        // UNREACHABLE
        return null;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ReturnStmt
						NullLiteralExpr
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(CastExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(ObjectCreationExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ThrowStmt
							(MethodCallExpr
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ThrowStmt
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ReturnStmt
						NullLiteralExpr
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(CastExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(ObjectCreationExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ThrowStmt
							(MethodCallExpr
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ThrowStmt
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(ObjectCreationExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

