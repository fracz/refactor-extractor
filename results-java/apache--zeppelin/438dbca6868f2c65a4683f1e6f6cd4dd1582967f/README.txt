commit 438dbca6868f2c65a4683f1e6f6cd4dd1582967f
Author: Alex Goodman <agoodm@users.noreply.github.com>
Date:   Sat Nov 5 23:03:04 2016 -0700

    ZEPPELIN-1345 - Create a custom matplotlib backend that natively supports inline plotting in a python interpreter cell

    ### What is this PR for?

    This PR is the first of two major steps needed to improve matplotlib integration in Zeppelin (ZEPPELIN-1344). The latter, which is a plotting backend with fully interactive tools enabled, will be done afterwards in a separate PR. This PR specifically for automatically displaying output from calls to matplotlib plotting functions inline with each paragraph. Thanks to the addition of post-execute hooks (ZEPPELIN-1423), there is no need to call any `show()` function to display an inline plot, just like in Jupyter.
    ### What type of PR is it?

    Improvement
    ### Todos

    The main code has been written and anyone who reads this is encouraged to test it, but there are a few minor todos:
    - [x] - Add unit tests
    - [x] - Add documentation
    - [x] - Add screenshot showing iterative plotting with angular mode
    ### What is the Jira issue?

    [ZEPPELIN-1345](https://issues.apache.org/jira/browse/ZEPPELIN-1345)
    ### How should this be tested?

    In a pyspark or python paragraph, enter and run

    ``` python
    import matplotlib.pyplot as plt
    plt.plot([1, 2, 3])
    ```

    The plot should be displayed automatically without calling any `show()` function whatsoever. A special method called `configure_mpl()` can also be used to modify the inline plotting behavior. For example,

    ``` python
    z.configure_mpl(close=False, angular=True)
    plt.plot([1, 2, 3])
    ```

    allows for iterative updates to the plot provided you have PY4J installed for your python installation (which of course is always the case if you use pypsark). To clarify, this feature only currently works with pyspark (not python as there are no `angularBind()` and `angularUnbind()` methods yet). Doing something like:

    ```
    plt.plot([3, 2, 1])
    ```

    will update the plot that was generated by the previous paragraph by leveraging Zeppelin's Angular Display System. However, by setting `close=False`, matplotlib will no longer automatically close figures so it is now up to the user to explicitly close each figure instance they create. There's quite a bit more options for `z.configure_mpl()`, but I will save that discussion for the documentation.
    ### Screenshots (if appropriate)
    ![img](http://i.imgur.com/e1xHKnV.gif)

    ### Questions:
    - Does the licenses files need update? No
    - Is there breaking changes for older versions? No
    - Does this needs documentation? Yes

    Author: Alex Goodman <agoodm@users.noreply.github.com>

    Closes #1534 from agoodm/ZEPPELIN-1345 and squashes the following commits:

    9ef6ff7 [Alex Goodman] Move mpl backend files to /interpreter
    24f89c6 [Alex Goodman] Catch potential NullPointerExceptions from hook registry
    bdb584e [Alex Goodman] Make sure expressions are printed when no plots are shown
    22b6fe4 [Alex Goodman] Remove unused variable
    d3d1aa0 [Alex Goodman] Fix CI test failure
    c90d204 [Alex Goodman] Update spark.md
    bcf0bf3 [Alex Goodman] Update python.md for new matplotlib integration
    c9b65a5 [Alex Goodman] Add iterative plotting example image
    8029a05 [Alex Goodman] Update python/README.md
    f2d9e86 [Alex Goodman] Exclude tests are excluded in python/pom.xml
    86b1c90 [Alex Goodman] Fix tutorial notebook not loading
    c37b00f [Alex Goodman] Fix legend in tutorial notebook
    a321d79 [Alex Goodman] Update python.md
    82350e3 [Alex Goodman] Update matplotlib tutorial notebook
    9792f97 [Alex Goodman] Add unit tests
    8b9b973 [Alex Goodman] Fix NullPointerExceptions in unit tests
    82135ad [Alex Goodman] Removed unused variable
    f9c9498 [Alex Goodman] Added support for Angular Display System
    edf750a [Alex Goodman] Add new matplotlib backend for python/pyspark interpreters