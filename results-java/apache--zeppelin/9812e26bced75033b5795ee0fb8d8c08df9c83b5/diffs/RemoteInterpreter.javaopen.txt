@Override
public void open() {
    synchronized (this) {
        if (!isOpened) {
            // also see method Interpreter.getInterpreterInTheSameSessionByClassName
            for (Interpreter interpreter : getInterpreterGroup().getOrCreateSession(userName, sessionId)) {
                ((RemoteInterpreter) interpreter).internal_create();
            }
            interpreterProcess.callRemoteFunction(new RemoteInterpreterProcess.RemoteFunction<Void>() {

                @Override
                public Void call(Client client) throws Exception {
                    LOGGER.info("Open RemoteInterpreter {}", getClassName());
                    // Push angular object loaded from JSON file to remote interpreter
                    synchronized (getInterpreterGroup()) {
                        if (!getInterpreterGroup().isAngularRegistryPushed()) {
                            pushAngularObjectRegistryToRemote(client);
                            getInterpreterGroup().setAngularRegistryPushed(true);
                        }
                    }
                    return null;
                }
            });
            isOpened = true;
        }
    }
}||||||||@Override
public void open() throws InterpreterException {
    synchronized (this) {
        if (!isOpened) {
            // also see method Interpreter.getInterpreterInTheSameSessionByClassName
            for (Interpreter interpreter : getInterpreterGroup().getOrCreateSession(userName, sessionId)) {
                try {
                    ((RemoteInterpreter) interpreter).internal_create();
                } catch (IOException e) {
                    throw new InterpreterException(e);
                }
            }
            interpreterProcess.callRemoteFunction(new RemoteInterpreterProcess.RemoteFunction<Void>() {

                @Override
                public Void call(Client client) throws Exception {
                    LOGGER.info("Open RemoteInterpreter {}", getClassName());
                    // Push angular object loaded from JSON file to remote interpreter
                    synchronized (getInterpreterGroup()) {
                        if (!getInterpreterGroup().isAngularRegistryPushed()) {
                            pushAngularObjectRegistryToRemote(client);
                            getInterpreterGroup().setAngularRegistryPushed(true);
                        }
                    }
                    return null;
                }
            });
            isOpened = true;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(SynchronizedStmt
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	(BooleanLiteralExpr
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
												)
												(MethodCallExpr
													SimpleName
												)
												LineComment
											)
											(ReturnStmt
												NullLiteralExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
					)
				)
			)
			(ThisExpr
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(EnclosedExpr
													(CastExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(SynchronizedStmt
												(BlockStmt
													(IfStmt
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	(BooleanLiteralExpr
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
												)
												(MethodCallExpr
													SimpleName
												)
												LineComment
											)
											(ReturnStmt
												NullLiteralExpr
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
					)
				)
			)
			(ThisExpr
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

