@Test
public void testAngularDisplay() throws Exception {
    if (!endToEndTestEnabled()) {
        return;
    }
    try {
        createNewNote();
        // wait for first paragraph's " READY " status text
        waitForParagraph(1, "READY");
        /*
       * print angular template
       * %angular <div id='angularTestButton' ng-click='myVar=myVar+1'>BindingTest_{{myVar}}_</div>
       */
        setTextOfParagraph(1, "println(\"%angular <div id=\\'angularTestButton\\' ng-click=\\'myVar=myVar+1\\'>BindingTest_{{myVar}}_</div>\")");
        runParagraph(1);
        waitForParagraph(1, "FINISHED");
        // check expected text
        waitForText("BindingTest__", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Bind variable
       * z.angularBind("myVar", 1)
       */
        assertEquals(1, driver.findElements(By.xpath(getParagraphXPath(2) + "//textarea")).size());
        setTextOfParagraph(2, "z.angularBind(\"myVar\", 1)");
        runParagraph(2);
        waitForParagraph(2, "FINISHED");
        // check expected text
        waitForText("BindingTest_1_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * print variable
       * print("myVar="+z.angular("myVar"))
       */
        setTextOfParagraph(3, "print(\"myVar=\"+z.angular(\"myVar\"))");
        runParagraph(3);
        waitForParagraph(3, "FINISHED");
        // check expected text
        waitForText("myVar=1", By.xpath(getParagraphXPath(3) + "//div[contains(@id,\"_text\") and @class=\"text\"]"));
        /*
       * Click element
       */
        driver.findElement(By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]")).click();
        // check expected text
        waitForText("BindingTest_2_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Register watcher
       * z.angularWatch("myVar", (before:Object, after:Object, context:org.apache.zeppelin.interpreter.InterpreterContext) => {
       *   z.run(2, context)
       * }
       */
        setTextOfParagraph(4, "z.angularWatch(\"myVar\", (before:Object, after:Object, context:org.apache.zeppelin.interpreter.InterpreterContext)=>{ z.run(2, context)})");
        runParagraph(4);
        waitForParagraph(4, "FINISHED");
        /*
       * Click element, again and see watcher works
       */
        driver.findElement(By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]")).click();
        // check expected text
        waitForText("BindingTest_3_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        waitForParagraph(3, "FINISHED");
        // check expected text by watcher
        waitForText("myVar=3", By.xpath(getParagraphXPath(3) + "//div[contains(@id,\"_text\") and @class=\"text\"]"));
        /*
       * Unbind
       * z.angularUnbind("myVar")
       */
        setTextOfParagraph(5, "z.angularUnbind(\"myVar\")");
        runParagraph(5);
        waitForParagraph(5, "FINISHED");
        // check expected text
        waitForText("BindingTest__", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Bind again and see rebind works.
       */
        runParagraph(2);
        waitForParagraph(2, "FINISHED");
        // check expected text
        waitForText("BindingTest_1_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        driver.findElement(By.xpath(".//*[@id='main']//button[@ng-click='removeNote(note.id)']")).sendKeys(Keys.ENTER);
        sleep(1000, true);
        driver.findElement(By.xpath("//div[@class='modal-dialog'][contains(.,'delete this notebook')]" + "//div[@class='modal-footer']//button[contains(.,'OK')]")).click();
        sleep(100, true);
        LOG.info("testCreateNotebook Test executed");
    } catch (Exception e) {
        handleException("Exception in ZeppelinIT while testAngularDisplay ", e);
    }
}||||||||@Test
public void testAngularDisplay() throws Exception {
    if (!endToEndTestEnabled()) {
        return;
    }
    try {
        createNewNote();
        // wait for first paragraph's " READY " status text
        waitForParagraph(1, "READY");
        /*
       * print angular template
       * %angular <div id='angularTestButton' ng-click='myVar=myVar+1'>BindingTest_{{myVar}}_</div>
       */
        setTextOfParagraph(1, "println(\"%angular <div id=\\'angularTestButton\\' ng-click=\\'myVar=myVar+1\\'>BindingTest_{{myVar}}_</div>\")");
        runParagraph(1);
        waitForParagraph(1, "FINISHED");
        // check expected text
        waitForText("BindingTest__", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Bind variable
       * z.angularBind("myVar", 1)
       */
        assertEquals(1, driver.findElements(By.xpath(getParagraphXPath(2) + "//textarea")).size());
        setTextOfParagraph(2, "z.angularBind(\"myVar\", 1)");
        runParagraph(2);
        waitForParagraph(2, "FINISHED");
        // check expected text
        waitForText("BindingTest_1_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * print variable
       * print("myVar="+z.angular("myVar"))
       */
        setTextOfParagraph(3, "print(\"myVar=\"+z.angular(\"myVar\"))");
        runParagraph(3);
        waitForParagraph(3, "FINISHED");
        // check expected text
        waitForText("myVar=1", By.xpath(getParagraphXPath(3) + "//div[contains(@id,\"_text\") and @class=\"text\"]"));
        /*
       * Click element
       */
        driver.findElement(By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]")).click();
        // check expected text
        waitForText("BindingTest_2_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Register watcher
       * z.angularWatch("myVar", (before:Object, after:Object, context:org.apache.zeppelin.interpreter.InterpreterContext) => {
       *   z.run(2, context)
       * }
       */
        setTextOfParagraph(4, "z.angularWatch(\"myVar\", (before:Object, after:Object, context:org.apache.zeppelin.interpreter.InterpreterContext)=>{ z.run(2, context)})");
        runParagraph(4);
        waitForParagraph(4, "FINISHED");
        /*
       * Click element, again and see watcher works
       */
        driver.findElement(By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]")).click();
        // check expected text
        waitForText("BindingTest_3_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        waitForParagraph(3, "FINISHED");
        // check expected text by watcher
        waitForText("myVar=3", By.xpath(getParagraphXPath(3) + "//div[contains(@id,\"_text\") and @class=\"text\"]"));
        /*
       * Unbind
       * z.angularUnbind("myVar")
       */
        setTextOfParagraph(5, "z.angularUnbind(\"myVar\")");
        runParagraph(5);
        waitForParagraph(5, "FINISHED");
        // check expected text
        waitForText("BindingTest__", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        /*
       * Bind again and see rebind works.
       */
        runParagraph(2);
        waitForParagraph(2, "FINISHED");
        // check expected text
        waitForText("BindingTest_1_", By.xpath(getParagraphXPath(1) + "//div[@id=\"angularTestButton\"]"));
        driver.findElement(By.xpath(".//*[@id='main']//button[@ng-click='removeNote(note.id)']")).sendKeys(Keys.ENTER);
        ZeppelinITUtils.sleep(1000, true);
        driver.findElement(By.xpath("//div[@class='modal-dialog'][contains(.,'delete this notebook')]" + "//div[@class='modal-footer']//button[contains(.,'OK')]")).click();
        ZeppelinITUtils.sleep(100, true);
        LOG.info("testCreateNotebook Test executed");
    } catch (Exception e) {
        handleException("Exception in ZeppelinIT while testAngularDisplay ", e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(BinaryExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(BinaryExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
					(BlockComment
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						StringLiteralExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

