/**
 * {@inheritDoc}. <p/>
 * Checks whether the IP should even be paid attention to,
 * then does a reverse DNS lookup, and if it matches the supplied pattern, performs SPNEGO
 * else skips the process.
 */
@Override
protected boolean shouldDoSpnego() {
    if (this.ipsToCheckPattern != null && !shouldCheckIp()) {
        return false;
    }
    final String hostName = getRemoteHostName();
    logger.debug("Retrieved host name for the remote ip is {}", hostName);
    return this.hostNamePatternString.matcher(hostName).find();
}||||||||/**
 * {@inheritDoc}. <p/>
 * Checks whether the IP should even be paid attention to,
 * then does a reverse DNS lookup, and if it matches the supplied pattern, performs SPNEGO
 * else skips the process.
 */
@Override
protected boolean shouldDoSpnego() {
    if (!(ipPatternCanBeChecked() && ipPatternMatches())) {
        return false;
    }
    final String hostName = getRemoteHostName();
    logger.debug("Retrieved host name for the remote ip is {}", hostName);
    return this.hostNamePatternString.matcher(hostName).find();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(EnclosedExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

