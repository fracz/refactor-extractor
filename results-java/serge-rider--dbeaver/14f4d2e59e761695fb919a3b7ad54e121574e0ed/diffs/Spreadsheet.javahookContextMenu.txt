private void hookContextMenu() {
    MenuManager menuMgr = new MenuManager();
    Menu menu = menuMgr.createContextMenu(grid);
    menuMgr.addMenuListener(new IMenuListener() {

        @Override
        public void menuAboutToShow(IMenuManager manager) {
            /*
                IAction copyAction = new Action("Copy selection") {
                    public void run()
                    {
                        copySelectionToClipboard(false);
                    }
                };
                copyAction.setEnabled(grid.getCellSelectionCount() > 0);
                copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);

                IAction copySpecialAction = new Action("Copy selection with header") {
                    public void run()
                    {
                        copySelectionToClipboard(true);
                    }
                };
                copySpecialAction.setEnabled(grid.getCellSelectionCount() > 0);
                copySpecialAction.setActionDefinitionId(ICommandIds.CMD_COPY_SPECIAL);

                IAction selectAllAction = new Action("Select All") {
                    public void run()
                    {
                        grid.selectAll();
                    }
                };
                selectAllAction.setEnabled(grid.getCellSelectionCount() > 0);
                selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);

                manager.add(copyAction);
                manager.add(copySpecialAction);
                manager.add(selectAllAction);
*/
            manager.add(new GroupMarker(IWorkbenchActionConstants.MB_ADDITIONS));
            // Let controlles to provide it's own menu items
            spreadsheetController.fillContextMenu(grid.getFocusCell(), manager);
        }
    });
    menuMgr.setRemoveAllWhenShown(true);
    grid.setMenu(menu);
    site.registerContextMenu(menuMgr, selectionProvider);
}||||||||private void hookContextMenu() {
    MenuManager menuMgr = new MenuManager();
    Menu menu = menuMgr.createContextMenu(this);
    menuMgr.addMenuListener(new IMenuListener() {

        @Override
        public void menuAboutToShow(IMenuManager manager) {
            manager.add(new GroupMarker(IWorkbenchActionConstants.MB_ADDITIONS));
            // Let controlles to provide it's own menu items
            spreadsheetController.fillContextMenu(getFocusCell(), manager);
        }
    });
    menuMgr.setRemoveAllWhenShown(true);
    super.setMenu(menu);
    site.registerContextMenu(menuMgr, selectionProvider);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockComment
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

