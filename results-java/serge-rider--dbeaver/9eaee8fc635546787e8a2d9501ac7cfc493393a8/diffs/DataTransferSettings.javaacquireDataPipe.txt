public synchronized DataTransferPipe acquireDataPipe() {
    if (curPipeNum >= dataPipes.size()) {
        if (!folderOpened && openFolderOnFinish) {
            // Last one
            folderOpened = true;
            DBeaverUI.getDisplay().asyncExec(new Runnable() {

                @Override
                public void run() {
                    RuntimeUtils.launchProgram(outputFolder);
                }
            });
        }
        return null;
    }
    DataTransferPipe result = dataPipes.get(curPipeNum);
    curPipeNum++;
    return result;
}||||||||public synchronized DataTransferPipe acquireDataPipe() {
    /*
        if (curPipeNum >= dataPipes.size()) {
            if (!folderOpened && openFolderOnFinish) {
                // Last one
                folderOpened = true;
                DBeaverUI.getDisplay().asyncExec(new Runnable() {
                    @Override
                    public void run() {
                        RuntimeUtils.launchProgram(outputFolder);
                    }
                });
            }
            return null;
        }
*/
    DataTransferPipe result = dataPipes.get(curPipeNum);
    curPipeNum++;
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

