private void processQuery(final List<SQLStatementInfo> queries) {
    if (queries.isEmpty()) {
        // Nothing to process
        return;
    }
    if (curJobRunning) {
        UIUtils.showErrorDialog(getSite().getShell(), CoreMessages.editors_sql_error_cant_execute_query_title, CoreMessages.editors_sql_error_cant_execute_query_message);
        return;
    }
    try {
        checkSession();
    } catch (DBException ex) {
        this.setStatus(ex.getMessage(), true);
        UIUtils.showErrorDialog(getSite().getShell(), CoreMessages.editors_sql_error_cant_obtain_session, ex.getMessage());
        return;
    }
    // Prepare execution job
    {
        final ITextSelection originalSelection = (ITextSelection) getSelectionProvider().getSelection();
        final boolean isSingleQuery = (queries.size() == 1);
        final SQLQueryJob job = new SQLQueryJob(isSingleQuery ? CoreMessages.editors_sql_job_execute_query : CoreMessages.editors_sql_job_execute_script, this, queries, resultsView.getDataReceiver());
        job.addQueryListener(new ISQLQueryListener() {

            private long lastUIUpdateTime = -1l;

            @Override
            public void onStartJob() {
                curJobRunning = true;
                if (!isSingleQuery) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            sashForm.setMaximizedControl(editorControl);
                        }
                    });
                }
            }

            @Override
            public void onStartQuery(final SQLStatementInfo query) {
                final long curTime = System.currentTimeMillis();
                if (lastUIUpdateTime <= 0 || (curTime - lastUIUpdateTime >= SCRIPT_UI_UPDATE_PERIOD)) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            selectAndReveal(query.getOffset(), query.getLength());
                            setStatus(query.getQuery(), false);
                        }
                    });
                    lastUIUpdateTime = System.currentTimeMillis();
                }
            }

            @Override
            public void onEndQuery(final SQLQueryResult result) {
                if (isDisposed()) {
                    return;
                }
                if (isSingleQuery) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            if (result.getError() == null) {
                                if (result.getRowCount() != null) {
                                // No status message for selected rows - this info is set by RS viewer itself
                                /*
                                        status = result.getRowCount() + " row(s) fetched";
                                        if (result.getRowOffset() != null) {
                                            status += " (" + result.getRowOffset() + " - " + (result.getRowOffset() + result.getRowCount()) + ")";
                                        }
    */
                                } else if (result.getUpdateCount() != null) {
                                    if (result.getUpdateCount() == 0) {
                                        setStatus(CoreMessages.editors_sql_status_statement_executed_no_rows_updated, false);
                                    } else {
                                        setStatus(String.valueOf(result.getUpdateCount()) + CoreMessages.editors_sql_status_rows_updated, false);
                                    }
                                } else {
                                    setStatus(CoreMessages.editors_sql_status_statement_executed, false);
                                }
                                resultsView.setExecutionTime(result.getQueryTime());
                            } else {
                                setStatus(result.getError().getMessage(), true);
                            }
                            if (queries.size() < 2) {
                                getSelectionProvider().setSelection(originalSelection);
                            }
                            if (result.getQueryTime() > 0) {
                                DBeaverUI.taskFinished();
                            }
                        }
                    });
                }
            }

            @Override
            public void onEndJob(final boolean hasErrors) {
                curJobRunning = false;
                if (isDisposed()) {
                    return;
                }
                UIUtils.runInUI(null, new Runnable() {

                    @Override
                    public void run() {
                        if (!hasErrors && queries.size() > 1) {
                            getSelectionProvider().setSelection(originalSelection);
                        }
                        if (!isSingleQuery) {
                            sashForm.setMaximizedControl(null);
                        }
                    }
                });
            }
        });
        closeJob();
        if (isSingleQuery) {
            curJob = job;
            resultsView.refresh();
        } else {
            job.schedule();
        }
    }
}||||||||private void processQuery(final List<SQLStatementInfo> queries) {
    if (queries.isEmpty()) {
        // Nothing to process
        return;
    }
    if (curJobRunning) {
        UIUtils.showErrorDialog(getSite().getShell(), CoreMessages.editors_sql_error_cant_execute_query_title, CoreMessages.editors_sql_error_cant_execute_query_message);
        return;
    }
    try {
        checkSession();
    } catch (DBException ex) {
        this.setStatus(ex.getMessage(), true);
        UIUtils.showErrorDialog(getSite().getShell(), CoreMessages.editors_sql_error_cant_obtain_session, ex.getMessage());
        return;
    }
    // Prepare execution job
    {
        final ITextSelection originalSelection = (ITextSelection) getSelectionProvider().getSelection();
        final boolean isSingleQuery = (queries.size() == 1);
        final SQLQueryJob job = new SQLQueryJob(isSingleQuery ? CoreMessages.editors_sql_job_execute_query : CoreMessages.editors_sql_job_execute_script, this, queries, resultsView.getDataReceiver());
        job.addQueryListener(new ISQLQueryListener() {

            private long lastUIUpdateTime = -1l;

            @Override
            public void onStartJob() {
                curJobRunning = true;
                if (!isSingleQuery) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            sashForm.setMaximizedControl(editorControl);
                        }
                    });
                }
            }

            @Override
            public void onStartQuery(final SQLStatementInfo query) {
                final long curTime = System.currentTimeMillis();
                if (lastUIUpdateTime <= 0 || (curTime - lastUIUpdateTime >= SCRIPT_UI_UPDATE_PERIOD)) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            selectAndReveal(query.getOffset(), query.getLength());
                            setStatus(query.getQuery(), false);
                        }
                    });
                    lastUIUpdateTime = System.currentTimeMillis();
                }
            }

            @Override
            public void onEndQuery(final SQLQueryResult result) {
                if (isDisposed()) {
                    return;
                }
                if (isSingleQuery) {
                    UIUtils.runInUI(null, new Runnable() {

                        @Override
                        public void run() {
                            if (!result.hasError()) {
                                if (result.getRowCount() != null) {
                                // No status message for selected rows - this info is set by RS viewer itself
                                /*
                                        status = result.getRowCount() + " row(s) fetched";
                                        if (result.getRowOffset() != null) {
                                            status += " (" + result.getRowOffset() + " - " + (result.getRowOffset() + result.getRowCount()) + ")";
                                        }
    */
                                } else if (result.getUpdateCount() != null) {
                                    if (result.getUpdateCount() == 0) {
                                        setStatus(CoreMessages.editors_sql_status_statement_executed_no_rows_updated, false);
                                    } else {
                                        setStatus(String.valueOf(result.getUpdateCount()) + CoreMessages.editors_sql_status_rows_updated, false);
                                    }
                                } else {
                                    setStatus(CoreMessages.editors_sql_status_statement_executed, false);
                                }
                                resultsView.setExecutionTime(result.getQueryTime());
                            } else {
                                setStatus(result.getError().getMessage(), true);
                            }
                            if (queries.size() < 2) {
                                getSelectionProvider().setSelection(originalSelection);
                            }
                            if (result.getQueryTime() > DBeaverCore.getGlobalPreferenceStore().getLong(PrefConstants.AGENT_LONG_OPERATION_TIMEOUT) * 1000) {
                                DBeaverUI.notifyAgent("Query completed" + ContentUtils.getDefaultLineSeparator() + CommonUtils.truncateString(result.getStatement().getQuery(), 200), !result.hasError() ? IStatus.INFO : IStatus.ERROR);
                            }
                        }
                    });
                }
            }

            @Override
            public void onEndJob(final boolean hasErrors) {
                curJobRunning = false;
                if (isDisposed()) {
                    return;
                }
                UIUtils.runInUI(null, new Runnable() {

                    @Override
                    public void run() {
                        if (!hasErrors && queries.size() > 1) {
                            getSelectionProvider().setSelection(originalSelection);
                        }
                        if (!isSingleQuery) {
                            sashForm.setMaximizedControl(null);
                        }
                    }
                });
            }
        });
        closeJob();
        if (isSingleQuery) {
            curJob = job;
            resultsView.refresh();
        } else {
            job.schedule();
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BooleanLiteralExpr
							)
							SimpleName
							(ThisExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(CastExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(ObjectCreationExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ThisExpr
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								(UnaryExpr
									(LongLiteralExpr
									)
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BooleanLiteralExpr
																	)
																	SimpleName
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	NullLiteralExpr
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BooleanLiteralExpr
																			)
																			SimpleName
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(BinaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NullLiteralExpr
																		)
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(BooleanLiteralExpr
																						)
																						SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(IfStmt
																					(BinaryExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(IntegerLiteralExpr
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(BinaryExpr
																									(MethodCallExpr
																										(MethodCallExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																									(FieldAccessExpr
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								(BooleanLiteralExpr
																								)
																								SimpleName
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								(BooleanLiteralExpr
																								)
																								SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																		(BlockStmt
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NullLiteralExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
													(IfStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NullLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
			(IfStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BooleanLiteralExpr
							)
							SimpleName
							(ThisExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(CastExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(ObjectCreationExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ThisExpr
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								(UnaryExpr
									(LongLiteralExpr
									)
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BooleanLiteralExpr
																	)
																	SimpleName
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NullLiteralExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(BooleanLiteralExpr
																			)
																			SimpleName
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(BinaryExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			NullLiteralExpr
																		)
																		(IfStmt
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(MethodCallExpr
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(BooleanLiteralExpr
																						)
																						SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(IfStmt
																					(BinaryExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(IntegerLiteralExpr
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(BinaryExpr
																									(MethodCallExpr
																										(MethodCallExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																									(FieldAccessExpr
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								(BooleanLiteralExpr
																								)
																								SimpleName
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(FieldAccessExpr
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								(BooleanLiteralExpr
																								)
																								SimpleName
																							)
																						)
																					)
																				)
																			)
																		)
																		(BlockStmt
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		(MethodCallExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(IntegerLiteralExpr
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(MethodCallExpr
																					(MethodCallExpr
																						SimpleName
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ConditionalExpr
																				(UnaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(FieldAccessExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NullLiteralExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
													(IfStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NullLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
			(IfStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

