/**
 * Returns one of the keyword constants or <code>TokenIDENT</code> for a scanned identifier.
 *
 * @param s a scanned identifier
 * @return one of the constants defined in {@link SQLIndentSymbols}
 */
private int getToken(String s) {
    assert (s != null);
    switch(s.length()) {
        case 3:
            if ("end".equals(s)) {
                return Tokenend;
            }
            if ("END".equalsIgnoreCase(s)) {
                return TokenEND;
            }
        case 5:
            if ("begin".equals(s)) {
                return Tokenbegin;
            }
            if ("BEGIN".equalsIgnoreCase(s)) {
                return TokenBEGIN;
            }
            break;
    }
    return TokenOTHER;
}||||||||/**
 * Returns one of the keyword constants or <code>TokenIDENT</code> for a scanned identifier.
 *
 * @param s a scanned identifier
 * @return one of the constants defined in {@link SQLIndentSymbols}
 */
private int getToken(String s) {
    assert (s != null);
    switch(s.length()) {
        case 3:
            if ("end".equals(s)) {
                return Tokenend;
            }
            if ("END".equalsIgnoreCase(s)) {
                return TokenEND;
            }
            break;
        case 5:
            if ("begin".equals(s)) {
                return Tokenbegin;
            }
            if ("BEGIN".equalsIgnoreCase(s)) {
                return TokenBEGIN;
            }
            break;
    }
    final DBPKeywordType keywordType = syntaxManager.getDialect().getKeywordType(s);
    if (keywordType == DBPKeywordType.KEYWORD) {
        return TokenKeyword;
    }
    // }
    return TokenOTHER;
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(EnclosedExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(EnclosedExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

