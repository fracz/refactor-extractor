@Override
protected IDocument createDocument(Object element) throws CoreException {
    final Document document = new Document();
    if (sourceText == null) {
        document.set(SQLUtils.generateCommentLine(getDataSource(), "Loading '" + getEditorInput().getName() + "' source..."));
        TasksJob.runTask("Read source", new DBRRunnableWithProgress() {

            @Override
            public void run(final DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
                try {
                    sourceText = getSourceText(monitor);
                    if (sourceText == null) {
                        sourceText = SQLUtils.generateCommentLine(getDataSource(), "Empty source");
                    }
                } catch (Throwable e) {
                    sourceText = "/* ERROR WHILE READING SOURCE:\n\n" + e.getMessage() + "\n*/";
                    throw new InvocationTargetException(e);
                } finally {
                    if (!isDisposed()) {
                        UIUtils.runInUI(null, new Runnable() {

                            @Override
                            public void run() {
                                resetDocumentContents(monitor);
                            }
                        });
                    }
                }
            }
        });
    } else {
        // Set text
        document.set(sourceText);
    }
    return document;
}||||||||@Override
protected IDocument createDocument(Object element) throws CoreException {
    final Document document = new Document();
    if (sourceText == null) {
        document.set(SQLUtils.generateCommentLine(getDataSource(), "Loading '" + getEditorInput().getName() + "' source..."));
        TasksJob.runTask("Read source", new DBRRunnableWithProgress() {

            @Override
            public void run(final DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
                try {
                    sourceText = getSourceText(monitor);
                    if (sourceText == null) {
                        sourceText = SQLUtils.generateCommentLine(getDataSource(), "Empty source");
                    }
                } catch (Throwable e) {
                    sourceText = "/* ERROR WHILE READING SOURCE:\n\n" + e.getMessage() + "\n*/";
                    throw new InvocationTargetException(e);
                } finally {
                    if (!isDisposed()) {
                        DBeaverUI.syncExec(new Runnable() {

                            @Override
                            public void run() {
                                resetDocumentContents(monitor);
                            }
                        });
                    }
                }
            }
        });
    } else {
        // Set text
        document.set(sourceText);
    }
    return document;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
													)
												)
												(ThrowStmt
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NullLiteralExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																)
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								StringLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(TryStmt
										(CatchClause
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															StringLiteralExpr
														)
													)
												)
												(ThrowStmt
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	SimpleName
																)
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

