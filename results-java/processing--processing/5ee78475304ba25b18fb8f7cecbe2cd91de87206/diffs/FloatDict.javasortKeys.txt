// abstract class InternalSort extends Sort {
// @Override
// public int size() {
// return count;
// }
// 
// @Override
// public void swap(int a, int b) {
// FloatHash.this.swap(a, b);
// }
// }
/**
 * Sort the keys alphabetically (ignoring case). Uses the value as a
 * tie-breaker (only really possible with a key that has a case change).
 *
 * @webref floatdict:method
 * @brief Sort the keys alphabetically
 */
public void sortKeys() {
    sortImpl(true, false);
// new InternalSort() {
// @Override
// public float compare(int a, int b) {
// int result = keys[a].compareToIgnoreCase(keys[b]);
// if (result != 0) {
// return result;
// }
// return values[b] - values[a];
// }
// }.run();
}||||||||/**
 * Sort the keys alphabetically (ignoring case). Uses the value as a
 * tie-breaker (only really possible with a key that has a case change).
 *
 * @webref floatdict:method
 * @brief Sort the keys alphabetically
 */
public void sortKeys() {
    sortImpl(true, false, true);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

