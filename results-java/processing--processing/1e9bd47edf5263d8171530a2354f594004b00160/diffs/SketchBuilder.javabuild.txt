/**
 * Build the sketch project.
 * <p>
 * This usually means grabbing all the Processing files and compiling them
 * to Java source files and moving them into a designated folder where the
 * JDT will grab them and build them.
 * </p>
 * <p>
 * For now all builds are full builds because the preprocessor does not
 * handle incremental builds.
 * </p>
 */
protected IProject[] build(int kind, Map args, IProgressMonitor monitor) throws CoreException {
    IProject project = this.getProject();
    SketchProject sketch = SketchProject.forProject(project);
    switch(kind) {
        case FULL_BUILD:
            return this.fullBuild(sketch, monitor);
        case AUTO_BUILD:
            return (fullBuildRequired(project)) ? this.fullBuild(sketch, monitor) : null;
        // return this.autoBuild(sketch, monitor);
        case INCREMENTAL_BUILD:
            return (fullBuildRequired(project)) ? this.fullBuild(sketch, monitor) : null;
        // return this.incrementalBuild(sketch, monitor);
        default:
            return null;
    }
}||||||||/**
 * Build the sketch project.
 * <p>
 * This usually means grabbing all the Processing files and compiling them
 * to Java source files and moving them into a designated folder where the
 * JDT will grab them and build them.
 * <p>
 * For now all builds are full builds because the preprocessor does not
 * handle incremental builds.
 */
protected IProject[] build(int kind, Map args, IProgressMonitor monitor) throws CoreException {
    IProject project = this.getProject();
    SketchProject sketch = SketchProject.forProject(project);
    switch(kind) {
        case FULL_BUILD:
            return this.fullBuild(sketch, monitor);
        case AUTO_BUILD:
            return this.autoBuild(sketch, monitor);
        case INCREMENTAL_BUILD:
            return this.incrementalBuild(sketch, monitor);
        default:
            // everything falls through to return null
            return null;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(ConditionalExpr
						(EnclosedExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						NullLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(ConditionalExpr
						(EnclosedExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						NullLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				LineComment
			)
			(SwitchEntryStmt
				(ReturnStmt
					NullLiteralExpr
				)
				LineComment
			)
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					NullLiteralExpr
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

