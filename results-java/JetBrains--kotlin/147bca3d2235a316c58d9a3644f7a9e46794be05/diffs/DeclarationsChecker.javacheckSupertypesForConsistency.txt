private void checkSupertypesForConsistency(@NotNull ClassDescriptor classDescriptor) {
    Multimap<TypeConstructor, TypeProjection> multimap = SubstitutionUtils.buildDeepSubstitutionMultimap(classDescriptor.getDefaultType());
    for (Map.Entry<TypeConstructor, Collection<TypeProjection>> entry : multimap.asMap().entrySet()) {
        Collection<TypeProjection> projections = entry.getValue();
        if (projections.size() > 1) {
            TypeConstructor typeConstructor = entry.getKey();
            DeclarationDescriptor declarationDescriptor = typeConstructor.getDeclarationDescriptor();
            assert declarationDescriptor instanceof TypeParameterDescriptor : declarationDescriptor;
            TypeParameterDescriptor typeParameterDescriptor = (TypeParameterDescriptor) declarationDescriptor;
            // Immediate arguments of supertypes cannot be projected
            Set<JetType> conflictingTypes = Sets.newLinkedHashSet();
            for (TypeProjection projection : projections) {
                conflictingTypes.add(projection.getType());
            }
            removeDuplicateTypes(conflictingTypes);
            if (conflictingTypes.size() > 1) {
                DeclarationDescriptor containingDeclaration = typeParameterDescriptor.getContainingDeclaration();
                assert containingDeclaration instanceof ClassDescriptor : containingDeclaration;
                JetClassOrObject psiElement = (JetClassOrObject) DescriptorToSourceUtils.getSourceFromDescriptor(classDescriptor);
                JetDelegationSpecifierList delegationSpecifierList = psiElement.getDelegationSpecifierList();
                assert delegationSpecifierList != null;
                // trace.getErrorHandler().genericError(delegationSpecifierList.getNode(), "Type parameter " + typeParameterDescriptor.getName() + " of " + containingDeclaration.getName() + " has inconsistent values: " + conflictingTypes);
                trace.report(INCONSISTENT_TYPE_PARAMETER_VALUES.on(delegationSpecifierList, typeParameterDescriptor, (ClassDescriptor) containingDeclaration, conflictingTypes));
            }
        }
    }
}||||||||private void checkSupertypesForConsistency(@NotNull ClassDescriptor classDescriptor) {
    Multimap<TypeConstructor, TypeProjection> multimap = SubstitutionUtils.buildDeepSubstitutionMultimap(classDescriptor.getDefaultType());
    for (Map.Entry<TypeConstructor, Collection<TypeProjection>> entry : multimap.asMap().entrySet()) {
        Collection<TypeProjection> projections = entry.getValue();
        if (projections.size() > 1) {
            TypeConstructor typeConstructor = entry.getKey();
            DeclarationDescriptor declarationDescriptor = typeConstructor.getDeclarationDescriptor();
            assert declarationDescriptor instanceof TypeParameterDescriptor : declarationDescriptor;
            TypeParameterDescriptor typeParameterDescriptor = (TypeParameterDescriptor) declarationDescriptor;
            // Immediate arguments of supertypes cannot be projected
            Set<JetType> conflictingTypes = Sets.newLinkedHashSet();
            for (TypeProjection projection : projections) {
                conflictingTypes.add(projection.getType());
            }
            removeDuplicateTypes(conflictingTypes);
            if (conflictingTypes.size() > 1) {
                DeclarationDescriptor containingDeclaration = typeParameterDescriptor.getContainingDeclaration();
                assert containingDeclaration instanceof ClassDescriptor : containingDeclaration;
                JetClassOrObject psiElement = (JetClassOrObject) DescriptorToSourceUtils.getSourceFromDescriptor(classDescriptor);
                assert psiElement != null;
                JetDelegationSpecifierList delegationSpecifierList = psiElement.getDelegationSpecifierList();
                assert delegationSpecifierList != null;
                // trace.getErrorHandler().genericError(delegationSpecifierList.getNode(), "Type parameter " + typeParameterDescriptor.getName() + " of " + containingDeclaration.getName() + " has inconsistent values: " + conflictingTypes);
                trace.report(INCONSISTENT_TYPE_PARAMETER_VALUES.on(delegationSpecifierList, typeParameterDescriptor, (ClassDescriptor) containingDeclaration, conflictingTypes));
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(AssertStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(AssertStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(AssertStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(AssertStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(CastExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							LineComment
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(AssertStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(AssertStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(AssertStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

