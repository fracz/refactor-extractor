/*
 * Copyright 2010-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/callableReference/property/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class PropertyCallableReferenceTestGenerated extends AbstractPropertyCallableReferenceTest {
    @TestMetadata("accessViaSubclass.kt")
    public void testAccessViaSubclass() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/accessViaSubclass.kt");
        doTest(fileName);
    }

    public void testAllFilesPresentInCases() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/callableReference/property/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }

    @TestMetadata("delegated.kt")
    public void testDelegated() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/delegated.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedMutable.kt")
    public void testDelegatedMutable() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/delegatedMutable.kt");
        doTest(fileName);
    }

    @TestMetadata("extensionProperty.kt")
    public void testExtensionProperty() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/extensionProperty.kt");
        doTest(fileName);
    }

    @TestMetadata("kClassInstanceIsInitializedFirst.kt")
    public void testKClassInstanceIsInitializedFirst() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/kClassInstanceIsInitializedFirst.kt");
        doTest(fileName);
    }

    @TestMetadata("memberProperty.kt")
    public void testMemberProperty() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/memberProperty.kt");
        doTest(fileName);
    }

    @TestMetadata("overriddenInSubclass.kt")
    public void testOverriddenInSubclass() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/overriddenInSubclass.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleExtension.kt")
    public void testSimpleExtension() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleExtension.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleMember.kt")
    public void testSimpleMember() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleMember.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleMutableExtension.kt")
    public void testSimpleMutableExtension() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleMutableExtension.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleMutableMember.kt")
    public void testSimpleMutableMember() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleMutableMember.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleMutableTopLevel.kt")
    public void testSimpleMutableTopLevel() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleMutableTopLevel.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleTopLevel.kt")
    public void testSimpleTopLevel() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/simpleTopLevel.kt");
        doTest(fileName);
    }

    @TestMetadata("topLevelVar.kt")
    public void testTopLevelVar() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/callableReference/property/cases/topLevelVar.kt");
        doTest(fileName);
    }
}