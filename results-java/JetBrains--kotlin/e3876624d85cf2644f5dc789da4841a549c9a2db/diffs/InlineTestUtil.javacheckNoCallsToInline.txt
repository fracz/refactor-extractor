public static void checkNoCallsToInline(List<OutputFile> files) {
    // final HashMap<Type> inlineMethods = new HashMap();
    Set<MethodInfo> inlinedMethods = collectInlineMethods(files);
    assert !inlinedMethods.isEmpty() : "There is no any inline method";
    List<NotInlinedCall> notInlinedCalls = checkInlineNotInvoked(files, inlinedMethods);
    assert notInlinedCalls.isEmpty() : "All inline methods should be inlined but " + StringUtil.join(notInlinedCalls, "\n");
}||||||||public static void checkNoCallsToInline(List<OutputFile> files) {
    Set<MethodInfo> inlinedMethods = collectInlineMethods(files);
    assert !inlinedMethods.isEmpty() : "There are no inline methods";
    List<NotInlinedCall> notInlinedCalls = checkInlineNotInvoked(files, inlinedMethods);
    assert notInlinedCalls.isEmpty() : "All inline methods should be inlined but " + StringUtil.join(notInlinedCalls, "\n");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(AssertStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			StringLiteralExpr
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BinaryExpr
				StringLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(AssertStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			StringLiteralExpr
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(AssertStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BinaryExpr
				StringLiteralExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

