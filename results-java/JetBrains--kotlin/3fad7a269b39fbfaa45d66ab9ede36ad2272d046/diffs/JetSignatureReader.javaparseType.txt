private static int parseType(final String signature, int pos, final JetSignatureVisitor v) {
    if (signature.length() == 0) {
        throw new IllegalStateException();
    }
    char c;
    int start, end;
    boolean visited, inner;
    String name;
    boolean nullable = false;
    if (signature.charAt(pos) == '?') {
        nullable = true;
        pos++;
    }
    switch(c = signature.charAt(pos++)) {
        case 'Z':
        case 'C':
        case 'B':
        case 'S':
        case 'I':
        case 'F':
        case 'J':
        case 'D':
        case 'V':
            v.visitBaseType(c, nullable);
            return pos;
        case '[':
            return parseType(signature, pos, v.visitArrayType(nullable));
        case 'T':
            end = signature.indexOf(';', pos);
            v.visitTypeVariable(signature.substring(pos, end), nullable);
            return end + 1;
        case 'L':
        case 'M':
            boolean forceReal = signature.charAt(pos - 1) == 'M';
            start = pos;
            visited = false;
            inner = false;
            while (true) {
                switch(c = signature.charAt(pos++)) {
                    case '.':
                    case ';':
                        if (!visited) {
                            name = signature.substring(start, pos - 1);
                            if (inner) {
                                v.visitInnerClassType(name, nullable);
                            } else {
                                v.visitClassType(name, nullable, forceReal);
                            }
                        }
                        if (c == ';') {
                            v.visitEnd();
                            return pos;
                        }
                        start = pos;
                        visited = false;
                        inner = true;
                        break;
                    case '<':
                        name = signature.substring(start, pos - 1);
                        if (inner) {
                            v.visitInnerClassType(name, nullable);
                        } else {
                            v.visitClassType(name, nullable, forceReal);
                        }
                        visited = true;
                        top: while (true) {
                            switch(c = signature.charAt(pos)) {
                                case '>':
                                    break top;
                                case '*':
                                    ++pos;
                                    v.visitTypeArgument();
                                    break;
                                case '+':
                                case '-':
                                    pos = parseType(signature, pos + 1, v.visitTypeArgument(JetSignatureVariance.parseVariance(c)));
                                    break;
                                default:
                                    pos = parseType(signature, pos, v.visitTypeArgument(JetSignatureVariance.INVARIANT));
                                    break;
                            }
                        }
                }
            }
        default:
            throw new IllegalStateException();
    }
}||||||||private static int parseType(final String signature, int pos, final JetSignatureVisitor v) {
    if (signature.length() == 0) {
        throw new IllegalStateException();
    }
    char c;
    int start;
    int end;
    boolean visited;
    boolean inner;
    boolean nullable;
    if (signature.charAt(pos) == '?') {
        nullable = true;
        pos++;
    } else {
        nullable = false;
    }
    switch(c = signature.charAt(pos++)) {
        case 'Z':
        case 'C':
        case 'B':
        case 'S':
        case 'I':
        case 'F':
        case 'J':
        case 'D':
        case 'V':
            v.visitBaseType(c, nullable);
            return pos;
        case '[':
            return parseType(signature, pos, v.visitArrayType(nullable));
        case 'T':
            end = signature.indexOf(';', pos);
            v.visitTypeVariable(signature.substring(pos, end), nullable);
            return end + 1;
        case 'L':
        case 'M':
            boolean forceReal = signature.charAt(pos - 1) == 'M';
            start = pos;
            visited = false;
            inner = false;
            while (true) {
                switch(c = signature.charAt(pos++)) {
                    case '.':
                    case ';':
                        if (!visited) {
                            parseTypeConstructor(signature, v, start, pos, inner, nullable, forceReal);
                        }
                        if (c == ';') {
                            v.visitEnd();
                            return pos;
                        }
                        start = pos;
                        visited = false;
                        inner = true;
                        break;
                    case '<':
                        parseTypeConstructor(signature, v, start, pos, inner, nullable, forceReal);
                        visited = true;
                        pos = parseTypeArguments(signature, pos, v);
                    default:
                        break;
                }
            }
        default:
            throw new IllegalStateException();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(CharLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(LabeledStmt
									SimpleName
									(WhileStmt
										(BlockStmt
											(SwitchStmt
												(SwitchEntryStmt
													(CharLiteralExpr
													)
													(BreakStmt
														SimpleName
													)
												)
												(SwitchEntryStmt
													(CharLiteralExpr
													)
													(ExpressionStmt
														(UnaryExpr
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(CharLiteralExpr
													)
												)
												(SwitchEntryStmt
													(CharLiteralExpr
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																(MethodCallExpr
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																(MethodCallExpr
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
													)
													(BreakStmt
													)
												)
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BooleanLiteralExpr
										)
									)
								)
							)
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BooleanLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(CharLiteralExpr
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
			)
			(SwitchEntryStmt
				(CharLiteralExpr
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(MethodCallExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(CharLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(WhileStmt
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(BreakStmt
								)
							)
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BooleanLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

