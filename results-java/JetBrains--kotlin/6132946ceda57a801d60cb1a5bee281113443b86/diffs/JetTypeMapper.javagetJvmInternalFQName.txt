@NotNull
private String getJvmInternalFQName(@NotNull DeclarationDescriptor descriptor) {
    descriptor = descriptor.getOriginal();
    if (descriptor instanceof FunctionDescriptor) {
        throw new IllegalStateException("requested fq name for function: " + descriptor);
    }
    if (descriptor.getContainingDeclaration() instanceof ModuleDescriptor || descriptor instanceof ScriptDescriptor) {
        return "";
    }
    if (descriptor instanceof ModuleDescriptor) {
        throw new IllegalStateException("missed something");
    }
    if (descriptor instanceof ClassDescriptor) {
        ClassDescriptor klass = (ClassDescriptor) descriptor;
        if (klass.getKind() == ClassKind.OBJECT) {
            if (klass.getContainingDeclaration() instanceof ClassDescriptor) {
                ClassDescriptor containingKlass = (ClassDescriptor) klass.getContainingDeclaration();
                if (containingKlass.getKind() == ClassKind.ENUM_CLASS) {
                    return getJvmInternalFQName(containingKlass);
                } else {
                    return getJvmInternalFQName(containingKlass) + JvmAbi.CLASS_OBJECT_SUFFIX;
                }
            }
        } else if (klass.getKind() == ClassKind.ENUM_ENTRY) {
            if (closureAnnotator.enumEntryNeedSubclass(klass)) {
                return getJvmInternalFQName(klass.getContainingDeclaration()) + "$" + klass.getName().getName();
            } else {
                return getJvmInternalFQName(klass.getContainingDeclaration());
            }
        }
        JvmClassName name = closureAnnotator.classNameForClassDescriptor((ClassDescriptor) descriptor);
        if (name != null) {
            return name.getInternalName();
        }
    }
    DeclarationDescriptor container = descriptor.getContainingDeclaration();
    if (container == null) {
        throw new IllegalStateException("descriptor has no container: " + descriptor);
    }
    Name name = descriptor.getName();
    String baseName = getJvmInternalFQName(container);
    if (!baseName.isEmpty()) {
        return baseName + (container instanceof NamespaceDescriptor ? "/" : "$") + name.getIdentifier();
    }
    return name.getIdentifier();
}||||||||@NotNull
private String getJvmInternalFQName(@NotNull DeclarationDescriptor descriptor) {
    descriptor = descriptor.getOriginal();
    if (descriptor instanceof FunctionDescriptor) {
        throw new IllegalStateException("requested fq name for function: " + descriptor);
    }
    if (descriptor.getContainingDeclaration() instanceof ModuleDescriptor || descriptor instanceof ScriptDescriptor) {
        return "";
    }
    if (descriptor instanceof ModuleDescriptor) {
        throw new IllegalStateException("missed something");
    }
    if (descriptor instanceof ClassDescriptor) {
        ClassDescriptor klass = (ClassDescriptor) descriptor;
        if (klass.getKind() == ClassKind.OBJECT || klass.getKind() == ClassKind.CLASS_OBJECT) {
            if (klass.getContainingDeclaration() instanceof ClassDescriptor) {
                ClassDescriptor containingKlass = (ClassDescriptor) klass.getContainingDeclaration();
                if (containingKlass.getKind() == ClassKind.ENUM_CLASS) {
                    return getJvmInternalFQName(containingKlass);
                } else {
                    return getJvmInternalFQName(containingKlass) + JvmAbi.CLASS_OBJECT_SUFFIX;
                }
            }
        } else if (klass.getKind() == ClassKind.ENUM_ENTRY) {
            if (closureAnnotator.enumEntryNeedSubclass(klass)) {
                return getJvmInternalFQName(klass.getContainingDeclaration()) + "$" + klass.getName().getName();
            } else {
                return getJvmInternalFQName(klass.getContainingDeclaration());
            }
        }
        JvmClassName name = closureAnnotator.classNameForClassDescriptor((ClassDescriptor) descriptor);
        if (name != null) {
            return name.getInternalName();
        }
    }
    DeclarationDescriptor container = descriptor.getContainingDeclaration();
    if (container == null) {
        throw new IllegalStateException("descriptor has no container: " + descriptor);
    }
    Name name = descriptor.getName();
    String baseName = getJvmInternalFQName(container);
    if (!baseName.isEmpty()) {
        return baseName + (container instanceof NamespaceDescriptor ? "/" : "$") + name.getIdentifier();
    }
    return name.getIdentifier();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					StringLiteralExpr
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(InstanceOfExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(EnclosedExpr
								(ConditionalExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									StringLiteralExpr
								)
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(InstanceOfExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					StringLiteralExpr
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
												StringLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(InstanceOfExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(EnclosedExpr
								(ConditionalExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									StringLiteralExpr
									StringLiteralExpr
								)
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

