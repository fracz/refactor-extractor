@Override
public String getCodeSample(@NotNull SettingsType settingsType) {
    switch(settingsType) {
        case WRAPPING_AND_BRACES_SETTINGS:
            return "public class ThisIsASampleClass {\n" + "    private fun foo1(i1: Int,\n" + "                     i2: Int,\n" + "                     i3: Int) : Int {\n" + "        return 0\n" + "    }\n" + "    private fun foo2():Int {\n" + "        return foo1(\n" + "                12,\n" + "                13,\n" + "                14\n" + "        )\n" + "    }\n" + "}";
        default:
            return "class Some {\n" + "  fun foo() : Int {\n" + "    val test : Int = 12\n" + "    return test\n" + "  }\n" + "}";
    }
}||||||||@Override
public String getCodeSample(@NotNull SettingsType settingsType) {
    switch(settingsType) {
        case WRAPPING_AND_BRACES_SETTINGS:
            return "public class ThisIsASampleClass {\n" + "    private fun foo1(i1: Int,\n" + "                     i2: Int,\n" + "                     i3: Int) : Int {\n" + "        return 0\n" + "    }\n" + "    private fun foo2():Int {\n" + "        return foo1(12,\n" + "                13,\n" + "                14\n" + "        )\n" + "    }\n" + "}";
        default:
            return "class Some {\n" + "  fun foo() : Int {\n" + "    val test : Int = 12\n" + "    return test\n" + "  }\n" + "}";
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		StringLiteralExpr
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

