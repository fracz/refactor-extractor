@NotNull
private static ScriptableObject initScope(@NotNull EcmaVersion version, @NotNull Context context, @NotNull List<String> jsLibraries) {
    ScriptableObject scope = context.initStandardObjects();
    try {
        runFileWithRhino(getKotlinLibFile(version), context, scope);
        runFileWithRhino(pathToTestFilesRoot() + "kotlin_lib.js", context, scope);
        runFileWithRhino(pathToTestFilesRoot() + "kotlin_lib_compiled.js", context, scope);
        runFileWithRhino(pathToTestFilesRoot() + "maps.js", context, scope);
        runFileWithRhino(pathToTestFilesRoot() + "long.js", context, scope);
        // runFileWithRhino(pathToTestFilesRoot() + "jshint.js", context, scope);
        for (String jsLibrary : jsLibraries) {
            runFileWithRhino(jsLibrary, context, scope);
        }
    } catch (Exception e) {
        throw rethrow(e);
    }
    // scope.sealObject();
    return scope;
}||||||||@NotNull
private static ScriptableObject initScope(@NotNull EcmaVersion version, @NotNull Context context, @NotNull List<String> jsLibraries) {
    ScriptableObject scope = context.initStandardObjects();
    try {
        runFileWithRhino(getKotlinLibFile(version), context, scope);
        runFileWithRhino(TEST_DATA_DIR_PATH + "kotlin_lib.js", context, scope);
        runFileWithRhino(TEST_DATA_DIR_PATH + "kotlin_lib_compiled.js", context, scope);
        runFileWithRhino(TEST_DATA_DIR_PATH + "maps.js", context, scope);
        runFileWithRhino(TEST_DATA_DIR_PATH + "long.js", context, scope);
        // runFileWithRhino(pathToTestFilesRoot() + "jshint.js", context, scope);
        for (String jsLibrary : jsLibraries) {
            runFileWithRhino(jsLibrary, context, scope);
        }
    } catch (Exception e) {
        throw rethrow(e);
    }
    // scope.sealObject();
    return scope;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

