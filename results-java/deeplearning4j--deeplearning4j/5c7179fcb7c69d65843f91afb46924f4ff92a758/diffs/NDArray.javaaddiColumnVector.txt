/**
 * In place addition of a column vector
 *
 * @param columnVector the column vector to add
 * @return the result of the addition
 */
@Override
public NDArray addiColumnVector(INDArray columnVector) {
    assert columnVector.isColumnVector() : "Must only add a column vector";
    assert columnVector.length() == rows() : "Illegal column vector must have the same length as the number of column in this ndarray";
    for (int i = 0; i < columns(); i++) {
        getColumn(i).addi(columnVector);
    }
    return this;
}||||||||/**
 * In place addition of a column vector
 *
 * @param columnVector the column vector to add
 * @return the result of the addition
 */
@Override
public NDArray addiColumnVector(INDArray columnVector) {
    assert columnVector.isColumnVector() : "Must only add a column vector";
    assert columnVector.length() == rows() : "Illegal column vector must have the same length as the number of column in this ndarray";
    for (int i = 0; i < columns(); i++) {
        INDArray column = getColumn(i);
        column.addi(columnVector);
    }
    return this;
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			StringLiteralExpr
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			StringLiteralExpr
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			StringLiteralExpr
		)
		(AssertStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			StringLiteralExpr
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

