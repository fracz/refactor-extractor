@Override
public InputType getOutputType(InputType... vertexInputs) throws InvalidInputTypeException {
    if (vertexInputs.length != 1) {
        throw new InvalidInputTypeException("SubsetVertex expects single input type. Received: " + Arrays.toString(vertexInputs));
    }
    switch(vertexInputs[0].getType()) {
        case FF:
            return InputType.feedForward(to - from + 1);
        case RNN:
            return InputType.recurrent(to - from + 1);
        case CNN:
            InputType.InputTypeConvolutional conv = (InputType.InputTypeConvolutional) vertexInputs[0];
            int depth = conv.getDepth();
            if (to >= depth) {
                throw new InvalidInputTypeException("Invalid range: Cannot select depth subset [" + from + "," + to + "] inclusive from CNN activations with " + " [depth,width,height] = [" + depth + "," + conv.getWidth() + "," + conv.getHeight() + "]");
            }
            return InputType.convolutional(from - to + 1, conv.getWidth(), conv.getHeight());
        case CNNFlat:
            // TODO work out how to do this - could be difficult...
            throw new UnsupportedOperationException("Subsetting data in flattened convolutional format not yet supported");
        default:
            throw new RuntimeException("Unknown input type: " + vertexInputs[0]);
    }
}||||||||@Override
public InputType getOutputType(int layerIndex, InputType... vertexInputs) throws InvalidInputTypeException {
    if (vertexInputs.length != 1) {
        throw new InvalidInputTypeException("SubsetVertex expects single input type. Received: " + Arrays.toString(vertexInputs));
    }
    switch(vertexInputs[0].getType()) {
        case FF:
            return InputType.feedForward(to - from + 1);
        case RNN:
            return InputType.recurrent(to - from + 1);
        case CNN:
            InputType.InputTypeConvolutional conv = (InputType.InputTypeConvolutional) vertexInputs[0];
            int depth = conv.getDepth();
            if (to >= depth) {
                throw new InvalidInputTypeException("Invalid range: Cannot select depth subset [" + from + "," + to + "] inclusive from CNN activations with " + " [depth,width,height] = [" + depth + "," + conv.getWidth() + "," + conv.getHeight() + "]");
            }
            return InputType.convolutional(from - to + 1, conv.getWidth(), conv.getHeight());
        case CNNFlat:
            // TODO work out how to do this - could be difficult...
            throw new UnsupportedOperationException("Subsetting data in flattened convolutional format not yet supported");
        default:
            throw new RuntimeException("Unknown input type: " + vertexInputs[0]);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											StringLiteralExpr
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

