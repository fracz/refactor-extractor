@Override
public Pair<Gradient, INDArray[]> doBackward(boolean tbptt, int tbpttBackwardLength) {
    if (!canDoBackward())
        throw new IllegalStateException("Cannot do backward pass: errors not set");
    if (forwardPassShapes.length == 1) {
        // No op case
        return new Pair<>(null, epsilons);
    }
    // Split the epsilons in the opposite way that the activations were merged
    INDArray[] out = new INDArray[forwardPassShapes.length];
    for (int i = 0; i < out.length; i++) out[i] = Nd4j.create(forwardPassShapes[i]);
    int cumulative = 0;
    switch(fwdPassRank) {
        case 2:
            // Standard
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(// All rows
                epsilons[0].get(// All rows
                NDArrayIndex.all(), // subset of columns
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1])));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        case 3:
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(// All rows
                epsilons[0].get(// All rows
                NDArrayIndex.all(), // subset of columns
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1]), // All time steps
                NDArrayIndex.all()));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        case 4:
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(epsilons[0].get(NDArrayIndex.all(), // Subset of depth
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1]), // Width
                NDArrayIndex.all(), // height
                NDArrayIndex.all()));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        default:
            // Should never happen
            throw new RuntimeException("Invalid rank during forward pass (not 2, 3, 4)");
    }
    return new Pair<>(null, out);
}||||||||@Override
public Pair<Gradient, INDArray[]> doBackward(boolean tbptt) {
    if (!canDoBackward())
        throw new IllegalStateException("Cannot do backward pass: errors not set");
    if (forwardPassShapes.length == 1) {
        // No op case
        return new Pair<>(null, epsilons);
    }
    // Split the epsilons in the opposite way that the activations were merged
    INDArray[] out = new INDArray[forwardPassShapes.length];
    for (int i = 0; i < out.length; i++) out[i] = Nd4j.create(forwardPassShapes[i]);
    int cumulative = 0;
    switch(fwdPassRank) {
        case 2:
            // Standard
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(// All rows
                epsilons[0].get(// All rows
                NDArrayIndex.all(), // subset of columns
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1])));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        case 3:
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(// All rows
                epsilons[0].get(// All rows
                NDArrayIndex.all(), // subset of columns
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1]), // All time steps
                NDArrayIndex.all()));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        case 4:
            for (int i = 0; i < forwardPassShapes.length; i++) {
                out[i].assign(epsilons[0].get(NDArrayIndex.all(), // Subset of depth
                NDArrayIndex.interval(cumulative, cumulative + forwardPassShapes[i][1]), // Width
                NDArrayIndex.all(), // height
                NDArrayIndex.all()));
                cumulative += forwardPassShapes[i][1];
            }
            break;
        default:
            // Should never happen
            throw new RuntimeException("Invalid rank during forward pass (not 2, 3, 4)");
    }
    return new Pair<>(null, out);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForStmt
			(ExpressionStmt
				(AssignExpr
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
										LineComment
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										LineComment
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
										LineComment
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										LineComment
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			(ObjectCreationExpr
				NullLiteralExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NullLiteralExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForStmt
			(ExpressionStmt
				(AssignExpr
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
										LineComment
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										LineComment
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
										LineComment
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
										LineComment
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
										LineComment
									)
									SimpleName
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			(ObjectCreationExpr
				NullLiteralExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

