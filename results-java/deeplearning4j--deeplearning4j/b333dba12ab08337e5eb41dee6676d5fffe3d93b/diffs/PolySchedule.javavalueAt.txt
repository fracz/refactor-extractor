@Override
public double valueAt(double currentValue, int iteration, int epoch) {
    int i = (scheduleType == ScheduleType.ITERATION ? iteration : epoch);
    // return initialValue * Math.pow((1 - i), power);
    throw new UnsupportedOperationException("Needs to be fixed");
}||||||||@Override
public double valueAt(int iteration, int epoch) {
    int i = (scheduleType == ScheduleType.ITERATION ? iteration : epoch);
    if (i >= maxIter) {
        return 0;
    }
    return initialValue * Math.pow(1 + i / (double) maxIter, power);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						(IntegerLiteralExpr
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(CastExpr
								NameExpr
									SimpleName
								(PrimitiveType
								)
							)
						)
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

