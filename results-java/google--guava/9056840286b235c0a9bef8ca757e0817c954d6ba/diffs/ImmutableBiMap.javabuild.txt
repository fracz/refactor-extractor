/**
 * Returns a newly-created immutable bimap.
 *
 * @throws IllegalArgumentException if duplicate keys or values were added
 */
@Override
public ImmutableBiMap<K, V> build() {
    return fromEntries(size, entries);
}||||||||/**
 * Returns a newly-created immutable bimap.
 *
 * @throws IllegalArgumentException if duplicate keys or values were added
 */
@Override
public ImmutableBiMap<K, V> build() {
    switch(size) {
        case 0:
            return of();
        case 1:
            return of(entries[0].getKey(), entries[0].getValue());
        default:
            return new RegularImmutableBiMap<K, V>(size, entries);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

