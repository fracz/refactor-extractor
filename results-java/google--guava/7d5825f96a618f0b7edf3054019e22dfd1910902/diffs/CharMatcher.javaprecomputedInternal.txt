/**
 * This is the actual implementation of {@link #precomputed}, but we bounce calls through a method
 * on {@link Platform} so that we can have different behavior in GWT.
 *
 * <p>The default precomputation is to cache the configuration of the original matcher in an
 * eight-kilobyte bit array. In some situations this produces a matcher which is faster to query
 * than the original.
 *
 * <p>The default implementation creates a new bit array and passes it to {@link
 * #setBits(LookupTable)}.
 */
CharMatcher precomputedInternal() {
    final LookupTable table = new LookupTable();
    setBits(table);
    final CharMatcher outer = this;
    return new CharMatcher() {

        @Override
        public boolean matches(char c) {
            return table.get(c);
        }

        // TODO(kevinb): make methods like negate() smart?
        @Override
        public CharMatcher precomputed() {
            return this;
        }

        @Override
        public String toString() {
            return outer.toString();
        }
    };
}||||||||/**
 * This is the actual implementation of {@link #precomputed}, but we bounce calls through a method
 * on {@link Platform} so that we can have different behavior in GWT.
 *
 * <p>If the number of matched characters is small enough, we try to build a small hash
 * table to contain all of the characters. Otherwise, we record the characters in eight-kilobyte
 * bit array. In many situations this produces a matcher which is faster to query
 * than the original.
 */
CharMatcher precomputedInternal() {
    final char[] chars = slowGetChars();
    int totalCharacters = chars.length;
    if (totalCharacters == 0) {
        return NONE;
    } else if (totalCharacters == 1) {
        return is(chars[0]);
    } else if (totalCharacters < SmallCharMatcher.MAX_SIZE) {
        return SmallCharMatcher.from(chars);
    } else if (totalCharacters < MediumCharMatcher.MAX_SIZE) {
        return MediumCharMatcher.from(chars);
    }
    // Otherwise, make the full lookup table.
    final LookupTable table = new LookupTable();
    setBits(table);
    final CharMatcher outer = this;
    return new CharMatcher(outer.toString()) {

        @Override
        public boolean matches(char c) {
            return table.get(c);
        }

        // TODO(kevinb): make methods like negate() smart?
        @Override
        public CharMatcher precomputed() {
            return this;
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ThisExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(ThisExpr
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(MethodCallExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ThisExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(ThisExpr
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

