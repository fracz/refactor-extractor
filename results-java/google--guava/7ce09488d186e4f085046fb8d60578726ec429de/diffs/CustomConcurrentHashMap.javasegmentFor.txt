/* ---------------- Small Utilities -------------- */
/**
 * Returns the segment that should be used for key with given hash
 *
 * @param hash the hash code for the key
 * @return the segment
 */
Segment segmentFor(int hash) {
    return segments[(hash >>> segmentShift) & segmentMask];
}||||||||/* ---------------- Small Utilities -------------- */
/**
 * Returns the segment that should be used for a key with the given hash.
 *
 * @param hash the hash code for the key
 * @return the segment
 */
Segment segmentFor(int hash) {
    // TODO: Lazily create segments.
    return segments[(hash >>> segmentShift) & segmentMask];
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayAccessExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayAccessExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

