/**
 * Returns the first of two given parameters that is not {@code null}, if
 * either is, or otherwise throws a {@link NullPointerException}.
 *
 * @return {@code first} if {@code first} is not {@code null}, or
 * {@code second} if {@code first} is {@code null} and {@code second} is
 * not {@code null}
 * @throws NullPointerException if both {@code first} and {@code second} were
 * {@code null}
 * @since 3
 */
@Beta
public static <T> T firstNonNull(@Nullable T first, @Nullable T second) {
    return first != null ? first : Preconditions.checkNotNull(second);
}||||||||/**
 * Returns the first of two given parameters that is not {@code null}, if
 * either is, or otherwise throws a {@link NullPointerException}.
 *
 * @return {@code first} if {@code first} is not {@code null}, or
 * {@code second} if {@code first} is {@code null} and {@code second} is
 * not {@code null}
 * @throws NullPointerException if both {@code first} and {@code second} were
 * {@code null}
 * @since 3
 */
public static <T> T firstNonNull(@Nullable T first, @Nullable T second) {
    return first != null ? first : Preconditions.checkNotNull(second);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

