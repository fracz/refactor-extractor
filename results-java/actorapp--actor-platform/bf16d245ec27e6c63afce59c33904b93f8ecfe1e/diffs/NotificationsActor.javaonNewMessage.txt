public void onNewMessage(Peer peer, int sender, long date, ContentDescription description, boolean hasCurrentUserMention) {
    if (date <= loadLastReadState(peer)) {
        // Ignore Already read messages
        return;
    }
    boolean isEnabled = isNotificationsEnabled(peer, hasCurrentUserMention);
    // Save to pending notifications
    if (isEnabled) {
        List<PendingNotification> allPending = getNotifications();
        allPending.add(new PendingNotification(peer, sender, date, description));
        saveStorage();
    }
    if (isNotificationsPaused) {
        notificationsDuringPause.add(peer);
        return;
    }
    if (isAppVisible) {
        // Is In Current chat
        if (visiblePeer != null && visiblePeer.equals(peer)) {
            // Log.d("NotificationsActor", "visiblePeer");
            if (config().getDeviceCategory() == DeviceCategory.DESKTOP || config().getDeviceCategory() == DeviceCategory.TABLET) {
            // Log.d("NotificationsActor", "isDesk");
            // Don't play sounds in chat on desktop
            } else {
                // Play sound effect if available
                if (isEffectsEnabled()) {
                    playEffect();
                }
            }
        } else {
            if (config().getDeviceCategory() == DeviceCategory.DESKTOP || config().getDeviceCategory() == DeviceCategory.TABLET) {
                if (isEnabled) {
                    // and notification chat is not opened
                    if (isEffectsEnabled()) {
                        playEffect();
                    }
                }
            // if (isDialogsVisible) {
            // if (isEnabled) {
            // // Play sound effect if dialogs visible
            // // and notification chat is not opened
            // if (isEffectsEnabled()) {
            // playEffect();
            // }
            // }
            // } else {
            // // Show in-app notification (detected automatically)
            // showNotification();
            // }
            } else {
            // Don't play any sounds not in chat screen on mobile phone
            // We done this because we have unread badge in chat screen on mobile
            }
        }
    } else {
        // Log.d("NotificationsActor", "App Not Visible");
        if (isEnabled) {
            showNotification();
        }
    }
}||||||||/**
 * Handling event about incoming notification
 *
 * @param peer                  peer of message
 * @param sender                sender uid of message
 * @param date                  date of message
 * @param description           content description of message
 * @param hasCurrentUserMention does message have user mention
 */
public void onNewMessage(Peer peer, int sender, long date, ContentDescription description, boolean hasCurrentUserMention) {
    // for already read messages
    if (date <= getLastReadDate(peer)) {
        return;
    }
    // If wee need to play "out-app" notification for message
    boolean isEnabled = isNotificationsEnabled(peer, hasCurrentUserMention);
    // Save to pending storage
    if (isEnabled) {
        List<PendingNotification> allPending = getNotifications();
        allPending.add(new PendingNotification(peer, sender, date, description));
        saveStorage();
    }
    // This peers will be released during call onNotificationsResumed
    if (isNotificationsPaused) {
        if (!notificationsDuringPause.containsKey(peer)) {
            notificationsDuringPause.put(peer, hasCurrentUserMention);
        } else {
            if (hasCurrentUserMention && !notificationsDuringPause.get(peer)) {
                notificationsDuringPause.put(peer, true);
            }
        }
        return;
    }
    if (isAppVisible) {
        if (visiblePeer != null && visiblePeer.equals(peer)) {
            // If message arrive to visible chat
            if (isMobilePlatform) {
                // Play sound effect on mobile
                playEffectIfEnabled();
            } else {
            // Do nothing on desktop as it is very distracting
            // Most of the people use mobile messengers occasionally and
            // with disabled sounds and it doesn't make problems as much as on
            // non-mobile platforms
            }
        } else {
            if (isMobilePlatform) {
            // Don't play any sounds not in chat screen on mobile phone
            // We done this because we have unread badge in chat screen on mobile
            } else {
                // doesn't explicitly disabled
                if (isEnabled) {
                    playEffectIfEnabled();
                }
            }
        }
    } else {
        // If application is not visible play regular notification for enabled chats
        if (isEnabled) {
            showNotification();
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
							)
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
											LineComment
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
							)
							LineComment
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
							)
						)
					)
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
									LineComment
								)
							)
							LineComment
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

