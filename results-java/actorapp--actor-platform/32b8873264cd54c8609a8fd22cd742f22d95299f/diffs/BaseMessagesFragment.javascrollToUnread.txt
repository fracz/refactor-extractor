private void scrollToUnread() {
    conversationVM = messenger().buildConversationVM(peer, getDisplayList(), new ConversationVMCallback() {

        @Override
        public void onLoaded(long unreadId, final int index) {
            if (messagesAdapter != null) {
                messagesAdapter.setFirstUnread(unreadId);
            }
            if (index > 0) {
                linearLayoutManager.setStackFromEnd(false);
                linearLayoutManager.scrollToPositionWithOffset(index + 1, Screen.dp(64));
            // linearLayoutManager.scrollToPosition(getDisplayList().getSize() - index - 1);
            // linearLayoutManager.scrollToPosition(index + 1);
            // getCollection().scrollToPosition(index + 1);
            } else {
                // linearLayoutManager.scrollToPosition(0);
                getCollection().scrollToPosition(0);
            }
        }
    });
}||||||||private void scrollToUnread() {
// conversationVM = messenger().buildConversationVM(peer, getDisplayList(),
// new ConversationVMCallback() {
// @Override
// public void onLoaded(long unreadId, final int index) {
// 
// if (messagesAdapter != null) {
// messagesAdapter.setFirstUnread(unreadId);
// }
// 
// if (index > 0) {
// linearLayoutManager.setStackFromEnd(false);
// linearLayoutManager.scrollToPositionWithOffset(index + 1, Screen.dp(64));
// // linearLayoutManager.scrollToPosition(getDisplayList().getSize() - index - 1);
// // linearLayoutManager.scrollToPosition(index + 1);
// // getCollection().scrollToPosition(index + 1);
// } else {
// // linearLayoutManager.scrollToPosition(0);
// getCollection().scrollToPosition(0);
// }
// }
// });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
					)
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											LineComment
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(Parameter
								SimpleName
								(PrimitiveType
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
	)
	(VoidType
	)
	SimpleName
)

