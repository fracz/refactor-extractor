private WorkerWrapper findWorkerForTask() {
    try {
        final MinMaxPriorityQueue<WorkerWrapper> workerQueue = MinMaxPriorityQueue.<WorkerWrapper>orderedBy(new Comparator<WorkerWrapper>() {

            @Override
            public int compare(WorkerWrapper w1, WorkerWrapper w2) {
                return -Ints.compare(w1.getRunningTasks().size(), w2.getRunningTasks().size());
            }
        }).create(FunctionalIterable.create(zkWorkers.values()).filter(new Predicate<WorkerWrapper>() {

            @Override
            public boolean apply(WorkerWrapper input) {
                return (!input.isAtCapacity() && input.getWorker().getVersion().compareTo(workerSetupManager.getWorkerSetupData().getMinVersion()) >= 0);
            }
        }));
        if (workerQueue.isEmpty()) {
            log.info("Worker nodes %s do not have capacity to run any more tasks!", zkWorkers.values());
            if (currentlyProvisioning.isEmpty()) {
                AutoScalingData provisioned = strategy.provision();
                if (provisioned != null) {
                    currentlyProvisioning.addAll(provisioned.getNodeIds());
                    lastProvisionTime = new DateTime();
                }
            } else {
                Duration durSinceLastProvision = new Duration(new DateTime(), lastProvisionTime);
                if (durSinceLastProvision.isLongerThan(config.getMaxScalingDuration())) {
                    log.makeAlert("Worker node provisioning taking too long").addData("millisSinceLastProvision", durSinceLastProvision.getMillis()).addData("provisioningCount", currentlyProvisioning.size()).emit();
                }
                log.info("%s still provisioning. Wait for all provisioned nodes to complete before requesting new worker.", currentlyProvisioning);
            }
            return null;
        }
        return workerQueue.peek();
    } catch (Exception e) {
        throw Throwables.propagate(e);
    }
}||||||||private WorkerWrapper findWorkerForTask() {
    try {
        final MinMaxPriorityQueue<WorkerWrapper> workerQueue = MinMaxPriorityQueue.<WorkerWrapper>orderedBy(new Comparator<WorkerWrapper>() {

            @Override
            public int compare(WorkerWrapper w1, WorkerWrapper w2) {
                return -Ints.compare(w1.getRunningTasks().size(), w2.getRunningTasks().size());
            }
        }).create(FunctionalIterable.create(zkWorkers.values()).filter(new Predicate<WorkerWrapper>() {

            @Override
            public boolean apply(WorkerWrapper input) {
                return (!input.isAtCapacity() && input.getWorker().getVersion().compareTo(workerSetupManager.getWorkerSetupData().getMinVersion()) >= 0);
            }
        }));
        if (workerQueue.isEmpty()) {
            log.info("Worker nodes %s do not have capacity to run any more tasks!", zkWorkers.values());
            return null;
        }
        return workerQueue.peek();
    } catch (Exception e) {
        throw Throwables.propagate(e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(EnclosedExpr
														(BinaryExpr
															(UnaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BinaryExpr
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(UnaryExpr
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ObjectCreationExpr
												(ObjectCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(EnclosedExpr
														(BinaryExpr
															(UnaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BinaryExpr
																(MethodCallExpr
																	(MethodCallExpr
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(UnaryExpr
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

