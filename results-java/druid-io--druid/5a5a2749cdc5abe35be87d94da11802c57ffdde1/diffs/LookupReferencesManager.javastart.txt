@LifecycleStart
public void start() {
    startStopLock.writeLock().lock();
    try {
        if (!started.getAndSet(true)) {
            if (lookupSnapshotTaker != null) {
                final List<LookupBean> lookupBeanList = lookupSnapshotTaker.pullExistingSnapshot();
                for (LookupBean lookupBean : lookupBeanList) {
                    this.put(lookupBean.name, lookupBean.factory);
                }
            }
            LOGGER.info("Started lookup factory references manager");
        }
    } finally {
        startStopLock.writeLock().unlock();
    }
}||||||||@LifecycleStart
public void start() {
    if (!lifecycleLock.canStart()) {
        throw new ISE("can't start.");
    }
    try {
        LOG.info("LookupReferencesManager is starting.");
        loadSnapshotAndInitStateRef();
        if (!testMode) {
            mainThread = Execs.makeThread("LookupReferencesManager-MainThread", new Runnable() {

                @Override
                public void run() {
                    try {
                        if (!lifecycleLock.awaitStarted()) {
                            LOG.error("WTF! lifecycle not started, lookup update notices will not be handled.");
                            return;
                        }
                        while (!Thread.interrupted() && lifecycleLock.awaitStarted(1, TimeUnit.MILLISECONDS)) {
                            try {
                                handlePendingNotices();
                                LockSupport.parkNanos(LookupReferencesManager.this, TimeUnit.MINUTES.toNanos(1));
                            } catch (Throwable t) {
                                LOG.makeAlert(t, "Error occured while lookup notice handling.").emit();
                            }
                        }
                    } catch (Throwable t) {
                        LOG.error(t, "Error while waiting for lifecycle start. lookup updates notices will not be handled");
                    } finally {
                        LOG.info("Lookup Management loop exited, Lookup notices are not handled anymore.");
                    }
                }
            }, true);
            mainThread.start();
        }
        LOG.info("LookupReferencesManager is started.");
        lifecycleLock.started();
    } finally {
        lifecycleLock.exitStart();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ThisExpr
												)
											)
										)
									)
									NameExpr
										SimpleName
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(IfStmt
															(UnaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		StringLiteralExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ReturnStmt
																)
															)
														)
														(WhileStmt
															(BlockStmt
																(TryStmt
																	(CatchClause
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						StringLiteralExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(Parameter
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(ThisExpr
																					NameExpr
																						SimpleName
																				)
																				(MethodCallExpr
																					(IntegerLiteralExpr
																					)
																					SimpleName
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
															(BinaryExpr
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(MethodCallExpr
																	(IntegerLiteralExpr
																	)
																	(FieldAccessExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

