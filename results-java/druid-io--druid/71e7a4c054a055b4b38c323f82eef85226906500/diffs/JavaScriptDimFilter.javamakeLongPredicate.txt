@Override
public DruidLongPredicate makeLongPredicate() {
    return new DruidLongPredicate() {

        @Override
        public boolean applyLong(long input) {
            // Can't avoid boxing here because the Mozilla JS Function.call() only accepts Object[]
            return applyObject(input);
        }
    };
}||||||||@Override
public DruidLongPredicate makeLongPredicate() {
    // Can't avoid boxing here because the Mozilla JS Function.call() only accepts Object[]
    return input -> applyObject(input);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							LineComment
						)
					)
					(PrimitiveType
					)
					SimpleName
					(Parameter
						SimpleName
						(PrimitiveType
						)
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(LambdaExpr
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(Parameter
					SimpleName
					(UnknownType
					)
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

