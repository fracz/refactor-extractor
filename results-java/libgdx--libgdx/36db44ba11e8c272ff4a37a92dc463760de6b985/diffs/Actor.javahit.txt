/**
 * Returns the deepest actor that contains the specified point and is {@link #getTouchable() touchable} and
 * {@link #isVisible() visible}, or null if no actor was hit. The point is specified in the actor's local coordinate system (0,0
 * is the bottom left of the actor and width,height is the upper right).
 * <p>
 * This method is used to delegate touchDown events. If this method returns null, touchDown will not occur.
 * <p>
 * The default implementation returns this actor if the point is within this actor's bounds.
 */
public Actor hit(float x, float y) {
    return touchable == Touchable.enabled && x >= 0 && x < width && y >= 0 && y < height ? this : null;
}||||||||/**
 * Returns the deepest actor that contains the specified point and is {@link #getTouchable() touchable} and
 * {@link #isVisible() visible}, or null if no actor was hit. The point is specified in the actor's local coordinate system (0,0
 * is the bottom left of the actor and width,height is the upper right).
 * <p>
 * This method is used to delegate touchDown events. If this method returns null, touchDown will not occur.
 * <p>
 * The default implementation returns this actor if the point is within this actor's bounds.
 * @param touchable If true, the hit detection will respect the {@link #setTouchable(Touchable) touchability}.
 * @see Touchable
 */
public Actor hit(float x, float y, boolean touchable) {
    if (touchable && this.touchable != Touchable.enabled)
        return null;
    return x >= 0 && x < width && y >= 0 && y < height ? this : null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				NullLiteralExpr
				(ThisExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				NullLiteralExpr
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				NullLiteralExpr
				(ThisExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

