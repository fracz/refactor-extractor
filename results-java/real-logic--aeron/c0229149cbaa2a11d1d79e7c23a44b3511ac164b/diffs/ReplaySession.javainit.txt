private int init() {
    if (cursor == null) {
        final String recordingMetaFileName = ArchiveUtil.recordingMetaFileName(recordingId);
        final File recordingMetaFile = new File(archiveDir, recordingMetaFileName);
        if (!recordingMetaFile.exists()) {
            return closeOnError(null, recordingMetaFile.getAbsolutePath() + " not found");
        }
        final RecordingDescriptorDecoder metaData;
        try {
            metaData = ArchiveUtil.loadRecordingDescriptor(recordingMetaFile);
        } catch (final IOException ex) {
            return closeOnError(ex, recordingMetaFile.getAbsolutePath() + " : failed to map");
        }
        final long joiningPosition = metaData.joiningPosition();
        final long lastPosition = metaData.lastPosition();
        mtuLength = metaData.mtuLength();
        termBufferLength = metaData.termBufferLength();
        initialTermId = metaData.initialTermId();
        if (this.replayPosition < joiningPosition) {
            return closeOnError(null, "Requested replay start position(=" + replayPosition + ") is less than recording joining position(=" + joiningPosition + ")");
        }
        final long toPosition = this.replayLength + replayPosition;
        if (toPosition > lastPosition) {
            return closeOnError(null, "Requested replay end position(=" + toPosition + ") is more than recording end position(=" + lastPosition + ")");
        }
        try {
            cursor = new RecordingFragmentReader(recordingId, archiveDir, replayPosition, replayLength);
        } catch (final IOException ex) {
            return closeOnError(ex, "Failed to open cursor for a recording");
        }
    }
    if (replayPublication == null) {
        replayPublication = conductor.newReplayPublication(replayChannel, replayStreamId, replayPosition, mtuLength, initialTermId, termBufferLength);
    }
    if (!replayPublication.isConnected()) {
        if (isLingerDone()) {
            // TODO: add counter
            this.state = State.INACTIVE;
        }
        return 0;
    }
    controlSessionProxy.sendOkResponse(controlPublication, correlationId);
    this.state = State.REPLAY;
    return 1;
}||||||||private int init() {
    if (cursor == null) {
        final String recordingMetaFileName = ArchiveUtil.recordingMetaFileName(recordingId);
        final File recordingMetaFile = new File(archiveDir, recordingMetaFileName);
        if (!recordingMetaFile.exists()) {
            return closeOnError(null, recordingMetaFile.getAbsolutePath() + " not found");
        }
        final RecordingDescriptorDecoder metaData;
        try {
            metaData = ArchiveUtil.loadRecordingDescriptor(recordingMetaFile);
        } catch (final IOException ex) {
            return closeOnError(ex, recordingMetaFile.getAbsolutePath() + " : failed to map");
        }
        final long joiningPosition = metaData.joiningPosition();
        final long lastPosition = metaData.lastPosition();
        mtuLength = metaData.mtuLength();
        termBufferLength = metaData.termBufferLength();
        initialTermId = metaData.initialTermId();
        if (this.replayPosition < joiningPosition) {
            return closeOnError(null, "Requested replay start position(=" + replayPosition + ") is less than recording joining position(=" + joiningPosition + ")");
        }
        final long toPosition = this.replayLength + replayPosition;
        if (toPosition > lastPosition) {
            return closeOnError(null, "Requested replay end position(=" + toPosition + ") is more than recording end position(=" + lastPosition + ")");
        }
        try {
            cursor = new RecordingFragmentReader(recordingId, archiveDir, replayPosition, replayLength);
        } catch (final IOException ex) {
            return closeOnError(ex, "Failed to open cursor for a recording");
        }
    }
    if (replayPublication == null) {
        try {
            replayPublication = conductor.newReplayPublication(replayChannel, replayStreamId, cursor.fromPosition(), mtuLength, initialTermId, termBufferLength);
        } catch (final Exception ex) {
            return closeOnError(ex, "Failed to create replay publication");
        }
    }
    if (!replayPublication.isConnected()) {
        if (isLingerDone()) {
            // TODO: add counter
            this.state = State.INACTIVE;
        }
        return 0;
    }
    controlSessionProxy.sendOkResponse(controlPublication, correlationId);
    this.state = State.REPLAY;
    return 1;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NullLiteralExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
				(ReturnStmt
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
)

