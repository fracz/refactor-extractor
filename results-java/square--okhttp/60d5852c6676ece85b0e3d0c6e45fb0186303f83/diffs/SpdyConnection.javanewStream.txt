/**
 * Returns a new locally-initiated stream.
 *
 * @param out true to create an output stream that we can use to send data
 * to the remote peer. Corresponds to {@code FLAG_FIN}.
 * @param in true to create an input stream that the remote peer can use to
 * send data to us. Corresponds to {@code FLAG_UNIDIRECTIONAL}.
 */
public SpdyStream newStream(List<String> requestHeaders, boolean out, boolean in) throws IOException {
    int flags = (out ? 0 : FLAG_FIN) | (in ? 0 : FLAG_UNIDIRECTIONAL);
    // TODO: permit the caller to specify an associated stream.
    int associatedStreamId = 0;
    // TODO: permit the caller to specify a priority.
    int priority = 0;
    SpdyStream stream;
    int streamId;
    synchronized (spdyWriter) {
        synchronized (this) {
            streamId = nextStreamId;
            nextStreamId += 2;
            stream = new SpdyStream(streamId, this, requestHeaders, flags);
            streams.put(streamId, stream);
        }
        spdyWriter.synStream(flags, streamId, associatedStreamId, priority, requestHeaders);
    }
    return stream;
}||||||||/**
 * Returns a new locally-initiated stream.
 *
 * @param out true to create an output stream that we can use to send data
 * to the remote peer. Corresponds to {@code FLAG_FIN}.
 * @param in true to create an input stream that the remote peer can use to
 * send data to us. Corresponds to {@code FLAG_UNIDIRECTIONAL}.
 */
public SpdyStream newStream(List<String> requestHeaders, boolean out, boolean in) throws IOException {
    int flags = (out ? 0 : FLAG_FIN) | (in ? 0 : FLAG_UNIDIRECTIONAL);
    // TODO: permit the caller to specify an associated stream.
    int associatedStreamId = 0;
    // TODO: permit the caller to specify a priority.
    int priority = 0;
    SpdyStream stream;
    int streamId;
    synchronized (spdyWriter) {
        synchronized (this) {
            if (shutdown) {
                throw new IOException("shutdown");
            }
            streamId = nextStreamId;
            nextStreamId += 2;
            stream = new SpdyStream(streamId, this, requestHeaders, flags);
            streams.put(streamId, stream);
        }
        spdyWriter.synStream(flags, streamId, associatedStreamId, priority, requestHeaders);
    }
    return stream;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ThisExpr
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ThisExpr
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ThisExpr
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ThisExpr
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

