/**
 * Set the connection to be secure, using the specified keystore and
 * truststore. This has to be called before any route mapping is done. You
 * have to supply a keystore file, truststore file is optional (keystore
 * will be reused).
 * This method is only relevant when using embedded Jetty servers. It should
 * not be used if you are using Servlets, where you will need to secure the
 * connection in the servlet container
 *
 * @param keystoreFile       The keystore file location as string
 * @param keystorePassword   the password for the keystore
 * @param truststoreFile     the truststore file location as string, leave null to reuse
 * keystore
 * @param truststorePassword the trust store password
 * @deprecated replaced by {@link #secure(String, String, String, String)}
 */
public synchronized void setSecure(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword) {
    if (initialized) {
        throwBeforeRouteMappingException();
    }
    if (keystoreFile == null) {
        throw new IllegalArgumentException("Must provide a keystore file to run secured");
    }
    this.keystoreFile = keystoreFile;
    this.keystorePassword = keystorePassword;
    this.truststoreFile = truststoreFile;
    this.truststorePassword = truststorePassword;
}||||||||/**
 * Set the connection to be secure, using the specified keystore and
 * truststore. This has to be called before any route mapping is done. You
 * have to supply a keystore file, truststore file is optional (keystore
 * will be reused).
 * This method is only relevant when using embedded Jetty servers. It should
 * not be used if you are using Servlets, where you will need to secure the
 * connection in the servlet container
 *
 * @param keystoreFile       The keystore file location as string
 * @param keystorePassword   the password for the keystore
 * @param truststoreFile     the truststore file location as string, leave null to reuse
 * keystore
 * @param truststorePassword the trust store password
 * @deprecated replaced by {@link #secure(String, String, String, String)}
 */
public synchronized void setSecure(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword) {
    secure(keystoreFile, keystorePassword, truststoreFile, truststorePassword);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

