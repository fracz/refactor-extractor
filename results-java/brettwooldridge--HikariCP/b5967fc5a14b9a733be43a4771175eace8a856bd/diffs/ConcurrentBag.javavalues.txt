/**
 * This method provides a "snaphot" in time of the IBagManagable
 * items in the bag in the specified state.  It does not "lock"
 * or reserve items in any way.  Call {@link #reserve(IBagManagable)}
 * on items in list before performing any action on them.
 *
 * @param state one of STATE_NOT_IN_USE or STATE_IN_USE
 * @return a possibly empty list of objects having the state specified
 */
public List<T> values(final int state) {
    if (state == STATE_IN_USE || state == STATE_NOT_IN_USE) {
        return sharedList.stream().filter(reference -> reference.getState() == state).collect(Collectors.toList());
    }
    return new ArrayList<T>(0);
}||||||||/**
 * This method provides a "snaphot" in time of the IBagManagable
 * items in the bag in the specified state.  It does not "lock"
 * or reserve items in any way.  Call {@link #reserve(IBagManagable)}
 * on items in list before performing any action on them.
 *
 * @param state one of STATE_NOT_IN_USE or STATE_IN_USE
 * @return a possibly empty list of objects having the state specified
 */
public List<T> values(final int state) {
    if (state == STATE_IN_USE || state == STATE_NOT_IN_USE) {
        return sharedList.stream().filter(reference -> reference.state.get() == state).collect(Collectors.toList());
    }
    return new ArrayList<T>(0);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							(LambdaExpr
								(ExpressionStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(IntegerLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							(LambdaExpr
								(ExpressionStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										NameExpr
											SimpleName
									)
								)
								(Parameter
									SimpleName
									(UnknownType
									)
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(IntegerLiteralExpr
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

