public RequestDispatcher getRequestDispatcher(String path) {
    for (final ServletDefinition servletDefinition : servletDefinitions) {
        if (servletDefinition.shouldServe(path)) {
            return new RequestDispatcher() {

                public void forward(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
                    if (servletResponse.isCommitted()) {
                        throw new IllegalStateException("Response has been committed--you can " + "only call forward before committing the response (hint: don't " + "flush buffers)");
                    }
                    // clear buffer before forwarding
                    servletResponse.resetBuffer();
                    // now dispatch to the servlet
                    servletDefinition.doService(servletRequest, servletResponse);
                }

                public void include(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
                    // route to the target servlet
                    servletDefinition.doService(servletRequest, servletResponse);
                }
            };
        }
    }
    // otherwise, can't process
    return null;
}||||||||/**
 * @return Returns a request dispatcher wrapped with a servlet mapped to
 * the given path or null if no mapping was found.
 */
RequestDispatcher getRequestDispatcher(String path) {
    for (final ServletDefinition servletDefinition : servletDefinitions) {
        if (servletDefinition.shouldServe(path)) {
            return new RequestDispatcher() {

                public void forward(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
                    if (servletResponse.isCommitted()) {
                        throw new IllegalStateException("Response has been committed--you can " + "only call forward before committing the response (hint: don't " + "flush buffers)");
                    }
                    // clear buffer before forwarding
                    servletResponse.resetBuffer();
                    // now dispatch to the servlet
                    servletDefinition.doService(servletRequest, servletResponse);
                }

                public void include(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
                    // route to the target servlet
                    servletDefinition.doService(servletRequest, servletResponse);
                }
            };
        }
    }
    // otherwise, can't process
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ThrowStmt
													(ObjectCreationExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

