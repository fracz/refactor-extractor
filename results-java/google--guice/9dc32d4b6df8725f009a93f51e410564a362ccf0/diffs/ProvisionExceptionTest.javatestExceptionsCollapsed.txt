public void testExceptionsCollapsed() {
    try {
        Guice.createInjector().getInstance(A.class);
        fail();
    } catch (ProvisionException e) {
        assertTrue(e.getCause() instanceof UnsupportedOperationException);
        assertContains(e.getMessage(), "Error injecting constructor");
        assertContains(e.getMessage(), "while locating " + "com.google.inject.ProvisionExceptionTest$D");
        assertContains(e.getMessage(), "for parameter 0 at " + "com.google.inject.ProvisionExceptionTest$C.setD");
        assertContains(e.getMessage(), "while locating " + "com.google.inject.ProvisionExceptionTest$C");
        assertContains(e.getMessage(), "for field at " + "com.google.inject.ProvisionExceptionTest$B.c");
        assertContains(e.getMessage(), "while locating " + "com.google.inject.ProvisionExceptionTest$B");
        assertContains(e.getMessage(), "for parameter 0 at " + "com.google.inject.ProvisionExceptionTest$A");
    }
}||||||||public void testExceptionsCollapsed() {
    try {
        Guice.createInjector().getInstance(A.class);
        fail();
    } catch (ProvisionException e) {
        assertTrue(e.getCause() instanceof UnsupportedOperationException);
        assertContains(e.getMessage(), "Error injecting constructor", "while locating com.google.inject.ProvisionExceptionTest$D", "for parameter 0 at com.google.inject.ProvisionExceptionTest$C.setD", "while locating com.google.inject.ProvisionExceptionTest$C", "for field at com.google.inject.ProvisionExceptionTest$B.c", "while locating com.google.inject.ProvisionExceptionTest$B", "for parameter 0 at com.google.inject.ProvisionExceptionTest$A", "while locating com.google.inject.ProvisionExceptionTest$A");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(InstanceOfExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(InstanceOfExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

