public void testInjectNullIntoNotNullableConstructor() {
    try {
        createInjector().getInstance(FooConstructor.class);
        fail("Injecting null should fail with an error");
    } catch (ProvisionException expected) {
        NullPointerException cause = (NullPointerException) expected.getCause();
        assertContains(cause.getMessage(), "null returned by binding at");
        assertContains(cause.getMessage(), "FooConstructor");
        assertContains(cause.getMessage(), "is not @Nullable");
    }
}||||||||public void testInjectNullIntoNotNullableConstructor() {
    try {
        createInjector().getInstance(FooConstructor.class);
        fail("Injecting null should fail with an error");
    } catch (ProvisionException expected) {
        assertContains(expected.getMessage(), "null returned by binding at " + getClass().getName(), "parameter 0 of constructor " + FooConstructor.class.getName() + "() is not @Nullable");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(CastExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								StringLiteralExpr
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

