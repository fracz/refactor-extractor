/**
 * Blocking wait for ack or nack from modem.
 * Called by IOStreamWriter for flow control.
 * @return true if retransmission is necessary
 */
public boolean waitForReply() {
    m_reply = ReplyType.WAITING_FOR_ACK;
    while (m_reply == ReplyType.WAITING_FOR_ACK) {
        try {
            logger.trace("writer waiting for ack.");
            getRequestReplyLock().wait();
            logger.trace("writer got ack: {}", (m_reply == ReplyType.GOT_ACK));
        } catch (InterruptedException e) {
        // do nothing
        }
    }
    return (m_reply == ReplyType.GOT_NACK);
}||||||||/**
 * Blocking wait for ack or nack from modem.
 * Called by IOStreamWriter for flow control.
 * @return true if retransmission is necessary
 */
public boolean waitForReply() {
    m_reply = ReplyType.WAITING_FOR_ACK;
    while (m_reply == ReplyType.WAITING_FOR_ACK) {
        try {
            logger.trace("writer waiting for ack.");
            // There have been cases observed, in particular for
            // the Hub, where we get no ack or nack back, causing the binding
            // to hang in the wait() below, because unsolicited messages
            // do not trigger a notify(). For this reason we request retransmission
            // if the wait() times out.
            // be patient for 30 msec
            getRequestReplyLock().wait(30000);
            if (m_reply == ReplyType.WAITING_FOR_ACK) {
                // timeout expired without getting ACK or NACK
                logger.trace("writer timeout expired, asking for retransmit!");
                m_reply = ReplyType.GOT_NACK;
                break;
            } else {
                logger.trace("writer got ack: {}", (m_reply == ReplyType.GOT_ACK));
            }
        } catch (InterruptedException e) {
        // do nothing
        }
    }
    return (m_reply == ReplyType.GOT_NACK);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

