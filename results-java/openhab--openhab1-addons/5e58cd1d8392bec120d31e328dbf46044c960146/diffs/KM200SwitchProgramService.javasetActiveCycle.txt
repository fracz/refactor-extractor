/**
 * This function sets the cycle
 */
void setActiveCycle(Integer cycle) {
    if (cycle > this.getMaxNbOfSwitchPoints() / 2 || cycle > this.getMaxNbOfSwitchPointsPerDay() / 2 || cycle < 1) {
        throw new IllegalArgumentException("The value of cycle is not valid, get cycle: " + cycle.toString());
    }
    /* limit the cycle to the next one after last (for creating a new one) */
    if (cycle > (getNbrCycles() + 1) || getNbrCycles() == 0) {
        cycle = getNbrCycles() + 1;
    }
    activeCycle = cycle;
}||||||||/**
 * This function sets the cycle
 */
void setActiveCycle(Integer cycle) {
    if (cycle > this.getMaxNbOfSwitchPoints() / 2 || cycle > this.getMaxNbOfSwitchPointsPerDay() / 2 || cycle < 1) {
        logger.error("The value of cycle is not valid, get cycle: {}", cycle);
        throw new IllegalArgumentException("The value of cycle is not valid, get cycle: " + cycle.toString());
    }
    /* limit the cycle to the next one after last (for creating a new one) */
    if (cycle > (getNbrCycles() + 1) || getNbrCycles() == 0) {
        cycle = getNbrCycles() + 1;
    }
    activeCycle = cycle;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(EnclosedExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								(ThisExpr
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(EnclosedExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

