/**
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
@Override
public Object createFromString(EDataType eDataType, String initialValue) {
    switch(eDataType.getClassifierID()) {
        case ModelPackage.SWITCH_STATE:
            return createSwitchStateFromString(eDataType, initialValue);
        case ModelPackage.DIGITAL_STATE:
            return createDigitalStateFromString(eDataType, initialValue);
        case ModelPackage.DC_DRIVE_MODE:
            return createDCDriveModeFromString(eDataType, initialValue);
        case ModelPackage.MIP_CONNECTION:
            return createMIPConnectionFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_DEVICE:
            return createMTinkerDeviceFromString(eDataType, initialValue);
        case ModelPackage.MLOGGER:
            return createMLoggerFromString(eDataType, initialValue);
        case ModelPackage.MATOMIC_BOOLEAN:
            return createMAtomicBooleanFromString(eDataType, initialValue);
        case ModelPackage.MTINKERFORGE_DEVICE:
            return createMTinkerforgeDeviceFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICK_DC:
            return createMTinkerBrickDCFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_DUAL_RELAY:
            return createMTinkerBrickletDualRelayFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_QUAD_RELAY:
            return createMTinkerBrickletIndustrialQuadRelayFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_DIGITAL_IN4:
            return createMTinkerBrickletIndustrialDigitalIn4FromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICK_SERVO:
            return createMTinkerBrickServoFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_HUMIDITY:
            return createMTinkerBrickletHumidityFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_DISTANCE_IR:
            return createMTinkerBrickletDistanceIRFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_TEMPERATURE:
            return createMTinkerBrickletTemperatureFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_BAROMETER:
            return createMTinkerBrickletBarometerFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_AMBIENT_LIGHT:
            return createMTinkerBrickletAmbientLightFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_LCD2_0X4:
            return createMTinkerBrickletLCD20x4FromString(eDataType, initialValue);
        default:
            throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
}||||||||/**
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
@Override
public Object createFromString(EDataType eDataType, String initialValue) {
    switch(eDataType.getClassifierID()) {
        case ModelPackage.DC_DRIVE_MODE:
            return createDCDriveModeFromString(eDataType, initialValue);
        case ModelPackage.MIP_CONNECTION:
            return createMIPConnectionFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_DEVICE:
            return createMTinkerDeviceFromString(eDataType, initialValue);
        case ModelPackage.MLOGGER:
            return createMLoggerFromString(eDataType, initialValue);
        case ModelPackage.MATOMIC_BOOLEAN:
            return createMAtomicBooleanFromString(eDataType, initialValue);
        case ModelPackage.MTINKERFORGE_DEVICE:
            return createMTinkerforgeDeviceFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICK_DC:
            return createMTinkerBrickDCFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_DUAL_RELAY:
            return createMTinkerBrickletDualRelayFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_QUAD_RELAY:
            return createMTinkerBrickletIndustrialQuadRelayFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_DIGITAL_IN4:
            return createMTinkerBrickletIndustrialDigitalIn4FromString(eDataType, initialValue);
        case ModelPackage.SWITCH_STATE:
            return createSwitchStateFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICK_SERVO:
            return createMTinkerBrickServoFromString(eDataType, initialValue);
        case ModelPackage.MTINKERFORGE_VALUE:
            return createMTinkerforgeValueFromString(eDataType, initialValue);
        case ModelPackage.MDECIMAL_VALUE:
            return createMDecimalValueFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_HUMIDITY:
            return createMTinkerBrickletHumidityFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_DISTANCE_IR:
            return createMTinkerBrickletDistanceIRFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_TEMPERATURE:
            return createMTinkerBrickletTemperatureFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_BAROMETER:
            return createMTinkerBrickletBarometerFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_AMBIENT_LIGHT:
            return createMTinkerBrickletAmbientLightFromString(eDataType, initialValue);
        case ModelPackage.MTINKER_BRICKLET_LCD2_0X4:
            return createMTinkerBrickletLCD20x4FromString(eDataType, initialValue);
        default:
            throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

