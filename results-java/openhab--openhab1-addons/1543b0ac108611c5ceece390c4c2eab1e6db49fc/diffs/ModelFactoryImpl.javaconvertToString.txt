/**
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
@Override
public String convertToString(EDataType eDataType, Object instanceValue) {
    switch(eDataType.getClassifierID()) {
        case ModelPackage.SWITCH_STATE:
            return convertSwitchStateToString(eDataType, instanceValue);
        case ModelPackage.DIGITAL_STATE:
            return convertDigitalStateToString(eDataType, instanceValue);
        case ModelPackage.DC_DRIVE_MODE:
            return convertDCDriveModeToString(eDataType, instanceValue);
        case ModelPackage.MIP_CONNECTION:
            return convertMIPConnectionToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_DEVICE:
            return convertMTinkerDeviceToString(eDataType, instanceValue);
        case ModelPackage.MLOGGER:
            return convertMLoggerToString(eDataType, instanceValue);
        case ModelPackage.MATOMIC_BOOLEAN:
            return convertMAtomicBooleanToString(eDataType, instanceValue);
        case ModelPackage.MTINKERFORGE_DEVICE:
            return convertMTinkerforgeDeviceToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICK_DC:
            return convertMTinkerBrickDCToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_DUAL_RELAY:
            return convertMTinkerBrickletDualRelayToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_QUAD_RELAY:
            return convertMTinkerBrickletIndustrialQuadRelayToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_DIGITAL_IN4:
            return convertMTinkerBrickletIndustrialDigitalIn4ToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICK_SERVO:
            return convertMTinkerBrickServoToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_HUMIDITY:
            return convertMTinkerBrickletHumidityToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_DISTANCE_IR:
            return convertMTinkerBrickletDistanceIRToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_TEMPERATURE:
            return convertMTinkerBrickletTemperatureToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_BAROMETER:
            return convertMTinkerBrickletBarometerToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_AMBIENT_LIGHT:
            return convertMTinkerBrickletAmbientLightToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_LCD2_0X4:
            return convertMTinkerBrickletLCD20x4ToString(eDataType, instanceValue);
        default:
            throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
}||||||||/**
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
@Override
public String convertToString(EDataType eDataType, Object instanceValue) {
    switch(eDataType.getClassifierID()) {
        case ModelPackage.DC_DRIVE_MODE:
            return convertDCDriveModeToString(eDataType, instanceValue);
        case ModelPackage.MIP_CONNECTION:
            return convertMIPConnectionToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_DEVICE:
            return convertMTinkerDeviceToString(eDataType, instanceValue);
        case ModelPackage.MLOGGER:
            return convertMLoggerToString(eDataType, instanceValue);
        case ModelPackage.MATOMIC_BOOLEAN:
            return convertMAtomicBooleanToString(eDataType, instanceValue);
        case ModelPackage.MTINKERFORGE_DEVICE:
            return convertMTinkerforgeDeviceToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICK_DC:
            return convertMTinkerBrickDCToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_DUAL_RELAY:
            return convertMTinkerBrickletDualRelayToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_QUAD_RELAY:
            return convertMTinkerBrickletIndustrialQuadRelayToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_INDUSTRIAL_DIGITAL_IN4:
            return convertMTinkerBrickletIndustrialDigitalIn4ToString(eDataType, instanceValue);
        case ModelPackage.SWITCH_STATE:
            return convertSwitchStateToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICK_SERVO:
            return convertMTinkerBrickServoToString(eDataType, instanceValue);
        case ModelPackage.MTINKERFORGE_VALUE:
            return convertMTinkerforgeValueToString(eDataType, instanceValue);
        case ModelPackage.MDECIMAL_VALUE:
            return convertMDecimalValueToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_HUMIDITY:
            return convertMTinkerBrickletHumidityToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_DISTANCE_IR:
            return convertMTinkerBrickletDistanceIRToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_TEMPERATURE:
            return convertMTinkerBrickletTemperatureToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_BAROMETER:
            return convertMTinkerBrickletBarometerToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_AMBIENT_LIGHT:
            return convertMTinkerBrickletAmbientLightToString(eDataType, instanceValue);
        case ModelPackage.MTINKER_BRICKLET_LCD2_0X4:
            return convertMTinkerBrickletLCD20x4ToString(eDataType, instanceValue);
        default:
            throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

