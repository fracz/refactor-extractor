/**
 * Adds <code>provider</code> to the list of {@link BindingProvider}s and
 * adds <code>this</code> as {@link BindingChangeListener}. If
 * <code>provider</code> contains any binding an the refresh-Thread is
 * stopped it will be started.
 *
 * @param provider the new {@link BindingProvider} to add
 */
public void addBindingProvider(P provider) {
    this.providers.add(provider);
    provider.addBindingChangeListener(this);
    start();
}||||||||/**
 * Adds <code>provider</code> to the list of {@link BindingProvider}s and
 * adds <code>this</code> as {@link BindingChangeListener}. If
 * <code>provider</code> contains any binding an the refresh-Thread is
 * stopped it will be started.
 *
 * @param provider the new {@link BindingProvider} to add
 */
public void addBindingProvider(P provider) {
    super.addBindingProvider(provider);
    provider.addBindingChangeListener(this);
    activeService.activate();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

