public String transformOut(String value) throws TransformationException {
    TransformationService ts = getOutTransformationService();
    if (ts != null) {
        return ts.transform(getOutTransformParam(), value);
    } else {
        return value;
    }
}||||||||/**
 * Transform data in an openHAB Item into a form suitable for use in calls
 * made to a MiOS Unit.
 * <p>
 *
 * In order to calls a MiOS Unit, we may need to transform an Item's current
 * value from it's openHAB State to a form suitable for transmission to
 * remote MiOS Unit.
 * <p>
 * This method is responsible for transforming an Item's State value, using
 * metadata supplied by the user, via the <code>out:</code> parameter, in
 * the Binding Configuration.
 * <p>
 * If the <code>out:</code> parameter is missing, then no transformation
 * will occur, and the source-value will be returned.
 * <p>
 * If the <code>out:</code> parameter is present, then it's value is used to
 * determine which openHAB TransformationService should be used to transform
 * the value.
 *
 * @return the transformed value, or the input (<code>value</code>) if no
 * transformation has been specified in the Binding Configuration.
 *
 * @throws TransformationException
 * if the underlying Transformation fails in any manner.
 */
public State transformOut(State value) throws TransformationException {
    TransformationService ts = getOutTransformationService();
    if (ts != null) {
        return createState(ts.transform(getOutTransformParam(), value.toString()));
    } else {
        return value;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

