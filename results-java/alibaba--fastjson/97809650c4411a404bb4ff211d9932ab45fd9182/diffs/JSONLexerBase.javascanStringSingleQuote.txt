private void scanStringSingleQuote() {
    np = bp;
    hasSpecial = false;
    char chLocal;
    for (; ; ) {
        chLocal = next();
        if (chLocal == '\'') {
            break;
        }
        if (chLocal == EOI) {
            if (!isEOF()) {
                putChar((char) EOI);
                continue;
            }
            throw new JSONException("unclosed single-quote string");
        }
        if (chLocal == '\\') {
            if (!hasSpecial) {
                hasSpecial = true;
                if (sp > sbuf.length) {
                    char[] newsbuf = new char[sp * 2];
                    System.arraycopy(sbuf, 0, newsbuf, 0, sbuf.length);
                    sbuf = newsbuf;
                }
                // text.getChars(offset, offset + count, dest, 0);
                this.copyTo(np + 1, sp, sbuf);
            // System.arraycopy(buf, np + 1, sbuf, 0, sp);
            }
            chLocal = next();
            switch(chLocal) {
                case '0':
                    putChar('\0');
                    break;
                case '1':
                    putChar('\1');
                    break;
                case '2':
                    putChar('\2');
                    break;
                case '3':
                    putChar('\3');
                    break;
                case '4':
                    putChar('\4');
                    break;
                case '5':
                    putChar('\5');
                    break;
                case '6':
                    putChar('\6');
                    break;
                case '7':
                    putChar('\7');
                    break;
                case // 8
                'b':
                    putChar('\b');
                    break;
                case // 9
                't':
                    putChar('\t');
                    break;
                case // 10
                'n':
                    putChar('\n');
                    break;
                case // 11
                'v':
                    putChar('\u000B');
                    break;
                // 12
                case 'f':
                case 'F':
                    putChar('\f');
                    break;
                case // 13
                'r':
                    putChar('\r');
                    break;
                case // 34
                '"':
                    putChar('"');
                    break;
                case // 39
                '\'':
                    putChar('\'');
                    break;
                case // 47
                '/':
                    putChar('/');
                    break;
                case // 92
                '\\':
                    putChar('\\');
                    break;
                case 'x':
                    char x1 = chLocal = next();
                    char x2 = chLocal = next();
                    int x_val = digits[x1] * 16 + digits[x2];
                    char x_char = (char) x_val;
                    putChar(x_char);
                    break;
                case 'u':
                    char c1 = chLocal = next();
                    char c2 = chLocal = next();
                    char c3 = chLocal = next();
                    char c4 = chLocal = next();
                    int val = Integer.parseInt(new String(new char[] { c1, c2, c3, c4 }), 16);
                    putChar((char) val);
                    break;
                default:
                    this.ch = chLocal;
                    throw new JSONException("unclosed single-quote string");
            }
            continue;
        }
        if (!hasSpecial) {
            sp++;
            continue;
        }
        if (sp == sbuf.length) {
            putChar(chLocal);
        } else {
            sbuf[sp++] = chLocal;
        }
    }
    token = LITERAL_STRING;
    this.next();
}||||||||private void scanStringSingleQuote() {
    np = bp;
    hasSpecial = false;
    char chLocal;
    for (; ; ) {
        chLocal = next();
        if (chLocal == '\'') {
            break;
        }
        if (chLocal == EOI) {
            if (!isEOF()) {
                putChar((char) EOI);
                continue;
            }
            throw new JSONException("unclosed single-quote string");
        }
        if (chLocal == '\\') {
            if (!hasSpecial) {
                hasSpecial = true;
                if (sp > sbuf.length) {
                    char[] newsbuf = new char[sp * 2];
                    System.arraycopy(sbuf, 0, newsbuf, 0, sbuf.length);
                    sbuf = newsbuf;
                }
                // text.getChars(offset, offset + count, dest, 0);
                this.copyTo(np + 1, sp, sbuf);
            // System.arraycopy(buf, np + 1, sbuf, 0, sp);
            }
            chLocal = next();
            switch(chLocal) {
                case '0':
                    putChar('\0');
                    break;
                case '1':
                    putChar('\1');
                    break;
                case '2':
                    putChar('\2');
                    break;
                case '3':
                    putChar('\3');
                    break;
                case '4':
                    putChar('\4');
                    break;
                case '5':
                    putChar('\5');
                    break;
                case '6':
                    putChar('\6');
                    break;
                case '7':
                    putChar('\7');
                    break;
                case // 8
                'b':
                    putChar('\b');
                    break;
                case // 9
                't':
                    putChar('\t');
                    break;
                case // 10
                'n':
                    putChar('\n');
                    break;
                case // 11
                'v':
                    putChar('\u000B');
                    break;
                // 12
                case 'f':
                case 'F':
                    putChar('\f');
                    break;
                case // 13
                'r':
                    putChar('\r');
                    break;
                case // 34
                '"':
                    putChar('"');
                    break;
                case // 39
                '\'':
                    putChar('\'');
                    break;
                case // 47
                '/':
                    putChar('/');
                    break;
                case // 92
                '\\':
                    putChar('\\');
                    break;
                case 'x':
                    putChar((char) (digits[next()] * 16 + digits[next()]));
                    break;
                case 'u':
                    putChar((char) Integer.parseInt(new String(new char[] { next(), next(), next(), next() }), 16));
                    break;
                default:
                    this.ch = chLocal;
                    throw new JSONException("unclosed single-quote string");
            }
            continue;
        }
        if (!hasSpecial) {
            sp++;
            continue;
        }
        if (sp == sbuf.length) {
            putChar(chLocal);
        } else {
            sbuf[sp++] = chLocal;
        }
    }
    token = LITERAL_STRING;
    this.next();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(PrimitiveType
											)
										)
										SimpleName
									)
								)
								(ContinueStmt
								)
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ArrayCreationExpr
														(PrimitiveType
														)
														(ArrayCreationLevel
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													SimpleName
													(ArrayType
														(PrimitiveType
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(ThisExpr
										)
									)
									LineComment
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								LineComment
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BinaryExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(CastExpr
												NameExpr
													SimpleName
												(PrimitiveType
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ObjectCreationExpr
													(ArrayCreationExpr
														(PrimitiveType
														)
														(ArrayInitializerExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(ArrayCreationLevel
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(PrimitiveType
											)
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NameExpr
											SimpleName
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											NameExpr
												SimpleName
											(PrimitiveType
											)
										)
										SimpleName
									)
								)
								(ContinueStmt
								)
							)
						)
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(CharLiteralExpr
						)
					)
					(BlockStmt
						(IfStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ArrayCreationExpr
														(PrimitiveType
														)
														(ArrayCreationLevel
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													SimpleName
													(ArrayType
														(PrimitiveType
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(ThisExpr
										)
									)
									LineComment
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								LineComment
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(ArrayAccessExpr
															(MethodCallExpr
																SimpleName
															)
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(ArrayAccessExpr
														(MethodCallExpr
															SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(PrimitiveType
											)
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(MethodCallExpr
										(CastExpr
											(MethodCallExpr
												(ObjectCreationExpr
													(ArrayCreationExpr
														(PrimitiveType
														)
														(ArrayInitializerExpr
															(MethodCallExpr
																SimpleName
															)
															(MethodCallExpr
																SimpleName
															)
															(MethodCallExpr
																SimpleName
															)
															(MethodCallExpr
																SimpleName
															)
														)
														(ArrayCreationLevel
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(PrimitiveType
											)
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
										NameExpr
											SimpleName
									)
								)
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(ContinueStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

