public static boolean canDeserialize(Class<?> type) {
    return mapper.canDeserialize(constructType(type));
}||||||||/**
 * Returns {@code true} if the mapper can find a deserializer for instances of given class
 * (potentially deserializable), {@code false} otherwise (not deserializable).
 *
 * @param type    the type of object to deserialize
 * @return {@code true} if instances of {@code type} are potentially deserializable
 */
public boolean canDeserialize(Class<?> type) {
    return mapper.canDeserialize(constructType(type));
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
			)
		)
	)
	(JavadocComment
	)
)

