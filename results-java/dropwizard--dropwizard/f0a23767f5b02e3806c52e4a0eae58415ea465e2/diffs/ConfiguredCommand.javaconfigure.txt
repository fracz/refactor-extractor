/**
 * Configure the command's {@link Subparser}. <p><strong> N.B.: if you override this method, you
 * <em>must</em> call {@code super.override(subparser)} in order to preserve the configuration
 * file parameter in the subparser. </strong></p>
 *
 * @param subparser the {@link Subparser} specific to the command
 */
@Override
public void configure(Subparser subparser) {
    subparser.addArgument("file").nargs("?").help("application configuration file");
}||||||||/**
 * Configure the command's {@link Subparser}. <p><strong> N.B.: if you override this method, you
 * <em>must</em> call {@code super.override(subparser)} in order to preserve the configuration
 * file parameter in the subparser. </strong></p>
 *
 * @param subparser the {@link Subparser} specific to the command
 */
@Override
public void configure(Subparser subparser) {
    addFileArgument(subparser);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

