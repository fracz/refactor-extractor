public void testEnum() throws IOException {
    String translation = translateSourceFile("public enum Color { RED, WHITE, BLUE }", "Color", "Color.m");
    assertTranslation(translation, "ColorEnum *ColorEnum_RED;");
    assertTranslation(translation, "@implementation ColorEnum");
    assertTranslation(translation, "ColorEnum_RED = [[ColorEnum alloc] initWithNSString:@\"RED\" withInt:0];");
    assertTranslation(translation, "ColorEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ " + "ColorEnum_RED, ColorEnum_WHITE, ColorEnum_BLUE, nil } " + "count:3 type:[IOSClass classWithClass:[ColorEnum class]]];");
    assertTranslation(translation, "for (int i = 0; i < [ColorEnum_values count]; i++) {");
    assertTranslation(translation, "ColorEnum *e = ColorEnum_values->buffer_[i];");
}||||||||public void testEnum() throws IOException {
    String translation = translateSourceFile("public enum Color { RED, WHITE, BLUE }", "Color", "Color.m");
    assertTranslation(translation, "ColorEnum *ColorEnum_values[3];");
    assertTranslation(translation, "@implementation ColorEnum");
    assertTranslation(translation, "ColorEnum_RED = [[ColorEnum alloc] initWithNSString:@\"RED\" withInt:0];");
    assertTranslation(translation, "for (int i = 0; i < 3; i++) {");
    assertTranslation(translation, "ColorEnum *e = ColorEnum_values[i];");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

