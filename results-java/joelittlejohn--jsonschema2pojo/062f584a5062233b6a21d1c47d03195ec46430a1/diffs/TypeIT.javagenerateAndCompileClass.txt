@BeforeClass
public static void generateAndCompileClass() throws ClassNotFoundException {
    generatedTypesDirectory = generate("/schema/type/types.json", "com.example", true, false, false);
    classWithManyTypes = compile(generatedTypesDirectory).loadClass("com.example.Types");
}||||||||@BeforeClass
public static void generateAndCompileClass() throws ClassNotFoundException {
    generatedTypesDirectory = generate("/schema/type/types.json", "com.example");
    classWithManyTypes = compile(generatedTypesDirectory).loadClass("com.example.Types");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

