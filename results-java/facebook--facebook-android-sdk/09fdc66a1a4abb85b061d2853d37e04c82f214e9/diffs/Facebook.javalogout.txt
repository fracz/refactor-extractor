/**
 * Invalidate the current user session by removing the access token in
 * memory, clearing the browser cookie, and calling auth.expireSession
 * through the API. If the application needs to be notified before log out
 * starts (in order to make last API calls, for instance) or after log out
 * has finished (to update UI elements), then be sure to provide an
 * appropriate logout listener.
 *
 * @see addLogoutListener()
 *
 * @param context
 * The Android context in which the logout should be called: it
 * should be the same context in which the login occurred in
 * order to clear any stored cookies
 */
public void logout(Context context) {
    for (LogoutListener l : mLogoutListeners) {
        l.onLogoutBegin();
    }
    Util.clearCookies(context);
    Bundle b = new Bundle();
    b.putString("method", "auth.expireSession");
    final Handler handler = new Handler();
    asyncRequest(b, new RequestListener() {

        @Override
        public void onSuccess(String response) {
            setAccessToken(null);
            setAccessExpires(0);
            if (response.length() == 0 || response.equals("false")) {
                Log.w("Facebook-SDK", "Server request failed, " + "but local session state cleared");
            }
            handler.post(new Runnable() {

                @Override
                public void run() {
                    for (LogoutListener l : mLogoutListeners) {
                        l.onLogoutFinish();
                    }
                }
            });
        }

        @Override
        public void onError(String error) {
            Log.w("Facebook-SDK", "auth.expireSession request failed: " + error);
            onSuccess("false");
        }
    });
}||||||||/**
 * Invalidate the current user session by removing the access token in
 * memory, clearing the browser cookie, and calling auth.expireSession
 * through the API. If the application needs to be notified before log out
 * starts (in order to make last API calls, for instance) or after log out
 * has finished (to update UI elements), then be sure to provide an
 * appropriate logout listener.
 *
 * @see addLogoutListener()
 *
 * @param context
 * The Android context in which the logout should be called: it
 * should be the same context in which the login occurred in
 * order to clear any stored cookies
 */
public void logout(Context context, final RequestListener listener) {
    Util.clearCookies(context);
    Bundle b = new Bundle();
    b.putString("method", "auth.expireSession");
    asyncRequest(b, new RequestListener() {

        @Override
        public void onSuccess(String response) {
            setAccessToken(null);
            setAccessExpires(0);
            if (response.length() == 0 || response.equals("false")) {
                onError("Server Request failed");
                return;
            }
            listener.onSuccess(response);
        }

        @Override
        public void onError(String error) {
            setAccessToken(null);
            setAccessExpires(0);
            Log.w("Facebook-SDK", "auth.expireSession request failed, " + "but local session state cleared");
            listener.onError(error);
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NullLiteralExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(BinaryExpr
												StringLiteralExpr
												StringLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ForeachStmt
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NullLiteralExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NullLiteralExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

