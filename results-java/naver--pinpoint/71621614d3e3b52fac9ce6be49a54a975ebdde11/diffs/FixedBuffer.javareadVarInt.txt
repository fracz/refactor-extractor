@Override
public int readVarInt() {
    // borrowing the protocol buffer's concept of variable-length encoding
    byte v = readByte();
    if (v >= 0) {
        return v;
    }
    int result = v & 0x7f;
    if ((v = readByte()) >= 0) {
        result |= v << 7;
    } else {
        result |= (v & 0x7f) << 7;
        if ((v = readByte()) >= 0) {
            result |= v << 14;
        } else {
            result |= (v & 0x7f) << 14;
            if ((v = readByte()) >= 0) {
                result |= v << 21;
            } else {
                result |= (v & 0x7f) << 21;
                result |= (v = readByte()) << 28;
                if (v < 0) {
                    for (int i = 0; i < 5; i++) {
                        if (readByte() >= 0) {
                            return result;
                        }
                    }
                    throw new IllegalArgumentException("invalid varInt");
                }
            }
        }
    }
    return result;
}||||||||@Override
public int readVarInt() {
    final byte[] buffer = this.buffer;
    int offset = this.offset;
    // borrowing the protocol buffer's concept of variable-length encoding
    int result;
    byte v = buffer[offset++];
    if (v >= 0) {
        this.offset = offset;
        return v;
    }
    result = v & 0x7f;
    if ((v = buffer[offset++]) >= 0) {
        result |= v << 7;
    } else {
        result |= (v & 0x7f) << 7;
        if ((v = buffer[offset++]) >= 0) {
            result |= v << 14;
        } else {
            result |= (v & 0x7f) << 14;
            if ((v = buffer[offset++]) >= 0) {
                result |= v << 21;
            } else {
                result |= (v & 0x7f) << 21;
                result |= (v = buffer[offset++]) << 28;
                if (v < 0) {
                    for (int i = 0; i < 5; i++) {
                        if (buffer[offset++] >= 0) {
                            this.offset = offset;
                            return result;
                        }
                    }
                    throw new IllegalArgumentException("invalid varInt. start offset:" + this.offset + " readOffset:" + offset);
                }
            }
        }
    }
    this.offset = offset;
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(EnclosedExpr
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ForStmt
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BlockStmt
														(ReturnStmt
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayAccessExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(EnclosedExpr
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(EnclosedExpr
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											(UnaryExpr
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											(EnclosedExpr
												(AssignExpr
													NameExpr
														SimpleName
													(ArrayAccessExpr
														(UnaryExpr
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ForStmt
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(ArrayAccessExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																(FieldAccessExpr
																	SimpleName
																	(ThisExpr
																	)
																)
																NameExpr
																	SimpleName
															)
														)
														(ReturnStmt
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(VariableDeclarationExpr
												(VariableDeclarator
													(IntegerLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(FieldAccessExpr
																SimpleName
																(ThisExpr
																)
															)
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

