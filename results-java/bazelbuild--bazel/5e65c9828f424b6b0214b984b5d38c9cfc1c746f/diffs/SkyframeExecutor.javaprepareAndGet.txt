/**
 * For internal use in queries: performs a graph update to make sure the transitive closure of the
 * specified {@code universeKey} is present in the graph, and returns the {@link
 * EvaluationResult}.
 *
 * <p>The graph update is unconditionally done in keep-going mode, so that the query is guaranteed
 * a complete graph to work on.
 */
@Override
public EvaluationResult<SkyValue> prepareAndGet(SkyKey universeKey, int numThreads, ExtendedEventHandler eventHandler) throws InterruptedException {
    EvaluationResult<SkyValue> evaluationResult = buildDriver.evaluate(ImmutableList.of(universeKey), true, numThreads, eventHandler);
    Preconditions.checkNotNull(evaluationResult.getWalkableGraph(), universeKey);
    return evaluationResult;
}||||||||/**
 * For internal use in queries: performs a graph update to make sure the transitive closure of the
 * specified {@code universeKey} is present in the graph, and returns the {@link
 * EvaluationResult}.
 *
 * <p>The graph update is unconditionally done in keep-going mode, so that the query is guaranteed
 * a complete graph to work on.
 */
@Override
public EvaluationResult<SkyValue> prepareAndGet(Set<SkyKey> roots, int numThreads, ExtendedEventHandler eventHandler) throws InterruptedException {
    EvaluationResult<SkyValue> evaluationResult = buildDriver.evaluate(roots, true, numThreads, eventHandler);
    return evaluationResult;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

