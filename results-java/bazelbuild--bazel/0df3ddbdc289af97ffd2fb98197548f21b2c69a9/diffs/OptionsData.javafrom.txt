/**
 * Constructs an {@link OptionsData} object for a parser that knows about the given {@link
 * OptionsBase} classes. In addition to the work done to construct the {@link
 * IsolatedOptionsData}, this also computes expansion information. If an option has static
 * expansions or uses an expansion function that takes a Void object, try to precalculate the
 * expansion here.
 */
static OptionsData from(Collection<Class<? extends OptionsBase>> classes) {
    IsolatedOptionsData isolatedData = IsolatedOptionsData.from(classes);
    // All that's left is to compute expansions.
    ImmutableMap.Builder<Field, ExpansionData> expansionDataBuilder = ImmutableMap.<Field, ExpansionData>builder();
    for (Map.Entry<String, Field> entry : isolatedData.getAllNamedFields()) {
        Field field = entry.getValue();
        Option annotation = field.getAnnotation(Option.class);
        // Determine either the hard-coded expansion, or the ExpansionFunction class.
        String[] constExpansion = annotation.expansion();
        Class<? extends ExpansionFunction> expansionFunctionClass = annotation.expansionFunction();
        if (constExpansion.length > 0 && usesExpansionFunction(annotation)) {
            throw new AssertionError("Cannot set both expansion and expansionFunction for option --" + annotation.name());
        } else if (constExpansion.length > 0) {
            expansionDataBuilder.put(field, new ExpansionData(ImmutableList.copyOf(constExpansion)));
        } else if (usesExpansionFunction(annotation)) {
            if (Modifier.isAbstract(expansionFunctionClass.getModifiers())) {
                throw new AssertionError("The expansionFunction type " + expansionFunctionClass + " must be a concrete type");
            }
            // Evaluate the ExpansionFunction.
            ExpansionFunction instance;
            try {
                Constructor<?> constructor = expansionFunctionClass.getConstructor();
                instance = (ExpansionFunction) constructor.newInstance();
            } catch (Exception e) {
                // time it is used.
                throw new AssertionError(e);
            }
            ImmutableList<String> staticExpansion = null;
            try {
                staticExpansion = instance.getExpansion(new ExpansionContext(isolatedData, field, null));
                Preconditions.checkState(staticExpansion != null, "Error calling expansion function for option: %s", annotation.name());
                expansionDataBuilder.put(field, new ExpansionData(staticExpansion));
            } catch (ExpansionNeedsValueException e) {
                // This expansion function needs data that isn't available yet. Save the instance and call
                // it later.
                expansionDataBuilder.put(field, new ExpansionData(instance));
            } catch (OptionsParsingException e) {
                throw new IllegalStateException("Error expanding void expansion function: ", e);
            }
        }
    }
    return new OptionsData(isolatedData, expansionDataBuilder.build());
}||||||||/**
 * Constructs an {@link OptionsData} object for a parser that knows about the given {@link
 * OptionsBase} classes. In addition to the work done to construct the {@link
 * IsolatedOptionsData}, this also computes expansion information. If an option has static
 * expansions or uses an expansion function that takes a Void object, try to precalculate the
 * expansion here.
 */
static OptionsData from(Collection<Class<? extends OptionsBase>> classes) {
    IsolatedOptionsData isolatedData = IsolatedOptionsData.from(classes);
    // All that's left is to compute expansions.
    ImmutableMap.Builder<Field, ExpansionData> expansionDataBuilder = ImmutableMap.builder();
    for (Map.Entry<String, Field> entry : isolatedData.getAllNamedFields()) {
        Field field = entry.getValue();
        Option annotation = field.getAnnotation(Option.class);
        // Determine either the hard-coded expansion, or the ExpansionFunction class.
        String[] constExpansion = annotation.expansion();
        Class<? extends ExpansionFunction> expansionFunctionClass = annotation.expansionFunction();
        if (constExpansion.length > 0 && usesExpansionFunction(annotation)) {
            throw new AssertionError("Cannot set both expansion and expansionFunction for option --" + annotation.name());
        } else if (constExpansion.length > 0) {
            expansionDataBuilder.put(field, new ExpansionData(ImmutableList.copyOf(constExpansion)));
        } else if (usesExpansionFunction(annotation)) {
            if (Modifier.isAbstract(expansionFunctionClass.getModifiers())) {
                throw new AssertionError("The expansionFunction type " + expansionFunctionClass + " must be a concrete type");
            }
            // Evaluate the ExpansionFunction.
            ExpansionFunction instance;
            try {
                Constructor<?> constructor = expansionFunctionClass.getConstructor();
                instance = (ExpansionFunction) constructor.newInstance();
            } catch (Exception e) {
                // time it is used.
                throw new AssertionError(e);
            }
            ImmutableList<String> staticExpansion;
            try {
                staticExpansion = instance.getExpansion(new ExpansionContext(isolatedData, field, null));
                Preconditions.checkState(staticExpansion != null, "Error calling expansion function for option: %s", annotation.name());
                expansionDataBuilder.put(field, new ExpansionData(staticExpansion));
            } catch (ExpansionNeedsValueException e) {
                // This expansion function needs data that isn't available yet. Save the instance and call
                // it later.
                expansionDataBuilder.put(field, new ExpansionData(instance));
            } catch (OptionsParsingException e) {
                throw new IllegalStateException("Error expanding void expansion function: ", e);
            }
        }
    }
    return new OptionsData(isolatedData, expansionDataBuilder.build());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												LineComment
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(WildcardType
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NullLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(WildcardType
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												LineComment
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(WildcardType
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(CatchClause
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													(ObjectCreationExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NullLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(WildcardType
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(JavadocComment
	)
)

