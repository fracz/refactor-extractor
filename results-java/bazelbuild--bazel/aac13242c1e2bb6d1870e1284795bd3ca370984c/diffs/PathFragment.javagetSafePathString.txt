/**
 * Returns "." if the path fragment is both relative and empty, or {@link
 * #getPathString} otherwise.
 */
// TODO(bazel-team): Change getPathString to do this - this behavior makes more sense.
public String getSafePathString() {
    return (!isAbsolute && (segmentCount() == 0)) ? "." : getPathString();
}||||||||/**
 * Returns "." if the path fragment is both relative and empty, or {@link
 * #getPathString} otherwise.
 */
// TODO(bazel-team): Change getPathString to do this - this behavior makes more sense.
public String getSafePathString() {
    return (!isAbsolute() && (segmentCount() == 0)) ? "." : getPathString();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				StringLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
				(MethodCallExpr
					SimpleName
				)
				StringLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	LineComment
)

