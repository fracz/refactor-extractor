/**
 * Finds and invalidates changed files under path entries whose corresponding
 * {@link DiffAwareness} said all files may have been modified.
 */
private void handleDiffsWithMissingDiffInformation(EventHandler eventHandler, TimestampGranularityMonitor tsgm, Set<Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet>> pathEntriesWithoutDiffInformation, boolean checkOutputFiles) throws InterruptedException {
    ExternalFilesKnowledge externalFilesKnowledge = externalFilesHelper.getExternalFilesKnowledge();
    if (pathEntriesWithoutDiffInformation.isEmpty() && Iterables.isEmpty(customDirtinessCheckers) && ((!externalFilesKnowledge.anyOutputFilesSeen || !checkOutputFiles) && !externalFilesKnowledge.anyNonOutputExternalFilesSeen)) {
        // path) files need to be checked.
        return;
    }
    // Before running the FilesystemValueChecker, ensure that all values marked for invalidation
    // have actually been invalidated (recall that invalidation happens at the beginning of the
    // next evaluate() call), because checking those is a waste of time.
    buildDriver.evaluate(ImmutableList.<SkyKey>of(), false, DEFAULT_THREAD_COUNT, eventHandler);
    FilesystemValueChecker fsvc = new FilesystemValueChecker(tsgm, null);
    // We need to manually check for changes to known files. This entails finding all dirty file
    // system values under package roots for which we don't have diff information. If at least
    // one path entry doesn't have diff information, then we're going to have to iterate over
    // the skyframe values at least once no matter what.
    Set<Path> diffPackageRootsUnderWhichToCheck = new HashSet<>();
    for (Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
        diffPackageRootsUnderWhichToCheck.add(pair.getFirst());
    }
    // We freshly compute knowledge of the presence of external files in the skyframe graph. We use
    // a fresh ExternalFilesHelper instance and only set the real instance's knowledge *after* we
    // are done with the graph scan, lest an interrupt during the graph scan causes us to
    // incorrectly think there are no longer any external files.
    ExternalFilesHelper tmpExternalFilesHelper = externalFilesHelper.cloneWithFreshExternalFilesKnowledge();
    // See the comment for FileType.OUTPUT for why we need to consider output files here.
    EnumSet<FileType> fileTypesToCheck = checkOutputFiles ? EnumSet.of(FileType.EXTERNAL, FileType.EXTERNAL_REPO, FileType.OUTPUT) : EnumSet.of(FileType.EXTERNAL, FileType.EXTERNAL_REPO);
    Differencer.Diff diff = fsvc.getDirtyKeys(memoizingEvaluator.getValues(), new UnionDirtinessChecker(Iterables.concat(customDirtinessCheckers, ImmutableList.<SkyValueDirtinessChecker>of(new ExternalDirtinessChecker(tmpExternalFilesHelper, fileTypesToCheck), new MissingDiffDirtinessChecker(diffPackageRootsUnderWhichToCheck)))));
    handleChangedFiles(diffPackageRootsUnderWhichToCheck, diff);
    for (Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
        pair.getSecond().markProcessed();
    }
    // We use the knowledge gained during the graph scan that just completed. Otherwise, naively,
    // once an external file gets into the Skyframe graph, we'll overly-conservatively always think
    // the graph needs to be scanned.
    externalFilesHelper.setExternalFilesKnowledge(tmpExternalFilesHelper.getExternalFilesKnowledge());
}||||||||/**
 * Finds and invalidates changed files under path entries whose corresponding
 * {@link DiffAwareness} said all files may have been modified.
 */
private void handleDiffsWithMissingDiffInformation(EventHandler eventHandler, TimestampGranularityMonitor tsgm, Set<Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet>> pathEntriesWithoutDiffInformation, boolean checkOutputFiles) throws InterruptedException {
    ExternalFilesKnowledge externalFilesKnowledge = externalFilesHelper.getExternalFilesKnowledge();
    if (pathEntriesWithoutDiffInformation.isEmpty() && Iterables.isEmpty(customDirtinessCheckers) && ((!externalFilesKnowledge.anyOutputFilesSeen || !checkOutputFiles) && !externalFilesKnowledge.anyNonOutputExternalFilesSeen)) {
        // path) files need to be checked.
        return;
    }
    // Before running the FilesystemValueChecker, ensure that all values marked for invalidation
    // have actually been invalidated (recall that invalidation happens at the beginning of the
    // next evaluate() call), because checking those is a waste of time.
    buildDriver.evaluate(ImmutableList.<SkyKey>of(), false, DEFAULT_THREAD_COUNT, eventHandler);
    FilesystemValueChecker fsvc = new FilesystemValueChecker(tsgm, null);
    // We need to manually check for changes to known files. This entails finding all dirty file
    // system values under package roots for which we don't have diff information. If at least
    // one path entry doesn't have diff information, then we're going to have to iterate over
    // the skyframe values at least once no matter what.
    Set<Path> diffPackageRootsUnderWhichToCheck = new HashSet<>();
    for (Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
        diffPackageRootsUnderWhichToCheck.add(pair.getFirst());
    }
    // We freshly compute knowledge of the presence of external files in the skyframe graph. We use
    // a fresh ExternalFilesHelper instance and only set the real instance's knowledge *after* we
    // are done with the graph scan, lest an interrupt during the graph scan causes us to
    // incorrectly think there are no longer any external files.
    ExternalFilesHelper tmpExternalFilesHelper = externalFilesHelper.cloneWithFreshExternalFilesKnowledge();
    // See the comment for FileType.OUTPUT for why we need to consider output files here.
    EnumSet<FileType> fileTypesToCheck = checkOutputFiles ? EnumSet.of(FileType.EXTERNAL, FileType.EXTERNAL_REPO, FileType.OUTPUT) : EnumSet.of(FileType.EXTERNAL, FileType.EXTERNAL_REPO);
    LOG.info("About to scan skyframe graph checking for filesystem nodes of types " + Iterables.toString(fileTypesToCheck));
    Differencer.Diff diff = fsvc.getDirtyKeys(memoizingEvaluator.getValues(), new UnionDirtinessChecker(Iterables.concat(customDirtinessCheckers, ImmutableList.<SkyValueDirtinessChecker>of(new ExternalDirtinessChecker(tmpExternalFilesHelper, fileTypesToCheck), new MissingDiffDirtinessChecker(diffPackageRootsUnderWhichToCheck)))));
    handleChangedFiles(diffPackageRootsUnderWhichToCheck, diff);
    for (Pair<Path, DiffAwarenessManager.ProcessableModifiedFileSet> pair : pathEntriesWithoutDiffInformation) {
        pair.getSecond().markProcessed();
    }
    // We use the knowledge gained during the graph scan that just completed. Otherwise, naively,
    // once an external file gets into the Skyframe graph, we'll overly-conservatively always think
    // the graph needs to be scanned.
    externalFilesHelper.setExternalFilesKnowledge(tmpExternalFilesHelper.getExternalFilesKnowledge());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ObjectCreationExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

