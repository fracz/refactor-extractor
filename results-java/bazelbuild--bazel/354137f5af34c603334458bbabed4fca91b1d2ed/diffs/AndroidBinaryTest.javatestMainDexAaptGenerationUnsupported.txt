@Test
public void testMainDexAaptGenerationUnsupported() throws Exception {
    scratch.file("sdk/BUILD", "android_sdk(", "    name = 'sdk',", "    build_tools_version = '24.0.0-rc3',", "    aapt = 'aapt',", "    adb = 'adb',", "    aidl = 'aidl',", "    android_jar = 'android.jar',", "    annotations_jar = 'annotations_jar',", "    apkbuilder = 'apkbuilder',", "    apksigner = 'apksigner',", "    dx = 'dx',", "    framework_aidl = 'framework_aidl',", "    main_dex_classes = 'main_dex_classes',", "    main_dex_list_creator = 'main_dex_list_creator',", "    proguard = 'proguard',", "    shrinked_android_jar = 'shrinked_android_jar',", "    zipalign = 'zipalign',", "    jack = 'jack',", "    jill = 'jill',", "    resource_extractor = 'resource_extractor')");
    scratch.file("java/a/BUILD", "android_binary(", "    name = 'a',", "    srcs = ['A.java'],", "    manifest = 'AndroidManifest.xml',", "    multidex = 'legacy')");
    useConfiguration("--android_sdk=//sdk:sdk", "--experimental_android_use_singlejar_for_multidex");
    ConfiguredTarget a = getConfiguredTarget("//java/a:a");
    Artifact intermediateJar = artifactByPath(getFilesToBuild(a), ".apk", ".dex.zip", ".dex.zip", "main_dex_list.txt", "_intermediate.jar");
    List<String> args = getGeneratingSpawnAction(intermediateJar).getArguments();
    assertEquals(-1, Collections.indexOfSubList(args, ImmutableList.of("-include", targetConfig.getBinFragment() + "/java/a/proguard/a/main_dex_a_proguard.cfg")));
}||||||||@Test
public void testMainDexAaptGenerationUnsupported() throws Exception {
    scratch.file("sdk/BUILD", "android_sdk(", "    name = 'sdk',", "    build_tools_version = '24.0.0-rc3',", "    aapt = 'aapt',", "    adb = 'adb',", "    aidl = 'aidl',", "    android_jar = 'android.jar',", "    annotations_jar = 'annotations_jar',", "    apkbuilder = 'apkbuilder',", "    apksigner = 'apksigner',", "    dx = 'dx',", "    framework_aidl = 'framework_aidl',", "    main_dex_classes = 'main_dex_classes',", "    main_dex_list_creator = 'main_dex_list_creator',", "    proguard = 'proguard',", "    shrinked_android_jar = 'shrinked_android_jar',", "    zipalign = 'zipalign',", "    jack = 'jack',", "    jill = 'jill',", "    resource_extractor = 'resource_extractor')");
    scratch.file("java/a/BUILD", "android_binary(", "    name = 'a',", "    srcs = ['A.java'],", "    manifest = 'AndroidManifest.xml',", "    multidex = 'legacy')");
    useConfiguration("--android_sdk=//sdk:sdk", "--experimental_android_use_singlejar_for_multidex");
    ConfiguredTarget a = getConfiguredTarget("//java/a:a");
    Artifact intermediateJar = artifactByPath(ImmutableList.of(getCompressedUnsignedApk(a)), ".apk", ".dex.zip", ".dex.zip", "main_dex_list.txt", "_intermediate.jar");
    List<String> args = getGeneratingSpawnAction(intermediateJar).getArguments();
    assertEquals(-1, Collections.indexOfSubList(args, ImmutableList.of("-include", targetConfig.getBinFragment() + "/java/a/proguard/a/main_dex_a_proguard.cfg")));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						StringLiteralExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

