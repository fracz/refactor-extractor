@Test
public void testFilterByDensityPersistsOrdering() {
    testFilter(ImmutableList.<String>of(), ImmutableList.of("hdpi", "ldpi"), FilterBehavior.FILTER_IN_ANALYSIS, // rearranged.
    ImmutableList.of("drawable-hdpi/foo.png", "drawable-ldpi/foo.png", "drawable-ldpi/bar.png", "drawable-hdpi/bar.png"), // filtering was a no-op.
    ImmutableList.of("drawable-mdpi/foo.png", "drawable-mdpi/bar.png"));
}||||||||@Test
public void testFilterByDensityPersistsOrdering() throws Exception {
    testFilter("", "hdpi,ldpi", FilterBehavior.FILTER_IN_ANALYSIS, // rearranged.
    ImmutableList.of("drawable-hdpi/foo.png", "drawable-ldpi/foo.png", "drawable-ldpi/bar.png", "drawable-hdpi/bar.png"), // filtering was a no-op.
    ImmutableList.of("drawable-mdpi/foo.png", "drawable-mdpi/bar.png"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
					LineComment
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

