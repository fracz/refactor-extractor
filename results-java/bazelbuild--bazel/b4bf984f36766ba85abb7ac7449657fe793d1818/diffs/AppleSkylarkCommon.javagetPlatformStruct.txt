@SkylarkCallable(name = "platform", doc = "Returns a struct containing fields corresponding to Apple platforms. These values " + "can be passed to methods that expect a platform, like the 'apple' configuration " + "fragment's 'sdk_version_for_platform' method. Each platform_type except for macosx " + "has two platform types -- one for device, and one for simulator.", structField = true)
public SkylarkClassObject getPlatformStruct() {
    if (platform == null) {
        platform = ApplePlatform.getSkylarkStruct();
    }
    return platform;
}||||||||@SkylarkCallable(name = "platform", doc = "An enum-like struct that contains the following fields corresponding to Apple " + "platforms:<br><ul>" + "<li><code>ios_device</code></li>" + "<li><code>ios_simulator</code></li>" + "<li><code>macos</code></li>" + "<li><code>tvos_device</code></li>" + "<li><code>tvos_simulator</code></li>" + "<li><code>watchos_device</code></li>" + "<li><code>watchos_device</code></li>" + "</ul><p>" + "These values can be passed to methods that expect a platform, like " + "<a href='apple.html#sdk_version_for_platform'>apple.sdk_version_for_platform</a>.", structField = true)
public SkylarkClassObject getPlatformStruct() {
    if (platform == null) {
        platform = ApplePlatform.getSkylarkStruct();
    }
    return platform;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
			)
		)
		(MemberValuePair
			SimpleName
			(BooleanLiteralExpr
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				StringLiteralExpr
			)
		)
		(MemberValuePair
			SimpleName
			(BooleanLiteralExpr
			)
		)
		Name
	)
)

