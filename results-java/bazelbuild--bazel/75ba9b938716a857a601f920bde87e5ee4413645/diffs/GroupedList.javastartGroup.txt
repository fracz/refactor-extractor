/**
 * Starts a group. All elements added until {@link #endGroup} will be in the same group. Each
 * call of startGroup must be paired with a following {@link #endGroup} call. Any duplicate
 * elements added to this group will be silently deduplicated.
 */
public void startGroup() {
    Preconditions.checkState(currentGroup == null, this);
    currentGroup = new HashSet<>();
}||||||||/**
 * Starts a group. All elements added until {@link #endGroup} will be in the same group. Each
 * call of startGroup must be paired with a following {@link #endGroup} call. Any duplicate
 * elements added to this group will be silently deduplicated.
 */
public void startGroup() {
    Preconditions.checkState(currentGroup == null, this);
    currentGroup = CompactHashSet.create();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

