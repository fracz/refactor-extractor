/**
 * A step is seen as the step to be defined between 2 labels. As an
 * example a step of 2 with a maxAxisValue of 6 will end up with
 * {0, 2, 4, 6} as labels.
 *
 * @param maxValue   The maximum value that Y axis will have as a label
 * @param step   (real) value distance from every label
 */
public ChartView setAxisBorderValues(int minValue, int maxValue, int step) {
    if ((maxValue - minValue) % step != 0)
        Log.e(TAG, "Step value must be a divisor of distance between " + "minValue and maxValue", new IllegalArgumentException());
    if (orientation == Orientation.VERTICAL) {
        verController.maxLabelValue = maxValue;
        verController.minLabelValue = minValue;
        verController.step = step;
    } else {
        horController.maxLabelValue = maxValue;
        horController.minLabelValue = minValue;
        horController.step = step;
    }
    return this;
}||||||||/**
 * A step is seen as the step to be defined between 2 labels. As an
 * example a step of 2 with a maxAxisValue of 6 will end up with
 * {0, 2, 4, 6} as labels.
 *
 * @param maxValue   The maximum value that Y axis will have as a label
 * @param step   (real) value distance from every label
 */
public ChartView setAxisBorderValues(int minValue, int maxValue, int step) {
    if ((maxValue - minValue) % step != 0)
        Log.e(TAG, "Step value must be a divisor of distance between " + "minValue and maxValue", new IllegalArgumentException());
    setStep(step);
    if (orientation == Orientation.VERTICAL) {
        verController.maxLabelValue = maxValue;
        verController.minLabelValue = minValue;
    } else {
        horController.maxLabelValue = maxValue;
        horController.minLabelValue = minValue;
    }
    return this;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

