/**
 * Performs a reduction on the values for each key of this stream by repeatedly applying the reducer.
 *
 * @param reducer the reducer
 * @return the new stream
 */
public PairStream<K, V> reduceByKey(Reducer<V> reducer) {
    return new PairStream<>(streamBuilder, addProcessorNode(new ReduceByKeyProcessor<>(reducer), KEY_VALUE));
}||||||||/**
 * Performs a reduction on the values for each key of this stream by repeatedly applying the reducer.
 *
 * @param reducer the reducer
 * @return the new stream
 */
public PairStream<K, V> reduceByKey(Reducer<V> reducer) {
    return combineByKey(reducer);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					NameExpr
						SimpleName
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

