/**
 * Forwards the result update to downstream processors. Processors
 * that operate on a batch of tuples, like aggregation, join etc
 * can use this to emit the partial results on each input
 * if they are operating in non-windowed mode.
 *
 * @param result the result
 * @param <R>    the result type
 */
protected final <R> void mayBeForwardAggUpdate(R result) {
    if (!context.isWindowed()) {
        context.forward(result);
    }
}||||||||/**
 * Forwards the result update to downstream processors. Processors
 * that operate on a batch of tuples, like aggregation, join etc
 * can use this to emit the partial results on each input
 * if they are operating in non-windowed mode.
 *
 * @param result the result function
 * @param <R>    the result type
 */
protected final <R> void mayBeForwardAggUpdate(Supplier<R> result) {
    if (!context.isWindowed()) {
        context.forward(result.get());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

