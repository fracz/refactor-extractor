public void testOtherArrayAnnotation() {
    assertGeneratedMatches(ImmutableList.<String>of(), ImmutableList.of(TEST_ANNOTATION + "Array(testBooleans = {false, false}," + " testStrings = {\"aaa\", \"bbb\"}, testChars={'x', 'y'})"), ImmutableList.of(TEST_ANNOTATION + "Array(testBooleans = {false, false}," + " testStrings = {\"aaa\", \"bbb\"}, testChars={'x', 'y'})"));
}||||||||public void testOtherArrayAnnotation() {
    assertGeneratedMatches(ImmutableList.of(IMPORT_TEST_ARRAY_ANNOTATION), ImmutableList.of(TEST_ARRAY_ANNOTATION + "(testBooleans = {false, false}," + " testStrings = {\"aaa\", \"bbb\"}, testChars={'x', 'y'})"), ImmutableList.of(TEST_ARRAY_ANNOTATION + "(testBooleans = {false, false}," + " testStrings = {\"aaa\", \"bbb\"}, testChars={'x', 'y'})"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

