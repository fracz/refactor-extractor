public void testArrayOfValuedAnnotationAnnotation() {
    assertGeneratedMatches(ImmutableList.<String>of(), ImmutableList.of(TEST_ANNOTATION + "Array(testAnnotations = {@" + PROPERTY_ANNOTATION_TEST + ".OtherAnnotation(foo = 999)})"), ImmutableList.of(TEST_ANNOTATION + "Array(testAnnotations = {@" + PROPERTY_ANNOTATION_TEST + ".OtherAnnotation(foo = 999)})"));
}||||||||public void testArrayOfValuedAnnotationAnnotation() {
    assertGeneratedMatches(ImmutableList.of(IMPORT_TEST_ARRAY_ANNOTATION), ImmutableList.of(TEST_ARRAY_ANNOTATION + "(testAnnotations = {@" + PROPERTY_ANNOTATION_TEST + ".OtherAnnotation(foo = 999)})"), ImmutableList.of(TEST_ARRAY_ANNOTATION + "(testAnnotations = {@" + PROPERTY_ANNOTATION_TEST + ".OtherAnnotation(foo = 999)})"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

