/**
 * Expects an object implementing the given class. For details, see the
 * EasyMock documentation.
 *
 * @param <T>
 * the accepted type.
 * @param clazz
 * the class of the accepted type.
 * @return <code>null</code>.
 */
public static <T> T isA(Class<T> clazz) {
    LastArguments.reportMatcher(new InstanceOf(clazz));
    return null;
}||||||||/**
 * Expects an object implementing the given class. For details, see the
 * EasyMock documentation.
 *
 * @param <T>
 * the accepted type.
 * @param clazz
 * the class of the accepted type.
 * @return <code>null</code>.
 */
public static <T> T isA(Class<T> clazz) {
    LastArguments.instance().reportMatcher(new InstanceOf(clazz));
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

