package org.mockito.usage;

import static org.junit.Assert.fail;
import static org.mockito.Mockito.*;

import java.util.List;

import org.junit.*;
import org.mockito.exceptions.*;
import org.mockito.internal.StateResetter;

@SuppressWarnings("unchecked")
public class MockitoExploitsTest {

    @Before
    @After
    public void resetState() {
        StateResetter.reset();
    }

    @Test
    public void shouldDetectStubbingWithoutMethodCallOnMock() {
        try {
            stub("blah".contains("blah"));
            fail();
        } catch (MissingMethodInvocationException e) {
            //cool
        }
    }

    @Ignore
    @Test
    public void unfinishedStubbingDetectedOnVerify() {
        List mock = mock(List.class);

        stub(mock.add("test"));

        try {
            verifyZeroInteractions(mock);
            fail();
        } catch (UnfinishedStubbingException e) {}
    }

    @Ignore
    @Test
    public void unfinishedStubbingDetectedWhenAnotherStubbingIsStarted() {
        List mock = mock(List.class);

        stub(mock.add("test"));

        try {
            stub(mock.add("test")).andThrows(new Exception("ssdf"));
            fail();
        } catch (UnfinishedStubbingException e) {}
    }

    @Ignore
    @Test
    public void unfinishedStubbingDetectedMockCalled() {
        List mock = mock(List.class);

        stub(mock.add("test"));

        try {
            mock.clear();
            fail();
        } catch (UnfinishedStubbingException e) {}
    }
}