@Test
public void timingASeriesOfEvents() throws Exception {
    timer.update(10, TimeUnit.MILLISECONDS);
    timer.update(20, TimeUnit.MILLISECONDS);
    timer.update(20, TimeUnit.MILLISECONDS);
    timer.update(30, TimeUnit.MILLISECONDS);
    timer.update(40, TimeUnit.MILLISECONDS);
    assertThat("the timer has a count of 5", timer.count(), is(5L));
    assertThat("the timer has a max duration of 40", timer.max(), is(closeTo(40.0, 0.001)));
    assertThat("the timer has a min duration of 10", timer.min(), is(closeTo(10.0, 0.001)));
    assertThat("the timer has a mean duration of 24", timer.mean(), is(closeTo(24.0, 0.001)));
    assertThat("the timer has a duration standard deviation of zero", timer.stdDev(), is(closeTo(11.401, 0.001)));
    final double[] percentiles = timer.percentiles(0.5, 0.75, 0.99);
    assertThat("the timer has a median duration of 20", percentiles[0], is(closeTo(20.0, 0.001)));
    assertThat("the timer has a 75th percentile duration of 35", percentiles[1], is(closeTo(35.0, 0.001)));
    assertThat("the timer has a 99th percentile duration of 40", percentiles[2], is(closeTo(40.0, 0.001)));
    assertThat("the timer has no values", timer.values(), hasItems(10.0, 20.0, 20.0, 30.0, 40.0));
}||||||||@Test
public void timingASeriesOfEvents() throws Exception {
    timer.update(10, TimeUnit.MILLISECONDS);
    timer.update(20, TimeUnit.MILLISECONDS);
    timer.update(20, TimeUnit.MILLISECONDS);
    timer.update(30, TimeUnit.MILLISECONDS);
    timer.update(40, TimeUnit.MILLISECONDS);
    assertThat("the timer has a count of 5", timer.count(), is(5L));
    assertThat("the timer has a max duration of 40", timer.max(), is(closeTo(40.0, 0.001)));
    assertThat("the timer has a min duration of 10", timer.min(), is(closeTo(10.0, 0.001)));
    assertThat("the timer has a mean duration of 24", timer.mean(), is(closeTo(24.0, 0.001)));
    assertThat("the timer has a duration standard deviation of zero", timer.stdDev(), is(closeTo(11.401, 0.001)));
    final Double[] percentiles = timer.percentiles(0.5, 0.75, 0.99);
    assertThat("the timer has a median duration of 20", percentiles[0], is(closeTo(20.0, 0.001)));
    assertThat("the timer has a 75th percentile duration of 35", percentiles[1], is(closeTo(35.0, 0.001)));
    assertThat("the timer has a 99th percentile duration of 40", percentiles[2], is(closeTo(40.0, 0.001)));
    assertThat("the timer has no values", timer.values(), hasItems(10.0, 20.0, 20.0, 30.0, 40.0));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(MethodCallExpr
						(DoubleLiteralExpr
						)
						(DoubleLiteralExpr
						)
						SimpleName
					)
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					(DoubleLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

