@POST
@Path("/import/{path:.*}")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value = "Import resource", notes = "Import resource. JSON with a designated importer and project location is sent. It is possible to import from " + "VCS or ZIP")
@ApiResponses({ @ApiResponse(code = 204, message = ""), @ApiResponse(code = 401, message = "User not authorized to call this operation"), @ApiResponse(code = 403, message = "Forbidden operation"), @ApiResponse(code = 409, message = "Resource already exists"), @ApiResponse(code = 500, message = "Unsupported source type") })
public void importProject(@ApiParam(value = "Path in the project", required = true) @PathParam("path") String path, @ApiParam(value = "Force rewrite existing project", allowableValues = "true,false") @QueryParam("force") boolean force, SourceStorageDto sourceStorage) throws ConflictException, ForbiddenException, UnauthorizedException, IOException, ServerException, NotFoundException, BadRequestException {
    projectManager.importProject(path, sourceStorage, force, () -> new ProjectImportOutputWSLineConsumer(path, workspace, 300));
}||||||||@POST
@Path("/import/{path:.*}")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
@ApiOperation(value = "Import resource", notes = "Import resource. JSON with a designated importer and project location is sent. It is possible to import from " + "VCS or ZIP")
@ApiResponses({ @ApiResponse(code = 204, message = ""), @ApiResponse(code = 401, message = "User not authorized to call this operation"), @ApiResponse(code = 403, message = "Forbidden operation"), @ApiResponse(code = 409, message = "Resource already exists"), @ApiResponse(code = 500, message = "Unsupported source type") })
public void importProject(@ApiParam(value = "Path in the project", required = true) @PathParam("path") String path, @ApiParam(value = "Force rewrite existing project", allowableValues = "true,false") @QueryParam("force") boolean force, SourceStorageDto sourceStorage) throws ConflictException, ForbiddenException, UnauthorizedException, IOException, ServerException, NotFoundException, BadRequestException {
    final int delayBetweenMessages = 300;
    final ProjectImportOutputWSLineConsumer wsLineConsumer = new ProjectImportOutputWSLineConsumer(path, delayBetweenMessages);
    final ProjectImportOutputJsonRpcLineConsumer rpcLineConsumer = new ProjectImportOutputJsonRpcLineConsumer(path, transmitter, projectImportHandlerRegistrar, delayBetweenMessages);
    projectManager.importProject(path, sourceStorage, force, () -> new CompositeLineConsumer(wsLineConsumer, rpcLineConsumer));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(LambdaExpr
					(ExpressionStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		(FieldAccessExpr
			SimpleName
			NameExpr
				SimpleName
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(FieldAccessExpr
			SimpleName
			NameExpr
				SimpleName
		)
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				StringLiteralExpr
				StringLiteralExpr
			)
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(LambdaExpr
					(ExpressionStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				(BooleanLiteralExpr
				)
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(NormalAnnotationExpr
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			(MemberValuePair
				SimpleName
				StringLiteralExpr
			)
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		(FieldAccessExpr
			SimpleName
			NameExpr
				SimpleName
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(FieldAccessExpr
			SimpleName
			NameExpr
				SimpleName
		)
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			(BinaryExpr
				StringLiteralExpr
				StringLiteralExpr
			)
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
		)
		Name
	)
)

