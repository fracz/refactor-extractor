/**
 * Gets user from persistent layer by his identifier
 *
 * @param id
 * user identifier
 * @return user POJO
 * @throws NotFoundException
 * when user doesn't exist
 * @throws ServerException
 * when any other error occurs
 */
public User getById(String id) throws NotFoundException, ServerException {
    return userDao.getById(id);
}||||||||/**
 * Finds user by given {@code id}.
 *
 * @param id
 * user identifier
 * @return user instance
 * @throws NullPointerException
 * when {@code id} is null
 * @throws NotFoundException
 * when user doesn't exist
 * @throws ServerException
 * when any other error occurs
 */
public User getById(String id) throws NotFoundException, ServerException {
    requireNonNull(id, "Required non-null id");
    return userDao.getById(id);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

