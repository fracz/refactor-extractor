/**
 * Apply refactoring.
 * @param session the refactoring session
 * @return the result fo applied refactoring
 * @throws RefactoringException when there are no corresponding refactoring session
 */
@POST
@Path("apply")
@Produces("application/json")
@Consumes("application/json")
public RefactoringResult applyRefactoring(RefactoringSession session) throws RefactoringException {
    return manager.applyRefactoring(session.getSessionId());
}||||||||/**
 * Apply refactoring.
 *
 * @param session
 * the refactoring session
 * @return the result fo applied refactoring
 * @throws RefactoringException
 * when there are no corresponding refactoring session
 */
@POST
@Path("apply")
@Produces("application/json")
@Consumes("application/json")
public RefactoringResult applyRefactoring(RefactoringSession session) throws RefactoringException, JavaModelException {
    return manager.applyRefactoring(session.getSessionId());
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(JavadocComment
	)
)

