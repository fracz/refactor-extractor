/**
 * Removes container.
 *
 * @param container
 * container identifier, either id or name
 * @param force
 * if {@code true} kills the running container then remove it
 * @param removeVolumes
 * if {@code true} removes volumes associated to the container
 * @throws IOException
 */
public void removeContainer(String container, boolean force, boolean removeVolumes) throws IOException {
    try (DockerConnection connection = connectionFactory.openConnection(dockerDaemonUri).method("DELETE").path("/containers/" + container).query("force", force ? 1 : 0).query("v", removeVolumes ? 1 : 0)) {
        final DockerResponse response = connection.request();
        final int status = response.getStatus();
        if (NO_CONTENT.getStatusCode() != status) {
            throw new DockerException(getDockerExceptionMessage(response), status);
        }
    }
}||||||||/**
 * Removes container.
 *
 * @param container
 * container identifier, either id or name
 * @param force
 * if {@code true} kills the running container then remove it
 * @param removeVolumes
 * if {@code true} removes volumes associated to the container
 * @throws IOException
 */
public void removeContainer(String container, boolean force, boolean removeVolumes) throws IOException {
    try (DockerConnection connection = connectionFactory.openConnection(dockerDaemonUri).method("DELETE").path("/containers/" + container).query("force", force ? 1 : 0).query("v", removeVolumes ? 1 : 0)) {
        final DockerResponse response = connection.request();
        final int status = response.getStatus();
        if (NO_CONTENT.getStatusCode() != status) {
            throw getDockerException(response);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(ConditionalExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

