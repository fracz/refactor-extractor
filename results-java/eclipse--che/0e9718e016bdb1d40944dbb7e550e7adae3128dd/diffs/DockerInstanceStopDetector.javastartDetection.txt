/**
 * Start container stop detection.
 *
 * @param containerId
 * id of a container to start detection for
 * @param machineId
 * id of a machine which container implements
 */
public void startDetection(String containerId, String machineId) {
    instances.put(containerId, machineId);
}||||||||/**
 * Start container stop detection.
 *
 * @param containerId
 * id of a container to start detection for
 * @param machineId
 * id of a machine which container implements
 * @param workspaceId
 * id of a workspace that owns machine
 */
public void startDetection(String containerId, String machineId, String workspaceId) {
    instances.put(containerId, Pair.of(machineId, workspaceId));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

