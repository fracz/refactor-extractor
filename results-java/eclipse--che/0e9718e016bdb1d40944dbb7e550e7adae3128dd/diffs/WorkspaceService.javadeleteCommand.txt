@DELETE
@Path("/{id}/command/{name}")
@ApiOperation(value = "Remove the command from the workspace", notes = "This operation can be performed only by the workspace owner")
@ApiResponses({ @ApiResponse(code = 204, message = "The command successfully removed"), @ApiResponse(code = 403, message = "The user does not have access delete the command"), @ApiResponse(code = 404, message = "The workspace or the command not found"), @ApiResponse(code = 500, message = "Internal server error occurred") })
public void deleteCommand(@ApiParam("The id of the workspace") @PathParam("id") String id, @ApiParam("The name of the command to remove") @PathParam("name") String commandName) throws ServerException, BadRequestException, NotFoundException, ConflictException, ForbiddenException {
    final WorkspaceImpl workspace = workspaceManager.getWorkspace(id);
    if (workspace.getConfig().getCommands().removeIf(command -> command.getName().equals(commandName))) {
        workspaceManager.updateWorkspace(id, workspace);
    } else {
        throw new NotFoundException(String.format("Command with name '%s' was not found in workspace '%s'", commandName, workspace.getConfig().getName()));
    }
}||||||||@DELETE
@Path("/{id}/command/{name}")
@ApiOperation(value = "Remove the command from the workspace", notes = "This operation can be performed only by the workspace owner")
@ApiResponses({ @ApiResponse(code = 204, message = "The command successfully removed"), @ApiResponse(code = 403, message = "The user does not have access delete the command"), @ApiResponse(code = 404, message = "The workspace or the command not found"), @ApiResponse(code = 500, message = "Internal server error occurred") })
public void deleteCommand(@ApiParam("The id of the workspace") @PathParam("id") String id, @ApiParam("The name of the command to remove") @PathParam("name") String commandName) throws ServerException, BadRequestException, NotFoundException, ConflictException, ForbiddenException {
    final WorkspaceImpl workspace = workspaceManager.getWorkspace(id);
    if (workspace.getConfig().getCommands().removeIf(command -> command.getName().equals(commandName))) {
        workspaceManager.updateWorkspace(id, workspace);
    } else {
        throw new NotFoundException(format("Command with name '%s' was not found in workspace '%s'", commandName, workspace.getConfig().getName()));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		(SingleMemberAnnotationExpr
			StringLiteralExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		(MemberValuePair
			SimpleName
			StringLiteralExpr
		)
		Name
	)
	(SingleMemberAnnotationExpr
		(ArrayInitializerExpr
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
			(NormalAnnotationExpr
				(MemberValuePair
					SimpleName
					(IntegerLiteralExpr
					)
				)
				(MemberValuePair
					SimpleName
					StringLiteralExpr
				)
				Name
			)
		)
		Name
	)
)

