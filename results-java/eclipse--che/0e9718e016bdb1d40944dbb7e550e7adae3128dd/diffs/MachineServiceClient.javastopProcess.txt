/**
 * Stop process in machine.
 *
 * @param machineId
 * ID of the machine where process should be stopped
 * @param processId
 * ID of the process to stop
 * @return a promise that will resolve when the process has been stopped, or rejects with an error
 */
Promise<Void> stopProcess(@NotNull String machineId, int processId);||||||||/**
 * Stop process in machine.
 *
 * @param workspaceId
 * ID of workspace
 * @param machineId
 * ID of the machine where process should be stopped
 * @param processId
 * ID of the process to stop
 * @return a promise that will resolve when the process has been stopped, or rejects with an error
 */
Promise<Void> stopProcess(@NotNull String workspaceId, @NotNull String machineId, int processId);||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

