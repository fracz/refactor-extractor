@DataProvider
public Object[][] correctContentTestData() {
    return new Object[][] { // dictionary type environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "    RACK_ENV: development\n" + "    SHOW: 'true'", ImmutableMap.of("RACK_ENV", "development", "SHOW", "true") }, // dictionary format, value of variable is empty
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   MYSQL_ROOT_PASSWORD: ", ImmutableMap.of("MYSQL_ROOT_PASSWORD", null) }, // dictionary format, value of variable contains colon sign
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   VAR : val:1", ImmutableMap.of("VAR", "val:1") }, // array type environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - MYSQL_ROOT_PASSWORD=root\n" + "   - MYSQL_DATABASE=db", ImmutableMap.of("MYSQL_ROOT_PASSWORD", "root", "MYSQL_DATABASE", "db") }, // array format, value of variable contains equal sign
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - VAR=val=1", ImmutableMap.of("VAR", "val=1") }, // array format, empty value of variable
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - VAR= ", ImmutableMap.of("VAR", "") }, // empty environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:", ImmutableMap.of() } };
}||||||||@DataProvider
public Object[][] correctContentTestData() {
    return new Object[][] { // dictionary type environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "    RACK_ENV: development\n" + "    SHOW: 'true'", ImmutableMap.of("RACK_ENV", "development", "SHOW", "true") }, // dictionary format, value of variable is empty
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   MYSQL_ROOT_PASSWORD: \"\"", ImmutableMap.of("MYSQL_ROOT_PASSWORD", "") }, // dictionary format, value of variable contains colon sign
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   VAR : val:1", ImmutableMap.of("VAR", "val:1") }, // array type environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - MYSQL_ROOT_PASSWORD=root\n" + "   - MYSQL_DATABASE=db", ImmutableMap.of("MYSQL_ROOT_PASSWORD", "root", "MYSQL_DATABASE", "db") }, // array format, value of variable contains equal sign
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - VAR=val=1", ImmutableMap.of("VAR", "val=1") }, // array format, empty value of variable
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:\n" + "   - VAR= ", ImmutableMap.of("VAR", "") }, // empty environment
    { "services: \n" + " dev-machine: \n" + "  image: codenvy/ubuntu_jdk8\n" + "  environment:", ImmutableMap.of() } };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
				(ArrayInitializerExpr
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							NullLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(ArrayCreationLevel
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ArrayCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
				(ArrayInitializerExpr
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ArrayInitializerExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
				)
				(ArrayCreationLevel
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

