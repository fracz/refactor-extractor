public static <T> Iterable<T> flatten(Iterable<? extends Iterable<T>> inputs) {
    Objects.requireNonNull(inputs);
    return new FlattenedIterables<>(inputs);
}||||||||/**
 * Flattens the two level {@code Iterable} into a single {@code Iterable}.  Note that this uses the original input iterable so if it
 * later changes, the flattened result here will reflect the change.
 */
public static <T> Iterable<T> flatten(Iterable<? extends Iterable<T>> inputs) {
    Objects.requireNonNull(inputs);
    return new FlattenedIterables<>(inputs);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(TypeParameter
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(WildcardType
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

