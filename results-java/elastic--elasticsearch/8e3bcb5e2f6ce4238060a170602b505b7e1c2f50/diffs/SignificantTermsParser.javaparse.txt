@Override
public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {
    ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, SignificantStringTerms.TYPE, context).scriptable(false).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
    IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, SignificantStringTerms.TYPE, context);
    Filter filter = null;
    int requiredSize = DEFAULT_REQUIRED_SIZE;
    int shardSize = DEFAULT_SHARD_SIZE;
    long minDocCount = DEFAULT_MIN_DOC_COUNT;
    long shardMinDocCount = DEFAULT_SHARD_MIN_DOC_COUNT;
    String executionHint = null;
    XContentParser.Token token;
    String currentFieldName = null;
    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
            currentFieldName = parser.currentName();
        } else if (vsParser.token(currentFieldName, token, parser)) {
            continue;
        } else if (incExcParser.token(currentFieldName, token, parser)) {
            continue;
        } else if (token == XContentParser.Token.VALUE_STRING) {
            if ("execution_hint".equals(currentFieldName) || "executionHint".equals(currentFieldName)) {
                executionHint = parser.text();
            } else {
                throw new SearchParseException(context, "Unknown key for a " + token + " in [" + aggregationName + "]: [" + currentFieldName + "].");
            }
        } else if (token == XContentParser.Token.VALUE_NUMBER) {
            if ("size".equals(currentFieldName)) {
                requiredSize = parser.intValue();
            } else if ("shard_size".equals(currentFieldName) || "shardSize".equals(currentFieldName)) {
                shardSize = parser.intValue();
            } else if ("min_doc_count".equals(currentFieldName) || "minDocCount".equals(currentFieldName)) {
                minDocCount = parser.intValue();
            } else if (SHARD_MIN_DOC_COUNT_FIELD_NAME.match(currentFieldName)) {
                shardMinDocCount = parser.longValue();
            } else {
                throw new SearchParseException(context, "Unknown key for a " + token + " in [" + aggregationName + "]: [" + currentFieldName + "].");
            }
        } else if (token == XContentParser.Token.START_OBJECT) {
            if (BACKGROUND_FILTER.match(currentFieldName)) {
                filter = context.queryParserService().parseInnerFilter(parser).filter();
            } else {
                throw new SearchParseException(context, "Unknown key for a " + token + " in [" + aggregationName + "]: [" + currentFieldName + "].");
            }
        } else {
            throw new SearchParseException(context, "Unexpected token " + token + " in [" + aggregationName + "].");
        }
    }
    if (shardSize == DEFAULT_SHARD_SIZE) {
        // The user has not made a shardSize selection .
        // Use default heuristic to avoid any wrong-ranking caused by distributed counting
        // but request double the usual amount.
        // We typically need more than the number of "top" terms requested by other aggregations
        // as the significance algorithm is in less of a position to down-select at shard-level -
        // some of the things we want to find have only one occurrence on each shard and as
        // such are impossible to differentiate from non-significant terms at that early stage.
        shardSize = 2 * BucketUtils.suggestShardSideQueueSize(requiredSize, context.numberOfShards());
    }
    // shard_size cannot be smaller than size as we need to at least fetch <size> entries from every shards in order to return <size>
    if (shardSize < requiredSize) {
        shardSize = requiredSize;
    }
    // shard_min_doc_count should not be larger than min_doc_count because this can cause buckets to be removed that would match the min_doc_count criteria
    if (shardMinDocCount > minDocCount) {
        shardMinDocCount = minDocCount;
    }
    IncludeExclude includeExclude = incExcParser.includeExclude();
    return new SignificantTermsAggregatorFactory(aggregationName, vsParser.config(), requiredSize, shardSize, minDocCount, shardMinDocCount, includeExclude, executionHint, filter);
}||||||||@Override
public AggregatorFactory parse(String aggregationName, XContentParser parser, SearchContext context) throws IOException {
    SignificantTermsParametersParser aggParser = new SignificantTermsParametersParser();
    ValuesSourceParser vsParser = ValuesSourceParser.any(aggregationName, SignificantStringTerms.TYPE, context).scriptable(false).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
    IncludeExclude.Parser incExcParser = new IncludeExclude.Parser(aggregationName, SignificantStringTerms.TYPE, context);
    aggParser.parse(aggregationName, parser, context, vsParser, incExcParser);
    int shardSize = aggParser.getShardSize();
    if (shardSize == aggParser.DEFAULT_SHARD_SIZE) {
        // The user has not made a shardSize selection .
        // Use default heuristic to avoid any wrong-ranking caused by distributed counting
        // but request double the usual amount.
        // We typically need more than the number of "top" terms requested by other aggregations
        // as the significance algorithm is in less of a position to down-select at shard-level -
        // some of the things we want to find have only one occurrence on each shard and as
        // such are impossible to differentiate from non-significant terms at that early stage.
        shardSize = 2 * BucketUtils.suggestShardSideQueueSize(aggParser.getRequiredSize(), context.numberOfShards());
    }
    // shard_size cannot be smaller than size as we need to at least fetch <size> entries from every shards in order to return <size>
    if (shardSize < aggParser.getRequiredSize()) {
        shardSize = aggParser.getRequiredSize();
    }
    long shardMinDocCount = aggParser.getShardMinDocCount();
    // shard_min_doc_count should not be larger than min_doc_count because this can cause buckets to be removed that would match the min_doc_count criteria
    if (shardMinDocCount > aggParser.getMinDocCount()) {
        shardMinDocCount = aggParser.getMinDocCount();
    }
    return new SignificantTermsAggregatorFactory(aggregationName, vsParser.config(), aggParser.getRequiredSize(), shardSize, aggParser.getMinDocCount(), shardMinDocCount, aggParser.getIncludeExclude(), aggParser.getExecutionHint(), aggParser.getFilter());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					NameExpr
																						SimpleName
																				)
																				StringLiteralExpr
																			)
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												StringLiteralExpr
											)
											(IfStmt
												(BinaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														StringLiteralExpr
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														StringLiteralExpr
													)
												)
												(IfStmt
													(BinaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															StringLiteralExpr
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															StringLiteralExpr
														)
													)
													(IfStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ThrowStmt
																(ObjectCreationExpr
																	NameExpr
																		SimpleName
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							StringLiteralExpr
																							NameExpr
																								SimpleName
																						)
																						StringLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																				StringLiteralExpr
																			)
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												StringLiteralExpr
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												StringLiteralExpr
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														StringLiteralExpr
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ContinueStmt
								)
							)
						)
						(BlockStmt
							(ContinueStmt
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(EnclosedExpr
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

