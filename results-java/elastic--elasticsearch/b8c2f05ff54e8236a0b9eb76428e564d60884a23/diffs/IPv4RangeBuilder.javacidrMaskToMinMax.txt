/**
 * Computes the min & max ip addresses (represented as long values - same way as stored in index) represented by the given CIDR mask
 * expression. The returned array has the length of 2, where the first entry represents the {@code min} address and the second the {@code max}.
 * A {@code -1} value for either the {@code min} or the {@code max}, represents an unbounded end. In other words:
 *
 * <p>
 * {@code min == -1 == "0.0.0.0" }
 * </p>
 *
 * and
 *
 * <p>
 * {@code max == -1 == "255.255.255.255" }
 * </p>
 *
 * @param cidr
 * @return
 */
static long[] cidrMaskToMinMax(String cidr) {
    String[] parts = MASK_PATTERN.split(cidr);
    if (parts.length != 5) {
        return null;
    }
    int addr = ((Integer.parseInt(parts[0]) << 24) & 0xFF000000) | ((Integer.parseInt(parts[1]) << 16) & 0xFF0000) | ((Integer.parseInt(parts[2]) << 8) & 0xFF00) | (Integer.parseInt(parts[3]) & 0xFF);
    int mask = (-1) << (32 - Integer.parseInt(parts[4]));
    if (Integer.parseInt(parts[4]) == 0) {
        mask = 0 << 32;
    }
    int from = addr & mask;
    long longFrom = intIpToLongIp(from);
    if (longFrom == 0) {
        longFrom = -1;
    }
    int to = from + (~mask);
    // we have to +1 here as the range is non-inclusive on the "to" side
    long longTo = intIpToLongIp(to) + 1;
    if (longTo == InternalIPv4Range.MAX_IP) {
        longTo = InternalIPv4Range.MAX_IP - 1;
    }
    return new long[] { longFrom, longTo };
}||||||||/**
 * Computes the min & max ip addresses (represented as long values - same way as stored in index) represented by the given CIDR mask
 * expression. The returned array has the length of 2, where the first entry represents the {@code min} address and the second the {@code max}.
 * A {@code -1} value for either the {@code min} or the {@code max}, represents an unbounded end. In other words:
 *
 * <p>
 * {@code min == -1 == "0.0.0.0" }
 * </p>
 *
 * and
 *
 * <p>
 * {@code max == -1 == "255.255.255.255" }
 * </p>
 *
 * @param cidr
 * @return
 */
static long[] cidrMaskToMinMax(String cidr) {
    String[] parts = MASK_PATTERN.split(cidr);
    if (parts.length != 5) {
        return null;
    }
    int addr = ((Integer.parseInt(parts[0]) << 24) & 0xFF000000) | ((Integer.parseInt(parts[1]) << 16) & 0xFF0000) | ((Integer.parseInt(parts[2]) << 8) & 0xFF00) | (Integer.parseInt(parts[3]) & 0xFF);
    int mask = (-1) << (32 - Integer.parseInt(parts[4]));
    if (Integer.parseInt(parts[4]) == 0) {
        mask = 0 << 32;
    }
    int from = addr & mask;
    long longFrom = intIpToLongIp(from);
    if (longFrom == 0) {
        longFrom = -1;
    }
    int to = from + (~mask);
    // we have to +1 here as the range is non-inclusive on the "to" side
    long longTo = intIpToLongIp(to) + 1;
    if (longTo == InternalIPv4Range.MAX_IP) {
        longTo = -1;
    }
    return new long[] { longFrom, longTo };
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ArrayCreationExpr
				(PrimitiveType
				)
				(ArrayInitializerExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					NullLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(MethodCallExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ArrayCreationExpr
				(PrimitiveType
				)
				(ArrayInitializerExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(ArrayCreationLevel
				)
			)
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

