public void testUpgrade() throws Exception {
    // allow the cluster to rebalance quickly - 2 concurrent rebalance are default we can do higher
    Settings.Builder builder = Settings.builder();
    builder.put(ConcurrentRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_CLUSTER_CONCURRENT_REBALANCE, 100);
    client().admin().cluster().prepareUpdateSettings().setPersistentSettings(builder).get();
    int numIndexes = randomIntBetween(2, 4);
    String[] indexNames = new String[numIndexes];
    for (int i = 0; i < numIndexes; ++i) {
        final String indexName = "test" + i;
        indexNames[i] = indexName;
        Settings settings = Settings.builder().put("index.routing.allocation.exclude._name", backwardsCluster().newNodePattern()).put("index.merge.policy.segments_per_tier", 1000000f).put(indexSettings()).build();
        assertAcked(prepareCreate(indexName).setSettings(settings));
        ensureGreen(indexName);
        assertAllShardsOnNodes(indexName, backwardsCluster().backwardsNodePattern());
        int numDocs = scaledRandomIntBetween(100, 1000);
        List<IndexRequestBuilder> docs = new ArrayList<>();
        for (int j = 0; j < numDocs; ++j) {
            String id = Integer.toString(j);
            docs.add(client().prepareIndex(indexName, "type1", id).setSource("text", "sometext"));
        }
        indexRandom(true, docs);
        ensureGreen(indexName);
        if (globalCompatibilityVersion().before(Version.V_1_4_0_Beta1)) {
            // before 1.4 and the wait_if_ongoing flag, flushes could fail randomly, so we
            // need to continue to try flushing until all shards succeed
            assertTrue(awaitBusy(new Predicate<Object>() {

                @Override
                public boolean apply(Object o) {
                    return flush(indexName).getFailedShards() == 0;
                }
            }));
        } else {
            assertEquals(0, flush(indexName).getFailedShards());
        }
        // index more docs that won't be flushed
        numDocs = scaledRandomIntBetween(100, 1000);
        docs = new ArrayList<>();
        for (int j = 0; j < numDocs; ++j) {
            String id = Integer.toString(j);
            docs.add(client().prepareIndex(indexName, "type2", id).setSource("text", "someothertext"));
        }
        indexRandom(true, docs);
        ensureGreen(indexName);
    }
    logger.debug("--> Upgrading nodes");
    backwardsCluster().allowOnAllNodes(indexNames);
    ensureGreen();
    // disable allocation entirely until all nodes are upgraded
    builder = Settings.builder();
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ENABLE, EnableAllocationDecider.Allocation.NONE);
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(builder).get();
    backwardsCluster().upgradeAllNodes();
    builder = Settings.builder();
    // disable rebalanceing entirely for the time being otherwise we might get relocations / rebalance from nodes with old segments
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE, EnableAllocationDecider.Rebalance.NONE);
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ENABLE, EnableAllocationDecider.Allocation.ALL);
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(builder).get();
    ensureGreen();
    logger.info("--> Nodes upgrade complete");
    logSegmentsState();
    assertNotUpgraded(httpClient(), null);
    final String indexToUpgrade = "test" + randomInt(numIndexes - 1);
    // This test fires up another node running an older version of ES, but because wire protocol changes across major ES versions, it
    // means we can never generate ancient segments in this test (unless Lucene major version bumps but ES major version does not):
    assertFalse(hasAncientSegments(httpClient(), indexToUpgrade));
    logger.info("--> Running upgrade on index " + indexToUpgrade);
    runUpgrade(httpClient(), indexToUpgrade);
    awaitBusy(new Predicate<Object>() {

        @Override
        public boolean apply(Object o) {
            try {
                return isUpgraded(httpClient(), indexToUpgrade);
            } catch (Exception e) {
                throw ExceptionsHelper.convertToRuntime(e);
            }
        }
    });
    logger.info("--> Single index upgrade complete");
    logger.info("--> Running upgrade on the rest of the indexes");
    runUpgrade(httpClient(), null);
    logSegmentsState();
    logger.info("--> Full upgrade complete");
    assertUpgraded(httpClient(), null);
}||||||||public void testUpgrade() throws Exception {
    // allow the cluster to rebalance quickly - 2 concurrent rebalance are default we can do higher
    Settings.Builder builder = Settings.builder();
    builder.put(ConcurrentRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_CLUSTER_CONCURRENT_REBALANCE, 100);
    client().admin().cluster().prepareUpdateSettings().setPersistentSettings(builder).get();
    int numIndexes = randomIntBetween(2, 4);
    String[] indexNames = new String[numIndexes];
    for (int i = 0; i < numIndexes; ++i) {
        final String indexName = "test" + i;
        indexNames[i] = indexName;
        Settings settings = Settings.builder().put("index.routing.allocation.exclude._name", backwardsCluster().newNodePattern()).put("index.merge.policy.segments_per_tier", 1000000f).put(indexSettings()).build();
        assertAcked(prepareCreate(indexName).setSettings(settings));
        ensureGreen(indexName);
        assertAllShardsOnNodes(indexName, backwardsCluster().backwardsNodePattern());
        int numDocs = scaledRandomIntBetween(100, 1000);
        List<IndexRequestBuilder> docs = new ArrayList<>();
        for (int j = 0; j < numDocs; ++j) {
            String id = Integer.toString(j);
            docs.add(client().prepareIndex(indexName, "type1", id).setSource("text", "sometext"));
        }
        indexRandom(true, docs);
        ensureGreen(indexName);
        if (globalCompatibilityVersion().before(Version.V_1_4_0_Beta1)) {
            // before 1.4 and the wait_if_ongoing flag, flushes could fail randomly, so we
            // need to continue to try flushing until all shards succeed
            assertTrue(awaitBusy(new Predicate<Object>() {

                @Override
                public boolean apply(Object o) {
                    return flush(indexName).getFailedShards() == 0;
                }
            }));
        } else {
            assertEquals(0, flush(indexName).getFailedShards());
        }
        // index more docs that won't be flushed
        numDocs = scaledRandomIntBetween(100, 1000);
        docs = new ArrayList<>();
        for (int j = 0; j < numDocs; ++j) {
            String id = Integer.toString(j);
            docs.add(client().prepareIndex(indexName, "type2", id).setSource("text", "someothertext"));
        }
        indexRandom(true, docs);
        ensureGreen(indexName);
    }
    logger.debug("--> Upgrading nodes");
    backwardsCluster().allowOnAllNodes(indexNames);
    ensureGreen();
    // disable allocation entirely until all nodes are upgraded
    builder = Settings.builder();
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ENABLE, EnableAllocationDecider.Allocation.NONE);
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(builder).get();
    backwardsCluster().upgradeAllNodes();
    builder = Settings.builder();
    // disable rebalanceing entirely for the time being otherwise we might get relocations / rebalance from nodes with old segments
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE, EnableAllocationDecider.Rebalance.NONE);
    builder.put(EnableAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ENABLE, EnableAllocationDecider.Allocation.ALL);
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(builder).get();
    ensureGreen();
    logger.info("--> Nodes upgrade complete");
    logSegmentsState();
    assertNotUpgraded(client(), null);
    final String indexToUpgrade = "test" + randomInt(numIndexes - 1);
    // This test fires up another node running an older version of ES, but because wire protocol changes across major ES versions, it
    // means we can never generate ancient segments in this test (unless Lucene major version bumps but ES major version does not):
    assertFalse(hasAncientSegments(client(), indexToUpgrade));
    logger.info("--> Running upgrade on index " + indexToUpgrade);
    assertNoFailures(client().admin().indices().prepareUpgrade(indexToUpgrade).get());
    awaitBusy(new Predicate<Object>() {

        @Override
        public boolean apply(Object o) {
            try {
                return isUpgraded(client(), indexToUpgrade);
            } catch (Exception e) {
                throw ExceptionsHelper.convertToRuntime(e);
            }
        }
    });
    logger.info("--> Single index upgrade complete");
    logger.info("--> Running upgrade on the rest of the indexes");
    assertNoFailures(client().admin().indices().prepareUpgrade().get());
    logSegmentsState();
    logger.info("--> Full upgrade complete");
    assertUpgraded(client(), null);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										(DoubleLiteralExpr
										)
										SimpleName
											LineComment
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
								)
								SimpleName
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						(IntegerLiteralExpr
						)
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
						(ArrayCreationLevel
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										(DoubleLiteralExpr
										)
										SimpleName
											LineComment
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
								)
								SimpleName
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
					)
					NameExpr
						SimpleName
					SimpleName
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ThrowStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
						(PrimitiveType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

