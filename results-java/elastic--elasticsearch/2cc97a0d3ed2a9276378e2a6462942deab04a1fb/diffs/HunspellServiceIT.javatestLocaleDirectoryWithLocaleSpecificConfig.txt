@Test
public void testLocaleDirectoryWithLocaleSpecificConfig() throws Exception {
    Settings settings = Settings.settingsBuilder().put("path.conf", getDataPath("/indices/analyze/conf_dir")).put(HUNSPELL_LAZY_LOAD, randomBoolean()).put(HUNSPELL_IGNORE_CASE, true).put("indices.analysis.hunspell.dictionary.en_US.strict_affix_parsing", false).put("indices.analysis.hunspell.dictionary.en_US.ignore_case", false).build();
    internalCluster().startNode(settings);
    Dictionary dictionary = internalCluster().getInstance(HunspellService.class).getDictionary("en_US");
    assertThat(dictionary, notNullValue());
    assertIgnoreCase(false, dictionary);
    // testing that dictionary specific settings override node level settings
    dictionary = internalCluster().getInstance(HunspellService.class).getDictionary("en_US_custom");
    assertThat(dictionary, notNullValue());
    assertIgnoreCase(true, dictionary);
}||||||||public void testLocaleDirectoryWithLocaleSpecificConfig() throws Exception {
    Settings settings = Settings.settingsBuilder().put("path.conf", getDataPath("/indices/analyze/conf_dir")).put(HUNSPELL_LAZY_LOAD, randomBoolean()).put(HUNSPELL_IGNORE_CASE, true).put("indices.analysis.hunspell.dictionary.en_US.strict_affix_parsing", false).put("indices.analysis.hunspell.dictionary.en_US.ignore_case", false).build();
    internalCluster().startNode(settings);
    Dictionary dictionary = internalCluster().getInstance(HunspellService.class).getDictionary("en_US");
    assertThat(dictionary, notNullValue());
    assertIgnoreCase(false, dictionary);
    // testing that dictionary specific settings override node level settings
    dictionary = internalCluster().getInstance(HunspellService.class).getDictionary("en_US_custom");
    assertThat(dictionary, notNullValue());
    assertIgnoreCase(true, dictionary);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(ClassExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

