@Test
public void testGroovyBigDecimalTransformation() {
    client().prepareIndex("test", "doc", "1").setSource("foo", 5).setRefresh(true).get();
    // Test that something that would usually be a BigDecimal is transformed into a Double
    assertScript("def n = 1.23; assert n instanceof Double; return n;");
    assertScript("def n = 1.23G; assert n instanceof Double; return n;");
    assertScript("def n = BigDecimal.ONE; assert n instanceof BigDecimal; return n;");
}||||||||public void testGroovyBigDecimalTransformation() {
    client().prepareIndex("test", "doc", "1").setSource("foo", 5).setRefresh(true).get();
    // Test that something that would usually be a BigDecimal is transformed into a Double
    assertScript("def n = 1.23; assert n instanceof Double; return n;");
    assertScript("def n = 1.23G; assert n instanceof Double; return n;");
    assertScript("def n = BigDecimal.ONE; assert n instanceof BigDecimal; return n;");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

