@Test(expected = RestTestParseException.class)
public void testParseTestDuplicateTestSections() throws Exception {
    parser = YamlXContent.yamlXContent.createParser("---\n" + "\"Missing document (script)\":\n" + "\n" + "  - do:\n" + "      catch:      missing\n" + "      update:\n" + "          index:  test_1\n" + "          type:   test\n" + "          id:     1\n" + "          body:   { doc: { foo: bar } }\n" + "\n" + "---\n" + "\"Missing document (script)\":\n" + "\n" + "\n" + "  - do:\n" + "      catch:      missing\n" + "      update:\n" + "          index:  test_1\n" + "          type:   test\n" + "          id:     1\n" + "          body:\n" + "            script: \"ctx._source.foo = bar\"\n" + "            params: { bar: 'xxx' }\n" + "\n");
    RestTestSuiteParser testParser = new RestTestSuiteParser();
    testParser.parse(new RestTestSuiteParseContext("api", "suite", parser));
}||||||||public void testParseTestDuplicateTestSections() throws Exception {
    parser = YamlXContent.yamlXContent.createParser("---\n" + "\"Missing document (script)\":\n" + "\n" + "  - do:\n" + "      catch:      missing\n" + "      update:\n" + "          index:  test_1\n" + "          type:   test\n" + "          id:     1\n" + "          body:   { doc: { foo: bar } }\n" + "\n" + "---\n" + "\"Missing document (script)\":\n" + "\n" + "\n" + "  - do:\n" + "      catch:      missing\n" + "      update:\n" + "          index:  test_1\n" + "          type:   test\n" + "          id:     1\n" + "          body:\n" + "            script: \"ctx._source.foo = bar\"\n" + "            params: { bar: 'xxx' }\n" + "\n");
    RestTestSuiteParser testParser = new RestTestSuiteParser();
    try {
        testParser.parse(new RestTestSuiteParseContext("api", "suite", parser));
        fail("Expected RestTestParseException");
    } catch (RestTestParseException e) {
        assertThat(e.getMessage(), containsString("duplicate test section"));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													StringLiteralExpr
																													StringLiteralExpr
																												)
																												StringLiteralExpr
																											)
																											StringLiteralExpr
																										)
																										StringLiteralExpr
																									)
																									StringLiteralExpr
																								)
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(NormalAnnotationExpr
		(MemberValuePair
			SimpleName
			(ClassExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													StringLiteralExpr
																													StringLiteralExpr
																												)
																												StringLiteralExpr
																											)
																											StringLiteralExpr
																										)
																										StringLiteralExpr
																									)
																									StringLiteralExpr
																								)
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							StringLiteralExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

