@Test
public void testSizeAndSort() throws Exception {
    createIndex("test");
    ensureGreen();
    Map<String, Integer> termsAndDocCount = new HashMap<>();
    termsAndDocCount.put("prefix_aaad", 20);
    termsAndDocCount.put("prefix_abbb", 18);
    termsAndDocCount.put("prefix_aaca", 16);
    termsAndDocCount.put("prefix_abba", 14);
    termsAndDocCount.put("prefix_accc", 12);
    termsAndDocCount.put("prefix_addd", 10);
    termsAndDocCount.put("prefix_abaa", 8);
    termsAndDocCount.put("prefix_dbca", 6);
    termsAndDocCount.put("prefix_cbad", 4);
    termsAndDocCount.put("prefix_aacd", 1);
    termsAndDocCount.put("prefix_abcc", 1);
    termsAndDocCount.put("prefix_accd", 1);
    for (Map.Entry<String, Integer> entry : termsAndDocCount.entrySet()) {
        for (int i = 0; i < entry.getValue(); i++) {
            index("test", "type1", entry.getKey() + i, "field1", entry.getKey());
        }
    }
    refresh();
    Suggest suggest = searchSuggest("prefix_abcd", termSuggestion("size3SortScoreFirst").size(3).minDocFreq(0).field("field1").suggestMode("always"), termSuggestion("size10SortScoreFirst").size(10).minDocFreq(0).field("field1").suggestMode("always").shardSize(50), termSuggestion("size3SortScoreFirstMaxEdits1").maxEdits(1).size(10).minDocFreq(0).field("field1").suggestMode("always"), termSuggestion("size10SortFrequencyFirst").size(10).sort("frequency").shardSize(1000).minDocFreq(0).field("field1").suggestMode("always"));
    // The commented out assertions fail sometimes because suggestions are based off of shard frequencies instead of index frequencies.
    assertSuggestion(suggest, 0, "size3SortScoreFirst", "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size10SortScoreFirst", 10, "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size3SortScoreFirstMaxEdits1", "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size10SortFrequencyFirst", "prefix_aaad", "prefix_abbb", "prefix_aaca", "prefix_abba", "prefix_accc", "prefix_addd", "prefix_abaa", "prefix_dbca", "prefix_cbad", "prefix_aacd");
// assertThat(suggest.get(3).getSuggestedWords().get("prefix_abcd").get(4).getTerm(), equalTo("prefix_abcc"));
// assertThat(suggest.get(3).getSuggestedWords().get("prefix_abcd").get(4).getTerm(), equalTo("prefix_accd"));
}||||||||public void testSizeAndSort() throws Exception {
    createIndex("test");
    ensureGreen();
    Map<String, Integer> termsAndDocCount = new HashMap<>();
    termsAndDocCount.put("prefix_aaad", 20);
    termsAndDocCount.put("prefix_abbb", 18);
    termsAndDocCount.put("prefix_aaca", 16);
    termsAndDocCount.put("prefix_abba", 14);
    termsAndDocCount.put("prefix_accc", 12);
    termsAndDocCount.put("prefix_addd", 10);
    termsAndDocCount.put("prefix_abaa", 8);
    termsAndDocCount.put("prefix_dbca", 6);
    termsAndDocCount.put("prefix_cbad", 4);
    termsAndDocCount.put("prefix_aacd", 1);
    termsAndDocCount.put("prefix_abcc", 1);
    termsAndDocCount.put("prefix_accd", 1);
    for (Map.Entry<String, Integer> entry : termsAndDocCount.entrySet()) {
        for (int i = 0; i < entry.getValue(); i++) {
            index("test", "type1", entry.getKey() + i, "field1", entry.getKey());
        }
    }
    refresh();
    Suggest suggest = searchSuggest("prefix_abcd", termSuggestion("size3SortScoreFirst").size(3).minDocFreq(0).field("field1").suggestMode("always"), termSuggestion("size10SortScoreFirst").size(10).minDocFreq(0).field("field1").suggestMode("always").shardSize(50), termSuggestion("size3SortScoreFirstMaxEdits1").maxEdits(1).size(10).minDocFreq(0).field("field1").suggestMode("always"), termSuggestion("size10SortFrequencyFirst").size(10).sort("frequency").shardSize(1000).minDocFreq(0).field("field1").suggestMode("always"));
    // The commented out assertions fail sometimes because suggestions are based off of shard frequencies instead of index frequencies.
    assertSuggestion(suggest, 0, "size3SortScoreFirst", "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size10SortScoreFirst", 10, "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size3SortScoreFirstMaxEdits1", "prefix_aacd", "prefix_abcc", "prefix_accd");
    assertSuggestion(suggest, 0, "size10SortFrequencyFirst", "prefix_aaad", "prefix_abbb", "prefix_aaca", "prefix_abba", "prefix_accc", "prefix_addd", "prefix_abaa", "prefix_dbca", "prefix_cbad", "prefix_aacd");
// assertThat(suggest.get(3).getSuggestedWords().get("prefix_abcd").get(4).getTerm(), equalTo("prefix_abcc"));
// assertThat(suggest.get(3).getSuggestedWords().get("prefix_abcd").get(4).getTerm(), equalTo("prefix_accd"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
								)
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
										)
									)
								)
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
										)
									)
								)
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
												)
											)
										)
									)
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
								)
							)
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
										)
									)
								)
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
										)
									)
								)
							)
						)
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
												)
											)
										)
									)
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

