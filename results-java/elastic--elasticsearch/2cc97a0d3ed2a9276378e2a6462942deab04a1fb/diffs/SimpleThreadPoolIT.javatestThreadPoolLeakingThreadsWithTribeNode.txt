@Test
public void testThreadPoolLeakingThreadsWithTribeNode() {
    Settings settings = Settings.builder().put("node.name", "thread_pool_leaking_threads_tribe_node").put("path.home", createTempDir()).put("tribe.t1.cluster.name", "non_existing_cluster").put("tribe.t1.plugin.mandatory", "non_existing").build();
    try {
        NodeBuilder.nodeBuilder().settings(settings).build();
        fail("The node startup is supposed to fail");
    } catch (Throwable t) {
        // all good
        assertThat(t.getMessage(), containsString("mandatory plugins [non_existing]"));
    }
}||||||||public void testThreadPoolLeakingThreadsWithTribeNode() {
    Settings settings = Settings.builder().put("node.name", "thread_pool_leaking_threads_tribe_node").put("path.home", createTempDir()).put("tribe.t1.cluster.name", "non_existing_cluster").put("tribe.t1.plugin.mandatory", "non_existing").build();
    try {
        NodeBuilder.nodeBuilder().settings(settings).build();
        fail("The node startup is supposed to fail");
    } catch (Throwable t) {
        // all good
        assertThat(t.getMessage(), containsString("mandatory plugins [non_existing]"));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
								LineComment
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
								LineComment
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

