@Test
public void testMultiPhraseCutoff() throws IOException {
    /*
         * MultiPhraseQuery can literally kill an entire node if there are too many terms in the
         * query. We cut off and extract terms if there are more than 16 terms in the query
         */
    assertAcked(prepareCreate("test").addMapping("test", "body", "type=string,analyzer=custom_analyzer,search_analyzer=custom_analyzer,term_vector=with_positions_offsets").setSettings(settingsBuilder().put(indexSettings()).put("analysis.filter.wordDelimiter.type", "word_delimiter").put("analysis.filter.wordDelimiter.type.split_on_numerics", false).put("analysis.filter.wordDelimiter.generate_word_parts", true).put("analysis.filter.wordDelimiter.generate_number_parts", true).put("analysis.filter.wordDelimiter.catenate_words", true).put("analysis.filter.wordDelimiter.catenate_numbers", true).put("analysis.filter.wordDelimiter.catenate_all", false).put("analysis.analyzer.custom_analyzer.tokenizer", "whitespace").putArray("analysis.analyzer.custom_analyzer.filter", "lowercase", "wordDelimiter")));
    ensureGreen();
    client().prepareIndex("test", "test", "1").setSource("body", "Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature").get();
    refresh();
    SearchResponse search = client().prepareSearch().setQuery(matchQuery("body", "Test: http://www.facebook.com ").type(Type.PHRASE)).highlighter(new HighlightBuilder().field("body")).execute().actionGet();
    assertHighlight(search, 0, "body", 0, startsWith("<em>Test: http://www.facebook.com</em>"));
    search = client().prepareSearch().setQuery(matchQuery("body", "Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature").type(Type.PHRASE)).highlighter(new HighlightBuilder().field("body")).execute().actionGet();
    assertHighlight(search, 0, "body", 0, equalTo("<em>Test</em>: <em>http://www.facebook.com</em> <em>http://elasticsearch.org</em> <em>http://xing.com</em> <em>http://cnn.com</em> http://quora.com"));
}||||||||public void testMultiPhraseCutoff() throws IOException {
    /*
         * MultiPhraseQuery can literally kill an entire node if there are too many terms in the
         * query. We cut off and extract terms if there are more than 16 terms in the query
         */
    assertAcked(prepareCreate("test").addMapping("test", "body", "type=string,analyzer=custom_analyzer,search_analyzer=custom_analyzer,term_vector=with_positions_offsets").setSettings(settingsBuilder().put(indexSettings()).put("analysis.filter.wordDelimiter.type", "word_delimiter").put("analysis.filter.wordDelimiter.type.split_on_numerics", false).put("analysis.filter.wordDelimiter.generate_word_parts", true).put("analysis.filter.wordDelimiter.generate_number_parts", true).put("analysis.filter.wordDelimiter.catenate_words", true).put("analysis.filter.wordDelimiter.catenate_numbers", true).put("analysis.filter.wordDelimiter.catenate_all", false).put("analysis.analyzer.custom_analyzer.tokenizer", "whitespace").putArray("analysis.analyzer.custom_analyzer.filter", "lowercase", "wordDelimiter")));
    ensureGreen();
    client().prepareIndex("test", "test", "1").setSource("body", "Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature").get();
    refresh();
    SearchResponse search = client().prepareSearch().setQuery(matchQuery("body", "Test: http://www.facebook.com ").type(Type.PHRASE)).highlighter(new HighlightBuilder().field("body")).execute().actionGet();
    assertHighlight(search, 0, "body", 0, startsWith("<em>Test: http://www.facebook.com</em>"));
    search = client().prepareSearch().setQuery(matchQuery("body", "Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature Test: http://www.facebook.com http://elasticsearch.org http://xing.com http://cnn.com http://quora.com http://twitter.com this is a test for highlighting feature").type(Type.PHRASE)).highlighter(new HighlightBuilder().field("body")).execute().actionGet();
    assertHighlight(search, 0, "body", 0, equalTo("<em>Test</em>: <em>http://www.facebook.com</em> <em>http://elasticsearch.org</em> <em>http://xing.com</em> <em>http://cnn.com</em> http://quora.com"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												(BooleanLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
															)
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											(BooleanLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												(BooleanLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
															)
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
					)
				)
				SimpleName
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										StringLiteralExpr
										SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
				StringLiteralExpr
				(IntegerLiteralExpr
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

