/**
 * adds class methods/fields/ctors
 */
private void addElements() {
    int currentLine = -1;
    try {
        try (InputStream stream = Definition.class.getResourceAsStream(DEFINITION_FILE);
            LineNumberReader reader = new LineNumberReader(new InputStreamReader(stream, StandardCharsets.UTF_8))) {
            String line = null;
            String currentClass = null;
            while ((line = reader.readLine()) != null) {
                currentLine = reader.getLineNumber();
                line = line.trim();
                if (line.length() == 0 || line.charAt(0) == '#') {
                    continue;
                } else if (line.startsWith("class ")) {
                    assert currentClass == null;
                    currentClass = line.split("\u0020")[1];
                } else if (line.equals("}")) {
                    assert currentClass != null;
                    currentClass = null;
                } else {
                    assert currentClass != null;
                    addSignature(currentClass, line);
                }
            }
        }
    } catch (Exception e) {
        throw new RuntimeException("syntax error in definition line: " + currentLine, e);
    }
}||||||||/**
 * adds class methods/fields/ctors
 */
private void addElements() {
    for (String file : DEFINITION_FILES) {
        int currentLine = -1;
        try {
            try (InputStream stream = Definition.class.getResourceAsStream(file);
                LineNumberReader reader = new LineNumberReader(new InputStreamReader(stream, StandardCharsets.UTF_8))) {
                String line = null;
                String currentClass = null;
                while ((line = reader.readLine()) != null) {
                    currentLine = reader.getLineNumber();
                    line = line.trim();
                    if (line.length() == 0 || line.charAt(0) == '#') {
                        continue;
                    } else if (line.startsWith("class ")) {
                        assert currentClass == null;
                        currentClass = line.split("\u0020")[1];
                    } else if (line.equals("}")) {
                        assert currentClass != null;
                        currentClass = null;
                    } else {
                        assert currentClass != null;
                        addSignature(currentClass, line);
                    }
                }
            }
        } catch (Exception e) {
            throw new RuntimeException("syntax error in " + file + ", line: " + currentLine, e);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(TryStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(WhileStmt
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(CharLiteralExpr
											)
										)
									)
									(IfStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IfStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(AssertStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BlockStmt
												(AssertStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
										(BlockStmt
											(AssertStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
							)
							(BinaryExpr
								(EnclosedExpr
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								NullLiteralExpr
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(TryStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(WhileStmt
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
												(BinaryExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													(CharLiteralExpr
													)
												)
											)
											(IfStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IfStmt
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(AssertStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
													(BlockStmt
														(AssertStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
													)
												)
												(BlockStmt
													(AssertStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
											(BlockStmt
												(ContinueStmt
												)
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NullLiteralExpr
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

