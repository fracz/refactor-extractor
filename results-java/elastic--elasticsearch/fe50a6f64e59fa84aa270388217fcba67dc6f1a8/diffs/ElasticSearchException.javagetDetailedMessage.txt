/**
 * Return the detail message, including the message from the nested exception
 * if there is one.
 */
public String getDetailedMessage() {
    if (getCause() != null) {
        StringBuilder sb = new StringBuilder();
        if (super.getMessage() != null) {
            sb.append(super.getMessage()).append("; ");
        }
        sb.append("nested exception is ").append(getCause());
        return sb.toString();
    } else {
        return super.getMessage();
    }
}||||||||/**
 * Return the detail message, including the message from the nested exception
 * if there is one.
 */
public String getDetailedMessage() {
    if (getCause() != null) {
        StringBuilder sb = new StringBuilder();
        sb.append(toString()).append("; ");
        if (getCause() instanceof ElasticSearchException) {
            sb.append(((ElasticSearchException) getCause()).getDetailedMessage());
        } else {
            sb.append(getCause());
        }
        return sb.toString();
    } else {
        return super.toString();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							(SuperExpr
							)
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										(SuperExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						(MethodCallExpr
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(EnclosedExpr
										(CastExpr
											(MethodCallExpr
												SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

