/**
 * Updates the shard state based on an incoming cluster state:
 * - Updates and persists the new routing value.
 * - Updates the primary term if this shard is a primary.
 * - Updates the allocation ids that are tracked by the shard if it is a primary.
 * See {@link GlobalCheckpointTracker#updateAllocationIdsFromMaster(long, Set, Set)} for details.
 *
 * @param shardRouting                the new routing entry
 * @param primaryTerm                 the new primary term
 * @param primaryReplicaSyncer        the primary-replica resync action to trigger when a term is increased on a primary
 * @param applyingClusterStateVersion the cluster state version being applied when updating the allocation IDs from the master
 * @param activeAllocationIds         the allocation ids of the currently active shard copies
 * @param initializingAllocationIds   the allocation ids of the currently initializing shard copies
 * @throws IndexShardRelocatedException if shard is marked as relocated and relocation aborted
 * @throws IOException                  if shard state could not be persisted
 */
void updateShardState(ShardRouting shardRouting, long primaryTerm, CheckedBiConsumer<IndexShard, ActionListener<ResyncTask>, IOException> primaryReplicaSyncer, long applyingClusterStateVersion, Set<String> activeAllocationIds, Set<String> initializingAllocationIds) throws IOException;||||||||/**
 * Updates the shard state based on an incoming cluster state:
 * - Updates and persists the new routing value.
 * - Updates the primary term if this shard is a primary.
 * - Updates the allocation ids that are tracked by the shard if it is a primary.
 * See {@link GlobalCheckpointTracker#updateFromMaster(long, Set, Set, Set)} for details.
 *
 * @param shardRouting                the new routing entry
 * @param primaryTerm                 the new primary term
 * @param primaryReplicaSyncer        the primary-replica resync action to trigger when a term is increased on a primary
 * @param applyingClusterStateVersion the cluster state version being applied when updating the allocation IDs from the master
 * @param inSyncAllocationIds         the allocation ids of the currently in-sync shard copies
 * @param initializingAllocationIds   the allocation ids of the currently initializing shard copies
 * @throws IndexShardRelocatedException if shard is marked as relocated and relocation aborted
 * @throws IOException                  if shard state could not be persisted
 */
void updateShardState(ShardRouting shardRouting, long primaryTerm, CheckedBiConsumer<IndexShard, ActionListener<ResyncTask>, IOException> primaryReplicaSyncer, long applyingClusterStateVersion, Set<String> inSyncAllocationIds, Set<String> initializingAllocationIds, Set<String> pre60AllocationIds) throws IOException;||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

