/**
 * Resolves {@code publishHosts} to a single publish address. The fact that it returns
 * only one address is just a current limitation.
 * <p>
 * If {@code publishHosts} resolves to more than one address, <b>then one is selected with magic</b>,
 * and the user is warned (they can always just be more specific).
 * @param publishHosts list of hosts to publish as. this may contain special pseudo-hostnames
 * such as _local_ (see the documentation). if it is null, it will be populated
 * based on global default settings.
 * @return single internet address
 */
// TODO: needs to be InetAddress[]
public InetAddress resolvePublishHostAddresses(String[] publishHosts) throws IOException {
    // first check settings
    if (publishHosts == null) {
        publishHosts = settings.getAsArray(GLOBAL_NETWORK_PUBLISHHOST_SETTING, settings.getAsArray(GLOBAL_NETWORK_HOST_SETTING, null));
    }
    // next check any registered custom resolvers
    if (publishHosts == null) {
        for (CustomNameResolver customNameResolver : customNameResolvers) {
            InetAddress[] addresses = customNameResolver.resolveDefault();
            if (addresses != null) {
                return addresses[0];
            }
        }
    }
    // finally, fill with our default
    if (publishHosts == null) {
        publishHosts = new String[] { DEFAULT_NETWORK_HOST };
    }
    InetAddress[] addresses = resolveInetAddresses(publishHosts);
    // 1. single wildcard address, probably set by network.host: expand to all interface addresses.
    if (addresses.length == 1 && addresses[0].isAnyLocalAddress()) {
        HashSet<InetAddress> all = new HashSet<>(Arrays.asList(NetworkUtils.getAllAddresses()));
        addresses = all.toArray(new InetAddress[all.size()]);
    }
    // 2. try to deal with some (mis)configuration
    for (InetAddress address : addresses) {
        // check if its multicast: flat out mistake
        if (address.isMulticastAddress()) {
            throw new IllegalArgumentException("publish address: {" + NetworkAddress.format(address) + "} is invalid: multicast address");
        }
        // (if it was a single wildcard address, it was replaced by step 1 above)
        if (address.isAnyLocalAddress()) {
            throw new IllegalArgumentException("publish address: {" + NetworkAddress.format(address) + "} is wildcard, but multiple addresses specified: this makes no sense");
        }
    }
    // 3. warn user if we end out with multiple publish addresses
    if (addresses.length > 1) {
        List<InetAddress> sorted = new ArrayList<>(Arrays.asList(addresses));
        NetworkUtils.sortAddresses(sorted);
        addresses = new InetAddress[] { sorted.get(0) };
        logger.warn("publish host: {} resolves to multiple addresses, auto-selecting {{}} as single publish address", Arrays.toString(publishHosts), NetworkAddress.format(addresses[0]));
    }
    return addresses[0];
}||||||||/**
 * Resolves {@code publishHosts} to a single publish address. The fact that it returns
 * only one address is just a current limitation.
 * <p>
 * If {@code publishHosts} resolves to more than one address, <b>then one is selected with magic</b>
 * @param publishHosts list of hosts to publish as. this may contain special pseudo-hostnames
 * such as _local_ (see the documentation). if it is null, it will be populated
 * based on global default settings.
 * @return single internet address
 */
// TODO: needs to be InetAddress[]
public InetAddress resolvePublishHostAddresses(String[] publishHosts) throws IOException {
    // first check settings
    if (publishHosts == null) {
        publishHosts = settings.getAsArray(GLOBAL_NETWORK_PUBLISHHOST_SETTING, settings.getAsArray(GLOBAL_NETWORK_HOST_SETTING, null));
    }
    // next check any registered custom resolvers
    if (publishHosts == null) {
        for (CustomNameResolver customNameResolver : customNameResolvers) {
            InetAddress[] addresses = customNameResolver.resolveDefault();
            if (addresses != null) {
                return addresses[0];
            }
        }
    }
    // finally, fill with our default
    if (publishHosts == null) {
        publishHosts = new String[] { DEFAULT_NETWORK_HOST };
    }
    InetAddress[] addresses = resolveInetAddresses(publishHosts);
    // 1. single wildcard address, probably set by network.host: expand to all interface addresses.
    if (addresses.length == 1 && addresses[0].isAnyLocalAddress()) {
        HashSet<InetAddress> all = new HashSet<>(Arrays.asList(NetworkUtils.getAllAddresses()));
        addresses = all.toArray(new InetAddress[all.size()]);
    }
    // 2. try to deal with some (mis)configuration
    for (InetAddress address : addresses) {
        // check if its multicast: flat out mistake
        if (address.isMulticastAddress()) {
            throw new IllegalArgumentException("publish address: {" + NetworkAddress.format(address) + "} is invalid: multicast address");
        }
        // (if it was a single wildcard address, it was replaced by step 1 above)
        if (address.isAnyLocalAddress()) {
            throw new IllegalArgumentException("publish address: {" + NetworkAddress.format(address) + "} is wildcard, but multiple addresses specified: this makes no sense");
        }
    }
    // don't warn the user, or they will get confused by bind_host vs publish_host etc.
    if (addresses.length > 1) {
        List<InetAddress> sorted = new ArrayList<>(Arrays.asList(addresses));
        NetworkUtils.sortAddresses(sorted);
        addresses = new InetAddress[] { sorted.get(0) };
    }
    return addresses[0];
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ArrayType
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								NameExpr
									SimpleName
							)
							(ArrayCreationLevel
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ArrayCreationLevel
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ArrayAccessExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ArrayType
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ReturnStmt
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								NameExpr
									SimpleName
							)
							(ArrayCreationLevel
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(ArrayAccessExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
								(ArrayCreationLevel
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
							(ArrayInitializerExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ArrayCreationLevel
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(ArrayAccessExpr
				(IntegerLiteralExpr
				)
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

