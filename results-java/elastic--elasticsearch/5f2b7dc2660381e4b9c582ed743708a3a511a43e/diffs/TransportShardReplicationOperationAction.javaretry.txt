void retry(boolean fromClusterEvent, @Nullable final Throwable failure) {
    if (!fromClusterEvent) {
        // make it threaded operation so we fork on the discovery listener thread
        request.beforeLocalFork();
        request.operationThreaded(true);
        clusterService.add(request.timeout(), new TimeoutClusterStateListener() {

            @Override
            public void postAdded() {
                logger.trace("listener to cluster state added, trying to index again");
                // check if state version changed while we were adding this listener
                if (clusterState.version() != clusterService.state().version()) {
                    logger.trace("state change while we were trying to add listener, trying to index again");
                    if (start(true)) {
                        // if we managed to start and perform the operation on the primary, we can remove this listener
                        clusterService.remove(this);
                    }
                }
            }

            @Override
            public void onClose() {
                clusterService.remove(this);
                listener.onFailure(new NodeClosedException(clusterService.localNode()));
            }

            @Override
            public void clusterChanged(ClusterChangedEvent event) {
                logger.trace("cluster changed (version {}), trying to index again", event.state().version());
                if (start(true)) {
                    // if we managed to start and perform the operation on the primary, we can remove this listener
                    clusterService.remove(this);
                }
            }

            @Override
            public void onTimeout(TimeValue timeValue) {
                // just to be on the safe side, see if we can start it now?
                if (start(true)) {
                    clusterService.remove(this);
                    return;
                }
                clusterService.remove(this);
                Throwable listenerFailure = failure;
                if (listenerFailure == null) {
                    if (shardIt == null) {
                        listenerFailure = new UnavailableShardsException(null, "no available shards: Timeout waiting for [" + timeValue + "], request: " + request.toString());
                    } else {
                        listenerFailure = new UnavailableShardsException(shardIt.shardId(), "[" + shardIt.size() + "] shardIt, [" + shardIt.sizeActive() + "] active : Timeout waiting for [" + timeValue + "], request: " + request.toString());
                    }
                }
                listener.onFailure(listenerFailure);
            }
        });
    } else {
        logger.trace("retry scheduling ignored as it as we already have a listener in place");
    }
}||||||||void retry(boolean fromClusterEvent, @Nullable final Throwable failure) {
    if (!fromClusterEvent) {
        // make it threaded operation so we fork on the discovery listener thread
        request.beforeLocalFork();
        request.operationThreaded(true);
        clusterService.add(request.timeout(), new TimeoutClusterStateListener() {

            @Override
            public void postAdded() {
                // check if state version changed while we were adding this listener
                long sampledVersion = clusterState.version();
                long currentVersion = clusterService.state().version();
                if (sampledVersion != currentVersion) {
                    logger.trace("state change while we were trying to add listener, trying to start again, sampled_version [{}], current_version [{}]", sampledVersion, currentVersion);
                    if (start(true)) {
                        // if we managed to start and perform the operation on the primary, we can remove this listener
                        clusterService.remove(this);
                    }
                }
            }

            @Override
            public void onClose() {
                clusterService.remove(this);
                listener.onFailure(new NodeClosedException(clusterService.localNode()));
            }

            @Override
            public void clusterChanged(ClusterChangedEvent event) {
                logger.trace("cluster changed (version {}), trying to start again", event.state().version());
                if (start(true)) {
                    // if we managed to start and perform the operation on the primary, we can remove this listener
                    clusterService.remove(this);
                }
            }

            @Override
            public void onTimeout(TimeValue timeValue) {
                // just to be on the safe side, see if we can start it now?
                if (start(true)) {
                    clusterService.remove(this);
                    return;
                }
                clusterService.remove(this);
                Throwable listenerFailure = failure;
                if (listenerFailure == null) {
                    if (shardIt == null) {
                        listenerFailure = new UnavailableShardsException(null, "no available shards: Timeout waiting for [" + timeValue + "], request: " + request.toString());
                    } else {
                        listenerFailure = new UnavailableShardsException(shardIt.shardId(), "[" + shardIt.size() + "] shardIt, [" + shardIt.sizeActive() + "] active : Timeout waiting for [" + timeValue + "], request: " + request.toString());
                    }
                }
                listener.onFailure(listenerFailure);
            }
        });
    } else {
        logger.trace("retry scheduling ignored as it as we already have a listener in place");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ThisExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
										)
										LineComment
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ReturnStmt
											)
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NameExpr
													SimpleName
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ObjectCreationExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							StringLiteralExpr
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						StringLiteralExpr
																					)
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ObjectCreationExpr
																NullLiteralExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ThisExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(MethodDeclaration
								(BlockStmt
									(IfStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ReturnStmt
											)
										)
										LineComment
									)
									(ExpressionStmt
										(MethodCallExpr
											(ThisExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												NameExpr
													SimpleName
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ObjectCreationExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							StringLiteralExpr
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																						StringLiteralExpr
																					)
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				StringLiteralExpr
																			)
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ObjectCreationExpr
																NullLiteralExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																		)
																		StringLiteralExpr
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

