/**
 * We do here lazy initialization on not only on start(), since we might be called before start by another node (really will
 * happen in term of timing in testing, but still), and we want to return the cluster state when we can.
 *
 * It is synchronized since we want to wait for it to be loaded if called concurrently. There should really be a nicer
 * solution here, but for now, its good enough.
 */
private synchronized void lazyInitialize() {
    if (initialized) {
        return;
    }
    initialized = true;
    // if this is not a possible master node or data node, bail, we won't save anything here...
    if (!clusterService.localNode().masterNode() && !clusterService.localNode().dataNode()) {
        location = null;
    } else {
        // create the location where the state will be stored
        this.location = new File(nodeEnv.nodeDataLocation(), "_state");
        FileSystemUtils.mkdirs(this.location);
        if (clusterService.localNode().masterNode()) {
            try {
                long version = findLatestMetaStateVersion();
                if (version != -1) {
                    this.currentMetaState = readMetaState(Streams.copyToByteArray(new FileInputStream(new File(location, "metadata-" + version))));
                }
            } catch (Exception e) {
                logger.warn("failed to read local state (metadata)", e);
            }
        }
        if (clusterService.localNode().dataNode()) {
            try {
                long version = findLatestStartedShardsVersion();
                if (version != -1) {
                    this.currentStartedShards = readStartedShards(Streams.copyToByteArray(new FileInputStream(new File(location, "shards-" + version))));
                }
            } catch (Exception e) {
                logger.warn("failed to read local state (started shards)", e);
            }
        }
    }
}||||||||/**
 * We do here lazy initialization on not only on start(), since we might be called before start by another node (really will
 * happen in term of timing in testing, but still), and we want to return the cluster state when we can.
 *
 * It is synchronized since we want to wait for it to be loaded if called concurrently. There should really be a nicer
 * solution here, but for now, its good enough.
 */
private synchronized void lazyInitialize() {
    if (initialized) {
        return;
    }
    initialized = true;
    // if this is not a possible master node or data node, bail, we won't save anything here...
    if (!clusterService.localNode().masterNode() && !clusterService.localNode().dataNode()) {
        location = null;
    } else {
        // create the location where the state will be stored
        this.location = new File(nodeEnv.nodeDataLocation(), "_state");
        FileSystemUtils.mkdirs(this.location);
        if (clusterService.localNode().masterNode()) {
            try {
                long version = findLatestMetaStateVersion();
                if (version != -1) {
                    File file = new File(location, "metadata-" + version);
                    logger.debug("[find_latest_state]: loading metadata from [{}]", file.getAbsolutePath());
                    this.currentMetaState = readMetaState(Streams.copyToByteArray(new FileInputStream(file)));
                } else {
                    logger.debug("[find_latest_state]: no metadata state loaded");
                }
            } catch (Exception e) {
                logger.warn("failed to read local state (metadata)", e);
            }
        }
        if (clusterService.localNode().dataNode()) {
            try {
                long version = findLatestStartedShardsVersion();
                if (version != -1) {
                    File file = new File(location, "shards-" + version);
                    logger.debug("[find_latest_state]: loading started shards from [{}]", file.getAbsolutePath());
                    this.currentStartedShards = readStartedShards(Streams.copyToByteArray(new FileInputStream(file)));
                } else {
                    logger.debug("[find_latest_state]: no started shards loaded");
                }
            } catch (Exception e) {
                logger.warn("failed to read local state (started shards)", e);
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													(MethodCallExpr
														(ObjectCreationExpr
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													(MethodCallExpr
														(ObjectCreationExpr
															(ObjectCreationExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													(MethodCallExpr
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														NameExpr
															SimpleName
														(BinaryExpr
															StringLiteralExpr
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												(MethodCallExpr
													(MethodCallExpr
														(ObjectCreationExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

