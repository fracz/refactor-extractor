@Override
protected Settings nodeSettings(int nodeOrdinal) {
    Settings.Builder settings = Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(Environment.PATH_HOME_SETTING.getKey(), createTempDir()).put("cloud.aws.test.random", randomInt()).put("cloud.aws.test.write_failures", 0.1).put("cloud.aws.test.read_failures", 0.1);
    // if explicit, just load it and don't load from env
    try {
        if (Strings.hasText(System.getProperty("tests.config"))) {
            settings.loadFromPath(PathUtils.get(System.getProperty("tests.config")));
        } else {
            throw new IllegalStateException("to run integration tests, you need to set -Dtests.thirdparty=true and -Dtests.config=/path/to/elasticsearch.yml");
        }
    } catch (SettingsException exception) {
        throw new IllegalStateException("your test configuration file is incorrect: " + System.getProperty("tests.config"), exception);
    }
    return settings.build();
}||||||||@Override
protected Settings nodeSettings(int nodeOrdinal) {
    Settings.Builder settings = Settings.builder().put(super.nodeSettings(nodeOrdinal)).put(Environment.PATH_HOME_SETTING.getKey(), createTempDir());
    // if explicit, just load it and don't load from env
    try {
        if (Strings.hasText(System.getProperty("tests.config"))) {
            settings.loadFromPath(PathUtils.get(System.getProperty("tests.config")));
        } else {
            throw new IllegalStateException("to run integration tests, you need to set -Dtests.thirdparty=true and -Dtests.config=/path/to/elasticsearch.yml");
        }
    } catch (SettingsException exception) {
        throw new IllegalStateException("your test configuration file is incorrect: " + System.getProperty("tests.config"), exception);
    }
    return settings.build();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						StringLiteralExpr
						(DoubleLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(DoubleLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(SuperExpr
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

