@Test
public void testOmitTermFreqsAndPositions() throws Exception {
    // backwards compat test!
    try {
        client.admin().indices().prepareDelete("test").execute().actionGet();
    } catch (Exception e) {
    // ignore
    }
    client.admin().indices().prepareCreate("test").addMapping("type1", jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("field1").field("omit_term_freq_and_positions", true).field("type", "string").endObject().endObject().endObject().endObject()).setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards", 1)).execute().actionGet();
    client.prepareIndex("test", "type1", "1").setSource("field1", "quick brown fox", "field2", "quick brown fox").execute().actionGet();
    client.prepareIndex("test", "type1", "2").setSource("field1", "quick lazy huge brown fox", "field2", "quick lazy huge brown fox").setRefresh(true).execute().actionGet();
    SearchResponse searchResponse = client.prepareSearch().setQuery(QueryBuilders.matchQuery("field2", "quick brown").type(MatchQueryBuilder.Type.PHRASE).slop(0)).execute().actionGet();
    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));
    try {
        client.prepareSearch().setQuery(QueryBuilders.matchQuery("field1", "quick brown").type(MatchQueryBuilder.Type.PHRASE).slop(0)).execute().actionGet();
    } catch (SearchPhaseExecutionException e) {
        assertTrue(e.getMessage().endsWith("IllegalStateException[field \"field1\" was indexed without position data; cannot run PhraseQuery (term=quick)]; }"));
    }
}||||||||@Test
public void testOmitTermFreqsAndPositions() throws Exception {
    // backwards compat test!
    client().admin().indices().prepareCreate("test").addMapping("type1", jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("field1").field("omit_term_freq_and_positions", true).field("type", "string").endObject().endObject().endObject().endObject()).setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards", 1)).execute().actionGet();
    client().prepareIndex("test", "type1", "1").setSource("field1", "quick brown fox", "field2", "quick brown fox").execute().actionGet();
    client().prepareIndex("test", "type1", "2").setSource("field1", "quick lazy huge brown fox", "field2", "quick lazy huge brown fox").setRefresh(true).execute().actionGet();
    SearchResponse searchResponse = client().prepareSearch().setQuery(QueryBuilders.matchQuery("field2", "quick brown").type(MatchQueryBuilder.Type.PHRASE).slop(0)).execute().actionGet();
    assertThat(searchResponse.getHits().totalHits(), equalTo(1l));
    try {
        client().prepareSearch().setQuery(QueryBuilders.matchQuery("field1", "quick brown").type(MatchQueryBuilder.Type.PHRASE).slop(0)).execute().actionGet();
    } catch (SearchPhaseExecutionException e) {
        assertTrue(e.getMessage().endsWith("IllegalStateException[field \"field1\" was indexed without position data; cannot run PhraseQuery (term=quick)]; }"));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							(IntegerLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													StringLiteralExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														StringLiteralExpr
														SimpleName
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					SimpleName
				)
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											StringLiteralExpr
											StringLiteralExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

