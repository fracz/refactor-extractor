public void scanComment() {
    if (!allowComment) {
        throw new NotAllowCommentException();
    }
    if (ch != '/') {
        throw new IllegalStateException();
    }
    np = bp;
    sp = 0;
    scanChar();
    if (ch == '*') {
        scanChar();
        sp++;
        for (; ; ) {
            if (ch == '*' && buf[bp + 1] == '/') {
                sp += 2;
                scanChar();
                scanChar();
                break;
            }
            scanChar();
            sp++;
        }
        stringVal = new String(buf, np, sp);
        token = Token.MULTI_LINE_COMMENT;
        return;
    }
    if (ch == '/') {
        scanChar();
        sp++;
        for (; ; ) {
            if (ch == '\r') {
                if (buf[bp + 1] == '\n') {
                    sp += 2;
                    scanChar();
                    break;
                }
                sp++;
                break;
            }
            if (ch == '\n') {
                scanChar();
                sp++;
                break;
            }
            scanChar();
            sp++;
        }
        stringVal = new String(buf, np + 1, sp);
        token = Token.LINE_COMMENT;
        return;
    }
}||||||||public void scanComment() {
    if (!allowComment) {
        throw new NotAllowCommentException();
    }
    if (ch != '/') {
        throw new IllegalStateException();
    }
    np = bp;
    sp = 0;
    scanChar();
    if (ch == '*') {
        scanChar();
        sp++;
        for (; ; ) {
            if (ch == '*' && charAt(bp + 1) == '/') {
                sp += 2;
                scanChar();
                scanChar();
                break;
            }
            scanChar();
            sp++;
        }
        stringVal = subString(np, sp);
        token = Token.MULTI_LINE_COMMENT;
        return;
    }
    if (ch == '/') {
        scanChar();
        sp++;
        for (; ; ) {
            if (ch == '\r') {
                if (charAt(bp + 1) == '\n') {
                    sp += 2;
                    scanChar();
                    break;
                }
                sp++;
                break;
            }
            if (ch == '\n') {
                scanChar();
                sp++;
                break;
            }
            scanChar();
            sp++;
        }
        stringVal = subString(np + 1, sp);
        token = Token.LINE_COMMENT;
        return;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									(ArrayAccessExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										NameExpr
											SimpleName
									)
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(ArrayAccessExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											NameExpr
												SimpleName
										)
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(BreakStmt
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(CharLiteralExpr
									)
								)
								(BinaryExpr
									(MethodCallExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
									)
									(CharLiteralExpr
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(CharLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
										(CharLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
										(BreakStmt
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

