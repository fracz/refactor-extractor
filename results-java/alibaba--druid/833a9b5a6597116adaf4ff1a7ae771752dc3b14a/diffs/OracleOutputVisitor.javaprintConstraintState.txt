protected void printConstraintState(OracleConstraint x) {
    incrementIndent();
    if (x.getUsing() != null) {
        println();
        x.getUsing().accept(this);
    }
    if (x.getExceptionsInto() != null) {
        println();
        print0(ucase ? "EXCEPTIONS INTO " : "exceptions into ");
        x.getExceptionsInto().accept(this);
    }
    Boolean enable = x.getEnable();
    if (enable != null) {
        if (enable.booleanValue()) {
            print0(ucase ? " ENABLE" : " enable");
        } else {
            print0(ucase ? " DISABLE" : " disable");
        }
    }
    if (x.getInitially() != null) {
        print0(ucase ? " INITIALLY " : " initially ");
        print0(x.getInitially().name());
    }
    if (x.getDeferrable() != null) {
        if (x.getDeferrable().booleanValue()) {
            print0(ucase ? " DEFERRABLE" : " deferrable");
        } else {
            print0(ucase ? " NOT DEFERRABLE" : " not deferrable");
        }
    }
    decrementIndent();
}||||||||protected void printConstraintState(OracleConstraint x) {
    this.indentCount++;
    if (x.getUsing() != null) {
        println();
        x.getUsing().accept(this);
    }
    if (x.getExceptionsInto() != null) {
        println();
        print0(ucase ? "EXCEPTIONS INTO " : "exceptions into ");
        x.getExceptionsInto().accept(this);
    }
    Boolean enable = x.getEnable();
    if (enable != null) {
        if (enable.booleanValue()) {
            print0(ucase ? " ENABLE" : " enable");
        } else {
            print0(ucase ? " DISABLE" : " disable");
        }
    }
    if (x.getInitially() != null) {
        print0(ucase ? " INITIALLY " : " initially ");
        print0(x.getInitially().name());
    }
    if (x.getDeferrable() != null) {
        if (x.getDeferrable().booleanValue()) {
            print0(ucase ? " DEFERRABLE" : " deferrable");
        } else {
            print0(ucase ? " NOT DEFERRABLE" : " not deferrable");
        }
    }
    this.indentCount--;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									StringLiteralExpr
								)
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

