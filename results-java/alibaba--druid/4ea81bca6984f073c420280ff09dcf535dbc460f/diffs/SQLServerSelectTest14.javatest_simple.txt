public void test_simple() throws Exception {
    String sql = // 
    "SELECT " + // 
    "    a.* " + // 
    "FROM " + // 
    "    ( " + // 
    "            SELECT " + // 
    "                    row_number () over (ORDER BY a.time_add DESC) ROW, " + // 
    "                    a.detail_no AS detailNo, " + // 
    "                    a.ba_id AS baId, " + // 
    "                    a.ba_name AS baName, " + // 
    "                    a.tran_no AS tranNo, " + // 
    "                    a.tran_name AS tranName, " + // 
    "                    a.tran_type AS tranType, " + // 
    "                    a.balance_type AS balanceType, " + // 
    "                    a.detail_income AS detailIncome, " + // 
    "                    a.detail_payout AS detailPayout, " + // 
    "                    a.before_balance AS beforeBalance, " + // 
    "                    a.after_balance AS afterBalance, " + // 
    "                    a.time_add AS timeAdd, " + // 
    "                    a.user_add AS userAdd, " + // 
    "                    a.remark AS remark, " + // 
    "                    ( " + // 
    "                            SELECT " + // 
    "                                    top 1 t.param_name " + // 
    "                            FROM " + // 
    "                                    config.sys_params t " + // 
    "                            WHERE " + // 
    "                                    t.param_type = 2 " + // 
    "                            AND t.param_value = a.tran_type " + // 
    "                    ) AS tranTypeName " + // 
    "            FROM " + // 
    "                    bussiness.account_detail a " + // 
    "            WHERE " + // 
    "                    1 = 1 " + // 
    "            AND a.time_add >= 2 " + // 
    "            AND a.time_add <= 3 " + // 
    "    ) a " + // 
    "WHERE " + // 
    "    a.ROW BETWEEN (10+2) AND 20 ";
    String expect = "SELECT a.*" + // 
    "\nFROM (SELECT ROW_NUMBER() OVER (ORDER BY a.time_add DESC) AS ROW, a.detail_no AS detailNo, a.ba_id AS baId, a.ba_name AS baName, a.tran_no AS tranNo" + // 
    "\n\t\t, a.tran_name AS tranName, a.tran_type AS tranType, a.balance_type AS balanceType, a.detail_income AS detailIncome, a.detail_payout AS detailPayout" + // 
    "\n\t\t, a.before_balance AS beforeBalance, a.after_balance AS afterBalance, a.time_add AS timeAdd, a.user_add AS userAdd, a.remark AS remark" + // 
    "\n\t\t, (" + // 
    "\n\t\t\tSELECT TOP 1 t.param_name" + // 
    "\n\t\t\tFROM config.sys_params t" + // 
    "\n\t\t\tWHERE t.param_type = 2" + // 
    "\n\t\t\t\tAND t.param_value = a.tran_type" + // 
    "\n\t\t\t) AS tranTypeName" + // 
    "\n\tFROM bussiness.account_detail a" + // 
    "\n\tWHERE 1 = 1" + // 
    "\n\t\tAND a.time_add >= 2" + // 
    "\n\t\tAND a.time_add <= 3" + // 
    "\n\t) a" + // 
    "\nWHERE a.ROW BETWEEN 10 + 2 AND 20";
    SQLServerStatementParser parser = new SQLServerStatementParser(sql);
    SQLStatement stmt = parser.parseStatementList().get(0);
    String text = TestUtils.outputSqlServer(stmt);
    Assert.assertEquals(expect, text);
// System.out.println(text);
}||||||||public void test_simple() throws Exception {
    String sql = // 
    "SELECT " + // 
    "    a.* " + // 
    "FROM " + // 
    "    ( " + // 
    "            SELECT " + // 
    "                    row_number () over (ORDER BY a.time_add DESC) ROW, " + // 
    "                    a.detail_no AS detailNo, " + // 
    "                    a.ba_id AS baId, " + // 
    "                    a.ba_name AS baName, " + // 
    "                    a.tran_no AS tranNo, " + // 
    "                    a.tran_name AS tranName, " + // 
    "                    a.tran_type AS tranType, " + // 
    "                    a.balance_type AS balanceType, " + // 
    "                    a.detail_income AS detailIncome, " + // 
    "                    a.detail_payout AS detailPayout, " + // 
    "                    a.before_balance AS beforeBalance, " + // 
    "                    a.after_balance AS afterBalance, " + // 
    "                    a.time_add AS timeAdd, " + // 
    "                    a.user_add AS userAdd, " + // 
    "                    a.remark AS remark, " + // 
    "                    ( " + // 
    "                            SELECT " + // 
    "                                    top 1 t.param_name " + // 
    "                            FROM " + // 
    "                                    config.sys_params t " + // 
    "                            WHERE " + // 
    "                                    t.param_type = 2 " + // 
    "                            AND t.param_value = a.tran_type " + // 
    "                    ) AS tranTypeName " + // 
    "            FROM " + // 
    "                    bussiness.account_detail a " + // 
    "            WHERE " + // 
    "                    1 = 1 " + // 
    "            AND a.time_add >= 2 " + // 
    "            AND a.time_add <= 3 " + // 
    "    ) a " + // 
    "WHERE " + // 
    "    a.ROW BETWEEN (10+2) AND 20 ";
    String expect = "SELECT a.*\n" + "FROM (\n" + "\tSELECT ROW_NUMBER() OVER (ORDER BY a.time_add DESC) AS ROW, a.detail_no AS detailNo, a.ba_id AS baId, a.ba_name AS baName, a.tran_no AS tranNo\n" + "\t\t, a.tran_name AS tranName, a.tran_type AS tranType, a.balance_type AS balanceType, a.detail_income AS detailIncome, a.detail_payout AS detailPayout\n" + "\t\t, a.before_balance AS beforeBalance, a.after_balance AS afterBalance, a.time_add AS timeAdd, a.user_add AS userAdd, a.remark AS remark\n" + "\t\t, (\n" + "\t\t\tSELECT TOP 1 t.param_name\n" + "\t\t\tFROM config.sys_params t\n" + "\t\t\tWHERE t.param_type = 2\n" + "\t\t\t\tAND t.param_value = a.tran_type\n" + "\t\t\t) AS tranTypeName\n" + "\tFROM bussiness.account_detail a\n" + "\tWHERE 1 = 1\n" + "\t\tAND a.time_add >= 2\n" + "\t\tAND a.time_add <= 3\n" + ") a\n" + "WHERE a.ROW BETWEEN 10 + 2 AND 20";
    SQLServerStatementParser parser = new SQLServerStatementParser(sql);
    SQLStatement stmt = parser.parseStatementList().get(0);
    String text = TestUtils.outputSqlServer(stmt);
    assertEquals(expect, text);
// System.out.println(text);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	(BinaryExpr
																																		(BinaryExpr
																																			(BinaryExpr
																																				(BinaryExpr
																																					(BinaryExpr
																																						(BinaryExpr
																																							(BinaryExpr
																																								(BinaryExpr
																																									(BinaryExpr
																																										StringLiteralExpr
																																											LineComment
																																										StringLiteralExpr
																																											LineComment
																																									)
																																									StringLiteralExpr
																																										LineComment
																																								)
																																								StringLiteralExpr
																																									LineComment
																																							)
																																							StringLiteralExpr
																																								LineComment
																																						)
																																						StringLiteralExpr
																																							LineComment
																																					)
																																					StringLiteralExpr
																																						LineComment
																																				)
																																				StringLiteralExpr
																																					LineComment
																																			)
																																			StringLiteralExpr
																																				LineComment
																																		)
																																		StringLiteralExpr
																																			LineComment
																																	)
																																	StringLiteralExpr
																																		LineComment
																																)
																																StringLiteralExpr
																																	LineComment
																															)
																															StringLiteralExpr
																																LineComment
																														)
																														StringLiteralExpr
																															LineComment
																													)
																													StringLiteralExpr
																														LineComment
																												)
																												StringLiteralExpr
																													LineComment
																											)
																											StringLiteralExpr
																												LineComment
																										)
																										StringLiteralExpr
																											LineComment
																									)
																									StringLiteralExpr
																										LineComment
																								)
																								StringLiteralExpr
																									LineComment
																							)
																							StringLiteralExpr
																								LineComment
																						)
																						StringLiteralExpr
																							LineComment
																					)
																					StringLiteralExpr
																						LineComment
																				)
																				StringLiteralExpr
																					LineComment
																			)
																			StringLiteralExpr
																				LineComment
																		)
																		StringLiteralExpr
																			LineComment
																	)
																	StringLiteralExpr
																		LineComment
																)
																StringLiteralExpr
																	LineComment
															)
															StringLiteralExpr
																LineComment
														)
														StringLiteralExpr
															LineComment
													)
													StringLiteralExpr
														LineComment
												)
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				StringLiteralExpr
																				StringLiteralExpr
																					LineComment
																			)
																			StringLiteralExpr
																				LineComment
																		)
																		StringLiteralExpr
																			LineComment
																	)
																	StringLiteralExpr
																		LineComment
																)
																StringLiteralExpr
																	LineComment
															)
															StringLiteralExpr
																LineComment
														)
														StringLiteralExpr
															LineComment
													)
													StringLiteralExpr
														LineComment
												)
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									(BinaryExpr
																										(BinaryExpr
																											(BinaryExpr
																												(BinaryExpr
																													(BinaryExpr
																														(BinaryExpr
																															(BinaryExpr
																																(BinaryExpr
																																	(BinaryExpr
																																		(BinaryExpr
																																			(BinaryExpr
																																				(BinaryExpr
																																					(BinaryExpr
																																						(BinaryExpr
																																							(BinaryExpr
																																								(BinaryExpr
																																									(BinaryExpr
																																										StringLiteralExpr
																																											LineComment
																																										StringLiteralExpr
																																											LineComment
																																									)
																																									StringLiteralExpr
																																										LineComment
																																								)
																																								StringLiteralExpr
																																									LineComment
																																							)
																																							StringLiteralExpr
																																								LineComment
																																						)
																																						StringLiteralExpr
																																							LineComment
																																					)
																																					StringLiteralExpr
																																						LineComment
																																				)
																																				StringLiteralExpr
																																					LineComment
																																			)
																																			StringLiteralExpr
																																				LineComment
																																		)
																																		StringLiteralExpr
																																			LineComment
																																	)
																																	StringLiteralExpr
																																		LineComment
																																)
																																StringLiteralExpr
																																	LineComment
																															)
																															StringLiteralExpr
																																LineComment
																														)
																														StringLiteralExpr
																															LineComment
																													)
																													StringLiteralExpr
																														LineComment
																												)
																												StringLiteralExpr
																													LineComment
																											)
																											StringLiteralExpr
																												LineComment
																										)
																										StringLiteralExpr
																											LineComment
																									)
																									StringLiteralExpr
																										LineComment
																								)
																								StringLiteralExpr
																									LineComment
																							)
																							StringLiteralExpr
																								LineComment
																						)
																						StringLiteralExpr
																							LineComment
																					)
																					StringLiteralExpr
																						LineComment
																				)
																				StringLiteralExpr
																					LineComment
																			)
																			StringLiteralExpr
																				LineComment
																		)
																		StringLiteralExpr
																			LineComment
																	)
																	StringLiteralExpr
																		LineComment
																)
																StringLiteralExpr
																	LineComment
															)
															StringLiteralExpr
																LineComment
														)
														StringLiteralExpr
															LineComment
													)
													StringLiteralExpr
														LineComment
												)
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					StringLiteralExpr
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

