public void test_column_comment() throws Exception {
    String sql = // 
    "-- 使用服务模式" + // 
    "\nset odps.service.mode=all;" + // 
    "\n-- 使用新引擎" + // 
    "\nset odps.nvm.enabled=true;" + // 
    "\nselect f1 -- aa" + // 
    "\nfrom t0;" + // 
    "\nselect f2 -- aa" + // 
    "\nfrom t1;";
    Assert.assertEquals(// 
    "-- 使用服务模式" + // 
    "\nSET odps.service.mode = all;" + // 
    "\n-- 使用新引擎" + // 
    "\nSET odps.nvm.enabled = true;" + // 
    "\nSELECT f1 -- aa" + // 
    "\nFROM t0;" + // 
    "\nSELECT f2 -- aa" + "\nFROM t1;", SQLUtils.formatOdps(sql));
}||||||||public void test_column_comment() throws Exception {
    String sql = // 
    "-- 使用服务模式" + // 
    "\nset odps.service.mode=all;" + // 
    "\n-- 使用新引擎" + // 
    "\nset odps.nvm.enabled=true;" + // 
    "\nselect f1 -- aa" + // 
    "\nfrom t0;" + // 
    "\nselect f2 -- aa" + // 
    "\nfrom t1;";
    Assert.assertEquals(// 
    "-- 使用服务模式" + // 
    "\nSET odps.service.mode = all;" + // 
    "\n-- 使用新引擎" + // 
    "\nSET odps.nvm.enabled = true;" + // 
    "\n" + // 
    "\nSELECT f1 -- aa" + // 
    "\nFROM t0;" + // 
    "\n" + // 
    "\nSELECT f2 -- aa" + "\nFROM t1;", SQLUtils.formatOdps(sql));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
													LineComment
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
												LineComment
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
													LineComment
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
														LineComment
													StringLiteralExpr
														LineComment
												)
												StringLiteralExpr
													LineComment
											)
											StringLiteralExpr
												LineComment
										)
										StringLiteralExpr
											LineComment
									)
									StringLiteralExpr
										LineComment
								)
								StringLiteralExpr
									LineComment
							)
							StringLiteralExpr
								LineComment
						)
						StringLiteralExpr
							LineComment
					)
					StringLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

