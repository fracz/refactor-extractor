@Override
public void run() {
    Future<Integer> future = executor.evalWriteAsync(name, LongCodec.INSTANCE, RedisCommands.EVAL_INTEGER, "local expiredKeys = redis.call('zrangebyscore', KEYS[2], 0, ARGV[1], 'limit', 0, ARGV[2]); " + "if #expiredKeys > 0 then " + "redis.call('zrem', KEYS[2], unpack(expiredKeys)); " + "redis.call('hdel', KEYS[1], unpack(expiredKeys)); " + "end; " + "return #expiredKeys;", Arrays.<Object>asList(name, timeoutSetName), System.currentTimeMillis(), keysLimit);
    future.addListener(new FutureListener<Integer>() {

        @Override
        public void operationComplete(Future<Integer> future) throws Exception {
            if (!future.isSuccess()) {
                schedule();
                return;
            }
            Integer size = future.getNow();
            if (sizeHistory.size() == 2) {
                if (sizeHistory.peekFirst() > sizeHistory.peekLast() && sizeHistory.peekLast() > size) {
                    delay = Math.min(maxDelay, (int) (delay * 1.5));
                }
                if (sizeHistory.peekFirst() == sizeHistory.peekLast() && sizeHistory.peekLast() == size) {
                    if (size == keysLimit) {
                        delay = Math.max(minDelay, delay / 4);
                    }
                    if (size == 0) {
                        delay = Math.min(maxDelay, (int) (delay * 1.5));
                    }
                }
                sizeHistory.pollFirst();
            }
            sizeHistory.add(size);
            schedule();
        }
    });
}||||||||@Override
public void run() {
    Future<Integer> future = cleanupExpiredEntires(name, timeoutSetName, keysLimit);
    future.addListener(new FutureListener<Integer>() {

        @Override
        public void operationComplete(Future<Integer> future) throws Exception {
            if (!future.isSuccess()) {
                schedule();
                return;
            }
            Integer size = future.getNow();
            if (sizeHistory.size() == 2) {
                if (sizeHistory.peekFirst() > sizeHistory.peekLast() && sizeHistory.peekLast() > size) {
                    delay = Math.min(maxDelay, (int) (delay * 1.5));
                }
                if (sizeHistory.peekFirst() == sizeHistory.peekLast() && sizeHistory.peekLast() == size) {
                    if (size == keysLimit) {
                        delay = Math.max(minDelay, delay / 4);
                    }
                    if (size == 0) {
                        delay = Math.min(maxDelay, (int) (delay * 1.5));
                    }
                }
                sizeHistory.pollFirst();
            }
            sizeHistory.add(size);
            schedule();
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(DoubleLiteralExpr
																	)
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(EnclosedExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(DoubleLiteralExpr
																			)
																		)
																	)
																	(PrimitiveType
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(DoubleLiteralExpr
																	)
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(EnclosedExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			(DoubleLiteralExpr
																			)
																		)
																	)
																	(PrimitiveType
																	)
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

