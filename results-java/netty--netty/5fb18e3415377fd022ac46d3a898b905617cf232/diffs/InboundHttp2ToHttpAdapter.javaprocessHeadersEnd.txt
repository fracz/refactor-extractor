/**
 * After HTTP/2 headers have been processed by {@link #processHeadersBegin} this method either
 * sends the result up the pipeline or retains the message for future processing.
 *
 * @param ctx The context for which this message has been received
 * @param streamId The stream id the {@code objAccumulator} corresponds to
 * @param msg The object which represents all headers/data for corresponding to {@code streamId}
 * @param endOfStream {@code true} if this is the last event for the stream
 */
private void processHeadersEnd(ChannelHandlerContext ctx, int streamId, FullHttpMessage msg, boolean endOfStream) {
    if (endOfStream) {
        fireChannelRead(ctx, msg, streamId);
    } else {
        messageMap.put(streamId, msg);
    }
}||||||||/**
 * After HTTP/2 headers have been processed by {@link #processHeadersBegin} this method either
 * sends the result up the pipeline or retains the message for future processing.
 *
 * @param ctx The context for which this message has been received
 * @param stream The stream the {@code objAccumulator} corresponds to
 * @param msg The object which represents all headers/data for corresponding to {@code stream}
 * @param endOfStream {@code true} if this is the last event for the stream
 */
private void processHeadersEnd(ChannelHandlerContext ctx, Http2Stream stream, FullHttpMessage msg, boolean endOfStream) {
    if (endOfStream) {
        // Release if the msg from the map is different from the object being forwarded up the pipeline.
        fireChannelRead(ctx, msg, getMessage(stream) != msg, stream);
    } else {
        putMessage(stream, msg);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

