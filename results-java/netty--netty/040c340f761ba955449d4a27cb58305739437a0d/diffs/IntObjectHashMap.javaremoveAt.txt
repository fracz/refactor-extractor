/**
 * Removes entry at the given index position. Also performs opportunistic, incremental rehashing
 * if necessary to not break conflict chains.
 *
 * @param index the index position of the element to remove.
 */
private void removeAt(int index) {
    --size;
    // Clearing the key is not strictly necessary (for GC like in a regular collection),
    // but recommended for security. The memory location is still fresh in the cache anyway.
    keys[index] = 0;
    values[index] = null;
    // In the interval from index to the next available entry, the arrays may have entries
    // that are displaced from their base position due to prior conflicts. Iterate these
    // entries and move them back if possible, optimizing future lookups.
    // Knuth Section 6.4 Algorithm R, also used by the JDK's IdentityHashMap.
    int nextFree = index;
    for (int i = probeNext(index); values[i] != null; i = probeNext(i)) {
        int bucket = hashIndex(keys[i]);
        if ((i < bucket && (bucket <= nextFree || nextFree <= i)) || (bucket <= nextFree && nextFree <= i)) {
            // Move the displaced entry "back" to the first available position.
            keys[nextFree] = keys[i];
            values[nextFree] = values[i];
            // Put the first entry after the displaced entry
            keys[i] = 0;
            values[i] = null;
            nextFree = i;
        }
    }
}||||||||/**
 * Removes entry at the given index position. Also performs opportunistic, incremental rehashing
 * if necessary to not break conflict chains.
 *
 * @param index the index position of the element to remove.
 */
private void removeAt(int index) {
    --size;
    // Clearing the key is not strictly necessary (for GC like in a regular collection),
    // but recommended for security. The memory location is still fresh in the cache anyway.
    keys[index] = 0;
    values[index] = null;
    // In the interval from index to the next available entry, the arrays may have entries
    // that are displaced from their base position due to prior conflicts. Iterate these
    // entries and move them back if possible, optimizing future lookups.
    // Knuth Section 6.4 Algorithm R, also used by the JDK's IdentityHashMap.
    int nextFree = index;
    for (int i = probeNext(index); values[i] != null; i = probeNext(i)) {
        int bucket = hashIndex(keys[i]);
        if (i < bucket && (bucket <= nextFree || nextFree <= i) || bucket <= nextFree && nextFree <= i) {
            // Move the displaced entry "back" to the first available position.
            keys[nextFree] = keys[i];
            values[nextFree] = values[i];
            // Put the first entry after the displaced entry
            keys[i] = 0;
            values[i] = null;
            nextFree = i;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				(ArrayAccessExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

