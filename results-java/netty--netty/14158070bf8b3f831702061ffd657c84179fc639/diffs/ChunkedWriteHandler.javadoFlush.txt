private void doFlush(final ChannelHandlerContext ctx) throws Exception {
    Channel channel = ctx.channel();
    if (!channel.isActive()) {
        discard(ctx, null);
        return;
    }
    while (isWritable()) {
        if (currentEvent == null) {
            currentEvent = queue.poll();
        }
        if (currentEvent == null) {
            break;
        }
        final Object currentEvent = this.currentEvent;
        if (currentEvent instanceof ChannelPromise) {
            this.currentEvent = null;
            ctx.flush((ChannelPromise) currentEvent);
        } else if (currentEvent instanceof ChunkedInput) {
            final ChunkedInput<?> chunks = (ChunkedInput<?>) currentEvent;
            boolean read;
            boolean endOfInput;
            boolean suspend;
            try {
                read = readChunk(ctx, chunks);
                endOfInput = chunks.isEndOfInput();
                if (!read) {
                    // No need to suspend when reached at the end.
                    suspend = !endOfInput;
                } else {
                    suspend = false;
                }
            } catch (final Throwable t) {
                this.currentEvent = null;
                if (ctx.executor().inEventLoop()) {
                    ctx.fireExceptionCaught(t);
                } else {
                    ctx.executor().execute(new Runnable() {

                        @Override
                        public void run() {
                            ctx.fireExceptionCaught(t);
                        }
                    });
                }
                closeInput(chunks);
                break;
            }
            if (suspend) {
                // more chunks arrive. Nothing to write or notify.
                break;
            }
            pendingWrites.incrementAndGet();
            ChannelFuture f = ctx.flush();
            if (endOfInput) {
                this.currentEvent = null;
                // Register a listener which will close the input once the write is complete.
                // This is needed because the Chunk may have some resource bound that can not
                // be closed before its not written.
                // 
                // See https://github.com/netty/netty/issues/303
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        closeInput(chunks);
                    }
                });
            } else if (isWritable()) {
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        if (!future.isSuccess()) {
                            closeInput((ChunkedInput<?>) currentEvent);
                        }
                    }
                });
            } else {
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        if (!future.isSuccess()) {
                            closeInput((ChunkedInput<?>) currentEvent);
                        } else if (isWritable()) {
                            resumeTransfer();
                        }
                    }
                });
            }
        } else {
            ChannelHandlerUtil.addToNextOutboundBuffer(ctx, currentEvent);
            this.currentEvent = null;
        }
        if (!channel.isActive()) {
            discard(ctx, new ClosedChannelException());
            return;
        }
    }
}||||||||private void doFlush(final ChannelHandlerContext ctx) throws Exception {
    Channel channel = ctx.channel();
    if (!channel.isActive()) {
        discard(ctx, null);
        return;
    }
    MessageList<Object> messages = MessageList.newInstance();
    while (isWritable()) {
        if (currentEvent == null) {
            currentEvent = queue.poll();
        }
        if (currentEvent == null) {
            break;
        }
        final Object currentEvent = this.currentEvent;
        if (currentEvent instanceof ChannelPromise) {
            this.currentEvent = null;
            ctx.write(messages, (ChannelPromise) currentEvent);
            messages = MessageList.newInstance();
        } else if (currentEvent instanceof ChunkedInput) {
            MessageList<Object> out = MessageList.newInstance();
            final ChunkedInput<?> chunks = (ChunkedInput<?>) currentEvent;
            boolean read;
            boolean endOfInput;
            boolean suspend;
            try {
                read = readChunk(ctx, chunks, out);
                endOfInput = chunks.isEndOfInput();
                if (!read) {
                    // No need to suspend when reached at the end.
                    suspend = !endOfInput;
                } else {
                    suspend = false;
                }
            } catch (final Throwable t) {
                this.currentEvent = null;
                if (ctx.executor().inEventLoop()) {
                    ctx.fireExceptionCaught(t);
                } else {
                    ctx.executor().execute(new Runnable() {

                        @Override
                        public void run() {
                            ctx.fireExceptionCaught(t);
                        }
                    });
                }
                closeInput(chunks);
                break;
            }
            if (suspend) {
                // more chunks arrive. Nothing to write or notify.
                break;
            }
            pendingWrites.incrementAndGet();
            ChannelFuture f = ctx.write(out);
            if (endOfInput) {
                this.currentEvent = null;
                // Register a listener which will close the input once the write is complete.
                // This is needed because the Chunk may have some resource bound that can not
                // be closed before its not written.
                // 
                // See https://github.com/netty/netty/issues/303
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        closeInput(chunks);
                    }
                });
            } else if (isWritable()) {
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        if (!future.isSuccess()) {
                            closeInput((ChunkedInput<?>) currentEvent);
                        }
                    }
                });
            } else {
                f.addListener(new ChannelFutureListener() {

                    @Override
                    public void operationComplete(ChannelFuture future) throws Exception {
                        pendingWrites.decrementAndGet();
                        if (!future.isSuccess()) {
                            closeInput((ChunkedInput<?>) currentEvent);
                        } else if (isWritable()) {
                            resumeTransfer();
                        }
                    }
                });
            }
        } else {
            ctx.write(currentEvent);
            this.currentEvent = null;
        }
        if (!channel.isActive()) {
            discard(ctx, new ClosedChannelException());
            return;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(BreakStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									NullLiteralExpr
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
												(WildcardType
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												NullLiteralExpr
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(VoidType
																)
																SimpleName
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(BreakStmt
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(BreakStmt
										LineComment
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(IfStmt
																	(MethodCallExpr
																		SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(CastExpr
																				NameExpr
																					SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																					(WildcardType
																					)
																				)
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(CastExpr
																				NameExpr
																					SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																					(WildcardType
																					)
																				)
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											NullLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(MethodDeclaration
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
													(VoidType
													)
													SimpleName
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
													(MarkerAnnotationExpr
														Name
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NullLiteralExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(BreakStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(IfStmt
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									NullLiteralExpr
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
												(WildcardType
												)
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
											(WildcardType
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													(ThisExpr
													)
												)
												NullLiteralExpr
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(VoidType
																)
																SimpleName
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(BreakStmt
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(BooleanLiteralExpr
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(UnaryExpr
														NameExpr
															SimpleName
													)
												)
												LineComment
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(BreakStmt
										LineComment
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(IfStmt
									(MethodCallExpr
										SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(IfStmt
																	(MethodCallExpr
																		SimpleName
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				SimpleName
																			)
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(CastExpr
																				NameExpr
																					SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																					(WildcardType
																					)
																				)
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ObjectCreationExpr
													(MethodDeclaration
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(IfStmt
																(UnaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(CastExpr
																				NameExpr
																					SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																					(WildcardType
																					)
																				)
																			)
																			SimpleName
																		)
																	)
																)
															)
														)
														(VoidType
														)
														SimpleName
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
														(MarkerAnnotationExpr
															Name
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											NullLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(MethodDeclaration
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
													(VoidType
													)
													SimpleName
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
													(MarkerAnnotationExpr
														Name
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								NullLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

