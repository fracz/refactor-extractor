/**
 * Called by the appender that just appended a transaction to the log.
 *
 * @param logAppendEvent A trace event for the given log append operation.
 */
protected // 'protected' because of
void forceAfterAppend(// 'protected' because of
LogAppendEvent logAppendEvent) throws // 'protected' because of
IOException // LogRotationDeadlockTest
{
    // There's a benign race here, where we add our link before we update our next pointer.
    // This is okay, however, because unparkAll() spins when it sees a null next pointer.
    ThreadLink threadLink = new ThreadLink(Thread.currentThread());
    threadLink.next = threadLinkHead.getAndSet(threadLink);
    try (LogForceWaitEvent logForceWaitEvent = logAppendEvent.beginLogForceWait()) {
        do {
            if (forceLock.tryLock()) {
                try {
                    forceLog(logAppendEvent);
                } finally {
                    forceLock.unlock();
                    // We've released the lock, so unpark anyone who might have decided park while we were working.
                    // The most recently parked thread is the one most likely to still have warm caches, so that's
                    // the one we would prefer to unpark. Luckily, the stack nature of the ThreadLinks makes it easy
                    // to get to.
                    ThreadLink nextWaiter = threadLinkHead.get();
                    nextWaiter.unpark();
                }
            } else {
                waitForLogForce();
            }
        } while (!threadLink.done);
    }
}||||||||/**
 * Called by the appender that just appended a transaction to the log.
 *
 * @param logForceEvents A trace event for the given log append operation.
 */
protected void forceAfterAppend(LogForceEvents logForceEvents) throws IOException {
    // There's a benign race here, where we add our link before we update our next pointer.
    // This is okay, however, because unparkAll() spins when it sees a null next pointer.
    ThreadLink threadLink = new ThreadLink(Thread.currentThread());
    threadLink.next = threadLinkHead.getAndSet(threadLink);
    try (LogForceWaitEvent logForceWaitEvent = logForceEvents.beginLogForceWait()) {
        do {
            if (forceLock.tryLock()) {
                try {
                    forceLog(logForceEvents);
                } finally {
                    forceLock.unlock();
                    // We've released the lock, so unpark anyone who might have decided park while we were working.
                    // The most recently parked thread is the one most likely to still have warm caches, so that's
                    // the one we would prefer to unpark. Luckily, the stack nature of the ThreadLinks makes it easy
                    // to get to.
                    ThreadLink nextWaiter = threadLinkHead.get();
                    nextWaiter.unpark();
                }
            } else {
                waitForLogForce();
            }
        } while (!threadLink.done);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(DoStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(TryStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		LineComment
	)
	(VoidType
		LineComment
	)
	SimpleName
		LineComment
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		LineComment
	)
	(ClassOrInterfaceType
		SimpleName
		LineComment
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(DoStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							(BlockStmt
								(TryStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											LineComment
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
					(UnaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

