/**
 * Pin the given page, so that it will not get evicted before unpin has been called.
 *
 * Returns true if this page still represent the given assertPageId in the context of the
 * given assertIO. In other words, it will return true if the page has not been replaced.
 * Otherwise it returns false.
 *
 * If the page is currently pinned for reading or writing, and the given PageLock is EXCLUSIVE, the pin will block.
 * If the page is currently pinned for writing, and the given PageLock is SHARED, the pin will block.
 */
boolean pin(PageSwapper assertIO, long assertPageId, PageLock lock);||||||||/**
 * Pin the given page, so that it will not get evicted before unpin has been called.
 *
 * Returns true if this page still represent the given assertPageId in the context of the
 * given assertIO. In other words, it will return true if the page has not been replaced.
 * Otherwise it returns false.
 *
 * If the page is currently pinned for reading or writing, and the given PageLock is EXCLUSIVE, the pin will block.
 * If the page is currently pinned for writing, and the given PageLock is SHARED, the pin will block.
 */
boolean pin(PageSwapper assertIO, long assertPageId, int pf_flags);||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

