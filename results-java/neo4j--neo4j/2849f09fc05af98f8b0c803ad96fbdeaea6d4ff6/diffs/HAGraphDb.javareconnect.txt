/**
 * Shuts down the broker, invalidating every connection to the zookeeper
 * cluster and starts it again. Should be called in case a ConnectionExpired
 * event is received, this is the equivalent of building the ZK connection
 * from start. Also triggers a master reelect, to make sure that the state
 * ZK ended up in during our absence is respected. The cluster manager is
 * not used outside of startup where this call should not happen and also it
 * doesn't keep a zoo client open - so is no reason to recreate it
 */
@Override
public void reconnect(Exception e) {
    if (broker != null) {
        broker.shutdown();
    }
    this.broker = brokerFactory.create(this, config);
    newMaster(e);
}||||||||/**
 * Shuts down the broker, invalidating every connection to the zookeeper
 * cluster and starts it again. Should be called in case a ConnectionExpired
 * event is received, this is the equivalent of building the ZK connection
 * from start. Also triggers a master reelect, to make sure that the state
 * ZK ended up in during our absence is respected. The cluster manager is
 * not used outside of startup where this call should not happen and also it
 * doesn't keep a zoo client open - so is no reason to recreate it
 */
@Override
public void reconnect(Exception e) {
    if (broker != null) {
        broker.restart();
    }
    newMaster(e);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					(ThisExpr
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

