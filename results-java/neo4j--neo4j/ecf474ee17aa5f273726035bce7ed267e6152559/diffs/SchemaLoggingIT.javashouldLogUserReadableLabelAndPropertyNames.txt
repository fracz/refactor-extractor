@Test
public void shouldLogUserReadableLabelAndPropertyNames() throws Exception {
    // noinspection deprecation
    GraphDatabaseAPI db = dbRule.getGraphDatabaseAPI();
    String labelName = "User";
    String property = "name";
    // when
    createIndex(db, labelName, property);
    // then
    logging.getMessagesLog(IndexPopulationJob.class).assertExactly(info("Index population started: [:User(name) [provider: {key=in-memory, version=1.0}]]"), info("Index population completed. Index is now online: [:User(name) [provider: {key=in-memory, version=1.0}]]"));
}||||||||@Test
public void shouldLogUserReadableLabelAndPropertyNames() throws Exception {
    // noinspection deprecation
    GraphDatabaseAPI db = dbRule.getGraphDatabaseAPI();
    String labelName = "User";
    String property = "name";
    // when
    createIndex(db, labelName, property);
    // then
    logging.getMessagesLog(IndexPopulationJob.class).assertExactly(info("Index population started: [:User(name) [provider: {key=in-memory-index, version=1.0}]]"), info("Index population completed. Index is now online: [:User(name) [provider: {key=in-memory-index," + " version=1.0}]]"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				(MethodCallExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(ClassExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

