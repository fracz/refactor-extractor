/**
 * Handle an incoming network packet. We currently deal with the chunked input by building up full messages in
 * RAM before we deserialize them. This is fine with most messages, but will become a problem with very large
 * parameters and so on. The next step will be to write a new protocol V1 deserializer that can do incremental
 * deserialization, see the Netty HTTP parser for an example.
 */
@Override
public void handle(ChannelHandlerContext channelContext, ByteBuf data) throws IOException {
    try {
        dechunker.handle(data);
    } catch (Throwable e) {
        handleUnexpectedError(channelContext, e);
    } finally {
        data.release();
    }
}||||||||/**
 * Handle an incoming network packet. We currently deal with the chunked input by building up full messages in
 * RAM before we deserialize them. This is fine with most messages, but will become a problem with very large
 * parameters and so on. The next step will be to write a new protocol V1 deserializer that can do incremental
 * deserialization, see the Netty HTTP parser for an example.
 */
@Override
public void handle(ChannelHandlerContext channelContext, ByteBuf data) throws IOException {
    try {
        dechunker.handle(data);
    } catch (Throwable e) {
        bridge.handleFatalError(Neo4jError.from(e));
        close();
    } finally {
        data.release();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

