// ----------List users/roles-----------
@Test
public void shouldReturnUsers() throws Exception {
    testResult(db, adminSubject, "CALL dbms.listUsers() YIELD username", r -> resultKeyIs(r, "username", "adminSubject", "readSubject", "schemaSubject", "readWriteSubject", "noneSubject", "neo4j"));
}||||||||// ----------List users/roles-----------
@Test
public void shouldReturnUsers() throws Exception {
    testResult(adminSubject, "CALL dbms.listUsers() YIELD username", r -> resultKeyIs(r, "username", "adminSubject", "readSubject", "schemaSubject", "readWriteSubject", "noneSubject", "neo4j"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							StringLiteralExpr
							SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

