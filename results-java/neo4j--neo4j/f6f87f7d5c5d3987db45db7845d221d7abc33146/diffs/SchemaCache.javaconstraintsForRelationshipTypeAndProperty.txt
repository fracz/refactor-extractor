public Iterator<RelationshipPropertyConstraint> constraintsForRelationshipTypeAndProperty(final int typeId, final int propertyKeyId) {
    return Iterators.filter(constraint -> constraint.relationshipType() == typeId && constraint.propertyKey() == propertyKeyId, relationshipConstraints.iterator());
}||||||||public Iterator<RelationshipPropertyConstraint> constraintsForRelationshipTypeAndProperty(RelationshipPropertyDescriptor descriptor) {
    return Iterators.filter(constraint -> constraint.matches(descriptor), relationshipConstraints.iterator());
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

