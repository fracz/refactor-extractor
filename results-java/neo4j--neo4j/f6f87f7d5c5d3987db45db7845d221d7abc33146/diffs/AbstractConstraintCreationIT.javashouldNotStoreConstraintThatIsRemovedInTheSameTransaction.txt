@Test
public void shouldNotStoreConstraintThatIsRemovedInTheSameTransaction() throws Exception {
    // given
    {
        SchemaWriteOperations statement = schemaWriteOperationsInNewTransaction();
        Constraint constraint = createConstraint(statement, typeId, propertyKeyId);
        // when
        dropConstraint(statement, constraint);
        // then
        assertFalse("should not have any constraints", statement.constraintsGetAll().hasNext());
        // when
        commit();
    }
    {
        ReadOperations statement = readOperationsInNewTransaction();
        // then
        assertFalse("should not have any constraints", statement.constraintsGetAll().hasNext());
    }
}||||||||@Test
public void shouldNotStoreConstraintThatIsRemovedInTheSameTransaction() throws Exception {
    // given
    {
        SchemaWriteOperations statement = schemaWriteOperationsInNewTransaction();
        Constraint constraint = createConstraint(statement, descriptor);
        // when
        dropConstraint(statement, constraint);
        // then
        assertFalse("should not have any constraints", statement.constraintsGetAll().hasNext());
        // when
        commit();
    }
    {
        ReadOperations statement = readOperationsInNewTransaction();
        // then
        assertFalse("should not have any constraints", statement.constraintsGetAll().hasNext());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
				)
				LineComment
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
				LineComment
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
				LineComment
			)
			LineComment
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
				LineComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					SimpleName
				)
				LineComment
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
				LineComment
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
				LineComment
			)
			LineComment
		)
		(BlockStmt
			(ExpressionStmt
				(VariableDeclarationExpr
					(VariableDeclarator
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					StringLiteralExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
				)
				LineComment
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

