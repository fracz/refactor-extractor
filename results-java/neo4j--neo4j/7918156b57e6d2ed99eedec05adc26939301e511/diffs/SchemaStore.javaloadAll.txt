public Iterable<SchemaRule> loadAll() {
    return new Iterable<SchemaRule>() {

        @Override
        public Iterator<SchemaRule> iterator() {
            return new PrefetchingIterator<SchemaRule>() {

                private final long highestId = getHighestPossibleIdInUse();

                private long currentId = 1;

                /*record 0 contains the block size*/
                private byte[] scratchData = new byte[getRecordSize() * 4];

                @Override
                protected SchemaRule fetchNextOrNull() {
                    while (currentId <= highestId) {
                        long id = currentId++;
                        DynamicRecord record = forceGetRecord(id);
                        if (!record.inUse() || !record.isStartRecord())
                            continue;
                        Collection<DynamicRecord> records = getRecords(id);
                        ByteBuffer scratchBuffer = concatData(records, scratchData);
                        scratchData = scratchBuffer.array();
                        SchemaRule schemaRule = deserialize(id, scratchBuffer);
                        return schemaRule;
                    }
                    return null;
                }
            };
        }
    };
}||||||||public Iterable<SchemaRule> loadAll() {
    return new Iterable<SchemaRule>() {

        @Override
        public Iterator<SchemaRule> iterator() {
            return new PrefetchingIterator<SchemaRule>() {

                private final long highestId = getHighestPossibleIdInUse();

                private long currentId = 1;

                /*record 0 contains the block size*/
                private final byte[] scratchData = newRecordBuffer();

                @Override
                protected SchemaRule fetchNextOrNull() {
                    while (currentId <= highestId) {
                        long id = currentId++;
                        DynamicRecord record = forceGetRecord(id);
                        if (!record.inUse() || !record.isStartRecord())
                            continue;
                        return getSchemaRule(id, scratchData);
                    }
                    return null;
                }
            };
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(FieldDeclaration
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(FieldDeclaration
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(FieldDeclaration
									(VariableDeclarator
										(ArrayCreationExpr
											(PrimitiveType
											)
											(ArrayCreationLevel
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
										)
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
									(BlockComment
									)
								)
								(MethodDeclaration
									(BlockStmt
										(WhileStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ContinueStmt
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											NullLiteralExpr
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(FieldDeclaration
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(FieldDeclaration
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(FieldDeclaration
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
									(BlockComment
									)
								)
								(MethodDeclaration
									(BlockStmt
										(WhileStmt
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															SimpleName
															(PrimitiveType
															)
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ContinueStmt
													)
												)
												(ReturnStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											NullLiteralExpr
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)

