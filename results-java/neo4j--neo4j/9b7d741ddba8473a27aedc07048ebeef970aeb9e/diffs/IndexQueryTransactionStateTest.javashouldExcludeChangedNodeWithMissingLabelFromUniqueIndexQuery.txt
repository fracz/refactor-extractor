@Test
public void shouldExcludeChangedNodeWithMissingLabelFromUniqueIndexQuery() throws Exception {
    // Given
    when(store.nodeGetUniqueFromIndexLookup(state, indexDescriptor, value)).thenReturn(asPrimitiveResourceIterator());
    when(store.nodeHasLabel(1l, labelId)).thenReturn(false);
    // when( oldTxState.getNodesWithChangedProperty( propertyKeyId, value ) ).thenReturn(
    // new DiffSets<>( asSet( 1l ), Collections.<Long>emptySet() ) );
    // when( oldTxState.hasChanges() ).thenReturn( true );
    // When
    long result = txContext.nodeGetUniqueFromIndexLookup(state, indexDescriptor, value);
    // Then
    assertNoSuchNode(result);
    fail("Shouldn't work. Above is a commented piece of code that mocks a removal of something. " + "With that kept as commented code this test works, so it's a false green");
}||||||||@Test
public void shouldExcludeChangedNodeWithMissingLabelFromUniqueIndexQuery() throws Exception {
    // Given
    when(store.nodeGetUniqueFromIndexLookup(state, indexDescriptor, value)).thenReturn(asPrimitiveResourceIterator());
    when(store.nodeHasLabel(1l, labelId)).thenReturn(false);
    state.txState().nodeDoReplaceProperty(1l, Property.noNodeProperty(1l, propertyKeyId), Property.intProperty(propertyKeyId, 10));
    // When
    long result = txContext.nodeGetUniqueFromIndexLookup(state, indexDescriptor, value);
    // Then
    assertNoSuchNode(result);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(LongLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						(LongLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LongLiteralExpr
				)
				(MethodCallExpr
					(LongLiteralExpr
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

