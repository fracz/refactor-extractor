@Test
@Graph("Joe knows Sara")
public void shouldRespondWith404WhenStartNodeDoesNotExist() throws DatabaseBlockedException {
    String jsonString = "{\"to\" : \"" + getDataUri() + "node/" + getNode("Joe") + "\", \"type\" : \"LOVES\", \"data\" : {\"foo\" : \"bar\"}}";
    gen.get().expectedStatus(Status.NOT_FOUND.getStatusCode()).expectedType(MediaType.TEXT_HTML_TYPE).payload(jsonString).post(getDataUri() + "/node/12345/relationships").entity();
}||||||||@Test
@Graph("Joe knows Sara")
public void shouldRespondWith404WhenStartNodeDoesNotExist() {
    String jsonString = "{\"to\" : \"" + getDataUri() + "node/" + getNode("Joe") + "\", \"type\" : \"LOVES\", \"data\" : {\"foo\" : \"bar\"}}";
    gen.get().expectedStatus(Status.NOT_FOUND.getStatusCode()).expectedType(MediaType.TEXT_HTML_TYPE).payload(jsonString).post(getDataUri() + "/node/12345/relationships").entity();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
									)
								)
								StringLiteralExpr
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
									)
								)
								StringLiteralExpr
							)
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)

