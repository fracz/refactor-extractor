@Test
public void fail_prepare_two_phase_transaction_should_not_yield_two_start_log_entries() throws Exception {
    // GIVEN
    // -- a database with one additional data source and some initial data
    GraphDatabaseAPI db = new EmbeddedGraphDatabase(storeDir);
    XaDataSourceManager xaDs = db.getXaDataSourceManager();
    XaDataSource additionalDs = new DummyXaDataSource("dummy", "dummy".getBytes(), new FakeXAResource("dummy"));
    xaDs.registerDataSource(additionalDs);
    Node node = createNodeWithOneRelationshipToIt(db);
    // WHEN
    // -- doing a transaction involving both data sources and fails in prepare phase
    // due to invalid transaction data
    deleteNodeButNotItsRelationshipsInATwoPhaseTransaction(db, additionalDs, node);
    db.shutdown();
    // THEN
    // -- the logical log should only contain unique start entries after this transaction
    filterNeostoreLogicalLog(new File(storeDir, LOGICAL_LOG_DEFAULT_NAME + ".v0"), new VerificationLogHook());
}||||||||@Test
public void fail_prepare_two_phase_transaction_should_not_yield_two_start_log_entries() throws Exception {
    // GIVEN
    // -- a database with one additional data source and some initial data
    EphemeralFileSystemAbstraction fileSystem = new EphemeralFileSystemAbstraction();
    GraphDatabaseAPI db = (GraphDatabaseAPI) new TestGraphDatabaseFactory().setFileSystem(fileSystem).newImpermanentDatabase(storeDir);
    XaDataSourceManager xaDs = db.getXaDataSourceManager();
    XaDataSource additionalDs = new DummyXaDataSource("dummy", "dummy".getBytes(), new FakeXAResource("dummy"));
    xaDs.registerDataSource(additionalDs);
    Node node = createNodeWithOneRelationshipToIt(db);
    // WHEN
    // -- doing a transaction involving both data sources and fails in prepare phase
    // due to invalid transaction data
    deleteNodeButNotItsRelationshipsInATwoPhaseTransaction(db, additionalDs, node);
    db.shutdown();
    // THEN
    // -- the logical log should only contain unique start entries after this transaction
    filterNeostoreLogicalLog(fileSystem, new File(storeDir, LOGICAL_LOG_DEFAULT_NAME + ".v0"), new VerificationLogHook());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							StringLiteralExpr
						)
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							StringLiteralExpr
						)
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

