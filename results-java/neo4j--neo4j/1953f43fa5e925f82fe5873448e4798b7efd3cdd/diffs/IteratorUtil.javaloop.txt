/**
 * Convenience method for looping over an {@link Iterator}. Converts the
 * {@link Iterator} to an {@link Iterable} by wrapping it in an
 * {@link Iterable} that returns the {@link Iterator}. It breaks the
 * contract of {@link Iterable} in that it returns the supplied iterator
 * instance for each call to {@code iterator()} on the returned
 * {@link Iterable} instance. This method exists to make it easy to use an
 * {@link Iterator} in a for-loop.
 *
 * @param <T> the type of items in the iterator.
 * @param iterator the iterator to expose as an {@link Iterable}.
 * @return the supplied iterator posing as an {@link Iterable}.
 */
public static <T> Iterable<T> loop(final Iterator<T> iterator) {
    return new Iterable<T>() {

        public Iterator<T> iterator() {
            return iterator;
        }
    };
}||||||||/**
 * Convenience method for looping over an {@link Iterator}. Converts the
 * {@link Iterator} to an {@link Iterable} by wrapping it in an
 * {@link Iterable} that returns the {@link Iterator}. It breaks the
 * contract of {@link Iterable} in that it returns the supplied iterator
 * instance for each call to {@code iterator()} on the returned
 * {@link Iterable} instance. This method exists to make it easy to use an
 * {@link Iterator} in a for-loop.
 *
 * @param <T> the type of items in the iterator.
 * @param iterator the iterator to expose as an {@link Iterable}.
 * @return the supplied iterator posing as an {@link Iterable}.
 */
public static <T> Iterable<T> loop(final Iterator<T> iterator) {
    return new Iterable<T>() {

        @Override
        public Iterator<T> iterator() {
            return iterator;
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(TypeParameter
		SimpleName
	)
	(JavadocComment
	)
)

