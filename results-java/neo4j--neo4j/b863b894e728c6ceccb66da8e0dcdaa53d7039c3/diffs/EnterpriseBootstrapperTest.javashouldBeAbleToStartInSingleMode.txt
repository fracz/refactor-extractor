@Test
public void shouldBeAbleToStartInSingleMode() throws Exception {
    // When
    int resultCode = ServerBootstrapper.start(bootstrapper, "--home-dir", tempDir.newFolder("home-dir").getAbsolutePath(), "-c", configOption(EnterpriseServerSettings.mode, "SINGLE"), "-c", configOption(data_directory, getRelativePath(folder.getRoot(), data_directory)), "-c", configOption(logs_directory, tempDir.getRoot().getAbsolutePath()), "-c", configOption(certificates_directory, getRelativePath(folder.getRoot(), certificates_directory)), "-c", "dbms.connector.1.type=HTTP", "-c", "dbms.connector.1.enabled=true");
    // Then
    assertEquals(ServerBootstrapper.OK, resultCode);
    assertEventually("Server was not started", bootstrapper::isRunning, is(true), 1, TimeUnit.MINUTES);
}||||||||@Test
public void shouldBeAbleToStartInSingleMode() throws Exception {
    // When
    int resultCode = ServerBootstrapper.start(bootstrapper, "-c", configOption(EnterpriseServerSettings.mode, "SINGLE"), "-c", configOption(data_directory, getRelativePath(folder.getRoot(), data_directory)), "-c", configOption(logs_directory, tempDir.getRoot().getAbsolutePath()), "-c", configOption(certificates_directory, getRelativePath(folder.getRoot(), certificates_directory)), "-c", "dbms.connector.1.type=HTTP", "-c", "dbms.connector.1.enabled=true");
    // Then
    assertEquals(ServerBootstrapper.OK, resultCode);
    assertEventually("Server was not started", bootstrapper::isRunning, is(true), 1, TimeUnit.MINUTES);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						StringLiteralExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodReferenceExpr
					(TypeExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
				)
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
						)
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
							)
							SimpleName
						)
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(MethodReferenceExpr
					(TypeExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					SimpleName
				)
				(IntegerLiteralExpr
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

