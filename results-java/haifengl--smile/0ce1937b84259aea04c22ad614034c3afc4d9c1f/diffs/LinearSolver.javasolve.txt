/**
 * Solve A*x = b.
 * @param b   a vector with as many rows as A.
 * @param x   is output vector so that L*U*X = b(piv,:)
 * @return optional estimated error (e.g. biconjugate gradient algorithm).
 * @throws RuntimeException if matrix is singular.
 */
public double solve(double[] b, double[] x);||||||||/**
 * Solve A*x = b.
 * @param b   a vector with as many rows as A.
 * @param x   is output vector so that L*U*X = b(piv,:)
 * @throws RuntimeException if matrix is singular.
 */
public void solve(double[] b, double[] x);||||||||(MethodDeclaration
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)

