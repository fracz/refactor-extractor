FinderPatternInfo find() throws ReaderException {
    int maxI = image.getHeight();
    int maxJ = image.getWidth();
    // We are looking for black/white/black/white/black modules in
    // 1:1:3:1:1 ratio; this tracks the number of such modules seen so far
    int[] stateCount = new int[5];
    boolean done = false;
    // We can afford to examine every few lines until we've started finding
    // the patterns
    int iSkip = BIG_SKIP;
    for (int i = iSkip - 1; i < maxI && !done; i += iSkip) {
        // Get a row of black/white values
        BitArray blackRow = image.getBlackRow(i, null, 0, maxJ);
        stateCount[0] = 0;
        stateCount[1] = 0;
        stateCount[2] = 0;
        stateCount[3] = 0;
        stateCount[4] = 0;
        int currentState = 0;
        for (int j = 0; j < maxJ; j++) {
            if (blackRow.get(j)) {
                // Black pixel
                if ((currentState & 1) == 1) {
                    // Counting white pixels
                    currentState++;
                }
                stateCount[currentState]++;
            } else {
                // White pixel
                if ((currentState & 1) == 0) {
                    // Counting black pixels
                    if (currentState == 4) {
                        // A winner?
                        if (foundPatternCross(stateCount)) {
                            // Yes
                            boolean confirmed = handlePossibleCenter(stateCount, i, j);
                            if (confirmed) {
                                // Go back to examining each line
                                iSkip = 1;
                                if (hasSkipped) {
                                    done = haveMulitplyConfirmedCenters();
                                } else {
                                    int rowSkip = findRowSkip();
                                    if (rowSkip > stateCount[2]) {
                                        // Skip rows between row of lower confirmed center
                                        // and top of presumed third confirmed center
                                        // but back up a bit to get a full chance of detecting
                                        // it, entire width of center of finder pattern
                                        // Skip by rowSkip, but back off by stateCount[2] (size of last center
                                        // of pattern we saw) to be conservative, and also back off by iSkip which
                                        // is about to be re-added
                                        i += rowSkip - stateCount[2] - iSkip;
                                        j = maxJ - 1;
                                    }
                                }
                            } else {
                                // Advance to next black pixel
                                do {
                                    j++;
                                } while (j < maxJ && !blackRow.get(j));
                                // back up to that last white pixel
                                j--;
                            }
                            // Clear state to start looking again
                            currentState = 0;
                            stateCount[0] = 0;
                            stateCount[1] = 0;
                            stateCount[2] = 0;
                            stateCount[3] = 0;
                            stateCount[4] = 0;
                        } else {
                            // No, shift counts back by two
                            stateCount[0] = stateCount[2];
                            stateCount[1] = stateCount[3];
                            stateCount[2] = stateCount[4];
                            stateCount[3] = 1;
                            stateCount[4] = 0;
                            currentState = 3;
                        }
                    } else {
                        stateCount[++currentState]++;
                    }
                } else {
                    // Counting white pixels
                    stateCount[currentState]++;
                }
            }
        }
        if (foundPatternCross(stateCount)) {
            boolean confirmed = handlePossibleCenter(stateCount, i, maxJ);
            if (confirmed) {
                iSkip = stateCount[0];
                if (hasSkipped) {
                    // Found a third one
                    done = haveMulitplyConfirmedCenters();
                }
            }
        }
    }
    FinderPattern[] patternInfo = selectBestPatterns();
    patternInfo = orderBestPatterns(patternInfo);
    float totalModuleSize = 0.0f;
    for (int i = 0; i < patternInfo.length; i++) {
        totalModuleSize += patternInfo[i].getEstimatedModuleSize();
    }
    return new FinderPatternInfo(totalModuleSize / (float) patternInfo.length, patternInfo);
}||||||||FinderPatternInfo find() throws ReaderException {
    int maxI = image.getHeight();
    int maxJ = image.getWidth();
    // We are looking for black/white/black/white/black modules in
    // 1:1:3:1:1 ratio; this tracks the number of such modules seen so far
    int[] stateCount = new int[5];
    boolean done = false;
    // We can afford to examine every few lines until we've started finding
    // the patterns
    int iSkip = BIG_SKIP;
    for (int i = iSkip - 1; i < maxI && !done; i += iSkip) {
        // Get a row of black/white values
        BitArray blackRow = image.getBlackRow(i, null, 0, maxJ);
        stateCount[0] = 0;
        stateCount[1] = 0;
        stateCount[2] = 0;
        stateCount[3] = 0;
        stateCount[4] = 0;
        int currentState = 0;
        for (int j = 0; j < maxJ; j++) {
            if (blackRow.get(j)) {
                // Black pixel
                if ((currentState & 1) == 1) {
                    // Counting white pixels
                    currentState++;
                }
                stateCount[currentState]++;
            } else {
                // White pixel
                if ((currentState & 1) == 0) {
                    // Counting black pixels
                    if (currentState == 4) {
                        // A winner?
                        if (foundPatternCross(stateCount)) {
                            // Yes
                            boolean confirmed = handlePossibleCenter(stateCount, i, j);
                            if (confirmed) {
                                // Go back to examining each line
                                iSkip = 1;
                                if (hasSkipped) {
                                    done = haveMulitplyConfirmedCenters();
                                } else {
                                    int rowSkip = findRowSkip();
                                    if (rowSkip > stateCount[2]) {
                                        // Skip rows between row of lower confirmed center
                                        // and top of presumed third confirmed center
                                        // but back up a bit to get a full chance of detecting
                                        // it, entire width of center of finder pattern
                                        // Skip by rowSkip, but back off by stateCount[2] (size of last center
                                        // of pattern we saw) to be conservative, and also back off by iSkip which
                                        // is about to be re-added
                                        i += rowSkip - stateCount[2] - iSkip;
                                        j = maxJ - 1;
                                    }
                                }
                            } else {
                                // Advance to next black pixel
                                do {
                                    j++;
                                } while (j < maxJ && !blackRow.get(j));
                                // back up to that last white pixel
                                j--;
                            }
                            // Clear state to start looking again
                            currentState = 0;
                            stateCount[0] = 0;
                            stateCount[1] = 0;
                            stateCount[2] = 0;
                            stateCount[3] = 0;
                            stateCount[4] = 0;
                        } else {
                            // No, shift counts back by two
                            stateCount[0] = stateCount[2];
                            stateCount[1] = stateCount[3];
                            stateCount[2] = stateCount[4];
                            stateCount[3] = 1;
                            stateCount[4] = 0;
                            currentState = 3;
                        }
                    } else {
                        stateCount[++currentState]++;
                    }
                } else {
                    // Counting white pixels
                    stateCount[currentState]++;
                }
            }
        }
        if (foundPatternCross(stateCount)) {
            boolean confirmed = handlePossibleCenter(stateCount, i, maxJ);
            if (confirmed) {
                iSkip = stateCount[0];
                if (hasSkipped) {
                    // Found a third one
                    done = haveMulitplyConfirmedCenters();
                }
            }
        }
    }
    FinderPattern[] patternInfo = selectBestPatterns();
    patternInfo = orderBestPatterns(patternInfo);
    return new FinderPatternInfo(patternInfo);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(UnaryExpr
														(ArrayAccessExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
															LineComment
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
															LineComment
														)
														(IfStmt
															NameExpr
																SimpleName
															(BlockStmt
																(DoStmt
																	(BlockStmt
																		(ExpressionStmt
																			(UnaryExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BinaryExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(UnaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	LineComment
																)
																(ExpressionStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	LineComment
																)
																(IfStmt
																	NameExpr
																		SimpleName
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(BinaryExpr
																							(BinaryExpr
																								NameExpr
																									SimpleName
																								(ArrayAccessExpr
																									(IntegerLiteralExpr
																									)
																									NameExpr
																										SimpleName
																								)
																							)
																							NameExpr
																								SimpleName
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(BinaryExpr
																							NameExpr
																								SimpleName
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																				)
																			)
																		)
																	)
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															LineComment
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
													LineComment
												)
											)
											LineComment
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									LineComment
								)
								(ExpressionStmt
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(DoubleLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(CastExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(PrimitiveType
						)
					)
				)
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NullLiteralExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											LineComment
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ExpressionStmt
													(UnaryExpr
														(ArrayAccessExpr
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(IfStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
															LineComment
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																	SimpleName
																	(PrimitiveType
																	)
																)
															)
															LineComment
														)
														(IfStmt
															NameExpr
																SimpleName
															(BlockStmt
																(DoStmt
																	(BlockStmt
																		(ExpressionStmt
																			(UnaryExpr
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(BinaryExpr
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(UnaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	LineComment
																)
																(ExpressionStmt
																	(UnaryExpr
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																	LineComment
																)
																(IfStmt
																	NameExpr
																		SimpleName
																	(BlockStmt
																		(ExpressionStmt
																			(VariableDeclarationExpr
																				(VariableDeclarator
																					(MethodCallExpr
																						SimpleName
																					)
																					SimpleName
																					(PrimitiveType
																					)
																				)
																			)
																		)
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				(ArrayAccessExpr
																					(IntegerLiteralExpr
																					)
																					NameExpr
																						SimpleName
																				)
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(BinaryExpr
																							(BinaryExpr
																								NameExpr
																									SimpleName
																								(ArrayAccessExpr
																									(IntegerLiteralExpr
																									)
																									NameExpr
																										SimpleName
																								)
																							)
																							NameExpr
																								SimpleName
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(BinaryExpr
																							NameExpr
																								SimpleName
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																			)
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					SimpleName
																				)
																			)
																		)
																	)
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															LineComment
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
														(ExpressionStmt
															(AssignExpr
																(ArrayAccessExpr
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																(IntegerLiteralExpr
																)
															)
														)
													)
													LineComment
												)
											)
											LineComment
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(UnaryExpr
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
									LineComment
								)
								(ExpressionStmt
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
											LineComment
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

