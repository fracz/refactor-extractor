static String decode(byte[] bytes) throws ReaderException {
    BitSource bits = new BitSource(bytes);
    StringBuffer result = new StringBuffer();
    int mode = ASCII_ENCODE;
    do {
        if (mode != PAD_ENCODE) {
            if (mode == ASCII_ENCODE) {
                mode = decodeAsciiSegment(bits, result);
            } else if (mode == C40_ENCODE) {
                mode = decodeC40Segment(bits, result);
            } else if (mode == TEXT_ENCODE) {
                mode = decodeTextSegment(bits, result);
            } else if (mode == ANSIX12_ENCODE) {
                mode = decodeAnsiX12Segment(bits, result);
            } else if (mode == EDIFACT_ENCODE) {
                mode = decodeEdifactSegment(bits, result);
            } else if (mode == BASE256_ENCODE) {
                mode = decodeBase256Segment(bits, result);
            } else {
                throw new ReaderException("Unsupported mode indicator");
            }
        }
    } while (mode != PAD_ENCODE && bits.available() > 0);
    return result.toString();
}||||||||static String decode(byte[] bytes) throws ReaderException {
    BitSource bits = new BitSource(bytes);
    StringBuffer result = new StringBuffer();
    int mode = ASCII_ENCODE;
    do {
        if (mode == ASCII_ENCODE) {
            mode = decodeAsciiSegment(bits, result);
        } else {
            switch(mode) {
                case C40_ENCODE:
                    decodeC40Segment(bits, result);
                    break;
                case TEXT_ENCODE:
                    decodeTextSegment(bits, result);
                    break;
                case ANSIX12_ENCODE:
                    decodeAnsiX12Segment(bits, result);
                    break;
                case EDIFACT_ENCODE:
                    decodeEdifactSegment(bits, result);
                    break;
                case BASE256_ENCODE:
                    decodeBase256Segment(bits, result);
                    break;
                default:
                    throw new ReaderException("Unsupported mode indicator");
            }
            mode = ASCII_ENCODE;
        }
    } while (mode != PAD_ENCODE && bits.available() > 0);
    return result.toString();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(DoStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															StringLiteralExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(DoStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								NameExpr
									SimpleName
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ThrowStmt
									(ObjectCreationExpr
										StringLiteralExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

