/**
 * See ISO 16022:2006, 5.2.7
 */
private static int decodeAnsiX12Segment(BitSource bits, StringBuffer result) throws ReaderException {
    do {
        // If there is only one byte left then it will be encoded as ASCII
        if (bits.available() == 8) {
            return ASCII_ENCODE;
        }
        int firstByte = bits.readBits(8);
        if (firstByte == 254) {
            // Unlatch codeword
            return ASCII_ENCODE;
        }
        int fullBitValue = (firstByte << 8) + bits.readBits(8) - 1;
        int[] cValues = new int[3];
        cValues[0] = fullBitValue / 1600;
        fullBitValue -= cValues[0] * 1600;
        cValues[1] = fullBitValue / 40;
        fullBitValue -= cValues[1] * 40;
        cValues[2] = fullBitValue;
        for (int i = 0; i < 3; i++) {
            // TODO(bbrown): These really aren't X12 symbols, we are converting to ASCII chars
            int cValue = cValues[i];
            if (cValue == 0) {
                // X12 segment terminator <CR>
                result.append("<CR>");
            } else if (cValue == 1) {
                // X12 segment separator *
                result.append('*');
            } else if (cValue == 2) {
                // X12 sub-element separator >
                result.append('>');
            } else if (cValue == 3) {
                // space
                result.append(' ');
            } else if (cValue < 14) {
                // 0 - 9
                result.append((char) (cValue + 44));
            } else if (cValue < 40) {
                // A - Z
                result.append((char) (cValue + 51));
            } else {
                throw new ReaderException(Integer.toString(cValue) + " is not valid in the ANSI X12 set");
            }
        }
    } while (bits.available() > 0);
    return ASCII_ENCODE;
}||||||||/**
 * See ISO 16022:2006, 5.2.7
 */
private static void decodeAnsiX12Segment(BitSource bits, StringBuffer result) throws ReaderException {
    // Three ANSI X12 values are encoded in a 16-bit value as
    // (1600 * C1) + (40 * C2) + C3 + 1
    int[] cValues = new int[3];
    do {
        // If there is only one byte left then it will be encoded as ASCII
        if (bits.available() == 8) {
            return;
        }
        int firstByte = bits.readBits(8);
        if (firstByte == 254) {
            // Unlatch codeword
            return;
        }
        parseTwoBytes(firstByte, bits.readBits(8), cValues);
        for (int i = 0; i < 3; i++) {
            int cValue = cValues[i];
            if (cValue == 0) {
                // X12 segment terminator <CR>
                result.append('\r');
            } else if (cValue == 1) {
                // X12 segment separator *
                result.append('*');
            } else if (cValue == 2) {
                // X12 sub-element separator >
                result.append('>');
            } else if (cValue == 3) {
                // space
                result.append(' ');
            } else if (cValue < 14) {
                // 0 - 9
                result.append((char) (cValue + 44));
            } else if (cValue < 40) {
                // A - Z
                result.append((char) (cValue + 51));
            } else {
                throw new ReaderException(cValue + " is not valid in the ANSI X12 set");
            }
        }
    } while (bits.available() > 0);
}||||||||(MethodDeclaration
	(BlockStmt
		(DoStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
							LineComment
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayCreationExpr
								(PrimitiveType
								)
								(ArrayCreationLevel
									(IntegerLiteralExpr
									)
								)
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CastExpr
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
																(PrimitiveType
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(CharLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(CharLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(DoStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
						)
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CastExpr
																(EnclosedExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
																(PrimitiveType
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														LineComment
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CastExpr
															(EnclosedExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
															(PrimitiveType
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(CharLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(CharLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										LineComment
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(CharLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

