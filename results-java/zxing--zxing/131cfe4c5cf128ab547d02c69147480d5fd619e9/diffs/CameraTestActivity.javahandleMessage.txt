public void handleMessage(Message message) {
    switch(message.what) {
        case R.id.auto_focus:
            // Do not continuously auto focus
            break;
        case R.id.save_succeeded:
            {
                Toast.makeText(CameraTestActivity.this, R.string.save_succeeded, 500).show();
                break;
            }
        case R.id.save_failed:
            {
                Toast.makeText(CameraTestActivity.this, R.string.save_failed, 2000).show();
                break;
            }
    }
}||||||||@Override
public void handleMessage(Message message) {
    switch(message.what) {
        case R.id.auto_focus:
            // Do not continuously auto focus
            break;
        case R.id.save_succeeded:
            Toast.makeText(CameraTestActivity.this, R.string.save_succeeded, 500).show();
            break;
        case R.id.save_failed:
            Toast.makeText(CameraTestActivity.this, R.string.save_failed, 2000).show();
            break;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(ThisExpr
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BreakStmt
					LineComment
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(ThisExpr
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(ThisExpr
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

