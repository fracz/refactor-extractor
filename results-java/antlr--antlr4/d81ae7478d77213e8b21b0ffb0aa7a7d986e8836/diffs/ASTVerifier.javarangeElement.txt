// $ANTLR end "range"
// $ANTLR start "rangeElement"
// ASTVerifier.g:316:1: rangeElement : ( CHAR_LITERAL | STRING_LITERAL | RULE_REF | TOKEN_REF );
public final void rangeElement() throws RecognitionException {
    try {
        // ASTVerifier.g:317:5: ( CHAR_LITERAL | STRING_LITERAL | RULE_REF | TOKEN_REF )
        // ASTVerifier.g:
        {
            if ((input.LA(1) >= TOKEN_REF && input.LA(1) <= RULE_REF) || input.LA(1) == STRING_LITERAL || input.LA(1) == CHAR_LITERAL) {
                input.consume();
                state.errorRecovery = false;
            } else {
                MismatchedSetException mse = new MismatchedSetException(null, input);
                throw mse;
            }
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
    } finally {
    }
    return;
}||||||||// $ANTLR end "range"
// $ANTLR start "rangeElement"
// ASTVerifier.g:313:1: rangeElement : ( STRING_LITERAL | RULE_REF | TOKEN_REF );
public final void rangeElement() throws RecognitionException {
    try {
        // ASTVerifier.g:314:5: ( STRING_LITERAL | RULE_REF | TOKEN_REF )
        // ASTVerifier.g:
        {
            if ((input.LA(1) >= TOKEN_REF && input.LA(1) <= RULE_REF) || input.LA(1) == STRING_LITERAL) {
                input.consume();
                state.errorRecovery = false;
            } else {
                MismatchedSetException mse = new MismatchedSetException(null, input);
                throw mse;
            }
        }
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
    } finally {
    }
    return;
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
								)
								(BinaryExpr
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NullLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(BinaryExpr
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
							(BinaryExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(ObjectCreationExpr
											NullLiteralExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BooleanLiteralExpr
									)
								)
							)
						)
					)
					LineComment
				)
			)
		)
		(ReturnStmt
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

