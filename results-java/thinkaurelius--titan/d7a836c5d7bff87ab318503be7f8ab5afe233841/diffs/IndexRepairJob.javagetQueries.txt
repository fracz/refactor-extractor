@Override
public void getQueries(QueryContainer queries) {
    if (index instanceof RelationTypeIndex) {
        queries.addQuery().types(indexRelationTypeName).direction(Direction.OUT).relations();
    } else if (index instanceof TitanGraphIndex) {
        IndexType indexType = mgmt.getSchemaVertex(index).asIndexType();
        switch(indexType.getElement()) {
            case PROPERTY:
                addIndexSchemaConstraint(queries.addQuery(), indexType).properties();
                break;
            case VERTEX:
                queries.addQuery().properties();
                queries.addQuery().type(BaseLabel.VertexLabelEdge).direction(Direction.OUT).edges();
                break;
            case EDGE:
                indexType.hasSchemaTypeConstraint();
                addIndexSchemaConstraint(queries.addQuery().direction(Direction.OUT), indexType).edges();
                break;
            default:
                throw new AssertionError("Unexpected category: " + indexType.getElement());
        }
    } else
        throw new UnsupportedOperationException("Unsupported index found: " + index);
}||||||||@Override
public void getQueries(QueryContainer queries) {
    if (index instanceof RelationTypeIndex) {
        queries.addQuery().setName("data").types(indexRelationTypeName).direction(Direction.OUT).relations();
    } else if (index instanceof TitanGraphIndex) {
        IndexType indexType = mgmt.getSchemaVertex(index).asIndexType();
        switch(indexType.getElement()) {
            case PROPERTY:
                addIndexSchemaConstraint(queries.addQuery().setName("data"), indexType).properties();
                break;
            case VERTEX:
                queries.addQuery().setName("data").properties();
                queries.addQuery().setName("label").type(BaseLabel.VertexLabelEdge).direction(Direction.OUT).edges();
                break;
            case EDGE:
                indexType.hasSchemaTypeConstraint();
                addIndexSchemaConstraint(queries.addQuery().setName("data").direction(Direction.OUT), indexType).edges();
                break;
            default:
                throw new AssertionError("Unexpected category: " + indexType.getElement());
        }
    } else
        throw new UnsupportedOperationException("Unsupported index found: " + index);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BreakStmt
							)
						)
						(SwitchEntryStmt
							(ThrowStmt
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

