/**
 * This method attempts to generate Rid in the following three ways, in order,
 * returning the value produced by the first successful attempt in the sequence.
 *
 * <ol>
 * <li>
 * If {@code config} contains {@see GraphDatabaseConfiguration#INSTANCE_RID_RAW_KEY},
 * then read it as a String value.  Convert the String returned into a char[] and
 * call {@code org.apache.commons.codec.binary.Hex#decodeHex on the char[]}.  The
 * byte[] returned by {@code decodeHex} is then returned as Rid.
 * </li>
 * <li>
 * If {@code config} contains {@see GraphDatabaseConfiguration#INSTANCE_RID_SHORT_KEY},
 * then read it as a short value.  Call {@see java.net.InetAddress#getLocalHost()},
 * and on its return value call {@see java.net.InetAddress#getAddress()} to retrieve
 * the machine's IP address in byte[] form.  The returned Rid is a byte[] containing
 * the localhost address bytes in its lower indices and the short value in its
 * penultimate and final indices.
 * </li>
 * <li>
 * If both of the previous failed, then call
 * {@see java.lang.management.RuntimeMXBean#getName()} and then call
 * {@code String#getBytes()} on the returned value.  Return a Rid as described in the
 * previous point, replacing the short value with the byte[] representing the JVM name.
 * </li>
 * </ol>
 *
 * @param config commons config from which to read Rid-related keys
 * @return A byte array which should uniquely identify this machine
 */
public static byte[] getRid(Configuration config) {
    byte[] tentativeRid = null;
    if (config.containsKey(GraphDatabaseConfiguration.INSTANCE_RID_RAW_KEY)) {
        String ridText = config.getString(GraphDatabaseConfiguration.INSTANCE_RID_RAW_KEY);
        try {
            tentativeRid = Hex.decodeHex(ridText.toCharArray());
        } catch (DecoderException e) {
            throw new RuntimeException(e);
        }
        log.debug("Set rid from hex string: 0x{}" + ridText);
    } else {
        final byte[] endBytes;
        if (config.containsKey(GraphDatabaseConfiguration.INSTANCE_RID_SHORT_KEY)) {
            short s = config.getShort(GraphDatabaseConfiguration.INSTANCE_RID_SHORT_KEY);
            endBytes = new byte[2];
            endBytes[0] = (byte) ((s & 0x0000FF00) >> 8);
            endBytes[1] = (byte) (s & 0x000000FF);
        } else {
            endBytes = ManagementFactory.getRuntimeMXBean().getName().getBytes();
        }
        byte[] addrBytes;
        try {
            addrBytes = Inet4Address.getLocalHost().getAddress();
        } catch (UnknownHostException e) {
            throw new GraphStorageException(e);
        }
        tentativeRid = new byte[addrBytes.length + endBytes.length];
        System.arraycopy(addrBytes, 0, tentativeRid, 0, addrBytes.length);
        System.arraycopy(endBytes, 0, tentativeRid, addrBytes.length, endBytes.length);
        if (log.isDebugEnabled()) {
            log.debug("Set rid: 0x{}" + new String(Hex.encodeHex(tentativeRid)));
        }
    }
    return tentativeRid;
}||||||||/**
 * This method attempts to generate Rid in the following three ways, in order,
 * returning the value produced by the first successful attempt in the sequence.
 *
 * <ol>
 * <li>
 * If {@code config} contains {@see GraphDatabaseConfiguration#INSTANCE_RID_RAW_KEY},
 * then read it as a String value.  Convert the String returned into a char[] and
 * call {@code org.apache.commons.codec.binary.Hex#decodeHex on the char[]}.  The
 * byte[] returned by {@code decodeHex} is then returned as Rid.
 * </li>
 * <li>
 * If {@code config} contains {@see GraphDatabaseConfiguration#INSTANCE_RID_SHORT_KEY},
 * then read it as a short value.  Call {@see java.net.InetAddress#getLocalHost()},
 * and on its return value call {@see java.net.InetAddress#getAddress()} to retrieve
 * the machine's IP address in byte[] form.  The returned Rid is a byte[] containing
 * the localhost address bytes in its lower indices and the short value in its
 * penultimate and final indices.
 * </li>
 * <li>
 * If both of the previous failed, then call
 * {@see java.lang.management.RuntimeMXBean#getName()} and then call
 * {@code String#getBytes()} on the returned value.  Return a Rid as described in the
 * previous point, replacing the short value with the byte[] representing the JVM name.
 * </li>
 * </ol>
 *
 * @param config commons config from which to read Rid-related keys
 * @return A byte array which should uniquely identify this machine
 */
public static byte[] getRid(Configuration config) {
    byte[] tentativeRid = null;
    if (config.containsKey(GraphDatabaseConfiguration.INSTANCE_RID_RAW_KEY)) {
        String ridText = config.getString(GraphDatabaseConfiguration.INSTANCE_RID_RAW_KEY);
        try {
            tentativeRid = Hex.decodeHex(ridText.toCharArray());
        } catch (DecoderException e) {
            throw new RuntimeException(e);
        }
        log.debug("Set rid from hex string: 0x{}", ridText);
    } else {
        final byte[] endBytes;
        if (config.containsKey(GraphDatabaseConfiguration.INSTANCE_RID_SHORT_KEY)) {
            short s = config.getShort(GraphDatabaseConfiguration.INSTANCE_RID_SHORT_KEY);
            endBytes = new byte[2];
            endBytes[0] = (byte) ((s & 0x0000FF00) >> 8);
            endBytes[1] = (byte) (s & 0x000000FF);
        } else {
            endBytes = ManagementFactory.getRuntimeMXBean().getName().getBytes();
        }
        byte[] addrBytes;
        try {
            addrBytes = Inet4Address.getLocalHost().getAddress();
        } catch (UnknownHostException e) {
            throw new GraphStorageException(e);
        }
        tentativeRid = new byte[addrBytes.length + endBytes.length];
        System.arraycopy(addrBytes, 0, tentativeRid, 0, addrBytes.length);
        System.arraycopy(endBytes, 0, tentativeRid, addrBytes.length, endBytes.length);
        if (log.isDebugEnabled()) {
            log.debug("Set rid: 0x{}", new String(Hex.encodeHex(tentativeRid)));
        }
    }
    return tentativeRid;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayCreationLevel
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									(ObjectCreationExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									(PrimitiveType
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayCreationExpr
							(PrimitiveType
							)
							(ArrayCreationLevel
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								(ObjectCreationExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ThrowStmt
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

