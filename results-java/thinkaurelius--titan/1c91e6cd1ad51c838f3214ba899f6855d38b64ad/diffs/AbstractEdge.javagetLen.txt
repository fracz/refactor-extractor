@Override
public int getLen() {
    assert !type.isUnidirected(Direction.IN);
    return isUnidirected() ? 1 : 2;
}||||||||@Override
public int getLen() {
    assert !type.isUnidirected(Direction.IN);
    return type.isUnidirected(Direction.OUT) ? 1 : 2;
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(UnaryExpr
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(MethodCallExpr
					SimpleName
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(UnaryExpr
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
				(IntegerLiteralExpr
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

