@Override
public RecordIterator<ByteBuffer> getKeys(StoreTransaction txh) throws StorageException {
    if (storeManager.getPartitioner() != Partitioner.RANDOM)
        throw new PermanentStorageException("This operation is only allowed when random partitioner (md5 or murmur3) is used.");
    ;
    AllRowsQuery<ByteBuffer, ByteBuffer> allRowsQuery = keyspace.prepareQuery(columnFamily).getAllRows();
    Rows<ByteBuffer, ByteBuffer> result;
    try {
        /* Note: we need to fetch columns for each row as well to remove "range ghosts" */
        result = // pre-fetch that many rows at a time
        allRowsQuery.setRowLimit(storeManager.getPageSize()).setConcurrencyLevel(// one execution thread for fetching portion of rows
        1).setExceptionCallback(new ExceptionCallback() {

            private int retries = 0;

            @Override
            public boolean onException(ConnectionException e) {
                try {
                    // make 3 re-tries
                    return retries > 2;
                } finally {
                    retries++;
                }
            }
        }).execute().getResult();
    } catch (ConnectionException e) {
        throw new PermanentStorageException(e);
    }
    final Iterator<Row<ByteBuffer, ByteBuffer>> rows = Iterators.filter(result.iterator(), new KeyIterationPredicate());
    return new RecordIterator<ByteBuffer>() {

        @Override
        public boolean hasNext() throws StorageException {
            return rows.hasNext();
        }

        @Override
        public ByteBuffer next() throws StorageException {
            return rows.next().getKey();
        }

        @Override
        public void close() throws StorageException {
        // nothing to clean-up here
        }
    };
}||||||||@Override
public RecordIterator<StaticBuffer> getKeys(StoreTransaction txh) throws StorageException {
    if (storeManager.getPartitioner() != Partitioner.RANDOM)
        throw new PermanentStorageException("This operation is only allowed when random partitioner (md5 or murmur3) is used.");
    ;
    AllRowsQuery<ByteBuffer, ByteBuffer> allRowsQuery = keyspace.prepareQuery(columnFamily).getAllRows();
    Rows<ByteBuffer, ByteBuffer> result;
    try {
        /* Note: we need to fetch columns for each row as well to remove "range ghosts" */
        result = // pre-fetch that many rows at a time
        allRowsQuery.setRowLimit(storeManager.getPageSize()).setConcurrencyLevel(// one execution thread for fetching portion of rows
        1).setExceptionCallback(new ExceptionCallback() {

            private int retries = 0;

            @Override
            public boolean onException(ConnectionException e) {
                try {
                    // make 3 re-tries
                    return retries > 2;
                } finally {
                    retries++;
                }
            }
        }).execute().getResult();
    } catch (ConnectionException e) {
        throw new PermanentStorageException(e);
    }
    final Iterator<Row<ByteBuffer, ByteBuffer>> rows = Iterators.filter(result.iterator(), new KeyIterationPredicate());
    return new RecordIterator<StaticBuffer>() {

        @Override
        public boolean hasNext() throws StorageException {
            return rows.hasNext();
        }

        @Override
        public StaticBuffer next() throws StorageException {
            return new StaticByteBuffer(rows.next().getKey());
        }

        @Override
        public void close() throws StorageException {
        // nothing to clean-up here
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(EmptyStmt
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										(FieldDeclaration
											(VariableDeclarator
												(IntegerLiteralExpr
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										(MethodDeclaration
											(BlockStmt
												(TryStmt
													(BlockStmt
														(ExpressionStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ReturnStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															LineComment
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
											LineComment
										)
										SimpleName
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
											LineComment
										)
									)
								)
							)
						)
					)
					(BlockComment
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
					)
					(VoidType
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ThrowStmt
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(EmptyStmt
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									(ObjectCreationExpr
										(FieldDeclaration
											(VariableDeclarator
												(IntegerLiteralExpr
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										(MethodDeclaration
											(BlockStmt
												(TryStmt
													(BlockStmt
														(ExpressionStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ReturnStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															LineComment
														)
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										(IntegerLiteralExpr
											LineComment
										)
										SimpleName
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
											LineComment
										)
									)
								)
							)
						)
					)
					(BlockComment
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(PrimitiveType
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
					)
					(VoidType
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
					(MarkerAnnotationExpr
						Name
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

