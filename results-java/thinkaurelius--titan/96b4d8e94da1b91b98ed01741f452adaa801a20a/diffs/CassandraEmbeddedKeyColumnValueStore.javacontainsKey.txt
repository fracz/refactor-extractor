@Override
public boolean containsKey(ByteBuffer key, StoreTransaction txh) throws StorageException {
    QueryPath slicePath = new QueryPath(columnFamily);
    ReadCommand sliceCmd = new SliceFromReadCommand(// Keyspace name
    keyspace, // Row key
    key.duplicate(), // ColumnFamily
    slicePath, // Start column name (empty means begin at first result)
    ByteBufferUtil.EMPTY_BYTE_BUFFER, // End column name (empty means max out the count)
    ByteBufferUtil.EMPTY_BYTE_BUFFER, // Reverse results? (false=no)
    false, // Max count of Columns to return
    1);
    List<Row> rows = read(sliceCmd, getTx(txh).getReadConsistencyLevel().getDBConsistency());
    if (null == rows || 0 == rows.size())
        return false;
    /*
         * Find at least one live column
		 *
		 * Note that the rows list may contain arbitrarily many
		 * marked-for-delete elements. Therefore, we can't assume that we're
		 * dealing with a singleton even though we set the maximum column count
		 * to 1.
		 */
    for (Row r : rows) {
        if (null == r || null == r.cf)
            continue;
        if (r.cf.isMarkedForDelete())
            continue;
        for (IColumn ic : r.cf) if (!ic.isMarkedForDelete())
            return true;
    }
    return false;
}||||||||@Override
public boolean containsKey(StaticBuffer key, StoreTransaction txh) throws StorageException {
    QueryPath slicePath = new QueryPath(columnFamily);
    // TODO key.asByteBuffer() may entail an unnecessary buffer copy
    ReadCommand sliceCmd = new SliceFromReadCommand(// Keyspace name
    keyspace, // Row key
    key.asByteBuffer(), // ColumnFamily
    slicePath, // Start column name (empty means begin at first result)
    ByteBufferUtil.EMPTY_BYTE_BUFFER, // End column name (empty means max out the count)
    ByteBufferUtil.EMPTY_BYTE_BUFFER, // Reverse results? (false=no)
    false, // Max count of Columns to return
    1);
    List<Row> rows = read(sliceCmd, getTx(txh).getReadConsistencyLevel().getDBConsistency());
    if (null == rows || 0 == rows.size())
        return false;
    /*
         * Find at least one live column
		 *
		 * Note that the rows list may contain arbitrarily many
		 * marked-for-delete elements. Therefore, we can't assume that we're
		 * dealing with a singleton even though we set the maximum column count
		 * to 1.
		 */
    for (Row r : rows) {
        if (null == r || null == r.cf)
            continue;
        if (r.cf.isMarkedForDelete())
            continue;
        for (IColumn ic : r.cf) if (!ic.isMarkedForDelete())
            return true;
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						NameExpr
							SimpleName
							LineComment
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(BooleanLiteralExpr
							LineComment
						)
						(IntegerLiteralExpr
							LineComment
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NullLiteralExpr
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(IntegerLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NullLiteralExpr
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NullLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ContinueStmt
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ContinueStmt
					)
				)
				(ForeachStmt
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
							LineComment
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						NameExpr
							SimpleName
							LineComment
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
							LineComment
						)
						(BooleanLiteralExpr
							LineComment
						)
						(IntegerLiteralExpr
							LineComment
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NullLiteralExpr
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(IntegerLiteralExpr
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NullLiteralExpr
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NullLiteralExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ContinueStmt
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ContinueStmt
					)
				)
				(ForeachStmt
					(IfStmt
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockComment
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

