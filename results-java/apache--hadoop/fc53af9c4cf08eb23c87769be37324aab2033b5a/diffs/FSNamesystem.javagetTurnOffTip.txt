/**
 * A tip on how safe mode is to be turned off: manually or automatically.
 */
String getTurnOffTip() {
    if (!isOn())
        return "Safe mode is OFF.";
    // Manual OR low-resource safemode. (Admin intervention required)
    String leaveMsg = "It was turned on manually. ";
    if (areResourcesLow()) {
        leaveMsg = "Resources are low on NN. Please add or free up more " + "resources then turn off safe mode manually. NOTE:  If you turn off" + " safe mode before adding resources, " + "the NN will immediately return to safe mode. ";
    }
    if (isManual() || areResourcesLow()) {
        return leaveMsg + "Use \"hdfs dfsadmin -safemode leave\" to turn safe mode off.";
    }
    // Automatic safemode. System will come out of safemode automatically.
    leaveMsg = "Safe mode will be turned off automatically";
    int numLive = getNumLiveDataNodes();
    String msg = "";
    if (reached == 0) {
        if (blockSafe < blockThreshold) {
            msg += String.format("The reported blocks %d needs additional %d" + " blocks to reach the threshold %.4f of total blocks %d.\n", blockSafe, (blockThreshold - blockSafe) + 1, threshold, blockTotal);
        }
        if (numLive < datanodeThreshold) {
            msg += String.format("The number of live datanodes %d needs an additional %d live " + "datanodes to reach the minimum number %d.\n", numLive, (datanodeThreshold - numLive), datanodeThreshold);
        }
    } else {
        msg = String.format("The reported blocks %d has reached the threshold" + " %.4f of total blocks %d. ", blockSafe, threshold, blockTotal);
        msg += String.format("The number of live datanodes %d has reached " + "the minimum number %d. ", numLive, datanodeThreshold);
    }
    msg += leaveMsg;
    // threshold is not reached or manual or resources low
    if (reached == 0 || (isManual() && !areResourcesLow())) {
        return msg;
    }
    // extension period is in progress
    return msg + (reached + extension - now() > 0 ? " in " + (reached + extension - now()) / 1000 + " seconds." : " soon.");
}||||||||/**
 * A tip on how safe mode is to be turned off: manually or automatically.
 */
String getTurnOffTip() {
    if (!isOn()) {
        return "Safe mode is OFF.";
    }
    // Manual OR low-resource safemode. (Admin intervention required)
    String adminMsg = "It was turned on manually. ";
    if (areResourcesLow()) {
        adminMsg = "Resources are low on NN. Please add or free up more " + "resources then turn off safe mode manually. NOTE:  If you turn off" + " safe mode before adding resources, " + "the NN will immediately return to safe mode. ";
    }
    if (isManual() || areResourcesLow()) {
        return adminMsg + "Use \"hdfs dfsadmin -safemode leave\" to turn safe mode off.";
    }
    boolean thresholdsMet = true;
    int numLive = getNumLiveDataNodes();
    String msg = "";
    if (blockSafe < blockThreshold) {
        msg += String.format("The reported blocks %d needs additional %d" + " blocks to reach the threshold %.4f of total blocks %d.\n", blockSafe, (blockThreshold - blockSafe) + 1, threshold, blockTotal);
        thresholdsMet = false;
    } else {
        msg += String.format("The reported blocks %d has reached the threshold" + " %.4f of total blocks %d. ", blockSafe, threshold, blockTotal);
    }
    if (numLive < datanodeThreshold) {
        msg += String.format("The number of live datanodes %d needs an additional %d live " + "datanodes to reach the minimum number %d.\n", numLive, (datanodeThreshold - numLive), datanodeThreshold);
        thresholdsMet = false;
    } else {
        msg += String.format("The number of live datanodes %d has reached " + "the minimum number %d. ", numLive, datanodeThreshold);
    }
    msg += (reached > 0) ? "In safe mode extension. " : "";
    msg += "Safe mode will be turned off automatically ";
    if (!thresholdsMet) {
        msg += "once the thresholds have been reached.";
    } else if (reached + extension - now() > 0) {
        msg += ("in " + (reached + extension - now()) / 1000 + " seconds.");
    } else {
        msg += "soon.";
    }
    return msg;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(ReturnStmt
				StringLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				StringLiteralExpr
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									NameExpr
										SimpleName
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									NameExpr
										SimpleName
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(EnclosedExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ReturnStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(EnclosedExpr
					(ConditionalExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
								)
							)
							(IntegerLiteralExpr
							)
						)
						StringLiteralExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(BinaryExpr
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(IntegerLiteralExpr
									)
								)
							)
							StringLiteralExpr
						)
					)
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					StringLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					StringLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							NameExpr
								SimpleName
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ConditionalExpr
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
					)
					StringLiteralExpr
					StringLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				StringLiteralExpr
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
					)
					(IntegerLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
									)
									StringLiteralExpr
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

