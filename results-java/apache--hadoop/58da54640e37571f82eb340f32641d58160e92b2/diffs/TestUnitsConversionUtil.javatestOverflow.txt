@Test
public void testOverflow() {
    Long test = Long.valueOf(5 * 1000l * 1000l * 1000l * 1000l * 1000l);
    try {
        UnitsConversionUtil.convert("P", "p", test);
        Assert.fail("this operation should result in an overflow");
    } catch (IllegalArgumentException ie) {
        // do nothing
        ;
    }
    try {
        UnitsConversionUtil.convert("m", "p", Long.MAX_VALUE - 1);
        Assert.fail("this operation should result in an overflow");
    } catch (IllegalArgumentException ie) {
        // do nothing
        ;
    }
}||||||||@Test
public void testOverflow() {
    long test = 5 * 1000L * 1000L * 1000L * 1000L * 1000L;
    try {
        UnitsConversionUtil.convert("P", "p", test);
        Assert.fail("this operation should result in an overflow");
    } catch (IllegalArgumentException ie) {
        // do nothing
        ;
    }
    try {
        UnitsConversionUtil.convert("m", "p", Long.MAX_VALUE - 1);
        Assert.fail("this operation should result in an overflow");
    } catch (IllegalArgumentException ie) {
        // do nothing
        ;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(IntegerLiteralExpr
											)
											(LongLiteralExpr
											)
										)
										(LongLiteralExpr
										)
									)
									(LongLiteralExpr
									)
								)
								(LongLiteralExpr
								)
							)
							(LongLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(EmptyStmt
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(EmptyStmt
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(IntegerLiteralExpr
										)
										(LongLiteralExpr
										)
									)
									(LongLiteralExpr
									)
								)
								(LongLiteralExpr
								)
							)
							(LongLiteralExpr
							)
						)
						(LongLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(EmptyStmt
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(EmptyStmt
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

