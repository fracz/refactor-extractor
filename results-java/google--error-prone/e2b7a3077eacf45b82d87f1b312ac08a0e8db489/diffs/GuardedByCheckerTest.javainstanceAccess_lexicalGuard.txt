@Test
public void instanceAccess_lexicalGuard() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class InstanceAccess_LexicalGuard {", "  class Outer {", "    final Object lock = new Object();", "    class Inner {", "      @GuardedBy(\"lock\")", "      int x;", "      void m() {", "        synchronized (Outer.this.lock) {", "          this.x++;", "        }", "        // BUG: Diagnostic contains: Expected Outer.this.lock", "        this.x++;", "      }", "    }", "  }", "}"));
}||||||||@Test
public void instanceAccess_lexicalGuard() throws Exception {
    compilationHelper.assertCompileFailsWithMessages(compilationHelper.fileManager().forSourceLines("threadsafety/Test.java", "package threadsafety;", "import javax.annotation.concurrent.GuardedBy;", "class InstanceAccess_LexicalGuard {", "  class Outer {", "    final Object lock = new Object();", "    class Inner {", "      @GuardedBy(\"lock\")", "      int x;", "      void m() {", "        synchronized (Outer.this.lock) {", "          this.x++;", "        }", "        // BUG: Diagnostic contains:", "        // should be guarded by 'Outer.this.lock'", "        this.x++;", "      }", "    }", "  }", "}"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

