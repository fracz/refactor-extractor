@Test
public void leadingAndTrailingParam() throws Exception {
    compilationHelper.addSourceLines("Test.java", "package foo.bar;", "class Test {", "  // BUG: Diagnostic contains:", "  // static <V extends Object, U extends Object> Object doCast(U o, V v) { Object t = o; return t; }", "  static <V extends Object, T, U extends Object> T doCast(U o, V v) { T t = (T) o; return t; }", "}").doTest();
}||||||||@Test
public void leadingAndTrailingParam() throws Exception {
    compilationHelper.addSourceLines("Test.java", "package foo.bar;", "class Test {", "  // BUG: Diagnostic contains:", "  static <V extends Object, T, U extends Object> T doCast(U o, V v) { T t = (T) o; return t; }", "}").doTest();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

