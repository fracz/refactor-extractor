// Literals
/**
 * Note: A short literal appears as an int to the compiler, and the compiler can perform a
 * narrowing conversion on the literal to cast from int to short. For example, when assigning a
 * literal to a short variable, the literal does not transfer its own non-null type to the
 * variable. Instead, the variable receives the non-null type from the return value of the
 * conversion call.
 */
@Override
public TransferResult<NullnessValue, NullnessPropagationStore> visitValueLiteral(ValueLiteralNode node, TransferInput<NullnessValue, NullnessPropagationStore> before) {
    return update(before, node, NONNULL);
}||||||||// Literals
/**
 * Note: A short literal appears as an int to the compiler, and the compiler can perform a
 * narrowing conversion on the literal to cast from int to short. For example, when assigning a
 * literal to a short variable, the literal does not transfer its own non-null type to the
 * variable. Instead, the variable receives the non-null type from the return value of the
 * conversion call.
 */
@Override
public TransferResult<NullnessValue, NullnessPropagationStore> visitValueLiteral(ValueLiteralNode node, TransferInput<NullnessValue, NullnessPropagationStore> before) {
    return result(before, NONNULL);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

