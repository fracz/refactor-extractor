@Test
public void accessGranted() throws Exception {
    this.mockMvc.perform(get("/").with(userDeatilsService("user"))).andExpect(status().isOk()).andExpect(forwardedUrl("/WEB-INF/layouts/standardLayout.jsp"));
}||||||||@Test
public void accessGranted() throws Exception {
    this.mockMvc.perform(// 
    get("/").with(// 
    userDeatilsService("user"))).andExpect(// 
    status().isOk()).andExpect(forwardedUrl("/WEB-INF/layouts/standardLayout.jsp"));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							SimpleName
						)
						LineComment
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								LineComment
							)
							SimpleName
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								LineComment
							)
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

