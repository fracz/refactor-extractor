/**
 * Checks if any of the contained media type expressions match the given
 * request 'Content-Type' header and returns an instance that is guaranteed
 * to contain matching expressions only. The match is performed via
 * {@link MediaType#isCompatibleWith(MediaType)}.
 * @param request the current request
 * @return the same instance if there are no expressions;
 * or a new condition with matching expressions;
 * or {@code null} if no expressions match.
 */
@Override
public ProducesRequestCondition getMatchingCondition(HttpServletRequest request) {
    if (CorsUtils.isPreFlightRequest(request)) {
        return PRE_FLIGHT_MATCH;
    }
    if (isEmpty()) {
        return this;
    }
    Set<ProduceMediaTypeExpression> result = new LinkedHashSet<ProduceMediaTypeExpression>(expressions);
    for (Iterator<ProduceMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) {
        ProduceMediaTypeExpression expression = iterator.next();
        if (!expression.match(request)) {
            iterator.remove();
        }
    }
    if (!result.isEmpty()) {
        return new ProducesRequestCondition(result, this.contentNegotiationManager);
    }
    try {
        if (getAcceptedMediaTypes(request).contains(MediaType.ALL)) {
            return new ProducesRequestCondition();
        }
    } catch (HttpMediaTypeException ex) {
    // Ignore
    }
    return null;
}||||||||/**
 * Checks if any of the contained media type expressions match the given
 * request 'Content-Type' header and returns an instance that is guaranteed
 * to contain matching expressions only. The match is performed via
 * {@link MediaType#isCompatibleWith(MediaType)}.
 * @param request the current request
 * @return the same instance if there are no expressions;
 * or a new condition with matching expressions;
 * or {@code null} if no expressions match.
 */
@Override
public ProducesRequestCondition getMatchingCondition(HttpServletRequest request) {
    if (CorsUtils.isPreFlightRequest(request)) {
        return PRE_FLIGHT_MATCH;
    }
    if (isEmpty()) {
        return this;
    }
    List<MediaType> acceptedMediaTypes;
    try {
        acceptedMediaTypes = getAcceptedMediaTypes(request);
    } catch (HttpMediaTypeException ex) {
        return null;
    }
    Set<ProduceMediaTypeExpression> result = new LinkedHashSet<ProduceMediaTypeExpression>(expressions);
    for (Iterator<ProduceMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) {
        ProduceMediaTypeExpression expression = iterator.next();
        if (!expression.match(acceptedMediaTypes)) {
            iterator.remove();
        }
    }
    if (!result.isEmpty()) {
        return new ProducesRequestCondition(result, this.contentNegotiationManager);
    } else if (acceptedMediaTypes.contains(MediaType.ALL)) {
        return EMPTY_CONDITION;
    } else {
        return null;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ReturnStmt
						NullLiteralExpr
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ReturnStmt
						NullLiteralExpr
					)
				)
				(BlockStmt
					(ReturnStmt
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

