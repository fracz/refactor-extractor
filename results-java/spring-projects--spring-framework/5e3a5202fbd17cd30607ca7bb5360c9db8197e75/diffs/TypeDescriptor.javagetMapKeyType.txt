/**
 * If this type is a {@link Map} and its key type is parameterized, returns the map's key type.
 * If the Map's key type is not parameterized, returns null indicating the key type is not declared.
 * @return the Map key type, or <code>null</code> if this type is a Map but its key type is not parameterized.
 * @throws IllegalStateException if this type is not a java.util.Map.
 */
public TypeDescriptor getMapKeyType() {
    assertMap();
    return this.mapKeyType;
}||||||||/**
 * Returns the value of {@link TypeDescriptor#getType() getType()} for the {@link #getMapKeyTypeDescriptor() mapKeyTypeDescriptor}.
 * @deprecated in Spring 3.1 in favor of {@link #getMapKeyTypeDescriptor()}.
 * @throws IllegalStateException if this type is not a java.util.Map.
 */
@Deprecated
public Class<?> getMapKeyType() {
    return getMapKeyTypeDescriptor().getType();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				(ThisExpr
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(WildcardType
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

