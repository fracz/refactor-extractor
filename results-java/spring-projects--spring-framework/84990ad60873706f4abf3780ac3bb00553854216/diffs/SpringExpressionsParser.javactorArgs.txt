// $ANTLR start ctorArgs
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:234:1: ctorArgs : LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN ;
public final ctorArgs_return ctorArgs() throws RecognitionException {
    ctorArgs_return retval = new ctorArgs_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token LPAREN147 = null;
    Token COMMA149 = null;
    Token RPAREN151 = null;
    namedArgument_return namedArgument148 = null;
    namedArgument_return namedArgument150 = null;
    Object LPAREN147_tree = null;
    Object COMMA149_tree = null;
    Object RPAREN151_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:2: ( LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN )
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:4: LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN
        {
            root_0 = (Object) adaptor.nil();
            LPAREN147 = (Token) input.LT(1);
            match(input, LPAREN, FOLLOW_LPAREN_in_ctorArgs1512);
            if (failed)
                return retval;
            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:12: ( namedArgument ( COMMA namedArgument )* )?
            int alt35 = 2;
            int LA35_0 = input.LA(1);
            if ((LA35_0 == INTEGER_LITERAL || LA35_0 == LPAREN || (LA35_0 >= PLUS && LA35_0 <= MINUS) || LA35_0 == BANG || (LA35_0 >= POUND && LA35_0 <= DOLLAR) || (LA35_0 >= AT && LA35_0 <= LBRACKET) || LA35_0 == PROJECT || (LA35_0 >= SELECT && LA35_0 <= LAMBDA) || (LA35_0 >= LCURLY && LA35_0 <= FALSE) || (LA35_0 >= 94 && LA35_0 <= 95))) {
                alt35 = 1;
            }
            switch(alt35) {
                case 1:
                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:13: namedArgument ( COMMA namedArgument )*
                    {
                        pushFollow(FOLLOW_namedArgument_in_ctorArgs1516);
                        namedArgument148 = namedArgument();
                        _fsp--;
                        if (failed)
                            return retval;
                        if (backtracking == 0)
                            adaptor.addChild(root_0, namedArgument148.getTree());
                        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:27: ( COMMA namedArgument )*
                        loop34: do {
                            int alt34 = 2;
                            int LA34_0 = input.LA(1);
                            if ((LA34_0 == COMMA)) {
                                alt34 = 1;
                            }
                            switch(alt34) {
                                case 1:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:235:28: COMMA namedArgument
                                    {
                                        COMMA149 = (Token) input.LT(1);
                                        match(input, COMMA, FOLLOW_COMMA_in_ctorArgs1519);
                                        if (failed)
                                            return retval;
                                        pushFollow(FOLLOW_namedArgument_in_ctorArgs1522);
                                        namedArgument150 = namedArgument();
                                        _fsp--;
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0)
                                            adaptor.addChild(root_0, namedArgument150.getTree());
                                    }
                                    break;
                                default:
                                    break loop34;
                            }
                        } while (true);
                    }
                    break;
            }
            RPAREN151 = (Token) input.LT(1);
            match(input, RPAREN, FOLLOW_RPAREN_in_ctorArgs1528);
            if (failed)
                return retval;
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        // reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||// $ANTLR start ctorArgs
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:247:1: ctorArgs : LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN ;
public final ctorArgs_return ctorArgs() throws RecognitionException {
    ctorArgs_return retval = new ctorArgs_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token LPAREN149 = null;
    Token COMMA151 = null;
    Token RPAREN153 = null;
    namedArgument_return namedArgument150 = null;
    namedArgument_return namedArgument152 = null;
    Object LPAREN149_tree = null;
    Object COMMA151_tree = null;
    Object RPAREN153_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:2: ( LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN )
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:4: LPAREN ( namedArgument ( COMMA namedArgument )* )? RPAREN
        {
            root_0 = (Object) adaptor.nil();
            LPAREN149 = (Token) input.LT(1);
            match(input, LPAREN, FOLLOW_LPAREN_in_ctorArgs1539);
            if (failed)
                return retval;
            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:12: ( namedArgument ( COMMA namedArgument )* )?
            int alt36 = 2;
            int LA36_0 = input.LA(1);
            if ((LA36_0 == INTEGER_LITERAL || LA36_0 == LPAREN || (LA36_0 >= PLUS && LA36_0 <= MINUS) || LA36_0 == BANG || (LA36_0 >= POUND && LA36_0 <= DOLLAR) || (LA36_0 >= AT && LA36_0 <= LBRACKET) || LA36_0 == PROJECT || (LA36_0 >= SELECT && LA36_0 <= LAMBDA) || (LA36_0 >= LCURLY && LA36_0 <= FALSE) || (LA36_0 >= 94 && LA36_0 <= 95))) {
                alt36 = 1;
            }
            switch(alt36) {
                case 1:
                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:13: namedArgument ( COMMA namedArgument )*
                    {
                        pushFollow(FOLLOW_namedArgument_in_ctorArgs1543);
                        namedArgument150 = namedArgument();
                        _fsp--;
                        if (failed)
                            return retval;
                        if (backtracking == 0)
                            adaptor.addChild(root_0, namedArgument150.getTree());
                        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:27: ( COMMA namedArgument )*
                        loop35: do {
                            int alt35 = 2;
                            int LA35_0 = input.LA(1);
                            if ((LA35_0 == COMMA)) {
                                alt35 = 1;
                            }
                            switch(alt35) {
                                case 1:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:248:28: COMMA namedArgument
                                    {
                                        COMMA151 = (Token) input.LT(1);
                                        match(input, COMMA, FOLLOW_COMMA_in_ctorArgs1546);
                                        if (failed)
                                            return retval;
                                        pushFollow(FOLLOW_namedArgument_in_ctorArgs1549);
                                        namedArgument152 = namedArgument();
                                        _fsp--;
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0)
                                            adaptor.addChild(root_0, namedArgument152.getTree());
                                    }
                                    break;
                                default:
                                    break loop35;
                            }
                        } while (true);
                    }
                    break;
            }
            RPAREN153 = (Token) input.LT(1);
            match(input, RPAREN, FOLLOW_RPAREN_in_ctorArgs1555);
            if (failed)
                return retval;
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(LabeledStmt
									SimpleName
									(DoStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(IfStmt
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																)
															)
														)
														(ExpressionStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(BreakStmt
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
										(BooleanLiteralExpr
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
					)
					(IfStmt
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(EnclosedExpr
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(EnclosedExpr
														(BinaryExpr
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(EnclosedExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(ReturnStmt
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(LabeledStmt
									SimpleName
									(DoStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(IfStmt
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																)
															)
														)
														(ExpressionStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(BreakStmt
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
										(BooleanLiteralExpr
										)
									)
									LineComment
								)
								LineComment
							)
							(BreakStmt
							)
						)
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

