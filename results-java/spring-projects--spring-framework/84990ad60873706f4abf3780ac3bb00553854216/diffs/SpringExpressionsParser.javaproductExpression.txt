// $ANTLR start productExpression
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:86:1: productExpression : powerExpr ( ( STAR | DIV | MOD ) powerExpr )* ;
public final productExpression_return productExpression() throws RecognitionException {
    productExpression_return retval = new productExpression_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token STAR35 = null;
    Token DIV36 = null;
    Token MOD37 = null;
    powerExpr_return powerExpr34 = null;
    powerExpr_return powerExpr38 = null;
    Object STAR35_tree = null;
    Object DIV36_tree = null;
    Object MOD37_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:2: ( powerExpr ( ( STAR | DIV | MOD ) powerExpr )* )
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:4: powerExpr ( ( STAR | DIV | MOD ) powerExpr )*
        {
            root_0 = (Object) adaptor.nil();
            pushFollow(FOLLOW_powerExpr_in_productExpression421);
            powerExpr34 = powerExpr();
            _fsp--;
            if (failed)
                return retval;
            if (backtracking == 0)
                adaptor.addChild(root_0, powerExpr34.getTree());
            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:14: ( ( STAR | DIV | MOD ) powerExpr )*
            loop10: do {
                int alt10 = 2;
                int LA10_0 = input.LA(1);
                if (((LA10_0 >= STAR && LA10_0 <= MOD))) {
                    alt10 = 1;
                }
                switch(alt10) {
                    case 1:
                        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:15: ( STAR | DIV | MOD ) powerExpr
                        {
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:15: ( STAR | DIV | MOD )
                            int alt9 = 3;
                            switch(input.LA(1)) {
                                case STAR:
                                    {
                                        alt9 = 1;
                                    }
                                    break;
                                case DIV:
                                    {
                                        alt9 = 2;
                                    }
                                    break;
                                case MOD:
                                    {
                                        alt9 = 3;
                                    }
                                    break;
                                default:
                                    if (backtracking > 0) {
                                        failed = true;
                                        return retval;
                                    }
                                    NoViableAltException nvae = new NoViableAltException("87:15: ( STAR | DIV | MOD )", 9, 0, input);
                                    throw nvae;
                            }
                            switch(alt9) {
                                case 1:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:16: STAR
                                    {
                                        STAR35 = (Token) input.LT(1);
                                        match(input, STAR, FOLLOW_STAR_in_productExpression425);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            STAR35_tree = (Object) adaptor.create(STAR35);
                                            root_0 = (Object) adaptor.becomeRoot(STAR35_tree, root_0);
                                        }
                                    }
                                    break;
                                case 2:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:24: DIV
                                    {
                                        DIV36 = (Token) input.LT(1);
                                        match(input, DIV, FOLLOW_DIV_in_productExpression430);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            DIV36_tree = (Object) adaptor.create(DIV36);
                                            root_0 = (Object) adaptor.becomeRoot(DIV36_tree, root_0);
                                        }
                                    }
                                    break;
                                case 3:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:87:30: MOD
                                    {
                                        MOD37 = (Token) input.LT(1);
                                        match(input, MOD, FOLLOW_MOD_in_productExpression434);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            MOD37_tree = (Object) adaptor.create(MOD37);
                                            root_0 = (Object) adaptor.becomeRoot(MOD37_tree, root_0);
                                        }
                                    }
                                    break;
                            }
                            pushFollow(FOLLOW_powerExpr_in_productExpression438);
                            powerExpr38 = powerExpr();
                            _fsp--;
                            if (failed)
                                return retval;
                            if (backtracking == 0)
                                adaptor.addChild(root_0, powerExpr38.getTree());
                        }
                        break;
                    default:
                        break loop10;
                }
            } while (true);
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        // reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||// $ANTLR start productExpression
// /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:94:1: productExpression : powerExpr ( ( STAR | DIV | MOD ) powerExpr )* ;
public final productExpression_return productExpression() throws RecognitionException {
    productExpression_return retval = new productExpression_return();
    retval.start = input.LT(1);
    Object root_0 = null;
    Token STAR35 = null;
    Token DIV36 = null;
    Token MOD37 = null;
    powerExpr_return powerExpr34 = null;
    powerExpr_return powerExpr38 = null;
    Object STAR35_tree = null;
    Object DIV36_tree = null;
    Object MOD37_tree = null;
    try {
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:2: ( powerExpr ( ( STAR | DIV | MOD ) powerExpr )* )
        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:4: powerExpr ( ( STAR | DIV | MOD ) powerExpr )*
        {
            root_0 = (Object) adaptor.nil();
            pushFollow(FOLLOW_powerExpr_in_productExpression432);
            powerExpr34 = powerExpr();
            _fsp--;
            if (failed)
                return retval;
            if (backtracking == 0)
                adaptor.addChild(root_0, powerExpr34.getTree());
            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:14: ( ( STAR | DIV | MOD ) powerExpr )*
            loop10: do {
                int alt10 = 2;
                int LA10_0 = input.LA(1);
                if (((LA10_0 >= STAR && LA10_0 <= MOD))) {
                    alt10 = 1;
                }
                switch(alt10) {
                    case 1:
                        // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:15: ( STAR | DIV | MOD ) powerExpr
                        {
                            // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:15: ( STAR | DIV | MOD )
                            int alt9 = 3;
                            switch(input.LA(1)) {
                                case STAR:
                                    {
                                        alt9 = 1;
                                    }
                                    break;
                                case DIV:
                                    {
                                        alt9 = 2;
                                    }
                                    break;
                                case MOD:
                                    {
                                        alt9 = 3;
                                    }
                                    break;
                                default:
                                    if (backtracking > 0) {
                                        failed = true;
                                        return retval;
                                    }
                                    NoViableAltException nvae = new NoViableAltException("95:15: ( STAR | DIV | MOD )", 9, 0, input);
                                    throw nvae;
                            }
                            switch(alt9) {
                                case 1:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:16: STAR
                                    {
                                        STAR35 = (Token) input.LT(1);
                                        match(input, STAR, FOLLOW_STAR_in_productExpression436);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            STAR35_tree = (Object) adaptor.create(STAR35);
                                            root_0 = (Object) adaptor.becomeRoot(STAR35_tree, root_0);
                                        }
                                    }
                                    break;
                                case 2:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:24: DIV
                                    {
                                        DIV36 = (Token) input.LT(1);
                                        match(input, DIV, FOLLOW_DIV_in_productExpression441);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            DIV36_tree = (Object) adaptor.create(DIV36);
                                            root_0 = (Object) adaptor.becomeRoot(DIV36_tree, root_0);
                                        }
                                    }
                                    break;
                                case 3:
                                    // /Users/aclement/el2/spring-framework/trunk/org.springframework.expression/src/main/java/org/springframework/expression/spel/generated/SpringExpressions.g:95:30: MOD
                                    {
                                        MOD37 = (Token) input.LT(1);
                                        match(input, MOD, FOLLOW_MOD_in_productExpression445);
                                        if (failed)
                                            return retval;
                                        if (backtracking == 0) {
                                            MOD37_tree = (Object) adaptor.create(MOD37);
                                            root_0 = (Object) adaptor.becomeRoot(MOD37_tree, root_0);
                                        }
                                    }
                                    break;
                            }
                            pushFollow(FOLLOW_powerExpr_in_productExpression449);
                            powerExpr38 = powerExpr();
                            _fsp--;
                            if (failed)
                                return retval;
                            if (backtracking == 0)
                                adaptor.addChild(root_0, powerExpr38.getTree());
                        }
                        break;
                    default:
                        break loop10;
                }
            } while (true);
        }
        retval.stop = input.LT(-1);
        if (backtracking == 0) {
            retval.tree = (Object) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        }
    } catch (RecognitionException e) {
        reportError(e);
        throw e;
    } finally {
    }
    return retval;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						NameExpr
							SimpleName
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(LabeledStmt
						SimpleName
						(DoStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												LineComment
											)
											(SwitchStmt
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																)
															)
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(ObjectCreationExpr
																	StringLiteralExpr
																	(IntegerLiteralExpr
																	)
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												NameExpr
													SimpleName
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(ExpressionStmt
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(BreakStmt
											SimpleName
										)
									)
									NameExpr
										SimpleName
								)
							)
							(BooleanLiteralExpr
							)
						)
						LineComment
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ThrowStmt
						NameExpr
							SimpleName
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
			)
			(BlockStmt
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(CastExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(LabeledStmt
						SimpleName
						(DoStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(EnclosedExpr
										(EnclosedExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
												LineComment
											)
											(SwitchStmt
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BooleanLiteralExpr
																	)
																)
															)
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(ObjectCreationExpr
																	StringLiteralExpr
																	(IntegerLiteralExpr
																	)
																	(IntegerLiteralExpr
																	)
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(ThrowStmt
														NameExpr
															SimpleName
													)
												)
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(CastExpr
																	(MethodCallExpr
																		(IntegerLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														(IfStmt
															NameExpr
																SimpleName
															(ReturnStmt
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(CastExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
														)
														LineComment
													)
													(BreakStmt
													)
												)
												NameExpr
													SimpleName
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(ExpressionStmt
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(ReturnStmt
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											LineComment
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(BreakStmt
											SimpleName
										)
									)
									NameExpr
										SimpleName
								)
							)
							(BooleanLiteralExpr
							)
						)
						LineComment
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(CastExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

