/**
 * Cache content for the given number of seconds. Default is -1,
 * indicating no generation of cache-related headers.
 * <p>Only if this is set to 0 (no cache) or a positive value (cache for
 * this many seconds) will this class generate cache headers.
 * <p>The headers can be overwritten by subclasses, before content is generated.
 */
public final void setCacheSeconds(int seconds) {
    this.cacheSeconds = seconds;
}||||||||/**
 * Cache content for the given number of seconds, by writing
 * cache-related HTTP headers to the response:
 * <ul>
 * <li>seconds == -1 (default value): no generation cache-related headers</li>
 * <li>seconds == 0: "Cache-Control: no-store" will prevent caching</li>
 * <li>seconds > 0: "Cache-Control: max-age=seconds" will ask to cache content</li>
 * </ul>
 * <p>For more specific needs, a custom {@link org.springframework.http.CacheControl} should be used.
 *
 * @see #setCacheControl
 */
public final void setCacheSeconds(int seconds) {
    this.cacheSeconds = seconds;
    if (!this.usePreviousHttpCachingBehavior) {
        if (cacheSeconds > 0) {
            this.cacheControl = CacheControl.maxAge(seconds, TimeUnit.SECONDS);
        } else if (cacheSeconds == 0) {
            this.cacheControl = CacheControl.noStore();
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										(ThisExpr
										)
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

