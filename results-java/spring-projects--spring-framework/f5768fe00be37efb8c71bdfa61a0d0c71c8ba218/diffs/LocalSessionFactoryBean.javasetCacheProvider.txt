/**
 * Set the Hibernate CacheProvider to use for the SessionFactory.
 * Allows for using a Spring-managed CacheProvider instance.
 * <p>Note: If this is set, the Hibernate settings should not define a
 * cache provider to avoid meaningless double configuration.
 * @deprecated as of Spring 3.0, following Hibernate 3.3's deprecation
 * of the CacheProvider SPI
 * @see #setCacheRegionFactory
 */
@Deprecated
public void setCacheProvider(CacheProvider cacheProvider) {
    this.cacheProvider = cacheProvider;
}||||||||@Deprecated
public void setCacheProvider(org.hibernate.cache.CacheProvider cacheProvider) {
    delegate.setCacheProvider(cacheProvider);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

