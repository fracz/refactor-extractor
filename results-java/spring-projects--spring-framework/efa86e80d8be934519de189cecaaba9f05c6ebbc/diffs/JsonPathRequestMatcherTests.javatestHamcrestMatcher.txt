@Test
public void testHamcrestMatcher() throws Exception {
    this.mockServer.expect(requestTo("/composers")).andExpect(content().contentType("application/json;charset=UTF-8")).andExpect(jsonPath("$.composers[0].name", startsWith("Johann"))).andExpect(jsonPath("$.performers[0].name", endsWith("Ashkenazy"))).andExpect(jsonPath("$.performers[1].name", containsString("di Me"))).andExpect(jsonPath("$.composers[1].name", isIn(Arrays.asList("Johann Sebastian Bach", "Johannes Brahms")))).andRespond(withSuccess());
    this.restTemplate.put(new URI("/composers"), this.people);
    this.mockServer.verify();
}||||||||@Test
public void testHamcrestMatcher() throws Exception {
    this.mockServer.expect(requestTo("/composers")).andExpect(content().contentType("application/json;charset=UTF-8")).andExpect(jsonPath("$.composers[0].name", startsWith("Johann"))).andExpect(jsonPath("$.performers[0].name", endsWith("Ashkenazy"))).andExpect(jsonPath("$.performers[1].name", containsString("di Me"))).andExpect(jsonPath("$.composers[1].name", isIn(Arrays.asList("Johann Sebastian Bach", "Johannes Brahms")))).andExpect(jsonPath("$.composers[:3].name", hasItem("Johannes Brahms"))).andRespond(withSuccess());
    this.restTemplate.put(new URI("/composers"), this.people);
    this.mockServer.verify();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
						SimpleName
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
								)
								SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
									SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											(ThisExpr
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						StringLiteralExpr
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
					(MethodCallExpr
						(MethodCallExpr
							StringLiteralExpr
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								StringLiteralExpr
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
								)
								SimpleName
							)
							SimpleName
							(MethodCallExpr
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
									SimpleName
								)
								SimpleName
								(MethodCallExpr
									(MethodCallExpr
										StringLiteralExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
										SimpleName
									)
									SimpleName
									(MethodCallExpr
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
										SimpleName
										(MethodCallExpr
											(MethodCallExpr
												StringLiteralExpr
												SimpleName
											)
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

