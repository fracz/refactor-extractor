/**
 * Match this pattern to the given URI path and return extracted URI template
 * variables as well as path parameters (matrix variables).
 * @param pathContainer the candidate path to attempt to match against
 * @return info object with the extracted variables
 * @throws IllegalStateException if the path does not match the pattern
 */
public PathMatchInfo matchAndExtract(PathContainer pathContainer) {
    MatchingContext matchingContext = new MatchingContext(pathContainer, true);
    if (this.head != null && this.head.matches(0, matchingContext)) {
        return matchingContext.getPathMatchResult();
    } else if (!hasLength(pathContainer)) {
        return PathMatchInfo.EMPTY;
    } else {
        throw new IllegalStateException("Pattern \"" + this + "\" is not a match for \"" + pathContainer.value() + "\"");
    }
}||||||||/**
 * Match this pattern to the given URI path and return extracted URI template
 * variables as well as path parameters (matrix variables).
 * @param pathContainer the candidate path to attempt to match against
 * @return info object with the extracted variables, or {@code null} for no match
 */
@Nullable
public PathMatchInfo matchAndExtract(PathContainer pathContainer) {
    if (this.head == null) {
        return hasLength(pathContainer) ? null : PathMatchInfo.EMPTY;
    } else if (!hasLength(pathContainer)) {
        if (this.head instanceof WildcardTheRestPathElement || this.head instanceof CaptureTheRestPathElement) {
            // Will allow CaptureTheRest to bind the variable to empty
            pathContainer = EMPTY_PATH;
        } else {
            return null;
        }
    }
    MatchingContext matchingContext = new MatchingContext(pathContainer, true);
    return this.head.matches(0, matchingContext) ? matchingContext.getPathMatchResult() : null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					NullLiteralExpr
				)
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
			)
			(IfStmt
				(UnaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(ThisExpr
											)
										)
										StringLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								StringLiteralExpr
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NullLiteralExpr
			)
			(IfStmt
				(UnaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(InstanceOfExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(InstanceOfExpr
								(FieldAccessExpr
									SimpleName
									(ThisExpr
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(ConditionalExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(MethodCallExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
				NullLiteralExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

