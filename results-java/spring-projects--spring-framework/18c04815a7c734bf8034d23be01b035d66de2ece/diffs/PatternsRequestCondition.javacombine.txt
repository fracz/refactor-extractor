/**
 * Returns a new instance with URL patterns from the current instance ("this") and
 * the "other" instance as follows:
 * <ul>
 * <li>If there are patterns in both instances, combine the patterns in "this" with
 * the patterns in "other" using {@link PathMatcher#combine(String, String)}.
 * <li>If only one instance has patterns, use them.
 * <li>If neither instance has patterns, use an empty String (i.e. "").
 * </ul>
 */
@Override
public PatternsRequestCondition combine(PatternsRequestCondition other) {
    Set<String> result = new LinkedHashSet<>();
    if (!this.patterns.isEmpty() && !other.patterns.isEmpty()) {
        for (String pattern1 : this.patterns) {
            for (String pattern2 : other.patterns) {
                result.add(this.pathMatcher.combine(pattern1, pattern2));
            }
        }
    } else if (!this.patterns.isEmpty()) {
        result.addAll(this.patterns);
    } else if (!other.patterns.isEmpty()) {
        result.addAll(other.patterns);
    } else {
        result.add("");
    }
    return new PatternsRequestCondition(result, this.pathHelper, this.pathMatcher, this.useSuffixPatternMatch, this.useTrailingSlashMatch, this.fileExtensions);
}||||||||/**
 * Returns a new instance with URL patterns from the current instance ("this") and
 * the "other" instance as follows:
 * <ul>
 * <li>If there are patterns in both instances, combine the patterns in "this" with
 * the patterns in "other" using {@link PathMatcher#combine(String, String)}.
 * <li>If only one instance has patterns, use them.
 * <li>If neither instance has patterns, use an empty String (i.e. "").
 * </ul>
 */
@Override
public PatternsRequestCondition combine(PatternsRequestCondition other) {
    return new PatternsRequestCondition(this.patternRegistry.combine(other.patternRegistry), this.pathHelper);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(IfStmt
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								(ThisExpr
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ForeachStmt
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						(ThisExpr
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

