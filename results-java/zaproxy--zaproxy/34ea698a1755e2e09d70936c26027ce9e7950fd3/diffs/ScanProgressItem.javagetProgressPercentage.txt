/**
 * Get back the percentage of completion.
 * Currently this is a fake percentage which set 50%
 * when the plugin begins and 100% when finished...
 * Should be improved using HostProcess informations regarding
 * the overall nodes that need to be scanned and the current
 * executions done...
 * @return the percentage value from 0 to 100
 */
public int getProgressPercentage() {
    // Implemented using node counts...
    if (isRunning()) {
        return (int) ((hProcess.getTestCurrentCount(plugin) * 100) / hProcess.getTestTotalCount());
    } else if (isCompleted()) {
        return 100;
    } else {
        return 0;
    }
}||||||||/**
 * Get back the percentage of completion.
 *
 * @return the percentage value from 0 to 100
 */
public int getProgressPercentage() {
    // Implemented using node counts...
    if (isRunning()) {
        int progress = (hProcess.getTestCurrentCount(plugin) * 100) / hProcess.getTestTotalCount();
        // That might happen if more nodes are being scanned that the ones enumerated at the beginning.
        return progress >= 100 ? 99 : progress;
    } else if (isCompleted()) {
        return 100;
    } else {
        return 0;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(CastExpr
						(EnclosedExpr
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(IfStmt
				(MethodCallExpr
					SimpleName
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ReturnStmt
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					LineComment
				)
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

