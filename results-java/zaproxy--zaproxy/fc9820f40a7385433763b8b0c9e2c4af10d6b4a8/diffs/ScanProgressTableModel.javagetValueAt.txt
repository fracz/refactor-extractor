@Override
public Object getValueAt(int row, int col) {
    Object[] value = this.values.get(row);
    return value[col];
}||||||||/**
 * @param row
 * @param col
 * @return
 */
@Override
public Object getValueAt(int row, int col) {
    // First check if we're showing the plugin status list
    if (row < values.size()) {
        // It's an entry so show the correct values
        final ScanProgressItem item = values.get(row);
        switch(col) {
            case 0:
                return item.getNameLabel();
            case 1:
                return item.getAttackStrenghtLabel();
            case 2:
                if (item.isCompleted() || item.isRunning() || item.isSkipped()) {
                    return item;
                } else {
                    return null;
                }
            case 3:
                return getElapsedTimeLabel(item.getElapsedTime());
            case 4:
                ScanProgressActionIcon action = null;
                if (item.isCompleted() || item.isRunning() || item.isSkipped()) {
                    if (row < actions.size()) {
                        action = actions.get(row);
                        action.updateStatus(item);
                    } else {
                        action = new ScanProgressActionIcon(item);
                        actions.add(action);
                    }
                }
                return action;
            default:
                return null;
        }
    // We're in the summary "region", first print an empty
    // line and then two line of summary (tot time and to requests)
    // Maybe could be done in a better way, for example using
    // a dedicated panel positioned on top/bottom of the dialog
    } else if (row == values.size()) {
        // The first line after values should be empty
        return null;
    } else if (row == (values.size() + 1)) {
        // The second line after values should contains the total elapsed time
        switch(col) {
            case 0:
                return Constant.messages.getString("ascan.progress.label.totalTime");
            case 1:
                return totTime;
            default:
                return null;
        }
    } else {
        // Probably we're at the last line so we print out the total requests
        switch(col) {
            case 0:
                return Constant.messages.getString("ascan.progress.label.totalTime");
            case 1:
                return totRequests;
            default:
                return null;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							(ThisExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ArrayAccessExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ReturnStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(ReturnStmt
									NullLiteralExpr
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ReturnStmt
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(ReturnStmt
									NullLiteralExpr
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						NullLiteralExpr
						LineComment
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ReturnStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									NullLiteralExpr
								)
							)
							(BlockStmt
								(ReturnStmt
									NameExpr
										SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ReturnStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NullLiteralExpr
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(ObjectCreationExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
					(SwitchEntryStmt
						(ReturnStmt
							NullLiteralExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

