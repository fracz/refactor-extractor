@Override
public void setSelectedItem(Object anItem) {
    // No item is selected and object is null, so no change required.
    if (selectedItem == null && anItem == null)
        return;
    // Wrong class element selected
    if (!(anItem instanceof User))
        return;
    // object is already selected so no change required.
    if (selectedItem != null && selectedItem.equals(anItem))
        return;
    // Simply return if object is not in the list.
    if (anItem != null && getIndexOf(anItem) == -1)
        return;
    // Here we know that object is either an item in the list or null.
    selectedItem = (User) anItem;
    fireContentsChanged(this, -1, -1);
}||||||||@Override
public void setSelectedItem(Object anItem) {
    if (anItem == null) {
        if (selectedItem == null) {
            // No item is selected and object is null, so no change required.
            return;
        }
        // Item selected and object is null, just remove selection.
        setSelectedItemImpl(null);
        return;
    }
    // Wrong class element selected
    if (!(anItem instanceof User))
        return;
    // object is already selected so no change required.
    if (selectedItem != null && selectedItem.equals(anItem))
        return;
    // Simply return if object is not in the list.
    if (getIndexOf(anItem) == -1)
        return;
    // Here we know that object is an item in the list.
    setSelectedItemImpl((User) anItem);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(EnclosedExpr
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BinaryExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(UnaryExpr
						(IntegerLiteralExpr
						)
					)
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						SimpleName
					)
					LineComment
				)
				(ReturnStmt
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(EnclosedExpr
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(CastExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

