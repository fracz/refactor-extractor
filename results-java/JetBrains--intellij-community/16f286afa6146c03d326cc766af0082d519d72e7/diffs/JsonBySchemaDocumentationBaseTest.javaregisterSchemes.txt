@Override
public void registerSchemes() {
    final String moduleDir = getModuleDir(getProject());
    final ArrayList<JsonSchemaMappingsConfigurationBase.Item> patterns = new ArrayList<>();
    patterns.add(new JsonSchemaMappingsConfigurationBase.Item(getTestName(true) + "*", true, false));
    addSchema(new JsonSchemaMappingsConfigurationBase.SchemaInfo("testDoc", moduleDir + "/" + getTestName(true) + "Schema.json", false, patterns));
}||||||||@Override
public void registerSchemes() {
    final String moduleDir = getModuleDir(getProject());
    final ArrayList<UserDefinedJsonSchemaConfiguration.Item> patterns = new ArrayList<>();
    patterns.add(new UserDefinedJsonSchemaConfiguration.Item(getTestName(true) + "*", true, false));
    addSchema(new UserDefinedJsonSchemaConfiguration("testDoc", moduleDir + "/" + getTestName(true) + "Schema.json", false, patterns));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(BinaryExpr
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
						)
						StringLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						StringLiteralExpr
					)
					(BooleanLiteralExpr
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(BinaryExpr
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
						)
						StringLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					StringLiteralExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
						StringLiteralExpr
					)
					(BooleanLiteralExpr
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

