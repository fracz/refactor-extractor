static void execute(final int replaceFieldsWithGetters, final boolean removeUnusedParameters, final boolean declareFinal, final String conflicts, final boolean generateDelegate, final Project project, final Editor editor, final PsiFile file) {
    CommandProcessor.getInstance().executeCommand(project, new Runnable() {

        @Override
        public void run() {
            ApplicationManager.getApplication().runWriteAction(new Runnable() {

                @Override
                public void run() {
                    try {
                        final GrIntroduceParameterHandler hackedHandler = new GrIntroduceParameterHandler() {

                            @Override
                            protected void showDialog(final GrIntroduceParameterContext context) {
                                final GrIntroduceParameterSettings hackedSettings = getSettings(context, removeUnusedParameters, replaceFieldsWithGetters, declareFinal, generateDelegate);
                                BaseRefactoringProcessor processor;
                                if (context.toReplaceIn instanceof GrMethod) {
                                    processor = new GrIntroduceParameterProcessor(hackedSettings, context);
                                } else {
                                    processor = new GrIntroduceClosureParameterProcessor(hackedSettings, context);
                                }
                                processor.run();
                            }
                        };
                        hackedHandler.invoke(project, editor, file, null);
                        if (conflicts != null)
                            fail("Conflicts were expected");
                    } catch (Exception e) {
                        if (conflicts == null) {
                            e.printStackTrace();
                            fail("Conflicts were not expected");
                        }
                        assertEquals(conflicts, e.getMessage());
                    }
                }
            });
        }
    }, "introduce Parameter", null);
}||||||||static void execute(final int replaceFieldsWithGetters, final boolean removeUnusedParameters, final boolean declareFinal, final String conflicts, final boolean generateDelegate, final Project project, final Editor editor, final PsiFile file) {
    CommandProcessor.getInstance().executeCommand(project, new Runnable() {

        @Override
        public void run() {
            ApplicationManager.getApplication().runWriteAction(new Runnable() {

                @Override
                public void run() {
                    try {
                        final GrIntroduceParameterHandler hackedHandler = new GrIntroduceParameterHandler() {

                            @Override
                            protected void showDialog(final GrIntroduceParameterContext context) {
                                final GrIntroduceParameterSettings hackedSettings = getSettings(context, removeUnusedParameters, replaceFieldsWithGetters, declareFinal, generateDelegate);
                                BaseRefactoringProcessor processor;
                                if (context.getToReplaceIn() instanceof GrMethod) {
                                    processor = new GrIntroduceParameterProcessor(hackedSettings, context);
                                } else {
                                    processor = new GrIntroduceClosureParameterProcessor(hackedSettings, context);
                                }
                                processor.run();
                            }
                        };
                        hackedHandler.invoke(project, editor, file, null);
                        if (conflicts != null)
                            fail("Conflicts were expected");
                    } catch (Exception e) {
                        if (conflicts == null) {
                            e.printStackTrace();
                            fail("Conflicts were not expected");
                        }
                        assertEquals(conflicts, e.getMessage());
                    }
                }
            });
        }
    }, "introduce Parameter", null);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NullLiteralExpr
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																		)
																	)
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(ObjectCreationExpr
																		(MethodDeclaration
																			(BlockStmt
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								SimpleName
																							)
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																				)
																				(IfStmt
																					(InstanceOfExpr
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(AssignExpr
																								NameExpr
																									SimpleName
																								(ObjectCreationExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									(ClassOrInterfaceType
																										SimpleName
																									)
																								)
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(AssignExpr
																								NameExpr
																									SimpleName
																								(ObjectCreationExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									(ClassOrInterfaceType
																										SimpleName
																									)
																								)
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(VoidType
																			)
																			SimpleName
																			(Parameter
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			(MarkerAnnotationExpr
																				Name
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																)
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(TryStmt
													(CatchClause
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NullLiteralExpr
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			StringLiteralExpr
																			SimpleName
																		)
																	)
																)
															)
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	SimpleName
																)
															)
														)
														(Parameter
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(ObjectCreationExpr
																		(MethodDeclaration
																			(BlockStmt
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								SimpleName
																							)
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(VariableDeclarationExpr
																						(VariableDeclarator
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																				)
																				(IfStmt
																					(InstanceOfExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(AssignExpr
																								NameExpr
																									SimpleName
																								(ObjectCreationExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									(ClassOrInterfaceType
																										SimpleName
																									)
																								)
																							)
																						)
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(AssignExpr
																								NameExpr
																									SimpleName
																								(ObjectCreationExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									(ClassOrInterfaceType
																										SimpleName
																									)
																								)
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(VoidType
																			)
																			SimpleName
																			(Parameter
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			(MarkerAnnotationExpr
																				Name
																			)
																		)
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															(ExpressionStmt
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																)
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				StringLiteralExpr
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

