@Override
public void doCheck() {
    doDoTest(true, false);
}||||||||@Override
public void doCheck() {
    checkHighlighting(new ExpectedHighlightingData(new DocumentImpl("{\n" + "  \"properties\": {\n" + "    \"withPattern\": {\n" + "      \"pattern\": <warning descr=\"Unclosed character class near index 3\n" + "^[]$\n" + "   ^\">\"^[]$\"</warning>\n" + "    },\n" + "    \"everythingFine\": {\n" + "      \"pattern\": \"^[a]$\"\n" + "    }\n" + "  },\n" + "  \"patternProperties\": {\n" + "    <warning descr=\"Unclosed character class near index 8\n" + ".*p[0-9.*\n" + "        ^\">\"p[0-9\"</warning>: {},\n" + "    <warning descr=\"Unclosed character class near index 8\n" + ".*b[0-7.*\n" + "        ^\">\"b[0-7\"</warning>: {}\n" + "  }\n" + "}"), true, true, false, myFile));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(ObjectCreationExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						(BinaryExpr
																							(BinaryExpr
																								(BinaryExpr
																									StringLiteralExpr
																									StringLiteralExpr
																								)
																								StringLiteralExpr
																							)
																							StringLiteralExpr
																						)
																						StringLiteralExpr
																					)
																					StringLiteralExpr
																				)
																				StringLiteralExpr
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

