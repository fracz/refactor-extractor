@Override
public boolean isFileColorsEnabled() {
    final boolean enabled = FileColorManagerImpl._isEnabled() && FileColorManagerImpl._isEnabledForProjectView();
    final boolean opaque = isOpaque();
    if (enabled && opaque) {
        setOpaque(false);
    } else if (!enabled && !opaque) {
        setOpaque(true);
    }
    return enabled;
}||||||||@Override
public boolean isFileColorsEnabled() {
    return isFileColorsEnabledFor(this);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

