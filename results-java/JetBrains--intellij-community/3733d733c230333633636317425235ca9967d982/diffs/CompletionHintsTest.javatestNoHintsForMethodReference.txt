public void testNoHintsForMethodReference() {
    configureJava("class C {\n" + "  interface I { void i(int p); }\n" + "  void referenced(int a) {}\n" + "  void m(I lambda) {}\n" + "  void m2() { m(this::<caret>) }\n" + "}");
    complete("referenced");
    myFixture.checkResultWithInlays("class C {\n" + "  interface I { void i(int p); }\n" + "  void referenced(int a) {}\n" + "  void m(I lambda) {}\n" + "  void m2() { m(this::referenced) }\n" + "}");
}||||||||public void testNoHintsForMethodReference() {
    configureJava("class C {\n" + "  interface I { void i(int p); }\n" + "  void referenced(int a) {}\n" + "  void m(I lambda) {}\n" + "  void m2() { m(this::<caret>) }\n" + "}");
    complete("referenced");
    checkResultWithInlays("class C {\n" + "  interface I { void i(int p); }\n" + "  void referenced(int a) {}\n" + "  void m(I lambda) {}\n" + "  void m2() { m(this::referenced) }\n" + "}");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)

