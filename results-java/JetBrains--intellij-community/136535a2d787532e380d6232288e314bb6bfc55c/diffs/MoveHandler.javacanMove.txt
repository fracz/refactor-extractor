/**
 * Must be invoked in AtomicAction
 * target container can be null => means that container is not determined yet and must be spacify by the user
 */
public static boolean canMove(PsiElement[] elements, PsiElement targetContainer) {
    if (elements == null) {
        throw new IllegalArgumentException("elements cannot be null");
    }
    int moveType = getMoveType(elements);
    if (moveType == NOT_SUPPORTED) {
        return false;
    }
    if (targetContainer == null) {
        return true;
    }
    if (moveType == INNER_TO_UPPER) {
        return targetContainer.equals(MoveInnerImpl.getTargetContainer((PsiClass) elements[0]));
    } else if (moveType == MEMBERS) {
        return (targetContainer instanceof PsiClass) && !(targetContainer instanceof PsiAnonymousClass);
    } else if (moveType == CLASSES || moveType == PACKAGES) {
        if (targetContainer instanceof PsiPackage) {
            return true;
        }
        if (targetContainer instanceof PsiDirectory) {
            return ((PsiDirectory) targetContainer).getPackage() != null;
        }
        return false;
    } else if (moveType == FILES || moveType == DIRECTORIES) {
        if (targetContainer instanceof PsiDirectory) {
            return true;
        }
        return false;
    } else {
        return false;
    }
}||||||||/**
 * Must be invoked in AtomicAction
 * target container can be null => means that container is not determined yet and must be spacify by the user
 */
public static boolean canMove(PsiElement[] elements, PsiElement targetContainer) {
    if (elements == null) {
        throw new IllegalArgumentException("elements cannot be null");
    }
    int moveType = getMoveType(elements);
    if (moveType == NOT_SUPPORTED) {
        return false;
    }
    if (targetContainer == null) {
        return true;
    }
    if (moveType == INNER_TO_UPPER) {
        return targetContainer.equals(MoveInnerImpl.getTargetContainer((PsiClass) elements[0]));
    } else if (moveType == MEMBERS) {
        return targetContainer instanceof PsiClass && !(targetContainer instanceof PsiAnonymousClass);
    } else if (moveType == CLASSES || moveType == PACKAGES) {
        if (targetContainer instanceof PsiPackage) {
            return true;
        }
        if (targetContainer instanceof PsiDirectory) {
            return ((PsiDirectory) targetContainer).getPackage() != null;
        }
        return false;
    } else if (moveType == FILES || moveType == DIRECTORIES) {
        return targetContainer instanceof PsiDirectory;
    } else {
        return false;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
						(BlockStmt
							(IfStmt
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(BlockStmt
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
							)
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										NullLiteralExpr
									)
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(BinaryExpr
							(EnclosedExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(UnaryExpr
								(EnclosedExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							(CastExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
						)
						(IfStmt
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(EnclosedExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										NullLiteralExpr
									)
								)
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ReturnStmt
						(BinaryExpr
							(InstanceOfExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(UnaryExpr
								(EnclosedExpr
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(MethodCallExpr
						(MethodCallExpr
							(CastExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

