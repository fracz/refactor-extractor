/**
 * @param commandLineParts command line splitted into words.
 * @return command line information
 * @throws MalformedCommandLineException in case of bad commandline
 */
@NotNull
CommandLineParseResult parse(@NotNull List<WordWithPosition> commandLineParts) throws MalformedCommandLineException;||||||||/**
 * @param commandLineText command line to parse
 * @return command line information
 * @throws MalformedCommandLineException in case of bad commandline
 */
@NotNull
CommandLine parse(@NotNull String commandLineText) throws MalformedCommandLineException;||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

