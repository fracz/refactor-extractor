@Override
public void begin(ChangeSet c) throws StopVisitingException {
    if (isBeforeMyChange(c, false))
        stop();
    if (!isInTheChain(c))
        return;
    result[0] = LocalHistoryBundle.message("revert.message.should.revert.sequential.changes");
    stop();
}||||||||@Override
public void begin(ChangeSet c) throws StopVisitingException {
    if (isBeforeMyChange(c, false))
        stop();
    if (!isInTheChain(c))
        return;
    result.add(LocalHistoryBundle.message("revert.message.have.sequential.changes"));
    stop();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				SimpleName
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

