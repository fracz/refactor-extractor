private void collectReferencesAndOtherData(PsiFile file) {
    // PyImportElement myImportElement = findImportElement(editor, file);
    assert myImportElement != null : "isAvailable() must have returned true, but myImportElement is null";
    // usages of imported name are qualifiers; what they refer to?
    PyReferenceExpression reference = myImportElement.getImportReference();
    if (reference != null) {
        myModuleName = PyResolveUtil.toPath(reference, ".");
        myQualifierName = myImportElement.getVisibleName();
        myReferee = reference.resolve();
        myHasModuleReference = false;
        if (myReferee != null && myModuleName != null && myQualifierName != null) {
            final Collection<PsiReference> references = new ArrayList<PsiReference>();
            PsiTreeUtil.processElements(file, new PsiElementProcessor() {

                public boolean execute(PsiElement element) {
                    if (element instanceof PyReferenceExpression && PsiTreeUtil.getParentOfType(element, PyImportElement.class) == null) {
                        PyReferenceExpression ref = (PyReferenceExpression) element;
                        if (myQualifierName.equals(PyResolveUtil.toPath(ref, "."))) {
                            // filter out other names that might resolve to our target
                            PsiElement elt = ref.getElement();
                            PsiElement parent_elt = elt.getParent();
                            if (parent_elt != null && parent_elt instanceof PyQualifiedExpression) {
                                // really qualified by us, not just referencing?
                                PsiElement resolved = ref.resolve();
                                if (resolved == myReferee)
                                    references.add(ref);
                            } else
                                myHasModuleReference = true;
                        }
                    }
                    return true;
                }
            });
            myReferences = references;
        }
    }
}||||||||private void collectReferencesAndOtherData(PsiFile file) {
    // PyImportElement myImportElement = findImportElement(editor, file);
    assert myImportElement != null : "isAvailable() must have returned true, but myImportElement is null";
    // usages of imported name are qualifiers; what they refer to?
    PyReferenceExpression reference = myImportElement.getImportReference();
    if (reference != null) {
        myModuleName = PyResolveUtil.toPath(reference, ".");
        myQualifierName = myImportElement.getVisibleName();
        myReferee = reference.resolve();
        myHasModuleReference = false;
        if (myReferee != null && myModuleName != null && myQualifierName != null) {
            final Collection<PsiReference> references = new ArrayList<PsiReference>();
            PsiTreeUtil.processElements(file, new PsiElementProcessor() {

                public boolean execute(PsiElement element) {
                    if (element instanceof PyReferenceExpression && PsiTreeUtil.getParentOfType(element, PyImportElement.class) == null) {
                        PyReferenceExpression ref = (PyReferenceExpression) element;
                        if (myQualifierName.equals(PyResolveUtil.toPath(ref, "."))) {
                            // filter out other names that might resolve to our target
                            PsiElement elt = ref.getElement();
                            PsiElement parent_elt = elt.getParent();
                            if (parent_elt instanceof PyQualifiedExpression) {
                                // really qualified by us, not just referencing?
                                PsiElement resolved = ref.resolve();
                                if (resolved == myReferee)
                                    references.add(ref);
                            } else
                                myHasModuleReference = true;
                        }
                    }
                    return true;
                }
            });
            myReferences = references;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			StringLiteralExpr
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(InstanceOfExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															(ClassExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														NullLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																LineComment
															)
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		NullLiteralExpr
																	)
																	(InstanceOfExpr
																		NameExpr
																			SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(BooleanLiteralExpr
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																		LineComment
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
											(ReturnStmt
												(BooleanLiteralExpr
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(AssertStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			StringLiteralExpr
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(InstanceOfExpr
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BinaryExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															(ClassExpr
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
														NullLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(VariableDeclarationExpr
															(VariableDeclarator
																(CastExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
													(IfStmt
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
																LineComment
															)
															(ExpressionStmt
																(VariableDeclarationExpr
																	(VariableDeclarator
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(InstanceOfExpr
																	NameExpr
																		SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(BooleanLiteralExpr
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																		LineComment
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
											(ReturnStmt
												(BooleanLiteralExpr
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

