public void show() {
    // final long time = System.currentTimeMillis();
    JComponent panel = createCenterPanel();
    new MnemonicHelper().register(panel);
    boolean shouldSetWidth = DimensionService.getInstance().getSize(getDimensionServiceKey(), myProject) == null;
    myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(panel, null).setTitle(myTitle).setResizable(true).setModalContext(false).setFocusable(true).setRequestFocus(true).setMovable(true).setBelongsToGlobalPopupStack(true).setCancelKeyEnabled(false).setDimensionServiceKey(null, getDimensionServiceKey(), false).setCancelCallback(new Computable<Boolean>() {

        @Override
        public Boolean compute() {
            DimensionService.getInstance().setLocation(getDimensionServiceKey(), myPopup.getLocationOnScreen(), myProject);
            return true;
        }
    }).createPopup();
    myTree.addTreeSelectionListener(new TreeSelectionListener() {

        @Override
        public void valueChanged(TreeSelectionEvent e) {
            if (myPopup.isVisible()) {
                final PopupUpdateProcessor updateProcessor = myPopup.getUserData(PopupUpdateProcessor.class);
                if (updateProcessor != null) {
                    final AbstractTreeNode node = getSelectedNode();
                    updateProcessor.updatePopup(node);
                }
            }
        }
    });
    Disposer.register(myPopup, this);
    Disposer.register(myPopup, new Disposable() {

        @Override
        public void dispose() {
            if (!myTreeHasBuilt.isDone()) {
                myTreeHasBuilt.setRejected();
            }
        }
    });
    myTree.getEmptyText().setText("Loading...");
    final Point location = DimensionService.getInstance().getLocation(getDimensionServiceKey(), myProject);
    if (location != null) {
        myPopup.showInScreenCoordinates(myFileEditor.getComponent(), location);
    } else {
        myPopup.showCenteredInCurrentWindow(myProject);
    }
    ((AbstractPopup) myPopup).setShowHints(true);
    if (shouldSetWidth) {
        myPopup.setSize(new Dimension(myPreferredWidth + 10, myPopup.getSize().height));
    }
    IdeFocusManager.getInstance(myProject).requestFocus(myTree, true);
    SwingUtilities.windowForComponent(myPopup.getContent()).addWindowFocusListener(new WindowFocusListener() {

        @Override
        public void windowGainedFocus(WindowEvent e) {
        }

        @Override
        public void windowLostFocus(WindowEvent e) {
            myPopup.cancel();
        }
    });
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {

        @Override
        public void run() {
            ApplicationManager.getApplication().runReadAction(new Runnable() {

                @Override
                public void run() {
                    myFilteringStructure.rebuild();
                }
            });
            // noinspection SSBasedInspection
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    myAbstractTreeBuilder.queueUpdate().doWhenDone(new Runnable() {

                        @Override
                        public void run() {
                            myTreeHasBuilt.setDone();
                            // noinspection SSBasedInspection
                            SwingUtilities.invokeLater(new Runnable() {

                                @Override
                                public void run() {
                                    if (myAbstractTreeBuilder.isDisposed())
                                        return;
                                    if (selectPsiElement(myInitialPsiElement) == null) {
                                        TreeUtil.ensureSelection(myAbstractTreeBuilder.getTree());
                                        myAbstractTreeBuilder.revalidateTree();
                                    }
                                }
                            });
                        }
                    });
                    installUpdater();
                }
            });
        }
    });
}||||||||public void show() {
    // final long time = System.currentTimeMillis();
    JComponent panel = createCenterPanel();
    MnemonicHelper.init(panel);
    boolean shouldSetWidth = DimensionService.getInstance().getSize(getDimensionServiceKey(), myProject) == null;
    myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(panel, null).setTitle(myTitle).setResizable(true).setModalContext(false).setFocusable(true).setRequestFocus(true).setMovable(true).setBelongsToGlobalPopupStack(true).setCancelKeyEnabled(false).setDimensionServiceKey(null, getDimensionServiceKey(), false).setCancelCallback(new Computable<Boolean>() {

        @Override
        public Boolean compute() {
            DimensionService.getInstance().setLocation(getDimensionServiceKey(), myPopup.getLocationOnScreen(), myProject);
            return true;
        }
    }).createPopup();
    myTree.addTreeSelectionListener(new TreeSelectionListener() {

        @Override
        public void valueChanged(TreeSelectionEvent e) {
            if (myPopup.isVisible()) {
                final PopupUpdateProcessor updateProcessor = myPopup.getUserData(PopupUpdateProcessor.class);
                if (updateProcessor != null) {
                    final AbstractTreeNode node = getSelectedNode();
                    updateProcessor.updatePopup(node);
                }
            }
        }
    });
    Disposer.register(myPopup, this);
    Disposer.register(myPopup, new Disposable() {

        @Override
        public void dispose() {
            if (!myTreeHasBuilt.isDone()) {
                myTreeHasBuilt.setRejected();
            }
        }
    });
    myTree.getEmptyText().setText("Loading...");
    final Point location = DimensionService.getInstance().getLocation(getDimensionServiceKey(), myProject);
    if (location != null) {
        myPopup.showInScreenCoordinates(myFileEditor.getComponent(), location);
    } else {
        myPopup.showCenteredInCurrentWindow(myProject);
    }
    ((AbstractPopup) myPopup).setShowHints(true);
    if (shouldSetWidth) {
        myPopup.setSize(new Dimension(myPreferredWidth + 10, myPopup.getSize().height));
    }
    IdeFocusManager.getInstance(myProject).requestFocus(myTree, true);
    SwingUtilities.windowForComponent(myPopup.getContent()).addWindowFocusListener(new WindowFocusListener() {

        @Override
        public void windowGainedFocus(WindowEvent e) {
        }

        @Override
        public void windowLostFocus(WindowEvent e) {
            myPopup.cancel();
        }
    });
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {

        @Override
        public void run() {
            ApplicationManager.getApplication().runReadAction(new Runnable() {

                @Override
                public void run() {
                    myFilteringStructure.rebuild();
                }
            });
            // noinspection SSBasedInspection
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    myAbstractTreeBuilder.queueUpdate().doWhenDone(new Runnable() {

                        @Override
                        public void run() {
                            myTreeHasBuilt.setDone();
                            // noinspection SSBasedInspection
                            SwingUtilities.invokeLater(new Runnable() {

                                @Override
                                public void run() {
                                    if (myAbstractTreeBuilder.isDisposed())
                                        return;
                                    if (selectPsiElement(myInitialPsiElement) == null) {
                                        TreeUtil.ensureSelection(myAbstractTreeBuilder.getTree());
                                        myAbstractTreeBuilder.revalidateTree();
                                    }
                                }
                            });
                        }
                    });
                    installUpdater();
                }
            });
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(ObjectCreationExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NullLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							NullLiteralExpr
							(MethodCallExpr
								SimpleName
							)
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
									LineComment
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(EnclosedExpr
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(ObjectCreationExpr
																				(MethodDeclaration
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							(ReturnStmt
																							)
																						)
																						(IfStmt
																							(BinaryExpr
																								(MethodCallExpr
																									NameExpr
																										SimpleName
																									SimpleName
																								)
																								NullLiteralExpr
																							)
																							(BlockStmt
																								(ExpressionStmt
																									(MethodCallExpr
																										(MethodCallExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								(ExpressionStmt
																									(MethodCallExpr
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																							)
																						)
																					)
																					(VoidType
																					)
																					SimpleName
																					(MarkerAnnotationExpr
																						Name
																					)
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		LineComment
																	)
																)
																(VoidType
																)
																SimpleName
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
							)
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NullLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(BooleanLiteralExpr
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
								SimpleName
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						(MethodCallExpr
							NullLiteralExpr
							(MethodCallExpr
								SimpleName
							)
							(BooleanLiteralExpr
							)
							SimpleName
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
									LineComment
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											(MethodCallExpr
												(BooleanLiteralExpr
												)
												SimpleName
												(MethodCallExpr
													(BooleanLiteralExpr
													)
													SimpleName
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				(EnclosedExpr
					(CastExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(ExpressionStmt
																		(MethodCallExpr
																			(ObjectCreationExpr
																				(MethodDeclaration
																					(BlockStmt
																						(IfStmt
																							(MethodCallExpr
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							(ReturnStmt
																							)
																						)
																						(IfStmt
																							(BinaryExpr
																								(MethodCallExpr
																									NameExpr
																										SimpleName
																									SimpleName
																								)
																								NullLiteralExpr
																							)
																							(BlockStmt
																								(ExpressionStmt
																									(MethodCallExpr
																										(MethodCallExpr
																											SimpleName
																											NameExpr
																												SimpleName
																										)
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																								(ExpressionStmt
																									(MethodCallExpr
																										SimpleName
																										NameExpr
																											SimpleName
																									)
																								)
																							)
																						)
																					)
																					(VoidType
																					)
																					SimpleName
																					(MarkerAnnotationExpr
																						Name
																					)
																				)
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		LineComment
																	)
																)
																(VoidType
																)
																SimpleName
																(MarkerAnnotationExpr
																	Name
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

