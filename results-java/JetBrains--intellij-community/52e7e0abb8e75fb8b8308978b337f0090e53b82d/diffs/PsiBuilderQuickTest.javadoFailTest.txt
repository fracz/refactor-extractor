private static void doFailTest(@NonNls final String text, final Parser parser, @NonNls final String expected) {
    final PrintStream std = System.err;
    // noinspection IOResourceOpenedButNotSafelyClosed
    System.setErr(new PrintStream(new NullStream()));
    try {
        try {
            ParserDefinition parserDefinition = new ParserDefinition() {

                @NotNull
                @Override
                public Lexer createLexer(Project project) {
                    return null;
                }

                @Override
                public PsiParser createParser(Project project) {
                    return null;
                }

                @Override
                public IFileElementType getFileNodeType() {
                    return null;
                }

                @NotNull
                @Override
                public TokenSet getWhitespaceTokens() {
                    return TokenSet.EMPTY;
                }

                @NotNull
                @Override
                public TokenSet getCommentTokens() {
                    return TokenSet.EMPTY;
                }

                @NotNull
                @Override
                public TokenSet getStringLiteralElements() {
                    return null;
                }

                @NotNull
                @Override
                public PsiElement createElement(ASTNode node) {
                    return null;
                }

                @Override
                public PsiFile createFile(FileViewProvider viewProvider) {
                    return null;
                }

                @Override
                public SpaceRequirements spaceExistanceTypeBetweenTokens(ASTNode left, ASTNode right) {
                    return null;
                }
            };
            final PsiBuilder builder = PsiBuilderFactory.getInstance().createBuilder(parserDefinition, new MyTestLexer(), text);
            builder.setDebugMode(true);
            parser.parse(builder);
            builder.getLightTree();
            fail("should fail");
        } catch (AssertionError e) {
            assertEquals(expected, e.getMessage());
        }
    } finally {
        System.setErr(std);
    }
}||||||||private static void doFailTest(@NonNls final String text, final Parser parser, @NonNls final String expected) {
    PlatformTestUtil.withStdErrSuppressed(new Runnable() {

        @Override
        public void run() {
            try {
                PsiBuilder builder = PsiBuilderFactory.getInstance().createBuilder(new PlainTextParserDefinition(), new MyTestLexer(), text);
                builder.setDebugMode(true);
                parser.parse(builder);
                builder.getLightTree();
                fail("should fail");
            } catch (AssertionError e) {
                assertEquals(expected, e.getMessage());
            }
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													NullLiteralExpr
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											SimpleName
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(Parameter
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										(ObjectCreationExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
										NameExpr
											SimpleName
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(TryStmt
								(CatchClause
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													NameExpr
														SimpleName
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(BooleanLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

