/**
 * Drops information about registered soft wraps if they are marked as <code>'dirty'</code>.
 *
 * @see #myDataIsDirty
 */
private void dropDataIfNecessary() {
    if (myDataIsDirty) {
        myWraps.clear();
        myDataIsDirty = false;
    }
}||||||||/**
 * Drops information about registered soft wraps if they are marked as <code>'dirty'</code>.
 *
 * @see #myDataIsDirty
 */
private void dropDataIfNecessary() {
    if (!myDataIsDirty) {
        return;
    }
    myDataIsDirty = false;
    myWraps.clear();
    myWrapOffsets.clear();
    myLogicalPositionsByOffsets.clear();
    myLogicalPositionsByVisual.clear();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

