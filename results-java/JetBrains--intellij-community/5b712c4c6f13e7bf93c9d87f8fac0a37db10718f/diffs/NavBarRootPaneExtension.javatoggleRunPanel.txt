private void toggleRunPanel(final boolean show) {
    if (show && myRunPanel == null && runToolbarExists()) {
        final ActionManager manager = ActionManager.getInstance();
        AnAction toolbarRunGroup = CustomActionsSchema.getInstance().getCorrectedAction("NavBarToolBar");
        if (toolbarRunGroup instanceof ActionGroup) {
            final boolean needGap = isNeedGap(toolbarRunGroup);
            final ActionToolbar actionToolbar = manager.createActionToolbar(ActionPlaces.NAVIGATION_BAR_TOOLBAR, (ActionGroup) toolbarRunGroup, true);
            final JComponent component = actionToolbar.getComponent();
            component.setOpaque(false);
            myRunPanel = new JPanel(new BorderLayout()) {

                @Override
                public void doLayout() {
                    alignVertically(this);
                }
            };
            myRunPanel.setOpaque(false);
            myRunPanel.add(component, BorderLayout.CENTER);
            myRunPanel.setBorder(JBUI.emptyBorder(0, needGap ? 5 : 1, 0, 0));
            myWrapperPanel.add(myRunPanel, BorderLayout.EAST);
        }
    } else if (!show && myRunPanel != null) {
        myWrapperPanel.remove(myRunPanel);
        myRunPanel = null;
    }
}||||||||private void toggleRunPanel(final boolean show) {
    if (show && myRunPanel == null && runToolbarExists()) {
        final ActionManager manager = ActionManager.getInstance();
        AnAction toolbarRunGroup = CustomActionsSchema.getInstance().getCorrectedAction("NavBarToolBar");
        if (toolbarRunGroup instanceof ActionGroup) {
            final boolean needGap = isNeedGap(toolbarRunGroup);
            final ActionToolbar actionToolbar = manager.createActionToolbar(ActionPlaces.NAVIGATION_BAR_TOOLBAR, (ActionGroup) toolbarRunGroup, true);
            final JComponent component = actionToolbar.getComponent();
            component.setOpaque(false);
            myRunPanel = new JPanel(new BorderLayout()) {

                @Override
                public void doLayout() {
                    alignVertically(this);
                }
            };
            myRunPanel.setOpaque(false);
            myRunPanel.add(component, BorderLayout.CENTER);
            myRunPanel.setBorder(JBUI.Borders.empty(0, needGap ? 5 : 1, 0, 0));
            myWrapperPanel.add(myRunPanel, BorderLayout.EAST);
        }
    } else if (!show && myRunPanel != null) {
        myWrapperPanel.remove(myRunPanel);
        myRunPanel = null;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(ConditionalExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								StringLiteralExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(CastExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(BooleanLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ThisExpr
													)
													SimpleName
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(ConditionalExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										(IntegerLiteralExpr
										)
									)
									(IntegerLiteralExpr
									)
									(IntegerLiteralExpr
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

