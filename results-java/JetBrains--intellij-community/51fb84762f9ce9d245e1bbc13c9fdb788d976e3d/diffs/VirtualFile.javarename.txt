/**
 * Renames this file to the <code>newName</code>.<p>
 * This method should be only called within write-action.
 * See {@link Application#runWriteAction(Runnable)}.
 *
 * @param requestor any object to control who called this method. Note that
 * it is considered to be an external change if <code>requestor</code> is <code>null</code>.
 * See {@link VirtualFileEvent#getRequestor}
 * @param newName   the new file name
 * @throws IOException if file failed to be renamed
 */
public void rename(Object requestor, @NotNull @NonNls String newName) throws IOException {
    if (getName().equals(newName))
        return;
    if (!isValidName(newName)) {
        throw new IOException(VfsBundle.message("file.invalid.name.error", newName));
    }
    getFileSystem().renameFile(requestor, this, newName);
}||||||||/**
 * Renames this file to the <code>newName</code>.<p>
 * This method should be only called within write-action.
 * See {@link Application#runWriteAction(Runnable)}.
 *
 * @param requestor any object to control who called this method. Note that
 * it is considered to be an external change if <code>requestor</code> is <code>null</code>.
 * See {@link VirtualFileEvent#getRequestor}
 * @param newName   the new file name
 * @throws IOException if file failed to be renamed
 */
public void rename(Object requestor, @NotNull String newName) throws IOException {
    if (getName().equals(newName))
        return;
    if (!getFileSystem().isValidName(newName)) {
        throw new IOException(VfsBundle.message("file.invalid.name.error", newName));
    }
    getFileSystem().renameFile(requestor, this, newName);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(ReturnStmt
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
			(ReturnStmt
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

