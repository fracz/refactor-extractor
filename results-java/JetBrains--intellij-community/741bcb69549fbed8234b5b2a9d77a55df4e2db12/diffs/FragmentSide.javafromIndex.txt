public static FragmentSide fromIndex(int index) {
    switch(index) {
        case 0:
            return SIDE1;
        case 1:
            return SIDE2;
        default:
            throw new InvalidParameterException(String.valueOf(index));
    }
}||||||||@NotNull
public static FragmentSide fromIndex(int index) {
    for (FragmentSide side : FragmentSide.values()) {
        if (side.getIndex() == index) {
            return side;
        }
    }
    throw new IllegalArgumentException(String.valueOf(index));
}||||||||(MethodDeclaration
	(BlockStmt
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(ThrowStmt
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

