private void executeFrom(final int cmdIndex, File baseDir) {
    if (cmdIndex < myCommands.size()) {
        final PlaybackCommand cmd = myCommands.get(cmdIndex);
        if (myStopRequested) {
            myCallback.message(null, "Stopped", cmdIndex, StatusCallback.Type.message);
            myActionCallback.setRejected();
            return;
        }
        final PlaybackContext context = new PlaybackContext(this, myCallback, cmdIndex, myRobot, myUseDirectActionCall, cmd, baseDir, (Set<Class>) myFacadeClasses.clone()) {

            private long myTimeStamp = myContextTimestamp;

            public void pushStage(StageInfo info) {
                myCurrentStageDepth.add(info);
            }

            public StageInfo popStage() {
                if (myCurrentStageDepth.size() > 0) {
                    return myCurrentStageDepth.remove(myCurrentStageDepth.size() - 1);
                }
                return null;
            }

            public int getCurrentStageDepth() {
                return myCurrentStageDepth.size();
            }

            @Override
            public void addPassed(StageInfo stage) {
                myPassedStages.add(stage);
            }

            @Override
            public boolean isDisposed() {
                return myTimeStamp != myContextTimestamp;
            }
        };
        final ActionCallback cmdCallback = cmd.execute(context);
        cmdCallback.doWhenDone(new Runnable() {

            public void run() {
                if (cmd.canGoFurther()) {
                    executeFrom(cmdIndex + 1, context.getBaseDir());
                } else {
                    myCallback.message(null, "Stopped", cmdIndex, StatusCallback.Type.message);
                    myActionCallback.setDone();
                }
            }
        }).doWhenRejected(new Runnable() {

            public void run() {
                myCallback.message(null, "Stopped", cmdIndex, StatusCallback.Type.message);
                myActionCallback.setRejected();
            }
        });
    } else {
        myCallback.message(null, "Finished OK " + myPassedStages.size() + " tests", myCommands.size() - 1, StatusCallback.Type.message);
        myActionCallback.setDone();
    }
}||||||||private void executeFrom(final int cmdIndex, File baseDir) {
    if (cmdIndex < myCommands.size()) {
        final PlaybackCommand cmd = myCommands.get(cmdIndex);
        if (myStopRequested) {
            myCallback.message(null, "Stopped", StatusCallback.Type.message);
            myActionCallback.setRejected();
            return;
        }
        final PlaybackContext context = new PlaybackContext(this, myCallback, cmdIndex, myRobot, myUseDirectActionCall, cmd, baseDir, (Set<Class>) myFacadeClasses.clone()) {

            private long myTimeStamp = myContextTimestamp;

            public void pushStage(StageInfo info) {
                myCurrentStageDepth.add(info);
            }

            public StageInfo popStage() {
                if (myCurrentStageDepth.size() > 0) {
                    return myCurrentStageDepth.remove(myCurrentStageDepth.size() - 1);
                }
                return null;
            }

            public int getCurrentStageDepth() {
                return myCurrentStageDepth.size();
            }

            @Override
            public void addPassed(StageInfo stage) {
                myPassedStages.add(stage);
            }

            @Override
            public boolean isDisposed() {
                return myTimeStamp != myContextTimestamp;
            }
        };
        final ActionCallback cmdCallback = cmd.execute(context);
        cmdCallback.doWhenDone(new Runnable() {

            public void run() {
                if (cmd.canGoFurther()) {
                    executeFrom(cmdIndex + 1, context.getBaseDir());
                } else {
                    myCallback.message(null, "Stopped", StatusCallback.Type.message);
                    myActionCallback.setDone();
                }
            }
        }).doWhenRejected(new Runnable() {

            public void run() {
                myCallback.message(null, "Stopped", StatusCallback.Type.message);
                myActionCallback.setRejected();
            }
        });
    } else {
        myCallback.message(null, "Finished OK " + myPassedStages.size() + " tests", StatusCallback.Type.message);
        myActionCallback.setDone();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NullLiteralExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(FieldDeclaration
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ReturnStmt
											NullLiteralExpr
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									SimpleName
								)
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(ThisExpr
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(CastExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NullLiteralExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NullLiteralExpr
														StringLiteralExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NullLiteralExpr
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							StringLiteralExpr
						)
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NullLiteralExpr
								StringLiteralExpr
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(FieldDeclaration
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BlockStmt
												(ReturnStmt
													(MethodCallExpr
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ReturnStmt
											NullLiteralExpr
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
									SimpleName
								)
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
								)
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(MethodDeclaration
									(BlockStmt
										(ReturnStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(PrimitiveType
									)
									SimpleName
									(MarkerAnnotationExpr
										Name
									)
								)
								(ThisExpr
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(CastExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NullLiteralExpr
											StringLiteralExpr
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NullLiteralExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
													)
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

