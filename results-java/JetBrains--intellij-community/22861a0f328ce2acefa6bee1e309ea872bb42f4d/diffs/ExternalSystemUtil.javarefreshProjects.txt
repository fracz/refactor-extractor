/**
 * Asks to refresh all external projects of the target external system linked to the given ide project.
 * <p/>
 * 'Refresh' here means 'obtain the most up-to-date version and apply it to the ide'.
 *
 * @param project           target ide project
 * @param externalSystemId  target external system which projects should be refreshed
 * @param force             flag which defines if external project refresh should be performed if it's config is up-to-date
 */
public static void refreshProjects(@NotNull final Project project, @NotNull final ProjectSystemId externalSystemId, boolean force) {
    ExternalSystemManager<?, ?, ?, ?, ?> manager = ExternalSystemApiUtil.getManager(externalSystemId);
    if (manager == null) {
        return;
    }
    AbstractExternalSystemSettings<?, ?, ?> settings = manager.getSettingsProvider().fun(project);
    final Collection<? extends ExternalProjectSettings> projectsSettings = settings.getLinkedProjectsSettings();
    if (projectsSettings.isEmpty()) {
        return;
    }
    final ProjectDataManager projectDataManager = ServiceManager.getService(ProjectDataManager.class);
    final int[] counter = new int[1];
    ExternalProjectRefreshCallback callback = new ExternalProjectRefreshCallback() {

        @NotNull
        private final Set<String> myExternalModuleNames = ContainerUtilRt.newHashSet();

        @Override
        public void onSuccess(@Nullable final DataNode<ProjectData> externalProject) {
            if (externalProject == null) {
                return;
            }
            Collection<DataNode<ModuleData>> moduleNodes = ExternalSystemApiUtil.findAll(externalProject, ProjectKeys.MODULE);
            for (DataNode<ModuleData> node : moduleNodes) {
                myExternalModuleNames.add(node.getData().getName());
            }
            ExternalSystemApiUtil.executeProjectChangeAction(true, new Runnable() {

                @Override
                public void run() {
                    ProjectRootManagerEx.getInstanceEx(project).mergeRootsChangesDuring(new Runnable() {

                        @Override
                        public void run() {
                            projectDataManager.importData(externalProject.getKey(), Collections.singleton(externalProject), project, true);
                        }
                    });
                }
            });
            if (--counter[0] <= 0) {
                processOrphanModules();
            }
        }

        @Override
        public void onFailure(@NotNull String errorMessage, @Nullable String errorDetails) {
            // Don't process orphan modules if there was an error on refresh.
            counter[0] = Integer.MAX_VALUE;
        }

        private void processOrphanModules() {
            PlatformFacade platformFacade = ServiceManager.getService(PlatformFacade.class);
            List<Module> orphanIdeModules = ContainerUtilRt.newArrayList();
            String externalSystemIdAsString = externalSystemId.toString();
            for (Module module : platformFacade.getModules(project)) {
                String s = module.getOptionValue(ExternalSystemConstants.EXTERNAL_SYSTEM_ID_KEY);
                if (externalSystemIdAsString.equals(s) && !myExternalModuleNames.contains(module.getName())) {
                    orphanIdeModules.add(module);
                }
            }
            if (!orphanIdeModules.isEmpty()) {
                ruleOrphanModules(orphanIdeModules, project, externalSystemId);
            }
        }
    };
    Map<String, Long> modificationStamps = manager.getLocalSettingsProvider().fun(project).getExternalConfigModificationStamps();
    Set<String> toRefresh = ContainerUtilRt.newHashSet();
    for (ExternalProjectSettings setting : projectsSettings) {
        Long oldModificationStamp = modificationStamps.get(setting.getExternalProjectPath());
        long currentModificationStamp = getTimeStamp(setting.getExternalProjectPath());
        if (force || currentModificationStamp < 0 || oldModificationStamp == null || oldModificationStamp < currentModificationStamp) {
            toRefresh.add(setting.getExternalProjectPath());
        }
    }
    if (!toRefresh.isEmpty()) {
        counter[0] = toRefresh.size();
        for (String path : toRefresh) {
            refreshProject(project, externalSystemId, path, callback, true, false);
        }
    }
}||||||||/**
 * Asks to refresh all external projects of the target external system linked to the given ide project.
 * <p/>
 * 'Refresh' here means 'obtain the most up-to-date version and apply it to the ide'.
 *
 * @param project           target ide project
 * @param externalSystemId  target external system which projects should be refreshed
 * @param force             flag which defines if external project refresh should be performed if it's config is up-to-date
 */
public static void refreshProjects(@NotNull final Project project, @NotNull final ProjectSystemId externalSystemId, boolean force) {
    ExternalSystemManager<?, ?, ?, ?, ?> manager = ExternalSystemApiUtil.getManager(externalSystemId);
    if (manager == null) {
        return;
    }
    AbstractExternalSystemSettings<?, ?, ?> settings = manager.getSettingsProvider().fun(project);
    final Collection<? extends ExternalProjectSettings> projectsSettings = settings.getLinkedProjectsSettings();
    if (projectsSettings.isEmpty()) {
        return;
    }
    final ProjectDataManager projectDataManager = ServiceManager.getService(ProjectDataManager.class);
    final int[] counter = new int[1];
    ExternalProjectRefreshCallback callback = new ExternalProjectRefreshCallback() {

        @NotNull
        private final Set<String> myExternalModulePaths = ContainerUtilRt.newHashSet();

        @Override
        public void onSuccess(@Nullable final DataNode<ProjectData> externalProject) {
            if (externalProject == null) {
                return;
            }
            Collection<DataNode<ModuleData>> moduleNodes = ExternalSystemApiUtil.findAll(externalProject, ProjectKeys.MODULE);
            for (DataNode<ModuleData> node : moduleNodes) {
                myExternalModulePaths.add(node.getData().getLinkedExternalProjectPath());
            }
            ExternalSystemApiUtil.executeProjectChangeAction(true, new Runnable() {

                @Override
                public void run() {
                    ProjectRootManagerEx.getInstanceEx(project).mergeRootsChangesDuring(new Runnable() {

                        @Override
                        public void run() {
                            projectDataManager.importData(externalProject.getKey(), Collections.singleton(externalProject), project, true);
                        }
                    });
                }
            });
            if (--counter[0] <= 0) {
                processOrphanModules();
            }
        }

        @Override
        public void onFailure(@NotNull String errorMessage, @Nullable String errorDetails) {
            // Don't process orphan modules if there was an error on refresh.
            counter[0] = Integer.MAX_VALUE;
        }

        private void processOrphanModules() {
            PlatformFacade platformFacade = ServiceManager.getService(PlatformFacade.class);
            List<Module> orphanIdeModules = ContainerUtilRt.newArrayList();
            String externalSystemIdAsString = externalSystemId.toString();
            for (Module module : platformFacade.getModules(project)) {
                String s = module.getOptionValue(ExternalSystemConstants.EXTERNAL_SYSTEM_ID_KEY);
                String p = module.getOptionValue(ExternalSystemConstants.LINKED_PROJECT_PATH_KEY);
                if (externalSystemIdAsString.equals(s) && !myExternalModulePaths.contains(p)) {
                    orphanIdeModules.add(module);
                }
            }
            if (!orphanIdeModules.isEmpty()) {
                ruleOrphanModules(orphanIdeModules, project, externalSystemId);
            }
        }
    };
    Map<String, Long> modificationStamps = manager.getLocalSettingsProvider().fun(project).getExternalConfigModificationStamps();
    Set<String> toRefresh = ContainerUtilRt.newHashSet();
    for (ExternalProjectSettings setting : projectsSettings) {
        Long oldModificationStamp = modificationStamps.get(setting.getExternalProjectPath());
        long currentModificationStamp = getTimeStamp(setting.getExternalProjectPath());
        if (force || currentModificationStamp < 0 || oldModificationStamp == null || oldModificationStamp < currentModificationStamp) {
            toRefresh.add(setting.getExternalProjectPath());
        }
    }
    if (!toRefresh.isEmpty()) {
        counter[0] = toRefresh.size();
        for (String path : toRefresh) {
            refreshProject(project, externalSystemId, path, callback, true, false);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NameExpr
																					SimpleName
																				(BooleanLiteralExpr
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(UnaryExpr
													(MethodCallExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
						)
						(WildcardType
						)
						(WildcardType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(WildcardType
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ReturnStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									NameExpr
										SimpleName
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(ObjectCreationExpr
																(MethodDeclaration
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				NameExpr
																					SimpleName
																				(BooleanLiteralExpr
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	(VoidType
																	)
																	SimpleName
																	(MarkerAnnotationExpr
																		Name
																	)
																)
																(ClassOrInterfaceType
																	SimpleName
																)
															)
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(BinaryExpr
										(UnaryExpr
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ForeachStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								(BooleanLiteralExpr
								)
								SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

