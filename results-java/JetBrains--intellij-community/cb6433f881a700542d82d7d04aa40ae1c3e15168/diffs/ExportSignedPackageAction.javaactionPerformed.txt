@Override
public void actionPerformed(AnActionEvent e) {
    showNotification(true);
/*final Project project = e.getData(PlatformDataKeys.PROJECT);
    assert project != null;

    List<AndroidFacet> facets = AndroidUtils.getApplicationFacets(project);
    assert facets.size() > 0;
    if (facets.size() == 1) {
      if (!checkFacet(facets.get(0))) return;
    }
    ExportSignedPackageWizard wizard = new ExportSignedPackageWizard(project, facets, true);
    wizard.show();*/
}||||||||@Override
public void actionPerformed(AnActionEvent e) {
    final String doNotShowStr = PropertiesComponent.getInstance().getValue(ANDROID_HIDE_SIGNED_EXPORT);
    final boolean doNotShow = Boolean.parseBoolean(doNotShowStr);
    if (!doNotShow) {
        final boolean[] hide = { false };
        final int result = Messages.showCheckboxMessageDialog("This action was moved to 'Build | Generate Signed APK...'.\n" + "Also you can create Android artifact in 'File | Project Structure | Artifacts' to generate release APK", "Export Signed Package", new String[] { CommonBundle.getOkButtonText() }, "Hide 'Export Signed Application Package' in the menu", false, 0, 0, Messages.getInformationIcon(), new PairFunction<Integer, JCheckBox, Integer>() {

            @Override
            public Integer fun(Integer integer, JCheckBox checkBox) {
                hide[0] = checkBox.isSelected();
                return integer;
            }
        });
        if (result == Messages.OK && hide[0]) {
            PropertiesComponent.getInstance().setValue(ANDROID_HIDE_SIGNED_EXPORT, Boolean.toString(true));
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								(BooleanLiteralExpr
								)
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(BinaryExpr
									StringLiteralExpr
									StringLiteralExpr
								)
								StringLiteralExpr
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayInitializerExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ArrayCreationLevel
									)
								)
								StringLiteralExpr
								(BooleanLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(ReturnStmt
												NameExpr
													SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

