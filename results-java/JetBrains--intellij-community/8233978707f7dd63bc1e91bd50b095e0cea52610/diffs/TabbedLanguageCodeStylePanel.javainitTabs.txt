/**
 * Initializes all standard tabs: "Tabs and Indents", "Spaces", "Blank Lines" and "Wrapping and Braces" if relevant.
 * For "Tabs and Indents" LanguageCodeStyleSettingsProvider must instantiate its own indent options, for other standard tabs it
 * must return false in usesSharedPreview() method. You can override this method to add your own tabs by calling super.initTabs() and
 * then addTab() methods or selectively add needed tabs with your own implementation.
 * @param settings  Code style settings to be used with initialized panels.
 * @see LanguageCodeStyleSettingsProvider
 * @see #addIndentOptionsTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addSpacesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addBlankLinesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addWrappingAndBracesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 */
protected void initTabs(CodeStyleSettings settings) {
    LanguageCodeStyleSettingsProvider provider = LanguageCodeStyleSettingsProvider.forLanguage(getDefaultLanguage());
    addIndentOptionsTab(settings);
    if (provider != null && !provider.usesSharedPreview()) {
        addSpacesTab(settings);
        addWrappingAndBracesTab(settings);
        addBlankLinesTab(settings);
    }
}||||||||/**
 * Initializes all standard tabs: "Tabs and Indents", "Spaces", "Blank Lines" and "Wrapping and Braces" if relevant.
 * For "Tabs and Indents" LanguageCodeStyleSettingsProvider must instantiate its own indent options, for other standard tabs it
 * must return false in usesSharedPreview() method. You can override this method to add your own tabs by calling super.initTabs() and
 * then addTab() methods or selectively add needed tabs with your own implementation.
 * @param settings  Code style settings to be used with initialized panels.
 * @see LanguageCodeStyleSettingsProvider
 * @see #addIndentOptionsTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addSpacesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addBlankLinesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 * @see #addWrappingAndBracesTab(com.intellij.psi.codeStyle.CodeStyleSettings)
 */
protected void initTabs(CodeStyleSettings settings) {
    LanguageCodeStyleSettingsProvider provider = LanguageCodeStyleSettingsProvider.forLanguage(getDefaultLanguage());
    addIndentOptionsTab(settings);
    if (provider != null) {
        addSpacesTab(settings);
        addWrappingAndBracesTab(settings);
        addBlankLinesTab(settings);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(UnaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

