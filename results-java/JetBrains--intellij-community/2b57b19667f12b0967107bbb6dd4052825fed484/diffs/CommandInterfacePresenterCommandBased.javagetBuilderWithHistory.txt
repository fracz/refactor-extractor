/**
 * @return builder that already has history in its prefix group (see {@link com.jetbrains.python.suggestionList.SuggestionsBuilder})
 */
@NotNull
private SuggestionsBuilder getBuilderWithHistory() {
    final SuggestionsBuilder suggestionsBuilder = new SuggestionsBuilder();
    final List<CommandExecutionInfo> history = getHistory();
    final Collection<String> historyCommands = new LinkedHashSet<String>();
    for (final CommandExecutionInfo info : history) {
        historyCommands.add(info.toString());
    }
    if (!historyCommands.isEmpty()) {
        // TODO: Later implement folding by name
        suggestionsBuilder.changeGroup(false);
        suggestionsBuilder.add(ArrayUtil.toStringArray(historyCommands));
        suggestionsBuilder.changeGroup(true);
    }
    return suggestionsBuilder;
}||||||||/**
 * @return builder that already has history in its prefix group (see {@link com.jetbrains.python.suggestionList.SuggestionsBuilder})
 */
@NotNull
private SuggestionsBuilder getBuilderWithHistory() {
    return new SuggestionsBuilder();
// TODO: Uncomment when history would be fixed
/*final SuggestionsBuilder suggestionsBuilder = new SuggestionsBuilder();
    final List<CommandExecutionInfo> history = getHistory();
    final Collection<String> historyCommands = new LinkedHashSet<String>();
    for (final CommandExecutionInfo info : history) {
      historyCommands.add(info.toString());
    }

    if (!historyCommands.isEmpty()) {
      // TODO: Later implement folding by name
      suggestionsBuilder.changeGroup(false);
      suggestionsBuilder
        .add(ArrayUtil.toStringArray(historyCommands));
      suggestionsBuilder.changeGroup(true);
    }

    return suggestionsBuilder;*/
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

