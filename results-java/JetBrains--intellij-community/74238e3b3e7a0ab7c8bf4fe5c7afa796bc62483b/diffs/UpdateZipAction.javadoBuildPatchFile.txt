@Override
public void doBuildPatchFile(File olderFile, File newerFile, ZipOutputStream patchOutput) throws IOException {
    int changes = myFilesToCreate.size() + myFilesToUpdate.size();
    if (changes == 0)
        return;
    Set<String> filesToProcess = new HashSet<>(changes);
    filesToProcess.addAll(myFilesToCreate);
    filesToProcess.addAll(myFilesToUpdate);
    try (ZipFile olderZip = new ZipFile(olderFile)) {
        processZipFile(newerFile, (newerEntry, newerEntryIn) -> {
            String name = newerEntry.getName();
            if (filesToProcess.contains(name)) {
                try {
                    patchOutput.putNextEntry(new ZipEntry(getPath() + "/" + name));
                    InputStream olderEntryIn = Utils.findEntryInputStream(olderZip, name);
                    if (olderEntryIn == null) {
                        Utils.copyStream(newerEntryIn, patchOutput);
                    } else {
                        writeDiff(olderEntryIn, newerEntryIn, patchOutput);
                    }
                    patchOutput.closeEntry();
                } catch (IOException e) {
                    Runner.logger().error("Error building patch for .zip entry " + name);
                    Runner.printStackTrace(e);
                    throw new IOException("Error building patch for .zip entry " + name, e);
                }
            }
        });
    }
}||||||||@Override
public void doBuildPatchFile(File olderFile, File newerFile, ZipOutputStream patchOutput) throws IOException {
    int changes = myFilesToCreate.size() + myFilesToUpdate.size();
    if (changes == 0)
        return;
    Set<String> filesToProcess = new HashSet<>(changes);
    filesToProcess.addAll(myFilesToCreate);
    filesToProcess.addAll(myFilesToUpdate);
    try (ZipFile olderZip = new ZipFile(olderFile)) {
        processZipFile(newerFile, (newerEntry, newerEntryIn) -> {
            String name = newerEntry.getName();
            if (filesToProcess.contains(name)) {
                try {
                    patchOutput.putNextEntry(new ZipEntry(getPath() + "/" + name));
                    InputStream olderEntryIn = Utils.findEntryInputStream(olderZip, name);
                    if (olderEntryIn == null) {
                        Utils.copyStream(newerEntryIn, patchOutput);
                    } else {
                        writeDiff(olderEntryIn, newerEntryIn, patchOutput);
                    }
                    patchOutput.closeEntry();
                } catch (IOException e) {
                    throw new IOException("Error building patch for .zip entry " + name, e);
                }
            }
        });
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(LambdaExpr
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BinaryExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																	)
																	StringLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(LambdaExpr
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(TryStmt
											(CatchClause
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ObjectCreationExpr
															(BinaryExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																	)
																	StringLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
							(Parameter
								SimpleName
								(UnknownType
								)
							)
						)
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

