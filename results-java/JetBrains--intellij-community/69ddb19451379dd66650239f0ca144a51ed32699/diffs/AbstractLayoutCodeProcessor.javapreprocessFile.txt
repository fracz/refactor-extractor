/**
 * Ensures that given file is ready to reformatting and prepares it if necessary.
 *
 * @param file                    file to process
 * @param processChangedTextOnly  flag that defines is only the changed text (in terms of VCS change) should be processed
 * @return          task that triggers formatting of the given file. Returns value of that task indicates whether formatting
 * is finished correctly or not (exception occurred, user cancelled formatting etc)
 * @throws IncorrectOperationException    if unexpected exception occurred during formatting
 */
@NotNull
protected abstract FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException;||||||||public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException {
    final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly);
    final FutureTask<Boolean> currentTask = prepareTask(file, processChangedTextOnly);
    return new FutureTask<Boolean>(new Callable<Boolean>() {

        @Override
        public Boolean call() throws Exception {
            if (previousTask != null) {
                previousTask.run();
                if (!previousTask.get() || previousTask.isCancelled())
                    return false;
            }
            currentTask.run();
            return currentTask.get() && !currentTask.isCancelled();
        }
    });
}||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(ObjectCreationExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

