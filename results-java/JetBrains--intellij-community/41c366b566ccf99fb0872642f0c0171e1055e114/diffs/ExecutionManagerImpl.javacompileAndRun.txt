public void compileAndRun(final Runnable startRunnable, final RunProfile configuration, final RunProfileState state) {
    final Runnable antAwareRunnable = new Runnable() {

        public void run() {
            final AntConfiguration antConfiguration = AntConfiguration.getInstance(myProject);
            if ((configuration instanceof RunConfiguration) && antConfiguration.hasTasksToExecuteBeforeRun((RunConfiguration) configuration)) {
                final Thread thread = new Thread(new Runnable() {

                    public void run() {
                        final DataContext dataContext = MapDataContext.singleData(DataConstants.PROJECT, myProject);
                        final boolean result = antConfiguration.executeTaskBeforeRun(dataContext, (RunConfiguration) configuration);
                        if (result) {
                            ApplicationManager.getApplication().invokeLater(startRunnable);
                        }
                    }
                });
                thread.start();
            } else {
                startRunnable.run();
            }
        }
    };
    Module[] modulesToCompile = state.getModulesToCompile();
    if (modulesToCompile == null)
        modulesToCompile = Module.EMPTY_ARRAY;
    if (getConfig().isCompileBeforeRunning(configuration) && modulesToCompile.length > 0) {
        final CompileStatusNotification callback = new CompileStatusNotification() {

            public void finished(final boolean aborted, final int errors, final int warnings, CompileContext compileContext) {
                if (errors == 0 && !aborted) {
                    ApplicationManager.getApplication().invokeLater(antAwareRunnable);
                }
            }
        };
        CompileScope scope;
        if (Boolean.valueOf(System.getProperty(MAKE_PROJECT_ON_RUN_KEY, Boolean.FALSE.toString())).booleanValue()) {
            // user explicitly requested whole-project make
            scope = new ProjectCompileScope(myProject);
        } else {
            scope = new ModuleCompileScope(myProject, modulesToCompile, true);
        }
        scope.putUserData(RUN_PROFILE_STATE_KEY, state);
        CompilerManager.getInstance(myProject).make(scope, callback);
    } else {
        antAwareRunnable.run();
    }
}||||||||public void compileAndRun(final Runnable startRunnable, final RunProfile configuration, final RunProfileState state) {
    final Runnable antAwareRunnable = new Runnable() {

        public void run() {
            final AntConfiguration antConfiguration = AntConfiguration.getInstance(myProject);
            if (configuration instanceof RunConfiguration && antConfiguration != null && antConfiguration.hasTasksToExecuteBeforeRun((RunConfiguration) configuration)) {
                final Thread thread = new Thread(new Runnable() {

                    public void run() {
                        final DataContext dataContext = MapDataContext.singleData(DataConstants.PROJECT, myProject);
                        final boolean result = antConfiguration.executeTaskBeforeRun(dataContext, (RunConfiguration) configuration);
                        if (result) {
                            ApplicationManager.getApplication().invokeLater(startRunnable);
                        }
                    }
                });
                thread.start();
            } else {
                startRunnable.run();
            }
        }
    };
    Module[] modulesToCompile = state.getModulesToCompile();
    if (modulesToCompile == null)
        modulesToCompile = Module.EMPTY_ARRAY;
    if (getConfig().isCompileBeforeRunning(configuration) && modulesToCompile.length > 0) {
        final CompileStatusNotification callback = new CompileStatusNotification() {

            public void finished(final boolean aborted, final int errors, final int warnings, CompileContext compileContext) {
                if (errors == 0 && !aborted) {
                    ApplicationManager.getApplication().invokeLater(antAwareRunnable);
                }
            }
        };
        CompileScope scope;
        if (Boolean.valueOf(System.getProperty(MAKE_PROJECT_ON_RUN_KEY, Boolean.FALSE.toString())).booleanValue()) {
            // user explicitly requested whole-project make
            scope = new ProjectCompileScope(myProject);
        } else {
            scope = new ModuleCompileScope(myProject, modulesToCompile, true);
        }
        scope.putUserData(RUN_PROFILE_STATE_KEY, state);
        CompilerManager.getInstance(myProject).make(scope, callback);
    } else {
        antAwareRunnable.run();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(InstanceOfExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					(CastExpr
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(PrimitiveType
																				)
																			)
																		)
																	)
																	(IfStmt
																		NameExpr
																			SimpleName
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																)
																(VoidType
																)
																SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(InstanceOfExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ObjectCreationExpr
															(MethodDeclaration
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					(FieldAccessExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					(CastExpr
																						NameExpr
																							SimpleName
																						(ClassOrInterfaceType
																							SimpleName
																						)
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(PrimitiveType
																				)
																			)
																		)
																	)
																	(IfStmt
																		NameExpr
																			SimpleName
																		(BlockStmt
																			(ExpressionStmt
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																	)
																)
																(VoidType
																)
																SimpleName
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(PrimitiveType
										)
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

