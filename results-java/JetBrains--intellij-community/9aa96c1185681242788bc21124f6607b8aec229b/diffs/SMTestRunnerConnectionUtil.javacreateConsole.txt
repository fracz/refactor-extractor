public static BaseTestsOutputConsoleView createConsole(@NotNull final String testFrameworkName, @NotNull final TestConsoleProperties consoleProperties, final RunnerSettings runnerSettings, final ConfigurationPerRunnerSettings configurationSettings) {
    // Console
    final String splitterPropertyName = testFrameworkName + ".Splitter.Proportion";
    final SMTRunnerConsoleView console = new SMTRunnerConsoleView(consoleProperties, runnerSettings, configurationSettings, splitterPropertyName) {

        @Override
        public void attachToProcess(final ProcessHandler processHandler) {
            // attach listeners
            attachEventsProcessors(consoleProperties, getResultsViewer(), getResultsViewer().getStatisticsPane(), processHandler, testFrameworkName);
        }
    };
    console.setHelpId("reference.runToolWindow.testResultsTab");
    console.initUI();
    return console;
}||||||||public static BaseTestsOutputConsoleView createConsole(@NotNull final String testFrameworkName, @NotNull final TestConsoleProperties consoleProperties, final RunnerSettings runnerSettings, final ConfigurationPerRunnerSettings configurationSettings) {
    // Console
    final String splitterPropertyName = testFrameworkName + ".Splitter.Proportion";
    final SMTRunnerConsoleView console = new SMTRunnerConsoleView(consoleProperties, runnerSettings, configurationSettings, splitterPropertyName) {

        @Override
        public void attachToProcess(final ProcessHandler processHandler) {
            // attach listeners
            super.attachToProcess(processHandler);
            attachEventsProcessors(consoleProperties, getResultsViewer(), getResultsViewer().getStatisticsPane(), processHandler, testFrameworkName);
        }
    };
    console.setHelpId("reference.runToolWindow.testResultsTab");
    console.initUI();
    return console;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(SuperExpr
										)
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

