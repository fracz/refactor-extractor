/**
 * Allows to answer if target library dependency is still available at the target project.
 *
 * @param id             target library id
 * @return         <code>true</code> if target library dependency is still available at the target project;
 * <code>false</code> otherwise
 */
public boolean isGradleLibraryDependencyExist(@NotNull final GradleLibraryDependencyId id) {
    return findLibraryDependency(id) != null;
}||||||||/**
 * Allows to answer if target library dependency is still available at the target gradle project.
 *
 * @param id       target library id
 * @return         <code>true</code> if target library dependency is still available at the target project;
 * <code>false</code> otherwise
 */
public boolean isGradleLibraryDependencyExist(@NotNull final GradleLibraryDependencyId id) {
    return findGradleLibraryDependency(id.getModuleName(), id.getLibraryName()) != null;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
				NullLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(MethodCallExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
				)
				NullLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

