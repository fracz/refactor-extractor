/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        // set up zzAction for empty match case:
        int zzAttributes = zzAttrL[zzState];
        if ((zzAttributes & 1) == 1) {
            zzAction = zzState;
        }
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                } else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                        zzCurrentPosL += Character.charCount(zzInput);
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + ZZ_CMAP(zzInput)];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
        } else {
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    {
                        yypopstate();
                        return RegExpTT.COMMENT;
                    }
                case 91:
                    break;
                case 2:
                    {
                        return RegExpTT.CHARACTER;
                    }
                case 92:
                    break;
                case 3:
                    {
                        return RegExpTT.DOT;
                    }
                case 93:
                    break;
                case 4:
                    {
                        capturingGroupCount++;
                        return RegExpTT.GROUP_BEGIN;
                    }
                case 94:
                    break;
                case 5:
                    {
                        return RegExpTT.GROUP_END;
                    }
                case 95:
                    break;
                case 6:
                    {
                        if (yystate() != CLASS2 && !allowDanglingMetacharacters) {
                            yypushstate(QUANTIFIER);
                            return RegExpTT.LBRACE;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 96:
                    break;
                case 7:
                    {
                        yypushstate(CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 97:
                    break;
                case 8:
                    {
                        return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 98:
                    break;
                case 9:
                    {
                        return RegExpTT.MINUS;
                    }
                case 99:
                    break;
                case 10:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CHARACTER;
                    }
                case 100:
                    break;
                case 11:
                    {
                        return RegExpTT.CARET;
                    }
                case 101:
                    break;
                case 12:
                    {
                        return RegExpTT.DOLLAR;
                    }
                case 102:
                    break;
                case 13:
                    {
                        return RegExpTT.QUEST;
                    }
                case 103:
                    break;
                case 14:
                    {
                        return RegExpTT.STAR;
                    }
                case 104:
                    break;
                case 15:
                    {
                        return RegExpTT.PLUS;
                    }
                case 105:
                    break;
                case 16:
                    {
                        return RegExpTT.UNION;
                    }
                case 106:
                    break;
                case 17:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;
                    }
                case 107:
                    break;
                case 18:
                    {
                        if (commentMode) {
                            yypushstate(COMMENT);
                            return RegExpTT.COMMENT;
                        } else
                            return RegExpTT.CHARACTER;
                    }
                case 108:
                    break;
                case 19:
                    {
                        yypopstate();
                        yypushback(1);
                    }
                case 109:
                    break;
                case 20:
                    {
                        yypopstate();
                        return RegExpTT.RBRACE;
                    }
                case 110:
                    break;
                case 21:
                    {
                        return RegExpTT.NAME;
                    }
                case 111:
                    break;
                case 22:
                    {
                        return RegExpTT.NUMBER;
                    }
                case 112:
                    break;
                case 23:
                    {
                        return RegExpTT.COMMA;
                    }
                case 113:
                    break;
                case 24:
                    {
                        assert false : yytext();
                    }
                case 114:
                    break;
                case 25:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CHARACTER;
                    }
                case 115:
                    break;
                case 26:
                    {
                        yybegin(CLASS1);
                        return RegExpTT.CARET;
                    }
                case 116:
                    break;
                case 27:
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS2);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 117:
                    break;
                case 28:
                    {
                        yypopstate();
                        return RegExpTT.CLASS_END;
                    }
                case 118:
                    break;
                case 29:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.ESC_CHARACTER;
                    }
                case 119:
                    break;
                case 30:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CARET;
                    }
                case 120:
                    break;
                case 31:
                    {
                        yypopstate();
                        yypushstate(EMBRACED);
                        return RegExpTT.LBRACE;
                    }
                case 121:
                    break;
                case 32:
                    {
                        yypopstate();
                        return RegExpTT.CATEGORY_SHORT_HAND;
                    }
                case 122:
                    break;
                case 33:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 123:
                    break;
                case 34:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GROUP_END;
                    }
                case 124:
                    break;
                case 35:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_ON;
                    }
                case 125:
                    break;
                case 36:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_OFF;
                    }
                case 126:
                    break;
                case 37:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.COLON;
                    }
                case 127:
                    break;
                case 38:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GT;
                    }
                case 128:
                    break;
                case 39:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.QUOTE;
                    }
                case 129:
                    break;
                case 40:
                    {
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 130:
                    break;
                case 41:
                    {
                        yybegin(OPTIONS);
                        return RegExpTT.SET_OPTIONS;
                    }
                case 131:
                    break;
                case 42:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 132:
                    break;
                case 43:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(NEGATE_CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 133:
                    break;
                case 44:
                    {
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 134:
                    break;
                case 45:
                    {
                        if (allowOctalNoLeadingZero) {
                            CharSequence s = yytext();
                            int i = 1;
                            for (; i < s.length(); i++) {
                                if (s.charAt(i) > '7')
                                    break;
                            }
                            if (i > 1) {
                                yypushback(yylength() - i);
                                return RegExpTT.OCT_CHAR;
                            }
                        }
                        if (yystate() == CLASS2) {
                            yypushback(yylength() - 2);
                            return RegExpTT.REDUNDANT_ESCAPE;
                        }
                        while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {
                            yypushback(1);
                        }
                        return RegExpTT.BACKREF;
                    }
                case 135:
                    break;
                case 46:
                    {
                        return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);
                    }
                case 136:
                    break;
                case 47:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.REDUNDANT_ESCAPE : RegExpTT.ESC_CHARACTER;
                    }
                case 137:
                    break;
                case 48:
                    {
                        return RegExpTT.ESC_CHARACTER;
                    }
                case 138:
                    break;
                case 49:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 139:
                    break;
                case 50:
                    {
                        return commentMode ? RegExpTT.CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 140:
                    break;
                case 51:
                    {
                        return RegExpTT.ESC_CTRL_CHARACTER;
                    }
                case 141:
                    break;
                case 52:
                    {
                        return yystate() != CLASS2 ? RegExpTT.BOUNDARY : RegExpTT.ESC_CHARACTER;
                    }
                case 142:
                    break;
                case 53:
                    {
                        return RegExpTT.CHAR_CLASS;
                    }
                case 143:
                    break;
                case 54:
                    {
                        if (xmlSchemaMode)
                            return RegExpTT.CHAR_CLASS;
                        else
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 144:
                    break;
                case 55:
                    {
                        yypushstate(PROP);
                        return RegExpTT.PROPERTY;
                    }
                case 145:
                    break;
                case 56:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 146:
                    break;
                case 57:
                    {
                        yypushstate(QUOTED);
                        return RegExpTT.QUOTE_BEGIN;
                    }
                case 147:
                    break;
                case 58:
                    {
                        return RegExpTT.BAD_HEX_VALUE;
                    }
                case 148:
                    break;
                case 59:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 149:
                    break;
                case 60:
                    {
                        return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);
                    }
                case 150:
                    break;
                case 61:
                    {
                        yypushstate(NAMED);
                        return RegExpTT.NAMED_CHARACTER;
                    }
                case 151:
                    break;
                case 62:
                    {
                        yypopstate();
                        return RegExpTT.QUOTE_END;
                    }
                case 152:
                    break;
                case 63:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 153:
                    break;
                case 64:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 154:
                    break;
                case 65:
                    {
                        if (allowPosixBracketExpressions) {
                            yybegin(BRACKET_EXPRESSION);
                            return RegExpTT.BRACKET_EXPRESSION_BEGIN;
                        } else {
                            yypushback(1);
                            return RegExpTT.CHARACTER;
                        }
                    }
                case 155:
                    break;
                case 66:
                    {
                        if (allowNestedCharacterClasses)
                            return RegExpTT.ANDAND;
                        else
                            yypushback(1);
                        return RegExpTT.CHARACTER;
                    }
                case 156:
                    break;
                case 67:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.BRACKET_EXPRESSION_END;
                    }
                case 157:
                    break;
                case 68:
                    {
                        yybegin(PY_COND_REF);
                        return RegExpTT.PYTHON_COND_REF;
                    }
                case 158:
                    break;
                case 69:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_NAMED_GROUP;
                    }
                case 159:
                    break;
                case 70:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP;
                    }
                case 160:
                    break;
                case 71:
                    {
                        return RegExpTT.NON_CAPT_GROUP;
                    }
                case 161:
                    break;
                case 72:
                    {
                        return RegExpTT.POS_LOOKAHEAD;
                    }
                case 162:
                    break;
                case 73:
                    {
                        return RegExpTT.NEG_LOOKAHEAD;
                    }
                case 163:
                    break;
                case 74:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(QUANTIFIER);
                        return RegExpTT.LBRACE;
                    }
                case 164:
                    break;
                case 75:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(NEGATE_CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 165:
                    break;
                case 76:
                    {
                        return RegExpTT.OCT_CHAR;
                    }
                case 166:
                    break;
                case 77:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_CALL;
                    }
                case 167:
                    break;
                case 78:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_CALL;
                    }
                case 168:
                    break;
                case 79:
                    {
                        if (xmlSchemaMode) {
                            yypushback(1);
                            return RegExpTT.CHAR_CLASS;
                        } else
                            return RegExpTT.CTRL;
                    }
                case 169:
                    break;
                case 80:
                    {
                        return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 170:
                    break;
                case 81:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_REF;
                    }
                case 171:
                    break;
                case 82:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_REF;
                    }
                case 172:
                    break;
                case 83:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 173:
                    break;
                case 84:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.PYTHON_NAMED_GROUP;
                    }
                case 174:
                    break;
                case 85:
                    {
                        yybegin(PY_NAMED_GROUP_REF);
                        return RegExpTT.PYTHON_NAMED_GROUP_REF;
                    }
                case 175:
                    break;
                case 86:
                    {
                        return RegExpTT.POS_LOOKBEHIND;
                    }
                case 176:
                    break;
                case 87:
                    {
                        return RegExpTT.NEG_LOOKBEHIND;
                    }
                case 177:
                    break;
                case 88:
                    {
                        return RegExpTT.HEX_CHAR;
                    }
                case 178:
                    break;
                case 89:
                    {
                        return RegExpTT.COMMENT;
                    }
                case 179:
                    break;
                case 90:
                    {
                        return RegExpTT.UNICODE_CHAR;
                    }
                case 180:
                    break;
                default:
                    zzScanError(ZZ_NO_MATCH);
            }
        }
    }
}||||||||/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        // set up zzAction for empty match case:
        int zzAttributes = zzAttrL[zzState];
        if ((zzAttributes & 1) == 1) {
            zzAction = zzState;
        }
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                    zzCurrentPosL += Character.charCount(zzInput);
                } else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
                        zzCurrentPosL += Character.charCount(zzInput);
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + ZZ_CMAP(zzInput)];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
        } else {
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1:
                    {
                        yypopstate();
                        return RegExpTT.COMMENT;
                    }
                case 91:
                    break;
                case 2:
                    {
                        return RegExpTT.CHARACTER;
                    }
                case 92:
                    break;
                case 3:
                    {
                        return RegExpTT.DOT;
                    }
                case 93:
                    break;
                case 4:
                    {
                        capturingGroupCount++;
                        return RegExpTT.GROUP_BEGIN;
                    }
                case 94:
                    break;
                case 5:
                    {
                        return RegExpTT.GROUP_END;
                    }
                case 95:
                    break;
                case 6:
                    {
                        if (yystate() != CLASS2 && !allowDanglingMetacharacters) {
                            yypushstate(QUANTIFIER);
                            return RegExpTT.LBRACE;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 96:
                    break;
                case 7:
                    {
                        yypushstate(CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 97:
                    break;
                case 8:
                    {
                        return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 98:
                    break;
                case 9:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CHARACTER;
                    }
                case 99:
                    break;
                case 10:
                    {
                        return RegExpTT.CARET;
                    }
                case 100:
                    break;
                case 11:
                    {
                        return RegExpTT.DOLLAR;
                    }
                case 101:
                    break;
                case 12:
                    {
                        return RegExpTT.QUEST;
                    }
                case 102:
                    break;
                case 13:
                    {
                        return RegExpTT.STAR;
                    }
                case 103:
                    break;
                case 14:
                    {
                        return RegExpTT.PLUS;
                    }
                case 104:
                    break;
                case 15:
                    {
                        return RegExpTT.UNION;
                    }
                case 105:
                    break;
                case 16:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.CTRL_CHARACTER;
                    }
                case 106:
                    break;
                case 17:
                    {
                        if (commentMode) {
                            yypushstate(COMMENT);
                            return RegExpTT.COMMENT;
                        } else
                            return RegExpTT.CHARACTER;
                    }
                case 107:
                    break;
                case 18:
                    {
                        yypopstate();
                        yypushback(1);
                    }
                case 108:
                    break;
                case 19:
                    {
                        yypopstate();
                        return RegExpTT.RBRACE;
                    }
                case 109:
                    break;
                case 20:
                    {
                        return RegExpTT.NAME;
                    }
                case 110:
                    break;
                case 21:
                    {
                        return RegExpTT.NUMBER;
                    }
                case 111:
                    break;
                case 22:
                    {
                        return RegExpTT.COMMA;
                    }
                case 112:
                    break;
                case 23:
                    {
                        assert false : yytext();
                    }
                case 113:
                    break;
                case 24:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CHARACTER;
                    }
                case 114:
                    break;
                case 25:
                    {
                        yybegin(CLASS1);
                        return RegExpTT.CARET;
                    }
                case 115:
                    break;
                case 26:
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS2);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 116:
                    break;
                case 27:
                    {
                        yypopstate();
                        return RegExpTT.CLASS_END;
                    }
                case 117:
                    break;
                case 28:
                    {
                        return RegExpTT.MINUS;
                    }
                case 118:
                    break;
                case 29:
                    {
                        return commentMode ? com.intellij.psi.TokenType.WHITE_SPACE : RegExpTT.ESC_CHARACTER;
                    }
                case 119:
                    break;
                case 30:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.CARET;
                    }
                case 120:
                    break;
                case 31:
                    {
                        yypopstate();
                        yypushstate(EMBRACED);
                        return RegExpTT.LBRACE;
                    }
                case 121:
                    break;
                case 32:
                    {
                        yypopstate();
                        return RegExpTT.CATEGORY_SHORT_HAND;
                    }
                case 122:
                    break;
                case 33:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 123:
                    break;
                case 34:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GROUP_END;
                    }
                case 124:
                    break;
                case 35:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_ON;
                    }
                case 125:
                    break;
                case 36:
                    {
                        handleOptions();
                        return RegExpTT.OPTIONS_OFF;
                    }
                case 126:
                    break;
                case 37:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.COLON;
                    }
                case 127:
                    break;
                case 38:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.GT;
                    }
                case 128:
                    break;
                case 39:
                    {
                        yybegin(YYINITIAL);
                        return RegExpTT.QUOTE;
                    }
                case 129:
                    break;
                case 40:
                    {
                        return RegExpTT.BAD_CHARACTER;
                    }
                case 130:
                    break;
                case 41:
                    {
                        yybegin(OPTIONS);
                        return RegExpTT.SET_OPTIONS;
                    }
                case 131:
                    break;
                case 42:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 132:
                    break;
                case 43:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(NEGATE_CLASS2);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 133:
                    break;
                case 44:
                    {
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 134:
                    break;
                case 45:
                    {
                        if (allowOctalNoLeadingZero) {
                            CharSequence s = yytext();
                            int i = 1;
                            for (; i < s.length(); i++) {
                                if (s.charAt(i) > '7')
                                    break;
                            }
                            if (i > 1) {
                                yypushback(yylength() - i);
                                return RegExpTT.OCT_CHAR;
                            }
                        }
                        if (yystate() == CLASS2) {
                            yypushback(yylength() - 2);
                            return RegExpTT.REDUNDANT_ESCAPE;
                        }
                        while (yylength() > 2 && Integer.parseInt(yytext().toString().substring(1)) > capturingGroupCount) {
                            yypushback(1);
                        }
                        return RegExpTT.BACKREF;
                    }
                case 135:
                    break;
                case 46:
                    {
                        return (allowOctalNoLeadingZero ? RegExpTT.OCT_CHAR : RegExpTT.BAD_OCT_VALUE);
                    }
                case 136:
                    break;
                case 47:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.REDUNDANT_ESCAPE : RegExpTT.ESC_CHARACTER;
                    }
                case 137:
                    break;
                case 48:
                    {
                        return RegExpTT.ESC_CHARACTER;
                    }
                case 138:
                    break;
                case 49:
                    {
                        return (yystate() == CLASS2) ? RegExpTT.ESC_CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 139:
                    break;
                case 50:
                    {
                        return commentMode ? RegExpTT.CHARACTER : RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 140:
                    break;
                case 51:
                    {
                        return RegExpTT.ESC_CTRL_CHARACTER;
                    }
                case 141:
                    break;
                case 52:
                    {
                        return yystate() != CLASS2 ? RegExpTT.BOUNDARY : RegExpTT.ESC_CHARACTER;
                    }
                case 142:
                    break;
                case 53:
                    {
                        return RegExpTT.CHAR_CLASS;
                    }
                case 143:
                    break;
                case 54:
                    {
                        if (xmlSchemaMode)
                            return RegExpTT.CHAR_CLASS;
                        else
                            return StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 144:
                    break;
                case 55:
                    {
                        yypushstate(PROP);
                        return RegExpTT.PROPERTY;
                    }
                case 145:
                    break;
                case 56:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN;
                    }
                case 146:
                    break;
                case 57:
                    {
                        yypushstate(QUOTED);
                        return RegExpTT.QUOTE_BEGIN;
                    }
                case 147:
                    break;
                case 58:
                    {
                        return RegExpTT.BAD_HEX_VALUE;
                    }
                case 148:
                    break;
                case 59:
                    {
                        return allowTransformationEscapes ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 149:
                    break;
                case 60:
                    {
                        return (allowHexDigitClass || allowHorizontalWhitespaceClass ? RegExpTT.CHAR_CLASS : StringEscapesTokenTypes.INVALID_CHARACTER_ESCAPE_TOKEN);
                    }
                case 150:
                    break;
                case 61:
                    {
                        yypushstate(NAMED);
                        return RegExpTT.NAMED_CHARACTER;
                    }
                case 151:
                    break;
                case 62:
                    {
                        yypopstate();
                        return RegExpTT.QUOTE_END;
                    }
                case 152:
                    break;
                case 63:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.REDUNDANT_ESCAPE;
                    }
                case 153:
                    break;
                case 64:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 154:
                    break;
                case 65:
                    {
                        if (allowPosixBracketExpressions) {
                            yybegin(BRACKET_EXPRESSION);
                            return RegExpTT.BRACKET_EXPRESSION_BEGIN;
                        } else {
                            yypushback(1);
                            return RegExpTT.CHARACTER;
                        }
                    }
                case 155:
                    break;
                case 66:
                    {
                        if (allowNestedCharacterClasses)
                            return RegExpTT.ANDAND;
                        else
                            yypushback(1);
                        return RegExpTT.CHARACTER;
                    }
                case 156:
                    break;
                case 67:
                    {
                        yybegin(CLASS2);
                        return RegExpTT.BRACKET_EXPRESSION_END;
                    }
                case 157:
                    break;
                case 68:
                    {
                        yybegin(PY_COND_REF);
                        return RegExpTT.PYTHON_COND_REF;
                    }
                case 158:
                    break;
                case 69:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_NAMED_GROUP;
                    }
                case 159:
                    break;
                case 70:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP;
                    }
                case 160:
                    break;
                case 71:
                    {
                        return RegExpTT.NON_CAPT_GROUP;
                    }
                case 161:
                    break;
                case 72:
                    {
                        return RegExpTT.POS_LOOKAHEAD;
                    }
                case 162:
                    break;
                case 73:
                    {
                        return RegExpTT.NEG_LOOKAHEAD;
                    }
                case 163:
                    break;
                case 74:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        yypushstate(QUANTIFIER);
                        return RegExpTT.LBRACE;
                    }
                case 164:
                    break;
                case 75:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowEmptyCharacterClass)
                            yypushstate(CLASS2);
                        else
                            yypushstate(NEGATE_CLASS1);
                        return RegExpTT.CLASS_BEGIN;
                    }
                case 165:
                    break;
                case 76:
                    {
                        return RegExpTT.OCT_CHAR;
                    }
                case 166:
                    break;
                case 77:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_CALL;
                    }
                case 167:
                    break;
                case 78:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_CALL;
                    }
                case 168:
                    break;
                case 79:
                    {
                        if (xmlSchemaMode) {
                            yypushback(1);
                            return RegExpTT.CHAR_CLASS;
                        } else
                            return RegExpTT.CTRL;
                    }
                case 169:
                    break;
                case 80:
                    {
                        return StringEscapesTokenTypes.INVALID_UNICODE_ESCAPE_TOKEN;
                    }
                case 170:
                    break;
                case 81:
                    {
                        yybegin(NAMED_GROUP);
                        return RegExpTT.RUBY_NAMED_GROUP_REF;
                    }
                case 171:
                    break;
                case 82:
                    {
                        yybegin(QUOTED_NAMED_GROUP);
                        return RegExpTT.RUBY_QUOTED_NAMED_GROUP_REF;
                    }
                case 172:
                    break;
                case 83:
                    // lookahead expression with fixed base length
                    zzMarkedPos = Character.offsetByCodePoints(zzBufferL, /*, zzStartRead, zzEndRead - zzStartRead*/
                    zzStartRead, 1);
                    {
                        if (allowNestedCharacterClasses) {
                            yypushstate(CLASS1);
                            return RegExpTT.CLASS_BEGIN;
                        }
                        return RegExpTT.CHARACTER;
                    }
                case 173:
                    break;
                case 84:
                    {
                        yybegin(NAMED_GROUP);
                        capturingGroupCount++;
                        return RegExpTT.PYTHON_NAMED_GROUP;
                    }
                case 174:
                    break;
                case 85:
                    {
                        yybegin(PY_NAMED_GROUP_REF);
                        return RegExpTT.PYTHON_NAMED_GROUP_REF;
                    }
                case 175:
                    break;
                case 86:
                    {
                        return RegExpTT.POS_LOOKBEHIND;
                    }
                case 176:
                    break;
                case 87:
                    {
                        return RegExpTT.NEG_LOOKBEHIND;
                    }
                case 177:
                    break;
                case 88:
                    {
                        return RegExpTT.HEX_CHAR;
                    }
                case 178:
                    break;
                case 89:
                    {
                        return RegExpTT.COMMENT;
                    }
                case 179:
                    break;
                case 90:
                    {
                        return RegExpTT.UNICODE_CHAR;
                    }
                case 180:
                    break;
                default:
                    zzScanError(ZZ_NO_MATCH);
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(AssertStmt
										(BooleanLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ForStmt
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(CharLiteralExpr
															)
														)
														(BreakStmt
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																NameExpr
																	SimpleName
															)
															SimpleName
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(WhileStmt
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(SwitchStmt
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(UnaryExpr
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(AssertStmt
										(BooleanLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(IntegerLiteralExpr
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ForStmt
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															(CharLiteralExpr
															)
														)
														(BreakStmt
														)
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(UnaryExpr
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																)
																NameExpr
																	SimpleName
															)
															SimpleName
														)
													)
													(ReturnStmt
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(WhileStmt
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
										(BinaryExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													(MethodCallExpr
														SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											(BinaryExpr
												(MethodCallExpr
													SimpleName
												)
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(ConditionalExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(EnclosedExpr
											(ConditionalExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												SimpleName
											)
										)
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(ReturnStmt
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
												(BlockComment
												)
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ReturnStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

