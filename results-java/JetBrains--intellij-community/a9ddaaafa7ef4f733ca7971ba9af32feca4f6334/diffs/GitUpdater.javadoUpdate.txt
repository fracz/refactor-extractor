/**
 * Update depending on the chosen strategy.
 *
 * @param progressIndicator the progress indicator of overall update process
 * @param roots             roots to be updated
 */
public void doUpdate(ProgressIndicator progressIndicator, Set<VirtualFile> roots) {
    LOG.info("doUpdate started");
    myProgressIndicator = progressIndicator;
    ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();
    projectManager.blockReloadingProjectOnExternalChanges();
    try {
        if (isRebaseInProgressAndNotify(roots)) {
            return;
        }
        if (!saveProjectChangesBeforeUpdate()) {
            // TODO: unite with saveRootChangesBeforeUpdate, show notification in case of failure
            return;
        }
        if (!allTrackedBranchesConfigured(roots)) {
            return;
        }
        try {
            for (final VirtualFile root : roots) {
                List<GitRebaseUtils.CommitInfo> skippedCommits = null;
                try {
                    final Ref<Boolean> cancelled = new Ref<Boolean>(false);
                    final Ref<Throwable> ex = new Ref<Throwable>();
                    saveRootChangesBeforeUpdate(root);
                    boolean hadAbortErrors = false;
                    try {
                        markStart(root);
                        try {
                            GitLineHandler h = makeStartHandler(root);
                            RebaseConflictDetector rebaseConflictDetector = new RebaseConflictDetector();
                            h.addLineListener(rebaseConflictDetector);
                            try {
                                GitHandlerUtil.doSynchronouslyWithExceptions(h, progressIndicator, GitHandlerUtil.formatOperationName("Updating", root));
                            } finally {
                                if (!rebaseConflictDetector.isRebaseConflict()) {
                                    myExceptions.addAll(h.errors());
                                }
                                cleanupHandler(root, h);
                            }
                            while (rebaseConflictDetector.isRebaseConflict() && !cancelled.get() && !hadAbortErrors) {
                                mergeFiles(root, cancelled, ex, true);
                                // noinspection ThrowableResultOfMethodCallIgnored
                                if (ex.get() != null) {
                                    // noinspection ThrowableResultOfMethodCallIgnored
                                    throw GitUtil.rethrowVcsException(ex.get());
                                }
                                checkLocallyModified(root, cancelled, ex);
                                // noinspection ThrowableResultOfMethodCallIgnored
                                if (ex.get() != null) {
                                    // noinspection ThrowableResultOfMethodCallIgnored
                                    throw GitUtil.rethrowVcsException(ex.get());
                                }
                                if (cancelled.get()) {
                                    break;
                                }
                                Collection<VcsException> exceptions = doRebase(progressIndicator, root, rebaseConflictDetector, "--continue");
                                while (rebaseConflictDetector.isNoChange() && !hasAbortExceptions(exceptions)) {
                                    if (skippedCommits == null) {
                                        skippedCommits = new ArrayList<GitRebaseUtils.CommitInfo>();
                                        mySkippedCommits.put(root, skippedCommits);
                                    }
                                    skippedCommits.add(GitRebaseUtils.getCurrentRebaseCommit(root));
                                    exceptions = doRebase(progressIndicator, root, rebaseConflictDetector, "--skip");
                                }
                                hadAbortErrors = hasAbortExceptions(exceptions);
                            }
                            if (cancelled.get() || hadAbortErrors) {
                                // noinspection ThrowableInstanceNeverThrown
                                myExceptions.add(new VcsException("The update process was " + (hadAbortErrors ? "aborted" : "cancelled") + " for " + root.getPresentableUrl()));
                                doRebase(progressIndicator, root, rebaseConflictDetector, "--abort");
                                progressIndicator.setText2("Refreshing files for the root " + root.getPath());
                                root.refresh(false, true);
                            }
                        } finally {
                            markEnd(root, cancelled.get());
                        }
                    } finally {
                        restoreRootChangesAfterUpdate(root, cancelled);
                    }
                } catch (VcsException ex) {
                    myExceptions.add(ex);
                }
            }
        } finally {
            // TODO: unite with restoreRootChangesAfterUpdate
            restoreProjectChangesAfterUpdate();
        }
    } finally {
        projectManager.unblockReloadingProjectOnExternalChanges();
    }
}||||||||/**
 * Performs update (via rebase or merge - depending on the implementing classes).
 */
protected abstract GitUpdateResult doUpdate();||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
				(TryStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(BooleanLiteralExpr
														)
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(BooleanLiteralExpr
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(TryStmt
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(TryStmt
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(ObjectCreationExpr
																		(ClassOrInterfaceType
																			SimpleName
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(TryStmt
															(BlockStmt
																(IfStmt
																	(UnaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(BlockStmt
																		(ExpressionStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			StringLiteralExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
														(WhileStmt
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		(BooleanLiteralExpr
																		)
																		SimpleName
																	)
																)
																(IfStmt
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NullLiteralExpr
																	)
																	(BlockStmt
																		(ThrowStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			LineComment
																		)
																	)
																	LineComment
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
																(IfStmt
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NullLiteralExpr
																	)
																	(BlockStmt
																		(ThrowStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			LineComment
																		)
																	)
																	LineComment
																)
																(IfStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(BlockStmt
																		(BreakStmt
																		)
																	)
																)
																(ExpressionStmt
																	(VariableDeclarationExpr
																		(VariableDeclarator
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				StringLiteralExpr
																				SimpleName
																			)
																			SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																)
																(WhileStmt
																	(BlockStmt
																		(IfStmt
																			(BinaryExpr
																				NameExpr
																					SimpleName
																				NullLiteralExpr
																			)
																			(BlockStmt
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(ObjectCreationExpr
																							(ClassOrInterfaceType
																								SimpleName
																								(ClassOrInterfaceType
																									SimpleName
																									(ClassOrInterfaceType
																										SimpleName
																									)
																								)
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																		)
																		(ExpressionStmt
																			(MethodCallExpr
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		(ExpressionStmt
																			(AssignExpr
																				NameExpr
																					SimpleName
																				(MethodCallExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																					StringLiteralExpr
																					SimpleName
																				)
																			)
																		)
																	)
																	(BinaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		(UnaryExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				SimpleName
																			)
																		)
																	)
																)
																(ExpressionStmt
																	(AssignExpr
																		NameExpr
																			SimpleName
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																		)
																	)
																)
															)
															(BinaryExpr
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(UnaryExpr
																		(MethodCallExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(UnaryExpr
																	NameExpr
																		SimpleName
																)
															)
														)
														(IfStmt
															(BinaryExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(ObjectCreationExpr
																			(BinaryExpr
																				(BinaryExpr
																					(BinaryExpr
																						StringLiteralExpr
																						(EnclosedExpr
																							(ConditionalExpr
																								NameExpr
																									SimpleName
																								StringLiteralExpr
																								StringLiteralExpr
																							)
																						)
																					)
																					StringLiteralExpr
																				)
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
																(ExpressionStmt
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		StringLiteralExpr
																		SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(MethodCallExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		(BooleanLiteralExpr
																		)
																		(BooleanLiteralExpr
																		)
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

