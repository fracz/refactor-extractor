// return not null in case of String[], int[], double[][]
@Nullable
private PsiType inferArrayType() {
    PsiType arrayTypeBase = getClassReferenceFromExpression(this);
    if (arrayTypeBase == null)
        return null;
    return TypesUtil.createJavaLangClassType(arrayTypeBase, this.getProject(), this.getResolveScope());
}||||||||// return not null in case of String[], int[], double[][]
@Nullable
private PsiType inferArrayType() {
    PsiType arrayTypeBase = getClassReferenceFromExpression(this);
    if (arrayTypeBase == null)
        return null;
    return TypesUtil.createJavaLangClassType(arrayTypeBase, getProject(), getResolveScope());
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				NullLiteralExpr
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				NullLiteralExpr
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	LineComment
)

