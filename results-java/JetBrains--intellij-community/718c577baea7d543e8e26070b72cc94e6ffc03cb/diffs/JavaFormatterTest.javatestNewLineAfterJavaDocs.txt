public void testNewLineAfterJavaDocs() throws Exception {
    doTextTest("/** @noinspection InstanceVariableNamingConvention*/class Foo{\n" + "/** @noinspection InstanceVariableNamingConvention*/int myFoo;\n" + "/** @noinspection InstanceVariableNamingConvention*/ void foo(){}}", "/**\n" + " * @noinspection InstanceVariableNamingConvention\n" + " */\n" + "class Foo {\n" + "    /**\n" + "     * @noinspection InstanceVariableNamingConvention\n" + "     */\n" + "    int myFoo;\n" + "\n" + "    /**\n" + "     * @noinspection InstanceVariableNamingConvention\n" + "     */\n" + "    void foo() {\n" + "    }\n" + "}");
}||||||||public void testNewLineAfterJavaDocs() throws Exception {
    String before = "/** @noinspection InstanceVariableNamingConvention*/class Foo{\n" + "/** @noinspection InstanceVariableNamingConvention*/int myFoo;\n" + "/** @noinspection InstanceVariableNamingConvention*/ void foo(){}}";
    String after = "/**\n" + " * @noinspection InstanceVariableNamingConvention\n" + " */\n" + "class Foo {\n" + "    /**\n" + "     * @noinspection InstanceVariableNamingConvention\n" + "     */\n" + "    int myFoo;\n" + "\n" + "    /**\n" + "     * @noinspection InstanceVariableNamingConvention\n" + "     */\n" + "    void foo() {\n" + "    }\n" + "}";
    doTextTest(before, after);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						StringLiteralExpr
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		StringLiteralExpr
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					StringLiteralExpr
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			StringLiteralExpr
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	StringLiteralExpr
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													StringLiteralExpr
												)
												StringLiteralExpr
											)
											StringLiteralExpr
										)
										StringLiteralExpr
									)
									StringLiteralExpr
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
						StringLiteralExpr
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

