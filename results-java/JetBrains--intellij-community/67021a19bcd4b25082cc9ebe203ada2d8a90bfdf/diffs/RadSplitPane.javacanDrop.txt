public boolean canDrop(@Nullable Point location, final int componentCount) {
    if (componentCount != 1) {
        return false;
    }
    /*
    TODO[yole]: support multi-drop (is it necessary?)
    if (componentCount == 2) {
      return isEmptySplitComponent(getSplitPane().getLeftComponent()) &&
             isEmptySplitComponent(getSplitPane().getRightComponent());
    }
    */
    if (location == null) {
        return isEmptySplitComponent(getSplitPane().getLeftComponent()) || isEmptySplitComponent(getSplitPane().getRightComponent());
    }
    final Component component;
    if (isLeft(location.x, location.y)) {
        component = getSplitPane().getLeftComponent();
    } else {
        component = getSplitPane().getRightComponent();
    }
    return isEmptySplitComponent(component);
}||||||||public boolean canDrop(@Nullable Point location, final int componentCount) {
    if (componentCount != 1) {
        return false;
    }
    /*
    TODO[yole]: support multi-drop (is it necessary?)
    if (componentCount == 2) {
      return isEmptySplitComponent(getSplitPane().getLeftComponent()) &&
             isEmptySplitComponent(getSplitPane().getRightComponent());
    }
    */
    if (location == null) {
        return isEmptySplitComponent(getSplitPane().getLeftComponent()) || isEmptySplitComponent(getSplitPane().getRightComponent());
    }
    final Component component;
    if (isLeft(location)) {
        component = getSplitPane().getLeftComponent();
    } else {
        component = getSplitPane().getRightComponent();
    }
    return isEmptySplitComponent(component);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
						)
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BinaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
						)
					)
				)
			)
			(BlockComment
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

