private String getSyntaxInfo() {
    final StringBuilder builder = new StringBuilder();
    final Editor editor = myFixture.getEditor();
    String selectedText = editor.getSelectionModel().getSelectedText(true);
    assertNotNull(selectedText);
    final String text = StringUtil.convertLineSeparators(selectedText);
    TextWithMarkupProcessor processor = new TextWithMarkupProcessor();
    processor.addBuilder(new TextWithMarkupBuilder() {

        @Override
        public void reset() {
        }

        @Override
        public void build(SyntaxInfo syntaxInfo) {
            final ColorRegistry colorRegistry = syntaxInfo.getColorRegistry();
            assertEquals(JBColor.BLACK, colorRegistry.dataById(syntaxInfo.getDefaultForeground()));
            assertEquals(JBColor.WHITE, colorRegistry.dataById(syntaxInfo.getDefaultBackground()));
            assertEquals(getFontSize(), syntaxInfo.getFontSize());
            syntaxInfo.processOutputInfo(new MarkupHandler() {

                @Override
                public void handleText(int startOffset, int endOffset) throws Exception {
                    builder.append("text=").append(text.substring(startOffset, endOffset)).append('\n');
                }

                @Override
                public void handleForeground(int foregroundId) throws Exception {
                    builder.append("foreground=").append(colorRegistry.dataById(foregroundId)).append(',');
                }

                @Override
                public void handleBackground(int backgroundId) throws Exception {
                    builder.append("background=").append(colorRegistry.dataById(backgroundId)).append(',');
                }

                @Override
                public void handleFont(int fontNameId) throws Exception {
                    assertEquals(1, fontNameId);
                }

                @Override
                public void handleStyle(int style) throws Exception {
                    builder.append("fontStyle=").append(style).append(',');
                }

                @Override
                public boolean canHandleMore() {
                    return true;
                }
            });
        }
    });
    SelectionModel selectionModel = editor.getSelectionModel();
    processor.collectTransferableData(myFixture.getFile(), editor, selectionModel.getBlockSelectionStarts(), selectionModel.getBlockSelectionEnds());
    return builder.toString();
}||||||||private String getSyntaxInfo() {
    final StringBuilder builder = new StringBuilder();
    final Editor editor = myFixture.getEditor();
    String selectedText = editor.getSelectionModel().getSelectedText(true);
    assertNotNull(selectedText);
    final String text = StringUtil.convertLineSeparators(selectedText);
    TextWithMarkupProcessor processor = new TextWithMarkupProcessor() {

        @Override
        void createResult(SyntaxInfo syntaxInfo) {
            final ColorRegistry colorRegistry = syntaxInfo.getColorRegistry();
            assertEquals(JBColor.BLACK, colorRegistry.dataById(syntaxInfo.getDefaultForeground()));
            assertEquals(JBColor.WHITE, colorRegistry.dataById(syntaxInfo.getDefaultBackground()));
            assertEquals(getFontSize(), syntaxInfo.getFontSize());
            syntaxInfo.processOutputInfo(new MarkupHandler() {

                @Override
                public void handleText(int startOffset, int endOffset) throws Exception {
                    builder.append("text=").append(text.substring(startOffset, endOffset)).append('\n');
                }

                @Override
                public void handleForeground(int foregroundId) throws Exception {
                    builder.append("foreground=").append(colorRegistry.dataById(foregroundId)).append(',');
                }

                @Override
                public void handleBackground(int backgroundId) throws Exception {
                    builder.append("background=").append(colorRegistry.dataById(backgroundId)).append(',');
                }

                @Override
                public void handleFont(int fontNameId) throws Exception {
                    assertEquals(1, fontNameId);
                }

                @Override
                public void handleStyle(int style) throws Exception {
                    builder.append("fontStyle=").append(style).append(',');
                }

                @Override
                public boolean canHandleMore() {
                    return true;
                }
            });
        }
    };
    SelectionModel selectionModel = editor.getSelectionModel();
    processor.collectTransferableData(myFixture.getFile(), editor, selectionModel.getBlockSelectionStarts(), selectionModel.getBlockSelectionEnds());
    return builder.toString();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															(MethodCallExpr
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
											(Parameter
												SimpleName
												(PrimitiveType
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
											(MarkerAnnotationExpr
												Name
											)
										)
										(MethodDeclaration
											(BlockStmt
												(ReturnStmt
													(BooleanLiteralExpr
													)
												)
											)
											(PrimitiveType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CharLiteralExpr
															)
															SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CharLiteralExpr
															)
															SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CharLiteralExpr
															)
															SimpleName
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
															SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(CharLiteralExpr
															)
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																(MethodCallExpr
																	StringLiteralExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(MethodDeclaration
												(BlockStmt
													(ReturnStmt
														(BooleanLiteralExpr
														)
													)
												)
												(PrimitiveType
												)
												SimpleName
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

