private static void appendTextToLabel(SimpleColoredComponent label, int problemsCount, String targetName, QuickFixAction[] fixes) {
    boolean hasFixesNonIntersectedFixes = fixes != null && fixes.length == 0;
    label.append(problemsCount + " problems" + (targetName == null ? "" : (" in " + targetName)) + (problemsCount > 1 && (fixes != null && fixes.length >= MAX_FIX_COUNT) ? "    Fix all:" : "") + (hasFixesNonIntersectedFixes ? ":" : ""));
    if (hasFixesNonIntersectedFixes) {
        label.append(" select a single problem to see its quick fixes");
    }
}||||||||private void appendTextToLabel(SimpleColoredComponent label, int problemsCount, QuickFixAction[] fixes) {
    boolean hasFixesNonIntersectedFixes = fixes != null && fixes.length == 0;
    label.append(problemsCount + " problems" + (myTargetName == null ? "" : (" in " + myTargetName)) + (problemsCount > 1 && (fixes != null && fixes.length >= MAX_FIX_COUNT) ? "    Fix all:" : "") + (hasFixesNonIntersectedFixes ? ":" : ""));
    if (hasFixesNonIntersectedFixes) {
        label.append(" select a single problem to see its quick fixes");
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							(EnclosedExpr
								(ConditionalExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(EnclosedExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								StringLiteralExpr
								StringLiteralExpr
							)
						)
					)
					(EnclosedExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
							(EnclosedExpr
								(ConditionalExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(EnclosedExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
									)
									StringLiteralExpr
								)
							)
						)
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									(EnclosedExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BinaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								StringLiteralExpr
								StringLiteralExpr
							)
						)
					)
					(EnclosedExpr
						(ConditionalExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							StringLiteralExpr
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

