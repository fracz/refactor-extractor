private GitUpdateResult handleRebaseFailure(GitRebaseProblemDetector rebaseConflictDetector, GitLineHandler pullHandler) {
    if (rebaseConflictDetector.isMergeConflict()) {
        LOG.info("handleRebaseFailure merge conflict");
        final boolean allMerged = new GitMergeConflictResolver(myProject, true, "Merge conflicts detected. Resolve them before continuing rebase.", "Can't continue rebase", "Then you may <b>continue rebase</b>. <br/> You also may <b>abort rebase</b> to restore the original branch and stop rebasing.") {

            @Override
            protected boolean proceedIfNothingToMerge() throws VcsException {
                return myRebaser.continueRebase(myRoot);
            }

            @Override
            protected boolean proceedAfterAllMerged() throws VcsException {
                return myRebaser.continueRebase(myRoot);
            }
        }.merge(Collections.singleton(myRoot));
        return allMerged ? GitUpdateResult.SUCCESS : GitUpdateResult.INCOMPLETE;
    } else {
        LOG.info("handleRebaseFailure error " + pullHandler.errors());
        GitUIUtil.notifyImportantError(myProject, "Error rebasing", GitUIUtil.stringifyErrors(pullHandler.errors()));
        return GitUpdateResult.ERROR;
    }
}||||||||private GitUpdateResult handleRebaseFailure(GitRebaseProblemDetector rebaseConflictDetector, GitLineHandler pullHandler) {
    if (rebaseConflictDetector.isMergeConflict()) {
        LOG.info("handleRebaseFailure merge conflict");
        final boolean allMerged = new MyConflictResolver(myProject, myRoot, myRebaser).merge();
        return allMerged ? GitUpdateResult.SUCCESS : GitUpdateResult.INCOMPLETE;
    } else {
        LOG.info("handleRebaseFailure error " + pullHandler.errors());
        GitUIUtil.notifyImportantError(myProject, "Error rebasing", GitUIUtil.stringifyErrors(pullHandler.errors()));
        return GitUpdateResult.ERROR;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
									StringLiteralExpr
									StringLiteralExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ReturnStmt
					(ConditionalExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(ObjectCreationExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ReturnStmt
					(ConditionalExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

