/**
 * Remove password stored in a password safe
 *
 * @param project   the project, that is used to ask for the master password if this is the first access to password safe
 * @param requester the requester class
 * @param key       the key for the password
 * @return the plugin key
 * @throws PasswordSafeException if password safe cannot be accessed
 */
void removePassword(@Nullable Project project, Class requester, String key) throws PasswordSafeException;||||||||/**
 * Remove password stored in a password safe
 *
 * @param project   the project, that is used to ask for the master password if this is the first access to password safe
 * @param requestor the requestor class
 * @param key       the key for the password
 * @return the plugin key
 * @throws PasswordSafeException if password safe cannot be accessed
 */
void removePassword(@Nullable Project project, @NotNull Class requestor, String key) throws PasswordSafeException;||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

