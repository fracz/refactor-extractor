public void onTestFailure(@NotNull final String testName, @NotNull final String localizedMessage, @Nullable final String stackTrace, final boolean isTestError, @Nullable final String comparisionFailureActualText, @Nullable final String comparisionFailureExpectedText) {
    SMRunnerUtil.addToInvokeLater(new Runnable() {

        public void run() {
            final boolean inDebugMode = SMTestRunnerConnectionUtil.isInDebugMode();
            final String fullTestName = getFullTestName(testName);
            SMTestProxy testProxy = getProxyByFullTestName(fullTestName);
            if (testProxy == null) {
                logProblem("Test wasn't started! TestFailure event: name = {" + testName + "}" + ", message = {" + localizedMessage + "}" + ", stackTrace = {" + stackTrace + "}. " + cannotFindFullTestNameMsg(fullTestName), inDebugMode);
                if (inDebugMode) {
                    return;
                } else {
                    // try to fix the problem:
                    if (!myFailedTestsSet.contains(testProxy)) {
                        // if hasn't been already reported
                        // 1. report
                        onTestStarted(testName, null);
                        // 2. add failure
                        testProxy = getProxyByFullTestName(fullTestName);
                    }
                }
            }
            // check if has been already processed
            if (myFailedTestsSet.contains(testProxy)) {
                // duplicate message
                logProblem("Duplicate failure for test [" + fullTestName + "]: msg = " + localizedMessage + ", stacktrace = " + stackTrace, inDebugMode);
                if (inDebugMode) {
                    return;
                }
            }
            if (testProxy == null) {
                return;
            }
            if (comparisionFailureActualText != null && comparisionFailureExpectedText != null) {
                testProxy.setTestComparisonFailed(localizedMessage, stackTrace, comparisionFailureActualText, comparisionFailureExpectedText);
            } else if (comparisionFailureActualText == null && comparisionFailureExpectedText == null) {
                testProxy.setTestFailed(localizedMessage, stackTrace, isTestError);
            } else {
                logProblem("Comparison failure actual and expected texts should be both null or not null.\n" + "Expected:\n" + comparisionFailureExpectedText + "\n" + "Actual:\n" + comparisionFailureActualText, inDebugMode);
            }
            myFailedTestsSet.add(testProxy);
            // fire event
            fireOnTestFailed(testProxy);
        }
    });
}||||||||public void onTestFailure(@NotNull final String testName, @NotNull final String localizedMessage, @Nullable final String stackTrace, final boolean isTestError, @Nullable final String comparisionFailureActualText, @Nullable final String comparisionFailureExpectedText) {
    SMRunnerUtil.addToInvokeLater(new Runnable() {

        public void run() {
            final boolean inDebugMode = SMTestRunnerConnectionUtil.isInDebugMode();
            final String fullTestName = getFullTestName(testName);
            SMTestProxy testProxy = getProxyByFullTestName(fullTestName);
            if (testProxy == null) {
                logProblem("Test wasn't started! TestFailure event: name = {" + testName + "}" + ", message = {" + localizedMessage + "}" + ", stackTrace = {" + stackTrace + "}. " + cannotFindFullTestNameMsg(fullTestName));
                if (inDebugMode) {
                    return;
                } else {
                    // try to fix the problem:
                    if (!myFailedTestsSet.contains(testProxy)) {
                        // if hasn't been already reported
                        // 1. report
                        onTestStarted(testName, null);
                        // 2. add failure
                        testProxy = getProxyByFullTestName(fullTestName);
                    }
                }
            }
            // check if has been already processed
            if (myFailedTestsSet.contains(testProxy)) {
                // duplicate message
                logProblem("Duplicate failure for test [" + fullTestName + "]: msg = " + localizedMessage + ", stacktrace = " + stackTrace);
                if (inDebugMode) {
                    return;
                }
            }
            if (testProxy == null) {
                return;
            }
            if (comparisionFailureActualText != null && comparisionFailureExpectedText != null) {
                testProxy.setTestComparisonFailed(localizedMessage, stackTrace, comparisionFailureActualText, comparisionFailureExpectedText);
            } else if (comparisionFailureActualText == null && comparisionFailureExpectedText == null) {
                testProxy.setTestFailed(localizedMessage, stackTrace, isTestError);
            } else {
                logProblem("Comparison failure actual and expected texts should be both null or not null.\n" + "Expected:\n" + comparisionFailureExpectedText + "\n" + "Actual:\n" + comparisionFailureActualText);
            }
            myFailedTestsSet.add(testProxy);
            // fire event
            fireOnTestFailed(testProxy);
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															NullLiteralExpr
															SimpleName
														)
														LineComment
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														LineComment
													)
												)
												LineComment
											)
										)
										(BlockStmt
											(ReturnStmt
											)
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
											SimpleName
										)
										LineComment
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
											)
										)
									)
								)
								LineComment
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	StringLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	(BinaryExpr
																		(BinaryExpr
																			(BinaryExpr
																				StringLiteralExpr
																				NameExpr
																					SimpleName
																			)
																			StringLiteralExpr
																		)
																		StringLiteralExpr
																	)
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(IfStmt
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															NameExpr
																SimpleName
															NullLiteralExpr
															SimpleName
														)
														LineComment
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
															)
														)
														LineComment
													)
												)
												LineComment
											)
										)
										(BlockStmt
											(ReturnStmt
											)
										)
									)
								)
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																StringLiteralExpr
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												NameExpr
													SimpleName
											)
											SimpleName
										)
										LineComment
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ReturnStmt
											)
										)
									)
								)
								LineComment
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ReturnStmt
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	StringLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															StringLiteralExpr
														)
														StringLiteralExpr
													)
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

