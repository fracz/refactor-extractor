@Override
public void processVariants(@NotNull PsiScopeProcessor processor) {
    DelegatingScopeProcessor filterProcessor = new DelegatingScopeProcessor(processor) {

        private PsiElement myResolveContext;

        private final Set<String> myVarNames = new THashSet<>();

        @Override
        public boolean execute(@NotNull final PsiElement element, @NotNull final ResolveState state) {
            return !shouldProcess(element) || super.execute(element, state);
        }

        private boolean shouldProcess(@NotNull PsiElement element) {
            if (element instanceof PsiVariable)
                return ensureNonShadowedVariable((PsiVariable) element);
            if (element instanceof PsiClass)
                return !seemsScrambled((PsiClass) element);
            if (element instanceof PsiPackage)
                return isQualified();
            if (element instanceof PsiMethod)
                return shouldProcessMethod((PsiMethod) element);
            return false;
        }

        private boolean ensureNonShadowedVariable(@NotNull PsiVariable element) {
            if (element instanceof PsiLocalVariable || element instanceof PsiParameter) {
                myVarNames.add(element.getName());
            }
            if (element instanceof PsiField && myVarNames.contains(element.getName())) {
                return false;
            }
            return true;
        }

        private boolean shouldProcessMethod(@NotNull PsiMethod method) {
            PsiReferenceExpressionImpl ref = PsiReferenceExpressionImpl.this;
            return !method.isConstructor() && LambdaUtil.isValidQualifier4InterfaceStaticMethodCall(method, ref, myResolveContext, PsiUtil.getLanguageLevel(ref));
        }

        @Override
        public void handleEvent(@NotNull Event event, Object associated) {
            if (event == JavaScopeProcessorEvent.SET_CURRENT_FILE_CONTEXT) {
                myResolveContext = (PsiElement) associated;
            }
            super.handleEvent(event, associated);
        }
    };
    PsiScopesUtil.resolveAndWalk(filterProcessor, this, null, true);
}||||||||@Override
public void processVariants(@NotNull PsiScopeProcessor processor) {
    DelegatingScopeProcessor filterProcessor = new DelegatingScopeProcessor(processor) {

        private PsiElement myResolveContext;

        private final Set<String> myVarNames = new THashSet<>();

        @Override
        public boolean execute(@NotNull final PsiElement element, @NotNull final ResolveState state) {
            return !shouldProcess(element) || super.execute(element, state);
        }

        private boolean shouldProcess(@NotNull PsiElement element) {
            if (element instanceof PsiVariable)
                return ensureNonShadowedVariable((PsiVariable) element);
            if (element instanceof PsiClass)
                return !seemsScrambled((PsiClass) element);
            if (element instanceof PsiPackage)
                return isQualified();
            if (element instanceof PsiMethod)
                return shouldProcessMethod((PsiMethod) element);
            return false;
        }

        private boolean ensureNonShadowedVariable(@NotNull PsiVariable element) {
            if (element instanceof PsiLocalVariable || element instanceof PsiParameter) {
                myVarNames.add(element.getName());
            }
            if (element instanceof PsiField && myVarNames.contains(element.getName())) {
                return false;
            }
            return true;
        }

        private boolean shouldProcessMethod(@NotNull PsiMethod method) {
            PsiReferenceExpressionImpl ref = PsiReferenceExpressionImpl.this;
            return !method.isConstructor() && hasValidQualifier(method, ref, myResolveContext);
        }

        @Override
        public void handleEvent(@NotNull Event event, Object associated) {
            if (event == JavaScopeProcessorEvent.SET_CURRENT_FILE_CONTEXT) {
                myResolveContext = (PsiElement) associated;
            }
            super.handleEvent(event, associated);
        }
    };
    PsiScopesUtil.resolveAndWalk(filterProcessor, this, null, true);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(FieldDeclaration
							(VariableDeclarator
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(UnaryExpr
											(MethodCallExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(BooleanLiteralExpr
											)
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ThisExpr
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ReturnStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(SuperExpr
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				NullLiteralExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(FieldDeclaration
							(VariableDeclarator
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(FieldDeclaration
							(VariableDeclarator
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ReturnStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
											(SuperExpr
											)
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(UnaryExpr
											(MethodCallExpr
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(IfStmt
									(InstanceOfExpr
										NameExpr
											SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(ReturnStmt
										(MethodCallExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ReturnStmt
											(BooleanLiteralExpr
											)
										)
									)
								)
								(ReturnStmt
									(BooleanLiteralExpr
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ThisExpr
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ReturnStmt
									(BinaryExpr
										(UnaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							(PrimitiveType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						(MethodDeclaration
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										(SuperExpr
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
							(Parameter
								(MarkerAnnotationExpr
									Name
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(Parameter
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							(MarkerAnnotationExpr
								Name
							)
						)
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ThisExpr
				)
				NullLiteralExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

