@Override
public void projectsIgnoredStateChanged(List<MavenProject> ignored, List<MavenProject> unignored, Object message) {
    if (!ignored.isEmpty())
        myLog += "ignored: " + format(ignored) + " ";
    if (!unignored.isEmpty())
        myLog += "unignored: " + format(unignored) + " ";
    if (ignored.isEmpty() && unignored.isEmpty())
        myLog += "empty ";
}||||||||@Override
public void projectsIgnoredStateChanged(List<MavenProject> ignored, List<MavenProject> unignored, boolean fromImport) {
    if (!ignored.isEmpty())
        myLog += "ignored: " + format(ignored) + " ";
    if (!unignored.isEmpty())
        myLog += "unignored: " + format(unignored) + " ";
    if (ignored.isEmpty() && unignored.isEmpty())
        myLog += "empty ";
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					StringLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						StringLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ExpressionStmt
				(AssignExpr
					NameExpr
						SimpleName
					StringLiteralExpr
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

