private ProjectStructureNode<ProjectEntityId> buildNode(@NotNull ProjectEntityData entity, @NotNull Map<ProjectEntityData, Pair<String, Collection<ProjectStructureNode>>> processed, int counter) {
    return null;
// We build tree node, its settings control and map them altogether. The only trick here is that nodes can reuse the same
// settings control (e.g. more than one node may have the same library as a dependency, so, library dependency node for
// every control will use the same settings control).
// TODO den uncomment
// ProjectStructureNode<ProjectEntityId> result = new ProjectStructureNode<ProjectEntityId>(myFactory.buildDescriptor(entity));
// Pair<String, Collection<ProjectStructureNode>> pair = processed.get(entity);
// if (pair == null) {
// String cardName = String.valueOf(counter);
// List<ProjectStructureNode> nodes = new ArrayList<ProjectStructureNode>();
// nodes.add(result);
// processed.put(entity, new Pair<String, Collection<ProjectStructureNode>>(cardName, nodes));
// GradleProjectStructureNodeSettings settings = myFactory.buildSettings(entity, myTreeModel, nodes);
// myCards.put(result, new Pair<String, GradleProjectStructureNodeSettings>(cardName, settings));
// mySettingsPanel.add(settings.getComponent(), cardName);
// }
// else {
// pair.second.add(result);
// for (ProjectStructureNode node : pair.second) {
// Pair<String, GradleProjectStructureNodeSettings> settingsPair = myCards.get(node);
// if (settingsPair != null) {
// myCards.put(result, settingsPair);
// break;
// }
// }
// }
// return result;
}||||||||private ProjectStructureNode<ProjectEntityId> buildNode(@NotNull ProjectEntityData entity, @NotNull Map<ProjectEntityData, Pair<String, Collection<ProjectStructureNode>>> processed, int counter) {
    // We build tree node, its settings control and map them altogether. The only trick here is that nodes can reuse the same
    // settings control (e.g. more than one node may have the same library as a dependency, so, library dependency node for
    // every control will use the same settings control).
    ProjectStructureNode<ProjectEntityId> result = new ProjectStructureNode<ProjectEntityId>(myFactory.buildDescriptor(entity));
    Pair<String, Collection<ProjectStructureNode>> pair = processed.get(entity);
    if (pair == null) {
        String cardName = String.valueOf(counter);
        List<ProjectStructureNode> nodes = new ArrayList<ProjectStructureNode>();
        nodes.add(result);
        processed.put(entity, new Pair<String, Collection<ProjectStructureNode>>(cardName, nodes));
        GradleProjectStructureNodeSettings settings = myFactory.buildSettings(entity, myTreeModel, nodes);
        myCards.put(result, new Pair<String, GradleProjectStructureNodeSettings>(cardName, settings));
        mySettingsPanel.add(settings.getComponent(), cardName);
    } else {
        pair.second.add(result);
        for (ProjectStructureNode node : pair.second) {
            Pair<String, GradleProjectStructureNodeSettings> settingsPair = myCards.get(node);
            if (settingsPair != null) {
                myCards.put(result, settingsPair);
                break;
            }
        }
    }
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
				(ClassOrInterfaceType
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

