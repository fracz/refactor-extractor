@Override
protected boolean doQuickImport(VirtualFile file, WizardContext wizardContext) {
    return false;
// TODO den uncomment
// AddModuleWizard dialog = new AddModuleWizard(null, file.getPath(), new AbstractExternalProjectImportProvider(getBuilder()));
// getBuilder().prepare(wizardContext);
// getBuilder().setCurrentProjectPath(file.getPath());
// dialog.getWizardContext().setProjectBuilder(getBuilder());
// dialog.navigateToStep(new Function<Step, Boolean>() {
// @Override
// public Boolean fun(Step step) {
// return step instanceof SelectExternalProjectStepBase;
// }
// });
// dialog.doNextAction();
// if (StringUtil.isEmpty(wizardContext.getProjectName())) {
// final String projectName = dialog.getWizardContext().getProjectName();
// if (!StringUtil.isEmpty(projectName)) {
// wizardContext.setProjectName(projectName);
// }
// }
// 
// dialog.show();
// return dialog.isOK();
}||||||||@Override
protected boolean doQuickImport(VirtualFile file, WizardContext wizardContext) {
    AddModuleWizard dialog = new AddModuleWizard(null, file.getPath(), new AbstractExternalProjectImportProvider(getBuilder()));
    getBuilder().prepare(wizardContext);
    getBuilder().setCurrentProjectPath(file.getPath());
    dialog.getWizardContext().setProjectBuilder(getBuilder());
    dialog.navigateToStep(new Function<Step, Boolean>() {

        @Override
        public Boolean fun(Step step) {
            return step instanceof SelectExternalProjectStepBase;
        }
    });
    dialog.doNextAction();
    if (StringUtil.isEmpty(wizardContext.getProjectName())) {
        final String projectName = dialog.getWizardContext().getProjectName();
        if (!StringUtil.isEmpty(projectName)) {
            wizardContext.setProjectName(projectName);
        }
    }
    dialog.show();
    return dialog.isOK();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NullLiteralExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

