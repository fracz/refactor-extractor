public void testMultithreading() throws Exception {
    runPythonTest(new PyDebuggerTask("/debug", "test_multithread.py") {

        @Override
        public void before() throws Exception {
            toggleBreakpoint(getScriptPath(), 9);
            toggleBreakpoint(getScriptPath(), 13);
        }

        @Override
        public void testing() throws Exception {
            waitForPause();
            eval("y").hasValue("2");
            resume();
            waitForPause();
            eval("z").hasValue("102");
            resume();
        }

        @Override
        public Set<String> getTags() {
            // TODO: fix that for PyPy
            return ImmutableSet.of("-pypy");
        }
    });
}||||||||public void testMultithreading() throws Exception {
    runPythonTest(new PyDebuggerTask("/debug", "test_multithread.py") {

        @Override
        public void before() throws Exception {
            toggleBreakpoint(getScriptPath(), 9);
            toggleBreakpoint(getScriptPath(), 13);
        }

        @Override
        public void testing() throws Exception {
            waitForPause();
            eval("y").hasValue("2");
            resume();
            waitForPause();
            eval("z").hasValue("102");
            resume();
        }

        @NotNull
        @Override
        public Set<String> getTags() {
            // TODO: fix that for PyPy
            return ImmutableSet.of("-pypy");
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									(MethodCallExpr
										StringLiteralExpr
										SimpleName
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									StringLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					StringLiteralExpr
					StringLiteralExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

