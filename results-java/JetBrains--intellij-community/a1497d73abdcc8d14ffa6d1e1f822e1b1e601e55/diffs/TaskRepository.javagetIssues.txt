/**
 * Get issues from the repository. If query is null, return issues should assigned to current user only.
 *
 * @param query repository specific.
 * @param max maximum issues number to return
 * @param since last updated timestamp. If 0, all issues should be returned.
 * @return found issues
 * @throws Exception
 */
public abstract Task[] getIssues(@Nullable String query, int max, long since) throws Exception;||||||||/**
 * Get issues from the repository. If query is null, return issues should assigned to current user only.
 *
 * @param query repository specific.
 * @param max maximum issues number to return
 * @param since last updated timestamp. If 0, all issues should be returned.
 * @return found issues
 * @throws Exception
 */
public abstract List<Task> getIssues(@Nullable String query, int max, long since) throws Exception;||||||||(MethodDeclaration
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

