@Nullable
@Override
protected TypeConversionDescriptorBase findConversionForVariableReference(@NotNull PsiReferenceExpression referenceExpression, @NotNull PsiVariable psiVariable, PsiExpression context) {
    return new FunctionalInterfaceTypeConversionDescriptor("apply", "test");
}||||||||@Nullable
@Override
protected TypeConversionDescriptorBase findConversionForVariableReference(@NotNull PsiReferenceExpression referenceExpression, @NotNull PsiVariable psiVariable, PsiExpression context) {
    return new FunctionalInterfaceTypeConversionDescriptor("apply", "test", JAVA_PREDICATE);
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				StringLiteralExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				StringLiteralExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)

