private void startWhenFrameActive() {
    myLog.setText(null);
    addInfo("Waiting for IDE frame activation", -1, MESSAGE_COLOR);
    myRunner = new PlaybackRunner(myCodeEditor.getText(), this, false, true);
    VirtualFile file = pathToFile();
    if (file != null) {
        VirtualFile scriptDir = file.getParent();
        if (scriptDir != null) {
            myRunner.setScriptDir(new File(scriptDir.getPresentableUrl()));
        }
    }
    new Thread() {

        @Override
        public void run() {
            new WaitFor() {

                protected boolean condition() {
                    return KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow() instanceof IdeFrame || myRunner == null;
                }
            };
            if (myRunner == null) {
                _message("Script stopped", -1);
                return;
            }
            _message("Starting script...", -1);
            try {
                sleep(1000);
            } catch (InterruptedException e) {
            }
            if (myRunner == null) {
                _message("Script stopped", -1);
                return;
            }
            final PlaybackRunner runner = myRunner;
            myRunner.run().doWhenProcessed(new Runnable() {

                public void run() {
                    if (runner == myRunner) {
                        myRunner = null;
                    }
                }
            });
        }
    }.start();
}||||||||private void startWhenFrameActive() {
    myLog.setText(null);
    addInfo("Waiting for IDE frame activation", -1, MESSAGE_COLOR);
    myRunner = new PlaybackRunner(myCodeEditor.getText(), this, false, true);
    VirtualFile file = pathToFile();
    if (file != null) {
        VirtualFile scriptDir = file.getParent();
        if (scriptDir != null) {
            myRunner.setScriptDir(new File(scriptDir.getPresentableUrl()));
        }
    }
    new Thread() {

        @Override
        public void run() {
            new WaitFor() {

                protected boolean condition() {
                    return KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow() instanceof IdeFrame || myRunner == null;
                }
            };
            if (myRunner == null) {
                message(null, "Script stopped", -1, Type.message, true);
                return;
            }
            message(null, "Starting script...", -1, Type.message, true);
            try {
                sleep(1000);
            } catch (InterruptedException e) {
            }
            if (myRunner == null) {
                message(null, "Script stopped", -1, Type.message, true);
                return;
            }
            final PlaybackRunner runner = myRunner;
            myRunner.run().doWhenProcessed(new Runnable() {

                public void run() {
                    if (runner == myRunner) {
                        myRunner = null;
                    }
                }
            });
        }
    }.start();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ThisExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(BinaryExpr
													(InstanceOfExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											StringLiteralExpr
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				(UnaryExpr
					(IntegerLiteralExpr
					)
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ThisExpr
					)
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ReturnStmt
												(BinaryExpr
													(InstanceOfExpr
														(MethodCallExpr
															SimpleName
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
										(PrimitiveType
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NullLiteralExpr
											StringLiteralExpr
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									NullLiteralExpr
									StringLiteralExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
							(TryStmt
								(CatchClause
									(BlockStmt
									)
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NullLiteralExpr
											StringLiteralExpr
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
											SimpleName
										)
									)
									(ReturnStmt
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
													)
												)
											)
											(VoidType
											)
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

