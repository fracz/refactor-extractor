/**
 * Get elements by name from contributors.
 *
 * @param name a name
 * @param checkBoxState if true, non-project files are considered as well
 * @param pattern a pattern to use
 * @return a list of navigation items from contributors for
 * which {@link #acceptItem(NavigationItem) returns true.
 */
public Object[] getElementsByName(String name, boolean checkBoxState, final String pattern) {
    List<NavigationItem> items = null;
    final boolean dumb = DumbService.getInstance(myProject).isDumb();
    for (ChooseByNameContributor contributor : myContributors) {
        try {
            if (dumb && !(contributor instanceof DumbAware)) {
                continue;
            }
            for (NavigationItem item : contributor.getItemsByName(name, pattern, myProject, checkBoxState)) {
                if (acceptItem(item)) {
                    if (items == null) {
                        items = new ArrayList<NavigationItem>(2);
                    }
                    items.add(item);
                }
            }
        } catch (ProcessCanceledException ex) {
        // index corruption detected, ignore
        } catch (Exception ex) {
            LOG.error(ex);
        }
    }
    return items == null ? ArrayUtil.EMPTY_OBJECT_ARRAY : ArrayUtil.toObjectArray(items);
}||||||||/**
 * Get elements by name from contributors.
 *
 * @param name a name
 * @param checkBoxState if true, non-project files are considered as well
 * @param pattern a pattern to use
 * @return a list of navigation items from contributors for
 * which {@link #acceptItem(NavigationItem) returns true.
 */
public Object[] getElementsByName(String name, boolean checkBoxState, final String pattern) {
    List<NavigationItem> items = null;
    final boolean dumb = DumbService.getInstance(myProject).isDumb();
    for (ChooseByNameContributor contributor : myContributors) {
        try {
            if (dumb && !DumbService.isDumbAware(contributor)) {
                continue;
            }
            for (NavigationItem item : contributor.getItemsByName(name, pattern, myProject, checkBoxState)) {
                if (acceptItem(item)) {
                    if (items == null) {
                        items = new ArrayList<NavigationItem>(2);
                    }
                    items.add(item);
                }
            }
        } catch (ProcessCanceledException ex) {
        // index corruption detected, ignore
        } catch (Exception ex) {
            LOG.error(ex);
        }
    }
    return items == null ? ArrayUtil.EMPTY_OBJECT_ARRAY : ArrayUtil.toObjectArray(items);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(EnclosedExpr
										(InstanceOfExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							(BlockStmt
								(ContinueStmt
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ObjectCreationExpr
															(IntegerLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ContinueStmt
								)
							)
						)
						(ForeachStmt
							(BlockStmt
								(IfStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(ObjectCreationExpr
															(IntegerLiteralExpr
															)
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(ConditionalExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ArrayType
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

