public void markEverythingDirty() {
    if (!myIsInitialized || myIsDisposed || myProject.isDisposed())
        return;
    synchronized (myScopes) {
        // avoid having leftover scopes or invalid roots in scopes after a directory mapping change (IDEADEV-17166)
        myScopes.clear();
    }
    DefaultVcsRootPolicy.getInstance(myProject).markDefaultRootsDirty(this);
    synchronized (myScopes) {
        myEverythingDirty = true;
    }
    myChangeListManager.scheduleUpdate();
}||||||||public void markEverythingDirty() {
    if (myProject.isDisposed())
        return;
    final boolean done = myLife.doIfAlive(new Runnable() {

        public void run() {
            myScopes.markEverythingDirty();
        }
    });
    if (done) {
        myChangeListManager.scheduleUpdate();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(UnaryExpr
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				(ThisExpr
				)
				SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

