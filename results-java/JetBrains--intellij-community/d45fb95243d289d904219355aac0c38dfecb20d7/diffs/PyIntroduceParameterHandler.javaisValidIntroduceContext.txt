protected boolean isValidIntroduceContext(PsiElement element) {
    if (element != null) {
        final PyFunction function = PsiTreeUtil.getParentOfType(element, PyFunction.class);
        final ScopeOwner scopeOwner = ScopeUtil.getScopeOwner(element);
        final boolean[] isValid = { true };
        if (scopeOwner != null) {
            new PyRecursiveElementVisitor() {

                @Override
                public void visitPyReferenceExpression(PyReferenceExpression node) {
                    super.visitPyReferenceExpression(node);
                    if (ControlFlowCache.getScope(scopeOwner).containsDeclaration(node.getName())) {
                        isValid[0] = false;
                    }
                }
            }.visitElement(element);
        }
        final PyStatement nonlocalStatement = PsiTreeUtil.getParentOfType(element, PyNonlocalStatement.class, PyGlobalStatement.class);
        return function != null && !isResolvedToParameter(element) && isValid[0] && nonlocalStatement == null;
    }
    return false;
}||||||||protected boolean isValidIntroduceContext(PsiElement element) {
    if (element != null) {
        final PyFunction function = PsiTreeUtil.getParentOfType(element, PyFunction.class);
        final ScopeOwner scopeOwner = ScopeUtil.getScopeOwner(element);
        final boolean[] isValid = { true };
        if (scopeOwner != null) {
            new PyRecursiveElementVisitor() {

                @Override
                public void visitPyReferenceExpression(PyReferenceExpression node) {
                    super.visitPyReferenceExpression(node);
                    if (ControlFlowCache.getScope(scopeOwner).containsDeclaration(node.getName())) {
                        isValid[0] = false;
                    }
                }
            }.visitElement(element);
        }
        final PyStatement nonlocalStatement = PsiTreeUtil.getParentOfType(element, PyNonlocalStatement.class, PyGlobalStatement.class);
        final PyStatementList statementList = PsiTreeUtil.getParentOfType(element, PyStatementList.class);
        return function != null && !isResolvedToParameter(element) && isValid[0] && nonlocalStatement == null && statementList != null;
    }
    return false;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								(BooleanLiteralExpr
								)
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(SuperExpr
													)
												)
											)
											(IfStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(BooleanLiteralExpr
															)
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(ArrayAccessExpr
								(IntegerLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayInitializerExpr
								(BooleanLiteralExpr
								)
							)
							SimpleName
							(ArrayType
								(PrimitiveType
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(SuperExpr
													)
												)
											)
											(IfStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															(BooleanLiteralExpr
															)
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(UnaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

