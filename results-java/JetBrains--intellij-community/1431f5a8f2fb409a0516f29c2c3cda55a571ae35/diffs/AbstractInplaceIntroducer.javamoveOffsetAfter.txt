@Override
protected void moveOffsetAfter(boolean success) {
    if (success) {
        if (getLocalVariable() == null && myExpr == null || getInputName() == null || getLocalVariable() != null && !getLocalVariable().isValid() || myExpr != null && !myExpr.isValid()) {
            super.moveOffsetAfter(false);
            return;
        }
        performIntroduce();
        saveSettings(getVariable());
    }
    if (getLocalVariable() != null && getLocalVariable().isValid()) {
        myEditor.getCaretModel().moveToOffset(getLocalVariable().getTextOffset());
        myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
    } else if (getExprMarker() != null) {
        myEditor.getCaretModel().moveToOffset(getExprMarker().getStartOffset());
        myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
    }
    super.moveOffsetAfter(success);
    if (success) {
        performPostIntroduceTasks();
    }
}||||||||@Override
protected void moveOffsetAfter(boolean success) {
    if (success) {
        if (getLocalVariable() == null && myExpr == null || getInputName() == null || getLocalVariable() != null && !getLocalVariable().isValid() || myExpr != null && !myExpr.isValid()) {
            super.moveOffsetAfter(false);
            return;
        }
        if (getLocalVariable() != null) {
            new WriteCommandAction(myProject, getCommandName(), getCommandName()) {

                @Override
                protected void run(Result result) throws Throwable {
                    getLocalVariable().setName(myLocalName);
                }
            }.execute();
        }
        performIntroduce();
        saveSettings(getVariable());
    }
    if (getLocalVariable() != null && getLocalVariable().isValid()) {
        myEditor.getCaretModel().moveToOffset(getLocalVariable().getTextOffset());
        myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
    } else if (getExprMarker() != null) {
        myEditor.getCaretModel().moveToOffset(getExprMarker().getStartOffset());
        myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);
    }
    super.moveOffsetAfter(success);
    if (success) {
        performPostIntroduceTasks();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
										)
										NullLiteralExpr
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									NullLiteralExpr
								)
							)
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(SuperExpr
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
										)
										NullLiteralExpr
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									NullLiteralExpr
								)
							)
							(BinaryExpr
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									NullLiteralExpr
								)
								(UnaryExpr
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(SuperExpr
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
										(MarkerAnnotationExpr
											Name
										)
									)
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				(SuperExpr
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

