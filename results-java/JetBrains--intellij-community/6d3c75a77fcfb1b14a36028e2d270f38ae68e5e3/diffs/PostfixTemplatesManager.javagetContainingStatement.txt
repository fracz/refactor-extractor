@Nullable
@Override
public PsiStatement getContainingStatement(@NotNull PrefixExpressionContext expressionContext) {
    PsiStatement statement = super.getContainingStatement(expressionContext);
    if (statement != null) {
        // ignore expression-statements produced by broken expr like '2.var + 2'
        assert lhsStatement.isValid() : "lhsStatement.isValid()";
        if (isComplexRhs && (statement == lhsStatement))
            return null;
    }
    return statement;
}||||||||@Nullable
@Override
public PsiStatement getContainingStatement(@NotNull PrefixExpressionContext expressionContext) {
    PsiStatement statement = super.getContainingStatement(expressionContext);
    if (statement != null && lhsStatement.isValid()) /* when is not fixed yet */
    {
        // assert lhsStatement.isValid() : "lhsStatement.isValid()";
        if (isComplexRhs && (statement == lhsStatement))
            return null;
    }
    return statement;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(SuperExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(AssertStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						NullLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						(SuperExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						NullLiteralExpr
					)
					LineComment
				)
				(BlockComment
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		(MarkerAnnotationExpr
			Name
		)
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(MarkerAnnotationExpr
		Name
	)
)

