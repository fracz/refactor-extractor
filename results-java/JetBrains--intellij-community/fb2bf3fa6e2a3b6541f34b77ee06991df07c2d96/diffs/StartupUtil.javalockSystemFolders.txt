private static synchronized boolean lockSystemFolders(String[] args) {
    if (ourSocketLock != null) {
        throw new AssertionError();
    }
    ourSocketLock = new SocketLock(PathManager.getConfigPath(), PathManager.getSystemPath());
    SocketLock.ActivateStatus status;
    try {
        status = ourSocketLock.lock(args);
    } catch (Exception e) {
        Main.showMessage("Cannot Lock System Folders", e);
        return false;
    }
    if (status == SocketLock.ActivateStatus.NO_INSTANCE) {
        ShutDownTracker.getInstance().registerShutdownTask(new Runnable() {

            @SuppressWarnings("AssignmentToStaticFieldFromInstanceMethod")
            @Override
            public void run() {
                synchronized (StartupUtil.class) {
                    ourSocketLock.dispose();
                    ourSocketLock = null;
                }
            }
        });
        return true;
    } else if (Main.isHeadless() || status == SocketLock.ActivateStatus.CANNOT_ACTIVATE) {
        String message = "Only one instance of " + ApplicationNamesInfo.getInstance().getFullProductName() + " can be run at a time.";
        Main.showMessage("Too Many Instances", message, true);
    }
    if (status == SocketLock.ActivateStatus.ACTIVATED) {
        System.out.println("Already running");
        System.exit(0);
    }
    return false;
}||||||||@NotNull
private static synchronized ActivationResult lockSystemFolders(String[] args) {
    if (ourSocketLock != null) {
        throw new AssertionError();
    }
    ourSocketLock = new SocketLock(PathManager.getConfigPath(), PathManager.getSystemPath());
    SocketLock.ActivateStatus status;
    try {
        status = ourSocketLock.lock(args);
    } catch (Exception e) {
        Main.showMessage("Cannot Lock System Folders", e);
        return ActivationResult.FAILED;
    }
    if (status == SocketLock.ActivateStatus.NO_INSTANCE) {
        ShutDownTracker.getInstance().registerShutdownTask(() -> {
            // noinspection SynchronizeOnThis
            synchronized (StartupUtil.class) {
                ourSocketLock.dispose();
                ourSocketLock = null;
            }
        });
        return ActivationResult.STARTED;
    } else if (status == SocketLock.ActivateStatus.ACTIVATED) {
        // noinspection UseOfSystemOutOrSystemErr
        System.out.println("Already running");
        return ActivationResult.ACTIVATED;
    } else if (Main.isHeadless() || status == SocketLock.ActivateStatus.CANNOT_ACTIVATE) {
        String message = "Only one instance of " + ApplicationNamesInfo.getInstance().getFullProductName() + " can be run at a time.";
        Main.showMessage("Too Many Instances", message, true);
    }
    return ActivationResult.FAILED;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									StringLiteralExpr
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(SynchronizedStmt
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(VoidType
								)
								SimpleName
								(SingleMemberAnnotationExpr
									StringLiteralExpr
									Name
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										StringLiteralExpr
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								StringLiteralExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						LineComment
					)
					(ReturnStmt
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(LambdaExpr
							(BlockStmt
								(SynchronizedStmt
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
									)
									(ClassExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
									LineComment
								)
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ReturnStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

