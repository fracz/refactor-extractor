void registerProblems() {
    final UnusedLocalFilter[] filters = Extensions.getExtensions(UnusedLocalFilter.EP_NAME);
    // Register problems
    Set<PyFunction> functionsWithInheritors = new HashSet<PyFunction>();
    for (PsiElement element : myUnusedElements) {
        boolean ignoreUnused = false;
        for (UnusedLocalFilter filter : filters) {
            if (filter.ignoreUnused(element)) {
                ignoreUnused = true;
            }
        }
        if (ignoreUnused)
            continue;
        // Local function
        if (element instanceof PyFunction) {
            final PsiElement nameIdentifier = ((PyFunction) element).getNameIdentifier();
            registerWarning(nameIdentifier == null ? element : nameIdentifier, PyBundle.message("INSP.unused.locals.local.function.isnot.used", ((PyFunction) element).getName()));
        } else // Local variable or parameter
        {
            String name = element.getText();
            if (element instanceof PyNamedParameter || element.getParent() instanceof PyNamedParameter) {
                PyNamedParameter namedParameter = element instanceof PyNamedParameter ? (PyNamedParameter) element : (PyNamedParameter) element.getParent();
                name = namedParameter.getName();
                if (PsiTreeUtil.getParentOfType(element, PyClass.class) != null) {
                    // When function is inside a class, first parameter may be either self or cls which is always 'used'.
                    final PyFunction method = PsiTreeUtil.getParentOfType(element, PyFunction.class);
                    if (method != null && !PyNames.STATICMETHOD.equals(PyUtil.getClassOrStaticMethodDecorator(method))) {
                        final PsiElement parent = namedParameter.getParent();
                        if (parent instanceof PyParameterList && ((PyParameterList) parent).getParameters()[0] == namedParameter) {
                            continue;
                        }
                    }
                }
                if (myIgnoreLambdaParameters && PsiTreeUtil.getParentOfType(element, Callable.class) instanceof PyLambdaExpression) {
                    continue;
                }
                boolean mayBeField = false;
                PyClass containingClass = null;
                PyParameterList paramList = PsiTreeUtil.getParentOfType(element, PyParameterList.class);
                if (paramList != null && paramList.getParent() instanceof PyFunction) {
                    final PyFunction func = (PyFunction) paramList.getParent();
                    containingClass = func.getContainingClass();
                    if (PyNames.INIT.equals(func.getName()) && containingClass != null) {
                        if (!namedParameter.isKeywordContainer() && !namedParameter.isPositionalContainer()) {
                            mayBeField = true;
                        }
                    } else if (ignoreUnusedParameters(func, functionsWithInheritors)) {
                        continue;
                    }
                }
                final LocalQuickFix[] fixes = mayBeField ? new LocalQuickFix[] { new AddFieldQuickFix(name, containingClass, name) } : LocalQuickFix.EMPTY_ARRAY;
                registerWarning(element, PyBundle.message("INSP.unused.locals.parameter.isnot.used", name), fixes);
            } else {
                if (myIgnoreTupleUnpacking && isTupleUnpacking(element)) {
                    continue;
                }
                final PyForStatement forStatement = PyForStatementNavigator.getPyForStatementByIterable(element);
                if (forStatement != null) {
                    if (!myIgnoreRangeIterationVariables || !isRangeIteration(forStatement)) {
                        registerProblem(element, PyBundle.message("INSP.unused.locals.local.variable.isnot.used", name), ProblemHighlightType.LIKE_UNUSED_SYMBOL, null, new ReplaceWithWildCard());
                    }
                } else {
                    registerWarning(element, PyBundle.message("INSP.unused.locals.local.variable.isnot.used", name));
                }
            }
        }
    }
}||||||||void registerProblems() {
    final UnusedLocalFilter[] filters = Extensions.getExtensions(UnusedLocalFilter.EP_NAME);
    // Register problems
    Set<PyFunction> functionsWithInheritors = new HashSet<PyFunction>();
    for (PsiElement element : myUnusedElements) {
        boolean ignoreUnused = false;
        for (UnusedLocalFilter filter : filters) {
            if (filter.ignoreUnused(element)) {
                ignoreUnused = true;
            }
        }
        if (ignoreUnused)
            continue;
        // Local function
        if (element instanceof PyFunction) {
            final PsiElement nameIdentifier = ((PyFunction) element).getNameIdentifier();
            registerWarning(nameIdentifier == null ? element : nameIdentifier, PyBundle.message("INSP.unused.locals.local.function.isnot.used", ((PyFunction) element).getName()));
        } else // Local variable or parameter
        {
            String name = element.getText();
            if (element instanceof PyNamedParameter || element.getParent() instanceof PyNamedParameter) {
                PyNamedParameter namedParameter = element instanceof PyNamedParameter ? (PyNamedParameter) element : (PyNamedParameter) element.getParent();
                name = namedParameter.getName();
                if (PsiTreeUtil.getParentOfType(element, PyClass.class) != null) {
                    // When function is inside a class, first parameter may be either self or cls which is always 'used'.
                    final PyFunction method = PsiTreeUtil.getParentOfType(element, PyFunction.class);
                    if (method != null && method.getModifier() != PyFunction.Modifier.STATICMETHOD) {
                        final PsiElement parent = namedParameter.getParent();
                        if (parent instanceof PyParameterList && ((PyParameterList) parent).getParameters()[0] == namedParameter) {
                            continue;
                        }
                    }
                }
                if (myIgnoreLambdaParameters && PsiTreeUtil.getParentOfType(element, Callable.class) instanceof PyLambdaExpression) {
                    continue;
                }
                boolean mayBeField = false;
                PyClass containingClass = null;
                PyParameterList paramList = PsiTreeUtil.getParentOfType(element, PyParameterList.class);
                if (paramList != null && paramList.getParent() instanceof PyFunction) {
                    final PyFunction func = (PyFunction) paramList.getParent();
                    containingClass = func.getContainingClass();
                    if (PyNames.INIT.equals(func.getName()) && containingClass != null) {
                        if (!namedParameter.isKeywordContainer() && !namedParameter.isPositionalContainer()) {
                            mayBeField = true;
                        }
                    } else if (ignoreUnusedParameters(func, functionsWithInheritors)) {
                        continue;
                    }
                }
                final LocalQuickFix[] fixes = mayBeField ? new LocalQuickFix[] { new AddFieldQuickFix(name, containingClass, name) } : LocalQuickFix.EMPTY_ARRAY;
                registerWarning(element, PyBundle.message("INSP.unused.locals.parameter.isnot.used", name), fixes);
            } else {
                if (myIgnoreTupleUnpacking && isTupleUnpacking(element)) {
                    continue;
                }
                final PyForStatement forStatement = PyForStatementNavigator.getPyForStatementByIterable(element);
                if (forStatement != null) {
                    if (!myIgnoreRangeIterationVariables || !isRangeIteration(forStatement)) {
                        registerProblem(element, PyBundle.message("INSP.unused.locals.local.variable.isnot.used", name), ProblemHighlightType.LIKE_UNUSED_SYMBOL, null, new ReplaceWithWildCard());
                    }
                } else {
                    registerWarning(element, PyBundle.message("INSP.unused.locals.local.variable.isnot.used", name));
                }
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(ContinueStmt
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(InstanceOfExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															StringLiteralExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NullLiteralExpr
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												(InstanceOfExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(UnaryExpr
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														(InstanceOfExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(BinaryExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																(MethodCallExpr
																	SimpleName
																	(EnclosedExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ContinueStmt
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(InstanceOfExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(InstanceOfExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(CastExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(IfStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
												(BlockStmt
													(ContinueStmt
													)
												)
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(BooleanLiteralExpr
																)
															)
														)
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ArrayCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
													(ArrayInitializerExpr
														(ObjectCreationExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(ArrayCreationLevel
													)
												)
											)
											SimpleName
											(ArrayType
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BooleanLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
						)
					)
					NameExpr
						SimpleName
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(ContinueStmt
					)
				)
				(IfStmt
					(InstanceOfExpr
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(InstanceOfExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													StringLiteralExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												(UnaryExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															StringLiteralExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NullLiteralExpr
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
													)
												)
											)
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												(InstanceOfExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(CastExpr
													NameExpr
														SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
										NullLiteralExpr
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											LineComment
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BinaryExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(FieldAccessExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(IfStmt
													(BinaryExpr
														(InstanceOfExpr
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
														(BinaryExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																(MethodCallExpr
																	SimpleName
																	(EnclosedExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																	)
																)
															)
															NameExpr
																SimpleName
														)
													)
													(BlockStmt
														(ContinueStmt
														)
													)
												)
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(InstanceOfExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ContinueStmt
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BooleanLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											NullLiteralExpr
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(InstanceOfExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(CastExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
											(IfStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
												(BlockStmt
													(ContinueStmt
													)
												)
											)
											(BlockStmt
												(IfStmt
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(UnaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(BooleanLiteralExpr
																)
															)
														)
													)
												)
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ConditionalExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ArrayCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
													(ArrayInitializerExpr
														(ObjectCreationExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													(ArrayCreationLevel
													)
												)
											)
											SimpleName
											(ArrayType
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											StringLiteralExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
						LineComment
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ConditionalExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NullLiteralExpr
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										(EnclosedExpr
											(CastExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

