public boolean convertLocalToField(final PsiLocalVariable local, final Editor editor) {
    PsiClass aClass;
    boolean tempIsStatic = myIsConstant;
    PsiElement parent = local.getParent();
    while (true) {
        if (parent instanceof PsiClass && !(parent instanceof PsiAnonymousClass)) {
            aClass = (PsiClass) parent;
            break;
        }
        if (parent instanceof PsiFile && PsiUtil.isInJspFile(parent)) {
            String message = RefactoringBundle.message("error.not.supported.for.jsp", REFACTORING_NAME);
            CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, HelpID.LOCAL_TO_FIELD, myProject);
            return false;
        }
        if (parent instanceof PsiModifierListOwner && ((PsiModifierListOwner) parent).hasModifierProperty(PsiModifier.STATIC)) {
            tempIsStatic = true;
        }
        parent = parent.getParent();
    }
    final boolean isStatic = tempIsStatic;
    PsiExpression[] occurences = CodeInsightUtil.findReferenceExpressions(RefactoringUtil.getVariableScope(local), local);
    if (editor != null) {
        RefactoringUtil.highlightAllOccurences(myProject, occurences, editor);
    }
    final BaseExpressionToFieldHandler.Settings settings = showRefactoringDialog(aClass, local, occurences, isStatic);
    if (settings == null)
        return false;
    // LocalToFieldDialog dialog = new LocalToFieldDialog(project, aClass, local, isStatic);
    final String variableName = local.getName();
    final String fieldName = settings.getFieldName();
    final BaseExpressionToFieldHandler.InitializationPlace initializerPlace = settings.getInitializerPlace();
    final boolean declareFinal = settings.isDeclareFinal();
    @Modifier final String fieldVisibility = settings.getFieldVisibility();
    final PsiClass destinationClass = settings.getDestinationClass();
    boolean rebindNeeded = false;
    if (destinationClass != null) {
        aClass = destinationClass;
        rebindNeeded = true;
    }
    final boolean annotateAsNonNls = settings.isAnnotateAsNonNls();
    final PsiClass aaClass = aClass;
    final boolean rebindNeeded1 = rebindNeeded;
    final Runnable runnable = new Runnable() {

        public void run() {
            try {
                final boolean rebindNeeded2 = !variableName.equals(fieldName) || rebindNeeded1;
                final PsiReference[] refs;
                if (rebindNeeded2) {
                    refs = ReferencesSearch.search(local, GlobalSearchScope.projectScope(myProject), false).toArray(new PsiReference[0]);
                } else {
                    refs = null;
                }
                final PsiMethod enclosingConstructor = BaseExpressionToFieldHandler.getEnclosingConstructor(aaClass, local);
                PsiField field = settings.isIntroduceEnumConstant() ? EnumConstantsUtil.createEnumConstant(aaClass, local, fieldName) : createField(local, fieldName, initializerPlace == IN_FIELD_DECLARATION);
                if (!settings.isIntroduceEnumConstant()) {
                    if (isStatic) {
                        field.getModifierList().setModifierProperty(PsiModifier.STATIC, true);
                    }
                    if (declareFinal) {
                        field.getModifierList().setModifierProperty(PsiModifier.FINAL, true);
                    }
                    if (annotateAsNonNls) {
                        PsiAnnotation annotation = JavaPsiFacade.getInstance(local.getProject()).getElementFactory().createAnnotationFromText("@" + AnnotationUtil.NON_NLS, field);
                        field.getModifierList().addAfter(annotation, null);
                    }
                    field.getModifierList().setModifierProperty(fieldVisibility, true);
                }
                field = (PsiField) aaClass.add(field);
                JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(field);
                local.normalizeDeclaration();
                PsiDeclarationStatement declarationStatement = (PsiDeclarationStatement) local.getParent();
                final BaseExpressionToFieldHandler.InitializationPlace finalInitializerPlace;
                if (local.getInitializer() == null) {
                    finalInitializerPlace = IN_FIELD_DECLARATION;
                } else {
                    finalInitializerPlace = initializerPlace;
                }
                final PsiElementFactory factory = JavaPsiFacade.getInstance(myManager.getProject()).getElementFactory();
                switch(finalInitializerPlace) {
                    case IN_FIELD_DECLARATION:
                        declarationStatement.delete();
                        break;
                    case IN_CURRENT_METHOD:
                        PsiStatement statement = createAssignment(local, fieldName, factory);
                        declarationStatement.replace(statement);
                        break;
                    case IN_CONSTRUCTOR:
                        addInitializationToConstructors(local, field, enclosingConstructor, factory);
                        break;
                    case IN_SETUP_METHOD:
                        addInitializationToSetUp(local, field, factory);
                }
                if (enclosingConstructor != null && initializerPlace == IN_CONSTRUCTOR) {
                    PsiStatement statement = createAssignment(local, fieldName, factory);
                    declarationStatement.replace(statement);
                }
                if (rebindNeeded2) {
                    for (final PsiReference reference : refs) {
                        if (reference != null) {
                            // expr = RefactoringUtil.outermostParenthesizedExpression(expr);
                            RefactoringUtil.replaceOccurenceWithFieldRef((PsiExpression) reference, field, aaClass);
                        // replaceOccurenceWithFieldRef((PsiExpression)reference, field, aaClass);
                        }
                    }
                // RefactoringUtil.renameVariableReferences(local, pPrefix + fieldName, GlobalSearchScope.projectScope(myProject));
                }
            } catch (IncorrectOperationException e) {
                LOG.error(e);
            }
        }
    };
    CommandProcessor.getInstance().executeCommand(myProject, new Runnable() {

        public void run() {
            ApplicationManager.getApplication().runWriteAction(runnable);
        }
    }, REFACTORING_NAME, null);
    return true;
}||||||||public boolean convertLocalToField(final PsiLocalVariable local, final Editor editor) {
    PsiClass aClass;
    boolean tempIsStatic = myIsConstant;
    PsiElement parent = local.getParent();
    while (true) {
        if (parent instanceof PsiClass && !(parent instanceof PsiAnonymousClass)) {
            aClass = (PsiClass) parent;
            break;
        }
        if (parent instanceof PsiFile && PsiUtil.isInJspFile(parent)) {
            String message = RefactoringBundle.message("error.not.supported.for.jsp", REFACTORING_NAME);
            CommonRefactoringUtil.showErrorHint(myProject, editor, message, REFACTORING_NAME, HelpID.LOCAL_TO_FIELD);
            return false;
        }
        if (parent instanceof PsiModifierListOwner && ((PsiModifierListOwner) parent).hasModifierProperty(PsiModifier.STATIC)) {
            tempIsStatic = true;
        }
        parent = parent.getParent();
    }
    final boolean isStatic = tempIsStatic;
    PsiExpression[] occurences = CodeInsightUtil.findReferenceExpressions(RefactoringUtil.getVariableScope(local), local);
    if (editor != null) {
        RefactoringUtil.highlightAllOccurences(myProject, occurences, editor);
    }
    final BaseExpressionToFieldHandler.Settings settings = showRefactoringDialog(aClass, local, occurences, isStatic);
    if (settings == null)
        return false;
    // LocalToFieldDialog dialog = new LocalToFieldDialog(project, aClass, local, isStatic);
    final String variableName = local.getName();
    final String fieldName = settings.getFieldName();
    final BaseExpressionToFieldHandler.InitializationPlace initializerPlace = settings.getInitializerPlace();
    final boolean declareFinal = settings.isDeclareFinal();
    @Modifier final String fieldVisibility = settings.getFieldVisibility();
    final PsiClass destinationClass = settings.getDestinationClass();
    boolean rebindNeeded = false;
    if (destinationClass != null) {
        aClass = destinationClass;
        rebindNeeded = true;
    }
    final boolean annotateAsNonNls = settings.isAnnotateAsNonNls();
    final PsiClass aaClass = aClass;
    final boolean rebindNeeded1 = rebindNeeded;
    final Runnable runnable = new Runnable() {

        public void run() {
            try {
                final boolean rebindNeeded2 = !variableName.equals(fieldName) || rebindNeeded1;
                final PsiReference[] refs;
                if (rebindNeeded2) {
                    refs = ReferencesSearch.search(local, GlobalSearchScope.projectScope(myProject), false).toArray(new PsiReference[0]);
                } else {
                    refs = null;
                }
                final PsiMethod enclosingConstructor = BaseExpressionToFieldHandler.getEnclosingConstructor(aaClass, local);
                PsiField field = settings.isIntroduceEnumConstant() ? EnumConstantsUtil.createEnumConstant(aaClass, local, fieldName) : createField(local, fieldName, initializerPlace == IN_FIELD_DECLARATION);
                if (!settings.isIntroduceEnumConstant()) {
                    if (isStatic) {
                        field.getModifierList().setModifierProperty(PsiModifier.STATIC, true);
                    }
                    if (declareFinal) {
                        field.getModifierList().setModifierProperty(PsiModifier.FINAL, true);
                    }
                    if (annotateAsNonNls) {
                        PsiAnnotation annotation = JavaPsiFacade.getInstance(local.getProject()).getElementFactory().createAnnotationFromText("@" + AnnotationUtil.NON_NLS, field);
                        field.getModifierList().addAfter(annotation, null);
                    }
                    field.getModifierList().setModifierProperty(fieldVisibility, true);
                }
                field = (PsiField) aaClass.add(field);
                JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(field);
                local.normalizeDeclaration();
                PsiDeclarationStatement declarationStatement = (PsiDeclarationStatement) local.getParent();
                final BaseExpressionToFieldHandler.InitializationPlace finalInitializerPlace;
                if (local.getInitializer() == null) {
                    finalInitializerPlace = IN_FIELD_DECLARATION;
                } else {
                    finalInitializerPlace = initializerPlace;
                }
                final PsiElementFactory factory = JavaPsiFacade.getInstance(myManager.getProject()).getElementFactory();
                switch(finalInitializerPlace) {
                    case IN_FIELD_DECLARATION:
                        declarationStatement.delete();
                        break;
                    case IN_CURRENT_METHOD:
                        PsiStatement statement = createAssignment(local, fieldName, factory);
                        declarationStatement.replace(statement);
                        break;
                    case IN_CONSTRUCTOR:
                        addInitializationToConstructors(local, field, enclosingConstructor, factory);
                        break;
                    case IN_SETUP_METHOD:
                        addInitializationToSetUp(local, field, factory);
                }
                if (enclosingConstructor != null && initializerPlace == IN_CONSTRUCTOR) {
                    PsiStatement statement = createAssignment(local, fieldName, factory);
                    declarationStatement.replace(statement);
                }
                if (rebindNeeded2) {
                    for (final PsiReference reference : refs) {
                        if (reference != null) {
                            // expr = RefactoringUtil.outermostParenthesizedExpression(expr);
                            RefactoringUtil.replaceOccurenceWithFieldRef((PsiExpression) reference, field, aaClass);
                        // replaceOccurenceWithFieldRef((PsiExpression)reference, field, aaClass);
                        }
                    }
                // RefactoringUtil.renameVariableReferences(local, pPrefix + fieldName, GlobalSearchScope.projectScope(myProject));
                }
            } catch (IncorrectOperationException e) {
                LOG.error(e);
            }
        }
    };
    CommandProcessor.getInstance().executeCommand(myProject, new Runnable() {

        public void run() {
            ApplicationManager.getApplication().runWriteAction(runnable);
        }
    }, REFACTORING_NAME, null);
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(UnaryExpr
							(EnclosedExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(EnclosedExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(MarkerAnnotationExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(ArrayCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
																(ArrayCreationLevel
																	(IntegerLiteralExpr
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ConditionalExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(CastExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(SwitchStmt
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											NameExpr
												SimpleName
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ForeachStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(UnaryExpr
							(EnclosedExpr
								(InstanceOfExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(BreakStmt
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										StringLiteralExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(InstanceOfExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(EnclosedExpr
								(CastExpr
									NameExpr
										SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ArrayType
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(MarkerAnnotationExpr
					Name
				)
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(BinaryExpr
														(UnaryExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ArrayType
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															(ArrayCreationExpr
																(ClassOrInterfaceType
																	SimpleName
																)
																(ArrayCreationLevel
																	(IntegerLiteralExpr
																	)
																)
															)
															SimpleName
															(MethodCallExpr
																NameExpr
																	SimpleName
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ConditionalExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															(BinaryExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
														)
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																(BooleanLiteralExpr
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(IfStmt
													NameExpr
														SimpleName
													(BlockStmt
														(ExpressionStmt
															(VariableDeclarationExpr
																(VariableDeclarator
																	(MethodCallExpr
																		(BinaryExpr
																			StringLiteralExpr
																			(FieldAccessExpr
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		SimpleName
																		(MethodCallExpr
																			SimpleName
																			(MethodCallExpr
																				(MethodCallExpr
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																		)
																	)
																	SimpleName
																	(ClassOrInterfaceType
																		SimpleName
																	)
																)
															)
														)
														(ExpressionStmt
															(MethodCallExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BooleanLiteralExpr
														)
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(CastExpr
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(CastExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													SimpleName
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												NullLiteralExpr
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(SwitchStmt
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											NameExpr
												SimpleName
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(IfStmt
											NameExpr
												SimpleName
											(BlockStmt
												(ForeachStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		(CastExpr
																			NameExpr
																				SimpleName
																			(ClassOrInterfaceType
																				SimpleName
																			)
																		)
																		NameExpr
																			SimpleName
																		NameExpr
																			SimpleName
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	LineComment
																)
															)
														)
													)
													NameExpr
														SimpleName
													(VariableDeclarationExpr
														(VariableDeclarator
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
										)
									)
								)
							)
							(VoidType
							)
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				NullLiteralExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

