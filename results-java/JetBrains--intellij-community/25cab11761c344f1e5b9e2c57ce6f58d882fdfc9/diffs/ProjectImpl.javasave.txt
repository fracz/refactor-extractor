@Override
public void save() {
    // no need to save
    if (ApplicationManagerEx.getApplicationEx().isDoNotSave())
        return;
    if (!mySavingInProgress.compareAndSet(false, true)) {
        return;
    }
    try {
        if (isToSaveProjectName()) {
            final IProjectStore stateStore = getStateStore();
            final VirtualFile baseDir = stateStore.getProjectBaseDir();
            if (baseDir != null && baseDir.isValid()) {
                final VirtualFile ideaDir = baseDir.findChild(DIRECTORY_STORE_FOLDER);
                if (ideaDir != null && ideaDir.isValid() && ideaDir.isDirectory()) {
                    final File nameFile = new File(ideaDir.getPath(), ".name");
                    try {
                        FileUtil.writeToFile(nameFile, getName().getBytes("UTF-8"), false);
                        myOldName = null;
                    } catch (IOException e) {
                        LOG.info("Unable to store project name to: " + nameFile.getPath());
                    }
                }
            }
        }
        StoreUtil.doSave(getStateStore());
    } catch (IComponentStore.SaveCancelledException e) {
        LOG.info(e);
    } catch (PluginException e) {
        PluginManager.disablePlugin(e.getPluginId().getIdString());
        Notification notification = new Notification(PLUGIN_SETTINGS_ERROR, "Unable to save plugin settings!", "<p>The plugin <i>" + e.getPluginId() + "</i> failed to save settings and has been disabled. Please restart" + ApplicationNamesInfo.getInstance().getFullProductName() + "</p>" + (ApplicationManagerEx.getApplicationEx().isInternal() ? "<p>" + StringUtil.getThrowableText(e) + "</p>" : ""), NotificationType.ERROR);
        Notifications.Bus.notify(notification, this);
        LOG.info("Unable to save plugin settings", e);
    } catch (IOException e) {
        MessagesEx.error(this, ProjectBundle.message("project.save.error", e.getMessage())).showLater();
        LOG.info("Error saving project", e);
    } finally {
        mySavingInProgress.set(false);
        ApplicationManager.getApplication().getMessageBus().syncPublisher(ProjectSaved.TOPIC).saved(this);
    }
}||||||||@Override
public void save() {
    // no need to save
    if (ApplicationManagerEx.getApplicationEx().isDoNotSave())
        return;
    if (!mySavingInProgress.compareAndSet(false, true)) {
        return;
    }
    try {
        if (isToSaveProjectName()) {
            final IProjectStore stateStore = getStateStore();
            final VirtualFile baseDir = stateStore.getProjectBaseDir();
            if (baseDir != null && baseDir.isValid()) {
                final VirtualFile ideaDir = baseDir.findChild(DIRECTORY_STORE_FOLDER);
                if (ideaDir != null && ideaDir.isValid() && ideaDir.isDirectory()) {
                    final File nameFile = new File(ideaDir.getPath(), NAME_FILE);
                    try {
                        FileUtil.writeToFile(nameFile, getName().getBytes("UTF-8"), false);
                        myOldName = null;
                    } catch (IOException e) {
                        LOG.info("Unable to store project name to: " + nameFile.getPath());
                    }
                }
            }
        }
        StoreUtil.doSave(getStateStore());
    } catch (IComponentStore.SaveCancelledException e) {
        LOG.info(e);
    } catch (PluginException e) {
        PluginManager.disablePlugin(e.getPluginId().getIdString());
        Notification notification = new Notification(PLUGIN_SETTINGS_ERROR, "Unable to save plugin settings!", "<p>The plugin <i>" + e.getPluginId() + "</i> failed to save settings and has been disabled. Please restart" + ApplicationNamesInfo.getInstance().getFullProductName() + "</p>" + (ApplicationManagerEx.getApplicationEx().isInternal() ? "<p>" + StringUtil.getThrowableText(e) + "</p>" : ""), NotificationType.ERROR);
        Notifications.Bus.notify(notification, this);
        LOG.info("Unable to save plugin settings", e);
    } catch (IOException e) {
        MessagesEx.error(this, ProjectBundle.message("project.save.error", e.getMessage())).showLater();
        LOG.info("Error saving project", e);
    } finally {
        mySavingInProgress.set(false);
        ApplicationManager.getApplication().getMessageBus().syncPublisher(ProjectSaved.TOPIC).saved(this);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											StringLiteralExpr
										)
										(EnclosedExpr
											(ConditionalExpr
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
											)
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(ThisExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(ThisExpr
								)
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														StringLiteralExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(ReturnStmt
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ReturnStmt
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ObjectCreationExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											StringLiteralExpr
										)
										(EnclosedExpr
											(ConditionalExpr
												(MethodCallExpr
													SimpleName
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												StringLiteralExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
													)
													StringLiteralExpr
												)
											)
										)
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(ThisExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								(ThisExpr
								)
								(MethodCallExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ThisExpr
						)
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(ObjectCreationExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(TryStmt
											(CatchClause
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															StringLiteralExpr
															SimpleName
															(MethodCallExpr
																SimpleName
															)
														)
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

