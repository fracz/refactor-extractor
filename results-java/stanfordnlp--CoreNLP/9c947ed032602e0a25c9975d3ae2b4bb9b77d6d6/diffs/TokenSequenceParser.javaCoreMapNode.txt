public final NodePattern CoreMapNode(Env env) throws ParseException {
    Map<String, String> attributes = new ArrayMap<String, String>();
    NodePattern pat;
    Token value = null;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case IDENTIFIER:
        case REGEX:
        case STR:
        case 22:
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case 22:
                    jj_consume_token(22);
                    AttrValue(env, attributes);
                    label_16: while (true) {
                        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                            case 30:
                            case 33:
                                ;
                                break;
                            default:
                                jj_la1[45] = jj_gen;
                                break label_16;
                        }
                        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                            case 33:
                                jj_consume_token(33);
                                break;
                            case 30:
                                jj_consume_token(30);
                                break;
                            default:
                                jj_la1[46] = jj_gen;
                                jj_consume_token(-1);
                                throw new ParseException();
                        }
                        AttrValue(env, attributes);
                    }
                    jj_consume_token(24);
                    break;
                default:
                    jj_la1[48] = jj_gen;
                    if (jj_2_28(2)) {
                        AttrValue(env, attributes);
                    } else {
                        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                            case IDENTIFIER:
                            case REGEX:
                            case STR:
                                switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                                    case IDENTIFIER:
                                    case STR:
                                        value = RelaxedStringToken();
                                        break;
                                    case REGEX:
                                        value = jj_consume_token(REGEX);
                                        break;
                                    default:
                                        jj_la1[47] = jj_gen;
                                        jj_consume_token(-1);
                                        throw new ParseException();
                                }
                                attributes.put("word", value.image);
                                break;
                            default:
                                jj_la1[49] = jj_gen;
                                jj_consume_token(-1);
                                throw new ParseException();
                        }
                    }
            }
            pat = CoreMapNodePattern.valueOf(env, attributes);
            {
                if (true)
                    return pat;
            }
            break;
        case REGEXVAR:
            pat = CoreMapVarNodePattern(env);
            {
                if (true)
                    return pat;
            }
            break;
        case 47:
            jj_consume_token(47);
            pat = CoreMapExprNodePattern(env);
            jj_consume_token(48);
            {
                if (true)
                    return pat;
            }
            break;
        default:
            jj_la1[50] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||public final NodePattern CoreMapNode(Env env) throws ParseException {
    Map<String, String> attributes = new ArrayMap<String, String>();
    NodePattern pat;
    Token value = null;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case IDENTIFIER:
        case REGEX:
        case STR:
        case 22:
            {
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 22:
                        {
                            jj_consume_token(22);
                            AttrValue(env, attributes);
                            label_16: while (true) {
                                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                    case 30:
                                    case 33:
                                        {
                                            ;
                                            break;
                                        }
                                    default:
                                        jj_la1[45] = jj_gen;
                                        break label_16;
                                }
                                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                    case 33:
                                        {
                                            jj_consume_token(33);
                                            break;
                                        }
                                    case 30:
                                        {
                                            jj_consume_token(30);
                                            break;
                                        }
                                    default:
                                        jj_la1[46] = jj_gen;
                                        jj_consume_token(-1);
                                        throw new ParseException();
                                }
                                AttrValue(env, attributes);
                            }
                            jj_consume_token(24);
                            break;
                        }
                    case IDENTIFIER:
                    case REGEX:
                    case STR:
                        {
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case IDENTIFIER:
                                case STR:
                                    {
                                        value = RelaxedStringToken();
                                        break;
                                    }
                                case REGEX:
                                    {
                                        value = jj_consume_token(REGEX);
                                        break;
                                    }
                                default:
                                    jj_la1[47] = jj_gen;
                                    jj_consume_token(-1);
                                    throw new ParseException();
                            }
                            attributes.put("word", value.image);
                            break;
                        }
                    default:
                        jj_la1[48] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                pat = CoreMapNodePattern.valueOf(env, attributes);
                {
                    if ("" != null)
                        return pat;
                }
                break;
            }
        case REGEXVAR:
            {
                pat = CoreMapVarNodePattern(env);
                {
                    if ("" != null)
                        return pat;
                }
                break;
            }
        case 47:
            {
                jj_consume_token(47);
                pat = CoreMapExprNodePattern(env);
                jj_consume_token(48);
                {
                    if ("" != null)
                        return pat;
                }
                break;
            }
        default:
            jj_la1[49] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(LabeledStmt
							SimpleName
							(WhileStmt
								(BlockStmt
									(SwitchStmt
										(SwitchEntryStmt
											(IntegerLiteralExpr
											)
										)
										(SwitchEntryStmt
											(IntegerLiteralExpr
											)
											(EmptyStmt
											)
											(BreakStmt
											)
										)
										(SwitchEntryStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
												)
											)
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(SwitchStmt
										(SwitchEntryStmt
											(IntegerLiteralExpr
											)
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(BreakStmt
											)
										)
										(SwitchEntryStmt
											(IntegerLiteralExpr
											)
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
											(BreakStmt
											)
										)
										(SwitchEntryStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
											)
											(ThrowStmt
												(ObjectCreationExpr
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
												)
											)
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BooleanLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(IfStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							(BlockStmt
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(SwitchStmt
											(SwitchEntryStmt
												NameExpr
													SimpleName
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															SimpleName
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												NameExpr
													SimpleName
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(MethodCallExpr
															NameExpr
																SimpleName
															SimpleName
														)
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(ExpressionStmt
													(AssignExpr
														(ArrayAccessExpr
															(IntegerLiteralExpr
															)
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
														SimpleName
													)
												)
												(ThrowStmt
													(ObjectCreationExpr
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ConditionalExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
												)
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												StringLiteralExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(BreakStmt
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
												SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
						)
					)
					(ConditionalExpr
						(EnclosedExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(UnaryExpr
									(IntegerLiteralExpr
									)
								)
							)
						)
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BooleanLiteralExpr
						)
						(ReturnStmt
							NameExpr
								SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(LabeledStmt
									SimpleName
									(WhileStmt
										(BlockStmt
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(EmptyStmt
														)
														(BreakStmt
														)
													)
												)
												(SwitchEntryStmt
													(ExpressionStmt
														(AssignExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
												(ConditionalExpr
													(EnclosedExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(SwitchStmt
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
												(SwitchEntryStmt
													(IntegerLiteralExpr
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(IntegerLiteralExpr
																)
																SimpleName
															)
														)
														(BreakStmt
														)
													)
												)
												(SwitchEntryStmt
													(ExpressionStmt
														(AssignExpr
															(ArrayAccessExpr
																(IntegerLiteralExpr
																)
																NameExpr
																	SimpleName
															)
															NameExpr
																SimpleName
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
															SimpleName
														)
													)
													(ThrowStmt
														(ObjectCreationExpr
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ConditionalExpr
													(EnclosedExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
										(BooleanLiteralExpr
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(BlockStmt
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
												SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								StringLiteralExpr
								NullLiteralExpr
							)
							(ReturnStmt
								NameExpr
									SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
)

