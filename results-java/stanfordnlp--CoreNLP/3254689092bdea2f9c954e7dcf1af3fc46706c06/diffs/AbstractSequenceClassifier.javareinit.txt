/**
 * This method should be called after there have been changes to the flags
 * (SeqClassifierFlags) variable, such as after deserializing a classifier. It
 * is called inside the loadClassifier methods. It assumes that the flags
 * variable and the pad variable exist, but reinitializes things like the pad
 * variable, featureFactory and readerAndWriter based on the flags.
 * <p>
 * <i>Implementation note:</i> At the moment this variable doesn't set
 * windowSize or featureFactory, since they are being serialized separately in
 * the file, but we should probably stop serializing them and just
 * reinitialize them from the flags?
 */
protected final void reinit() {
    pad.set(CoreAnnotations.AnswerAnnotation.class, flags.backgroundSymbol);
    pad.set(CoreAnnotations.GoldAnswerAnnotation.class, flags.backgroundSymbol);
    featureFactory.init(flags);
    defaultReaderAndWriter = makeReaderAndWriter();
    if (flags.readerAndWriter != null && flags.readerAndWriter.equals(flags.plainTextDocumentReaderAndWriter)) {
        plainTextReaderAndWriter = defaultReaderAndWriter;
    } else {
        plainTextReaderAndWriter = makePlainTextReaderAndWriter();
    }
}||||||||/**
 * This method should be called after there have been changes to the flags
 * (SeqClassifierFlags) variable, such as after deserializing a classifier. It
 * is called inside the loadClassifier methods. It assumes that the flags
 * variable and the pad variable exist, but reinitializes things like the pad
 * variable, featureFactory and readerAndWriter based on the flags.
 * <p>
 * <i>Implementation note:</i> At the moment this variable doesn't set
 * windowSize or featureFactory, since they are being serialized separately in
 * the file, but we should probably stop serializing them and just
 * reinitialize them from the flags?
 */
protected final void reinit() {
    pad.set(CoreAnnotations.AnswerAnnotation.class, flags.backgroundSymbol);
    pad.set(CoreAnnotations.GoldAnswerAnnotation.class, flags.backgroundSymbol);
    featureFactory.init(flags);
    defaultReaderAndWriter = makeReaderAndWriter();
    if (flags.readerAndWriter != null && flags.readerAndWriter.equals(flags.plainTextDocumentReaderAndWriter)) {
        plainTextReaderAndWriter = defaultReaderAndWriter;
    } else {
        plainTextReaderAndWriter = makePlainTextReaderAndWriter();
    }
    if (!flags.useKnownLCWords) {
        knownLCWords = Collections.emptySet();
    } else if (knownLCWords == null || knownLCWords.size() == 0) {
        knownLCWords = Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					NullLiteralExpr
				)
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

