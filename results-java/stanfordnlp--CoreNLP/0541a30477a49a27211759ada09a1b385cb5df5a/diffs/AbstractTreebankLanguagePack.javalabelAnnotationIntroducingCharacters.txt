/**
 * Return an array of characters at which a String should be
 * truncated to give the basic syntactic category of a label.
 * The idea here is that Penn treebank style labels follow a syntactic
 * category with various functional and crossreferencing information
 * introduced by special characters (such as "NP-SBJ=1").  This would
 * be truncated to "NP" by the array containing '-' and "=".
 *
 * @return An array of characters that set off label name suffixes
 */
@Override
public char[] labelAnnotationIntroducingCharacters() {
    return EMPTY_CHAR_ARRAY;
}||||||||/**
 * Return an array of characters at which a String should be
 * truncated to give the basic syntactic category of a label.
 * The idea here is that Penn treebank style labels follow a syntactic
 * category with various functional and crossreferencing information
 * introduced by special characters (such as "NP-SBJ=1").  This would
 * be truncated to "NP" by the array containing '-' and "=".
 *
 * @return An array of characters that set off label name suffixes
 */
public char[] labelAnnotationIntroducingCharacters() {
    return EMPTY_CHAR_ARRAY;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ArrayType
		(PrimitiveType
		)
	)
	SimpleName
	(JavadocComment
	)
)

