/**
 * Product two factors, taking the multiplication at the intersections.
 *
 * @param other the other factor to be multiplied
 * @return a factor containing the union of both variable sets
 */
public TableFactor multiply(TableFactor other) {
    return product(other, (a, b) -> a + b);
}||||||||/**
 * Product two factors, taking the multiplication at the intersections.
 * @param other the other factor to be multiplied
 * @return a factor containing the union of both variable sets
 */
public TableFactor multiply(TableFactor other) {
    // Calculate the result domain
    List<Integer> domain = new ArrayList<>();
    List<Integer> otherDomain = new ArrayList<>();
    List<Integer> resultDomain = new ArrayList<>();
    for (int n : neighborIndices) {
        domain.add(n);
        resultDomain.add(n);
    }
    for (int n : other.neighborIndices) {
        otherDomain.add(n);
        if (!resultDomain.contains(n))
            resultDomain.add(n);
    }
    // Create result TableFactor
    int[] resultNeighborIndices = new int[resultDomain.size()];
    int[] resultDimensions = new int[resultNeighborIndices.length];
    for (int i = 0; i < resultDomain.size(); i++) {
        int var = resultDomain.get(i);
        resultNeighborIndices[i] = var;
        // assert consistency about variable size, we can't have the same variable with two different sizes
        assert ((getVariableSize(var) == 0 && other.getVariableSize(var) > 0) || (getVariableSize(var) > 0 && other.getVariableSize(var) == 0) || (getVariableSize(var) == other.getVariableSize(var)));
        resultDimensions[i] = Math.max(getVariableSize(resultDomain.get(i)), other.getVariableSize(resultDomain.get(i)));
    }
    TableFactor result = new TableFactor(resultNeighborIndices, resultDimensions);
    // We could just use the general algorithm at the end of this set of special cases, but this is the fastest way
    if (otherDomain.size() == 1 && (resultDomain.size() == domain.size()) && domain.size() == 2) {
        int msgVar = otherDomain.get(0);
        int msgIndex = resultDomain.indexOf(msgVar);
        if (msgIndex == 0) {
            for (int i = 0; i < resultDimensions[0]; i++) {
                double d = other.values[i];
                int k = i * resultDimensions[1];
                for (int j = 0; j < resultDimensions[1]; j++) {
                    int index = k + j;
                    result.values[index] = values[index] + d;
                }
            }
        } else if (msgIndex == 1) {
            for (int i = 0; i < resultDimensions[0]; i++) {
                int k = i * resultDimensions[1];
                for (int j = 0; j < resultDimensions[1]; j++) {
                    int index = k + j;
                    result.values[index] = values[index] + other.values[j];
                }
            }
        }
    } else // The special case where we're a message of size 1, and the other factor is receiving the message, and of size 2
    if (domain.size() == 1 && (resultDomain.size() == otherDomain.size()) && resultDomain.size() == 2) {
        return other.multiply(this);
    } else // Otherwise we follow the big comprehensive, slow general purpose algorithm
    {
        // Calculate back-pointers from the result domain indices to original indices
        int[] mapping = new int[result.neighborIndices.length];
        int[] otherMapping = new int[result.neighborIndices.length];
        for (int i = 0; i < result.neighborIndices.length; i++) {
            mapping[i] = domain.indexOf(result.neighborIndices[i]);
            otherMapping[i] = otherDomain.indexOf(result.neighborIndices[i]);
        }
        // Do the actual joining operation between the two tables, applying 'join' for each result element.
        int[] assignment = new int[neighborIndices.length];
        int[] otherAssignment = new int[other.neighborIndices.length];
        // OPTIMIZATION:
        // Rather than use the standard iterator, which creates lots of int[] arrays on the heap, which need to be GC'd,
        // we use the fast version that just mutates one array. Since this is read once for us here, this is ideal.
        Iterator<int[]> fastPassByReferenceIterator = result.fastPassByReferenceIterator();
        int[] resultAssignment = fastPassByReferenceIterator.next();
        while (true) {
            // Set the assignment arrays correctly
            for (int i = 0; i < resultAssignment.length; i++) {
                if (mapping[i] != -1)
                    assignment[mapping[i]] = resultAssignment[i];
                if (otherMapping[i] != -1)
                    otherAssignment[otherMapping[i]] = resultAssignment[i];
            }
            result.setAssignmentLogValue(resultAssignment, getAssignmentLogValue(assignment) + other.getAssignmentLogValue(otherAssignment));
            // This mutates the resultAssignment[] array, rather than creating a new one
            if (fastPassByReferenceIterator.hasNext())
                fastPassByReferenceIterator.next();
            else
                break;
        }
    }
    return result;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(LambdaExpr
					(ExpressionStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
					(Parameter
						SimpleName
						(UnknownType
						)
					)
				)
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(AssertStmt
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(EnclosedExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BinaryExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(IntegerLiteralExpr
					)
				)
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(ForStmt
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VariableDeclarationExpr
							(VariableDeclarator
								(IntegerLiteralExpr
								)
								SimpleName
								(PrimitiveType
								)
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(ArrayCreationExpr
									(PrimitiveType
									)
									(ArrayCreationLevel
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
									(ArrayType
										(PrimitiveType
										)
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(ArrayType
									(PrimitiveType
									)
								)
							)
						)
					)
					(WhileStmt
						(BlockStmt
							(ForStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(UnaryExpr
												(IntegerLiteralExpr
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BreakStmt
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								LineComment
							)
						)
						(BooleanLiteralExpr
						)
					)
					LineComment
				)
				(BlockStmt
					(ReturnStmt
						(MethodCallExpr
							(ThisExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				LineComment
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ForStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(BinaryExpr
													NameExpr
														SimpleName
													(ArrayAccessExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ForStmt
										(BlockStmt
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(BinaryExpr
														(ArrayAccessExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(ArrayAccessExpr
															NameExpr
																SimpleName
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
											)
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
										)
										(VariableDeclarationExpr
											(VariableDeclarator
												(IntegerLiteralExpr
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										(UnaryExpr
											NameExpr
												SimpleName
										)
									)
								)
								(BinaryExpr
									NameExpr
										SimpleName
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(BinaryExpr
												NameExpr
													SimpleName
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(ForStmt
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
									)
									(VariableDeclarationExpr
										(VariableDeclarator
											(IntegerLiteralExpr
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(IntegerLiteralExpr
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			LineComment
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

