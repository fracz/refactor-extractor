/**
 * Find and mark numbers (does not need NumberSequenceClassifier)
 * Each token is annotated with the numeric value and type
 * - CoreAnnotations.NumericTypeAnnotation.class: ORDINAL, UNIT (hundred, thousand,..., dozen, gross,...), NUMBER
 * - CoreAnnotations.NumericValueAnnotation.class: Number representing the numeric value of the token
 * ( two thousand => 2 1000 )
 *
 * Tries also to separate individual numbers like four five six,
 * while keeping numbers like four hundred and seven together
 * Annotate tokens belonging to each composite number with
 * - CoreAnnotations.NumericCompositeTypeAnnotation.class: ORDINAL (1st, 2nd), NUMBER (one hundred)
 * - CoreAnnotations.NumericCompositeValueAnnotation.class: Number representing the composite numeric value
 * ( two thousand => 2000 2000 )
 *
 * Also returns list of CoreMap representing the identified numbers
 *
 * The function is overly aggressive in marking possible numbers
 * - should either do more checks or use in conjunction with NumberSequenceClassifier
 * to avoid marking certain tokens (like second/NN) as numbers...
 *
 * @param annotation The annotation structure
 * @return list of CoreMap representing the identified numbers
 */
public static List<CoreMap> findNumbers(CoreMap annotation) {
    List<CoreLabel> tokens = annotation.get(CoreAnnotations.TokensAnnotation.class);
    for (CoreLabel token : tokens) {
        String w = token.word();
        w = w.trim().toLowerCase();
        if (/*("CD".equals(token.get(CoreAnnotations.PartOfSpeechAnnotation.class))  || */
        NumberNormalizer.numPattern.matcher(w).matches() || NumberNormalizer.numberTermPattern2.matcher(w).matches() || NumberSequenceClassifier.ORDINAL_PATTERN.matcher(w).matches() || NumberNormalizer.numEndUnitPattern.matcher(w).matches()) {
            // But maybe we don't care, this can just mark the potential numbers, something else can disregard those
            try {
                token.set(CoreAnnotations.NumericValueAnnotation.class, NumberNormalizer.wordToNumber(w));
                if (NumberSequenceClassifier.ORDINAL_PATTERN.matcher(w).find()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "ORDINAL");
                } else if (NumberNormalizer.numUnitPattern.matcher(w).matches()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "UNIT");
                } else if (NumberNormalizer.numEndUnitPattern.matcher(w).matches()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "UNIT");
                } else {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "NUMBER");
                }
            } catch (Exception ex) {
                logger.warning("Error interpreting number " + w + ": " + ex.getMessage());
            }
        }
    }
    // TODO: Should we allow "," in written out numbers?
    // TODO: Handle "-" that is not with token?
    TokenSequenceMatcher matcher = numberPattern.getMatcher(tokens);
    List<CoreMap> numbers = new ArrayList<CoreMap>();
    while (matcher.find()) {
        @SuppressWarnings("unused") List<CoreMap> matchedTokens = matcher.groupNodes();
        int numStart = matcher.start();
        int possibleNumEnd = -1;
        int lastUnitPos = -1;
        int possibleNumStart = -1;
        Number possibleNumEndUnit = null;
        Number lastUnit = null;
        // Check if we need to split matched chunk up more
        for (int i = matcher.start(); i < matcher.end(); i++) {
            CoreLabel token = tokens.get(i);
            CoreLabel prev = (i > matcher.start()) ? tokens.get(i - 1) : null;
            Number num = token.get(CoreAnnotations.NumericValueAnnotation.class);
            Number prevNum = (prev != null) ? prev.get(CoreAnnotations.NumericValueAnnotation.class) : null;
            String w = token.word();
            w = w.trim().toLowerCase();
            if (",".equals(w)) {
                if (lastUnit != null && lastUnitPos == i - 1) {
                    // OKAY, this may be one big number
                    possibleNumEnd = i;
                    possibleNumEndUnit = lastUnit;
                } else {
                    // Not one big number
                    if (numStart < i) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                        numStart = i + 1;
                        possibleNumEnd = -1;
                        possibleNumEndUnit = null;
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                }
                if (numStart == i) {
                    numStart = i + 1;
                }
            } else if ("and".equals(w)) {
                // Check if number before and was unit
                String prevWord = prev.word();
                if (lastUnitPos == i - 1 || (lastUnitPos == i - 2 && ",".equals(prevWord))) {
                // Okay
                } else {
                    // Two separate numbers
                    if (numStart < possibleNumEnd) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                        if (possibleNumStart >= possibleNumEnd) {
                            numStart = possibleNumStart;
                        } else {
                            numStart = i + 1;
                        }
                    } else if (numStart < i) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                        numStart = i + 1;
                    }
                    if (lastUnitPos < numStart) {
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                    possibleNumEnd = -1;
                    possibleNumEndUnit = null;
                }
            } else {
                // NUMBER or ORDINAL
                String numType = token.get(CoreAnnotations.NumericTypeAnnotation.class);
                if ("UNIT".equals(numType)) {
                    // Compare this unit with previous
                    if (lastUnit == null || lastUnit.longValue() > num.longValue()) {
                    // lastUnit larger than this unit
                    // maybe four thousand two hundred?
                    // OKAY, probably one big number
                    } else {
                        if (numStart < possibleNumEnd) {
                            // Not one big number  ( had a comma )
                            if (num.longValue() >= possibleNumEndUnit.longValue()) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                                if (possibleNumStart >= possibleNumEnd) {
                                    numStart = possibleNumStart;
                                } else {
                                    numStart = i;
                                }
                                possibleNumEnd = -1;
                                possibleNumEndUnit = null;
                            }
                        } else {
                        // unit is increasing - can be okay, maybe five hundred thousand?
                        // what about four hundred five thousand
                        // unit might also be the same, as in thousand thousand,
                        // which we convert to million
                        }
                    }
                    lastUnit = num;
                    lastUnitPos = i;
                } else {
                    // Normal number
                    if (num == null) {
                        logger.warning("NO NUMBER: " + token.word());
                        continue;
                    }
                    if (prevNum != null) {
                        if (num.doubleValue() > 0) {
                            if (num.doubleValue() < 10) {
                                // [one to nine]  [0-9]
                                if (NumberNormalizer.numPattern.matcher(prev.word()).matches() || prevNum.longValue() < 10 || prevNum.longValue() % 10 != 0) {
                                    // two separate numbers
                                    if (numStart < i) {
                                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                                    }
                                    numStart = i;
                                    possibleNumEnd = -1;
                                    possibleNumEndUnit = null;
                                    lastUnit = null;
                                    lastUnitPos = -1;
                                }
                            } else {
                                String prevNumType = prev.get(CoreAnnotations.NumericTypeAnnotation.class);
                                if ("UNIT".equals(prevNumType)) {
                                // OKAY
                                } else if (!ordinalUnitPattern.matcher(w).matches()) {
                                    // Start of new number
                                    if (numStart < i) {
                                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                                    }
                                    numStart = i;
                                    possibleNumEnd = -1;
                                    possibleNumEndUnit = null;
                                    lastUnit = null;
                                    lastUnitPos = -1;
                                }
                            }
                        }
                    }
                    if ("ORDINAL".equals(numType)) {
                        if (possibleNumEnd >= 0) {
                            if (numStart < possibleNumEnd) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                            }
                            if (possibleNumStart > possibleNumEnd) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, possibleNumStart, i + 1));
                            } else {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, possibleNumEnd + 1, i + 1));
                            }
                        } else {
                            if (numStart < i + 1) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i + 1));
                            }
                        }
                        numStart = i + 1;
                        possibleNumEnd = -1;
                        possibleNumEndUnit = null;
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                    if (possibleNumStart < possibleNumEnd) {
                        possibleNumStart = i;
                    }
                }
            }
        }
        if (numStart < matcher.end()) {
            numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, matcher.end()));
        }
    }
    for (CoreMap n : numbers) {
        String exp = n.get(CoreAnnotations.TextAnnotation.class);
        List<CoreLabel> ts = n.get(CoreAnnotations.TokensAnnotation.class);
        String label = ts.get(ts.size() - 1).get(CoreAnnotations.NumericTypeAnnotation.class);
        if ("UNIT".equals(label)) {
            label = "NUMBER";
        }
        try {
            Number num = NumberNormalizer.wordToNumber(exp);
            if (num == null) {
                logger.warning("NO NUMBER FOR: \"" + exp + "\"");
            }
            n.set(CoreAnnotations.NumericCompositeValueAnnotation.class, num);
            n.set(CoreAnnotations.NumericCompositeTypeAnnotation.class, label);
            for (CoreLabel t : ts) {
                t.set(CoreAnnotations.NumericCompositeValueAnnotation.class, num);
                t.set(CoreAnnotations.NumericCompositeTypeAnnotation.class, label);
            }
        } catch (NumberFormatException ex) {
            logger.log(Level.WARNING, "Invalid number for: \"" + exp + "\"", ex);
        }
    }
    return numbers;
}||||||||/**
 * Find and mark numbers (does not need NumberSequenceClassifier)
 * Each token is annotated with the numeric value and type
 * - CoreAnnotations.NumericTypeAnnotation.class: ORDINAL, UNIT (hundred, thousand,..., dozen, gross,...), NUMBER
 * - CoreAnnotations.NumericValueAnnotation.class: Number representing the numeric value of the token
 * ( two thousand => 2 1000 )
 *
 * Tries also to separate individual numbers like four five six,
 * while keeping numbers like four hundred and seven together
 * Annotate tokens belonging to each composite number with
 * - CoreAnnotations.NumericCompositeTypeAnnotation.class: ORDINAL (1st, 2nd), NUMBER (one hundred)
 * - CoreAnnotations.NumericCompositeValueAnnotation.class: Number representing the composite numeric value
 * ( two thousand => 2000 2000 )
 *
 * Also returns list of CoreMap representing the identified numbers
 *
 * The function is overly aggressive in marking possible numbers
 * - should either do more checks or use in conjunction with NumberSequenceClassifier
 * to avoid marking certain tokens (like second/NN) as numbers...
 *
 * @param annotation The annotation structure
 * @return list of CoreMap representing the identified numbers
 */
public static List<CoreMap> findNumbers(CoreMap annotation) {
    List<CoreLabel> tokens = annotation.get(CoreAnnotations.TokensAnnotation.class);
    for (CoreLabel token : tokens) {
        String w = token.word();
        w = w.trim().toLowerCase();
        if (/*("CD".equals(token.get(CoreAnnotations.PartOfSpeechAnnotation.class))  || */
        NumberNormalizer.numPattern.matcher(w).matches() || NumberNormalizer.numberTermPattern2.matcher(w).matches() || NumberSequenceClassifier.ORDINAL_PATTERN.matcher(w).matches() || NumberNormalizer.numEndUnitPattern.matcher(w).matches()) {
            // But maybe we don't care, this can just mark the potential numbers, something else can disregard those
            try {
                token.set(CoreAnnotations.NumericValueAnnotation.class, NumberNormalizer.wordToNumber(w));
                if (NumberSequenceClassifier.ORDINAL_PATTERN.matcher(w).find()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "ORDINAL");
                } else if (NumberNormalizer.numUnitPattern.matcher(w).matches()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "UNIT");
                } else if (NumberNormalizer.numEndUnitPattern.matcher(w).matches()) {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "UNIT");
                } else {
                    token.set(CoreAnnotations.NumericTypeAnnotation.class, "NUMBER");
                }
            } catch (Exception ex) {
                logger.warning("Error interpreting number " + w + ": " + ex.getMessage());
            }
        }
    }
    // TODO: Should we allow "," in written out numbers?
    // TODO: Handle "-" that is not with token?
    TokenSequenceMatcher matcher = numberPattern.getMatcher(tokens);
    List<CoreMap> numbers = new ArrayList<CoreMap>();
    while (matcher.find()) {
        @SuppressWarnings("unused") List<? extends CoreMap> matchedTokens = matcher.groupNodes();
        int numStart = matcher.start();
        int possibleNumEnd = -1;
        int lastUnitPos = -1;
        int possibleNumStart = -1;
        Number possibleNumEndUnit = null;
        Number lastUnit = null;
        // Check if we need to split matched chunk up more
        for (int i = matcher.start(); i < matcher.end(); i++) {
            CoreLabel token = tokens.get(i);
            CoreLabel prev = (i > matcher.start()) ? tokens.get(i - 1) : null;
            Number num = token.get(CoreAnnotations.NumericValueAnnotation.class);
            Number prevNum = (prev != null) ? prev.get(CoreAnnotations.NumericValueAnnotation.class) : null;
            String w = token.word();
            w = w.trim().toLowerCase();
            if (",".equals(w)) {
                if (lastUnit != null && lastUnitPos == i - 1) {
                    // OKAY, this may be one big number
                    possibleNumEnd = i;
                    possibleNumEndUnit = lastUnit;
                } else {
                    // Not one big number
                    if (numStart < i) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                        numStart = i + 1;
                        possibleNumEnd = -1;
                        possibleNumEndUnit = null;
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                }
                if (numStart == i) {
                    numStart = i + 1;
                }
            } else if ("and".equals(w)) {
                // Check if number before and was unit
                String prevWord = prev.word();
                if (lastUnitPos == i - 1 || (lastUnitPos == i - 2 && ",".equals(prevWord))) {
                // Okay
                } else {
                    // Two separate numbers
                    if (numStart < possibleNumEnd) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                        if (possibleNumStart >= possibleNumEnd) {
                            numStart = possibleNumStart;
                        } else {
                            numStart = i + 1;
                        }
                    } else if (numStart < i) {
                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                        numStart = i + 1;
                    }
                    if (lastUnitPos < numStart) {
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                    possibleNumEnd = -1;
                    possibleNumEndUnit = null;
                }
            } else {
                // NUMBER or ORDINAL
                String numType = token.get(CoreAnnotations.NumericTypeAnnotation.class);
                if ("UNIT".equals(numType)) {
                    // Compare this unit with previous
                    if (lastUnit == null || lastUnit.longValue() > num.longValue()) {
                    // lastUnit larger than this unit
                    // maybe four thousand two hundred?
                    // OKAY, probably one big number
                    } else {
                        if (numStart < possibleNumEnd) {
                            // Not one big number  ( had a comma )
                            if (num.longValue() >= possibleNumEndUnit.longValue()) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                                if (possibleNumStart >= possibleNumEnd) {
                                    numStart = possibleNumStart;
                                } else {
                                    numStart = i;
                                }
                                possibleNumEnd = -1;
                                possibleNumEndUnit = null;
                            }
                        } else {
                        // unit is increasing - can be okay, maybe five hundred thousand?
                        // what about four hundred five thousand
                        // unit might also be the same, as in thousand thousand,
                        // which we convert to million
                        }
                    }
                    lastUnit = num;
                    lastUnitPos = i;
                } else {
                    // Normal number
                    if (num == null) {
                        logger.warning("NO NUMBER: " + token.word());
                        continue;
                    }
                    if (prevNum != null) {
                        if (num.doubleValue() > 0) {
                            if (num.doubleValue() < 10) {
                                // [one to nine]  [0-9]
                                if (NumberNormalizer.numPattern.matcher(prev.word()).matches() || prevNum.longValue() < 10 || prevNum.longValue() % 10 != 0) {
                                    // two separate numbers
                                    if (numStart < i) {
                                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                                    }
                                    numStart = i;
                                    possibleNumEnd = -1;
                                    possibleNumEndUnit = null;
                                    lastUnit = null;
                                    lastUnitPos = -1;
                                }
                            } else {
                                String prevNumType = prev.get(CoreAnnotations.NumericTypeAnnotation.class);
                                if ("UNIT".equals(prevNumType)) {
                                // OKAY
                                } else if (!ordinalUnitPattern.matcher(w).matches()) {
                                    // Start of new number
                                    if (numStart < i) {
                                        numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i));
                                    }
                                    numStart = i;
                                    possibleNumEnd = -1;
                                    possibleNumEndUnit = null;
                                    lastUnit = null;
                                    lastUnitPos = -1;
                                }
                            }
                        }
                    }
                    if ("ORDINAL".equals(numType)) {
                        if (possibleNumEnd >= 0) {
                            if (numStart < possibleNumEnd) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, possibleNumEnd));
                            }
                            if (possibleNumStart > possibleNumEnd) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, possibleNumStart, i + 1));
                            } else {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, possibleNumEnd + 1, i + 1));
                            }
                        } else {
                            if (numStart < i + 1) {
                                numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, i + 1));
                            }
                        }
                        numStart = i + 1;
                        possibleNumEnd = -1;
                        possibleNumEndUnit = null;
                        lastUnit = null;
                        lastUnitPos = -1;
                    }
                    if (possibleNumStart < possibleNumEnd) {
                        possibleNumStart = i;
                    }
                }
            }
        }
        if (numStart < matcher.end()) {
            numbers.add(ChunkAnnotationUtils.getAnnotatedChunk(annotation, numStart, matcher.end()));
        }
    }
    for (CoreMap n : numbers) {
        String exp = n.get(CoreAnnotations.TextAnnotation.class);
        List<CoreLabel> ts = n.get(CoreAnnotations.TokensAnnotation.class);
        String label = ts.get(ts.size() - 1).get(CoreAnnotations.NumericTypeAnnotation.class);
        if ("UNIT".equals(label)) {
            label = "NUMBER";
        }
        try {
            Number num = NumberNormalizer.wordToNumber(exp);
            if (num == null) {
                logger.warning("NO NUMBER FOR: \"" + exp + "\"");
            }
            n.set(CoreAnnotations.NumericCompositeValueAnnotation.class, num);
            n.set(CoreAnnotations.NumericCompositeTypeAnnotation.class, label);
            for (CoreLabel t : ts) {
                t.set(CoreAnnotations.NumericCompositeValueAnnotation.class, num);
                t.set(CoreAnnotations.NumericCompositeTypeAnnotation.class, label);
            }
        } catch (NumberFormatException ex) {
            logger.log(Level.WARNING, "Invalid number for: \"" + exp + "\"", ex);
        }
    }
    return numbers;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockComment
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(SingleMemberAnnotationExpr
							StringLiteralExpr
							Name
						)
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NullLiteralExpr
										(MethodCallExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										NullLiteralExpr
										(MethodCallExpr
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								StringLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									StringLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											StringLiteralExpr
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ContinueStmt
													)
												)
												LineComment
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					(ClassExpr
																						(ClassOrInterfaceType
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(IfStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			StringLiteralExpr
																		)
																		(IfStmt
																			(UnaryExpr
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(IfStmt
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(UnaryExpr
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NullLiteralExpr
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NullLiteralExpr
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(UnaryExpr
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																			)
																		)
																		(BlockStmt
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(BinaryExpr
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				(BinaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																			)
																			(BinaryExpr
																				(BinaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																				(IntegerLiteralExpr
																				)
																			)
																		)
																		(BlockStmt
																			(IfStmt
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																				(BlockStmt
																					(ExpressionStmt
																						(MethodCallExpr
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				LineComment
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					(UnaryExpr
																						(IntegerLiteralExpr
																						)
																					)
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					(UnaryExpr
																						(IntegerLiteralExpr
																						)
																					)
																				)
																			)
																		)
																		LineComment
																	)
																)
															)
														)
													)
												)
											)
											(IfStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													StringLiteralExpr
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(UnaryExpr
																				(IntegerLiteralExpr
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			NullLiteralExpr
																		)
																	)
																)
																LineComment
															)
														)
													)
												)
												(BlockStmt
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														StringLiteralExpr
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												LineComment
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(BlockStmt
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
												)
											)
											LineComment
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(MethodCallExpr
								SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(BlockComment
						)
					)
					(BlockStmt
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(BinaryExpr
												(BinaryExpr
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													StringLiteralExpr
												)
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(IfStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ClassExpr
															(ClassOrInterfaceType
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(ClassExpr
													(ClassOrInterfaceType
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(SingleMemberAnnotationExpr
							StringLiteralExpr
							Name
						)
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(WildcardType
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(UnaryExpr
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NullLiteralExpr
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										NullLiteralExpr
										(MethodCallExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NullLiteralExpr
											)
										)
										NullLiteralExpr
										(MethodCallExpr
											(ClassExpr
												(ClassOrInterfaceType
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								StringLiteralExpr
							)
							(IfStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									StringLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											StringLiteralExpr
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(BinaryExpr
																StringLiteralExpr
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ContinueStmt
													)
												)
												LineComment
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(IntegerLiteralExpr
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(VariableDeclarationExpr
																			(VariableDeclarator
																				(MethodCallExpr
																					(ClassExpr
																						(ClassOrInterfaceType
																							SimpleName
																							(ClassOrInterfaceType
																								SimpleName
																							)
																						)
																					)
																					SimpleName
																					NameExpr
																						SimpleName
																				)
																				SimpleName
																				(ClassOrInterfaceType
																					SimpleName
																				)
																			)
																		)
																	)
																	(IfStmt
																		(MethodCallExpr
																			NameExpr
																				SimpleName
																			SimpleName
																			StringLiteralExpr
																		)
																		(IfStmt
																			(UnaryExpr
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						NameExpr
																							SimpleName
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																			)
																			(BlockStmt
																				(IfStmt
																					(BinaryExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																					)
																					(BlockStmt
																						(ExpressionStmt
																							(MethodCallExpr
																								(MethodCallExpr
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									NameExpr
																										SimpleName
																									SimpleName
																									NameExpr
																										SimpleName
																								)
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																						)
																					)
																					LineComment
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NameExpr
																							SimpleName
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(UnaryExpr
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NullLiteralExpr
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						NullLiteralExpr
																					)
																				)
																				(ExpressionStmt
																					(AssignExpr
																						NameExpr
																							SimpleName
																						(UnaryExpr
																							(IntegerLiteralExpr
																							)
																						)
																					)
																				)
																			)
																		)
																		(BlockStmt
																		)
																	)
																)
																(BlockStmt
																	(IfStmt
																		(BinaryExpr
																			(BinaryExpr
																				(MethodCallExpr
																					SimpleName
																					(MethodCallExpr
																						(MethodCallExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																						SimpleName
																						(FieldAccessExpr
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				(BinaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																			)
																			(BinaryExpr
																				(BinaryExpr
																					(MethodCallExpr
																						SimpleName
																						NameExpr
																							SimpleName
																					)
																					(IntegerLiteralExpr
																					)
																				)
																				(IntegerLiteralExpr
																				)
																			)
																		)
																		(BlockStmt
																			(IfStmt
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																				(BlockStmt
																					(ExpressionStmt
																						(MethodCallExpr
																							(MethodCallExpr
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								NameExpr
																									SimpleName
																								SimpleName
																								NameExpr
																									SimpleName
																							)
																							SimpleName
																							NameExpr
																								SimpleName
																						)
																					)
																				)
																				LineComment
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					(UnaryExpr
																						(IntegerLiteralExpr
																						)
																					)
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NullLiteralExpr
																				)
																			)
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					(UnaryExpr
																						(IntegerLiteralExpr
																						)
																					)
																				)
																			)
																		)
																		LineComment
																	)
																)
															)
														)
													)
												)
											)
											(IfStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													StringLiteralExpr
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
															(IfStmt
																(BinaryExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				(BinaryExpr
																					NameExpr
																						SimpleName
																					(IntegerLiteralExpr
																					)
																				)
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(BinaryExpr
																NameExpr
																	SimpleName
																(IntegerLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
													(BinaryExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
														)
														(BlockStmt
															(IfStmt
																(BinaryExpr
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
																(BlockStmt
																	(ExpressionStmt
																		(MethodCallExpr
																			(MethodCallExpr
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				NameExpr
																					SimpleName
																				SimpleName
																				NameExpr
																					SimpleName
																			)
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																	)
																	(IfStmt
																		(BinaryExpr
																			NameExpr
																				SimpleName
																			NameExpr
																				SimpleName
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																		(BlockStmt
																			(ExpressionStmt
																				(AssignExpr
																					NameExpr
																						SimpleName
																					NameExpr
																						SimpleName
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			(UnaryExpr
																				(IntegerLiteralExpr
																				)
																			)
																		)
																	)
																	(ExpressionStmt
																		(AssignExpr
																			NameExpr
																				SimpleName
																			NullLiteralExpr
																		)
																	)
																)
																LineComment
															)
														)
													)
												)
												(BlockStmt
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														StringLiteralExpr
													)
												)
											)
										)
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IfStmt
													(BinaryExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(BinaryExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(MethodCallExpr
															(MethodCallExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
																SimpleName
																NameExpr
																	SimpleName
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(BinaryExpr
																		NameExpr
																			SimpleName
																		(IntegerLiteralExpr
																		)
																	)
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
												LineComment
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
													)
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(UnaryExpr
																(IntegerLiteralExpr
																)
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(UnaryExpr
														(IntegerLiteralExpr
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
											)
										)
										(BlockStmt
										)
									)
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
									)
									(BlockStmt
										(IfStmt
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(MethodCallExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															NameExpr
																SimpleName
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														NullLiteralExpr
													)
												)
												(ExpressionStmt
													(AssignExpr
														NameExpr
															SimpleName
														(UnaryExpr
															(IntegerLiteralExpr
															)
														)
													)
												)
											)
											LineComment
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											LineComment
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ForeachStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								SimpleName
								(MethodCallExpr
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						StringLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
					)
				)
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BinaryExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											StringLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ForeachStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(ClassExpr
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							(VariableDeclarationExpr
								(VariableDeclarator
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

