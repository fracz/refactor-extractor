public double valueForADoc(double[][] weights, int docIndex) {
    if (multiThreadGrad == 0)
        return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);
    else
        return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();
}||||||||public double valueForADoc(double[][] weights, int docIndex) {
    if (prior == DROPOUT_PRIOR)
        return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);
    else
        return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ReturnStmt
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
			(ReturnStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NullLiteralExpr
					NameExpr
						SimpleName
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(ReturnStmt
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
			)
			(ReturnStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					NullLiteralExpr
					NameExpr
						SimpleName
					(BooleanLiteralExpr
					)
					(BooleanLiteralExpr
					)
					SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ArrayType
				(PrimitiveType
				)
			)
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

