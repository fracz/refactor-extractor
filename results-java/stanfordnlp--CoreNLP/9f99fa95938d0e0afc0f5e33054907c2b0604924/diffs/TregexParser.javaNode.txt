// passing arguments down the tree - in this case the relation that
// pertains to this node gets passed all the way down to the Description node
public final TregexPattern Node(Relation r) throws ParseException {
    TregexPattern node;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case 12:
            {
                jj_consume_token(12);
                node = SubNode(r);
                jj_consume_token(13);
                break;
            }
        case IDENTIFIER:
        case BLANK:
        case REGEX:
        case 14:
        case 15:
        case 18:
        case 19:
            {
                node = ModDescription(r);
                break;
            }
        default:
            jj_la1[0] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    {
        if ("" != null)
            return node;
    }
    throw new Error("Missing return statement in function");
}||||||||// passing arguments down the tree - in this case the relation that
// pertains to this node gets passed all the way down to the Description node
public final TregexPattern Node(Relation r) throws ParseException {
    TregexPattern node;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case 12:
            jj_consume_token(12);
            node = SubNode(r);
            jj_consume_token(13);
            break;
        case IDENTIFIER:
        case BLANK:
        case REGEX:
        case 14:
        case 15:
        case 18:
        case 19:
            node = ModDescription(r);
            break;
        default:
            jj_la1[0] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    {
        if (true)
            return node;
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(BlockStmt
			(IfStmt
				(BinaryExpr
					StringLiteralExpr
					NullLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
			)
			(SwitchEntryStmt
				(IntegerLiteralExpr
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(BreakStmt
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(BlockStmt
			(IfStmt
				(BooleanLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	LineComment
)

