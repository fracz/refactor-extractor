/**
 * Set the word value for the label.  Also, clears the lemma, since
 * that may have changed if the word changed.
 */
@Override
public void setWord(String word) {
    set(CoreAnnotations.TextAnnotation.class, word);
    // pado feb 09: if you change the word, delete the lemma.
    remove(CoreAnnotations.LemmaAnnotation.class);
}||||||||/**
 * Set the word value for the label.  Also, clears the lemma, since
 * that may have changed if the word changed.
 */
@Override
public void setWord(String word) {
    set(CoreAnnotations.TextAnnotation.class, word);
    // pado feb 09: if you change the word, delete the lemma.
    if (containsKey(CoreAnnotations.LemmaAnnotation.class)) {
        // note[gabor]: set to null rather than removing for efficiency
        set(CoreAnnotations.LemmaAnnotation.class, null);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(MethodCallExpr
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ClassExpr
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
						NullLiteralExpr
						SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

