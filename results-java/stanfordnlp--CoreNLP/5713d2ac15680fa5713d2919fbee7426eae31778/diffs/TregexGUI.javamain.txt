/**
 * Main method for launching a new tregex gui object
 * <br>
 * If the argument <code>-transformer class</code> is given, that
 * class is used as a TreeTransformer when loading in trees.
 * <br>
 * All other arguments will be interpreted as filenames to preload.
 */
public static void main(String[] args) {
    if (isMacOSX()) {
        setMacProperties();
    }
    Properties props = new Properties();
    List<String> filenames = Generics.newArrayList();
    for (int argIndex = 0; argIndex < args.length; ) {
        if (args[argIndex].equalsIgnoreCase("-" + TRANSFORMER)) {
            props.setProperty(TRANSFORMER, args[argIndex + 1]);
            argIndex += 2;
        } else {
            filenames.add(args[argIndex++]);
        }
    }
    new TregexGUI(props, filenames);
}||||||||/**
 * Main method for launching a new tregex gui object
 * @param args There are no command-line arguments used
 */
public static void main(String[] args) {
    if (isMacOSX()) {
        setMacProperties();
    }
    new TregexGUI(args);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ArrayAccessExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(ArrayAccessExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(ObjectCreationExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

