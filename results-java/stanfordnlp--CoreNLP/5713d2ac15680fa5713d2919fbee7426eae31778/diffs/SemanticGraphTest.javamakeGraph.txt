public SemanticGraph makeGraph() {
    Tree tree;
    try {
        tree = new PennTreeReader(new StringReader("(S1 (S (S (S (NP (DT The) (NN CD14) (NN LPS) (NN receptor)) (VP (VBZ is) (, ,) (ADVP (RB however)) (, ,) (ADVP (RB up)) (VP (VBN regulated) (PRN (-LRB- -LRB-) (FRAG (RB not) (ADJP (RB down) (VBN regulated))) (-RRB- -RRB-)) (PP (IN in) (NP (JJ tolerant) (NNS cells)))))) (, ,) (CC and) (S (NP (NN LPS)) (VP (MD can) (, ,) (PP (IN in) (NP (NN fact))) (, ,) (ADVP (RB still)) (VP (VB lead) (PP (TO to) (NP (NP (NN activation)) (PP (IN of) (NP (JJ tolerant) (NNS cells))))) (SBAR (IN as) (S (VP (VBN evidenced) (PP (IN by) (NP (NP (NN mobilization)) (PP (IN of) (NP (DT the) (NN transcription) (NN factor) (NP (NP (JJ nuclear) (NN factor) (NN kappa) (NN B)) (PRN (-LRB- -LRB-) (NP (NN NF-kappa) (NN B)) (-RRB- -RRB-)))))))))))))) (. .)))"), new LabeledScoredTreeFactory()).readTree();
    } catch (IOException e) {
        // the tree should parse correctly
        throw new RuntimeException(e);
    }
    return SemanticGraphFactory.makeFromTree(tree, SemanticGraphFactory.Mode.BASIC, true, true);
}||||||||public SemanticGraph makeGraph() {
    Tree tree;
    try {
        tree = new PennTreeReader(new StringReader("(S1 (S (S (S (NP (DT The) (NN CD14) (NN LPS) (NN receptor)) (VP (VBZ is) (, ,) (ADVP (RB however)) (, ,) (ADVP (RB up)) (VP (VBN regulated) (PRN (-LRB- -LRB-) (FRAG (RB not) (ADJP (RB down) (VBN regulated))) (-RRB- -RRB-)) (PP (IN in) (NP (JJ tolerant) (NNS cells)))))) (, ,) (CC and) (S (NP (NN LPS)) (VP (MD can) (, ,) (PP (IN in) (NP (NN fact))) (, ,) (ADVP (RB still)) (VP (VB lead) (PP (TO to) (NP (NP (NN activation)) (PP (IN of) (NP (JJ tolerant) (NNS cells))))) (SBAR (IN as) (S (VP (VBN evidenced) (PP (IN by) (NP (NP (NN mobilization)) (PP (IN of) (NP (DT the) (NN transcription) (NN factor) (NP (NP (JJ nuclear) (NN factor) (NN kappa) (NN B)) (PRN (-LRB- -LRB-) (NP (NN NF-kappa) (NN B)) (-RRB- -RRB-)))))))))))))) (. .)))"), new LabeledScoredTreeFactory()).readTree();
    } catch (IOException e) {
        // the tree should parse correctly
        throw new RuntimeException(e);
    }
    return SemanticGraphFactory.makeFromTree(tree, SemanticGraphFactory.Mode.BASIC, true, false, true);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(ObjectCreationExpr
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ThrowStmt
						(ObjectCreationExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						LineComment
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(ObjectCreationExpr
								(ObjectCreationExpr
									StringLiteralExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
)

