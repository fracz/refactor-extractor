public final TregexPattern Relation() throws ParseException {
    Token t, strArg = null, numArg = null, negation = null, cat = null;
    // the easiest way to check if an optional production was used
    // is to set the token to null and then check it later
    Relation r;
    TregexPattern child;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case RELATION:
            {
                t = jj_consume_token(RELATION);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case NUMBER:
                        {
                            numArg = jj_consume_token(NUMBER);
                            break;
                        }
                    default:
                        jj_la1[16] = jj_gen;
                        ;
                }
                break;
            }
        case REL_W_STR_ARG:
            {
                t = jj_consume_token(REL_W_STR_ARG);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 12:
                        {
                            jj_consume_token(12);
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 14:
                                    {
                                        negation = jj_consume_token(14);
                                        break;
                                    }
                                default:
                                    jj_la1[17] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 15:
                                    {
                                        cat = jj_consume_token(15);
                                        break;
                                    }
                                default:
                                    jj_la1[18] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case REGEX:
                                    {
                                        strArg = jj_consume_token(REGEX);
                                        break;
                                    }
                                case IDENTIFIER:
                                    {
                                        strArg = jj_consume_token(IDENTIFIER);
                                        break;
                                    }
                                case BLANK:
                                    {
                                        strArg = jj_consume_token(BLANK);
                                        break;
                                    }
                                default:
                                    jj_la1[19] = jj_gen;
                                    jj_consume_token(-1);
                                    throw new ParseException();
                            }
                            jj_consume_token(13);
                            break;
                        }
                    case REGEX:
                    case 14:
                        {
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 14:
                                    {
                                        negation = jj_consume_token(14);
                                        break;
                                    }
                                default:
                                    jj_la1[20] = jj_gen;
                                    ;
                            }
                            strArg = jj_consume_token(REGEX);
                            break;
                        }
                    default:
                        jj_la1[21] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                break;
            }
        default:
            jj_la1[22] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    if (strArg != null) {
        String negStr = negation == null ? "" : "!";
        String catStr = cat == null ? "" : "@";
        r = Relation.getRelation(t.image, negStr + catStr + strArg.image, basicCatFunction, headFinder);
    } else if (numArg != null) {
        if (t.image.endsWith("-")) {
            t.image = t.image.substring(0, t.image.length() - 1);
            numArg.image = "-" + numArg.image;
        }
        r = Relation.getRelation(t.image, numArg.image, basicCatFunction, headFinder);
    } else {
        r = Relation.getRelation(t.image, basicCatFunction, headFinder);
    }
    child = Node(r);
    {
        if ("" != null)
            return child;
    }
    throw new Error("Missing return statement in function");
}||||||||public final TregexPattern Relation() throws ParseException {
    Token t, strArg = null, numArg = null, negation = null, cat = null;
    // the easiest way to check if an optional production was used
    // is to set the token to null and then check it later
    Relation r;
    TregexPattern child;
    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
        case RELATION:
            {
                t = jj_consume_token(RELATION);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case NUMBER:
                        {
                            numArg = jj_consume_token(NUMBER);
                            break;
                        }
                    default:
                        jj_la1[16] = jj_gen;
                        ;
                }
                break;
            }
        case REL_W_STR_ARG:
            {
                t = jj_consume_token(REL_W_STR_ARG);
                switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                    case 12:
                        {
                            jj_consume_token(12);
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 14:
                                    {
                                        negation = jj_consume_token(14);
                                        break;
                                    }
                                default:
                                    jj_la1[17] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 15:
                                    {
                                        cat = jj_consume_token(15);
                                        break;
                                    }
                                default:
                                    jj_la1[18] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case REGEX:
                                    {
                                        strArg = jj_consume_token(REGEX);
                                        break;
                                    }
                                case IDENTIFIER:
                                    {
                                        strArg = jj_consume_token(IDENTIFIER);
                                        break;
                                    }
                                case BLANK:
                                    {
                                        strArg = jj_consume_token(BLANK);
                                        break;
                                    }
                                default:
                                    jj_la1[19] = jj_gen;
                                    jj_consume_token(-1);
                                    throw new ParseException();
                            }
                            jj_consume_token(13);
                            break;
                        }
                    case 23:
                        {
                            jj_consume_token(23);
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 14:
                                    {
                                        negation = jj_consume_token(14);
                                        break;
                                    }
                                default:
                                    jj_la1[20] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 15:
                                    {
                                        cat = jj_consume_token(15);
                                        break;
                                    }
                                default:
                                    jj_la1[21] = jj_gen;
                                    ;
                            }
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case REGEX:
                                    {
                                        strArg = jj_consume_token(REGEX);
                                        break;
                                    }
                                case IDENTIFIER:
                                    {
                                        strArg = jj_consume_token(IDENTIFIER);
                                        break;
                                    }
                                case BLANK:
                                    {
                                        strArg = jj_consume_token(BLANK);
                                        break;
                                    }
                                default:
                                    jj_la1[22] = jj_gen;
                                    jj_consume_token(-1);
                                    throw new ParseException();
                            }
                            jj_consume_token(24);
                            break;
                        }
                    case REGEX:
                    case 14:
                        {
                            switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                case 14:
                                    {
                                        negation = jj_consume_token(14);
                                        break;
                                    }
                                default:
                                    jj_la1[23] = jj_gen;
                                    ;
                            }
                            strArg = jj_consume_token(REGEX);
                            break;
                        }
                    default:
                        jj_la1[24] = jj_gen;
                        jj_consume_token(-1);
                        throw new ParseException();
                }
                break;
            }
        default:
            jj_la1[25] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    if (strArg != null) {
        String negStr = negation == null ? "" : "!";
        String catStr = cat == null ? "" : "@";
        r = Relation.getRelation(t.image, negStr + catStr + strArg.image, basicCatFunction, headFinder);
    } else if (numArg != null) {
        if (t.image.endsWith("-")) {
            t.image = t.image.substring(0, t.image.length() - 1);
            numArg.image = "-" + numArg.image;
        }
        r = Relation.getRelation(t.image, numArg.image, basicCatFunction, headFinder);
    } else {
        r = Relation.getRelation(t.image, basicCatFunction, headFinder);
    }
    child = Node(r);
    {
        if ("" != null)
            return child;
    }
    throw new Error("Missing return statement in function");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(EmptyStmt
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
												SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(BlockStmt
			(IfStmt
				(BinaryExpr
					StringLiteralExpr
					NullLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SwitchStmt
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(EmptyStmt
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				NameExpr
					SimpleName
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					(SwitchStmt
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
												SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchStmt
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
												SimpleName
											)
										)
										(ThrowStmt
											(ObjectCreationExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										SimpleName
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							NameExpr
								SimpleName
						)
						(SwitchEntryStmt
							(IntegerLiteralExpr
							)
							(BlockStmt
								(SwitchStmt
									(SwitchEntryStmt
										(IntegerLiteralExpr
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														SimpleName
													)
												)
											)
											(BreakStmt
											)
										)
									)
									(SwitchEntryStmt
										(ExpressionStmt
											(AssignExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(EmptyStmt
										)
									)
									(ConditionalExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(UnaryExpr
													(IntegerLiteralExpr
													)
												)
											)
										)
										NameExpr
											SimpleName
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
						)
						(SwitchEntryStmt
							(ExpressionStmt
								(AssignExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
									SimpleName
								)
							)
							(ThrowStmt
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(IntegerLiteralExpr
										)
									)
								)
							)
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BreakStmt
					)
				)
			)
			(SwitchEntryStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
						SimpleName
					)
				)
				(ThrowStmt
					(ObjectCreationExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
			(ConditionalExpr
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					NullLiteralExpr
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(BlockStmt
					(IfStmt
						(MethodCallExpr
							StringLiteralExpr
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(IntegerLiteralExpr
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BinaryExpr
										StringLiteralExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
								StringLiteralExpr
								StringLiteralExpr
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
				)
			)
		)
		(BlockStmt
			(IfStmt
				(BinaryExpr
					StringLiteralExpr
					NullLiteralExpr
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

