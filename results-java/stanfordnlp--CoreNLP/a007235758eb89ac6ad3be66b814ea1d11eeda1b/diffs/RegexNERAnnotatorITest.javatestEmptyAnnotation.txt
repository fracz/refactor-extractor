/**
 * Test that if there are no annotations at all, the annotator
 * throws an exception.  We are happy if we can catch an exception
 * and continue, and if we don't get any exceptions, we throw an
 * exception of our own.
 */
public void testEmptyAnnotation() {
    try {
        annotator.annotate(new Annotation(""));
    } catch (RuntimeException e) {
        return;
    }
    fail("Never expected to get this far... the annotator should have thrown an exception by now");
}||||||||/**
 * Test that if there are no annotations at all, the annotator
 * throws an exception.  We are happy if we can catch an exception
 * and continue, and if we don't get any exceptions, we throw an
 * exception of our own.
 */
public void testEmptyAnnotation() {
    try {
        annotator.annotate(new Annotation(""));
    } catch (RuntimeException e) {
        return;
    }
    throw new RuntimeException("Never expected to get this far... the annotator should have thrown an exception by now");
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(CatchClause
				(BlockStmt
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							StringLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ThrowStmt
			(ObjectCreationExpr
				StringLiteralExpr
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

