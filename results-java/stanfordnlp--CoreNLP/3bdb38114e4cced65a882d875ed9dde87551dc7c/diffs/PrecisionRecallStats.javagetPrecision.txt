/**
 * Returns the current precision: <tt>tp/(tp+fp)</tt>.
 * Returns 1.0 if tp and fp are both 0.
 */
public double getPrecision() {
    if (tpCount == 0 && fpCount == 0) {
        return (1.0);
    }
    return (((double) tpCount) / (tpCount + fpCount));
}||||||||/**
 * Returns the current precision: <tt>tp/(tp+fp)</tt>.
 * Returns 1.0 if tp and fp are both 0.
 */
public double getPrecision() {
    if (tpCount == 0 && fpCount == 0) {
        return 1.0;
    }
    return ((double) tpCount) / (tpCount + fpCount);
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(EnclosedExpr
						(DoubleLiteralExpr
						)
					)
				)
			)
		)
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(EnclosedExpr
						(CastExpr
							NameExpr
								SimpleName
							(PrimitiveType
							)
						)
					)
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					(IntegerLiteralExpr
					)
				)
			)
			(BlockStmt
				(ReturnStmt
					(DoubleLiteralExpr
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(EnclosedExpr
					(CastExpr
						NameExpr
							SimpleName
						(PrimitiveType
						)
					)
				)
				(EnclosedExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

