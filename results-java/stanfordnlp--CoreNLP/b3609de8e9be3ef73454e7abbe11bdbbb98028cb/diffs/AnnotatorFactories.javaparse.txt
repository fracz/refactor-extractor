// 
// Parser
// 
public static AnnotatorFactory parse(final Properties properties, final AnnotatorImplementations annotatorImplementation) {
    return new AnnotatorFactory(Annotator.STANFORD_PARSE, ParserAnnotator.class, properties) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return annotatorImplementation.parse(properties);
        }

        @Override
        public String additionalSignature() {
            if (StanfordCoreNLP.usesBinaryTrees(properties) || PropertiesUtils.getBool(properties, Annotator.STANFORD_PARSE + ".binaryTrees", false)) {
                return "parse.binaryTrees=true";
            }
            return "";
        }
    };
}||||||||// 
// Parser
// 
public static AnnotatorFactory parse(final Properties properties, final AnnotatorImplementations annotatorImplementation) {
    return new AnnotatorFactory(Annotator.STANFORD_PARSE, ParserAnnotator.class, properties) {

        private static final long serialVersionUID = 1L;

        @Override
        public Annotator create() {
            return annotatorImplementation.parse(properties);
        }
    };
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(FieldDeclaration
					(VariableDeclarator
						(LongLiteralExpr
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(MethodDeclaration
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									(BooleanLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ReturnStmt
									StringLiteralExpr
								)
							)
						)
						(ReturnStmt
							StringLiteralExpr
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(ObjectCreationExpr
				(FieldDeclaration
					(VariableDeclarator
						(LongLiteralExpr
						)
						SimpleName
						(PrimitiveType
						)
					)
				)
				(MethodDeclaration
					(BlockStmt
						(ReturnStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
					SimpleName
					(MarkerAnnotationExpr
						Name
					)
				)
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ClassExpr
					(ClassOrInterfaceType
						SimpleName
					)
				)
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	LineComment
)

