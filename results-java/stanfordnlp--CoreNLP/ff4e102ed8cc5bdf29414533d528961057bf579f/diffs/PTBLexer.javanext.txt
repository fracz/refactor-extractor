/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public Object next() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;
    char[] zzCMapL = ZZ_CMAP;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        yychar += zzMarkedPosL - zzStartRead;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL)
                    zzInput = zzBufferL[zzCurrentPosL++];
                else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = zzBufferL[zzCurrentPosL++];
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                int zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 35:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, yytext());
                }
            case 51:
                break;
            case 38:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 9;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 10;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    // wrong the length of the trailing context.
                    while (yylength() > 0) {
                        char last = yycharat(yylength() - 1);
                        if (last == ' ' || last == '\t' || (last >= '\n' && last <= '\r' || last == '\u0085')) {
                            yypushback(1);
                        } else {
                            break;
                        }
                    }
                    return getNext();
                }
            case 52:
                break;
            case 8:
                {
                    if (ptb3Dashes) {
                        return getNext(ptbmdash, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 53:
                break;
            case 19:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '*'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 54:
                break;
            case 15:
                {
                    return handleQuotes(yytext(), false);
                }
            case 55:
                break;
            case 32:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return handleQuotes(yytext(), false);
                }
            case 56:
                break;
            case 24:
                {
                    String txt = yytext();
                    String origText = txt;
                    if (normalizeParentheses) {
                        txt = LEFT_PAREN_PATTERN.matcher(txt).replaceAll(openparen);
                        txt = RIGHT_PAREN_PATTERN.matcher(txt).replaceAll(closeparen);
                    }
                    return getNext(txt, origText);
                }
            case 57:
                break;
            case 30:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    String txt = yytext();
                    String origText = txt;
                    if (normalizeParentheses) {
                        txt = LEFT_PAREN_PATTERN.matcher(txt).replaceAll(openparen);
                        txt = RIGHT_PAREN_PATTERN.matcher(txt).replaceAll(closeparen);
                    }
                    return getNext(txt, origText);
                }
            case 58:
                break;
            case 45:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNormalizedAmpNext();
                }
            case 59:
                break;
            case 31:
                {
                    return getNormalizedAmpNext();
                }
            case 60:
                break;
            case 34:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, yytext());
                }
            case 61:
                break;
            case 49:
                // lookahead expression with fixed base length
                zzMarkedPos = zzStartRead + 4;
                {
                    return getNext();
                }
            case 62:
                break;
            case 41:
                // lookahead expression with fixed lookahead length
                yypushback(2);
                {
                    return getNext();
                }
            case 63:
                break;
            case 39:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 15;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 14;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    return getNext();
                }
            case 64:
                break;
            case 37:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 13;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 14;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    return getNext();
                }
            case 65:
                break;
            case 4:
                {
                    return getNext();
                }
            case 66:
                break;
            case 21:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext();
                }
            case 67:
                break;
            case 47:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    return getNext(txt, yytext());
                }
            case 68:
                break;
            case 23:
                {
                    final String origTxt = yytext();
                    String txt = origTxt;
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, origTxt);
                }
            case 69:
                break;
            case 6:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(closeparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 70:
                break;
            case 7:
                {
                    final String origTxt = yytext();
                    String tmp = removeSoftHyphens(origTxt);
                    if (americanize) {
                        tmp = Americanize.americanize(tmp);
                    }
                    return getNext(tmp, origTxt);
                }
            case 71:
                break;
            case 28:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 3;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 4;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    final String origTxt = yytext();
                    String tmp = removeSoftHyphens(origTxt);
                    if (americanize) {
                        tmp = Americanize.americanize(tmp);
                    }
                    return getNext(tmp, origTxt);
                }
            case 72:
                break;
            case 16:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(closebrace, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 73:
                break;
            case 44:
                {
                    yypushback(2);
                    return getNext();
                }
            case 74:
                break;
            case 25:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '/'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 75:
                break;
            case 18:
                {
                    if (normalizeParentheses) {
                        return getNext(closeparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 76:
                break;
            case 50:
                {
                    String txt = yytext();
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    if (normalizeParentheses) {
                        txt = LEFT_PAREN_PATTERN.matcher(txt).replaceAll(openparen);
                        txt = RIGHT_PAREN_PATTERN.matcher(txt).replaceAll(closeparen);
                    }
                    return getNext(txt, yytext());
                }
            case 77:
                break;
            case 46:
                {
                    yypushback(3);
                    return getNext();
                }
            case 78:
                break;
            case 22:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return handleQuotes(yytext(), true);
                }
            case 79:
                break;
            case 2:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(openparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 80:
                break;
            case 36:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 5;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 6;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    final String txt = yytext();
                    return getNext(removeSoftHyphens(txt), txt);
                }
            case 81:
                break;
            case 20:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(openbrace, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 82:
                break;
            case 17:
                {
                    if (normalizeParentheses) {
                        return getNext(openparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 83:
                break;
            case 11:
                {
                    return handleEllipsis(yytext());
                }
            case 84:
                break;
            case 33:
                // lookahead expression with fixed base length
                zzMarkedPos = zzStartRead + 1;
                {
                    /* invert quote - often but not always right */
                    return handleQuotes(yytext(), true);
                }
            case 85:
                break;
            case 13:
                {
                    return normalizeFractions(yytext());
                }
            case 86:
                break;
            case 14:
                {
                    if (normalizeCurrency) {
                        return getNext(normalizeCurrency(yytext()), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 87:
                break;
            case 42:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 11;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 12;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    String s;
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 88:
                break;
            case 10:
                {
                    if (invertible) {
                        prevWordAfter.append(yytext());
                    }
                }
            case 89:
                break;
            case 3:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '/'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 90:
                break;
            case 43:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 91:
                break;
            case 12:
                {
                    if (yylength() >= 3 && yylength() <= 4 && ptb3Dashes) {
                        return getNext(ptbmdash, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 92:
                break;
            case 27:
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 93:
                break;
            case 9:
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 94:
                break;
            case 29:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 95:
                break;
            case 26:
                {
                    // this one should only match if we're basically at the end of file
                    // since the last one matches two things, even newlines
                    String s;
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 96:
                break;
            case 48:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 7;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 8;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    // wrong the length of the trailing context.
                    while (yylength() > 0) {
                        char last = yycharat(yylength() - 1);
                        if (last == ' ' || last == '\t' || (last >= '\n' && last <= '\r' || last == '\u0085')) {
                            yypushback(1);
                        } else {
                            break;
                        }
                    }
                    String s;
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 97:
                break;
            case 1:
                {
                    String str = yytext();
                    int first = str.charAt(0);
                    String msg = String.format("Untokenizable: %s (U+%s, decimal: %s)", yytext(), Integer.toHexString(first).toUpperCase(), Integer.toString(first));
                    switch(untokenizable) {
                        case NONE_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            break;
                        case FIRST_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            if (!this.seenUntokenizableCharacter) {
                                LOGGER.warning(msg);
                                this.seenUntokenizableCharacter = true;
                            }
                            break;
                        case ALL_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            LOGGER.warning(msg);
                            this.seenUntokenizableCharacter = true;
                            break;
                        case NONE_KEEP:
                            return getNext();
                        case FIRST_KEEP:
                            if (!this.seenUntokenizableCharacter) {
                                LOGGER.warning(msg);
                                this.seenUntokenizableCharacter = true;
                            }
                            return getNext();
                        case ALL_KEEP:
                            LOGGER.warning(msg);
                            this.seenUntokenizableCharacter = true;
                            return getNext();
                    }
                }
            case 98:
                break;
            case 40:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                        txt = delimit(txt, '*');
                    }
                    return getNext(txt, yytext());
                }
            case 99:
                break;
            case 5:
                {
                    if (tokenizeNLs) {
                        // js: for tokenizing carriage returns
                        return getNext(NEWLINE_TOKEN, yytext());
                    } else if (invertible) {
                        prevWordAfter.append(yytext());
                    }
                }
            case 100:
                break;
            default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    {
                        if (invertible) {
                            prevWordAfter.append(yytext());
                            String str = prevWordAfter.toString();
                            prevWordAfter.setLength(0);
                            prevWord.set(CoreAnnotations.AfterAnnotation.class, str);
                        }
                        return null;
                    }
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
        }
    }
}||||||||/**
 * Resumes scanning until the next regular expression is matched,
 * the end of input is encountered or an I/O-Error occurs.
 *
 * @return      the next token
 * @exception   java.io.IOException  if any I/O-Error occurs
 */
public Object next() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;
    char[] zzCMapL = ZZ_CMAP;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        yychar += zzMarkedPosL - zzStartRead;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL)
                    zzInput = zzBufferL[zzCurrentPosL++];
                else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = zzBufferL[zzCurrentPosL++];
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                if (zzNext == -1)
                    break zzForAction;
                zzState = zzNext;
                int zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8)
                        break zzForAction;
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 34:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, yytext());
                }
            case 49:
                break;
            case 8:
                {
                    if (ptb3Dashes) {
                        return getNext(ptbmdash, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 50:
                break;
            case 19:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '*'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 51:
                break;
            case 46:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 7;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 8;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    String s;
                    // wrong the length of the trailing context.
                    while (yylength() > 0) {
                        char last = yycharat(yylength() - 1);
                        if (last == ' ' || last == '\t' || (last >= '\n' && last <= '\r' || last == '\u0085')) {
                            yypushback(1);
                        } else {
                            break;
                        }
                    }
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 52:
                break;
            case 15:
                {
                    return handleQuotes(yytext(), false);
                }
            case 53:
                break;
            case 31:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return handleQuotes(yytext(), false);
                }
            case 54:
                break;
            case 21:
                {
                    String txt = yytext();
                    String origText = txt;
                    if (normalizeParentheses) {
                        txt = LEFT_PAREN_PATTERN.matcher(txt).replaceAll(openparen);
                        txt = RIGHT_PAREN_PATTERN.matcher(txt).replaceAll(closeparen);
                    }
                    return getNext(txt, origText);
                }
            case 55:
                break;
            case 43:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNormalizedAmpNext();
                }
            case 56:
                break;
            case 30:
                {
                    return getNormalizedAmpNext();
                }
            case 57:
                break;
            case 33:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, yytext());
                }
            case 58:
                break;
            case 47:
                // lookahead expression with fixed base length
                zzMarkedPos = zzStartRead + 4;
                {
                    return getNext();
                }
            case 59:
                break;
            case 39:
                // lookahead expression with fixed lookahead length
                yypushback(2);
                {
                    return getNext();
                }
            case 60:
                break;
            case 37:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 13;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 12;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    return getNext();
                }
            case 61:
                break;
            case 36:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 11;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 12;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    return getNext();
                }
            case 62:
                break;
            case 4:
                {
                    return getNext();
                }
            case 63:
                break;
            case 22:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext();
                }
            case 64:
                break;
            case 45:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                    }
                    return getNext(txt, yytext());
                }
            case 65:
                break;
            case 24:
                {
                    final String origTxt = yytext();
                    String txt = origTxt;
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    return getNext(txt, origTxt);
                }
            case 66:
                break;
            case 6:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(closeparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 67:
                break;
            case 7:
                {
                    final String origTxt = yytext();
                    String tmp = removeSoftHyphens(origTxt);
                    if (americanize) {
                        tmp = Americanize.americanize(tmp);
                    }
                    return getNext(tmp, origTxt);
                }
            case 68:
                break;
            case 28:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 3;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 4;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    final String origTxt = yytext();
                    String tmp = removeSoftHyphens(origTxt);
                    if (americanize) {
                        tmp = Americanize.americanize(tmp);
                    }
                    return getNext(tmp, origTxt);
                }
            case 69:
                break;
            case 16:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(closebrace, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 70:
                break;
            case 42:
                {
                    yypushback(2);
                    return getNext();
                }
            case 71:
                break;
            case 25:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '/'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 72:
                break;
            case 18:
                {
                    if (normalizeParentheses) {
                        return getNext(closeparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 73:
                break;
            case 48:
                {
                    String txt = yytext();
                    if (normalizeSpace) {
                        // txt = SINGLE_SPACE_PATTERN.matcher(txt).replaceAll("\u00A0"); // change to non-breaking space
                        // change space to non-breaking space
                        txt = txt.replace(' ', '\u00A0');
                    }
                    if (normalizeParentheses) {
                        txt = LEFT_PAREN_PATTERN.matcher(txt).replaceAll(openparen);
                        txt = RIGHT_PAREN_PATTERN.matcher(txt).replaceAll(closeparen);
                    }
                    return getNext(txt, yytext());
                }
            case 74:
                break;
            case 44:
                {
                    yypushback(3);
                    return getNext();
                }
            case 75:
                break;
            case 23:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return handleQuotes(yytext(), true);
                }
            case 76:
                break;
            case 2:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(openparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 77:
                break;
            case 35:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 5;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 6;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    final String txt = yytext();
                    return getNext(removeSoftHyphens(txt), txt);
                }
            case 78:
                break;
            case 20:
                {
                    if (normalizeOtherBrackets) {
                        return getNext(openbrace, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 79:
                break;
            case 17:
                {
                    if (normalizeParentheses) {
                        return getNext(openparen, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 80:
                break;
            case 11:
                {
                    return handleEllipsis(yytext());
                }
            case 81:
                break;
            case 32:
                // lookahead expression with fixed base length
                zzMarkedPos = zzStartRead + 1;
                {
                    /* invert quote - often but not always right */
                    return handleQuotes(yytext(), true);
                }
            case 82:
                break;
            case 13:
                {
                    return normalizeFractions(yytext());
                }
            case 83:
                break;
            case 14:
                {
                    if (normalizeCurrency) {
                        return getNext(normalizeCurrency(yytext()), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 84:
                break;
            case 40:
                // general lookahead, find correct zzMarkedPos
                {
                    int zzFState = 9;
                    int zzFPos = zzStartRead;
                    if (zzFin.length <= zzBufferL.length) {
                        zzFin = new boolean[zzBufferL.length + 1];
                    }
                    boolean[] zzFinL = zzFin;
                    while (zzFState != -1 && zzFPos < zzMarkedPos) {
                        if ((zzAttrL[zzFState] & 1) == 1) {
                            zzFinL[zzFPos] = true;
                        }
                        zzInput = zzBufferL[zzFPos++];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    if (zzFState != -1 && (zzAttrL[zzFState] & 1) == 1) {
                        zzFinL[zzFPos] = true;
                    }
                    zzFState = 10;
                    zzFPos = zzMarkedPos;
                    while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                        zzInput = zzBufferL[--zzFPos];
                        zzFState = zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
                    }
                    ;
                    zzMarkedPos = zzFPos;
                }
                {
                    String s;
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 85:
                break;
            case 10:
                {
                    if (invertible) {
                        prevWordAfter.append(yytext());
                    }
                }
            case 86:
                break;
            case 3:
                {
                    if (escapeForwardSlashAsterisk) {
                        return getNext(delimit(yytext(), '/'), yytext());
                    } else {
                        return getNext();
                    }
                }
            case 87:
                break;
            case 41:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 88:
                break;
            case 12:
                {
                    if (yylength() >= 3 && yylength() <= 4 && ptb3Dashes) {
                        return getNext(ptbmdash, yytext());
                    } else {
                        return getNext();
                    }
                }
            case 89:
                break;
            case 27:
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 90:
                break;
            case 9:
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 91:
                break;
            case 29:
                // lookahead expression with fixed lookahead length
                yypushback(1);
                {
                    return getNext(removeSoftHyphens(yytext()), yytext());
                }
            case 92:
                break;
            case 26:
                {
                    // this one should only match if we're basically at the end of file
                    // since the last one matches two things, even newlines
                    String s;
                    if (strictTreebank3 && !"U.S.".equals(yytext())) {
                        // return a period for next time
                        yypushback(1);
                        s = yytext();
                    } else {
                        s = yytext();
                        // return a period for next time
                        yypushback(1);
                    }
                    return getNext(s, yytext());
                }
            case 93:
                break;
            case 1:
                {
                    String str = yytext();
                    int first = str.charAt(0);
                    String msg = String.format("Untokenizable: %s (U+%s, decimal: %s)", yytext(), Integer.toHexString(first).toUpperCase(), Integer.toString(first));
                    switch(untokenizable) {
                        case NONE_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            break;
                        case FIRST_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            if (!this.seenUntokenizableCharacter) {
                                LOGGER.warning(msg);
                                this.seenUntokenizableCharacter = true;
                            }
                            break;
                        case ALL_DELETE:
                            if (invertible) {
                                prevWordAfter.append(str);
                            }
                            LOGGER.warning(msg);
                            this.seenUntokenizableCharacter = true;
                            break;
                        case NONE_KEEP:
                            return getNext();
                        case FIRST_KEEP:
                            if (!this.seenUntokenizableCharacter) {
                                LOGGER.warning(msg);
                                this.seenUntokenizableCharacter = true;
                            }
                            return getNext();
                        case ALL_KEEP:
                            LOGGER.warning(msg);
                            this.seenUntokenizableCharacter = true;
                            return getNext();
                    }
                }
            case 94:
                break;
            case 38:
                {
                    String txt = yytext();
                    if (escapeForwardSlashAsterisk) {
                        txt = delimit(txt, '/');
                        txt = delimit(txt, '*');
                    }
                    return getNext(txt, yytext());
                }
            case 95:
                break;
            case 5:
                {
                    if (tokenizeNLs) {
                        // js: for tokenizing carriage returns
                        return getNext(NEWLINE_TOKEN, yytext());
                    } else if (invertible) {
                        prevWordAfter.append(yytext());
                    }
                }
            case 96:
                break;
            default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    {
                        if (invertible) {
                            prevWordAfter.append(yytext());
                            String str = prevWordAfter.toString();
                            prevWordAfter.setLength(0);
                            prevWord.set(CoreAnnotations.AfterAnnotation.class, str);
                        }
                        return null;
                    }
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ArrayAccessExpr
																(UnaryExpr
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
											)
										)
										(BlockStmt
											(BreakStmt
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
								(BlockComment
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
											)
										)
										(BlockStmt
											(BreakStmt
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(BooleanLiteralExpr
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(BooleanLiteralExpr
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
							)
						)
					)
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(WhileStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(IntegerLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(AssignExpr
							NameExpr
								SimpleName
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(LabeledStmt
					SimpleName
					(BlockStmt
						(WhileStmt
							(BlockStmt
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
														)
														SimpleName
														(PrimitiveType
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												LineComment
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(IfStmt
												NameExpr
													SimpleName
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															(ArrayAccessExpr
																(UnaryExpr
																	NameExpr
																		SimpleName
																)
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(BlockStmt
													(ExpressionStmt
														(AssignExpr
															NameExpr
																SimpleName
															NameExpr
																SimpleName
														)
													)
													(BreakStmt
														SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BreakStmt
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(PrimitiveType
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
										)
										(IfStmt
											(BinaryExpr
												(EnclosedExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
												)
												(IntegerLiteralExpr
												)
											)
											(BreakStmt
												SimpleName
											)
										)
									)
								)
							)
							(BooleanLiteralExpr
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(SwitchStmt
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(BinaryExpr
														(MethodCallExpr
															SimpleName
														)
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(CharLiteralExpr
													)
												)
											)
											(EnclosedExpr
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
														(BinaryExpr
															NameExpr
																SimpleName
															(CharLiteralExpr
															)
														)
													)
													(BinaryExpr
														NameExpr
															SimpleName
														(CharLiteralExpr
														)
													)
												)
											)
										)
										(BlockStmt
											(BreakStmt
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
												)
											)
										)
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(IntegerLiteralExpr
									)
								)
								LineComment
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(CharLiteralExpr
												)
												(CharLiteralExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
										LineComment
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
								)
							)
							(ReturnStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									(BooleanLiteralExpr
									)
									SimpleName
								)
								(BlockComment
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(IntegerLiteralExpr
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayCreationExpr
												(PrimitiveType
												)
												(ArrayCreationLevel
													(BinaryExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(IntegerLiteralExpr
														)
													)
												)
											)
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										NameExpr
											SimpleName
										SimpleName
										(ArrayType
											(PrimitiveType
											)
										)
									)
								)
							)
							(WhileStmt
								(BlockStmt
									(IfStmt
										(BinaryExpr
											(EnclosedExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										(UnaryExpr
											(IntegerLiteralExpr
											)
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(WhileStmt
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(UnaryExpr
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ArrayAccessExpr
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
												)
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BinaryExpr
									(UnaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(IntegerLiteralExpr
												)
											)
										)
										(IntegerLiteralExpr
										)
									)
								)
							)
							(EmptyStmt
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												(CharLiteralExpr
												)
												SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BinaryExpr
											(MethodCallExpr
												SimpleName
											)
											(IntegerLiteralExpr
											)
										)
									)
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
							)
							LineComment
						)
						(BlockStmt
							(ReturnStmt
								(MethodCallExpr
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
								LineComment
							)
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
											)
											SimpleName
											StringLiteralExpr
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
										)
										LineComment
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(PrimitiveType
										)
									)
								)
							)
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											StringLiteralExpr
											(MethodCallExpr
												SimpleName
											)
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(SwitchStmt
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(BooleanLiteralExpr
											)
										)
									)
									(BreakStmt
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(IfStmt
										(UnaryExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														(ThisExpr
														)
													)
													(BooleanLiteralExpr
													)
												)
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								(SwitchEntryStmt
									NameExpr
										SimpleName
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												(ThisExpr
												)
											)
											(BooleanLiteralExpr
											)
										)
									)
									(ReturnStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
								NameExpr
									SimpleName
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(VariableDeclarationExpr
									(VariableDeclarator
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												NameExpr
													SimpleName
												(CharLiteralExpr
												)
												SimpleName
											)
										)
									)
								)
							)
							(ReturnStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(MethodCallExpr
										SimpleName
									)
									SimpleName
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(BlockStmt
									(ReturnStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												SimpleName
											)
											SimpleName
										)
										LineComment
									)
								)
							)
						)
					)
					(SwitchEntryStmt
						(IntegerLiteralExpr
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(VariableDeclarationExpr
													(VariableDeclarator
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(IntegerLiteralExpr
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													(ClassExpr
														(ClassOrInterfaceType
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
							)
						)
					)
					(ConditionalExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BooleanLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(JavadocComment
	)
)

