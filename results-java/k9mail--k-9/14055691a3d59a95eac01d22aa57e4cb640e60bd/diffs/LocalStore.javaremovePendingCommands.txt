public void removePendingCommands() {
    mDb.delete("pending_commands", null, null);
}||||||||public void removePendingCommands() throws UnavailableStorageException {
    execute(false, new DbCallback<Void>() {

        @Override
        public Void doDbWork(final SQLiteDatabase db) throws WrappedException {
            db.delete("pending_commands", null, null);
            return null;
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				NullLiteralExpr
				NullLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									StringLiteralExpr
									NullLiteralExpr
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ReturnStmt
								NullLiteralExpr
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
)

