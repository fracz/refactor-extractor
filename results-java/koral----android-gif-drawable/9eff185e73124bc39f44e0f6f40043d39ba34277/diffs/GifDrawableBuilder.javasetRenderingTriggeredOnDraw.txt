/**
 * Sets whether rendering of the next frame is scheduled after drawing current one (so animation
 * will be paused if drawing does not happen) or just after rendering frame (no matter if it is
 * drawn or not). However animation will never run if drawable is set to not visible. See
 * {@link GifDrawable#isVisible()} for more information about drawable visibility.
 * By default this option is enabled. Note that drawing does not happen if view containing
 * drawable is obscured. Disabling this option will prevent that however battery draining will be
 * higher.
 *
 * @param isRenderingTriggeredOnDraw whether rendering of the next frame is scheduled after drawing (default)
 * current one or just after it is rendered
 * @return this builder instance, to chain calls
 */
public GifDrawableBuilder setRenderingTriggeredOnDraw(boolean isRenderingTriggeredOnDraw) {
    mIsRenderingTriggeredOnDraw = isRenderingTriggeredOnDraw;
    return this;
}||||||||/**
 * Equivalent to {@link #renderingTriggeredOnDraw(boolean)}. This method does not follow naming convention
 * and is preserved for backwards compatibility only.
 * @param isRenderingTriggeredOnDraw whether rendering of the next frame is scheduled after drawing (default)
 * current one or just after it is rendered
 * @return this builder instance, to chain calls
 */
public GifDrawableBuilder setRenderingTriggeredOnDraw(boolean isRenderingTriggeredOnDraw) {
    return renderingTriggeredOnDraw(isRenderingTriggeredOnDraw);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

