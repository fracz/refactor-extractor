/**
 * Causes the animation to start over.
 * If animation is stopped any effects will occur after restart.<br>
 * If rewinding input source fails then state is not affected.
 * This method is thread-safe.
 */
public void reset() {
    mExecutor.execute(new SafeRunnable(this) {

        @Override
        public void doWork() {
            mNativeInfoHandle.reset();
            mIsRunning = true;
            mRenderTask.run();
        }
    });
}||||||||/**
 * Causes the animation to start over.
 * If animation is stopped any effects will occur after restart.<br>
 * If rewinding input source fails then state is not affected.
 * This method is thread-safe.
 */
public void reset() {
    mExecutor.execute(new SafeRunnable(this) {

        @Override
        public void doWork() {
            if (mNativeInfoHandle.reset())
                start();
        }
    });
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ThisExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(MarkerAnnotationExpr
							Name
						)
					)
					(ThisExpr
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

