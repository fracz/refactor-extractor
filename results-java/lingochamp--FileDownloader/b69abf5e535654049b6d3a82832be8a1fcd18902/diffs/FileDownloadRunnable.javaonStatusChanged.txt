private void onStatusChanged(int status) {
    // others.
    synchronized (statusChangedNotifyLock) {
        if (model.getStatus() == FileDownloadStatus.paused) {
            if (FileDownloadLog.NEED_LOG) {
                /**
                 * Already paused or the current status is paused.
                 *
                 * We don't need to call-back to Task in here, because the pause status has
                 * already handled by {@link BaseDownloadTask#pause()} manually.
                 *
                 * In some case, it will arrive here by High concurrent cause.  For performance
                 * more make sense.
                 *
                 * High concurrent cause.
                 */
                FileDownloadLog.d(this, "High concurrent cause, Already paused and we don't " + "need to call-back to Task in here, %d", getId());
            }
            return;
        }
        transferModel.update(model);
        FileDownloadEventPool.getImpl().asyncPublishInFlow(new DownloadTransferEvent(transferModel.copy()));
    }
}||||||||@SuppressWarnings("UnusedParameters")
private void onStatusChanged(int status) {
    // others.
    synchronized (statusChangedNotifyLock) {
        if (model.getStatus() == FileDownloadStatus.paused) {
            if (FileDownloadLog.NEED_LOG) {
                /**
                 * Already paused or the current status is paused.
                 *
                 * We don't need to call-back to Task in here, because the pause status has
                 * already handled by {@link BaseDownloadTask#pause()} manually.
                 *
                 * In some case, it will arrive here by High concurrent cause.  For performance
                 * more make sense.
                 *
                 * High concurrent cause.
                 */
                FileDownloadLog.d(this, "High concurrent cause, Already paused and we don't " + "need to call-back to Task in here, %d", getId());
            }
            return;
        }
        transferModel.update(model);
        FileDownloadEventPool.getImpl().asyncPublishInFlow(new DownloadTransferEvent(transferModel.copy()));
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(JavadocComment
									)
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										(MethodCallExpr
											SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									(JavadocComment
									)
								)
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(SingleMemberAnnotationExpr
		StringLiteralExpr
		Name
	)
)

