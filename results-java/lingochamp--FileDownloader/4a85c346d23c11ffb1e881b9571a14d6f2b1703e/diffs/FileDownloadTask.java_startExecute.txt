@Override
protected void _startExecute() {
    final boolean succeed = FileDownloadServiceProxy.getImpl().startDownloader(getUrl(), getPath(), getCallbackProgressTimes(), getAutoRetryTimes(), getHeader());
    if (!succeed) {
        if (_checkCanStart()) {
            catchException(new RuntimeException("Occur Unknow Error, when request to start" + " maybe some problem in binder, maybe the process was killed in unexpected."));
            if (!FileDownloadList.getImpl().contains(this)) {
                synchronized (NEED_RESTART_LIST) {
                    if (NEED_RESTART_LIST.contains(this)) {
                        NEED_RESTART_LIST.remove(this);
                    }
                }
                FileDownloadList.getImpl().add(this);
            }
            FileDownloadList.getImpl().removeByError(this);
        } else {
        // the process was killed when request stating. will be restarted by NEED_RESTART_LIST.
        }
    } else {
        handleNoNeedRestart();
    }
}||||||||@Override
protected void _startExecute() {
    final boolean succeed = FileDownloadServiceProxy.getImpl().startDownloader(getUrl(), getPath(), getCallbackProgressTimes(), getAutoRetryTimes(), getHeader());
    if (!succeed) {
        // noinspection StatementWithEmptyBody
        if (_checkCanStart()) {
            catchException(new RuntimeException("Occur Unknow Error, when request to start" + " maybe some problem in binder, maybe the process was killed in unexpected."));
            if (!FileDownloadList.getImpl().contains(this)) {
                synchronized (NEED_RESTART_LIST) {
                    if (NEED_RESTART_LIST.contains(this)) {
                        NEED_RESTART_LIST.remove(this);
                    }
                }
                FileDownloadList.getImpl().add(this);
            }
            FileDownloadList.getImpl().removeByError(this);
        } else {
        // the process was killed when request stating. will be restarted by NEED_RESTART_LIST.
        }
    } else {
        handleNoNeedRestart();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									(ThisExpr
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(SynchronizedStmt
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												(ThisExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
							)
						)
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									(ThisExpr
									)
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(SynchronizedStmt
									(BlockStmt
										(IfStmt
											(MethodCallExpr
												(ThisExpr
												)
												SimpleName
												NameExpr
													SimpleName
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(ThisExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
									)
									NameExpr
										SimpleName
								)
								(ExpressionStmt
									(MethodCallExpr
										(ThisExpr
										)
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ThisExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

