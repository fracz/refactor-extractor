private void onEdgeReached() {
    // mStart, mVelocity and mStartTime were adjusted to their values when edge was reached.
    final float distance = -mVelocity * mVelocity / (2.0f * mDeceleration);
    if (Math.abs(distance) < mOver) {
        // Spring force will bring us back to final position
        mState = TO_BOUNCE;
        mFinal = mStart;
        mDuration = -(int) (2000.0f * mVelocity / mDeceleration);
    } else {
        // Velocity is too high, we will hit the boundary limit
        mState = TO_BOUNDARY;
        int over = mVelocity > 0 ? mOver : -mOver;
        mFinal = mStart + over;
        mDuration = (int) (1000.0 * Math.PI * over / 2.0 / mVelocity);
    }
}||||||||private void onEdgeReached() {
    // mStart, mVelocity and mStartTime were adjusted to their values when edge was reached.
    float distance = mVelocity * mVelocity / (2.0f * Math.abs(mDeceleration));
    final float sign = Math.signum(mVelocity);
    if (distance > mOver) {
        // Default deceleration is not sufficient to slow us down before boundary
        mDeceleration = -sign * mVelocity * mVelocity / (2.0f * mOver);
        distance = mOver;
    }
    mOver = (int) distance;
    mState = BALLISTIC;
    mFinal = mStart + (int) (mVelocity > 0 ? distance : -distance);
    mDuration = -(int) (1000.0f * mVelocity / mDeceleration);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(DoubleLiteralExpr
								)
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(CastExpr
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(DoubleLiteralExpr
												)
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											NameExpr
												SimpleName
										)
										(DoubleLiteralExpr
										)
									)
									NameExpr
										SimpleName
								)
							)
							(PrimitiveType
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(UnaryExpr
							(CastExpr
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											(DoubleLiteralExpr
											)
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
								(PrimitiveType
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(EnclosedExpr
							(BinaryExpr
								(DoubleLiteralExpr
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(UnaryExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(BinaryExpr
									(DoubleLiteralExpr
									)
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					NameExpr
						SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					NameExpr
						SimpleName
					(CastExpr
						(EnclosedExpr
							(ConditionalExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								(UnaryExpr
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(UnaryExpr
					(CastExpr
						(EnclosedExpr
							(BinaryExpr
								(BinaryExpr
									(DoubleLiteralExpr
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						(PrimitiveType
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
)

