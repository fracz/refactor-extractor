@Override
public void onSpanAdded(Spannable text, Object span, int start, int end) {
    if (span instanceof EasyEditSpan) {
        if (mPopupWindow == null) {
            mPopupWindow = new EasyEditPopupWindow();
            mHidePopup = new Runnable() {

                @Override
                public void run() {
                    hide();
                }
            };
        }
        // Make sure there is only at most one EasyEditSpan in the text
        if (mPopupWindow.mEasyEditSpan != null) {
            mPopupWindow.mEasyEditSpan.setDeleteEnabled(false);
        }
        mPopupWindow.setEasyEditSpan((EasyEditSpan) span);
        mPopupWindow.setOnDeleteListener(new EasyEditDeleteListener() {

            @Override
            public void onDeleteClick(EasyEditSpan span) {
                Editable editable = (Editable) mTextView.getText();
                int start = editable.getSpanStart(span);
                int end = editable.getSpanEnd(span);
                if (start >= 0 && end >= 0) {
                    sendNotification(EasyEditSpan.TEXT_DELETED, span);
                    mTextView.deleteText_internal(start, end);
                }
                editable.removeSpan(span);
            }
        });
        if (mTextView.getWindowVisibility() != View.VISIBLE) {
            // The window is not visible yet, ignore the text change.
            return;
        }
        if (mTextView.getLayout() == null) {
            // The view has not been laid out yet, ignore the text change
            return;
        }
        if (extractedTextModeWillBeStarted()) {
            // the original TextView, as the ExtractEditText will do
            return;
        }
        mPopupWindow.show();
        mTextView.removeCallbacks(mHidePopup);
        mTextView.postDelayed(mHidePopup, DISPLAY_TIMEOUT_MS);
    }
}||||||||@Override
public void onSpanAdded(Spannable text, Object span, int start, int end) {
    if (isNonIntermediateSelectionSpan(text, span)) {
        sendUpdateSelection();
    } else if (span instanceof EasyEditSpan) {
        if (mPopupWindow == null) {
            mPopupWindow = new EasyEditPopupWindow();
            mHidePopup = new Runnable() {

                @Override
                public void run() {
                    hide();
                }
            };
        }
        // Make sure there is only at most one EasyEditSpan in the text
        if (mPopupWindow.mEasyEditSpan != null) {
            mPopupWindow.mEasyEditSpan.setDeleteEnabled(false);
        }
        mPopupWindow.setEasyEditSpan((EasyEditSpan) span);
        mPopupWindow.setOnDeleteListener(new EasyEditDeleteListener() {

            @Override
            public void onDeleteClick(EasyEditSpan span) {
                Editable editable = (Editable) mTextView.getText();
                int start = editable.getSpanStart(span);
                int end = editable.getSpanEnd(span);
                if (start >= 0 && end >= 0) {
                    sendEasySpanNotification(EasyEditSpan.TEXT_DELETED, span);
                    mTextView.deleteText_internal(start, end);
                }
                editable.removeSpan(span);
            }
        });
        if (mTextView.getWindowVisibility() != View.VISIBLE) {
            // The window is not visible yet, ignore the text change.
            return;
        }
        if (mTextView.getLayout() == null) {
            // The view has not been laid out yet, ignore the text change
            return;
        }
        if (extractedTextModeWillBeStarted()) {
            // the original TextView, as the ExtractEditText will do
            return;
        }
        mPopupWindow.show();
        mTextView.removeCallbacks(mHidePopup);
        mTextView.postDelayed(mHidePopup, DISPLAY_TIMEOUT_MS);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
										(VoidType
										)
										SimpleName
										(MarkerAnnotationExpr
											Name
										)
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(BooleanLiteralExpr
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						(CastExpr
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodDeclaration
								(BlockStmt
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(CastExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
											(BinaryExpr
												NameExpr
													SimpleName
												(IntegerLiteralExpr
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
													SimpleName
												)
											)
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(VoidType
								)
								SimpleName
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
								(MarkerAnnotationExpr
									Name
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(IfStmt
					(MethodCallExpr
						SimpleName
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
			(IfStmt
				(InstanceOfExpr
					NameExpr
						SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(ObjectCreationExpr
										(MethodDeclaration
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
											)
											(VoidType
											)
											SimpleName
											(MarkerAnnotationExpr
												Name
											)
										)
										(ClassOrInterfaceType
											SimpleName
										)
									)
								)
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(MethodCallExpr
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(ObjectCreationExpr
								(MethodDeclaration
									(BlockStmt
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(CastExpr
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(ClassOrInterfaceType
															SimpleName
														)
													)
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(ExpressionStmt
											(VariableDeclarationExpr
												(VariableDeclarator
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(PrimitiveType
													)
												)
											)
										)
										(IfStmt
											(BinaryExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
														SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(VoidType
									)
									SimpleName
									(Parameter
										SimpleName
										(ClassOrInterfaceType
											SimpleName
										)
									)
									(MarkerAnnotationExpr
										Name
									)
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(BlockStmt
							(ReturnStmt
								LineComment
							)
						)
					)
					(IfStmt
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
						)
						(BlockStmt
							(ReturnStmt
								LineComment
							)
						)
					)
					(IfStmt
						(MethodCallExpr
							SimpleName
						)
						(BlockStmt
							(ReturnStmt
								LineComment
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

