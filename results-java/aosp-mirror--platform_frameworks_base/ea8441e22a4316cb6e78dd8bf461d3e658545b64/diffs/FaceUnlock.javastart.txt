/**
 * When screen is turned on and focused, need to bind to FaceLock service if we are using
 * FaceLock, but only if we're not dealing with a call
 * Called on the UI thread
 */
public boolean start(boolean suppressBiometricUnlock) {
    final boolean tooManyFaceUnlockTries = mUpdateMonitor.getMaxFaceUnlockAttemptsReached();
    final int failedBackupAttempts = mUpdateMonitor.getFailedAttempts();
    final boolean backupIsTimedOut = (failedBackupAttempts >= LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT);
    if (tooManyFaceUnlockTries)
        Log.i(TAG, "tooManyFaceUnlockTries: " + tooManyFaceUnlockTries);
    if (mUpdateMonitor.getPhoneState() == TelephonyManager.CALL_STATE_IDLE && !suppressBiometricUnlock && !tooManyFaceUnlockTries && !backupIsTimedOut) {
        // Show FaceLock area, but only for a little bit so lockpattern will become visible if
        // FaceLock fails to start or crashes
        // This must show before bind to guarantee that Face Unlock has a place to display
        show(VIEW_AREA_SERVICE_TIMEOUT);
        bind();
        // When switching between portrait and landscape view while FaceLock is running, the
        // screen will eventually go dark unless we poke the wakelock when FaceLock is
        // restarted
        mKeyguardScreenCallback.pokeWakelock();
    } else {
        hide();
        return false;
    }
    return true;
}||||||||/**
 * Binds to the Face Unlock service.  Face Unlock will be started when the bind completes.  The
 * Face Unlock area is displayed to hide the backup while the service is starting up.
 */
public boolean start() {
    if (mIsRunning) {
        Log.w(TAG, "start() called when already running");
    }
    // Show Face Unlock view, but only for a little bit so lockpattern will become visible if
    // Face Unlock fails to start or crashes
    // This must show before bind to guarantee that Face Unlock has a place to display
    show(VIEW_AREA_SERVICE_TIMEOUT);
    if (!mBoundToService) {
        if (DEBUG)
            Log.d(TAG, "before bind to Face Unlock service");
        mContext.bindService(new Intent(IFaceLockInterface.class.getName()), mConnection, Context.BIND_AUTO_CREATE, mLockPatternUtils.getCurrentUser());
        if (DEBUG)
            Log.d(TAG, "after bind to Face Unlock service");
        mBoundToService = true;
    } else {
        Log.w(TAG, "Attempt to bind to Face Unlock when already bound");
    }
    // When switching between portrait and landscape view while Face Unlock is running, the
    // screen will eventually go dark unless we poke the wakelock when Face Unlock is
    // restarted
    mKeyguardScreenCallback.pokeWakelock();
    mIsRunning = true;
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(UnaryExpr
							NameExpr
								SimpleName
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(UnaryExpr
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						StringLiteralExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(ClassOrInterfaceType
								SimpleName
							)
						)
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

