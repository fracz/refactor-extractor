/**
 * Sets the {@link Uri} of the default sound for a given sound type.
 *
 * @param context A context used for querying.
 * @param type The type whose default sound should be set. One of
 * {@link #TYPE_RINGTONE}, {@link #TYPE_NOTIFICATION}, or
 * {@link #TYPE_ALARM}.
 * @param ringtoneUri A {@link Uri} pointing to the default sound to set.
 * @see #getActualDefaultRingtoneUri(Context, int)
 */
public static void setActualDefaultRingtoneUri(Context context, int type, Uri ringtoneUri) {
    String setting = getSettingForType(type);
    if (setting == null)
        return;
    Settings.System.putString(context.getContentResolver(), setting, ringtoneUri != null ? ringtoneUri.toString() : null);
}||||||||/**
 * Sets the {@link Uri} of the default sound for a given sound type.
 *
 * @param context A context used for querying.
 * @param type The type whose default sound should be set. One of
 * {@link #TYPE_RINGTONE}, {@link #TYPE_NOTIFICATION}, or
 * {@link #TYPE_ALARM}.
 * @param ringtoneUri A {@link Uri} pointing to the default sound to set.
 * @see #getActualDefaultRingtoneUri(Context, int)
 */
public static void setActualDefaultRingtoneUri(Context context, int type, Uri ringtoneUri) {
    String setting = getSettingForType(type);
    if (setting == null)
        return;
    Settings.System.putString(context.getContentResolver(), setting, ringtoneUri != null ? ringtoneUri.toString() : null);
    // Stream selected ringtone into cache so it's available for playback
    // when CE storage is still locked
    final ContentResolver cr = context.getContentResolver();
    final Uri cacheUri = getCacheForType(type);
    try (InputStream in = cr.openInputStream(ringtoneUri);
        OutputStream out = cr.openOutputStream(cacheUri)) {
        Streams.copy(in, out);
    } catch (IOException e) {
        Log.w(TAG, "Failed to cache ringtone: " + e);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(ConditionalExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					NullLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
				(ConditionalExpr
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					NullLiteralExpr
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

