/**
 * Called by AM when the system locale changes *within the AM lock.  ABSOLUTELY do not take
 * any locks in this method.
 */
@Override
public void onSystemLocaleChangedNoLock() {
    // DO NOT HOLD ANY LOCKS HERE.
    // We want to reset throttling for all packages for all users.  But we can't just do so
    // here because:
    // - We can't load/save users that are locked.
    // - Even for loaded users, resetting the counters would require us to hold mLock.
    // 
    // So we use a "pull" model instead.  In here, we just increment the "locale change
    // sequence number".  Each ShortcutUser has the "last known locale change sequence".
    // 
    // This allows ShortcutUser's to detect the system locale change, so they can reset
    // counters.
    mLocaleChangeSequenceNumber.incrementAndGet();
    postToHandler(() -> scheduleSaveBaseState());
}||||||||/**
 * Called by AM when the system locale changes *within the AM lock.  ABSOLUTELY do not take
 * any locks in this method.
 */
@Override
public void onSystemLocaleChangedNoLock() {
    // Ignore all callback during system boot.
    if (mBootCompleted.get()) {
        mLocaleChangeSequenceNumber.incrementAndGet();
        if (DEBUG) {
            Slog.d(TAG, "onSystemLocaleChangedNoLock: " + mLocaleChangeSequenceNumber.get());
        }
        postToHandler(() -> scheduleSaveBaseState());
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(LambdaExpr
					(ExpressionStmt
						(MethodCallExpr
							SimpleName
						)
					)
				)
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(LambdaExpr
							(ExpressionStmt
								(MethodCallExpr
									SimpleName
								)
							)
						)
						SimpleName
					)
				)
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

