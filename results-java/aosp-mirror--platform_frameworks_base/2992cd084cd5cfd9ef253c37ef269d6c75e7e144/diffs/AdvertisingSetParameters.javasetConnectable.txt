/**
 * Set whether the advertisement type should be connectable or
 * non-connectable.
 * Legacy advertisements can be both connectable and scannable. Non-legacy
 * advertisements can be only scannable or only connectable.
 *
 * @param connectable Controls whether the advertisement type will be connectable (true) or
 * non-connectable (false).
 */
public Builder setConnectable(boolean connectable) {
    this.connectable = connectable;
    return this;
}||||||||/**
 * Set whether the advertisement type should be connectable or
 * non-connectable.
 * Legacy advertisements can be both connectable and scannable. Non-legacy
 * advertisements can be only scannable or only connectable.
 *
 * @param connectable Controls whether the advertisement type will be connectable (true) or
 * non-connectable (false).
 */
public Builder setConnectable(boolean connectable) {
    mConnectable = connectable;
    return this;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ReturnStmt
			(ThisExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

