public void onReceive(Context context, Intent intent) {
    if (RefactoredBackupManagerService.RUN_BACKUP_ACTION.equals(intent.getAction())) {
        synchronized (backupManagerService.mQueueLock) {
            if (backupManagerService.mPendingInits.size() > 0) {
                // and then settle into the usual periodic backup schedule.
                if (RefactoredBackupManagerService.MORE_DEBUG) {
                    Slog.v(RefactoredBackupManagerService.TAG, "Init pending at scheduled backup");
                }
                try {
                    backupManagerService.mAlarmManager.cancel(backupManagerService.mRunInitIntent);
                    backupManagerService.mRunInitIntent.send();
                } catch (PendingIntent.CanceledException ce) {
                    Slog.e(RefactoredBackupManagerService.TAG, "Run init intent cancelled");
                // can't really do more than bail here
                }
            } else {
                // fully set up.
                if (backupManagerService.mEnabled && backupManagerService.mProvisioned) {
                    if (!backupManagerService.mBackupRunning) {
                        if (RefactoredBackupManagerService.DEBUG) {
                            Slog.v(RefactoredBackupManagerService.TAG, "Running a backup pass");
                        }
                        // Acquire the wakelock and pass it to the backup thread.  it will
                        // be released once backup concludes.
                        backupManagerService.mBackupRunning = true;
                        backupManagerService.mWakelock.acquire();
                        Message msg = backupManagerService.mBackupHandler.obtainMessage(RefactoredBackupManagerService.MSG_RUN_BACKUP);
                        backupManagerService.mBackupHandler.sendMessage(msg);
                    } else {
                        Slog.i(RefactoredBackupManagerService.TAG, "Backup time but one already running");
                    }
                } else {
                    Slog.w(RefactoredBackupManagerService.TAG, "Backup pass but e=" + backupManagerService.mEnabled + " p=" + backupManagerService.mProvisioned);
                }
            }
        }
    }
}||||||||public void onReceive(Context context, Intent intent) {
    if (RefactoredBackupManagerService.RUN_BACKUP_ACTION.equals(intent.getAction())) {
        synchronized (backupManagerService.getQueueLock()) {
            if (backupManagerService.getPendingInits().size() > 0) {
                // and then settle into the usual periodic backup schedule.
                if (RefactoredBackupManagerService.MORE_DEBUG) {
                    Slog.v(RefactoredBackupManagerService.TAG, "Init pending at scheduled backup");
                }
                try {
                    backupManagerService.getAlarmManager().cancel(backupManagerService.getRunInitIntent());
                    backupManagerService.getRunInitIntent().send();
                } catch (PendingIntent.CanceledException ce) {
                    Slog.e(RefactoredBackupManagerService.TAG, "Run init intent cancelled");
                // can't really do more than bail here
                }
            } else {
                // fully set up.
                if (backupManagerService.isEnabled() && backupManagerService.isProvisioned()) {
                    if (!backupManagerService.isBackupRunning()) {
                        if (RefactoredBackupManagerService.DEBUG) {
                            Slog.v(RefactoredBackupManagerService.TAG, "Running a backup pass");
                        }
                        // Acquire the wakelock and pass it to the backup thread.  it will
                        // be released once backup concludes.
                        backupManagerService.setBackupRunning(true);
                        backupManagerService.getWakelock().acquire();
                        Message msg = backupManagerService.getBackupHandler().obtainMessage(RefactoredBackupManagerService.MSG_RUN_BACKUP);
                        backupManagerService.getBackupHandler().sendMessage(msg);
                    } else {
                        Slog.i(RefactoredBackupManagerService.TAG, "Backup time but one already running");
                    }
                } else {
                    Slog.w(RefactoredBackupManagerService.TAG, "Backup pass but e=" + backupManagerService.isEnabled() + " p=" + backupManagerService.isProvisioned());
                }
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(IfStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														(BooleanLiteralExpr
														)
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													(BinaryExpr
														(BinaryExpr
															StringLiteralExpr
															(MethodCallExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
														StringLiteralExpr
													)
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(BlockStmt
										(IfStmt
											(UnaryExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(BlockStmt
												(ExpressionStmt
													(MethodCallExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														StringLiteralExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(BlockStmt
												(IfStmt
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BlockStmt
														(ExpressionStmt
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														(BooleanLiteralExpr
														)
														SimpleName
														NameExpr
															SimpleName
													)
													LineComment
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(ExpressionStmt
													(VariableDeclarationExpr
														(VariableDeclarator
															(MethodCallExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
																SimpleName
																(MethodCallExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															SimpleName
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														SimpleName
														(MethodCallExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												StringLiteralExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(TryStmt
									(CatchClause
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(Parameter
											SimpleName
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(ExpressionStmt
											(MethodCallExpr
												SimpleName
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

