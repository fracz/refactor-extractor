/*
     * SKETCH OF OPERATION
     *
     * create one of these PerformUnifiedRestoreTask objects, telling it which
     * dataset & transport to address, and then parameters within the restore
     * operation: single target package vs many, etc.
     *
     * 1. transport.startRestore(token, list-of-packages).  If we need @pm@  it is
     * always placed first and the settings provider always placed last [for now].
     *
     * 1a [if we needed @pm@ then nextRestorePackage() and restore the PMBA inline]
     *
     *   [ state change => RUNNING_QUEUE ]
     *
     * NOW ITERATE:
     *
     * { 3. t.nextRestorePackage()
     *   4. does the metadata for this package allow us to restore it?
     *      does the on-disk app permit us to restore it? [re-check allowBackup etc]
     *   5. is this a key/value dataset?  => key/value agent restore
     *       [ state change => RESTORE_KEYVALUE ]
     *       5a. spin up agent
     *       5b. t.getRestoreData() to stage it properly
     *       5c. call into agent to perform restore
     *       5d. tear down agent
     *       [ state change => RUNNING_QUEUE ]
     *
     *   6. else it's a stream dataset:
     *       [ state change => RESTORE_FULL ]
     *       6a. instantiate the engine for a stream restore: engine handles agent lifecycles
     *       6b. spin off engine runner on separate thread
     *       6c. ITERATE getNextFullRestoreDataChunk() and copy data to engine runner socket
     *       [ state change => RUNNING_QUEUE ]
     * }
     *
     *   [ state change => FINAL ]
     *
     * 7. t.finishRestore(), release wakelock, etc.
     *
     *
     */
// state INITIAL : set up for the restore and read the metadata if necessary
private void startRestore() {
    sendStartRestore(mAcceptSet.size());
    // If we're starting a full-system restore, set up to begin widget ID remapping
    if (mIsSystemRestore) {
        // TODO: http://b/22388012
        AppWidgetBackupBridge.restoreStarting(UserHandle.USER_SYSTEM);
    }
    try {
        String transportDir = mTransport.transportDirName();
        mStateDir = new File(backupManagerService.mBaseStateDir, transportDir);
        // Fetch the current metadata from the dataset first
        PackageInfo pmPackage = new PackageInfo();
        pmPackage.packageName = RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL;
        mAcceptSet.add(0, pmPackage);
        PackageInfo[] packages = mAcceptSet.toArray(new PackageInfo[0]);
        mStatus = mTransport.startRestore(mToken, packages);
        if (mStatus != BackupTransport.TRANSPORT_OK) {
            Slog.e(RefactoredBackupManagerService.TAG, "Transport error " + mStatus + "; no restore possible");
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        RestoreDescription desc = mTransport.nextRestorePackage();
        if (desc == null) {
            Slog.e(RefactoredBackupManagerService.TAG, "No restore metadata available; halting");
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_NO_RESTORE_METADATA_AVAILABLE, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        if (!RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL.equals(desc.getPackageName())) {
            Slog.e(RefactoredBackupManagerService.TAG, "Required package metadata but got " + desc.getPackageName());
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_NO_PM_METADATA_RECEIVED, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        // Pull the Package Manager metadata from the restore set first
        mCurrentPackage = new PackageInfo();
        mCurrentPackage.packageName = RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL;
        mPmAgent = new PackageManagerBackupAgent(backupManagerService.mPackageManager, null);
        mAgent = IBackupAgent.Stub.asInterface(mPmAgent.onBind());
        if (RefactoredBackupManagerService.MORE_DEBUG) {
            Slog.v(RefactoredBackupManagerService.TAG, "initiating restore for PMBA");
        }
        initiateOneRestore(mCurrentPackage, 0);
        // The PM agent called operationComplete() already, because our invocation
        // of it is process-local and therefore synchronous.  That means that the
        // next-state message (RUNNING_QUEUE) is already enqueued.  Only if we're
        // unable to proceed with running the queue do we remove that pending
        // message and jump straight to the FINAL state.  Because this was
        // synchronous we also know that we should cancel the pending timeout
        // message.
        backupManagerService.mBackupHandler.removeMessages(RefactoredBackupManagerService.MSG_RESTORE_OPERATION_TIMEOUT);
        // the restore operation.
        if (!mPmAgent.hasMetadata()) {
            Slog.e(RefactoredBackupManagerService.TAG, "PM agent has no metadata, so not restoring");
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_PM_AGENT_HAS_NO_METADATA, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            EventLog.writeEvent(EventLogTags.RESTORE_AGENT_FAILURE, RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL, "Package manager restore metadata missing");
            mStatus = BackupTransport.TRANSPORT_ERROR;
            backupManagerService.mBackupHandler.removeMessages(RefactoredBackupManagerService.MSG_BACKUP_RESTORE_STEP, this);
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
    // Success; cache the metadata and continue as expected with the
    // next state already enqueued
    } catch (Exception e) {
        // If we lost the transport at any time, halt
        Slog.e(RefactoredBackupManagerService.TAG, "Unable to contact transport for restore: " + e.getMessage());
        mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_LOST_TRANSPORT, null, BackupManagerMonitor.LOG_EVENT_CATEGORY_TRANSPORT, null);
        mStatus = BackupTransport.TRANSPORT_ERROR;
        backupManagerService.mBackupHandler.removeMessages(RefactoredBackupManagerService.MSG_BACKUP_RESTORE_STEP, this);
        executeNextState(UnifiedRestoreState.FINAL);
        return;
    }
}||||||||/*
     * SKETCH OF OPERATION
     *
     * create one of these PerformUnifiedRestoreTask objects, telling it which
     * dataset & transport to address, and then parameters within the restore
     * operation: single target package vs many, etc.
     *
     * 1. transport.startRestore(token, list-of-packages).  If we need @pm@  it is
     * always placed first and the settings provider always placed last [for now].
     *
     * 1a [if we needed @pm@ then nextRestorePackage() and restore the PMBA inline]
     *
     *   [ state change => RUNNING_QUEUE ]
     *
     * NOW ITERATE:
     *
     * { 3. t.nextRestorePackage()
     *   4. does the metadata for this package allow us to restore it?
     *      does the on-disk app permit us to restore it? [re-check allowBackup etc]
     *   5. is this a key/value dataset?  => key/value agent restore
     *       [ state change => RESTORE_KEYVALUE ]
     *       5a. spin up agent
     *       5b. t.getRestoreData() to stage it properly
     *       5c. call into agent to perform restore
     *       5d. tear down agent
     *       [ state change => RUNNING_QUEUE ]
     *
     *   6. else it's a stream dataset:
     *       [ state change => RESTORE_FULL ]
     *       6a. instantiate the engine for a stream restore: engine handles agent lifecycles
     *       6b. spin off engine runner on separate thread
     *       6c. ITERATE getNextFullRestoreDataChunk() and copy data to engine runner socket
     *       [ state change => RUNNING_QUEUE ]
     * }
     *
     *   [ state change => FINAL ]
     *
     * 7. t.finishRestore(), release wakelock, etc.
     *
     *
     */
// state INITIAL : set up for the restore and read the metadata if necessary
private void startRestore() {
    sendStartRestore(mAcceptSet.size());
    // If we're starting a full-system restore, set up to begin widget ID remapping
    if (mIsSystemRestore) {
        // TODO: http://b/22388012
        AppWidgetBackupBridge.restoreStarting(UserHandle.USER_SYSTEM);
    }
    try {
        String transportDir = mTransport.transportDirName();
        mStateDir = new File(backupManagerService.getBaseStateDir(), transportDir);
        // Fetch the current metadata from the dataset first
        PackageInfo pmPackage = new PackageInfo();
        pmPackage.packageName = RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL;
        mAcceptSet.add(0, pmPackage);
        PackageInfo[] packages = mAcceptSet.toArray(new PackageInfo[0]);
        mStatus = mTransport.startRestore(mToken, packages);
        if (mStatus != BackupTransport.TRANSPORT_OK) {
            Slog.e(RefactoredBackupManagerService.TAG, "Transport error " + mStatus + "; no restore possible");
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        RestoreDescription desc = mTransport.nextRestorePackage();
        if (desc == null) {
            Slog.e(RefactoredBackupManagerService.TAG, "No restore metadata available; halting");
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_NO_RESTORE_METADATA_AVAILABLE, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        if (!RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL.equals(desc.getPackageName())) {
            Slog.e(RefactoredBackupManagerService.TAG, "Required package metadata but got " + desc.getPackageName());
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_NO_PM_METADATA_RECEIVED, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            mStatus = BackupTransport.TRANSPORT_ERROR;
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
        // Pull the Package Manager metadata from the restore set first
        mCurrentPackage = new PackageInfo();
        mCurrentPackage.packageName = RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL;
        mPmAgent = new PackageManagerBackupAgent(backupManagerService.getPackageManager(), null);
        mAgent = IBackupAgent.Stub.asInterface(mPmAgent.onBind());
        if (RefactoredBackupManagerService.MORE_DEBUG) {
            Slog.v(RefactoredBackupManagerService.TAG, "initiating restore for PMBA");
        }
        initiateOneRestore(mCurrentPackage, 0);
        // The PM agent called operationComplete() already, because our invocation
        // of it is process-local and therefore synchronous.  That means that the
        // next-state message (RUNNING_QUEUE) is already enqueued.  Only if we're
        // unable to proceed with running the queue do we remove that pending
        // message and jump straight to the FINAL state.  Because this was
        // synchronous we also know that we should cancel the pending timeout
        // message.
        backupManagerService.getBackupHandler().removeMessages(RefactoredBackupManagerService.MSG_RESTORE_OPERATION_TIMEOUT);
        // the restore operation.
        if (!mPmAgent.hasMetadata()) {
            Slog.e(RefactoredBackupManagerService.TAG, "PM agent has no metadata, so not restoring");
            mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_PM_AGENT_HAS_NO_METADATA, mCurrentPackage, BackupManagerMonitor.LOG_EVENT_CATEGORY_BACKUP_MANAGER_POLICY, null);
            EventLog.writeEvent(EventLogTags.RESTORE_AGENT_FAILURE, RefactoredBackupManagerService.PACKAGE_MANAGER_SENTINEL, "Package manager restore metadata missing");
            mStatus = BackupTransport.TRANSPORT_ERROR;
            backupManagerService.getBackupHandler().removeMessages(RefactoredBackupManagerService.MSG_BACKUP_RESTORE_STEP, this);
            executeNextState(UnifiedRestoreState.FINAL);
            return;
        }
    // Success; cache the metadata and continue as expected with the
    // next state already enqueued
    } catch (Exception e) {
        // If we lost the transport at any time, halt
        Slog.e(RefactoredBackupManagerService.TAG, "Unable to contact transport for restore: " + e.getMessage());
        mMonitor = RefactoredBackupManagerService.monitorEvent(mMonitor, BackupManagerMonitor.LOG_EVENT_ID_LOST_TRANSPORT, null, BackupManagerMonitor.LOG_EVENT_CATEGORY_TRANSPORT, null);
        mStatus = BackupTransport.TRANSPORT_ERROR;
        backupManagerService.getBackupHandler().removeMessages(RefactoredBackupManagerService.MSG_BACKUP_RESTORE_STEP, this);
        executeNextState(UnifiedRestoreState.FINAL);
        return;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ThisExpr
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayCreationLevel
										(IntegerLiteralExpr
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ThisExpr
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
			LineComment
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BinaryExpr
								StringLiteralExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(ThisExpr
							)
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
					(ReturnStmt
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(IntegerLiteralExpr
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								(ArrayCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
									(ArrayCreationLevel
										(IntegerLiteralExpr
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									StringLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									StringLiteralExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(ObjectCreationExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NullLiteralExpr
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(IfStmt
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					LineComment
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(ThisExpr
								)
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
						(ReturnStmt
						)
					)
					LineComment
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	LineComment
)

