public void onChange(boolean selfChange) {
    final boolean wasProvisioned = backupManagerService.mProvisioned;
    final boolean isProvisioned = backupManagerService.deviceIsProvisioned();
    // latch: never unprovision
    backupManagerService.mProvisioned = wasProvisioned || isProvisioned;
    if (RefactoredBackupManagerService.MORE_DEBUG) {
        Slog.d(RefactoredBackupManagerService.TAG, "Provisioning change: was=" + wasProvisioned + " is=" + isProvisioned + " now=" + backupManagerService.mProvisioned);
    }
    synchronized (backupManagerService.mQueueLock) {
        if (backupManagerService.mProvisioned && !wasProvisioned && backupManagerService.mEnabled) {
            // we're now good to go, so start the backup alarms
            if (RefactoredBackupManagerService.MORE_DEBUG) {
                Slog.d(RefactoredBackupManagerService.TAG, "Now provisioned, so starting backups");
            }
            KeyValueBackupJob.schedule(backupManagerService.mContext);
            backupManagerService.scheduleNextFullBackupJob(0);
        }
    }
}||||||||public void onChange(boolean selfChange) {
    final boolean wasProvisioned = backupManagerService.isProvisioned();
    final boolean isProvisioned = backupManagerService.deviceIsProvisioned();
    // latch: never unprovision
    backupManagerService.setProvisioned(wasProvisioned || isProvisioned);
    if (RefactoredBackupManagerService.MORE_DEBUG) {
        Slog.d(RefactoredBackupManagerService.TAG, "Provisioning change: was=" + wasProvisioned + " is=" + isProvisioned + " now=" + backupManagerService.isProvisioned());
    }
    synchronized (backupManagerService.getQueueLock()) {
        if (backupManagerService.isProvisioned() && !wasProvisioned && backupManagerService.isEnabled()) {
            // we're now good to go, so start the backup alarms
            if (RefactoredBackupManagerService.MORE_DEBUG) {
                Slog.d(RefactoredBackupManagerService.TAG, "Now provisioned, so starting backups");
            }
            KeyValueBackupJob.schedule(backupManagerService.getContext());
            backupManagerService.scheduleNextFullBackupJob(0);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(IfStmt
			(FieldAccessExpr
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(IfStmt
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										StringLiteralExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

