private void enableHardwareAcceleration(WindowManager.LayoutParams attrs) {
    mAttachInfo.mHardwareAccelerated = false;
    mAttachInfo.mHardwareAccelerationRequested = false;
    // Don't enable hardware acceleration when the application is in compatibility mode
    if (mTranslator != null)
        return;
    // Try to enable hardware acceleration if requested
    final boolean hardwareAccelerated = (attrs.flags & WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED) != 0;
    if (hardwareAccelerated) {
        if (!HardwareRenderer.isAvailable()) {
            return;
        }
        // Persistent processes (including the system) should not do
        // accelerated rendering on low-end devices.  In that case,
        // sRendererDisabled will be set.  In addition, the system process
        // itself should never do accelerated rendering.  In that case, both
        // sRendererDisabled and sSystemRendererDisabled are set.  When
        // sSystemRendererDisabled is set, PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED
        // can be used by code on the system process to escape that and enable
        // HW accelerated drawing.  (This is basically for the lock screen.)
        final boolean fakeHwAccelerated = (attrs.privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FAKE_HARDWARE_ACCELERATED) != 0;
        final boolean forceHwAccelerated = (attrs.privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED) != 0;
        if (!HardwareRenderer.sRendererDisabled || (HardwareRenderer.sSystemRendererDisabled && forceHwAccelerated)) {
            // Don't enable hardware acceleration when we're not on the main thread
            if (!HardwareRenderer.sSystemRendererDisabled && Looper.getMainLooper() != Looper.myLooper()) {
                Log.w(HardwareRenderer.LOG_TAG, "Attempting to initialize hardware " + "acceleration outside of the main thread, aborting");
                return;
            }
            if (mAttachInfo.mHardwareRenderer != null) {
                mAttachInfo.mHardwareRenderer.destroy(true);
            }
            final boolean translucent = attrs.format != PixelFormat.OPAQUE;
            mAttachInfo.mHardwareRenderer = HardwareRenderer.createGlRenderer(2, translucent);
            if (mAttachInfo.mHardwareRenderer != null) {
                mAttachInfo.mHardwareRenderer.setName(attrs.getTitle().toString());
                mAttachInfo.mHardwareAccelerated = mAttachInfo.mHardwareAccelerationRequested = true;
            }
        } else if (fakeHwAccelerated) {
            // The window had wanted to use hardware acceleration, but this
            // is not allowed in its process.  By setting this flag, it can
            // still render as if it was accelerated.  This is basically for
            // the preview windows the window manager shows for launching
            // applications, so they will look more like the app being launched.
            mAttachInfo.mHardwareAccelerationRequested = true;
        }
    }
}||||||||private void enableHardwareAcceleration(WindowManager.LayoutParams attrs) {
    mAttachInfo.mHardwareAccelerated = false;
    mAttachInfo.mHardwareAccelerationRequested = false;
    // Don't enable hardware acceleration when the application is in compatibility mode
    if (mTranslator != null)
        return;
    // Try to enable hardware acceleration if requested
    final boolean hardwareAccelerated = (attrs.flags & WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED) != 0;
    if (hardwareAccelerated) {
        if (!HardwareRenderer.isAvailable()) {
            return;
        }
        // Persistent processes (including the system) should not do
        // accelerated rendering on low-end devices.  In that case,
        // sRendererDisabled will be set.  In addition, the system process
        // itself should never do accelerated rendering.  In that case, both
        // sRendererDisabled and sSystemRendererDisabled are set.  When
        // sSystemRendererDisabled is set, PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED
        // can be used by code on the system process to escape that and enable
        // HW accelerated drawing.  (This is basically for the lock screen.)
        final boolean fakeHwAccelerated = (attrs.privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FAKE_HARDWARE_ACCELERATED) != 0;
        final boolean forceHwAccelerated = (attrs.privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FORCE_HARDWARE_ACCELERATED) != 0;
        if (!HardwareRenderer.sRendererDisabled || (HardwareRenderer.sSystemRendererDisabled && forceHwAccelerated)) {
            // Don't enable hardware acceleration when we're not on the main thread
            if (!HardwareRenderer.sSystemRendererDisabled && Looper.getMainLooper() != Looper.myLooper()) {
                Log.w(HardwareRenderer.LOG_TAG, "Attempting to initialize hardware " + "acceleration outside of the main thread, aborting");
                return;
            }
            if (mAttachInfo.mHardwareRenderer != null) {
                mAttachInfo.mHardwareRenderer.destroy(true);
            }
            final boolean translucent = attrs.format != PixelFormat.OPAQUE;
            mAttachInfo.mHardwareRenderer = HardwareRenderer.create(translucent);
            if (mAttachInfo.mHardwareRenderer != null) {
                mAttachInfo.mHardwareRenderer.setName(attrs.getTitle().toString());
                mAttachInfo.mHardwareAccelerated = mAttachInfo.mHardwareAccelerationRequested = true;
            }
        } else if (fakeHwAccelerated) {
            // The window had wanted to use hardware acceleration, but this
            // is not allowed in its process.  By setting this flag, it can
            // still render as if it was accelerated.  This is basically for
            // the preview windows the window manager shows for launching
            // applications, so they will look more like the app being launched.
            mAttachInfo.mHardwareAccelerationRequested = true;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BooleanLiteralExpr
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BooleanLiteralExpr
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ReturnStmt
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(BinaryExpr
								(EnclosedExpr
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
								(IntegerLiteralExpr
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
					)
					(IfStmt
						NameExpr
							SimpleName
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BooleanLiteralExpr
									)
								)
								LineComment
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(UnaryExpr
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BinaryExpr
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											StringLiteralExpr
											StringLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(ReturnStmt
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NullLiteralExpr
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(MethodCallExpr
											SimpleName
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BooleanLiteralExpr
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)

