/**
 * Helper function for code readability: only to be called from
 * checkUpdateRemoteControlDisplay_syncAfRcs() which checks the preconditions for
 * this method.
 * Preconditions:
 * - called synchronized mAudioFocusLock then on mMCStack
 * - mMCStack.isEmpty() is false
 */
private void updateRemoteControlDisplay_syncAfRcs(int infoChangedFlags) {
    MediaController mcse = mMCStack.peek();
    int infoFlagsAboutToBeUsed = infoChangedFlags;
    // with the new AudioManager.registerRemoteControlClient() API
    if (mcse.mRcClient == null) {
        // Log.w(TAG, "Can't update remote control display with null remote control client");
        clearRemoteControlDisplay_syncAfRcs();
        return;
    }
    synchronized (mCurrentRcLock) {
        if (!mcse.mRcClient.equals(mCurrentRcClient)) {
            // new RC client, assume every type of information shall be queried
            infoFlagsAboutToBeUsed = RC_INFO_ALL;
        }
        mCurrentRcClient = mcse.mRcClient;
        mCurrentRcClientIntent = mcse.mMediaIntent;
    }
    // will cause onRcDisplayUpdate() to be called in AudioService's handler thread
    mEventHandler.sendMessage(mEventHandler.obtainMessage(MSG_RCDISPLAY_UPDATE, infoFlagsAboutToBeUsed, /* arg1 */
    0, mcse));
}||||||||/**
 * Helper function for code readability: only to be called from
 * checkUpdateRemoteControlDisplay_syncAfRcs() which checks the preconditions for
 * this method.
 * Preconditions:
 * - called synchronized mAudioFocusLock then on mMCStack
 * - mMCStack.isEmpty() is false
 */
private void updateRemoteControlDisplay_syncAfRcs(int infoChangedFlags) {
    MediaController mcse = mMCStack.peek();
    int infoFlagsAboutToBeUsed = infoChangedFlags;
    // with the new AudioManager.registerRemoteControlClient() API
    if (mcse.getRcc() == null) {
        // Log.w(TAG, "Can't update remote control display with null remote control client");
        clearRemoteControlDisplay_syncAfRcs();
        return;
    }
    synchronized (mCurrentRcLock) {
        if (!mcse.getRcc().equals(mCurrentRcClient)) {
            // new RC client, assume every type of information shall be queried
            infoFlagsAboutToBeUsed = RC_INFO_ALL;
        }
        mCurrentRcClient = mcse.getRcc();
        mCurrentRcClientIntent = mcse.getMediaButtonIntent();
    }
    // will cause onRcDisplayUpdate() to be called in AudioService's handler thread
    mEventHandler.sendMessage(mEventHandler.obtainMessage(MSG_RCDISPLAY_UPDATE, infoFlagsAboutToBeUsed, /* arg1 */
    0, mcse));
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
					LineComment
				)
				(ReturnStmt
				)
			)
			LineComment
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
						(BlockComment
						)
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
					LineComment
				)
				(ReturnStmt
				)
			)
			LineComment
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
					(IntegerLiteralExpr
						(BlockComment
						)
					)
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

