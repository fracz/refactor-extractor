// handler for MSG_RCC_NEW_PLAYBACK_INFO
private void onNewPlaybackInfoForRcc(int rccId, int key, int value) {
    if (DEBUG_RC)
        Log.d(TAG, "onNewPlaybackInfoForRcc(id=" + rccId + ", what=" + key + ",val=" + value + ")");
    synchronized (mMCStack) {
        // on entries at the top of the remote control stack
        try {
            for (int index = mMCStack.size() - 1; index >= 0; index--) {
                final MediaController mcse = mMCStack.elementAt(index);
                if (mcse.mRccId == rccId) {
                    switch(key) {
                        case RemoteControlClient.PLAYBACKINFO_PLAYBACK_TYPE:
                            mcse.mPlaybackType = value;
                            postReevaluateRemote();
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME:
                            mcse.mPlaybackVolume = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolume = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME_MAX:
                            mcse.mPlaybackVolumeMax = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolumeMax = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME_HANDLING:
                            mcse.mPlaybackVolumeHandling = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolumeHandling = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_USES_STREAM:
                            mcse.mPlaybackStream = value;
                            break;
                        default:
                            Log.e(TAG, "unhandled key " + key + " for RCC " + rccId);
                            break;
                    }
                    return;
                }
            }
        // for
        } catch (ArrayIndexOutOfBoundsException e) {
            // not expected to happen, indicates improper concurrent modification
            Log.e(TAG, "Wrong index mMCStack on onNewPlaybackInfoForRcc, lock error? ", e);
        }
    }
}||||||||// handler for MSG_RCC_NEW_PLAYBACK_INFO
private void onNewPlaybackInfoForRcc(int rccId, int key, int value) {
    if (DEBUG_RC)
        Log.d(TAG, "onNewPlaybackInfoForRcc(id=" + rccId + ", what=" + key + ",val=" + value + ")");
    synchronized (mMCStack) {
        // on entries at the top of the remote control stack
        try {
            for (int index = mMCStack.size() - 1; index >= 0; index--) {
                final MediaController mcse = mMCStack.elementAt(index);
                if (mcse.getRccId() == rccId) {
                    switch(key) {
                        case RemoteControlClient.PLAYBACKINFO_PLAYBACK_TYPE:
                            mcse.mPlaybackType = value;
                            postReevaluateRemote();
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME:
                            mcse.mPlaybackVolume = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolume = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME_MAX:
                            mcse.mPlaybackVolumeMax = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolumeMax = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_VOLUME_HANDLING:
                            mcse.mPlaybackVolumeHandling = value;
                            synchronized (mMainRemote) {
                                if (rccId == mMainRemote.mRccId) {
                                    mMainRemote.mVolumeHandling = value;
                                    mVolumeController.postHasNewRemotePlaybackInfo();
                                }
                            }
                            break;
                        case RemoteControlClient.PLAYBACKINFO_USES_STREAM:
                            mcse.mPlaybackStream = value;
                            break;
                        default:
                            Log.e(TAG, "unhandled key " + key + " for RCC " + rccId);
                            break;
                    }
                    return;
                }
            }
        // for
        } catch (ArrayIndexOutOfBoundsException e) {
            // not expected to happen, indicates improper concurrent modification
            Log.e(TAG, "Wrong index mMCStack on onNewPlaybackInfoForRcc, lock error? ", e);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(SwitchStmt
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											NameExpr
												SimpleName
										)
										(ReturnStmt
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										StringLiteralExpr
									)
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									StringLiteralExpr
									NameExpr
										SimpleName
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ForStmt
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
									(BlockStmt
										(SwitchStmt
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(ExpressionStmt
													(MethodCallExpr
														SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(SynchronizedStmt
													(BlockStmt
														(IfStmt
															(BinaryExpr
																NameExpr
																	SimpleName
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(BlockStmt
																(ExpressionStmt
																	(AssignExpr
																		(FieldAccessExpr
																			SimpleName
																			NameExpr
																				SimpleName
																		)
																		NameExpr
																			SimpleName
																	)
																)
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																		NameExpr
																			SimpleName
																	)
																)
															)
														)
													)
													NameExpr
														SimpleName
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(ExpressionStmt
													(AssignExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											(SwitchEntryStmt
												(ExpressionStmt
													(MethodCallExpr
														NameExpr
															SimpleName
														(BinaryExpr
															(BinaryExpr
																(BinaryExpr
																	StringLiteralExpr
																	NameExpr
																		SimpleName
																)
																StringLiteralExpr
															)
															NameExpr
																SimpleName
														)
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BreakStmt
												)
											)
											NameExpr
												SimpleName
										)
										(ReturnStmt
										)
									)
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	LineComment
)

