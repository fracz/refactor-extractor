@SmallTest
public void testKeyboardImes() throws Exception {
    // locale: en_US
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_US, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_US, IS_SYSTEM_READY, "com.android.apps.inputmethod.voice", "com.android.apps.inputmethod.latin");
    // locale: en_GB
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_GB, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_GB, IS_SYSTEM_READY, "com.android.apps.inputmethod.voice", "com.android.apps.inputmethod.latin");
    // locale: en_IN
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_IN, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_EN_IN, IS_SYSTEM_READY, "com.android.apps.inputmethod.voice", "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.hindi");
    // locale: hi
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_HI, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_HI, IS_SYSTEM_READY, "com.android.apps.inputmethod.voice", "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.hindi");
    // locale: ja_JP
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_JA_JP, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes(), LOCALE_JA_JP, IS_SYSTEM_READY, "com.android.apps.inputmethod.voice", "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.japanese");
}||||||||@SmallTest
public void testKeyboardImes() throws Exception {
    // locale: en_US
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rUS"), LOCALE_EN_US, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rUS"), LOCALE_EN_US, IS_SYSTEM_READY, "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.voice");
    // locale: en_GB
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rGB"), LOCALE_EN_GB, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rGB"), LOCALE_EN_GB, IS_SYSTEM_READY, "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.voice");
    // locale: en_IN
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rIN"), LOCALE_EN_IN, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("en-rIN"), LOCALE_EN_IN, IS_SYSTEM_READY, "com.android.apps.inputmethod.hindi", "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.voice");
    // locale: hi
    assertDefaultEnabledImes(getSamplePreinstalledImes("hi"), LOCALE_HI, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("hi"), LOCALE_HI, IS_SYSTEM_READY, "com.android.apps.inputmethod.hindi", "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.voice");
    // locale: ja_JP
    assertDefaultEnabledImes(getSamplePreinstalledImes("ja-rJP"), LOCALE_JA_JP, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("ja-rJP"), LOCALE_JA_JP, IS_SYSTEM_READY, "com.android.apps.inputmethod.japanese", "com.android.apps.inputmethod.voice");
    // locale: zh_CN
    assertDefaultEnabledImes(getSamplePreinstalledImes("zh-rCN"), LOCALE_ZH_CN, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("zh-rCN"), LOCALE_ZH_CN, IS_SYSTEM_READY, "com.android.apps.inputmethod.pinyin", "com.android.apps.inputmethod.voice");
    // locale: zh_TW
    // Note: In this case, no IME is suitable for the system locale. Hence we will pick up a
    // fallback IME regardless of the "default" attribute.
    assertDefaultEnabledImes(getSamplePreinstalledImes("zh-rTW"), LOCALE_ZH_TW, !IS_SYSTEM_READY, "com.android.apps.inputmethod.latin");
    assertDefaultEnabledImes(getSamplePreinstalledImes("zh-rTW"), LOCALE_ZH_TW, IS_SYSTEM_READY, "com.android.apps.inputmethod.latin", "com.android.apps.inputmethod.voice");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				(UnaryExpr
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(MethodCallExpr
					StringLiteralExpr
					SimpleName
				)
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				StringLiteralExpr
				StringLiteralExpr
				SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)

