/**
 * Returns the information associated with the location provider of the
 * given name, or null if no provider exists by that name.
 *
 * @param name the provider name
 * @return a LocationProvider, or null
 *
 * @throws IllegalArgumentException if name is null
 * @throws SecurityException if the caller is not permitted to access the
 * given provider.
 */
public LocationProvider getProvider(String name) {
    if (name == null) {
        throw new IllegalArgumentException("name==null");
    }
    try {
        Bundle info = mService.getProviderInfo(name);
        if (info == null) {
            return null;
        }
        return createProvider(name, info);
    } catch (RemoteException ex) {
        Log.e(TAG, "getProvider: RemoteException", ex);
    }
    return null;
}||||||||/**
 * Returns the information associated with the location provider of the
 * given name, or null if no provider exists by that name.
 *
 * @param name the provider name
 * @return a LocationProvider, or null
 *
 * @throws IllegalArgumentException if name is null or does not exisit
 * @throws SecurityException if the caller is not permitted to access the
 * given provider.
 * @deprecated The {@link LocationProvider} class is deprecated. So
 * use the {@link Criteria} class to request location instead of
 * enumerating providers.
 */
@Deprecated
public LocationProvider getProvider(String name) {
    checkProvider(name);
    try {
        ProviderProperties properties = mService.getProviderProperties(name);
        if (properties == null) {
            return null;
        }
        return createProvider(name, properties);
    } catch (RemoteException e) {
        Log.e(TAG, "RemoteException", e);
    }
    return null;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ThrowStmt
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(TryStmt
			(CatchClause
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(Parameter
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ReturnStmt
							NullLiteralExpr
						)
					)
				)
				(ReturnStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NullLiteralExpr
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

