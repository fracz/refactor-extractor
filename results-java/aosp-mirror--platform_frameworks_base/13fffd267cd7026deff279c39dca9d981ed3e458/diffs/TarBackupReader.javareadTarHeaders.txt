/**
 * Consumes a tar file header block [sequence] and accumulates the relevant metadata.
 */
public FileMetadata readTarHeaders() throws IOException {
    byte[] block = new byte[512];
    FileMetadata info = null;
    boolean gotHeader = readTarHeader(block);
    if (gotHeader) {
        try {
            // okay, presume we're okay, and extract the various metadata
            info = new FileMetadata();
            info.size = extractRadix(block, TAR_HEADER_OFFSET_FILESIZE, TAR_HEADER_LENGTH_FILESIZE, TAR_HEADER_LONG_RADIX);
            info.mtime = extractRadix(block, TAR_HEADER_OFFSET_MODTIME, TAR_HEADER_LENGTH_MODTIME, TAR_HEADER_LONG_RADIX);
            info.mode = extractRadix(block, TAR_HEADER_OFFSET_MODE, TAR_HEADER_LENGTH_MODE, TAR_HEADER_LONG_RADIX);
            info.path = extractString(block, TAR_HEADER_OFFSET_PATH_PREFIX, TAR_HEADER_LENGTH_PATH_PREFIX);
            String path = extractString(block, TAR_HEADER_OFFSET_PATH, TAR_HEADER_LENGTH_PATH);
            if (path.length() > 0) {
                if (info.path.length() > 0) {
                    info.path += '/';
                }
                info.path += path;
            }
            // tar link indicator field: 1 byte at offset 156 in the header.
            int typeChar = block[TAR_HEADER_OFFSET_TYPE_CHAR];
            if (typeChar == 'x') {
                // pax extended header, so we need to read that
                gotHeader = readPaxExtendedHeader(info);
                if (gotHeader) {
                    // and after a pax extended header comes another real header -- read
                    // that to find the real file type
                    gotHeader = readTarHeader(block);
                }
                if (!gotHeader) {
                    throw new IOException("Bad or missing pax header");
                }
                typeChar = block[TAR_HEADER_OFFSET_TYPE_CHAR];
            }
            switch(typeChar) {
                case '0':
                    info.type = BackupAgent.TYPE_FILE;
                    break;
                case '5':
                    {
                        info.type = BackupAgent.TYPE_DIRECTORY;
                        if (info.size != 0) {
                            Slog.w(RefactoredBackupManagerService.TAG, "Directory entry with nonzero size in header");
                            info.size = 0;
                        }
                        break;
                    }
                case 0:
                    {
                        // presume EOF
                        if (RefactoredBackupManagerService.MORE_DEBUG) {
                            Slog.w(RefactoredBackupManagerService.TAG, "Saw type=0 in tar header block, info=" + info);
                        }
                        return null;
                    }
                default:
                    {
                        Slog.e(RefactoredBackupManagerService.TAG, "Unknown tar entity type: " + typeChar);
                        throw new IOException("Unknown entity type " + typeChar);
                    }
            }
            // first: apps/shared/unrecognized
            if (FullBackup.SHARED_PREFIX.regionMatches(0, info.path, 0, FullBackup.SHARED_PREFIX.length())) {
                // File in shared storage.  !!! TODO: implement this.
                info.path = info.path.substring(FullBackup.SHARED_PREFIX.length());
                info.packageName = RefactoredBackupManagerService.SHARED_BACKUP_AGENT_PACKAGE;
                info.domain = FullBackup.SHARED_STORAGE_TOKEN;
                if (RefactoredBackupManagerService.DEBUG) {
                    Slog.i(RefactoredBackupManagerService.TAG, "File in shared storage: " + info.path);
                }
            } else if (FullBackup.APPS_PREFIX.regionMatches(0, info.path, 0, FullBackup.APPS_PREFIX.length())) {
                // App content!  Parse out the package name and domain
                // strip the apps/ prefix
                info.path = info.path.substring(FullBackup.APPS_PREFIX.length());
                // extract the package name
                int slash = info.path.indexOf('/');
                if (slash < 0) {
                    throw new IOException("Illegal semantic path in " + info.path);
                }
                info.packageName = info.path.substring(0, slash);
                info.path = info.path.substring(slash + 1);
                // out the domain into which the file will be restored
                if (!info.path.equals(RefactoredBackupManagerService.BACKUP_MANIFEST_FILENAME) && !info.path.equals(RefactoredBackupManagerService.BACKUP_METADATA_FILENAME)) {
                    slash = info.path.indexOf('/');
                    if (slash < 0) {
                        throw new IOException("Illegal semantic path in non-manifest " + info.path);
                    }
                    info.domain = info.path.substring(0, slash);
                    info.path = info.path.substring(slash + 1);
                }
            }
        } catch (IOException e) {
            if (RefactoredBackupManagerService.DEBUG) {
                Slog.e(RefactoredBackupManagerService.TAG, "Parse error in header: " + e.getMessage());
                if (RefactoredBackupManagerService.MORE_DEBUG) {
                    hexLog(block);
                }
            }
            throw e;
        }
    }
    return info;
}||||||||/**
 * Consumes a tar file header block [sequence] and accumulates the relevant metadata.
 */
public FileMetadata readTarHeaders() throws IOException {
    byte[] block = new byte[512];
    FileMetadata info = null;
    boolean gotHeader = readTarHeader(block);
    if (gotHeader) {
        try {
            // okay, presume we're okay, and extract the various metadata
            info = new FileMetadata();
            info.size = extractRadix(block, TAR_HEADER_OFFSET_FILESIZE, TAR_HEADER_LENGTH_FILESIZE, TAR_HEADER_LONG_RADIX);
            info.mtime = extractRadix(block, TAR_HEADER_OFFSET_MODTIME, TAR_HEADER_LENGTH_MODTIME, TAR_HEADER_LONG_RADIX);
            info.mode = extractRadix(block, TAR_HEADER_OFFSET_MODE, TAR_HEADER_LENGTH_MODE, TAR_HEADER_LONG_RADIX);
            info.path = extractString(block, TAR_HEADER_OFFSET_PATH_PREFIX, TAR_HEADER_LENGTH_PATH_PREFIX);
            String path = extractString(block, TAR_HEADER_OFFSET_PATH, TAR_HEADER_LENGTH_PATH);
            if (path.length() > 0) {
                if (info.path.length() > 0) {
                    info.path += '/';
                }
                info.path += path;
            }
            // tar link indicator field: 1 byte at offset 156 in the header.
            int typeChar = block[TAR_HEADER_OFFSET_TYPE_CHAR];
            if (typeChar == 'x') {
                // pax extended header, so we need to read that
                gotHeader = readPaxExtendedHeader(info);
                if (gotHeader) {
                    // and after a pax extended header comes another real header -- read
                    // that to find the real file type
                    gotHeader = readTarHeader(block);
                }
                if (!gotHeader) {
                    throw new IOException("Bad or missing pax header");
                }
                typeChar = block[TAR_HEADER_OFFSET_TYPE_CHAR];
            }
            switch(typeChar) {
                case '0':
                    info.type = BackupAgent.TYPE_FILE;
                    break;
                case '5':
                    {
                        info.type = BackupAgent.TYPE_DIRECTORY;
                        if (info.size != 0) {
                            Slog.w(TAG, "Directory entry with nonzero size in header");
                            info.size = 0;
                        }
                        break;
                    }
                case 0:
                    {
                        // presume EOF
                        if (MORE_DEBUG) {
                            Slog.w(TAG, "Saw type=0 in tar header block, info=" + info);
                        }
                        return null;
                    }
                default:
                    {
                        Slog.e(TAG, "Unknown tar entity type: " + typeChar);
                        throw new IOException("Unknown entity type " + typeChar);
                    }
            }
            // first: apps/shared/unrecognized
            if (FullBackup.SHARED_PREFIX.regionMatches(0, info.path, 0, FullBackup.SHARED_PREFIX.length())) {
                // File in shared storage.  !!! TODO: implement this.
                info.path = info.path.substring(FullBackup.SHARED_PREFIX.length());
                info.packageName = RefactoredBackupManagerService.SHARED_BACKUP_AGENT_PACKAGE;
                info.domain = FullBackup.SHARED_STORAGE_TOKEN;
                if (DEBUG) {
                    Slog.i(TAG, "File in shared storage: " + info.path);
                }
            } else if (FullBackup.APPS_PREFIX.regionMatches(0, info.path, 0, FullBackup.APPS_PREFIX.length())) {
                // App content!  Parse out the package name and domain
                // strip the apps/ prefix
                info.path = info.path.substring(FullBackup.APPS_PREFIX.length());
                // extract the package name
                int slash = info.path.indexOf('/');
                if (slash < 0) {
                    throw new IOException("Illegal semantic path in " + info.path);
                }
                info.packageName = info.path.substring(0, slash);
                info.path = info.path.substring(slash + 1);
                // out the domain into which the file will be restored
                if (!info.path.equals(RefactoredBackupManagerService.BACKUP_MANIFEST_FILENAME) && !info.path.equals(RefactoredBackupManagerService.BACKUP_METADATA_FILENAME)) {
                    slash = info.path.indexOf('/');
                    if (slash < 0) {
                        throw new IOException("Illegal semantic path in non-manifest " + info.path);
                    }
                    info.domain = info.path.substring(0, slash);
                    info.path = info.path.substring(slash + 1);
                }
            }
        } catch (IOException e) {
            if (DEBUG) {
                Slog.e(TAG, "Parse error in header: " + e.getMessage());
                if (MORE_DEBUG) {
                    hexLog(block);
                }
            }
            throw e;
        }
    }
    return info;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(IfStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											LineComment
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(BreakStmt
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										LineComment
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
							)
							(SwitchEntryStmt
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(CharLiteralExpr
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													(BinaryExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(UnaryExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										LineComment
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ArrayCreationExpr
						(PrimitiveType
						)
						(ArrayCreationLevel
							(IntegerLiteralExpr
							)
						)
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
							(IfStmt
								NameExpr
									SimpleName
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												StringLiteralExpr
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
										)
									)
								)
							)
							(ThrowStmt
								NameExpr
									SimpleName
							)
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(ObjectCreationExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(IfStmt
									(BinaryExpr
										(MethodCallExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
										(IntegerLiteralExpr
										)
									)
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
							LineComment
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(CharLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									LineComment
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(AssignExpr
												NameExpr
													SimpleName
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											LineComment
										)
									)
								)
								(IfStmt
									(UnaryExpr
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ThrowStmt
											(ObjectCreationExpr
												StringLiteralExpr
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(CharLiteralExpr
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													StringLiteralExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(IntegerLiteralExpr
													)
												)
											)
										)
									)
									(BreakStmt
									)
								)
							)
							(SwitchEntryStmt
								(IntegerLiteralExpr
								)
								(BlockStmt
									(IfStmt
										NameExpr
											SimpleName
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													NameExpr
														SimpleName
													(BinaryExpr
														StringLiteralExpr
														NameExpr
															SimpleName
													)
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										LineComment
									)
									(ReturnStmt
										NullLiteralExpr
									)
								)
							)
							(SwitchEntryStmt
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ThrowStmt
										(ObjectCreationExpr
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
							)
							NameExpr
								SimpleName
						)
						(IfStmt
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
								(MethodCallExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(IfStmt
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
									(MethodCallExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										LineComment
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													(CharLiteralExpr
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												(PrimitiveType
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										(BlockStmt
											(ThrowStmt
												(ObjectCreationExpr
													(BinaryExpr
														StringLiteralExpr
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
													(ClassOrInterfaceType
														SimpleName
													)
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
									(IfStmt
										(BinaryExpr
											(UnaryExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(UnaryExpr
												(MethodCallExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
										)
										(BlockStmt
											(ExpressionStmt
												(AssignExpr
													NameExpr
														SimpleName
													(MethodCallExpr
														(CharLiteralExpr
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
												(BlockStmt
													(ThrowStmt
														(ObjectCreationExpr
															(BinaryExpr
																StringLiteralExpr
																(FieldAccessExpr
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
															(ClassOrInterfaceType
																SimpleName
															)
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(IntegerLiteralExpr
														)
														NameExpr
															SimpleName
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
											(ExpressionStmt
												(AssignExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
													(MethodCallExpr
														(BinaryExpr
															NameExpr
																SimpleName
															(IntegerLiteralExpr
															)
														)
														SimpleName
														(FieldAccessExpr
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
											)
										)
										LineComment
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(MethodCallExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
											SimpleName
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(ExpressionStmt
									(AssignExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(IfStmt
									NameExpr
										SimpleName
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												(BinaryExpr
													StringLiteralExpr
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
								)
							)
							LineComment
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(JavadocComment
	)
)

