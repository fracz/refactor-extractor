protected void fling(float vel, boolean expand) {
    cancelPeek();
    float target = expand ? getMaxPanelHeight() : 0.0f;
    if (target == mExpandedHeight || getOverExpansionAmount() > 0f && expand) {
        notifyExpandingFinished();
        return;
    }
    mOverExpandedBeforeFling = getOverExpansionAmount() > 0f;
    ValueAnimator animator = createHeightAnimator(target);
    if (expand) {
        mFlingAnimationUtils.apply(animator, mExpandedHeight, target, vel, getHeight());
    } else {
        mFlingAnimationUtils.applyDismissing(animator, mExpandedHeight, target, vel, getHeight());
        // Make it shorter if we run a canned animation
        if (vel == 0) {
            animator.setDuration((long) (animator.getDuration() * getCannedFlingDurationFactor()));
        }
    }
    animator.addListener(new AnimatorListenerAdapter() {

        private boolean mCancelled;

        @Override
        public void onAnimationCancel(Animator animation) {
            mCancelled = true;
        }

        @Override
        public void onAnimationEnd(Animator animation) {
            mHeightAnimator = null;
            if (!mCancelled) {
                notifyExpandingFinished();
            }
        }
    });
    mHeightAnimator = animator;
    animator.start();
}||||||||protected void fling(float vel, boolean expand) {
    cancelPeek();
    float target = expand ? getMaxPanelHeight() : 0.0f;
    // Hack to make the expand transition look nice when clear all button is visible - we make
    // the animation only to the last notification, and then jump to the maximum panel height so
    // clear all just fades in and the decelerating motion is towards the last notification.
    final boolean clearAllExpandHack = expand && fullyExpandedClearAllVisible() && mExpandedHeight < getMaxPanelHeight() - getClearAllHeight() && !isClearAllVisible();
    if (clearAllExpandHack) {
        target = getMaxPanelHeight() - getClearAllHeight();
    }
    if (target == mExpandedHeight || getOverExpansionAmount() > 0f && expand) {
        notifyExpandingFinished();
        return;
    }
    mOverExpandedBeforeFling = getOverExpansionAmount() > 0f;
    ValueAnimator animator = createHeightAnimator(target);
    if (expand) {
        mFlingAnimationUtils.apply(animator, mExpandedHeight, target, vel, getHeight());
    } else {
        mFlingAnimationUtils.applyDismissing(animator, mExpandedHeight, target, vel, getHeight());
        // Make it shorter if we run a canned animation
        if (vel == 0) {
            animator.setDuration((long) (animator.getDuration() * getCannedFlingDurationFactor()));
        }
    }
    animator.addListener(new AnimatorListenerAdapter() {

        private boolean mCancelled;

        @Override
        public void onAnimationCancel(Animator animation) {
            mCancelled = true;
        }

        @Override
        public void onAnimationEnd(Animator animation) {
            if (clearAllExpandHack && !mCancelled) {
                mHeightAnimator = createHeightAnimator(getMaxPanelHeight());
                mHeightAnimator.setInterpolator(mLinearOutSlowInInterpolator);
                mHeightAnimator.setDuration(350);
                mHeightAnimator.addListener(new AnimatorListenerAdapter() {

                    private boolean mCancelled;

                    @Override
                    public void onAnimationCancel(Animator animation) {
                        mCancelled = true;
                    }

                    @Override
                    public void onAnimationEnd(Animator animation) {
                        mHeightAnimator = null;
                        if (!mCancelled) {
                            notifyExpandingFinished();
                        }
                    }
                });
                mHeightAnimator.start();
            } else {
                mHeightAnimator = null;
                if (!mCancelled) {
                    notifyExpandingFinished();
                }
            }
        }
    });
    mHeightAnimator = animator;
    animator.start();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(MethodCallExpr
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(DoubleLiteralExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					(DoubleLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(IfStmt
								(UnaryExpr
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						NameExpr
							SimpleName
						(DoubleLiteralExpr
						)
						(MethodCallExpr
							SimpleName
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
								)
							)
							(BinaryExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(MethodCallExpr
										SimpleName
									)
									(MethodCallExpr
										SimpleName
									)
								)
							)
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
							)
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(MethodCallExpr
								SimpleName
							)
							(MethodCallExpr
								SimpleName
							)
						)
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
						)
						(DoubleLiteralExpr
						)
					)
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
				(ReturnStmt
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(MethodCallExpr
						SimpleName
					)
					(DoubleLiteralExpr
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(CastExpr
									(EnclosedExpr
										(BinaryExpr
											(MethodCallExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(MethodCallExpr
												SimpleName
											)
										)
									)
									(PrimitiveType
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(ObjectCreationExpr
					(FieldDeclaration
						(VariableDeclarator
							SimpleName
							(PrimitiveType
							)
						)
					)
					(MethodDeclaration
						(BlockStmt
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(BooleanLiteralExpr
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(MethodDeclaration
						(BlockStmt
							(IfStmt
								(BinaryExpr
									NameExpr
										SimpleName
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
									)
									(IfStmt
										(UnaryExpr
											NameExpr
												SimpleName
										)
										(BlockStmt
											(ExpressionStmt
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(MethodCallExpr
												(MethodCallExpr
													SimpleName
												)
												SimpleName
											)
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(IntegerLiteralExpr
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											(ObjectCreationExpr
												(FieldDeclaration
													(VariableDeclarator
														SimpleName
														(PrimitiveType
														)
													)
												)
												(MethodDeclaration
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																(BooleanLiteralExpr
																)
															)
														)
													)
													(VoidType
													)
													SimpleName
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(MarkerAnnotationExpr
														Name
													)
												)
												(MethodDeclaration
													(BlockStmt
														(ExpressionStmt
															(AssignExpr
																NameExpr
																	SimpleName
																NullLiteralExpr
															)
														)
														(IfStmt
															(UnaryExpr
																NameExpr
																	SimpleName
															)
															(BlockStmt
																(ExpressionStmt
																	(MethodCallExpr
																		SimpleName
																	)
																)
															)
														)
													)
													(VoidType
													)
													SimpleName
													(Parameter
														SimpleName
														(ClassOrInterfaceType
															SimpleName
														)
													)
													(MarkerAnnotationExpr
														Name
													)
												)
												(ClassOrInterfaceType
													SimpleName
												)
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(VoidType
						)
						SimpleName
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
						(MarkerAnnotationExpr
							Name
						)
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

