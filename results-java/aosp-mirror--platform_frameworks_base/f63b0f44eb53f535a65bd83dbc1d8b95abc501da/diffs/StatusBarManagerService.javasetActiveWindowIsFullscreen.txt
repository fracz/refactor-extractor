public void setActiveWindowIsFullscreen(boolean fullscreen) {
    // We could get away with a separate permission here, but STATUS_BAR is
    // signatureOrSystem which is probably good enough.  There is no public API
    // for this, so the question is a security issue, not an API compatibility issue.
    enforceStatusBar();
    final boolean lightsOn = !fullscreen;
    synchronized (mLock) {
        if (mLightsOn != lightsOn) {
            mLightsOn = lightsOn;
            mHandler.post(new Runnable() {

                public void run() {
                    if (mBar != null) {
                        try {
                            mBar.setLightsOn(lightsOn);
                        } catch (RemoteException ex) {
                        }
                    }
                }
            });
        }
    }
}||||||||/**
 * This is used for the automatic version of lights-out mode.  Only call this from
 * the window manager.
 *
 * @see setLightsOn(boolean)
 */
public void setActiveWindowIsFullscreen(boolean fullscreen) {
    // We could get away with a separate permission here, but STATUS_BAR is
    // signatureOrSystem which is probably good enough.  There is no public API
    // for this, so the question is a security issue, not an API compatibility issue.
    enforceStatusBar();
    synchronized (mLock) {
        updateLightsOnLocked(!fullscreen);
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(UnaryExpr
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								(ObjectCreationExpr
									(MethodDeclaration
										(BlockStmt
											(IfStmt
												(BinaryExpr
													NameExpr
														SimpleName
													NullLiteralExpr
												)
												(BlockStmt
													(TryStmt
														(CatchClause
															(BlockStmt
															)
															(Parameter
																SimpleName
																(ClassOrInterfaceType
																	SimpleName
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(MethodCallExpr
																	NameExpr
																		SimpleName
																	SimpleName
																	NameExpr
																		SimpleName
																)
															)
														)
													)
												)
											)
										)
										(VoidType
										)
										SimpleName
									)
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

