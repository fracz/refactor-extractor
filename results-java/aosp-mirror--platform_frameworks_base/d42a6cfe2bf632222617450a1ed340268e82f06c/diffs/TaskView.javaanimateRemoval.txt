/**
 * Animates the deletion of this task view
 */
public void animateRemoval(final Runnable r) {
    // Disabling clipping with the stack while the view is animating away
    setClipViewInStack(false);
    RecentsConfiguration config = RecentsConfiguration.getInstance();
    animate().translationX(config.taskViewRemoveAnimTranslationXPx).alpha(0f).setStartDelay(0).setInterpolator(config.fastOutSlowInInterpolator).setDuration(config.taskViewRemoveAnimDuration).withLayer().withEndAction(new Runnable() {

        @Override
        public void run() {
            post(r);
            // Re-enable clipping with the stack (we will reuse this view)
            setClipViewInStack(false);
        }
    }).start();
}||||||||/**
 * Animates the deletion of this task view
 */
public void animateRemoval(final Runnable r) {
    // Disabling clipping with the stack while the view is animating away
    setClipViewInStack(false);
    animate().translationX(mConfig.taskViewRemoveAnimTranslationXPx).alpha(0f).setStartDelay(0).setInterpolator(mConfig.fastOutSlowInInterpolator).setDuration(mConfig.taskViewRemoveAnimDuration).withLayer().withEndAction(new Runnable() {

        @Override
        public void run() {
            // We just throw this into a runnable because starting a view property
            // animation using layers can cause inconsisten results if we try and
            // update the layers while the animation is running.  In some cases,
            // the runnabled passed in may start an animation which also uses layers
            // so we defer all this by posting this.
            r.run();
            // Re-enable clipping with the stack (we will reuse this view)
            setClipViewInStack(true);
        }
    }).start();
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
									)
									LineComment
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(DoubleLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					(ObjectCreationExpr
						(MethodDeclaration
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										SimpleName
									)
									LineComment
								)
							)
							(VoidType
							)
							SimpleName
							(MarkerAnnotationExpr
								Name
							)
						)
						(ClassOrInterfaceType
							SimpleName
						)
					)
					SimpleName
					(MethodCallExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								(MethodCallExpr
									(IntegerLiteralExpr
									)
									SimpleName
									(MethodCallExpr
										(DoubleLiteralExpr
										)
										SimpleName
										(MethodCallExpr
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(MethodCallExpr
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

