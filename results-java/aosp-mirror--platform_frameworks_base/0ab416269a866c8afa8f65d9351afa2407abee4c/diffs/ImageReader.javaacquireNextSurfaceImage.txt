/**
 * Attempts to acquire the next image from the underlying native implementation.
 *
 * <p>
 * Note that unexpected failures will throw at the JNI level.
 * </p>
 *
 * @param si A blank SurfaceImage.
 * @return One of the {@code ACQUIRE_*} codes that determine success or failure.
 *
 * @see #ACQUIRE_MAX_IMAGES
 * @see #ACQUIRE_NO_BUFS
 * @see #ACQUIRE_SUCCESS
 */
private int acquireNextSurfaceImage(SurfaceImage si) {
    synchronized (mCloseLock) {
        // A null image will eventually be returned if ImageReader is already closed.
        int status = ACQUIRE_NO_BUFS;
        if (mIsReaderValid) {
            status = nativeImageSetup(si);
        }
        switch(status) {
            case ACQUIRE_SUCCESS:
                si.createSurfacePlanes();
                si.mIsImageValid = true;
            case ACQUIRE_NO_BUFS:
            case ACQUIRE_MAX_IMAGES:
                break;
            default:
                throw new AssertionError("Unknown nativeImageSetup return code " + status);
        }
        // for such case.
        if (status == ACQUIRE_SUCCESS) {
            mAcquiredImages.add(si);
        }
        return status;
    }
}||||||||/**
 * Attempts to acquire the next image from the underlying native implementation.
 *
 * <p>
 * Note that unexpected failures will throw at the JNI level.
 * </p>
 *
 * @param si A blank SurfaceImage.
 * @return One of the {@code ACQUIRE_*} codes that determine success or failure.
 *
 * @see #ACQUIRE_MAX_IMAGES
 * @see #ACQUIRE_NO_BUFS
 * @see #ACQUIRE_SUCCESS
 */
private int acquireNextSurfaceImage(SurfaceImage si) {
    synchronized (mCloseLock) {
        // A null image will eventually be returned if ImageReader is already closed.
        int status = ACQUIRE_NO_BUFS;
        if (mIsReaderValid) {
            status = nativeImageSetup(si);
        }
        switch(status) {
            case ACQUIRE_SUCCESS:
                si.mIsImageValid = true;
            case ACQUIRE_NO_BUFS:
            case ACQUIRE_MAX_IMAGES:
                break;
            default:
                throw new AssertionError("Unknown nativeImageSetup return code " + status);
        }
        // for such case.
        if (status == ACQUIRE_SUCCESS) {
            mAcquiredImages.add(si);
        }
        return status;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
							)
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
				)
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BooleanLiteralExpr
								)
							)
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						(ThrowStmt
							(ObjectCreationExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

