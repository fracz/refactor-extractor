@Override
public String toString() {
    int[] types = getTransportTypes();
    String transports = (types.length > 0) ? " Transports: " + transportNamesOf(types) : "";
    types = getCapabilities();
    String capabilities = (types.length > 0 ? " Capabilities: " : "");
    for (int i = 0; i < types.length; ) {
        switch(types[i]) {
            case NET_CAPABILITY_MMS:
                capabilities += "MMS";
                break;
            case NET_CAPABILITY_SUPL:
                capabilities += "SUPL";
                break;
            case NET_CAPABILITY_DUN:
                capabilities += "DUN";
                break;
            case NET_CAPABILITY_FOTA:
                capabilities += "FOTA";
                break;
            case NET_CAPABILITY_IMS:
                capabilities += "IMS";
                break;
            case NET_CAPABILITY_CBS:
                capabilities += "CBS";
                break;
            case NET_CAPABILITY_WIFI_P2P:
                capabilities += "WIFI_P2P";
                break;
            case NET_CAPABILITY_IA:
                capabilities += "IA";
                break;
            case NET_CAPABILITY_RCS:
                capabilities += "RCS";
                break;
            case NET_CAPABILITY_XCAP:
                capabilities += "XCAP";
                break;
            case NET_CAPABILITY_EIMS:
                capabilities += "EIMS";
                break;
            case NET_CAPABILITY_NOT_METERED:
                capabilities += "NOT_METERED";
                break;
            case NET_CAPABILITY_INTERNET:
                capabilities += "INTERNET";
                break;
            case NET_CAPABILITY_NOT_RESTRICTED:
                capabilities += "NOT_RESTRICTED";
                break;
            case NET_CAPABILITY_TRUSTED:
                capabilities += "TRUSTED";
                break;
            case NET_CAPABILITY_NOT_VPN:
                capabilities += "NOT_VPN";
                break;
            case NET_CAPABILITY_VALIDATED:
                capabilities += "VALIDATED";
                break;
            case NET_CAPABILITY_CAPTIVE_PORTAL:
                capabilities += "CAPTIVE_PORTAL";
                break;
            case NET_CAPABILITY_FOREGROUND:
                capabilities += "FOREGROUND";
                break;
        }
        if (++i < types.length)
            capabilities += "&";
    }
    String upBand = ((mLinkUpBandwidthKbps > 0) ? " LinkUpBandwidth>=" + mLinkUpBandwidthKbps + "Kbps" : "");
    String dnBand = ((mLinkDownBandwidthKbps > 0) ? " LinkDnBandwidth>=" + mLinkDownBandwidthKbps + "Kbps" : "");
    String specifier = (mNetworkSpecifier == null ? "" : " Specifier: <" + mNetworkSpecifier + ">");
    String signalStrength = (hasSignalStrength() ? " SignalStrength: " + mSignalStrength : "");
    return "[" + transports + capabilities + upBand + dnBand + specifier + signalStrength + "]";
}||||||||@Override
public String toString() {
    // TODO: enumerate bits for transports and capabilities instead of creating arrays.
    // TODO: use a StringBuilder instead of string concatenation.
    int[] types = getTransportTypes();
    String transports = (types.length > 0) ? " Transports: " + transportNamesOf(types) : "";
    types = getCapabilities();
    String capabilities = (types.length > 0 ? " Capabilities: " : "");
    for (int i = 0; i < types.length; ) {
        capabilities += capabilityNameOf(types[i]);
        if (++i < types.length)
            capabilities += "&";
    }
    String upBand = ((mLinkUpBandwidthKbps > 0) ? " LinkUpBandwidth>=" + mLinkUpBandwidthKbps + "Kbps" : "");
    String dnBand = ((mLinkDownBandwidthKbps > 0) ? " LinkDnBandwidth>=" + mLinkDownBandwidthKbps + "Kbps" : "");
    String specifier = (mNetworkSpecifier == null ? "" : " Specifier: <" + mNetworkSpecifier + ">");
    String signalStrength = (hasSignalStrength() ? " SignalStrength: " + mSignalStrength : "");
    return "[" + transports + capabilities + upBand + dnBand + specifier + signalStrength + "]";
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							StringLiteralExpr
							StringLiteralExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(SwitchStmt
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(SwitchEntryStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								StringLiteralExpr
							)
						)
						(BreakStmt
						)
					)
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							StringLiteralExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							StringLiteralExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				StringLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(ArrayType
						(PrimitiveType
						)
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(ConditionalExpr
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
						)
						StringLiteralExpr
						(BinaryExpr
							StringLiteralExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(MethodCallExpr
					SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							StringLiteralExpr
							StringLiteralExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							StringLiteralExpr
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							StringLiteralExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(EnclosedExpr
								(BinaryExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
							StringLiteralExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NullLiteralExpr
							)
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							StringLiteralExpr
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(MethodCallExpr
								SimpleName
							)
							StringLiteralExpr
							(BinaryExpr
								StringLiteralExpr
								NameExpr
									SimpleName
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				StringLiteralExpr
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
)

