/**
 * Return the next argument on the command line, whatever it is; if there are
 * no arguments left, return null.
 */
public String nextArg() {
    if (mCurArgData != null) {
        String arg = mCurArgData;
        mCurArgData = null;
        return arg;
    } else if (mNextArg < mArgs.length) {
        return mArgs[mNextArg++];
    } else {
        return null;
    }
}||||||||/**
 * Return the next argument on the command line, whatever it is; if there are
 * no arguments left, return null.
 */
public String nextArg() {
    return mArgs.getNextArg();
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(ReturnStmt
						NullLiteralExpr
					)
				)
				(BlockStmt
					(ReturnStmt
						(ArrayAccessExpr
							(UnaryExpr
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							NameExpr
								SimpleName
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(MethodCallExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	SimpleName
	(JavadocComment
	)
)

