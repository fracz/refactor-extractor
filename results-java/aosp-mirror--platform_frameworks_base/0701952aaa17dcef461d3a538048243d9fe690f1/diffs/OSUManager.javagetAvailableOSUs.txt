/*
    public void startOSU() {
        registerUserInputListener(new UserInputListener() {
            @Override
            public void requestUserInput(URL target, Network network, URL endRedirect) {
                Log.d(TAG, "Browser to " + target + ", land at " + endRedirect);

                final Intent intent = new Intent(
                        ConnectivityManager.ACTION_CAPTIVE_PORTAL_SIGN_IN);
                intent.putExtra(ConnectivityManager.EXTRA_NETWORK, network);
                intent.putExtra(ConnectivityManager.EXTRA_CAPTIVE_PORTAL,
                        new CaptivePortal(new ICaptivePortal.Stub() {
                            @Override
                            public void appResponse(int response) {
                            }
                        }));
                //intent.setData(Uri.parse(target.toString()));     !!! Doesn't work!
                intent.putExtra(ConnectivityManager.EXTRA_CAPTIVE_PORTAL_URL, target.toString());
                intent.setFlags(
                        Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
                mContext.startActivityAsUser(intent, UserHandle.CURRENT);
            }

            @Override
            public String operationStatus(String spIdentity, OSUOperationStatus status,
                                          String message) {
                Log.d(TAG, "OSU OP Status: " + status + ", message " + message);
                Intent intent = new Intent(Intent.ACTION_OSU_NOTIFICATION);
                intent.putExtra(SP_NAME, spIdentity);
                intent.putExtra(PROV_SUCCESS, status == OSUOperationStatus.ProvisioningSuccess);
                if (message != null) {
                    intent.putExtra(PROV_MESSAGE, message);
                }
                intent.setFlags(
                        Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
                mContext.startActivityAsUser(intent, UserHandle.CURRENT);
                return null;
            }

            @Override
            public void deAuthNotification(String spIdentity, boolean ess, int delay, URL url) {
                Log.i(TAG, "De-authentication imminent for " + (ess ? "ess" : "bss") +
                        ", redirect to " + url);
                Intent intent = new Intent(Intent.ACTION_OSU_NOTIFICATION);
                intent.putExtra(SP_NAME, spIdentity);
                intent.putExtra(DEAUTH, ess);
                intent.putExtra(DEAUTH_DELAY, delay);
                intent.putExtra(DEAUTH_URL, url.toString());
                intent.setFlags(
                        Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
                mContext.startActivityAsUser(intent, UserHandle.CURRENT);
            }
        });
        addOSUListener(new OSUListener() {
            @Override
            public void osuNotification(int count) {
                Intent intent = new Intent(Intent.ACTION_OSU_NOTIFICATION);
                intent.putExtra(OSU_COUNT, count);
                intent.setFlags(
                        Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);
                mContext.startActivityAsUser(intent, UserHandle.CURRENT);
            }
        });
        mWifiNetworkAdapter.initialize();
        mSubscriptionTimer.checkUpdates();
    }
    */
public List<OSUInfo> getAvailableOSUs() {
    synchronized (mOSUMap) {
        List<OSUInfo> completeOSUs = new ArrayList<>();
        for (OSUInfo osuInfo : mOSUMap.values()) {
            if (osuInfo.getIconStatus() == OSUInfo.IconStatus.Available) {
                completeOSUs.add(osuInfo);
            }
        }
        return completeOSUs;
    }
}||||||||public List<OSUData> getAvailableOSUs() {
    synchronized (mOSUMap) {
        List<OSUData> completeOSUs = new ArrayList<>();
        for (OSUInfo osuInfo : mOSUMap.values()) {
            if (osuInfo.getIconStatus() == OSUInfo.IconStatus.Available) {
                completeOSUs.add(new OSUData(osuInfo));
            }
        }
        return completeOSUs;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ObjectCreationExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForeachStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											NameExpr
												SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
					)
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ReturnStmt
					NameExpr
						SimpleName
				)
			)
			NameExpr
				SimpleName
		)
	)
	(ClassOrInterfaceType
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	SimpleName
)

