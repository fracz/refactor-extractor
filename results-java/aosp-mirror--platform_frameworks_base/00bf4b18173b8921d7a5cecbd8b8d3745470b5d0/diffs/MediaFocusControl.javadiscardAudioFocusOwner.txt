/**
 * Discard the current audio focus owner.
 * Notify top of audio focus stack that it lost focus (regardless of possibility to reassign
 * focus), remove it from the stack, and clear the remote control display.
 */
protected void discardAudioFocusOwner() {
    synchronized (mAudioFocusLock) {
        if (!mFocusStack.empty() && (mFocusStack.peek().mFocusDispatcher != null)) {
            // notify the current focus owner it lost focus after removing it from stack
            final FocusStackEntry exFocusOwner = mFocusStack.pop();
            try {
                exFocusOwner.mFocusDispatcher.dispatchAudioFocusChange(AudioManager.AUDIOFOCUS_LOSS, exFocusOwner.mClientId);
            } catch (RemoteException e) {
                Log.e(TAG, "Failure to signal loss of audio focus due to " + e);
                e.printStackTrace();
            }
            exFocusOwner.unlinkToDeath();
            // clear RCD
            synchronized (mRCStack) {
                clearRemoteControlDisplay_syncAfRcs();
            }
        }
    }
}||||||||/**
 * Discard the current audio focus owner.
 * Notify top of audio focus stack that it lost focus (regardless of possibility to reassign
 * focus), remove it from the stack, and clear the remote control display.
 */
protected void discardAudioFocusOwner() {
    synchronized (mAudioFocusLock) {
        if (!mFocusStack.empty() && (mFocusStack.peek().mFocusDispatcher != null)) {
            // notify the current focus owner it lost focus after removing it from stack
            final FocusStackEntry exFocusOwner = mFocusStack.pop();
            exFocusOwner.handleFocusLoss(AudioManager.AUDIOFOCUS_LOSS);
            exFocusOwner.unlinkToDeath();
            // clear RCD
            synchronized (mRCStack) {
                clearRemoteControlDisplay_syncAfRcs();
            }
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NullLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(TryStmt
							(CatchClause
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											(BinaryExpr
												StringLiteralExpr
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(Parameter
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SynchronizedStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(EnclosedExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NullLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(ClassOrInterfaceType
										SimpleName
									)
								)
							)
							LineComment
						)
						(ExpressionStmt
							(MethodCallExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SynchronizedStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

