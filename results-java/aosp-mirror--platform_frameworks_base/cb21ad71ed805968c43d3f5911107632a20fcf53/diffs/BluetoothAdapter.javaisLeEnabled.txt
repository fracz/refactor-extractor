/**
 * Return true if Bluetooth LE(Always BLE On feature) is currently
 * enabled and ready for use
 * <p>This returns true if current state is either STATE_ON or STATE_BLE_ON
 *
 * @return true if the local Bluetooth LE adapter is turned on
 * @hide
 */
@SystemApi
public boolean isLeEnabled() {
    final int state = getLeState();
    if (state == BluetoothAdapter.STATE_ON) {
        if (DBG)
            Log.d(TAG, "STATE_ON");
    } else if (state == BluetoothAdapter.STATE_BLE_ON) {
        if (DBG)
            Log.d(TAG, "STATE_BLE_ON");
    } else {
        if (DBG)
            Log.d(TAG, "STATE_OFF");
        return false;
    }
    return true;
}||||||||/**
 * Return true if Bluetooth LE(Always BLE On feature) is currently
 * enabled and ready for use
 * <p>This returns true if current state is either STATE_ON or STATE_BLE_ON
 *
 * @return true if the local Bluetooth LE adapter is turned on
 * @hide
 */
@SystemApi
public boolean isLeEnabled() {
    final int state = getLeState();
    if (DBG)
        Log.d(TAG, "isLeEnabled(): " + BluetoothAdapter.nameForState(state));
    return (state == BluetoothAdapter.STATE_ON || state == BluetoothAdapter.STATE_BLE_ON);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(BinaryExpr
					NameExpr
						SimpleName
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(BlockStmt
					(IfStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
				(BlockStmt
					(IfStmt
						NameExpr
							SimpleName
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								StringLiteralExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						StringLiteralExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ReturnStmt
			(EnclosedExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

