@Override
public void onPersistentVrStateChanged(boolean enabled) {
    synchronized (ActivityManagerService.this) {
        // 4. Do nothing
        if (enabled) {
            mVrState = PERSISTENT_VR_MODE;
        } else {
            // Leaving persistent mode implies leaving VR mode.
            mVrState = NON_VR_MODE;
        }
        if (mVrState == PERSISTENT_VR_MODE) {
            if (mTopAppVrThreadTid > 0) {
                // Ensure that when entering persistent VR mode the last top-app loses
                // SCHED_FIFO.
                Process.setThreadScheduler(mTopAppVrThreadTid, Process.SCHED_OTHER, 0);
                mTopAppVrThreadTid = 0;
            }
        } else if (mPersistentVrThreadTid > 0) {
            // Ensure that when leaving persistent VR mode we reschedule the high priority
            // persistent thread.
            Process.setThreadScheduler(mPersistentVrThreadTid, Process.SCHED_OTHER, 0);
            mPersistentVrThreadTid = 0;
        }
    }
}||||||||@Override
public void onPersistentVrStateChanged(boolean enabled) {
    synchronized (ActivityManagerService.this) {
        // 4. Do nothing
        if (enabled) {
            mVrState = PERSISTENT_VR_MODE;
        } else {
            // Leaving persistent mode implies leaving VR mode.
            mVrState = NON_VR_MODE;
        }
        if (mVrState == PERSISTENT_VR_MODE) {
            if (mTopAppVrThreadTid > 0) {
                // Ensure that when entering persistent VR mode the last top-app loses
                // SCHED_FIFO.
                setThreadScheduler(mTopAppVrThreadTid, SCHED_OTHER, 0);
                mTopAppVrThreadTid = 0;
            }
        } else if (mPersistentVrThreadTid > 0) {
            // Ensure that when leaving persistent VR mode we reschedule the high priority
            // persistent thread.
            setThreadScheduler(mPersistentVrThreadTid, SCHED_OTHER, 0);
            mPersistentVrThreadTid = 0;
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(IntegerLiteralExpr
									)
									SimpleName
									NameExpr
										SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										(IntegerLiteralExpr
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
					)
				)
			)
			(ThisExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
									SimpleName
								)
								LineComment
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
							)
						)
					)
					(BlockStmt
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
										SimpleName
									)
									LineComment
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(IntegerLiteralExpr
										)
									)
								)
							)
						)
					)
				)
			)
			(ThisExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

