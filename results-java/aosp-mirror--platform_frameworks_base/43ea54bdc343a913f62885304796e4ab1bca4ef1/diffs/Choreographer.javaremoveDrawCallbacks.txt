/**
 * Removes draw callbacks that have the specified action and token.
 *
 * @param action The action property of the callbacks to remove, or null to remove
 * callbacks with any action.
 * @param token The token property of the callbacks to remove, or null to remove
 * callbacks with any token.
 *
 * @see #postDrawCallback
 * @see #postDrawCallbackDelayed
 */
public void removeDrawCallbacks(Runnable action, Object token) {
    synchronized (mLock) {
        mDrawCallbacks = removeCallbacksLocked(mDrawCallbacks, action, token);
        if (action != null && token == null) {
            mHandler.removeMessages(MSG_DO_SCHEDULE_DRAW, action);
        }
    }
}||||||||/**
 * Removes draw callbacks that have the specified action and token.
 *
 * @param action The action property of the callbacks to remove, or null to remove
 * callbacks with any action.
 * @param token The token property of the callbacks to remove, or null to remove
 * callbacks with any token.
 *
 * @see #postDrawCallback
 * @see #postDrawCallbackDelayed
 */
public void removeDrawCallbacks(Runnable action, Object token) {
    if (DEBUG) {
        Log.d(TAG, "RemoveDrawCallbacks: " + action + ", token=" + token);
    }
    synchronized (mLock) {
        mDrawCallbackQueue.removeCallbacksLocked(action, token);
        if (action != null && token == null) {
            mHandler.removeMessages(MSG_DO_SCHEDULE_DRAW, action);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								StringLiteralExpr
							)
							NameExpr
								SimpleName
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(JavadocComment
	)
)

