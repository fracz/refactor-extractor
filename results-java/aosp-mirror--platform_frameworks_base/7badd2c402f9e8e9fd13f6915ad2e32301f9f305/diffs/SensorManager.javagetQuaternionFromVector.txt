/**
 * Helper function to convert a rotation vector to a normalized quaternion.
 * Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a normalized
 * quaternion in the array Q.  The quaternion is stored as [w, x, y, z]
 * @param rv the rotation vector to convert
 * @param Q an array of floats in which to store the computed quaternion
 */
public static void getQuaternionFromVector(float[] Q, float[] rv) {
    float w = (float) Math.sqrt(1 - rv[0] * rv[0] - rv[1] * rv[1] - rv[2] * rv[2]);
    // In this case, the w component of the quaternion is known to be a positive number
    Q[0] = w;
    Q[1] = rv[0];
    Q[2] = rv[1];
    Q[3] = rv[2];
}||||||||/**
 * Helper function to convert a rotation vector to a normalized quaternion.
 * Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a normalized
 * quaternion in the array Q.  The quaternion is stored as [w, x, y, z]
 * @param rv the rotation vector to convert
 * @param Q an array of floats in which to store the computed quaternion
 */
public static void getQuaternionFromVector(float[] Q, float[] rv) {
    if (rv.length == 4) {
        Q[0] = rv[3];
    } else {
        // In this case, the w component of the quaternion is known to be a positive number
        Q[0] = (float) Math.sqrt(1 - rv[0] * rv[0] - rv[1] * rv[1] - rv[2] * rv[2]);
    }
    Q[1] = rv[0];
    Q[2] = rv[1];
    Q[3] = rv[2];
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(CastExpr
						(MethodCallExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(IntegerLiteralExpr
										)
										(BinaryExpr
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
									)
								)
								(BinaryExpr
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
									(ArrayAccessExpr
										(IntegerLiteralExpr
										)
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							NameExpr
								SimpleName
						)
						(PrimitiveType
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(CastExpr
							(MethodCallExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(IntegerLiteralExpr
											)
											(BinaryExpr
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
												(ArrayAccessExpr
													(IntegerLiteralExpr
													)
													NameExpr
														SimpleName
												)
											)
										)
										(BinaryExpr
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
											(ArrayAccessExpr
												(IntegerLiteralExpr
												)
												NameExpr
													SimpleName
											)
										)
									)
									(BinaryExpr
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
										(ArrayAccessExpr
											(IntegerLiteralExpr
											)
											NameExpr
												SimpleName
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							(PrimitiveType
							)
						)
					)
					LineComment
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
						(ArrayAccessExpr
							(IntegerLiteralExpr
							)
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
				(ArrayAccessExpr
					(IntegerLiteralExpr
					)
					NameExpr
						SimpleName
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(Parameter
		SimpleName
		(ArrayType
			(PrimitiveType
			)
		)
	)
	(JavadocComment
	)
)

