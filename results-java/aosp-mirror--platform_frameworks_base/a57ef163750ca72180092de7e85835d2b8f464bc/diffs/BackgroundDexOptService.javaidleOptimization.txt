private void idleOptimization(JobParameters jobParams, PackageManagerService pm, ArraySet<String> pkgs) {
    Log.i(TAG, "Performing idle optimizations");
    // If post-boot update is still running, request that it exits early.
    mExitPostBootUpdate.set(true);
    mAbortIdleOptimization.set(false);
    final long lowThreshold = getLowStorageThreshold();
    for (String pkg : pkgs) {
        if (mAbortIdleOptimization.get()) {
            // JobScheduler requested an early abort.
            return;
        }
        synchronized (sFailedPackageNames) {
            if (sFailedPackageNames.contains(pkg)) {
                // Skip previously failing package
                continue;
            }
        }
        long usableSpace = mDataDir.getUsableSpace();
        if (usableSpace < lowThreshold) {
            // Rather bail than completely fill up the disk.
            Log.w(TAG, "Aborting background dex opt job due to low storage: " + usableSpace);
            break;
        }
        // never returns.
        synchronized (sFailedPackageNames) {
            sFailedPackageNames.add(pkg);
        }
        // concurrent jobs because PackageDexOptimizer.performDexOpt is synchronized.
        if (pm.performDexOpt(pkg, /* checkProfiles */
        true, PackageManagerService.REASON_BACKGROUND_DEXOPT, /* force */
        false)) {
            // Dexopt succeeded, remove package from the list of failing ones.
            synchronized (sFailedPackageNames) {
                sFailedPackageNames.remove(pkg);
            }
        }
    }
    // Ran to completion, so we abandon our timeslice and do not reschedule.
    jobFinished(jobParams, /* reschedule */
    false);
}||||||||// Optimize the given packages and return true if the process was not aborted.
// The abort can happen either because of job scheduler or because of lack of space.
private boolean idleOptimization(PackageManagerService pm, ArraySet<String> pkgs, Context context) {
    Log.i(TAG, "Performing idle optimizations");
    // If post-boot update is still running, request that it exits early.
    mExitPostBootUpdate.set(true);
    mAbortIdleOptimization.set(false);
    long lowStorageThreshold = getLowStorageThreshold(context);
    return optimizePackages(pm, pkgs, lowStorageThreshold);
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							LineComment
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(IfStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ContinueStmt
									LineComment
								)
							)
						)
					)
					NameExpr
						SimpleName
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									StringLiteralExpr
									NameExpr
										SimpleName
								)
								SimpleName
								NameExpr
									SimpleName
							)
							LineComment
						)
						(BreakStmt
						)
					)
				)
				(SynchronizedStmt
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					NameExpr
						SimpleName
					LineComment
				)
				(IfStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
							(BlockComment
							)
						)
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
							(BlockComment
							)
						)
						SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(SynchronizedStmt
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BooleanLiteralExpr
					(BlockComment
					)
				)
				SimpleName
			)
			LineComment
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				StringLiteralExpr
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
			LineComment
		)
		(ExpressionStmt
			(MethodCallExpr
				(BooleanLiteralExpr
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ReturnStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	LineComment
)

