@Override
public int getStreamingServices(String appName, int subId, List<String> serviceClasses) throws RemoteException {
    return 0;
}||||||||/**
 * Registers serviceClasses of interest with the appName/subId key.
 * Starts async fetching data on streaming services of matching classes to be reported
 * later via {@link IMbmsStreamingManagerCallback#streamingServicesUpdated(List)}
 *
 * Note that subsequent calls with the same uid, appName and subId will replace
 * the service class list.
 *
 * @param appName The app name as negotiated with the wireless carrier.
 * @param subscriptionId The subscription id to use.
 * @param serviceClasses The service classes that the app wishes to get info on. The strings
 * may contain arbitrary data as negotiated between the app and the
 * carrier.
 * @return One of {@link MbmsException#SUCCESS},
 * {@link MbmsException#ERROR_MIDDLEWARE_NOT_BOUND},
 * {@link MbmsException#ERROR_NOT_YET_INITIALIZED}, or
 * {@link MbmsException#ERROR_CONCURRENT_SERVICE_LIMIT_REACHED}
 */
@Override
public int getStreamingServices(String appName, int subscriptionId, List<String> serviceClasses) throws RemoteException {
    return 0;
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(IntegerLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

