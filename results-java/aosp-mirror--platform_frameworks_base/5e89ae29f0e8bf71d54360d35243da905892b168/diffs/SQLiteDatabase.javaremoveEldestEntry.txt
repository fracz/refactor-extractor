@Override
public boolean removeEldestEntry(Map.Entry<String, SQLiteCompiledSql> eldest) {
    // eldest = least-recently used entry
    // if it needs to be removed to accommodate a new entry,
    // close {@link SQLiteCompiledSql} represented by this entry, if not in use
    // and then let it be removed from the Map.
    // when this is called, the caller must be trying to add a just-compiled stmt
    // to cache; i.e., caller should already have acquired database lock AND
    // the lock on mCompiledQueries. do as assert of these two 2 facts.
    verifyLockOwner();
    if (this.size() <= mMaxSqlCacheSize) {
        // cache is not full. nothing needs to be removed
        return false;
    }
    // cache is full. eldest will be removed.
    SQLiteCompiledSql entry = eldest.getValue();
    if (!entry.isInUse()) {
        // this {@link SQLiteCompiledSql} is not in use. release it.
        entry.releaseSqlStatement();
    }
    // return true, so that this entry is removed automatically by the caller.
    return true;
}||||||||@Override
public boolean removeEldestEntry(Map.Entry<String, SQLiteCompiledSql> eldest) {
    // eldest = least-recently used entry
    // if it needs to be removed to accommodate a new entry,
    // close {@link SQLiteCompiledSql} represented by this entry, if not in use
    // and then let it be removed from the Map.
    // when this is called, the caller must be trying to add a just-compiled stmt
    // to cache; i.e., caller should already have acquired database lock AND
    // the lock on mCompiledQueries. do as assert of these two 2 facts.
    verifyLockOwner();
    if (this.size() <= mMaxSqlCacheSize) {
        // cache is not full. nothing needs to be removed
        return false;
    }
    // cache is full. eldest will be removed.
    eldest.getValue().releaseIfNotInUse();
    // return true, so that this entry is removed automatically by the caller.
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
			LineComment
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					LineComment
				)
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
			)
			LineComment
		)
		(IfStmt
			(BinaryExpr
				(MethodCallExpr
					SimpleName
					(ThisExpr
					)
				)
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			LineComment
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
			(ClassOrInterfaceType
				SimpleName
			)
		)
	)
	(MarkerAnnotationExpr
		Name
	)
)

