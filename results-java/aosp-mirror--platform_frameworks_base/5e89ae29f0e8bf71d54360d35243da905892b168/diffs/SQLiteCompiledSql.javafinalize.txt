/**
 * Make sure that the native resource is cleaned up.
 */
@Override
protected void finalize() throws Throwable {
    try {
        if (nStatement == 0)
            return;
        // finalizer should NEVER get called
        int len = mSqlStmt.length();
        Log.w(TAG, "Releasing statement in a finalizer. Please ensure " + "that you explicitly call close() on your cursor: " + mSqlStmt.substring(0, (len > 100) ? 100 : len), mStackTrace);
        releaseSqlStatement();
    } finally {
        super.finalize();
    }
}||||||||/**
 * Make sure that the native resource is cleaned up.
 */
@Override
protected void finalize() throws Throwable {
    try {
        if (nStatement == 0)
            return;
        // in that case, don't print any warning.
        if (!mInUse) {
            int len = mSqlStmt.length();
            Log.w(TAG, "Releasing statement in a finalizer. Please ensure " + "that you explicitly call close() on your cursor: " + mSqlStmt.substring(0, (len > 100) ? 100 : len), mStackTrace);
        }
        releaseSqlStatement();
    } finally {
        super.finalize();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(ReturnStmt
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(BinaryExpr
							(BinaryExpr
								StringLiteralExpr
								StringLiteralExpr
							)
							(MethodCallExpr
								(IntegerLiteralExpr
								)
								(ConditionalExpr
									(EnclosedExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
									)
									NameExpr
										SimpleName
									(IntegerLiteralExpr
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(TryStmt
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
						(SuperExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					(ReturnStmt
					)
				)
				(IfStmt
					(UnaryExpr
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BinaryExpr
									(BinaryExpr
										StringLiteralExpr
										StringLiteralExpr
									)
									(MethodCallExpr
										(IntegerLiteralExpr
										)
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(IntegerLiteralExpr
													)
												)
											)
											NameExpr
												SimpleName
											(IntegerLiteralExpr
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(ClassOrInterfaceType
		SimpleName
	)
	(MarkerAnnotationExpr
		Name
	)
	(JavadocComment
	)
)

