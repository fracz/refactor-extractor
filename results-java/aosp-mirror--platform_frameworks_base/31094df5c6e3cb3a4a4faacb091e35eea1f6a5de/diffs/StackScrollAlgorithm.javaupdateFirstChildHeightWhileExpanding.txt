private void updateFirstChildHeightWhileExpanding(ViewGroup hostView) {
    mFirstChildWhileExpanding = (ExpandableView) findFirstVisibleChild(hostView);
    if (mFirstChildWhileExpanding != null) {
        if (mExpandedOnStart) {
            // We are collapsing the shade, so the first child can get as most as high as the
            // current height.
            mFirstChildMaxHeight = mFirstChildWhileExpanding.getActualHeight();
        } else {
            // We are expanding the shade, expand it to its full height.
            if (!isMaxSizeInitialized(mFirstChildWhileExpanding)) {
                // This child was not layouted yet, wait for a layout pass
                mFirstChildWhileExpanding.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {

                    @Override
                    public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {
                        if (mFirstChildWhileExpanding != null) {
                            mFirstChildMaxHeight = getMaxAllowedChildHeight(mFirstChildWhileExpanding);
                        } else {
                            mFirstChildMaxHeight = 0;
                        }
                        v.removeOnLayoutChangeListener(this);
                    }
                });
            } else {
                mFirstChildMaxHeight = getMaxAllowedChildHeight(mFirstChildWhileExpanding);
            }
        }
    } else {
        mFirstChildMaxHeight = 0;
    }
}||||||||private void updateFirstChildHeightWhileExpanding(ViewGroup hostView) {
    mFirstChildWhileExpanding = (ExpandableView) findFirstVisibleChild(hostView);
    if (mFirstChildWhileExpanding != null) {
        if (mExpandedOnStart) {
            // We are collapsing the shade, so the first child can get as most as high as the
            // current height.
            mFirstChildMaxHeight = mFirstChildWhileExpanding.getActualHeight();
        } else {
            updateFirstChildMaxSizeToMaxHeight();
        }
    } else {
        mFirstChildMaxHeight = 0;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(IfStmt
							(UnaryExpr
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(ObjectCreationExpr
											(MethodDeclaration
												(BlockStmt
													(IfStmt
														(BinaryExpr
															NameExpr
																SimpleName
															NullLiteralExpr
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(IntegerLiteralExpr
																	)
																)
															)
														)
														(BlockStmt
															(ExpressionStmt
																(AssignExpr
																	NameExpr
																		SimpleName
																	(MethodCallExpr
																		NameExpr
																			SimpleName
																		SimpleName
																	)
																)
															)
														)
													)
													(ExpressionStmt
														(MethodCallExpr
															(ThisExpr
															)
															SimpleName
															NameExpr
																SimpleName
														)
													)
												)
												(VoidType
												)
												SimpleName
												(Parameter
													SimpleName
													(ClassOrInterfaceType
														SimpleName
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(Parameter
													SimpleName
													(PrimitiveType
													)
												)
												(MarkerAnnotationExpr
													Name
												)
											)
											(ClassOrInterfaceType
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										SimpleName
										NameExpr
											SimpleName
									)
									LineComment
								)
							)
							LineComment
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				(CastExpr
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(IfStmt
					NameExpr
						SimpleName
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							LineComment
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

