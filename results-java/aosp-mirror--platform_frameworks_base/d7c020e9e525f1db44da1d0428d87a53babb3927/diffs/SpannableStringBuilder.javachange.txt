private void change(int start, int end, CharSequence cs, int csStart, int csEnd) {
    // Can be negative
    final int replacedLength = end - start;
    final int replacementLength = csEnd - csStart;
    final int nbNewChars = replacementLength - replacedLength;
    for (int i = mSpanCount - 1; i >= 0; i--) {
        int spanStart = mSpanStarts[i];
        if (spanStart > mGapStart)
            spanStart -= mGapLength;
        int spanEnd = mSpanEnds[i];
        if (spanEnd > mGapStart)
            spanEnd -= mGapLength;
        if ((mSpanFlags[i] & SPAN_PARAGRAPH) == SPAN_PARAGRAPH) {
            int ost = spanStart;
            int oen = spanEnd;
            int clen = length();
            if (spanStart > start && spanStart <= end) {
                for (spanStart = end; spanStart < clen; spanStart++) if (spanStart > end && charAt(spanStart - 1) == '\n')
                    break;
            }
            if (spanEnd > start && spanEnd <= end) {
                for (spanEnd = end; spanEnd < clen; spanEnd++) if (spanEnd > end && charAt(spanEnd - 1) == '\n')
                    break;
            }
            if (spanStart != ost || spanEnd != oen)
                setSpan(false, mSpans[i], spanStart, spanEnd, mSpanFlags[i]);
        }
        int flags = 0;
        if (spanStart == start)
            flags |= SPAN_START_AT_START;
        else if (spanStart == end + nbNewChars)
            flags |= SPAN_START_AT_END;
        if (spanEnd == start)
            flags |= SPAN_END_AT_START;
        else if (spanEnd == end + nbNewChars)
            flags |= SPAN_END_AT_END;
        mSpanFlags[i] |= flags;
    }
    moveGapTo(end);
    if (nbNewChars >= mGapLength) {
        resizeFor(mText.length + nbNewChars - mGapLength);
    }
    final boolean textIsRemoved = replacementLength == 0;
    // correct previous positions to the correct intersecting SpanWatchers
    if (replacedLength > 0) {
        // no need for span fixup on pure insertion
        // A for loop will not work because the array is being modified
        // Do not iterate in reverse to keep the SpanWatchers notified in ordering
        // Also, a removed SpanWatcher should not get notified of removed spans located
        // further in the span array.
        int i = 0;
        while (i < mSpanCount) {
            if ((mSpanFlags[i] & Spanned.SPAN_EXCLUSIVE_EXCLUSIVE) == Spanned.SPAN_EXCLUSIVE_EXCLUSIVE && mSpanStarts[i] >= start && mSpanStarts[i] < mGapStart + mGapLength && mSpanEnds[i] >= start && mSpanEnds[i] < mGapStart + mGapLength && // This condition indicates that the span would become empty
            (textIsRemoved || mSpanStarts[i] > start || mSpanEnds[i] < mGapStart)) {
                removeSpan(i);
                // do not increment i, spans will be shifted left in the array
                continue;
            }
            i++;
        }
    }
    mGapStart += nbNewChars;
    mGapLength -= nbNewChars;
    if (mGapLength < 1)
        new Exception("mGapLength < 1").printStackTrace();
    TextUtils.getChars(cs, csStart, csEnd, mText, start);
    if (replacedLength > 0) {
        // no need for span fixup on pure insertion
        final boolean atEnd = (mGapStart + mGapLength == mText.length);
        for (int i = 0; i < mSpanCount; i++) {
            final int startFlag = (mSpanFlags[i] & START_MASK) >> START_SHIFT;
            mSpanStarts[i] = updatedIntervalBound(mSpanStarts[i], start, nbNewChars, startFlag, atEnd, textIsRemoved);
            final int endFlag = (mSpanFlags[i] & END_MASK);
            mSpanEnds[i] = updatedIntervalBound(mSpanEnds[i], start, nbNewChars, endFlag, atEnd, textIsRemoved);
        }
    }
    mSpanCountBeforeAdd = mSpanCount;
    if (cs instanceof Spanned) {
        Spanned sp = (Spanned) cs;
        Object[] spans = sp.getSpans(csStart, csEnd, Object.class);
        for (int i = 0; i < spans.length; i++) {
            int st = sp.getSpanStart(spans[i]);
            int en = sp.getSpanEnd(spans[i]);
            if (st < csStart)
                st = csStart;
            if (en > csEnd)
                en = csEnd;
            // Add span only if this object is not yet used as a span in this string
            if (getSpanStart(spans[i]) < 0) {
                setSpan(false, spans[i], st - csStart + start, en - csStart + start, sp.getSpanFlags(spans[i]));
            }
        }
    }
}||||||||private void change(int start, int end, CharSequence cs, int csStart, int csEnd) {
    // Can be negative
    final int replacedLength = end - start;
    final int replacementLength = csEnd - csStart;
    final int nbNewChars = replacementLength - replacedLength;
    boolean changed = false;
    for (int i = mSpanCount - 1; i >= 0; i--) {
        int spanStart = mSpanStarts[i];
        if (spanStart > mGapStart)
            spanStart -= mGapLength;
        int spanEnd = mSpanEnds[i];
        if (spanEnd > mGapStart)
            spanEnd -= mGapLength;
        if ((mSpanFlags[i] & SPAN_PARAGRAPH) == SPAN_PARAGRAPH) {
            int ost = spanStart;
            int oen = spanEnd;
            int clen = length();
            if (spanStart > start && spanStart <= end) {
                for (spanStart = end; spanStart < clen; spanStart++) if (spanStart > end && charAt(spanStart - 1) == '\n')
                    break;
            }
            if (spanEnd > start && spanEnd <= end) {
                for (spanEnd = end; spanEnd < clen; spanEnd++) if (spanEnd > end && charAt(spanEnd - 1) == '\n')
                    break;
            }
            if (spanStart != ost || spanEnd != oen) {
                setSpan(false, mSpans[i], spanStart, spanEnd, mSpanFlags[i]);
                changed = true;
            }
        }
        int flags = 0;
        if (spanStart == start)
            flags |= SPAN_START_AT_START;
        else if (spanStart == end + nbNewChars)
            flags |= SPAN_START_AT_END;
        if (spanEnd == start)
            flags |= SPAN_END_AT_START;
        else if (spanEnd == end + nbNewChars)
            flags |= SPAN_END_AT_END;
        mSpanFlags[i] |= flags;
    }
    if (changed) {
        restoreInvariants();
    }
    moveGapTo(end);
    if (nbNewChars >= mGapLength) {
        resizeFor(mText.length + nbNewChars - mGapLength);
    }
    final boolean textIsRemoved = replacementLength == 0;
    // correct previous positions to the correct intersecting SpanWatchers
    if (replacedLength > 0) {
        // no need for span fixup on pure insertion
        while (mSpanCount > 0 && removeSpansForChange(start, end, textIsRemoved, treeRoot())) {
        // keep deleting spans as needed, and restart from root after every deletion
        // because deletion can invalidate an index.
        }
    }
    mGapStart += nbNewChars;
    mGapLength -= nbNewChars;
    if (mGapLength < 1)
        new Exception("mGapLength < 1").printStackTrace();
    TextUtils.getChars(cs, csStart, csEnd, mText, start);
    if (replacedLength > 0) {
        // no need for span fixup on pure insertion
        // TODO potential optimization: only update bounds on intersecting spans
        final boolean atEnd = (mGapStart + mGapLength == mText.length);
        for (int i = 0; i < mSpanCount; i++) {
            final int startFlag = (mSpanFlags[i] & START_MASK) >> START_SHIFT;
            mSpanStarts[i] = updatedIntervalBound(mSpanStarts[i], start, nbNewChars, startFlag, atEnd, textIsRemoved);
            final int endFlag = (mSpanFlags[i] & END_MASK);
            mSpanEnds[i] = updatedIntervalBound(mSpanEnds[i], start, nbNewChars, endFlag, atEnd, textIsRemoved);
        }
        // TODO potential optimization: only fix up invariants when bounds actually changed
        restoreInvariants();
    }
    if (cs instanceof Spanned) {
        Spanned sp = (Spanned) cs;
        Object[] spans = sp.getSpans(csStart, csEnd, Object.class);
        for (int i = 0; i < spans.length; i++) {
            int st = sp.getSpanStart(spans[i]);
            int en = sp.getSpanEnd(spans[i]);
            if (st < csStart)
                st = csStart;
            if (en > csEnd)
                en = csEnd;
            // Add span only if this object is not yet used as a span in this string
            if (getSpanStart(spans[i]) < 0) {
                setSpan(false, spans[i], st - csStart + start, en - csStart + start, sp.getSpanFlags(spans[i]) | SPAN_ADDED);
            }
        }
        restoreInvariants();
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ForStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BreakStmt
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ForStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BreakStmt
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(ExpressionStmt
								(MethodCallExpr
									(BooleanLiteralExpr
									)
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(WhileStmt
					(BlockStmt
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													(EnclosedExpr
														(BinaryExpr
															(ArrayAccessExpr
																NameExpr
																	SimpleName
																NameExpr
																	SimpleName
															)
															(FieldAccessExpr
																SimpleName
																NameExpr
																	SimpleName
															)
														)
													)
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
												(BinaryExpr
													(ArrayAccessExpr
														NameExpr
															SimpleName
														NameExpr
															SimpleName
													)
													NameExpr
														SimpleName
												)
											)
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												(BinaryExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
											)
										)
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									(BinaryExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
								)
								(EnclosedExpr
									(BinaryExpr
										(BinaryExpr
											NameExpr
												SimpleName
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									LineComment
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
								)
								(ContinueStmt
									LineComment
								)
							)
						)
						(ExpressionStmt
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(EnclosedExpr
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(MethodCallExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			LineComment
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ForStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(ArrayAccessExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(EnclosedExpr
							(BinaryExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									NameExpr
										SimpleName
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ForStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BreakStmt
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ForStmt
									(IfStmt
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											(BinaryExpr
												(MethodCallExpr
													(BinaryExpr
														NameExpr
															SimpleName
														(IntegerLiteralExpr
														)
													)
													SimpleName
												)
												(CharLiteralExpr
												)
											)
										)
										(BreakStmt
										)
									)
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(AssignExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(UnaryExpr
										NameExpr
											SimpleName
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
								(ExpressionStmt
									(AssignExpr
										NameExpr
											SimpleName
										(BooleanLiteralExpr
										)
									)
								)
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(IfStmt
						(BinaryExpr
							NameExpr
								SimpleName
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						(ArrayAccessExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(BinaryExpr
							(BinaryExpr
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BinaryExpr
						NameExpr
							SimpleName
						(IntegerLiteralExpr
						)
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(WhileStmt
					(BlockStmt
					)
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							(IntegerLiteralExpr
							)
						)
						(MethodCallExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							NameExpr
								SimpleName
							(MethodCallExpr
								SimpleName
							)
							SimpleName
						)
					)
					LineComment
				)
			)
			LineComment
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(AssignExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(ExpressionStmt
				(MethodCallExpr
					SimpleName
					(ObjectCreationExpr
						StringLiteralExpr
						(ClassOrInterfaceType
							SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				(IntegerLiteralExpr
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(EnclosedExpr
								(BinaryExpr
									(BinaryExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									(FieldAccessExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					LineComment
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(BinaryExpr
										(EnclosedExpr
											(BinaryExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												NameExpr
													SimpleName
											)
										)
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(EnclosedExpr
										(BinaryExpr
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(AssignExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
							)
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
					LineComment
				)
			)
		)
		(IfStmt
			(InstanceOfExpr
				NameExpr
					SimpleName
				(ClassOrInterfaceType
					SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(CastExpr
								NameExpr
									SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
								(ClassExpr
									(ClassOrInterfaceType
										SimpleName
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ArrayType
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ForStmt
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(ExpressionStmt
								(AssignExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									(ArrayAccessExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
									)
									SimpleName
								)
								(IntegerLiteralExpr
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										(BooleanLiteralExpr
										)
										(ArrayAccessExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(BinaryExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										(BinaryExpr
											(MethodCallExpr
												(ArrayAccessExpr
													NameExpr
														SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												NameExpr
													SimpleName
											)
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
							LineComment
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(VariableDeclarationExpr
						(VariableDeclarator
							(IntegerLiteralExpr
							)
							SimpleName
							(PrimitiveType
							)
						)
					)
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

