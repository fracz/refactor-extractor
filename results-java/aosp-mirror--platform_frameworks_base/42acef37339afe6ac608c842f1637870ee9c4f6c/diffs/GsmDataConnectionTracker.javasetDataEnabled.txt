/**
 * Prevent mobile data connections from being established,
 * or once again allow mobile data connections. If the state
 * toggles, then either tear down or set up data, as
 * appropriate to match the new state.
 * <p>This operation only affects the default APN, and if the same APN is
 * currently being used for MMS traffic, the teardown will not happen
 * even when {@code enable} is {@code false}.</p>
 * @param enable indicates whether to enable ({@code true}) or disable ({@code false}) data
 * @return {@code true} if the operation succeeded
 */
public boolean setDataEnabled(boolean enable) {
    boolean isEnabled = isEnabled(Phone.APN_TYPE_DEFAULT);
    Log.d(LOG_TAG, "setDataEnabled(" + enable + ") isEnabled=" + isEnabled);
    if (!isEnabled && enable) {
        setEnabled(Phone.APN_TYPE_DEFAULT, true);
        // trySetupData() will be a no-op if we are currently
        // connected to the MMS APN
        sendMessage(obtainMessage(EVENT_TRY_SETUP_DATA));
        return true;
    } else if (!enable) {
        setEnabled(Phone.APN_TYPE_DEFAULT, false);
        // TODO: This isn't very general.
        if ((isApnTypeActive(Phone.APN_TYPE_MMS) && isEnabled(Phone.APN_TYPE_MMS)) || (isApnTypeActive(Phone.APN_TYPE_SUPL) && isEnabled(Phone.APN_TYPE_SUPL))) {
            return false;
        }
        Message msg = obtainMessage(EVENT_CLEAN_UP_CONNECTION);
        // tearDown is true
        msg.arg1 = 1;
        msg.obj = Phone.REASON_DATA_DISABLED;
        sendMessage(msg);
        return true;
    } else {
        // isEnabled && enable
        return true;
    }
}||||||||/**
 * Prevent mobile data connections from being established,
 * or once again allow mobile data connections. If the state
 * toggles, then either tear down or set up data, as
 * appropriate to match the new state.
 * <p>This operation only affects the default APN, and if the same APN is
 * currently being used for MMS traffic, the teardown will not happen
 * even when {@code enable} is {@code false}.</p>
 * @param enable indicates whether to enable ({@code true}) or disable ({@code false}) data
 * @return {@code true} if the operation succeeded
 */
public boolean setDataEnabled(boolean enable) {
    if (DBG)
        Log.d(LOG_TAG, "setDataEnabled(" + enable + ")");
    setEnabled(APN_DEFAULT_ID, enable);
    return true;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				(BinaryExpr
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					NameExpr
						SimpleName
				)
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					NameExpr
						SimpleName
				)
				NameExpr
					SimpleName
			)
			(IfStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(BlockStmt
					(ReturnStmt
						(BooleanLiteralExpr
						)
						LineComment
					)
				)
				(BlockStmt
					(ExpressionStmt
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(BooleanLiteralExpr
							)
							SimpleName
						)
					)
					(IfStmt
						(BinaryExpr
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
							(EnclosedExpr
								(BinaryExpr
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
									(MethodCallExpr
										(FieldAccessExpr
											SimpleName
											NameExpr
												SimpleName
										)
										SimpleName
									)
								)
							)
						)
						(BlockStmt
							(ReturnStmt
								(BooleanLiteralExpr
								)
							)
						)
						LineComment
					)
					(ExpressionStmt
						(VariableDeclarationExpr
							(VariableDeclarator
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								SimpleName
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(IntegerLiteralExpr
							)
						)
						LineComment
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(BooleanLiteralExpr
						)
						SimpleName
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
						SimpleName
					)
					LineComment
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							StringLiteralExpr
							NameExpr
								SimpleName
						)
						StringLiteralExpr
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
			)
		)
		(ReturnStmt
			(BooleanLiteralExpr
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

