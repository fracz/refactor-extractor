/**
 * Make the state of network connectivity conform to the preference settings
 * In this method, we only tear down a non-preferred network. Establishing
 * a connection to the preferred network is taken care of when we handle
 * the disconnect event from the non-preferred network
 * (see {@link #handleDisconnect(NetworkInfo)}).
 */
private void enforcePreference() {
    if (mActiveNetwork == null)
        return;
    for (NetworkStateTracker t : mNetTrackers) {
        if (t == mActiveNetwork) {
            int netType = t.getNetworkInfo().getType();
            int otherNetType = ((netType == ConnectivityManager.TYPE_WIFI) ? ConnectivityManager.TYPE_MOBILE : ConnectivityManager.TYPE_WIFI);
            if (t.getNetworkInfo().getType() != mNetworkPreference) {
                NetworkStateTracker otherTracker = mNetTrackers[otherNetType];
                if (otherTracker.isAvailable()) {
                    teardown(t);
                }
            }
        }
    }
}||||||||/**
 * Make the state of network connectivity conform to the preference settings
 * In this method, we only tear down a non-preferred network. Establishing
 * a connection to the preferred network is taken care of when we handle
 * the disconnect event from the non-preferred network
 * (see {@link #handleDisconnect(NetworkInfo)}).
 */
private void enforcePreference() {
    if (mNetTrackers[mNetworkPreference].getNetworkInfo().isConnected())
        return;
    if (!mNetTrackers[mNetworkPreference].isAvailable())
        return;
    for (int t = 0; t <= ConnectivityManager.MAX_RADIO_TYPE; t++) {
        if (t != mNetworkPreference && mNetTrackers[t].getNetworkInfo().isConnected()) {
            teardown(mNetTrackers[t]);
        }
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(ReturnStmt
			)
		)
		(ForeachStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(MethodCallExpr
										SimpleName
										(MethodCallExpr
											SimpleName
											NameExpr
												SimpleName
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(ExpressionStmt
							(VariableDeclarationExpr
								(VariableDeclarator
									(EnclosedExpr
										(ConditionalExpr
											(EnclosedExpr
												(BinaryExpr
													NameExpr
														SimpleName
													(FieldAccessExpr
														SimpleName
														NameExpr
															SimpleName
													)
												)
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
											(FieldAccessExpr
												SimpleName
												NameExpr
													SimpleName
											)
										)
									)
									SimpleName
									(PrimitiveType
									)
								)
							)
						)
						(IfStmt
							(BinaryExpr
								(MethodCallExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NameExpr
									SimpleName
							)
							(BlockStmt
								(ExpressionStmt
									(VariableDeclarationExpr
										(VariableDeclarator
											(ArrayAccessExpr
												NameExpr
													SimpleName
												NameExpr
													SimpleName
											)
											SimpleName
											(ClassOrInterfaceType
												SimpleName
											)
										)
									)
								)
								(IfStmt
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
									(BlockStmt
										(ExpressionStmt
											(MethodCallExpr
												NameExpr
													SimpleName
												SimpleName
											)
										)
									)
								)
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
			(VariableDeclarationExpr
				(VariableDeclarator
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(MethodCallExpr
				SimpleName
				(MethodCallExpr
					SimpleName
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					SimpleName
					(ArrayAccessExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
			)
			(ReturnStmt
			)
		)
		(ForStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NameExpr
								SimpleName
						)
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(ArrayAccessExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
						)
					)
				)
			)
			(BinaryExpr
				NameExpr
					SimpleName
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(VariableDeclarationExpr
				(VariableDeclarator
					(IntegerLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
			(UnaryExpr
				NameExpr
					SimpleName
			)
		)
	)
	(VoidType
	)
	SimpleName
	(JavadocComment
	)
)

