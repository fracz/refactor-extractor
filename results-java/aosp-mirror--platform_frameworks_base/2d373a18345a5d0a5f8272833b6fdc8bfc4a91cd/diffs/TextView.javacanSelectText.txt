/**
 * Unlike {@link #textCanBeSelected()}, this method is based on the <i>current</i> state of the
 * TextView. {@link #textCanBeSelected()} has to be true (this is one of the conditions to have
 * a selection controller (see {@link Editor#prepareCursorControllers()}), but this is not sufficient.
 */
private boolean canSelectText() {
    return mText.length() != 0 && mEditor != null && getEditor().hasSelectionController();
}||||||||/**
 * Unlike {@link #textCanBeSelected()}, this method is based on the <i>current</i> state of the
 * TextView. {@link #textCanBeSelected()} has to be true (this is one of the conditions to have
 * a selection controller (see {@link Editor#prepareCursorControllers()}), but this is not
 * sufficient.
 */
private boolean canSelectText() {
    return mText.length() != 0 && mEditor != null && mEditor.hasSelectionController();
}||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
					(MethodCallExpr
						SimpleName
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ReturnStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(IntegerLiteralExpr
						)
					)
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
				)
				(MethodCallExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(JavadocComment
	)
)

