public boolean setPrintJobState(int printJobId, int state) {
    boolean success = false;
    PrintJobInfo queuedPrintJob = null;
    synchronized (mLock) {
        PrintJobInfo printJob = getPrintJob(printJobId, PrintManager.APP_ID_ANY);
        if (printJob != null && printJob.getState() < state) {
            success = true;
            printJob.setState(state);
            // TODO: Update notifications.
            switch(state) {
                case PrintJobInfo.STATE_COMPLETED:
                case PrintJobInfo.STATE_CANCELED:
                    {
                        removePrintJobLocked(printJob);
                    }
                    break;
                case PrintJobInfo.STATE_QUEUED:
                    {
                        queuedPrintJob = new PrintJobInfo(printJob);
                    }
                    break;
            }
            if (DEBUG_PRINT_JOB_LIFECYCLE) {
                Slog.i(LOG_TAG, "[STATUS CHANGED] " + printJob);
            }
            mPersistanceManager.writeStateLocked();
        }
    }
    if (queuedPrintJob != null) {
        try {
            mPrintManager.onPrintJobQueued(queuedPrintJob.getPrinterId(), queuedPrintJob);
        } catch (RemoteException re) {
        /* ignore */
        }
    }
    return success;
}||||||||public boolean setPrintJobState(int printJobId, int state) {
    boolean success = false;
    boolean allPrintJobsHandled = false;
    boolean allPrintJobsForServiceHandled = false;
    IPrintSpoolerClient client = null;
    PrintJobInfo queuedPrintJob = null;
    PrintJobInfo removedPrintJob = null;
    synchronized (mLock) {
        if (mClient == null) {
            throw new IllegalStateException("Client cannot be null.");
        }
        client = mClient;
        PrintJobInfo printJob = getPrintJob(printJobId, PrintManager.APP_ID_ANY);
        if (printJob != null && printJob.getState() < state) {
            success = true;
            printJob.setState(state);
            // TODO: Update notifications.
            switch(state) {
                case PrintJobInfo.STATE_COMPLETED:
                case PrintJobInfo.STATE_CANCELED:
                    {
                        removedPrintJob = printJob;
                        removePrintJobLocked(printJob);
                        // No printer means creation of a print job was cancelled,
                        // therefore the state of the spooler did not change and no
                        // notifications are needed. We also do not need to persist
                        // the state.
                        PrinterId printerId = printJob.getPrinterId();
                        if (printerId == null) {
                            return true;
                        }
                        allPrintJobsHandled = !hasActivePrintJobsLocked();
                        allPrintJobsForServiceHandled = !hasActivePrintJobsForServiceLocked(printerId.getService());
                    }
                    break;
                case PrintJobInfo.STATE_QUEUED:
                    {
                        queuedPrintJob = new PrintJobInfo(printJob);
                    }
                    break;
            }
            if (DEBUG_PRINT_JOB_LIFECYCLE) {
                Slog.i(LOG_TAG, "[STATUS CHANGED] " + printJob);
            }
            mPersistanceManager.writeStateLocked();
        }
    }
    if (queuedPrintJob != null) {
        callOnPrintJobQueuedQuietly(client, queuedPrintJob);
    }
    if (allPrintJobsForServiceHandled) {
        callOnAllPrintJobsForServiceHandledQuietly(client, removedPrintJob.getPrinterId().getService());
    }
    if (allPrintJobsHandled) {
        callOnAllPrintJobsHandledQuietly(client);
    }
    return success;
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(BreakStmt
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(TryStmt
					(CatchClause
						(BlockStmt
						)
						(Parameter
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(MethodCallExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(BooleanLiteralExpr
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NullLiteralExpr
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(SynchronizedStmt
			(BlockStmt
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NullLiteralExpr
					)
					(BlockStmt
						(ThrowStmt
							(ObjectCreationExpr
								StringLiteralExpr
								(ClassOrInterfaceType
									SimpleName
								)
							)
						)
					)
				)
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(IfStmt
					(BinaryExpr
						(BinaryExpr
							NameExpr
								SimpleName
							NullLiteralExpr
						)
						(BinaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(SwitchStmt
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											NameExpr
												SimpleName
										)
									)
									(ExpressionStmt
										(MethodCallExpr
											NameExpr
												SimpleName
											SimpleName
										)
									)
									(ExpressionStmt
										(VariableDeclarationExpr
											(VariableDeclarator
												(MethodCallExpr
													SimpleName
													NameExpr
														SimpleName
												)
												SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
										LineComment
									)
									(IfStmt
										(BinaryExpr
											NameExpr
												SimpleName
											NullLiteralExpr
										)
										(BlockStmt
											(ReturnStmt
												(BooleanLiteralExpr
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(UnaryExpr
												(MethodCallExpr
													SimpleName
												)
											)
										)
									)
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(UnaryExpr
												(MethodCallExpr
													(MethodCallExpr
														SimpleName
														NameExpr
															SimpleName
													)
													SimpleName
												)
											)
										)
									)
								)
								(BreakStmt
								)
							)
							(SwitchEntryStmt
								(FieldAccessExpr
									SimpleName
									NameExpr
										SimpleName
								)
								(BlockStmt
									(ExpressionStmt
										(AssignExpr
											NameExpr
												SimpleName
											(ObjectCreationExpr
												NameExpr
													SimpleName
												(ClassOrInterfaceType
													SimpleName
												)
											)
										)
									)
								)
								(BreakStmt
								)
							)
							NameExpr
								SimpleName
							LineComment
						)
						(IfStmt
							NameExpr
								SimpleName
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										(BinaryExpr
											StringLiteralExpr
											NameExpr
												SimpleName
										)
										SimpleName
										NameExpr
											SimpleName
									)
								)
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
				)
			)
			NameExpr
				SimpleName
		)
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						SimpleName
					)
				)
			)
		)
		(IfStmt
			NameExpr
				SimpleName
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)

