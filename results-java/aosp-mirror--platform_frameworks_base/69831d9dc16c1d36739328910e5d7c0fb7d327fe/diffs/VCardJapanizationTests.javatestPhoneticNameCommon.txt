private void testPhoneticNameCommon(int vcardType) {
    mVerifier.initForExportTest(vcardType);
    ContactEntry entry = mVerifier.addInputEntry();
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.PHONETIC_FAMILY_NAME, "\u3084\u307E\u3060").put(StructuredName.PHONETIC_MIDDLE_NAME, "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0").put(StructuredName.PHONETIC_GIVEN_NAME, "\u305F\u308D\u3046");
    final ContentValues contentValues = (VCardConfig.usesShiftJis(vcardType) ? (VCardConfig.isV30(vcardType) ? mContentValuesForSJis : mContentValuesForQPAndSJis) : (VCardConfig.isV30(vcardType) ? null : mContentValuesForQPAndUtf8));
    PropertyNodesVerifierElem elem = mVerifier.addPropertyNodesVerifierElemWithEmptyName();
    elem.addExpectedNode("X-PHONETIC-LAST-NAME", "\u3084\u307E\u3060", contentValues).addExpectedNode("X-PHONETIC-MIDDLE-NAME", "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0", contentValues).addExpectedNode("X-PHONETIC-FIRST-NAME", "\u305F\u308D\u3046", contentValues);
    if (VCardConfig.isV30(vcardType)) {
        elem.addExpectedNode("SORT-STRING", "\u3084\u307E\u3060 \u30DF\u30C9\u30EB\u30CD\u30FC\u30E0 \u305F\u308D\u3046", contentValues);
    }
    ContentValuesBuilder builder = mVerifier.addContentValuesVerifierElem().addExpected(StructuredName.CONTENT_ITEM_TYPE);
    builder.put(StructuredName.PHONETIC_FAMILY_NAME, "\u3084\u307E\u3060").put(StructuredName.PHONETIC_MIDDLE_NAME, "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0").put(StructuredName.PHONETIC_GIVEN_NAME, "\u305F\u308D\u3046").put(StructuredName.DISPLAY_NAME, "\u3084\u307E\u3060 \u30DF\u30C9\u30EB\u30CD\u30FC\u30E0 " + "\u305F\u308D\u3046");
}||||||||private void testPhoneticNameCommon(int vcardType, String charset) {
    mVerifier.initForExportTest(vcardType, charset);
    ContactEntry entry = mVerifier.addInputEntry();
    entry.addContentValues(StructuredName.CONTENT_ITEM_TYPE).put(StructuredName.PHONETIC_FAMILY_NAME, "\u3084\u307E\u3060").put(StructuredName.PHONETIC_MIDDLE_NAME, "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0").put(StructuredName.PHONETIC_GIVEN_NAME, "\u305F\u308D\u3046");
    final ContentValues contentValues = ("SHIFT_JIS".equalsIgnoreCase(charset) ? (VCardConfig.isVersion21(vcardType) ? mContentValuesForQPAndSJis : mContentValuesForSJis) : (VCardConfig.isVersion21(vcardType) ? mContentValuesForQPAndUtf8 : null));
    PropertyNodesVerifierElem elem = mVerifier.addPropertyNodesVerifierElemWithEmptyName();
    elem.addExpectedNode("X-PHONETIC-LAST-NAME", "\u3084\u307E\u3060", contentValues).addExpectedNode("X-PHONETIC-MIDDLE-NAME", "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0", contentValues).addExpectedNode("X-PHONETIC-FIRST-NAME", "\u305F\u308D\u3046", contentValues);
    if (!VCardConfig.isVersion21(vcardType)) {
        elem.addExpectedNode("SORT-STRING", "\u3084\u307E\u3060 \u30DF\u30C9\u30EB\u30CD\u30FC\u30E0 \u305F\u308D\u3046", contentValues);
    }
    ContentValuesBuilder builder = mVerifier.addContentValuesVerifierElem().addExpected(StructuredName.CONTENT_ITEM_TYPE);
    builder.put(StructuredName.PHONETIC_FAMILY_NAME, "\u3084\u307E\u3060").put(StructuredName.PHONETIC_MIDDLE_NAME, "\u30DF\u30C9\u30EB\u30CD\u30FC\u30E0").put(StructuredName.PHONETIC_GIVEN_NAME, "\u305F\u308D\u3046").put(StructuredName.DISPLAY_NAME, "\u3084\u307E\u3060 \u30DF\u30C9\u30EB\u30CD\u30FC\u30E0 " + "\u305F\u308D\u3046");
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								NameExpr
									SimpleName
							)
							(EnclosedExpr
								(ConditionalExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NullLiteralExpr
								)
							)
							(EnclosedExpr
								(ConditionalExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(MethodCallExpr
				NameExpr
					SimpleName
				NameExpr
					SimpleName
				SimpleName
				NameExpr
					SimpleName
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				StringLiteralExpr
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(EnclosedExpr
						(ConditionalExpr
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
								StringLiteralExpr
							)
							(EnclosedExpr
								(ConditionalExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NullLiteralExpr
									NameExpr
										SimpleName
								)
							)
							(EnclosedExpr
								(ConditionalExpr
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
										NameExpr
											SimpleName
									)
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				StringLiteralExpr
				StringLiteralExpr
				NameExpr
					SimpleName
				SimpleName
				(MethodCallExpr
					StringLiteralExpr
					StringLiteralExpr
					NameExpr
						SimpleName
					SimpleName
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(IfStmt
			(UnaryExpr
				(MethodCallExpr
					NameExpr
						SimpleName
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						StringLiteralExpr
						StringLiteralExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					(ClassOrInterfaceType
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(MethodCallExpr
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(BinaryExpr
					StringLiteralExpr
					StringLiteralExpr
				)
				SimpleName
				(MethodCallExpr
					(FieldAccessExpr
						SimpleName
						NameExpr
							SimpleName
					)
					StringLiteralExpr
					SimpleName
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						StringLiteralExpr
						SimpleName
						(MethodCallExpr
							(FieldAccessExpr
								SimpleName
								NameExpr
									SimpleName
							)
							StringLiteralExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
	)
	(VoidType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(ClassOrInterfaceType
			SimpleName
		)
	)
)

