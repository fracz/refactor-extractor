/**
 * Updates the occluded state of the Keyguard.
 *
 * @return Whether the flags have changed and we have to redo the layout.
 */
private boolean setKeyguardOccludedLw(boolean isOccluded) {
    boolean wasOccluded = mKeyguardOccluded;
    boolean showing = mKeyguardDelegate.isShowing();
    if (wasOccluded && !isOccluded && showing) {
        mKeyguardOccluded = false;
        mKeyguardDelegate.setOccluded(false, true);
        mStatusBar.getAttrs().privateFlags |= PRIVATE_FLAG_KEYGUARD;
        if (!mKeyguardDelegate.hasLockscreenWallpaper()) {
            mStatusBar.getAttrs().flags |= FLAG_SHOW_WALLPAPER;
        }
        Animation anim = AnimationUtils.loadAnimation(mContext, com.android.internal.R.anim.wallpaper_open_exit);
        mWindowManagerFuncs.overridePlayingAppAnimationsLw(anim);
        return true;
    } else if (!wasOccluded && isOccluded && showing) {
        mKeyguardOccluded = true;
        mKeyguardDelegate.setOccluded(true, false);
        mStatusBar.getAttrs().privateFlags &= ~PRIVATE_FLAG_KEYGUARD;
        mStatusBar.getAttrs().flags &= ~FLAG_SHOW_WALLPAPER;
        return true;
    } else if (wasOccluded != isOccluded) {
        mKeyguardOccluded = isOccluded;
        mKeyguardDelegate.setOccluded(isOccluded, false);
        return false;
    } else {
        return false;
    }
}||||||||/**
 * Updates the occluded state of the Keyguard.
 *
 * @return Whether the flags have changed and we have to redo the layout.
 */
private boolean setKeyguardOccludedLw(boolean isOccluded) {
    if (DEBUG_KEYGUARD)
        Slog.d(TAG, "setKeyguardOccluded occluded=" + isOccluded);
    boolean wasOccluded = mKeyguardOccluded;
    boolean showing = mKeyguardDelegate.isShowing();
    if (wasOccluded && !isOccluded && showing) {
        mKeyguardOccluded = false;
        mKeyguardDelegate.setOccluded(false, true);
        mStatusBar.getAttrs().privateFlags |= PRIVATE_FLAG_KEYGUARD;
        if (!mKeyguardDelegate.hasLockscreenWallpaper()) {
            mStatusBar.getAttrs().flags |= FLAG_SHOW_WALLPAPER;
        }
        return true;
    } else if (!wasOccluded && isOccluded && showing) {
        mKeyguardOccluded = true;
        mKeyguardDelegate.setOccluded(true, false);
        mStatusBar.getAttrs().privateFlags &= ~PRIVATE_FLAG_KEYGUARD;
        mStatusBar.getAttrs().flags &= ~FLAG_SHOW_WALLPAPER;
        return true;
    } else if (wasOccluded != isOccluded) {
        mKeyguardOccluded = isOccluded;
        mKeyguardDelegate.setOccluded(isOccluded, false);
        return false;
    } else {
        return false;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(VariableDeclarationExpr
						(VariableDeclarator
							(MethodCallExpr
								NameExpr
									SimpleName
								(FieldAccessExpr
									SimpleName
									(FieldAccessExpr
										SimpleName
										(FieldAccessExpr
											SimpleName
											(FieldAccessExpr
												SimpleName
												(FieldAccessExpr
													SimpleName
													NameExpr
														SimpleName
												)
											)
										)
									)
								)
								SimpleName
								NameExpr
									SimpleName
							)
							SimpleName
							(ClassOrInterfaceType
								SimpleName
							)
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						StringLiteralExpr
						NameExpr
							SimpleName
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					NameExpr
						SimpleName
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
						NameExpr
							SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					NameExpr
						SimpleName
					(UnaryExpr
						NameExpr
							SimpleName
					)
				)
				NameExpr
					SimpleName
			)
			(IfStmt
				(BinaryExpr
					(BinaryExpr
						(UnaryExpr
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
					)
					NameExpr
						SimpleName
				)
				(IfStmt
					(BinaryExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
					)
					(BlockStmt
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
						)
						(ExpressionStmt
							(MethodCallExpr
								NameExpr
									SimpleName
								(BooleanLiteralExpr
								)
								SimpleName
								NameExpr
									SimpleName
							)
						)
						(ReturnStmt
							(BooleanLiteralExpr
							)
						)
					)
				)
				(BlockStmt
					(ExpressionStmt
						(AssignExpr
							NameExpr
								SimpleName
							(BooleanLiteralExpr
							)
						)
					)
					(ExpressionStmt
						(MethodCallExpr
							(BooleanLiteralExpr
							)
							(BooleanLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(ExpressionStmt
						(AssignExpr
							(FieldAccessExpr
								SimpleName
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
							(UnaryExpr
								NameExpr
									SimpleName
							)
						)
					)
					(ReturnStmt
						(BooleanLiteralExpr
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(AssignExpr
						NameExpr
							SimpleName
						(BooleanLiteralExpr
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(BooleanLiteralExpr
						)
						(BooleanLiteralExpr
						)
						SimpleName
						NameExpr
							SimpleName
					)
				)
				(ExpressionStmt
					(AssignExpr
						(FieldAccessExpr
							SimpleName
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
						NameExpr
							SimpleName
					)
				)
				(IfStmt
					(UnaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
					(BlockStmt
						(ExpressionStmt
							(AssignExpr
								(FieldAccessExpr
									SimpleName
									(MethodCallExpr
										SimpleName
										NameExpr
											SimpleName
									)
								)
								NameExpr
									SimpleName
							)
						)
					)
				)
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

