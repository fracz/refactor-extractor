/**
 * @return true if transition is not running and should not be skipped, false if transition is
 * already running
 */
boolean prepareAppTransitionLocked(int transit, boolean alwaysKeepCurrent) {
    if (DEBUG_APP_TRANSITIONS)
        Slog.v(TAG, "Prepare app transition:" + " transit=" + appTransitionToString(transit) + " " + this + " alwaysKeepCurrent=" + alwaysKeepCurrent + " Callers=" + Debug.getCallers(3));
    if (!isTransitionSet() || mNextAppTransition == TRANSIT_NONE) {
        setAppTransition(transit);
    } else if (!alwaysKeepCurrent) {
        if (transit == TRANSIT_TASK_OPEN && isTransitionEqual(TRANSIT_TASK_CLOSE)) {
            // Opening a new task always supersedes a close for the anim.
            setAppTransition(transit);
        } else if (transit == TRANSIT_ACTIVITY_OPEN && isTransitionEqual(TRANSIT_ACTIVITY_CLOSE)) {
            // Opening a new activity always supersedes a close for the anim.
            setAppTransition(transit);
        }
    }
    boolean prepared = prepare();
    if (isTransitionSet()) {
        mService.mH.removeMessages(H.APP_TRANSITION_TIMEOUT);
        mService.mH.sendEmptyMessageDelayed(H.APP_TRANSITION_TIMEOUT, APP_TRANSITION_TIMEOUT_MS);
    }
    return prepared;
}||||||||/**
 * @return true if transition is not running and should not be skipped, false if transition is
 * already running
 */
boolean prepareAppTransitionLocked(int transit, boolean alwaysKeepCurrent, int flags, boolean forceOverride) {
    if (DEBUG_APP_TRANSITIONS)
        Slog.v(TAG, "Prepare app transition:" + " transit=" + appTransitionToString(transit) + " " + this + " alwaysKeepCurrent=" + alwaysKeepCurrent + " Callers=" + Debug.getCallers(3));
    if (forceOverride || isKeyguardTransit(transit) || !isTransitionSet() || mNextAppTransition == TRANSIT_NONE) {
        setAppTransition(transit, flags);
    } else if (!alwaysKeepCurrent) {
        if (transit == TRANSIT_TASK_OPEN && isTransitionEqual(TRANSIT_TASK_CLOSE)) {
            // Opening a new task always supersedes a close for the anim.
            setAppTransition(transit, flags);
        } else if (transit == TRANSIT_ACTIVITY_OPEN && isTransitionEqual(TRANSIT_ACTIVITY_CLOSE)) {
            // Opening a new activity always supersedes a close for the anim.
            setAppTransition(transit, flags);
        }
    }
    boolean prepared = prepare();
    if (isTransitionSet()) {
        mService.mH.removeMessages(H.APP_TRANSITION_TIMEOUT);
        mService.mH.sendEmptyMessageDelayed(H.APP_TRANSITION_TIMEOUT, APP_TRANSITION_TIMEOUT_MS);
    }
    return prepared;
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											StringLiteralExpr
										)
										(ThisExpr
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(UnaryExpr
					(MethodCallExpr
						SimpleName
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			NameExpr
				SimpleName
			(ExpressionStmt
				(MethodCallExpr
					NameExpr
						SimpleName
					(BinaryExpr
						(BinaryExpr
							(BinaryExpr
								(BinaryExpr
									(BinaryExpr
										(BinaryExpr
											(BinaryExpr
												(BinaryExpr
													StringLiteralExpr
													StringLiteralExpr
												)
												(MethodCallExpr
													NameExpr
														SimpleName
													SimpleName
												)
											)
											StringLiteralExpr
										)
										(ThisExpr
										)
									)
									StringLiteralExpr
								)
								NameExpr
									SimpleName
							)
							StringLiteralExpr
						)
						(MethodCallExpr
							(IntegerLiteralExpr
							)
							SimpleName
							NameExpr
								SimpleName
						)
					)
					SimpleName
					NameExpr
						SimpleName
				)
			)
		)
		(IfStmt
			(BinaryExpr
				(BinaryExpr
					(BinaryExpr
						NameExpr
							SimpleName
						(MethodCallExpr
							NameExpr
								SimpleName
							SimpleName
						)
					)
					(UnaryExpr
						(MethodCallExpr
							SimpleName
						)
					)
				)
				(BinaryExpr
					NameExpr
						SimpleName
					NameExpr
						SimpleName
				)
			)
			(IfStmt
				(UnaryExpr
					NameExpr
						SimpleName
				)
				(BlockStmt
					(IfStmt
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(MethodCallExpr
								NameExpr
									SimpleName
								SimpleName
							)
						)
						(IfStmt
							(BinaryExpr
								(BinaryExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
								)
								(MethodCallExpr
									NameExpr
										SimpleName
									SimpleName
								)
							)
							(BlockStmt
								(ExpressionStmt
									(MethodCallExpr
										NameExpr
											SimpleName
										NameExpr
											SimpleName
										SimpleName
									)
									LineComment
								)
							)
						)
						(BlockStmt
							(ExpressionStmt
								(MethodCallExpr
									NameExpr
										SimpleName
									NameExpr
										SimpleName
									SimpleName
								)
								LineComment
							)
						)
					)
				)
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						NameExpr
							SimpleName
						NameExpr
							SimpleName
						SimpleName
					)
				)
			)
		)
		(ExpressionStmt
			(VariableDeclarationExpr
				(VariableDeclarator
					(MethodCallExpr
						SimpleName
					)
					SimpleName
					(PrimitiveType
					)
				)
			)
		)
		(IfStmt
			(MethodCallExpr
				SimpleName
			)
			(BlockStmt
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
				(ExpressionStmt
					(MethodCallExpr
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
						NameExpr
							SimpleName
						SimpleName
						(FieldAccessExpr
							SimpleName
							NameExpr
								SimpleName
						)
					)
				)
			)
		)
		(ReturnStmt
			NameExpr
				SimpleName
		)
	)
	(PrimitiveType
	)
	SimpleName
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(Parameter
		SimpleName
		(PrimitiveType
		)
	)
	(JavadocComment
	)
)

