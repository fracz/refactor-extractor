private boolean shouldSleepLocked() {
    // Resume applications while running a voice interactor.
    if (mRunningVoice != null) {
        return false;
    }
    // TODO: Transform the lock screen state into a sleep token instead.
    switch(mWakefulness) {
        case PowerManagerInternal.WAKEFULNESS_AWAKE:
        case PowerManagerInternal.WAKEFULNESS_DREAMING:
        case PowerManagerInternal.WAKEFULNESS_DOZING:
            // tokens have been acquired.
            return (mLockScreenShown != LOCK_SCREEN_HIDDEN || !mSleepTokens.isEmpty());
        case PowerManagerInternal.WAKEFULNESS_ASLEEP:
        default:
            // If we're asleep then pause applications unconditionally.
            return true;
    }
}||||||||private boolean shouldSleepLocked() {
    // Resume applications while running a voice interactor.
    if (mRunningVoice != null) {
        return false;
    }
    // TODO: Transform the lock screen state into a sleep token instead.
    switch(mWakefulness) {
        case PowerManagerInternal.WAKEFULNESS_AWAKE:
        case PowerManagerInternal.WAKEFULNESS_DREAMING:
        case PowerManagerInternal.WAKEFULNESS_DOZING:
            // tokens have been acquired.
            return mKeyguardController.isKeyguardShowing() || !mSleepTokens.isEmpty();
        case PowerManagerInternal.WAKEFULNESS_ASLEEP:
        default:
            // If we're asleep then pause applications unconditionally.
            return true;
    }
}||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(EnclosedExpr
						(BinaryExpr
							(BinaryExpr
								NameExpr
									SimpleName
								NameExpr
									SimpleName
							)
							(UnaryExpr
								(MethodCallExpr
									SimpleName
									NameExpr
										SimpleName
								)
							)
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
)
||||||||(MethodDeclaration
	(BlockStmt
		(IfStmt
			(BinaryExpr
				NameExpr
					SimpleName
				NullLiteralExpr
			)
			(BlockStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
				)
			)
			LineComment
		)
		(SwitchStmt
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
				(ReturnStmt
					(BinaryExpr
						(MethodCallExpr
							SimpleName
							NameExpr
								SimpleName
						)
						(UnaryExpr
							(MethodCallExpr
								SimpleName
								NameExpr
									SimpleName
							)
						)
					)
					LineComment
				)
			)
			(SwitchEntryStmt
				(FieldAccessExpr
					SimpleName
					NameExpr
						SimpleName
				)
			)
			(SwitchEntryStmt
				(ReturnStmt
					(BooleanLiteralExpr
					)
					LineComment
				)
			)
			NameExpr
				SimpleName
			LineComment
		)
	)
	(PrimitiveType
	)
	SimpleName
)

