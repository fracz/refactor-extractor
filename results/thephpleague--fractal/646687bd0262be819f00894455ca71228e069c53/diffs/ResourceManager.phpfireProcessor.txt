||||||||    protected function fireProcessor($resource, $scope, $data)
    {
        $processor = $resource->getProcessor();

        // Fire Main Processor
        if (is_callable($processor)) {
            $processedData = call_user_func($processor, $scope, $data);

        } else {
            $processedData = call_user_func([$processor, 'process'], $data);

            // If its an object, process potential embeded resources
            if ($processor instanceof ProcessorAbstract) {
                $embededData = $processor->processEmbededResources($scope, $data);

                // Push the new embeds in with the main data
                $processedData = array_merge($processedData, $embededData);
            }
        }

        return $processedData;
    }


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))