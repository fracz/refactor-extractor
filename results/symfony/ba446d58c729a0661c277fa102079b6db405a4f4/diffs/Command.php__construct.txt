  public function __construct($name = null, HelperSet $helperSet = null)
  {
    $this->definition = new InputDefinition();
    $this->ignoreValidationErrors = false;
    $this->applicationDefinitionMerged = false;
    $this->aliases = array();

    if (null === $helperSet)
    {
      $helperSet = new HelperSet(array(
        new FormatterHelper(),
        new InteractHelper(),
      ));
    }

    $this->setHelperSet($helperSet);

    if (null !== $name)
    {
      $this->setName($name);
    }

    $this->configure();

    if (!$this->name)
    {
      throw new \LogicException('The command name cannot be empty.');
    }
  }

  /**
   * Sets the application instance for this command.
   *
   * @param Application $application An Application instance
   */
||||||||  public function __construct($name = null)
  {
    $this->definition = new InputDefinition();
    $this->ignoreValidationErrors = false;
    $this->applicationDefinitionMerged = false;
    $this->aliases = array();

    if (null !== $name)
    {
      $this->setName($name);
    }

    $this->configure();

    if (!$this->name)
    {
      throw new \LogicException('The command name cannot be empty.');
    }
  }

  /**
   * Sets the application instance for this command.
   *
   * @param Application $application An Application instance
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_NEW)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_NEW)
                                    (NULL)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))