    public function exceptionAction(ExceptionManager $manager, $format, $embedded = false)
    {
        $this['request']->setRequestFormat($format);

        $currentContent = '';
        while (false !== $content = ob_get_clean()) {
            $currentContent .= $content;
        }

        $response = $this->render(
            'FrameworkBundle:Exception:'.($this['kernel']->isDebug() ? 'exception' : 'error'),
            array(
                'manager'        => $manager,
                'managers'       => $manager->getLinkedManagers(),
                'currentContent' => $currentContent,
                'embedded'       => $embedded,
            )
        );
        $response->setStatusCode($manager->getStatusCode());

        return $response;
    }
}||||||||    public function exceptionAction(FlattenException $exception, DebugLoggerInterface $logger, $format, $embedded = false)
    {
        $this['request']->setRequestFormat($format);

        $currentContent = '';
        while (false !== $content = ob_get_clean()) {
            $currentContent .= $content;
        }

        $response = $this->render(
            'FrameworkBundle:Exception:'.($this['kernel']->isDebug() ? 'exception' : 'error'),
            array(
                'exception'      => new SafeDecorator($exception),
                'logger'         => $logger,
                'currentContent' => $currentContent,
                'embedded'       => $embedded,
            )
        );
        $response->setStatusCode($exception->getStatusCode());

        return $response;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_CONST)
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL)))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR)
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_CONST)
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL)))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR)
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))