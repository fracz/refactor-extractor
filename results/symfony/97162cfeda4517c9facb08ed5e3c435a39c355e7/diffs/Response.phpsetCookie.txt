    public function setCookie($name, $value, $expire = null, $path = '/', $domain = '', $secure = false, $httpOnly = false)
    {
        if (null !== $expire) {
            if (is_numeric($expire)) {
                $expire = (int) $expire;
            } else {
                $expire = strtotime($expire);
                if (false === $expire || -1 == $expire) {
                    throw new \InvalidArgumentException('The cookie expire parameter is not valid.');
                }
            }
        }

        $this->cookies[$name] = array(
            'name'     => $name,
            'value'    => $value,
            'expire'   => $expire,
            'path'     => $path,
            'domain'   => $domain,
            'secure'   => (Boolean) $secure,
            'httpOnly' => (Boolean) $httpOnly,
        );
    }

    /**
     * Retrieves cookies from the current web response.
     *
     * @return array Cookies
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CAST
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_UNARY_OP
                                                (SCALAR))
                                            (AST_VAR)))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (SCALAR)))))))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CAST
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CAST
                    (AST_VAR))
                (SCALAR)))))||||||||