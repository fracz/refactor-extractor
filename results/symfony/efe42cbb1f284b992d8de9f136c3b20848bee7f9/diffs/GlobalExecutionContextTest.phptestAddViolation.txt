    public function testAddViolation()
    {
        $violation = new ConstraintViolation('Error', array(), 'Root', 'foo.bar', 'invalid');

        $this->context->addViolation($violation);

        $this->assertEquals(new ConstraintViolationList(array($violation)), $this->context->getViolations());
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_ARRAY)
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))||||||||