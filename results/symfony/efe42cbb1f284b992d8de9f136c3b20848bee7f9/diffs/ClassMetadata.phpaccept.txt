||||||||    public function accept(ValidationVisitorInterface $visitor, $value, $group, $propertyPath, $propagatedGroup = null)
    {
        if (null === $propagatedGroup && Constraint::DEFAULT_GROUP === $group
                && ($this->hasGroupSequence() || $this->isGroupSequenceProvider())) {
            if ($this->hasGroupSequence()) {
                $groups = $this->getGroupSequence();
            } else {
                $groups = $value->getGroupSequence();
            }

            foreach ($groups as $group) {
                $this->accept($visitor, $value, $group, $propertyPath, Constraint::DEFAULT_GROUP);

                if (count($visitor->getViolations()) > 0) {
                    break;
                }
            }

            return;
        }

        $visitor->visit($this, $value, $group, $propertyPath);

        if (null !== $value) {
            $pathPrefix = empty($propertyPath) ? '' : $propertyPath.'.';

            foreach ($this->getConstrainedProperties() as $property) {
                foreach ($this->getMemberMetadatas($property) as $member) {
                    $member->accept($visitor, $member->getValue($value), $group, $pathPrefix.$property, $propagatedGroup);
                }
            }
        }
    }

    /**
     * Returns the properties to be serialized
     *
     * @return array
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))))
                                    (SCALAR))
                                (
                                    (AST_BREAK
                                        (NULL)))))))
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_EMPTY
                            (AST_VAR))
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_VAR)))))))))))