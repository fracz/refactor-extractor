    private static function parseMapping($mapping, $flags, &$i = 0, $references = array())
    {
        $output = array();
        $len = strlen($mapping);
        ++$i;

        // {foo: bar, bar:foo, ...}
        while ($i < $len) {
            switch ($mapping[$i]) {
                case ' ':
                case ',':
                    ++$i;
                    continue 2;
                case '}':
                    if (self::$objectForMap) {
                        return (object) $output;
                    }

                    return $output;
            }

            // key
            $key = self::parseScalar($mapping, $flags, array(':', ' '), array('"', "'"), $i, false);
            $i = strpos($mapping, ':', $i);

            if (!isset($mapping[$i + 1]) || ' ' !== $mapping[$i + 1]) {
                @trigger_error('Omitting the space after the colon that follows a mapping key definition is deprecated since version 3.2 and will throw a ParseException in 4.0.', E_USER_DEPRECATED);
            }

            // value
            $done = false;

            while ($i < $len) {
                switch ($mapping[$i]) {
                    case '[':
                        // nested sequence
                        $value = self::parseSequence($mapping, $flags, $i, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected whilst parsing YAML. Silent handling of duplicates in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key), E_USER_DEPRECATED);
                        }
                        $done = true;
                        break;
                    case '{':
                        // nested mapping
                        $value = self::parseMapping($mapping, $flags, $i, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected whilst parsing YAML. Silent handling of duplicates in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key), E_USER_DEPRECATED);
                        }
                        $done = true;
                        break;
                    case ':':
                    case ' ':
                        break;
                    default:
                        $value = self::parseScalar($mapping, $flags, array(',', '}'), array('"', "'"), $i, true, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected whilst parsing YAML. Silent handling of duplicates in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key), E_USER_DEPRECATED);
                        }
                        $done = true;
                        --$i;
                }

                ++$i;

                if ($done) {
                    continue 2;
                }
            }
        }

        throw new ParseException(sprintf('Malformed inline YAML string %s', $mapping));
    }

    /**
     * Evaluates scalars and replaces magic values.
     *
     * @param string $scalar
     * @param int    $flags
     * @param array  $references
     *
     * @return string A YAML string
     *
     * @throws ParseException when object parsing support was disabled and the parser detected a PHP object or when a reference could not be resolved
     */
||||||||    private static function parseMapping($mapping, $flags, &$i = 0, $references = array())
    {
        $output = array();
        $len = strlen($mapping);
        ++$i;

        // {foo: bar, bar:foo, ...}
        while ($i < $len) {
            switch ($mapping[$i]) {
                case ' ':
                case ',':
                    ++$i;
                    continue 2;
                case '}':
                    if (self::$objectForMap) {
                        return (object) $output;
                    }

                    return $output;
            }

            // key
            $key = self::parseScalar($mapping, $flags, array(':', ' '), array('"', "'"), $i, false);
            $i = strpos($mapping, ':', $i);

            if (!isset($mapping[$i + 1]) || ' ' !== $mapping[$i + 1]) {
                @trigger_error('Omitting the space after the colon that follows a mapping key definition is deprecated since version 3.2 and will throw a ParseException in 4.0.', E_USER_DEPRECATED);
            }

            // value
            $done = false;

            while ($i < $len) {
                switch ($mapping[$i]) {
                    case '[':
                        // nested sequence
                        $value = self::parseSequence($mapping, $flags, $i, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected on line %d whilst parsing YAML. Silent handling of duplicate mapping keys in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key, self::$parsedLineNumber + 1), E_USER_DEPRECATED);
                        }
                        $done = true;
                        break;
                    case '{':
                        // nested mapping
                        $value = self::parseMapping($mapping, $flags, $i, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected on line %d whilst parsing YAML. Silent handling of duplicate mapping keys in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key, self::$parsedLineNumber + 1), E_USER_DEPRECATED);
                        }
                        $done = true;
                        break;
                    case ':':
                    case ' ':
                        break;
                    default:
                        $value = self::parseScalar($mapping, $flags, array(',', '}'), array('"', "'"), $i, true, $references);
                        // Spec: Keys MUST be unique; first one wins.
                        // Parser cannot abort this mapping earlier, since lines
                        // are processed sequentially.
                        if (!isset($output[$key])) {
                            $output[$key] = $value;
                        } else {
                            @trigger_error(sprintf('Duplicate key "%s" detected on line %d whilst parsing YAML. Silent handling of duplicate mapping keys in YAML is deprecated since version 3.2 and will throw \Symfony\Component\Yaml\Exception\ParseException in 4.0.', $key, self::$parsedLineNumber + 1), E_USER_DEPRECATED);
                        }
                        $done = true;
                        --$i;
                }

                ++$i;

                if ($done) {
                    continue 2;
                }
            }
        }

        throw new ParseException(sprintf('Malformed inline YAML string %s', $mapping));
    }

    /**
     * Evaluates scalars and replaces magic values.
     *
     * @param string $scalar
     * @param int    $flags
     * @param array  $references
     *
     * @return string A YAML string
     *
     * @throws ParseException when object parsing support was disabled and the parser detected a PHP object or when a reference could not be resolved
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_PRE_INC
        (AST_VAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))
        (
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_PRE_INC
                                (AST_VAR))
                            (AST_CONTINUE
                                (SCALAR))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_PROP)
                                    (
                                        (AST_RETURN
                                            (AST_CAST
                                                (AST_VAR))))))
                            (AST_RETURN
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_WHILE
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (
                    (AST_SWITCH
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_SWITCH_LIST
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (AST_VAR)
                                                (AST_CONST)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_PRE_DEC
                                        (AST_VAR))))))
                    (AST_PRE_INC
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_CONTINUE
                                    (SCALAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_PRE_INC
        (AST_VAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))
        (
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_PRE_INC
                                (AST_VAR))
                            (AST_CONTINUE
                                (SCALAR))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_PROP)
                                    (
                                        (AST_RETURN
                                            (AST_CAST
                                                (AST_VAR))))))
                            (AST_RETURN
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_WHILE
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (
                    (AST_SWITCH
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_SWITCH_LIST
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_STATIC_PROP)
                                                                        (SCALAR))))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_STATIC_PROP)
                                                                        (SCALAR))))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (AST_VAR)
                                                (AST_CONST)
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_STATIC_PROP)
                                                                        (SCALAR))))
                                                            (AST_CONST)))))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))
                                    (AST_PRE_DEC
                                        (AST_VAR))))))
                    (AST_PRE_INC
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_CONTINUE
                                    (SCALAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))))))