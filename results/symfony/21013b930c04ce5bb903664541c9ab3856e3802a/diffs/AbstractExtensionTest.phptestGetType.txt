    public function testGetType()
    {
        $loader = new TestExtension(array($type));
        $this->assertInstanceOf(__NAMESPACE__.'\TestType', $loader->getType('foo'));
        $this->assertSame($loader->getType('foo'), $loader->getType('foo'));
    }
}

class TestType implements FormTypeInterface
{
    public function getName()
    {
        return 'foo';
    }

    function buildForm(FormBuilder $builder, array $options) {}

    function buildView(FormView $view, FormInterface $form) {}

    function buildViewBottomUp(FormView $view, FormInterface $form) {}

    function createBuilder($name, FormFactoryInterface $factory, array $options) {}

    function getDefaultOptions(array $options) {}

    function getParent(array $options) {}

    function setExtensions(array $extensions) {}

    function getExtensions() {}
}

class TestExtension extends AbstractExtension
{
    protected function loadTypes()
    {
        return array(new TestType());
    }

    protected function loadTypeGuesser()
    {
    }
}||||||||    public function testGetType()
    {
        $loader = new ConcreteExtension();
        $this->assertTrue($loader->getType('foo') instanceof FooType);
    }
}

class ConcreteExtension extends AbstractExtension
{
    protected function loadTypes()
    {
        return array(new FooType());
    }

    protected function loadTypeGuesser()
    {
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))