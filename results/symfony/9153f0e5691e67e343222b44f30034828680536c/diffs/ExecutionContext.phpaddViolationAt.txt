    public function addViolationAt($propertyPath, $message, array $params = array(), $invalidValue = null)
    {
        $this->globalContext->addViolation(new ConstraintViolation(
            $message,
            $params,
            $this->globalContext->getRoot(),
            $propertyPath,
            // check using func_num_args() to allow passing null values
            func_num_args() === 4 ? $invalidValue : $this->value
        ));
    }

    /**
     * Adds a violation at the child of the current validation graph node with
     * the given property path.
     *
     * @param string $childPropertyPath The property path of the child node.
     * @param string $message The error message.
     * @param array $params The parameters parsed into the error message.
     * @param mixed $invalidValue The invalid, validated value.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_NEW
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_CALL)
                            (SCALAR))
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))))||||||||