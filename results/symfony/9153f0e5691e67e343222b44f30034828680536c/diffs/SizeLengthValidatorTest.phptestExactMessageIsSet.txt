||||||||    public function testExactMessageIsSet()
    {
        $constraint = new SizeLength(array(
            'min' => 5,
            'max' => 5,
            'exactMessage' => 'myMessage',
        ));

        $this->context->expects($this->once())
            ->method('addViolation')
            ->with('myMessage', array(
                '{{ value }}' => '1234',
                '{{ limit }}' => 5,
            ));

        $this->assertFalse($this->validator->isValid('1234', $constraint));
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_VAR))))))