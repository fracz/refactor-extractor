    public function testValidIpsAll($ip)
    {
        $this->assertTrue($this->validator->isValid($ip, new Ip(array(
            'version' => Ip::ALL,
        ))));
    }

||||||||    public function testValidIpsAll($ip)
    {
        $this->context->expects($this->never())
            ->method('addViolation');

        $this->assertTrue($this->validator->isValid($ip, new Ip(array(
            'version' => Ip::ALL,
        ))));
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (SCALAR))))))))))