    public function warmUp($cacheDir)
    {
        // we need the directory no matter the proxy cache generation strategy.
        $proxyCacheDir = $this->container->getParameter('doctrine.orm.proxy_dir');
        if (!file_exists($proxyCacheDir)) {
            if (false === @mkdir($proxyCacheDir, 0777, true)) {
                throw new \RuntimeException(sprintf('Unable to create the Doctrine Proxy directory (%s)', dirname($proxyCacheDir)));
            }
        } else if (!is_writable($proxyCacheDir)) {
            throw new \RuntimeException(sprintf('Doctrine Proxy directory (%s) is not writeable for the current system user.', $proxyCacheDir));
        }

        // if proxies are autogenerated we don't need to generate them in the cache warmer.
        if ($this->container->getParameter('doctrine.orm.auto_generate_proxy_classes') === true) {
            return;
        }

        foreach ($this->container->get('doctrine')->getEntityManagers() as $em) {
            $classes = $em->getMetadataFactory()->getAllMetadata();
            $em->getProxyFactory()->generateProxyClasses($classes);
        }
    }
}||||||||    public function warmUp($cacheDir)
    {
        foreach ($this->registry->getEntityManagers() as $em) {
            // we need the directory no matter the proxy cache generation strategy
            if (!file_exists($proxyCacheDir = $em->getConfiguration()->getProxyDir())) {
                if (false === @mkdir($proxyCacheDir, 0777, true)) {
                    throw new \RuntimeException(sprintf('Unable to create the Doctrine Proxy directory "%s".', dirname($proxyCacheDir)));
                }
            } elseif (!is_writable($proxyCacheDir)) {
                throw new \RuntimeException(sprintf('The Doctrine Proxy directory "%s" is not writeable for the current system user.', $proxyCacheDir));
            }

            // if proxies are autogenerated we don't need to generate them in the cache warmer
            if ($em->getConfiguration()->getAutoGenerateProxyClasses()) {
                continue;
            }

            $classes = $em->getMetadataFactory()->getAllMetadata();

            $em->getProxyFactory()->generateProxyClasses($classes);
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_CONST)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)
                                                (AST_CONST)))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))))))))))))
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_VAR))))))