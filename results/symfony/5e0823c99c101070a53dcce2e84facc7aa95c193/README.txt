commit 5e0823c99c101070a53dcce2e84facc7aa95c193
Merge: eb62f12 8dc78bd
Author: Fabien Potencier <fabien.potencier@gmail.com>
Date:   Sat Jan 28 15:19:10 2012 +0100

    merged branch bschussek/issue1919 (PR #3156)

    Commits
    -------

    8dc78bd [Form] Fixed YODA issues
    600cec7 [Form] Added missing entries to CHANGELOG and UPGRADE
    b154f7c [Form] Fixed docblock and unneeded use statement
    399af27 [Form] Implemented checks to assert that values and indices generated in choice lists match their requirements
    5f6f75c [Form] Fixed outstanding issues mentioned in the PR
    7c70976 [Form] Fixed text in UPGRADE file
    c26b47a [Form] Made query parameter name generated by ORMQueryBuilderLoader unique
    18f92cd [Form] Fixed double choice fixing
    f533ef0 [Form] Added ChoiceView class for passing choice-related data to the view
    d72900e [Form] Incorporated changes suggested in PR comments
    28d2f6d Removed duplicated lines from UPGRADE file
    e1fc5a5 [Form] Restricted form names to specific characters to (1) fix generation of HTML IDs and to (2) avoid problems with property paths.
    87b16e7 [Form] Greatly improved ChoiceListInterface and all of its implementations

    Discussion
    ----------

    [Form] Improved ChoiceList implementation and made form naming more restrictive

    Bug fix: yes
    Feature addition: yes
    Backwards compatibility break: **yes**
    Symfony2 tests pass: yes
    Fixes the following tickets: #2869, #3021, #1919, #3153
    Todo: adapt documentation

    ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue1919)

    The changes in this PR are primarily motivated by the fact that invalid form/field names lead to various problems.

    1. When a name contains any characters that are not permitted in HTML "id" attributes, these are invalid
    2. When a name contains periods ("."), form validation is broken, because they confuse the property path resolution
    3. Since choices in expanded choice fields are directly translated to field names, choices applying to either 1. or 2. lead to problems. But choices should be unrestricted.
    4. Unless a choice field is not expanded and does not allow multiple selection, it is not possible to use empty strings as choices, which might be desirable in some occasions.

    The solution to these problems is to

    * Restrict form names to disallow unpermitted characters (solves 1. and 2.)
    * Generate integer indices to be stored in the HTML "id" and "name" attributes and map them to the choices (solves 3.). Can be reverted to the old behaviour by setting the option "index_generation" to ChoiceList::COPY_CHOICE
    * Generate integer values to be stored in the HTML "value" attribute and map them to the choices (solves 4.). Can be reverted to the old behaviour by setting the option "value_generation" to ChoiceList::COPY_CHOICE

    Apart from these fixes, it is now possible to write more flexible choice lists. One of these is `ObjectChoiceList`, which allows to use objects as choices and is bundled in the core. `EntityChoiceList` has been made an extension of this class.

        $form = $this->createFormBuilder()
            ->add('object', 'choice', array(
                'choice_list' => new ObjectChoiceList(
                    array($obj1, $obj2, $obj3, $obj4),
                    // property path determining the choice label (optional)
                    'name',
                    // preferred choices (optional)
                    array($obj2, $obj3),
                    // property path for object grouping (optional)
                    'category',
                    // property path for value generation (optional)
                    'id',
                    // property path for index generation (optional)
                    'id'
                )
            ))
            ->getForm()
        ;

    ---------------------------------------------------------------------------

    by kriswallsmith at 2012-01-19T18:09:09Z

    Rather than passing `choices` and a `choice_labels` arrays to the view would it make sense to introduce a `ChoiceView` class and pass one array of objects?

    ---------------------------------------------------------------------------

    by stof at 2012-01-22T15:32:36Z

    @bschussek can you update your PR according to the feedback (and rebase it as it conflicts according to github) ?

    ---------------------------------------------------------------------------

    by bschussek at 2012-01-24T00:15:42Z

    @kriswallsmith fixed

    Fixed all outstanding issues. Would be glad if someone could review again, otherwise this PR is ready to merge.

    ---------------------------------------------------------------------------

    by fabpot at 2012-01-25T15:17:59Z

    Is it ready to be merged?

    ---------------------------------------------------------------------------

    by Tobion at 2012-01-25T15:35:50Z

    Yes I think so. He said it's ready to be merged when reviewed.

    ---------------------------------------------------------------------------

    by bschussek at 2012-01-26T02:30:36Z

    Yes.

    ---------------------------------------------------------------------------

    by bschussek at 2012-01-28T12:39:00Z

    Fixed outstanding issues. Ready for merge.