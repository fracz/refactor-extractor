    public function registerExtensions(ContainerBuilder $container)
    {
        parent::registerExtensions($container);

        $container->addScope('request');

        $container->addCompilerPass(new AddSecurityVotersPass());
        $container->addCompilerPass(new ConverterManagerPass());
        $container->addCompilerPass(new RoutingResolverPass());
        $container->addCompilerPass(new ProfilerPass());
        $container->addCompilerPass(new RegisterKernelListenersPass());
        $container->addCompilerPass(new TemplatingPass());
        $container->addCompilerPass(new AddConstraintValidatorsPass());
        $container->addCompilerPass(new AddFieldFactoryGuessersPass());
        $container->addCompilerPass(new AddClassesToCachePass());
        $container->addCompilerPass(new TranslatorPass());
        $container->addCompilerPass(new AddCacheWarmerPass());
    }

    /**
     * {@inheritdoc}
     */
||||||||    public function registerExtensions(ContainerBuilder $container)
    {
        parent::registerExtensions($container);

        $container->addScope('request');

        $container->addCompilerPass(new AddSecurityVotersPass());
        $container->addCompilerPass(new ConverterManagerPass());
        $container->addCompilerPass(new RoutingResolverPass());
        $container->addCompilerPass(new ProfilerPass());
        $container->addCompilerPass(new RegisterKernelListenersPass());
        $container->addCompilerPass(new TemplatingPass());
        $container->addCompilerPass(new AddConstraintValidatorsPass());
        $container->addCompilerPass(new AddFieldFactoryGuessersPass());
        $container->addCompilerPass(new AddClassesToCachePass());
        $container->addCompilerPass(new TranslatorPass());
        $container->addCompilerPass(new AddCacheWarmerPass());
        $container->addCompilerPass(new AddAuthenticationProvidersPass());
    }

    /**
     * {@inheritdoc}
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW))))