    public function testGetRawException()
    {
        $object = new \stdClass();
        $escaped = Escaper::escape('entities', $object);
        $escaped->getRaw('something');
    }
}

class OutputEscaperTest
{
    public $someMember = '<em>escape me</em>';

    public function __toString()
    {
        return $this->getTitle();
    }

    public function getTitle()
    {
        return '<strong>escaped!</strong>';
    }

    public function sayHello($name)
    {
        return sprintf('Hello <strong>%s</strong>', $name);
    }

    public function getTitles()
    {
        return array(1, 2, '<strong>escaped!</strong>');
    }

    public function get($key)
    {
        return isset($this->{$key}) ? $this->{$key} : null;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||