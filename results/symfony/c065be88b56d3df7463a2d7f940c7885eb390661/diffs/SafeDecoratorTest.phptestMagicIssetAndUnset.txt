    public function testMagicIssetAndUnset()
    {
        $safe = new SafeDecorator(new TestClass3());

        $this->assertTrue(isset($safe->boolValue), '->__isset() returns true if the property is not null');
        $this->assertFalse(isset($safe->nullValue), '->__isset() returns false if the property is null');
        $this->assertFalse(isset($safe->undefinedValue), '->__isset() returns false if the property does not exist');

        unset($safe->boolValue);
        $this->assertFalse(isset($safe->boolValue), '->__unset() unsets the embedded property');
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (SCALAR))))||||||||