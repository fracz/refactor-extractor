||||||||    private function &readIndex(&$array, $index)
    {
        if (!$array instanceof \ArrayAccess && !is_array($array)) {
            throw new NoSuchPropertyException(sprintf('Index "%s" cannot be read from object of type "%s" because it doesn\'t implement \ArrayAccess', $index, get_class($array)));
        }

        // Use an array instead of an object since performance is very crucial here
        $result = array(
            self::VALUE => null,
            self::IS_REF => false
        );

        if (isset($array[$index])) {
            if (is_array($array)) {
                $result[self::VALUE] =& $array[$index];
                $result[self::IS_REF] = true;
            } else {
                $result[self::VALUE] = $array[$index];
                // Objects are always passed around by reference
                $result[self::IS_REF] = is_object($array[$index]) ? true : false;
            }
        }

        return $result;
    }

    /**
     * Reads the a property from an object or array.
     *
     * @param object $object   The object to read from.
     * @param string $property The property to read.
     *
     * @return mixed The value of the read property
     *
     * @throws NoSuchPropertyException       If the property does not exist.
     * @throws PropertyAccessDeniedException If the property cannot be accessed due to
     *                                       access restrictions (private or protected).
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN_REF
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_CONDITIONAL
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_CONST)
                                    (AST_CONST)))))))))
    (AST_RETURN
        (AST_VAR)))