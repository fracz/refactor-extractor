||||||||  static function initializeEscapers()
  {
    self::$escapers = array(
      'htmlspecialchars' =>
        /**
         * Runs the PHP function htmlspecialchars on the value passed.
         *
         * @param string $value the value to escape
         *
         * @return string the escaped value
         */
        function ($value)
        {
          // Numbers and boolean values get turned into strings which can cause problems
          // with type comparisons (e.g. === or is_int() etc).
          return is_string($value) ? htmlspecialchars($value, ENT_QUOTES, Escaper::getCharset()) : $value;
        },

      'entities' =>
        /**
         * Runs the PHP function htmlentities on the value passed.
         *
         * @param string $value the value to escape
         * @return string the escaped value
         */
        function ($value)
        {
          // Numbers and boolean values get turned into strings which can cause problems
          // with type comparisons (e.g. === or is_int() etc).
          return is_string($value) ? htmlentities($value, ENT_QUOTES, Escaper::getCharset()) : $value;
        },

      'raw' =>
        /**
         * An identity function that merely returns that which it is given, the purpose
         * being to be able to specify that the value is not to be escaped in any way.
         *
         * @param string $value the value to escape
         * @return string the escaped value
         */
        function ($value) { return $value; },

      'js' =>
        /**
         * A function that c-escapes a string after applying (cf. entities). The
         * assumption is that the value will be used to generate dynamic HTML in some
         * way and the safest way to prevent mishap is to assume the value should have
         * HTML entities set properly.
         *
         * The (cf. js_no_entities) method should be used to escape a string
         * that is ultimately not going to end up as text in an HTML document.
         *
         * @param string $value the value to escape
         * @return string the escaped value
         */
        function ($value) { return str_replace(array("\\"  , "\n"  , "\r" , "\""  , "'"  ), array("\\\\", "\\n" , "\\r", "\\\"", "\\'"), (is_string($value) ? htmlentities($value, ENT_QUOTES, Escaper::getCharset()) : $value)); },

      'js_no_entities' =>
        /**
         * A function the c-escapes a string, making it suitable to be placed in a
         * JavaScript string.
         *
         * @param string $value the value to escape
         * @return string the escaped value
         */
        function ($value) { return str_replace(array("\\"  , "\n"  , "\r" , "\""  , "'"  ), array("\\\\", "\\n" , "\\r", "\\\"", "\\'"), $value); },
    );
  }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_STATIC_CALL)))
                                (AST_VAR)))))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_STATIC_CALL)))
                                (AST_VAR)))))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_VAR))))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (AST_CONDITIONAL
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST)
                                                (AST_STATIC_CALL)))
                                        (AST_VAR)))))))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (AST_VAR))))))
                (SCALAR)))))