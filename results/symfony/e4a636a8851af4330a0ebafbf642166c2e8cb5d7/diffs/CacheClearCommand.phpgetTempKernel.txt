||||||||    protected function getTempKernel(KernelInterface $parent, $warmupDir)
    {
        $parentClass = get_class($parent);
        $rand = uniqid();
        $class = $parentClass.$rand;
        $rootDir = $parent->getRootDir();
        $code = <<<EOF
<?php

class $class extends $parentClass
{
    public function getCacheDir()
    {
        return '$warmupDir';
    }

    public function getRootDir()
    {
        return '$rootDir';
    }

    protected function getContainerClass()
    {
        return parent::getContainerClass().'__{$rand}__';
    }
}
EOF;
        $this->container->get('filesystem')->mkdirs($warmupDir);
        file_put_contents($file = $warmupDir.'/kernel.tmp', $code);
        require_once $file;
        @unlink($file);

        return new $class($parent->getEnvironment(), $parent->isDebug());
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))))))