    public function getContainerClass()
    {
        return $this->name.ucfirst($this->environment).($this->debug ? 'Debug' : '').'ProjectContainer'.($this->cacheDir ? 'Tmp' : '');
    }

    /**
     * Initializes the service container.
     *
     * The cached version of the service container is used when fresh, otherwise the
     * container is built.
     */
||||||||    protected function getContainerClass()
    {
        return $this->name.ucfirst($this->environment).($this->debug ? 'Debug' : '').'ProjectContainer';
    }

    /**
     * Initializes the service container.
     *
     * The cached version of the service container is used when fresh, otherwise the
     * container is built.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_CONDITIONAL
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_CONDITIONAL
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)
                    (SCALAR)))
            (SCALAR))))