  public function askConfirmation(OutputInterface $output, $question, $default = true)
  {
    // @codeCoverageIgnoreStart
    $answer = 'z';
    while ($answer && !in_array(strtolower($answer[0]), array('y', 'n')))
    {
      $answer = $this->ask($output, $question);
    }

    if (false === $default)
    {
      return $answer && 'y' == strtolower($answer[0]);
    }
    else
    {
      return !$answer || 'y' == strtolower($answer[0]);
    }
    // @codeCoverageIgnoreEnd
  }

  /**
   * Asks for a value and validates the response.
   *
   * @param OutputInterface $output
   * @param string|array    $question
   * @param Closure         $validator
   * @param integer         $attempts Max number of times to ask before giving up (false by default, which means infinite)
   *
   * @return mixed
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))))))||||||||