    public function getMatcher()
    {
        if (null !== $this->matcher) {
            return $this->matcher;
        }

        if (null === $this->options['cache_dir'] || null === $this->options['matcher_cache_class']) {
            return $this->matcher = new $this->options['matcher_class']($this->getRouteCollection(), $this->context, $this->defaults);
        }

        $class = $this->options['matcher_cache_class'];
        $cache = new ConfigCache($this->options['cache_dir'], $class, $this->options['debug']);
        if (!$cache->isFresh($class)) {
            $dumper = new $this->options['matcher_dumper_class']($this->getRouteCollection());

            $options = array(
                'class'      => $class,
                'base_class' => $this->options['matcher_base_class'],
            );

            $cache->write($dumper->dump($options), $this->getRouteCollection()->getResources());
        }

        require_once $cache;

        return $this->matcher = new $class($this->context, $this->defaults);
    }

    /**
     * Gets the UrlGenerator instance associated with this Router.
     *
     * @return UrlGeneratorInterface A UrlGeneratorInterface instance
     */
||||||||    public function getMatcher()
    {
        if (null !== $this->matcher) {
            return $this->matcher;
        }

        if (null === $this->options['cache_dir'] || null === $this->options['matcher_cache_class']) {
            return $this->matcher = new $this->options['matcher_class']($this->getRouteCollection(), $this->context, $this->defaults);
        }

        $class = $this->options['matcher_cache_class'];
        $cache = new ConfigCache($this->options['cache_dir'].'/'.$class.'.php', $this->options['debug']);
        if (!$cache->isFresh($class)) {
            $dumper = new $this->options['matcher_dumper_class']($this->getRouteCollection());

            $options = array(
                'class'      => $class,
                'base_class' => $this->options['matcher_base_class'],
            );

            $cache->write($dumper->dump($options), $this->getRouteCollection()->getResources());
        }

        require_once $cache;

        return $this->matcher = new $class($this->context, $this->defaults);
    }

    /**
     * Gets the UrlGenerator instance associated with this Router.
     *
     * @return UrlGeneratorInterface A UrlGeneratorInterface instance
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_RETURN
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_VAR))
    (AST_RETURN
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))))))