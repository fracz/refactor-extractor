||||||||    protected function findBundleDirForNamespace($namespace, ContainerBuilder $container)
    {
        $bundleDirs = $container->getParameter('kernel.bundle_dirs');

        $segment = $namespace;
        do {
            if (isset($bundleDirs[$segment])) {
                return $bundleDirs[$segment] . str_replace('\\', '/', substr($namespace, strlen($segment)));
            }
        } while ($segment = substr($segment, 0, ($pos = strrpos($segment, '\\'))));

        return false;
    }

    /**
     * Get the namespace a bundle resides into.
     *
     * @param string $bundleName
     * @param ContainerBuilder $container
     * @return string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_DO_WHILE
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))))))))))))
        (AST_ASSIGN
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_CONST)))