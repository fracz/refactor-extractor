||||||||    public function testClearAnnotations()
    {
        $def = new Definition('stdClass');
        $this->assertEquals(spl_object_hash($def), spl_object_hash($def->clearAnnotations()), '->clearAnnotations() implements a fluent interface');
        $def->addAnnotation('foo', array('foo' => 'bar'));
        $def->clearAnnotations();
        $this->assertEquals(array(), $def->getAnnotations(), '->clearAnnotations() removes all current annotations');
    }

    /**
     * @covers Symfony\Components\DependencyInjection\Definition::addAnnotation
     * @covers Symfony\Components\DependencyInjection\Definition::getAnnotation
     * @covers Symfony\Components\DependencyInjection\Definition::getAnnotations
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))