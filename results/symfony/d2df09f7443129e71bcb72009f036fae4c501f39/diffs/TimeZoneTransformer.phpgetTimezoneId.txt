    protected function getTimezoneId($matched)
    {
        $offset = $this->getSecondsOffset($matched);

        if (isset(self::$timezonesId[$offset])) {
            return $timezonesId[$offset];
        }

        $abbreviations = \DateTimeZone::listAbbreviations();

        $timezoneId = null;
        foreach ($abbreviations as $zone => $timezones) {
            foreach ($timezones as $timezone) {
                if ($offset === $timezone['offset'] && 1 === preg_match('/^Etc\//', $timezone['timezone_id'])) {
                    $timezoneId = $timezone['timezone_id'];
                    break 2;
                }
            }
        }

        self::$timezonesId[$offset] = $timezoneId;
        return self::$timezonesId[$offset];
    }

    /**
     * Calculates the seconds offset of a timezone
     *
     * @param  string  $timezone  A GMT timezone string (GMT-03:00, e.g.)
     * @return int                The offset in seconds of the timezone
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_BREAK
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))))||||||||