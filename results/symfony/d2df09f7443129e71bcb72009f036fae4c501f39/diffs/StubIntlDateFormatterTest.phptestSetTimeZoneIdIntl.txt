    public function testSetTimeZoneIdIntl()
    {
        $this->skipIfIntlExtensionIsNotLoaded();
        $formatter = $this->createIntlFormatter();
        $this->assertEquals('UTC', $formatter->getTimeZoneId());

        $formatter->setTimeZoneId('Europe/Zurich');
        $this->assertEquals('Europe/Zurich', $formatter->getTimeZoneId());
    }

||||||||    public function testSetTimeZoneIdIntl($timeZoneId)
    {
        $this->skipIfIntlExtensionIsNotLoaded();
        $formatter = $this->createIntlFormatter();
        $formatter->setTimeZoneId($timeZoneId);
        $this->assertEquals($timeZoneId, $formatter->getTimeZoneId());
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))))