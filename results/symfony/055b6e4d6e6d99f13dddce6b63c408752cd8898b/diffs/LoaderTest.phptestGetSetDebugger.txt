    public function testGetSetDebugger()
    {
        $loader = new ProjectTemplateLoader4();
        $loader->setDebugger($debugger = new \ProjectTemplateDebugger());
        $this->assertTrue($loader->getDebugger() === $debugger, '->setDebugger() sets the debugger instance');
    }
}

class ProjectTemplateLoader4 extends Loader
{
    public function load($template, array $options = array())
    {
    }

    public function getDebugger()
    {
        return $this->debugger;
    }

    public function isFresh($template, array $options = array(), $time)
    {
        return false;
    }
}||||||||    public function testGetSetDebugger()
    {
        $loader = new ProjectTemplateLoader4(new TemplateNameParser());
        $loader->setDebugger($debugger = new \ProjectTemplateDebugger());
        $this->assertTrue($loader->getDebugger() === $debugger, '->setDebugger() sets the debugger instance');
    }
}

class ProjectTemplateLoader4 extends Loader
{
    public function load($template)
    {
    }

    public function getDebugger()
    {
        return $this->debugger;
    }

    public function isFresh($template, $time)
    {
        return false;
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))))