||||||||    protected function seekToNextRelaventToken($tokenIterator)
    {
        for ( ; $tokenIterator->valid(); $tokenIterator->next()) {
            $t = $tokenIterator->current();
            if (!is_array($t) || ($t[0] !== T_WHITESPACE)) {
                break;
            }
        }
    }

    /**
     * Extracts the message from the iterator while the tokens
     * match allowed message tokens
     *
     * @param \ArrayIterator $tokenIterator
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOR
        (NULL)
        (AST_EXPR_LIST
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_CONST)))
                    (
                        (AST_BREAK
                            (NULL))))))))