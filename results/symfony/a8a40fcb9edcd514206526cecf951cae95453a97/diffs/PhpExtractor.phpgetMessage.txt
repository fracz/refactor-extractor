||||||||    protected function getMessage($tokenIterator)
    {
        $message = '';
        $docToken = '';

        for ( ; $tokenIterator->valid(); $tokenIterator->next()) {
            $t = $tokenIterator->current();
            if (!is_array($t)) {
                break;
            }

            switch ($t[0]) {
                case T_START_HEREDOC:
                    $docToken = $t[1];
                    break;
                case T_ENCAPSED_AND_WHITESPACE:
                case T_CONSTANT_ENCAPSED_STRING:
                    $message .= $t[1];
                    break;
                case T_END_HEREDOC:
                    return PhpStringTokenParser::parseDocString($docToken, $message);
                default:
                    break 2;
            }
        }

        if ($message) {
            $message = PhpStringTokenParser::parse($message);
        }

        return $message;
    }

    /**
     * Extracts trans message from PHP tokens.
     *
     * @param array            $tokens
     * @param MessageCatalogue $catalog
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (NULL)
        (AST_EXPR_LIST
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_SWITCH
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CONST))
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CONST)
                        (
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_BREAK
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))