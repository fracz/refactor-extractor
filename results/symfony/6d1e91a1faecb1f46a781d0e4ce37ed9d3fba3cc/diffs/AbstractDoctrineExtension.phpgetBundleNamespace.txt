    protected function getBundleNamespace($bundleName, $container)
    {
        foreach ($container->getParameter('kernel.bundles') AS $bundleClassName) {
            $tmp = dirname(str_replace('\\', '/', $bundleClassName));
            $namespace = str_replace('/', '\\', dirname($tmp));
            $actualBundleName = basename($tmp);

            if ($actualBundleName == $bundleName) {
                return $namespace;
            }
        }
        return null;
    }

    /**
     * If this is a bundle controlled mapping all the missing information can be autodetected by this method.
     *
     * Returns false when autodetection failed, an array of the completed information otherwise.
     *
     * @param array $bundleConfig
     * @param string $namespace
     * @param string $bundleName
     * @param Container $container
     * @return array|false
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||