    public function hasPreviousSession()
    {
        // the check for $this->session avoids malicious users trying to fake a session cookie with proper name
        $sessionName = $this->hasSession() ? $this->session->getName() : null;

        return $this->cookies->has($sessionName) && $this->hasSession();
    }

    /**
     * Whether the request contains a Session object.
     *
     * @return boolean
     *
     * @api
     */
||||||||    public function hasPreviousSession()
    {
        // the check for $this->session avoids malicious users trying to fake a session cookie with proper name
        return $this->hasSession() && $this->cookies->has($this->session->getName());
    }

    /**
     * Whether the request contains a Session object.
     *
     * @return boolean
     *
     * @api
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))))))