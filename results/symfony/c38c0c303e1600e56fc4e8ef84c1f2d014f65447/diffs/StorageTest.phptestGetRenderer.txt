    public function testGetRenderer()
    {
        $storage = new TestStorage('foo', $renderer = new PhpRenderer());
        $this->assertTrue($storage->getRenderer() === $renderer, '->getRenderer() returns the renderer');
    }
}

class TestStorage extends Storage
{
    public function getContent()
    {
    }
}||||||||    public function testGetRenderer()
    {
        $storage = new TestStorage('foo', 'php');
        $this->assertEquals('php', $storage->getRenderer(), '->getRenderer() returns the renderer');
    }
}

class TestStorage extends Storage
{
    public function getContent()
    {
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))