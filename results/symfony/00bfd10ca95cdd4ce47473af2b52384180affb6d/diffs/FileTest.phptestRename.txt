    public function testRename()
    {
        $path = __DIR__.'/Fixtures/test.copy.gif';
        $targetPath = realpath(__DIR__.'/Fixtures').DIRECTORY_SEPARATOR.'test.target.gif';
        @unlink($path);
        @unlink($targetPath);
        copy(realpath(__DIR__.'/Fixtures/test.gif'), $path);

        $file = new File($path);
        $file->rename('test.target.gif');

        $this->assertTrue(file_exists($targetPath));
        $this->assertFalse(file_exists($path));
        $this->assertEquals($targetPath, $file->getPath());

        @unlink($path);
        @unlink($targetPath);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))))
                (AST_CONST))
            (SCALAR)))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_MAGIC_CONST)
                        (SCALAR))))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR)))))||||||||