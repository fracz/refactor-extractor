    public function installLanguages($languages_list = null)
    {
        if ($languages_list == null || !is_array($languages_list) || !count($languages_list)) {
            $languages_list = $this->language->getIsoList();
        }

        $languages_available = $this->language->getIsoList();
        $languages = array();
        foreach ($languages_list as $iso) {
            if (!in_array($iso, $languages_available)) {
                continue;
            }
            if (!file_exists(_PS_INSTALL_LANGS_PATH_.$iso.'/language.xml')) {
                throw new PrestashopInstallerException($this->language->l('File "language.xml" not found for language iso "%s"', $iso));
            }

            if (!$xml = @simplexml_load_file(_PS_INSTALL_LANGS_PATH_.$iso.'/language.xml')) {
                throw new PrestashopInstallerException($this->language->l('File "language.xml" not valid for language iso "%s"', $iso));
            }

            $params_lang = array(
                'name' => (string)$xml->name,
                'iso_code' => substr((string)$xml->language_code, 0, 2),
                'allow_accented_chars_url' => (string)$xml->allow_accented_chars_url
            );

            if (InstallSession::getInstance()->safe_mode) {
                Language::checkAndAddLanguage($iso, false, true, $params_lang);
            } else {
                Language::downloadAndInstallLanguagePack($iso, _PS_INSTALL_VERSION_, $params_lang);
            }

            Language::loadLanguages();
            Tools::clearCache();
            if (!$id_lang = Language::getIdByIso($iso, true)) {
                throw new PrestashopInstallerException($this->language->l('Cannot install language "%s"', ($xml->name) ? $xml->name : $iso));
            }
            $languages[$id_lang] = $iso;

            // Copy language flag
            if (is_writable(_PS_IMG_DIR_.'l/')) {
                if (!copy(_PS_INSTALL_LANGS_PATH_.$iso.'/flag.jpg', _PS_IMG_DIR_.'l/'.$id_lang.'.jpg')) {
                    throw new PrestashopInstallerException($this->language->l('Cannot copy flag language "%s"', _PS_INSTALL_LANGS_PATH_.$iso.'/flag.jpg => '._PS_IMG_DIR_.'l/'.$id_lang.'.jpg'));
                }
            }
        }

        return $languages;
    }

||||||||    public function installLanguages($languages_list = null)
    {
        if ($languages_list == null || !is_array($languages_list) || !count($languages_list)) {
            $languages_list = $this->language->getIsoList();
        }

        $languages_available = $this->language->getIsoList();
        $languages = array();
        foreach ($languages_list as $iso) {
            if (!in_array($iso, $languages_available)) {
                continue;
            }
            if (!file_exists(_PS_INSTALL_LANGS_PATH_.$iso.'/language.xml')) {
                throw new PrestashopInstallerException($this->language->l('File "language.xml" not found for language iso "%s"', $iso));
            }

            if (!$xml = @simplexml_load_file(_PS_INSTALL_LANGS_PATH_.$iso.'/language.xml')) {
                throw new PrestashopInstallerException($this->language->l('File "language.xml" not valid for language iso "%s"', $iso));
            }

            $params_lang = array(
                'name' => (string)$xml->name,
                'iso_code' => substr((string)$xml->language_code, 0, 2),
                'allow_accented_chars_url' => (string)$xml->allow_accented_chars_url
            );

            if (InstallSession::getInstance()->safe_mode) {
                Language::checkAndAddLanguage($iso, false, true, $params_lang);
            } else {
                if (file_exists(_PS_TRANSLATIONS_DIR_.(string)$iso.'.gzip') == false) {
                    $language = Language::downloadLanguagePack($iso, _PS_INSTALL_VERSION_);

                    if ($language == false) {
                        throw new PrestashopInstallerException($this->language->l('Cannot download language pack "%s"', $iso));
                    }
                }

                Language::installLanguagePack($iso, $params_lang, $errors);
            }

            Language::loadLanguages();
            Tools::clearCache();
            if (!$id_lang = Language::getIdByIso($iso, true)) {
                throw new PrestashopInstallerException($this->language->l('Cannot install language "%s"', ($xml->name) ? $xml->name : $iso));
            }
            $languages[$id_lang] = $iso;

            // Copy language flag
            if (is_writable(_PS_IMG_DIR_.'l/')) {
                if (!copy(_PS_INSTALL_LANGS_PATH_.$iso.'/flag.jpg', _PS_IMG_DIR_.'l/'.$id_lang.'.jpg')) {
                    throw new PrestashopInstallerException($this->language->l('Cannot copy flag language "%s"', _PS_INSTALL_LANGS_PATH_.$iso.'/flag.jpg => '._PS_IMG_DIR_.'l/'.$id_lang.'.jpg'));
                }
            }
        }

        return $languages;
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (SCALAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (SCALAR)))))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (AST_CAST
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_VAR))))))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_CONDITIONAL
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CONST)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (
                                                        (SCALAR)
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_BINARY_OP
                                                                                (AST_CONST)
                                                                                (AST_VAR))
                                                                            (SCALAR))
                                                                        (AST_CONST))
                                                                    (SCALAR))
                                                                (AST_VAR))
                                                            (SCALAR)))))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (SCALAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (SCALAR)))))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (AST_CAST
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CONST)
                                                    (AST_CAST
                                                        (AST_VAR)))
                                                (SCALAR))))
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_CONST))
                                            (
                                                (AST_THROW
                                                    (AST_NEW
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR))))))))))))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_CONDITIONAL
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CONST)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (
                                                        (SCALAR)
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_BINARY_OP
                                                                                (AST_CONST)
                                                                                (AST_VAR))
                                                                            (SCALAR))
                                                                        (AST_CONST))
                                                                    (SCALAR))
                                                                (AST_VAR))
                                                            (SCALAR)))))))))))))))
    (AST_RETURN
        (AST_VAR)))