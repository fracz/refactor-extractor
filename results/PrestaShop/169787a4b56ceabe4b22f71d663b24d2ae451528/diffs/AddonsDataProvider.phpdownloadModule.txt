    public function downloadModule($module_id)
    {
        $params = [
            'id_module' => $module_id,
            'format' => 'json'
        ];

        // Module downloading
        try {
            $module_data = $this->request('module', $params);
        } catch (Exception $e) {
            if (! $this->isAddonsAuthenticated()) {
                throw new Exception('Error sent by Addons. You may need to be logged.', 0, $e);
            } else {
                throw new Exception('Error sent by Addons. You may be not allowed to download this module.', 0, $e);
            }
        }

        $temp_filename = tempnam('', 'mod');
        if (file_put_contents($temp_filename, $module_data) !== false) {
            $this->unZip($temp_filename);
        } else {
            throw new Exception('Cannot store module content in temporary folder !');
        }
    }

    /** Does this function should be in a User related class ? **/
||||||||    public function downloadModule($module_id)
    {
        $params = [
            'id_module' => $module_id,
            'format' => 'json'
        ];

        // Module downloading
        try {
            $module_data = $this->request('module', $params);
        } catch (Exception $e) {
            if (! $this->isAddonsAuthenticated()) {
                throw new Exception('Error sent by Addons. You may need to be logged.', 0, $e);
            } else {
                throw new Exception('Error sent by Addons. You may be not allowed to download this module.', 0, $e);
            }
        }

        $temp_filename = tempnam('', 'mod');
        if (file_put_contents($temp_filename, $module_data) !== false) {
            return $this->unZip($temp_filename);
        } else {
            throw new Exception('Cannot store module content in temporary folder !');
        }
    }

    /** Does this function should be in a User related class ? **/
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_VAR))))))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))