||||||||    public function forId($id, $id_lang = null, $id_shop = null)
    {
        if ($this->entity_being_built === null) {
            throw new Exception('Invalid usage of FakeEntityMapper::forId : you need to call willReturn first.');
        }

        $cache_id = $this->buildCacheId($id, get_class($this->entity_being_built), $id_lang, $id_shop);
        $this->fake_db[$cache_id] = $this->entity_being_built;

        $this->entity_being_built = null;
    }

    /**
     * Fills the given entity with fields from the entity stored in the fake database if it exists.
     * @param $id
     * @param $id_lang
     * @param $entity
     * @param $entity_defs
     * @param $id_shop
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST)))