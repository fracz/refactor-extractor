    public function isModuleOnDisk($name)
    {
        $path = _PS_MODULE_DIR_.$name.'/'.$name.'.php';
        if (!file_exists($path)) {
            return false;
        }

        if (substr(`php -l $path`, 0, 16) != 'No syntax errors') {
            throw new \Exception('Parse error in '.$name.' class');
        }

        include_once(_PS_MODULE_DIR_.$name.'/'.$name.'.php');

        return (bool)\PrestaShop\PrestaShop\Adapter\ServiceLocator::get($name);
    }

||||||||    public function isModuleOnDisk($name)
    {
        $path = _PS_MODULE_DIR_.$name.'/'.$name.'.php';
        if (!file_exists($path)) {
            return false;
        }

        $php_l_result = substr(`php -l $path`, 0, 16);
        if (!empty($php_l_result) && $php_l_result != 'No syntax errors') {
            throw new \Exception('Parse error in '.$name.' class');
        }

        include_once(_PS_MODULE_DIR_.$name.'/'.$name.'.php');

        return (bool)\PrestaShop\PrestaShop\Adapter\ServiceLocator::get($name);
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_SHELL_EXEC
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_RETURN
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_SHELL_EXEC
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)))
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_RETURN
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR))))))