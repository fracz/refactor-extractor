	public function initFormInformations($product, $languages, $defaultLanguage)
	{
		$data = $this->context->smarty->createData();

		// autoload rich text editor (tiny mce)
		$iso = $this->context->language->iso_code;
		$this->tpl_form_vars['iso'] = file_exists(_PS_ROOT_DIR_.'/js/tiny_mce/langs/'.$iso.'.js') ? $iso : 'en';
		$this->tpl_form_vars['ad'] = dirname($_SERVER['PHP_SELF']);
		$this->tpl_form_vars['tinymce'] = true;
		$this->addJS(_PS_JS_DIR_.'tiny_mce/tiny_mce.js');
		$this->addJS(_PS_JS_DIR_.'tinymce.inc.js');

		$currency = $this->context->currency;
		$data->assign('languages',$languages);
		$this->object = $product;
		$this->display = 'edit';
		$content = '';
		$has_attribute = $product->hasAttributes();
		$cover = Product::getCover($product->id);
		$this->_applyTaxToEcotax($product);

		/*
		* Form for add a virtual product like software, mp3, etc...
		*/
		$productDownload = new ProductDownload();
		if ($id_product_download = $productDownload->getIdFromIdProduct($this->getFieldValue($product, 'id')))
			$productDownload = new ProductDownload($id_product_download);
		$product->{'productDownload'} = $productDownload;

		$this->displayInitInformationAndAttachment();


		$cache_default_attribute = (int) $this->getFieldValue($product, 'cache_default_attribute');
		$data->assign('feature_shop_active', Shop::isFeatureActive());
		// @todo : uses the helperform
		$data->assign('displayAssoShop', $this->displayAssoShop());
		$data->assign('carrier_list', $this->getCarrierList());


		$product_props = array();
		// global informations
		array_push($product_props, 'reference', 'ean13', 'upc',
		'available_for_order', 'show_price', 'online_only',
		'id_manufacturer'
		);

		// specific / detailled information
		array_push($product_props,
		// physical product
		'width', 'height', 'weight', 'active',
		// virtual product
		'is_virtual', 'cache_default_attribute',
		// customization
		'uploadable_files', 'text_fields'
		);
		// prices
		array_push($product_props,
			'price', 'wholesale_price', 'id_tax_rules_group', 'unit_price_ratio', 'on_sale',
			'unity', 'minimum_quantity', 'additional_shipping_cost',
			'available_now', 'available_later', 'available_date', 'out_of_stock'
		);

		if(Configuration::get('PS_USE_ECOTAX'))
			array_push($product_props, 'ecotax');

		foreach($product_props as $prop)
			$product->$prop = $this->getFieldValue($product, $prop);

		$product->name['class'] = 'updateCurrentText';
		if (!$product->id)
			$product->name['class'] .= ' copy2friendlyUrl';

		$product->manufacturer_name = Manufacturer::getNameById($product->id_manufacturer);

		$data->assign('ps_dimension_unit', Configuration::get('PS_DIMENSION_UNIT'));
		$data->assign('ps_weight_unit', Configuration::get('PS_WEIGHT_UNIT'));
		// @todo : initPack should not be called like this
		$this->initPack($product);

		/*
		 * Form for add a virtual product like software, mp3, etc...
		 */
		$productDownload = new ProductDownload();
		if ($id_product_download = $productDownload->getIdFromIdProduct($this->getFieldValue($product, 'id')))
			$product->{'product_download'} = new ProductDownload($id_product_download);

		$this->displayInitInformationAndAttachment();
		// @todo price.js is used in information .. for now
		$this->addJs(_PS_JS_DIR_.'price.js');

		// @todo handle is_virtual with the value of the product
		$exists_file = realpath(_PS_DOWNLOAD_DIR_).'/'.$product->productDownload->filename;
		$data->assign('product_downloaded', $product->productDownload->id && !empty($product->productDownload->display_filename));

		if (!file_exists($exists_file)
			&& !empty($product->productDownload->display_filename)
			&& !empty($product->cache_default_attribute))
		{
			$msg = sprintf(Tools::displayError('This file "%s" is missing'), $product->productDownload->display_filename);
		}
		else
			$msg = '';

		$data->assign('download_product_file_missing', $msg);
		$data->assign('download_dir_writable', ProductDownload::checkWritableDir());

		if (empty($product->cache_default_attribute))
		{
			$data->assign('show_file_input', !strval(Tools::getValue('virtual_product_filename')) OR $product->productDownload->id > 0);
			// found in informations and combination : to merge
			$data->assign('up_filename', strval(Tools::getValue('virtual_product_filename')));
			$display_filename = ($product->productDownload->id > 0) ? $product->productDownload->display_filename : htmlentities(Tools::getValue('virtual_product_name'), ENT_COMPAT, 'UTF-8');

			if (!$product->productDownload->id || !$product->productDownload->active)
				$hidden = 'display:none;';
			else $hidden ='';

			$product->productDownload->nb_downloadable = ($product->productDownload->id > 0) ? $product->productDownload->nb_downloadable : htmlentities(Tools::getValue('virtual_product_nb_downloable'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->date_expiration = ($product->productDownload->id > 0) ? ((!empty($product->productDownload->date_expiration) && $product->productDownload->date_expiration != '0000-00-00 00:00:00') ? date('Y-m-d', strtotime($product->productDownload->date_expiration)) : '' ) : htmlentities(Tools::getValue('virtual_product_expiration_date'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->nb_days_accessible = ($product->productDownload->id > 0) ? $product->productDownload->nb_days_accessible : htmlentities(Tools::getValue('virtual_product_nb_days'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->is_shareable = $product->productDownload->id > 0 && $product->productDownload->is_shareable;
		}
		else
		{
			$error ='';
			$product_attribute = ProductDownload::getAttributeFromIdProduct($this->getFieldValue($product, 'id'));
			foreach ($product_attribute as $p)
			{
				$productDownloadAttribute = new ProductDownload($p['id_product_download']);
				$exists_file2 = realpath(_PS_DOWNLOAD_DIR_).'/'.$productDownloadAttribute->filename;
				if (!file_exists($exists_file2) && !empty($productDownloadAttribute->id_product_attribute))
				{
					$msg = sprintf(Tools::displayError('This file "%s" is missing'), $productDownloadAttribute->display_filename);
					$error .= '<p class="alert" id="file_missing">
						<b>'.$msg.' :<br/>
						'.realpath(_PS_DOWNLOAD_DIR_) .'/'. $productDownloadAttribute->filename.'</b>
					</p>';
				}
			}
			$data->assign('error_product_download', $error);
		}

		// prices part
		$data->assign('currency', $currency = $this->context->currency);
		$data->assign('tax_rules_groups', TaxRulesGroup::getTaxRulesGroups(true));
		$data->assign('taxesRatesByGroup', TaxRulesGroup::getAssociatedTaxRatesByIdCountry($this->context->country->id));
		$data->assign('ecotaxTaxRate', Tax::getProductEcotaxRate());
		$data->assign('tax_exclude_taxe_option', Tax::excludeTaxeOption());

		$data->assign('ps_use_ecotax', Configuration::get('PS_USE_ECOTAX'));
		if ($product->unit_price_ratio != 0)
			$data->assign('unit_price', Tools::ps_round($product->price)/$product->unit_price_ratio);
		else
			$data->assign('unit_price', 0);

		$data->assign('ps_tax', Configuration::get('PS_TAX'));
		$data->assign('ps_stock_management', Configuration::get('PS_STOCK_MANAGEMENT'));
		$data->assign('has_attribute', $has_attribute);
		// Check if product has combination, to display the available date only for the product or for each combination
		if (Combination::isFeatureActive())
			$data->assign('countAttributes', (int)Db::getInstance()->getValue('SELECT COUNT(id_product) FROM '._DB_PREFIX_.'product_attribute WHERE id_product = '.(int)$product->id));

		$data->assign('ps_order_out_of_stock', Configuration::get('PS_ORDER_OUT_OF_STOCK'));

		$default_category = Tools::getValue('id_category', 1);
		$data->assign('default_category', $default_category);
		if (!$product->id)
		{
			$selectedCat = Category::getCategoryInformations(Tools::getValue('categoryBox', array($default_category)), $this->default_form_language);
		}
		else
		{
			if (Tools::isSubmit('categoryBox'))
				$selectedCat = Category::getCategoryInformations(Tools::getValue('categoryBox', array($default_category)), $this->default_form_language);
			else
				$selectedCat = Product::getProductCategoriesFull($product->id, $this->default_form_language);
		}
		$data->assign('selected_cat_ids', implode(',', array_keys($selectedCat)));
		$data->assign('selected_cat', $selectedCat);

		$trads = array(
			'Home' => $this->l('Home'),
			'selected' => $this->l('selected'),
			'Collapse All' => $this->l('Collapse All'),
			'Expand All' => $this->l('Expand All'),
			'Check All' => $this->l('Check All'),
			'Uncheck All'  => $this->l('Uncheck All'),
			'search' => $this->l('Search a category')
		);
		$data->assign('category_tree', Helper::renderAdminCategorieTree($trads, $selectedCat, 'categoryBox', false, true));

		$images = Image::getImages($this->context->language->id, $product->id);

		foreach($images as $k => $image)
			$images[$k]['src'] = $this->context->link->getImageLink($product->link_rewrite[$this->context->language->id], $product->id.'-'.$image['id_image'], 'small');
		$data->assign('ps_ssl_enabled', Configuration::get('PS_SSL_ENABLED'));
		$data->assign('images', $images);
		$data->assign('imagesTypes', ImageType::getImagesTypes('products'));

			$accessories = Product::getAccessoriesLight($this->context->language->id, $product->id);

			if ($postAccessories = Tools::getValue('inputAccessories'))
			{
				$postAccessoriesTab = explode('-', Tools::getValue('inputAccessories'));
				foreach ($postAccessoriesTab as $accessoryId)
					if (!$this->haveThisAccessory($accessoryId, $accessories) && $accessory = Product::getAccessoryById($accessoryId))
						$accessories[] = $accessory;
			}
			$data->assign('accessories', $accessories);
			$product->tags = Tag::getProductTags($product->id);


						$this->addJqueryPlugin('autocomplete');

		// TinyMCE
		$iso_tiny_mce = $this->context->language->iso_code;
		$iso_tiny_mce = (file_exists(_PS_JS_DIR_.'tiny_mce/langs/'.$iso_tiny_mce.'.js') ? $iso_tiny_mce : 'en');
		$data->assign('ad', dirname($_SERVER["PHP_SELF"]));
		$data->assign('iso_tiny_mce', $iso_tiny_mce);
		$categoryBox = Tools::getValue('categoryBox', array());
		$data->assign('product', $product);
		$data->assign('last_content', $content);
		$data->assign('token', $this->token);
		$data->assign($this->tpl_form_vars);
		$data->assign('link', $this->context->link);
		$this->tpl_form_vars['product'] = $product;
		$this->tpl_form_vars['custom_form'] = $this->context->smarty->createTemplate($this->tpl_form, $data)->fetch();
	}

||||||||	public function initFormInformations($product, $languages, $defaultLanguage)
	{
		$data = $this->context->smarty->createData();

		// autoload rich text editor (tiny mce)
		$iso = $this->context->language->iso_code;
		$this->tpl_form_vars['iso'] = file_exists(_PS_ROOT_DIR_.'/js/tiny_mce/langs/'.$iso.'.js') ? $iso : 'en';
		$this->tpl_form_vars['ad'] = dirname($_SERVER['PHP_SELF']);
		$this->tpl_form_vars['tinymce'] = true;
		$this->addJS(_PS_JS_DIR_.'admin-products.js');
		$this->addJS(_PS_JS_DIR_.'tiny_mce/tiny_mce.js');
		$this->addJS(_PS_JS_DIR_.'tinymce.inc.js');

		$currency = $this->context->currency;
		$data->assign('languages',$languages);
		$this->object = $product;
		$this->display = 'edit';
		$content = '';
		$has_attribute = $product->hasAttributes();
		$cover = Product::getCover($product->id);
		$this->_applyTaxToEcotax($product);

		/*
		* Form for add a virtual product like software, mp3, etc...
		*/
		$productDownload = new ProductDownload();
		if ($id_product_download = $productDownload->getIdFromIdProduct($this->getFieldValue($product, 'id')))
			$productDownload = new ProductDownload($id_product_download);
		$product->{'productDownload'} = $productDownload;

		$this->displayInitInformationAndAttachment();


		$cache_default_attribute = (int) $this->getFieldValue($product, 'cache_default_attribute');
		$data->assign('feature_shop_active', Shop::isFeatureActive());
		// @todo : uses the helperform
		$data->assign('displayAssoShop', $this->displayAssoShop());
		$data->assign('carrier_list', $this->getCarrierList());


		$product_props = array();
		// global informations
		array_push($product_props, 'reference', 'ean13', 'upc',
		'available_for_order', 'show_price', 'online_only',
		'id_manufacturer'
		);

		// specific / detailled information
		array_push($product_props,
		// physical product
		'width', 'height', 'weight', 'active',
		// virtual product
		'is_virtual', 'cache_default_attribute',
		// customization
		'uploadable_files', 'text_fields'
		);
		// prices
		array_push($product_props,
			'price', 'wholesale_price', 'id_tax_rules_group', 'unit_price_ratio', 'on_sale',
			'unity', 'minimum_quantity', 'additional_shipping_cost',
			'available_now', 'available_later', 'available_date', 'out_of_stock'
		);

		if(Configuration::get('PS_USE_ECOTAX'))
			array_push($product_props, 'ecotax');

		foreach($product_props as $prop)
			$product->$prop = $this->getFieldValue($product, $prop);

		$product->name['class'] = 'updateCurrentText';
		if (!$product->id)
			$product->name['class'] .= ' copy2friendlyUrl';

		$product->manufacturer_name = Manufacturer::getNameById($product->id_manufacturer);

		$data->assign('ps_dimension_unit', Configuration::get('PS_DIMENSION_UNIT'));
		$data->assign('ps_weight_unit', Configuration::get('PS_WEIGHT_UNIT'));
		// @todo : initPack should not be called like this
		$this->initPack($product);

		/*
		 * Form for add a virtual product like software, mp3, etc...
		 */
		$productDownload = new ProductDownload();
		if ($id_product_download = $productDownload->getIdFromIdProduct($this->getFieldValue($product, 'id')))
			$product->{'product_download'} = new ProductDownload($id_product_download);

		$this->displayInitInformationAndAttachment();
		// @todo price.js is used in information .. for now
		$this->addJs(_PS_JS_DIR_.'price.js');

		// @todo handle is_virtual with the value of the product
		$exists_file = realpath(_PS_DOWNLOAD_DIR_).'/'.$product->productDownload->filename;
		$data->assign('product_downloaded', $product->productDownload->id && !empty($product->productDownload->display_filename));

		if (!file_exists($exists_file)
			&& !empty($product->productDownload->display_filename)
			&& !empty($product->cache_default_attribute))
		{
			$msg = sprintf(Tools::displayError('This file "%s" is missing'), $product->productDownload->display_filename);
		}
		else
			$msg = '';

		$data->assign('download_product_file_missing', $msg);
		$data->assign('download_dir_writable', ProductDownload::checkWritableDir());

		if (empty($product->cache_default_attribute))
		{
			$data->assign('show_file_input', !strval(Tools::getValue('virtual_product_filename')) OR $product->productDownload->id > 0);
			// found in informations and combination : to merge
			$data->assign('up_filename', strval(Tools::getValue('virtual_product_filename')));
			$display_filename = ($product->productDownload->id > 0) ? $product->productDownload->display_filename : htmlentities(Tools::getValue('virtual_product_name'), ENT_COMPAT, 'UTF-8');

			if (!$product->productDownload->id || !$product->productDownload->active)
				$hidden = 'display:none;';
			else $hidden ='';

			$product->productDownload->nb_downloadable = ($product->productDownload->id > 0) ? $product->productDownload->nb_downloadable : htmlentities(Tools::getValue('virtual_product_nb_downloable'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->date_expiration = ($product->productDownload->id > 0) ? ((!empty($product->productDownload->date_expiration) && $product->productDownload->date_expiration != '0000-00-00 00:00:00') ? date('Y-m-d', strtotime($product->productDownload->date_expiration)) : '' ) : htmlentities(Tools::getValue('virtual_product_expiration_date'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->nb_days_accessible = ($product->productDownload->id > 0) ? $product->productDownload->nb_days_accessible : htmlentities(Tools::getValue('virtual_product_nb_days'), ENT_COMPAT, 'UTF-8');
			$product->productDownload->is_shareable = $product->productDownload->id > 0 && $product->productDownload->is_shareable;
		}
		else
		{
			$error ='';
			$product_attribute = ProductDownload::getAttributeFromIdProduct($this->getFieldValue($product, 'id'));
			foreach ($product_attribute as $p)
			{
				$productDownloadAttribute = new ProductDownload($p['id_product_download']);
				$exists_file2 = realpath(_PS_DOWNLOAD_DIR_).'/'.$productDownloadAttribute->filename;
				if (!file_exists($exists_file2) && !empty($productDownloadAttribute->id_product_attribute))
				{
					$msg = sprintf(Tools::displayError('This file "%s" is missing'), $productDownloadAttribute->display_filename);
					$error .= '<p class="alert" id="file_missing">
						<b>'.$msg.' :<br/>
						'.realpath(_PS_DOWNLOAD_DIR_) .'/'. $productDownloadAttribute->filename.'</b>
					</p>';
				}
			}
			$data->assign('error_product_download', $error);
		}

		// prices part
		$data->assign('currency', $currency = $this->context->currency);
		$data->assign('tax_rules_groups', TaxRulesGroup::getTaxRulesGroups(true));
		$data->assign('taxesRatesByGroup', TaxRulesGroup::getAssociatedTaxRatesByIdCountry($this->context->country->id));
		$data->assign('ecotaxTaxRate', Tax::getProductEcotaxRate());
		$data->assign('tax_exclude_taxe_option', Tax::excludeTaxeOption());

		$data->assign('ps_use_ecotax', Configuration::get('PS_USE_ECOTAX'));
		if ($product->unit_price_ratio != 0)
			$data->assign('unit_price', Tools::ps_round($product->price)/$product->unit_price_ratio);
		else
			$data->assign('unit_price', 0);

		$data->assign('ps_tax', Configuration::get('PS_TAX'));
		$data->assign('ps_stock_management', Configuration::get('PS_STOCK_MANAGEMENT'));
		$data->assign('has_attribute', $has_attribute);
		// Check if product has combination, to display the available date only for the product or for each combination
		if (Combination::isFeatureActive())
			$data->assign('countAttributes', (int)Db::getInstance()->getValue('SELECT COUNT(id_product) FROM '._DB_PREFIX_.'product_attribute WHERE id_product = '.(int)$product->id));

		$data->assign('ps_order_out_of_stock', Configuration::get('PS_ORDER_OUT_OF_STOCK'));

		$default_category = Tools::getValue('id_category', 1);
		$data->assign('default_category', $default_category);
		if (!$product->id)
		{
			$selectedCat = Category::getCategoryInformations(Tools::getValue('categoryBox', array($default_category)), $this->default_form_language);
		}
		else
		{
			if (Tools::isSubmit('categoryBox'))
				$selectedCat = Category::getCategoryInformations(Tools::getValue('categoryBox', array($default_category)), $this->default_form_language);
			else
				$selectedCat = Product::getProductCategoriesFull($product->id, $this->default_form_language);
		}
		$data->assign('selected_cat_ids', implode(',', array_keys($selectedCat)));
		$data->assign('selected_cat', $selectedCat);

		$trads = array(
			'Home' => $this->l('Home'),
			'selected' => $this->l('selected'),
			'Collapse All' => $this->l('Collapse All'),
			'Expand All' => $this->l('Expand All'),
			'Check All' => $this->l('Check All'),
			'Uncheck All'  => $this->l('Uncheck All'),
			'search' => $this->l('Search a category')
		);
		$data->assign('category_tree', Helper::renderAdminCategorieTree($trads, $selectedCat, 'categoryBox', false, true));

		$images = Image::getImages($this->context->language->id, $product->id);

		foreach($images as $k => $image)
			$images[$k]['src'] = $this->context->link->getImageLink($product->link_rewrite[$this->context->language->id], $product->id.'-'.$image['id_image'], 'small');
		$data->assign('ps_ssl_enabled', Configuration::get('PS_SSL_ENABLED'));
		$data->assign('images', $images);
		$data->assign('imagesTypes', ImageType::getImagesTypes('products'));

			$accessories = Product::getAccessoriesLight($this->context->language->id, $product->id);

			if ($postAccessories = Tools::getValue('inputAccessories'))
			{
				$postAccessoriesTab = explode('-', Tools::getValue('inputAccessories'));
				foreach ($postAccessoriesTab as $accessoryId)
					if (!$this->haveThisAccessory($accessoryId, $accessories) && $accessory = Product::getAccessoryById($accessoryId))
						$accessories[] = $accessory;
			}
			$data->assign('accessories', $accessories);
			$product->tags = Tag::getProductTags($product->id);


						$this->addJqueryPlugin('autocomplete');

		// TinyMCE
		$iso_tiny_mce = $this->context->language->iso_code;
		$iso_tiny_mce = (file_exists(_PS_JS_DIR_.'tiny_mce/langs/'.$iso_tiny_mce.'.js') ? $iso_tiny_mce : 'en');
		$data->assign('ad', dirname($_SERVER["PHP_SELF"]));
		$data->assign('iso_tiny_mce', $iso_tiny_mce);
		$categoryBox = Tools::getValue('categoryBox', array());
		$data->assign('product', $product);
		$data->assign('last_content', $content);
		$data->assign('token', $this->token);
		$data->assign($this->tpl_form_vars);
		$data->assign('link', $this->context->link);
		$this->tpl_form_vars['product'] = $product;
		$this->tpl_form_vars['custom_form'] = $this->context->smarty->createTemplate($this->tpl_form, $data)->fetch();
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)))
                (SCALAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))))
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_CONST)))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_STATIC_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (AST_CALL
                                                            (
                                                                (AST_CONST))))
                                                    (SCALAR))
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_CONST))
                                            (SCALAR))
                                        (AST_CAST
                                            (AST_PROP
                                                (AST_VAR))))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_VAR)
                                                        (NULL)))))
                                        (AST_PROP
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)
                    (AST_CONST)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CONST)))
                (SCALAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR))))))
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))))))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_CONST)))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_STATIC_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (AST_CALL
                                                            (
                                                                (AST_CONST))))
                                                    (SCALAR))
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_CONST))
                                            (SCALAR))
                                        (AST_CAST
                                            (AST_PROP
                                                (AST_VAR))))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_VAR)
                                                        (NULL)))))
                                        (AST_PROP
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)
                    (AST_CONST)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))))