	public function getProductsAfterDiscountsTaxExclExcludingEcotax()
	{
		$total_products = $this->total_products;
		$order_discount_tax_excl = $this->total_discount_tax_excl;

		foreach ($this->getOrder()->getCartRules() as $order_cart_rule)
		{
			if ($order_cart_rule['free_shipping'])
			{
				$order_discount_tax_excl -= $this->total_shipping_tax_excl;
				break;
			}

		}

		foreach ($this->getProductsDetail() as $details)
		{
			$total_products -= $details['ecotax'] * $details['product_quantity'];
		}

		return $total_products - $order_discount_tax_excl;
	}

	/**
	 * Returns the correct product taxes breakdown.
	 *
	 * @since 1.5
	 * @return array
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_BREAK
                            (NULL)))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))))||||||||