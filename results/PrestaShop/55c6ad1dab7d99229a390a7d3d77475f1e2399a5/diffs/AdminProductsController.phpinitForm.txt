	public function initForm()
	{
		$this->display = 'edit';
		$this->addJqueryUI('ui.datepicker');
		$this->context->smarty->assign('pos_select', (($tab = Tools::getValue('tabs')) ? $tab : '0'));
		$this->context->smarty->assign('token',$this->token);
		$this->context->smarty->assign('combinationImagesJs', $this->getCombinationImagesJs());
		$id_product = Tools::getvalue('id_product');
		$this->context->smarty->assign('form_action', $this->context->link->getAdminLink('AdminProducts').'&amp;id_product='.$id_product);
		$this->context->smarty->assign('id_product',$id_product);

		$this->context->smarty->assign('upload_max_filesize', ini_get('upload_max_filesize'));
		$this->context->smarty->assign('country_display_tax_label', $this->context->country->display_tax_label);

		// let's calculate this once for all
		if (!($obj = $this->loadObject(true)))
			throw new PrestashopException('object not loaded');
		$this->_displayDraftWarning($obj->active);
		return parent::initForm();
	}

||||||||	public function initForm()
	{
		$product = $this->object = new Product((int)(Tools::getValue('id_product')));
		// getLanguages init this->_languages
		$this->getLanguages();
		$languages = $this->_languages;
		$defaultLanguage = (int)(Configuration::get('PS_LANG_DEFAULT'));

		$this->tpl_form_vars['currentIndex'] = self::$currentIndex;
		$this->fields_form = array("pouet"=>"eh oui");
		$this->addJs(_PS_JS_DIR_.'attributesBack.js');
		$this->display = 'edit';
		$this->addJqueryUI('ui.datepicker');
		$this->tpl_form_vars['pos_select'] = ($tab = Tools::getValue('tabs')) ? $tab : '0';
		$this->tpl_form_vars['token'] = $this->token;
		$this->tpl_form_vars['combinationImagesJs'] = $this->getCombinationImagesJs();
		$id_product = Tools::getvalue('id_product');
		$this->tpl_form_vars['form_action'] = $this->context->link->getAdminLink('AdminProducts').'&amp;id_product='.$id_product;
		$this->tpl_form_vars['id_product'] = $id_product;

		$this->tpl_form_vars['upload_max_filesize'] = ini_get('upload_max_filesize');
		$this->tpl_form_vars['country_display_tax_label'] = $this->context->country->display_tax_label;

		// let's calculate this once for all
		if (!($obj = $this->loadObject(true)))
			throw new PrestashopException('object not loaded');
		$this->_displayDraftWarning($obj->active);
		$this->{'initForm'.$this->action}($this->object, $languages, $defaultLanguage);
		$this->tpl_form_vars['product'] = $this->object;
		if ($this->ajax)
			if (empty($this->tpl_form_vars['custom_form']))
				throw new PrestashopException('custom_form empty for action '.$this->action);
			else
				return $this->tpl_form_vars['custom_form'];
		return parent::initForm();
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_CALL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (
                    (AST_CAST
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_STATIC_PROP))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CONDITIONAL
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_STATIC_CALL)))