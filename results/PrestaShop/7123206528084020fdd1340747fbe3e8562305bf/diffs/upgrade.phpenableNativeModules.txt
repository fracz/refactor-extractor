||||||||        private function enableNativeModules()
        {
            $enableNativeModules = function () {
                $moduleManagerBuilder = ModuleManagerBuilder::getInstance();
                $moduleManagerRepository = $moduleManagerBuilder->buildRepository();
                $moduleManagerRepository->clearCache();

                $catalog = $moduleManagerBuilder::$adminModuleDataProvider->getCatalogModules();
                foreach ($catalog as $moduleName => $module) {
                    if ($module->categoryName == 'Natif') {
                        if (!$moduleManagerBuilder->build()->isInstalled($moduleName)) {
                            $this->logInfo("Installing native module ".$moduleName);
                            $module = $moduleManagerRepository->getModule($moduleName);
                            $module->onInstall();
                        } else {
                            $this->logInfo("Native module ".$moduleName." already installed");
                        }
                    }
                }
            };

            $enableNativeModules();
        }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_PROP
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (
                                                        (AST_VAR))))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (SCALAR)))))))))))))))
    (AST_CALL
        (AST_VAR)))