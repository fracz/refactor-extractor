||||||||        private function cleanCache()
        {
            // Settings updated, compile and cache directories must be emptied
            $tools_dir = rtrim(_PS_INSTALL_PATH_, '\\/').DIRECTORY_SEPARATOR.'..'.DIRECTORY_SEPARATOR.'tools'.DIRECTORY_SEPARATOR;
            $arrayToClean = array(
                $tools_dir.'smarty'.DIRECTORY_SEPARATOR.'cache',
                $tools_dir.'smarty'.DIRECTORY_SEPARATOR.'compile',
                $tools_dir.'smarty_v2'.DIRECTORY_SEPARATOR.'cache',
                $tools_dir.'smarty_v2'.DIRECTORY_SEPARATOR.'compile',
                $tools_dir.'app/cache/',
                $tools_dir.'cache/smarty/cache/',
                $tools_dir.'cache/smarty/compile/'
            );

            foreach ($arrayToClean as $dir) {
                if (file_exists($dir)) {
                    foreach (scandir($dir) as $file) {
                        if ($file[0] != '.' and $file != 'index.php' and $file != '.htaccess') {
                            if (is_file($dir.$file)) {
                                unlink($dir . $file);
                            } elseif (is_dir($dir.$file.DIRECTORY_SEPARATOR)) {
                                \Tools14::deleteDirectory($dir . $file . DIRECTORY_SEPARATOR, true);
                            }
                            $this->logInfo('[CLEANING CACHE] File %file% removed', null, array('%file%' => $file));
                        }
                    }
                } else {
                    $this->logWarning('[SKIP] directory "%directory%" does not exist and cannot be emptied.', null, array('%directory%' => str_replace($tools_dir, '', $dir)));
                }
            }

            if (file_exists(_PS_ROOT_DIR_.'/app/cache/dev/class_index.php')) {
                unlink(_PS_ROOT_DIR_.'/app/cache/dev/class_index.php');
            }
            if (file_exists(_PS_ROOT_DIR_.'/app/cache/prod/class_index.php')) {
                unlink(_PS_ROOT_DIR_.'/app/cache/prod/class_index.php');
            }

            // Clear XML files
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/blog-fr.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/blog-fr.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/default_country_modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/default_country_modules_list.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/modules_list.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/modules_native_addons.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/modules_native_addons.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/must_have_modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/must_have_modules_list.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/tab_modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/tab_modules_list.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/trusted_modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/trusted_modules_list.xml');
            }
            if (file_exists(_PS_ROOT_DIR_.'/config/xml/untrusted_modules_list.xml')) {
                unlink(_PS_ROOT_DIR_.'/config/xml/untrusted_modules_list.xml');
            }
        }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_CONST))
                        (SCALAR))
                    (AST_CONST))
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_FOREACH
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR)))
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (
                                                        (AST_CALL
                                                            (
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (AST_VAR))))))
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (AST_VAR))
                                                                (AST_CONST))))
                                                    (
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_VAR)
                                                                        (AST_VAR))
                                                                    (AST_CONST))
                                                                (AST_CONST))))))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)
                                                    (AST_CONST)
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_VAR)
                                                            (SCALAR))))))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_CONST)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)
                                                (AST_VAR)))
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR))))))))