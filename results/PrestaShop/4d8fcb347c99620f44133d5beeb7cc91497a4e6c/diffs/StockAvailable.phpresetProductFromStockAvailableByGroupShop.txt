||||||||	public static function resetProductFromStockAvailableByGroupShop($group_shop)
	{
		if ($group_shop->share_stock)
		{
			$id_shops_list = implode(', ', Shop::getIdShopsByIdGroupShop($group_shop->id));

			return Db::getInstance()->execute('
				DELETE FROM '._DB_PREFIX_.'stock_available
				WHERE id_shop IN ('.$id_shops_list.')'
			);
		}
		else
		{
			return Db::getInstance()->execute('
				DELETE FROM '._DB_PREFIX_.'stock_available
				WHERE id_group_shop = '.$group_shop->id
			);
		}
	}

	/**
	 * For a given product, tells if it depends on the physical (usable) stock
	 *
	 * @param int $id_product
	 * @param int $id_shop Optional : gets context if null @see Context::getContext()
	 * @return bool : depends on stock @see $depends_on_stock
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CONST))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))))))))