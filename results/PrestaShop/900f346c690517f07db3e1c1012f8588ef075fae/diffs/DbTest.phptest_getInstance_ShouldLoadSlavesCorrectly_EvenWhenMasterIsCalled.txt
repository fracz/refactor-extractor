||||||||    public function test_getInstance_ShouldLoadSlavesCorrectly_EvenWhenMasterIsCalled()
    {
        $this->loadSlaves(2);

        $this->master = Db::getInstance();

        //When
        $this->first_slave = Db::getInstance(_PS_USE_SQL_SLAVE_);
        $this->second_slave = Db::getInstance(_PS_USE_SQL_SLAVE_);

        //Then
        $this->assertNotSame($this->first_slave, $this->second_slave);
        $this->assertNotSame($this->master, $this->second_slave);
        $this->assertNotSame($this->master, $this->first_slave);

        $this->assert_TwoCallsOnFirst_ThenOneOnSecondSlave();

        $this->assertSame($this->master, Db::getInstance());

        $this->assert_TwoCallsOnFirst_ThenOneOnSecondSlave();
        $this->assert_TwoCallsOnFirst_ThenOneOnSecondSlave();
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))