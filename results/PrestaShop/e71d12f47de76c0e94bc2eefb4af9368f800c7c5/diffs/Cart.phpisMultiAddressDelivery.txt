	public function isMultiAddressDelivery()
	{
		$sql = new DbQuery();
		$sql->select('count(distinct id_address_delivery)');
		$sql->from('cart_product as cp');
		$sql->where('id_cart = '.(int)$this->id);

		return (boolean)(Db::getInstance()->getValue($sql) > 1);
	}

	/**
	 * Get all delivery addresses object for the current cart
	 */
||||||||	public function isMultiAddressDelivery()
	{
		$sql = new DbQuery();
		$sql->select('count(distinct id_address_delivery)');
		$sql->from('cart_product as cp');
		$sql->where('id_cart = '.(int)$this->id);

		return Db::getInstance()->getValue($sql) > 1;
	}

	/**
	 * Get all delivery addresses object for the current cart
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CAST
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CAST
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR)))
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CAST
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)))
            (SCALAR))))