	static public function getCustomerDiscounts($id_lang, $id_customer, $active = false, $includeGenericOnes = true, $stock = false, Cart $cart = null)
    {
		if (!$cart)
			$cart = Context::getContext()->cart;
		$res = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
        SELECT d.*, dtl.`name` AS `type`, dl.`description`
		FROM `'._DB_PREFIX_.'discount` d
		LEFT JOIN `'._DB_PREFIX_.'discount_lang` dl ON (d.`id_discount` = dl.`id_discount` AND dl.`id_lang` = '.(int)($id_lang).')
		LEFT JOIN `'._DB_PREFIX_.'discount_type` dt ON dt.`id_discount_type` = d.`id_discount_type`
		LEFT JOIN `'._DB_PREFIX_.'discount_type_lang` dtl ON (dt.`id_discount_type` = dtl.`id_discount_type` AND dtl.`id_lang` = '.(int)($id_lang).')
		WHERE (`id_customer` = '.(int)($id_customer).'
		OR `id_group` IN (SELECT `id_group` FROM `'._DB_PREFIX_.'customer_group` WHERE `id_customer` = '.(int)($id_customer).')'.
		($includeGenericOnes ? ' OR (`id_customer` = 0 AND `id_group` = 0)' : '').')
		'.($active ? ' AND d.`active` = 1' : '').'
		'.($stock ? ' AND d.`quantity` != 0' : ''));

		foreach ($res as &$discount)
			if ($discount['quantity_per_user'])
			{
				$quantity_used = Order::getDiscountsCustomer($id_customer, $discount['id_discount']);
				if (isset($cart) AND $cart->id)
					$quantity_used += $cart->getDiscountsCustomer((int)($discount['id_discount']));
				$discount['quantity_for_user'] = $discount['quantity_per_user'] - $quantity_used;
			}
			else
				$discount['quantity_for_user'] = 0;
		return $res;
	}

||||||||	public static function getCustomerDiscounts($id_lang, $id_customer, $active = false, $includeGenericOnes = true, $hasStock = false, Cart $cart = null)
    {
		if (!self::isFeatureActive())
			return array();

    	if (!$cart)
			$cart = Context::getContext()->cart;

		$sql = '
        SELECT d.*, dtl.`name` AS `type`, dl.`description`
		FROM `'._DB_PREFIX_.'discount` d
		LEFT JOIN `'._DB_PREFIX_.'discount_lang` dl ON (d.`id_discount` = dl.`id_discount` AND dl.`id_lang` = '.(int)($id_lang).')
		LEFT JOIN `'._DB_PREFIX_.'discount_type` dt ON dt.`id_discount_type` = d.`id_discount_type`
		LEFT JOIN `'._DB_PREFIX_.'discount_type_lang` dtl ON (dt.`id_discount_type` = dtl.`id_discount_type` AND dtl.`id_lang` = '.(int)($id_lang).')
		WHERE (d.`id_customer` = '.(int)$id_customer.'
		';

		// Group clause
		if (Group::isFeatureActive())
			$sql .= 'OR d.`id_group` IN (
				SELECT `id_group`
				FROM `'._DB_PREFIX_.'customer_group` cg
				WHERE cg.`id_customer` = '.(int)$id_customer.'
			)';
		else
			$sql .= 'OR d.`id_group` = 1';

		if ($includeGenericOnes)
			$sql .= 'OR (d.`id_customer` = 0 AND d.`id_group` = 0)';

		$sql .= ')'; // close parenthsis openned befor d.`id_customer`

		if ($active)
			$sql .= ' AND d.`active` = 1';

		if ($hasStock)
			$sql .= ' AND d.`quantity` != 0';

		$res = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($sql);

		foreach ($res as &$discount)
			if ($discount['quantity_per_user'])
			{
				$quantity_used = Order::getDiscountsCustomer($id_customer, $discount['id_discount']);
				if (isset($cart) AND $cart->id)
					$quantity_used += $cart->getDiscountsCustomer((int)($discount['id_discount']));
				$discount['quantity_for_user'] = $discount['quantity_per_user'] - $quantity_used;
			}
			else
				$discount['quantity_for_user'] = 0;
		return $res;
	}

	/**
	 *
	 * @param int $id_customer
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_BINARY_OP
                                                                                (AST_BINARY_OP
                                                                                    (AST_BINARY_OP
                                                                                        (AST_BINARY_OP
                                                                                            (AST_BINARY_OP
                                                                                                (AST_BINARY_OP
                                                                                                    (AST_BINARY_OP
                                                                                                        (AST_BINARY_OP
                                                                                                            (SCALAR)
                                                                                                            (AST_CONST))
                                                                                                        (SCALAR))
                                                                                                    (AST_CONST))
                                                                                                (SCALAR))
                                                                                            (AST_CAST
                                                                                                (AST_VAR)))
                                                                                        (SCALAR))
                                                                                    (AST_CONST))
                                                                                (SCALAR))
                                                                            (AST_CONST))
                                                                        (SCALAR))
                                                                    (AST_CAST
                                                                        (AST_VAR)))
                                                                (SCALAR))
                                                            (AST_CAST
                                                                (AST_VAR)))
                                                        (SCALAR))
                                                    (AST_CONST))
                                                (SCALAR))
                                            (AST_CAST
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_CONDITIONAL
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR))
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_ISSET
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CAST
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR)))))))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_CONST))
                                                            (SCALAR))
                                                        (AST_CONST))
                                                    (SCALAR))
                                                (AST_CAST
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_CONST))
                            (SCALAR))
                        (AST_CAST
                            (AST_VAR)))
                    (SCALAR))
                (AST_CAST
                    (AST_VAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CAST
                                (AST_VAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_ISSET
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CAST
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR)))))))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))