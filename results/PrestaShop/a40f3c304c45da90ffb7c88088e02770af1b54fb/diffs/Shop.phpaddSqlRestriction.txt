	public function addSqlRestriction($share = false, $alias = null, $type = 'shop')
	{
		if ($type != 'shop' && $type != 'group_shop')
			$type = 'shop';

		if ($alias)
			$alias .= '.';

		$restriction = '';
		$shop_id = $this->getID();
		$shop_group_id = $this->getGroupID();

		if ($type == 'group_shop')
		{
			if ($shop_id)
				$restriction = ' AND '.$alias.'id_group_shop = '.Shop::getGroupFromShop($shop_id).' ';
			else if ($shop_group_id)
				$restriction = ' AND '.$alias.'id_group_shop = '.$shop_group_id.' ';
		}
		else
		{
			if ($shop_group_id && ($share == Shop::SHARE_CUSTOMER || $share == Shop::SHARE_ORDER))
				$restriction = ' AND '.$alias.'id_group_shop = '.$shop_group_id.' AND '.$alias.'id_shop = 0';
			else if ($shop_id || $shop_group_id)
				$restriction = ' AND '.$alias.'id_shop IN ('.implode(', ', $this->getListOfID($share)).') ';
			//else if ($share == Shop::SHARE_STOCK)
			//	$restriction = ' AND '.$alias.'id_shop = '.$this->getID(true);
		}
		return $restriction;
	}

	/**
	 * Add an SQL JOIN in query between a table and its associated table in multishop
	 *
	 * @param string $table Table name (E.g. product, module, etc.)
	 * @param string $alias Alias of table
	 * @param bool $inner_join Use or not INNER JOIN
	 * @param Context $context
	 * @return string
	 */
||||||||	public function addSqlRestriction($share = false, $alias = null, $type = 'shop')
	{
		if ($type != 'shop' && $type != 'group_shop')
			$type = 'shop';

		if ($alias)
			$alias .= '.';

		$restriction = '';
		$shop_id = $this->getID();
		$shop_group_id = $this->getGroupID();

		if ($type == 'group_shop')
		{
			if ($shop_id)
				$restriction = ' AND '.$alias.'id_group_shop = '.Shop::getGroupFromShop($shop_id).' ';
			else if ($shop_group_id)
				$restriction = ' AND '.$alias.'id_group_shop = '.$shop_group_id.' ';
		}
		else
		{
			if ($shop_id || $shop_group_id)
				$restriction = ' AND '.$alias.'id_shop IN ('.implode(', ', $this->getListOfID($share)).') ';
			//else if ($share == Shop::SHARE_STOCK)
			//	$restriction = ' AND '.$alias.'id_shop = '.$this->getID(true);
		}

		return $restriction;
	}

	/**
	 * Add an SQL JOIN in query between a table and its associated table in multishop
	 *
	 * @param string $table Table name (E.g. product, module, etc.)
	 * @param string $alias Alias of table
	 * @param bool $inner_join Use or not INNER JOIN
	 * @param Context $context
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (SCALAR)))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR))))))
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (SCALAR)))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))))
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))