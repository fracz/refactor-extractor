    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        if (!$this->preSetData) {
            // avoid infinite call to PRE_SET_DATA event
            $this->preSetData = true;

            $preSetDataListener = function (FormEvent $event) use ($options) {
                $form = $event->getForm();
                $data = $event->getData();
                // settings selected data
                $options['choices'] = is_array($data) || $data instanceof \Traversable ? $data : array($data);
                // redefine form and choices option
                $form->getParent()->add($form->getName(), __CLASS__, $options);
            };

            $builder->addEventListener(FormEvents::PRE_SET_DATA, $preSetDataListener);
        }

        if (!$this->preSubmit) {
            $self = $this;
            $preSubmitListener = function (FormEvent $event) use ($self, $options) {
                // avoid infinite call to PRE_SUBMIT event
                $self->preSubmit = true;

                $form = $event->getForm();
                $data = $event->getData();
                // normalize data choices
                $normData = $options['em']->getRepository($options['class'])->findBy(array(
                    $options['id_reader']->getIdField() => $data
                ));
                // settings selected data
                $options['choices'] = $normData;

                // redefine form and choices option
                $form->getParent()->add($form->getName(), __CLASS__, $options);
                // submit data to new form
                $form->getParent()->get($form->getName())->submit($data);
            };

            $builder->addEventListener(FormEvents::PRE_SUBMIT, $preSubmitListener);
        }
    }

    /**
     * {@inheritdoc}
     */
||||||||    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $preSetDataListener = function (FormEvent $event) use ($options) {
            $form = $event->getForm();
            $data = $event->getData();
            // adjust inherited options
            $options['compound'] = false;
            // normalize choices list
            $options['choices'] = is_array($data) || $data instanceof \Traversable ? $data : array($data);
            // create autocomplete form field
            $form->add('autocomplete', 'Symfony\Bridge\Doctrine\Form\Type\EntityType', $options);
        };

        $preSubmitListener = function (FormEvent $event) {
            $form = $event->getForm();
            $data = $event->getData();
            // reuse autocomplete options
            $options = $form->get('autocomplete')->getConfig()->getOptions();
            // replace initial choices with submitted data
            $options['choices'] = $options['em']->getRepository($options['class'])->findBy(array(
                $options['id_reader']->getIdField() => $data['autocomplete'],
            ));
            // recreate autocomplete form field with new choices list
            $form->add('autocomplete', 'Symfony\Bridge\Doctrine\Form\Type\EntityType', $options);
        };

        $builder
            ->addEventListener(FormEvents::PRE_SET_DATA, $preSetDataListener)
            ->addEventListener(FormEvents::PRE_SUBMIT, $preSubmitListener)
            ->addModelTransformer(new CallbackTransformer(
                // transforms an entity to compound array
                function ($entity) {
                    return array('autocomplete' => $entity);
                },
                // transforms a compound array to entity
                function (array $compound) {
                    return $compound['autocomplete'];
                }
            ));
    }

    /**
     * {@inheritdoc}
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_INSTANCEOF
                                            (AST_VAR)))
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_MAGIC_CONST)
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))))))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_MAGIC_CONST)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_INSTANCEOF
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR)))
        (
            (AST_NEW
                (
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))))
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))))))