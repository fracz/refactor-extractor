    public static function init() {
        static $initialized = false;

        if (!$initialized) {
            // Handle errors internally
            set_error_handler(array(__CLASS__, 'handleError'));

            // Handle exceptions internally
            set_exception_handler(array(__CLASS__, 'handleException'));

            // Turn off notices
            error_reporting (E_ALL ^ E_NOTICE);

            // Fix magic quotes
            if (get_magic_quotes_gpc()) {
                $func = function ($value) use (&$func) {
                    return is_array($value) ? array_map($func, $value) : stripslashes($value);
                };
                $_GET = array_map($func, $_GET);
                $_POST = array_map($func, $_POST);
                $_COOKIE = array_map($func, $_COOKIE);
            }

            // Load core components
            self::$loader = new \flight\core\Loader();
            self::$dispatcher = new \flight\core\Dispatcher();

            // Register default components
            self::$loader->addDirectory(dirname(__DIR__));
            self::$loader->register('request', '\flight\net\Request');
            self::$loader->register('response', '\flight\net\Response');
            self::$loader->register('router', '\flight\net\Router');
            self::$loader->register('view', '\flight\template\View', array(), function($view){
                $view->path = Flight::get('flight.views.path') ?: './views';
            });

            // Register framework methods
            $methods = array(
                'start','stop','route','halt','error','notFound',
                'render','redirect','etag','lastModified','json'
            );

            foreach ($methods as $name) {
                self::$dispatcher->set($name, array(__CLASS__, '_'.$name));
            }

            // Enable output buffering
            ob_start();

            $initialized = true;
        }
    }

    /**
     * Custom error handler.
     */
||||||||    public static function init() {
        static $initialized = false;

        if (!$initialized) {
            // Handle errors internally
            set_error_handler(array(__CLASS__, 'handleError'));

            // Handle exceptions internally
            set_exception_handler(array(__CLASS__, 'handleException'));

            // Turn off notices
            error_reporting (E_ALL ^ E_NOTICE);

            // Fix magic quotes
            if (get_magic_quotes_gpc()) {
                $func = function ($value) use (&$func) {
                    return is_array($value) ? array_map($func, $value) : stripslashes($value);
                };
                $_GET = array_map($func, $_GET);
                $_POST = array_map($func, $_POST);
                $_COOKIE = array_map($func, $_COOKIE);
            }

            // Load core components
            self::$loader = new \flight\core\Loader();
            self::$dispatcher = new \flight\core\Dispatcher();

            // Initialize autoloading
            self::$loader->init();
            self::$loader->addDirectory(dirname(__DIR__));

            // Register default components
            self::$loader->register('request', '\flight\net\Request');
            self::$loader->register('response', '\flight\net\Response');
            self::$loader->register('router', '\flight\net\Router');
            self::$loader->register('view', '\flight\template\View', array(), function($view){
                $view->path = Flight::get('flight.views.path');
            });

            // Register framework methods
            $methods = array(
                'start','stop','route','halt','error','notFound',
                'render','redirect','etag','lastModified','json'
            );
            foreach ($methods as $name) {
                self::$dispatcher->set($name, array(__CLASS__, '_'.$name));
            }

            // Default settings
            self::set('flight.views.path', './views');
            self::set('flight.log_errors', false);

            // Enable output buffering
            ob_start();

            $initialized = true;
        }
    }

    /**
     * Custom error handler.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLOSURE
                                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_CONDITIONAL
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_CALL
                            (
                                (AST_MAGIC_CONST)))))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_ARRAY)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONDITIONAL
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (NULL)
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_MAGIC_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (NULL)))))))
                (AST_CALL)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CLOSURE
                                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_CONDITIONAL
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_CALL
                            (
                                (AST_MAGIC_CONST)))))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_ARRAY)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_MAGIC_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (NULL)))))))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_CALL)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))))