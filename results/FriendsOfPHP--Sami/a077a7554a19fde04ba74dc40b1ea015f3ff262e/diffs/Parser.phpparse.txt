    public function parse(Project $project, $callback = null)
    {
        $step = 0;
        $steps = iterator_count($this->iterator);
        $context = $this->parser->getContext();
        $transaction = new Transaction($project);
        foreach ($this->iterator as $file) {
            ++$step;

            $code = file_get_contents($file);
            $hash = sha1($code);
            if ($transaction->hasHash($hash)) {
                continue;
            }

            $context->enterFile((string) $file, $hash);

            $this->parser->parse($code);

            if (null !== $callback) {
                call_user_func($callback, Message::PARSE_ERROR, $context->getErrors());
            }

            foreach ($context->leaveFile() as $class) {
                if (null !== $callback) {
                    call_user_func($callback, Message::PARSE_CLASS, array(floor($step / $steps * 100), $class));
                }

                foreach ($this->sourceDir as $dir) {
                    if ($file !== ($plainFile = str_replace($dir, '', $file))) {
                        $class->setPlainFile($plainFile);
                        break;
                    }
                }

                $project->addClass($class);
                $transaction->addClass($class);
                $this->store->writeClass($project, $class);
            }
        }

        // cleanup
        foreach ($transaction->getRemovedClasses() as $class) {
            $project->removeClass(new LazyClassReflection($class));
            $this->store->removeClass($project, $class);
        }

        // visit each class for stuff that can only be done when all classes are parsed
        $modified = $this->traverser->traverse($project);
        foreach ($modified as $class) {
            $this->store->writeClass($project, $class);
        }

        return $transaction;
    }

||||||||    public function parse(Project $project, $callback = null)
    {
        $step = 0;
        $steps = iterator_count($this->iterator);
        $context = $this->parser->getContext();
        $transaction = new Transaction($project);
        foreach ($this->iterator as $file) {
            ++$step;

            $code = file_get_contents($file);
            $hash = sha1($code);
            if ($transaction->hasHash($hash)) {
                continue;
            }

            $context->enterFile((string) $file, $hash);

            $this->parser->parse($code);

            if (null !== $callback) {
                call_user_func($callback, Message::PARSE_ERROR, $context->getErrors());
            }

            foreach ($context->leaveFile() as $class) {
                if (null !== $callback) {
                    call_user_func($callback, Message::PARSE_CLASS, array(floor($step / $steps * 100), $class));
                }

                $project->addClass($class);
                $transaction->addClass($class);
                $this->store->writeClass($project, $class);
            }
        }

        // cleanup
        foreach ($transaction->getRemovedClasses() as $class) {
            $project->removeClass(new LazyClassReflection($class));
            $this->store->removeClass($project, $class);
        }

        // visit each class for stuff that can only be done when all classes are parsed
        $modified = $this->traverser->traverse($project);
        foreach ($modified as $class) {
            $this->store->writeClass($project, $class);
        }

        return $transaction;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_PRE_INC
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CAST
                        (AST_VAR))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR))))
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))))))))
                    (AST_FOREACH
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR)
                                                    (AST_VAR)))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (AST_BREAK
                                            (NULL)))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_PRE_INC
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CAST
                        (AST_VAR))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR))))
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))