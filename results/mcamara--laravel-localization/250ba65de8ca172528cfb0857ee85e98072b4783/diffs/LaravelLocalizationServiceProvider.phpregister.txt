	public function register()
	{

        Route::filter('LaravelLocalizationRedirectFilter', function()
        {
            global $app;
            $currentLocale = $app['laravellocalization']->getCurrentLocale();
            $defaultLocale = $app['laravellocalization']->getDefault();
            $params = explode('/', Request::path());
            if (count($params) > 0)
            {
                $localeCode = $params[0];
                $locales = $app['laravellocalization']->getSupportedLocales();

                // Save any flashed data for redirect
                Session::reflash();

                if (!empty($locales[$localeCode]))
                {
                    if ($localeCode === $defaultLocale && $app['laravellocalization']->hideDefaultLocaleInURL())
                    {
                        return Redirect::to($app['laravellocalization']->getNonLocalizedURL(), 307)->header('Vary','Accept-Language');
                    }
                }
                else if ($currentLocale !== $defaultLocale || !$app['laravellocalization']->hideDefaultLocaleInURL())
                {
                    // If the current url does not contain any locale
                    // The system redirect the user to the very same url "localized"
                    // we use the current locale to redirect him
                    return Redirect::to($app['laravellocalization']->getLocalizedURL(), 307)->header('Vary','Accept-Language');
                }
            }
        });

        /**
         * 	This filter would set the translated route name
         */
        Route::filter('LaravelLocalizationRoutes', function()
        {
            global $app;
            $router = $app['router'];
            $routeName = $app['laravellocalization']->getRouteNameFromAPath($router->current()->uri());

            $app['laravellocalization']->setRouteName($routeName);
            return;
        });

		$this->app['config']->package('mcamara/laravel-localization', __DIR__.'/../config');

		$this->app['laravellocalization'] = $this->app->share(function($app)
		{
			return new LaravelLocalization($app['config'], $app['view'], $app['translator']);
		});
	}

	/**
	 * Get the services provided by the provider.
	 *
	 * @return array
	 */
||||||||	public function register()
	{

        Route::filter('LaravelLocalizationRedirectFilter', function()
        {
            global $app;
            $currentLocale = $app['laravellocalization']->getCurrentLocale();
            $defaultLocale = $app['laravellocalization']->getDefault();
            $params = explode('/', Request::path());
            if (count($params) > 0)
            {
                $localeCode = $params[0];
                $locales = $app['laravellocalization']->getSupportedLocales();
                $hideDefaultLocale = $app['laravellocalization']->hideDefaultLocaleInURL();
                $redirection = false;

                if (!empty($locales[$localeCode]))
                {
                    if ($localeCode === $defaultLocale && $hideDefaultLocale)
                    {
                        $redirection = $app['laravellocalization']->getNonLocalizedURL();
                    }
                }
                else if ($currentLocale !== $defaultLocale || !$hideDefaultLocale)
                {
                    // If the current url does not contain any locale
                    // The system redirect the user to the very same url "localized"
                    // we use the current locale to redirect him
                    $redirection = $app['laravellocalization']->getLocalizedURL();
                }

                if($redirection)
                {
                    // Save any flashed data for redirect
                    Session::reflash();
                    return Redirect::to($redirection, 307)->header('Vary','Accept-Language');
                }
            }
        });

        /**
         * 	This filter would set the translated route name
         */
        Route::filter('LaravelLocalizationRoutes', function()
        {
            global $app;
            $router = $app['router'];
            $routeName = $app['laravellocalization']->getRouteNameFromAPath($router->current()->uri());

            $app['laravellocalization']->setRouteName($routeName);
            return;
        });

		$this->app['config']->package('mcamara/laravel-localization', __DIR__.'/../config');

		$this->app['laravellocalization'] = $this->app->share(function($app)
		{
			return new LaravelLocalization($app['config'], $app['view'], $app['translator']);
		});
	}

	/**
	 * Get the services provided by the provider.
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_GLOBAL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_STATIC_CALL)
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_METHOD_CALL
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR))))
                                                    (
                                                        (AST_RETURN
                                                            (AST_METHOD_CALL
                                                                (AST_STATIC_CALL
                                                                    (
                                                                        (AST_METHOD_CALL
                                                                            (AST_DIM
                                                                                (AST_VAR)
                                                                                (SCALAR)))
                                                                        (SCALAR)))
                                                                (
                                                                    (SCALAR)
                                                                    (SCALAR)))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_UNARY_OP
                                                            (AST_METHOD_CALL
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR)))))
                                                    (
                                                        (AST_RETURN
                                                            (AST_METHOD_CALL
                                                                (AST_STATIC_CALL
                                                                    (
                                                                        (AST_METHOD_CALL
                                                                            (AST_DIM
                                                                                (AST_VAR)
                                                                                (SCALAR)))
                                                                        (SCALAR)))
                                                                (
                                                                    (SCALAR)
                                                                    (SCALAR)))))))))))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_GLOBAL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_GLOBAL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_VAR))
                                                    (
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (AST_METHOD_CALL
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR)))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_UNARY_OP
                                                            (AST_VAR)))
                                                    (
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (AST_METHOD_CALL
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))))))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_VAR)
                                        (
                                            (AST_STATIC_CALL)
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (
                                                        (SCALAR)
                                                        (SCALAR))))))))))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_GLOBAL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_NEW
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))))))