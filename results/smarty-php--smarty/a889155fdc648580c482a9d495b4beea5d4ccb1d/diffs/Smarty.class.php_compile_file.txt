    function _compile_file($file_path, $compile_path)
    {

		$_params = array('file_path' => $file_path);
		require_once(SMARTY_DIR . 'core/core.fetch_file_info.php');
        if (!smarty_core_fetch_file_info($_params, $this)) {
            return false;
        }

		$_file_source = $_params['file_source'];
		$_file_timestamp = $_params['file_timestamp'];

        if ($this->_compile_source($file_path, $_file_source, $_file_compiled)) {
			$_params = array('compile_path' => $compile_path, 'file_compiled' => $_file_compiled, 'file_timestamp' => $_file_timestamp);
			require_once(SMARTY_DIR . 'core/core.write_compiled_template.php');
			smarty_core_write_compiled_template($_params, $this);

            // if a _cache_serial was set, we also have to write an include-file:
            if ($this->_cache_serial = $smarty_compiler->_cache_serial) {
                $_params['plugins_code'] = $smarty_compiler->_plugins_code;
                $_params['include_file_path'] = $smarty_compiler->_cache_include;
                require_once(SMARTY_DIR . 'core/core.write_compiled_include.php');
                smarty_core_write_compiled_include($_params, $this);
            }
            return true;
        } else {
            $this->trigger_error($smarty_compiler->_error_msg);
            return false;
        }

    }

   /**
     * compile the given source
     *
     * @param string $file_path
     * @param string $file_source
     * @param string $file_compiled
     * @return boolean
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_RETURN
                    (AST_CONST))))))||||||||