    public function getTemplateSource($_template)
    {
        // return template string
        $_template->template_source = '';
        $fp = fopen($_template->resource_name,'r+');
        while (!feof($fp)) {
            $_template->template_source .= fgets($fp);
        }
        fclose($fp);

        return true;
    }

    /**
    * Return flag that this resource uses the compiler
    *
    * @return boolean true
    */
||||||||    public function getTemplateSource($_template)
    {
        // return template string
        $_template->template_source = '';
        $fp = fopen(str_replace(':', '://', $_template->template_resource),'r+');
        while (!feof($fp)) {
            $_template->template_source .= fgets($fp);
        }
        fclose($fp);

        return true;
    }

    /**
    * Return flag that this resource uses the compiler
    *
    * @return boolean true
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR))))
        (
            (AST_ASSIGN_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR))))
        (
            (AST_ASSIGN_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_CONST)))