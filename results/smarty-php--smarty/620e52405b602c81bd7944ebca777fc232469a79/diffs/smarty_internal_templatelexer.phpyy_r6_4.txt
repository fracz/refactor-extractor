    function yy_r6_4()
    {

        $to = strlen($this->data);
        preg_match("~" . $this->ldel . "\s*(([/])?strip\s*" . $this->rdel .
                   "|block\s+)~i", $this->data, $match, PREG_OFFSET_CAPTURE, $this->counter);
        if (isset($match[0][1])) {
            $to = $match[0][1];
        }
        $this->value = substr($this->data, $this->counter, $to - $this->counter);
        return false;
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_PROP
                (AST_VAR))
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONST)))||||||||