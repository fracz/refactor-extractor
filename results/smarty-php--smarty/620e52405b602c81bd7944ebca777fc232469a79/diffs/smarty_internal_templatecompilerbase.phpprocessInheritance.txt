||||||||    public function processInheritance($parser)
    {
        if (isset($this->extendsFileName)) {
            // child did use {extends}
            $name = $this->extendsFileName;
            $this->extendsFileName = null;
            if (!$this->inheritance_child) {
                // drop any output of child templates
                array_unshift($parser->current_buffer->subtrees,
                              new Smarty_Internal_ParseTree_Tag($parser, "<?php ob_start();?>\n"));
                $parser->current_buffer->append_subtree($parser, new Smarty_Internal_ParseTree_Tag($parser,
                                                                                                   "<?php ob_end_clean();?>\n"));
            }
            $parser->current_buffer->append_subtree($parser, new Smarty_Internal_ParseTree_Tag($parser,
                                                                                               $this->compileTag('include',
                                                                                                                 array($name,
                                                                                                                       array('scope' => 'parent'),
                                                                                                                       array('inline' => true)),
                                                                                                                 array('isChild' => $this->inheritance_child))));
            return;
        }
        // template list of extends: resource ?
        if (!empty($this->sources)) {
            if (!$this->inheritance_child) {
                // drop any output of child templates
                $parser->current_buffer->append_subtree($parser, new Smarty_Internal_ParseTree_Tag($parser,
                                                                                                   "<?php ob_start();?>\n"));
            }
            while (!empty($this->sources)) {
                $source = array_shift($this->sources);
                if (!$this->inheritance_child && empty($this->sources)) {
                    // drop any output of child templates
                    $parser->current_buffer->append_subtree($parser, new Smarty_Internal_ParseTree_Tag($parser,
                                                                                                       "<?php ob_end_clean();?>\n"));
                }
                $parser->current_buffer->append_subtree($parser, new Smarty_Internal_ParseTree_Tag($parser,
                                                                                                   $this->compileTag('include',
                                                                                                                     array("'{$source->resource}'",
                                                                                                                           array('scope' => 'parent'),
                                                                                                                           array('inline' => true)),
                                                                                                                     array('isChild' => $this->inheritance_child ||
                                                                                                                         !empty($this->sources)))));
            }
        }
    }

    /**
     * Compile Tag
     * This is a call back from the lexer/parser
     *
     * Save current prefix code
     * Compile tag
     * Merge tag prefix code with saved one
     * (required nested tags in attributes)
     *
     * @param  string $tag       tag name
     * @param  array  $args      array with tag attributes
     * @param  array  $parameter array with compilation parameter
     *
     * @throws SmartyCompilerException
     * @throws SmartyException
     * @return string compiled code
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR)))
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_CONST)
                                                        (SCALAR)))
                                                (NULL)))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)
                                    (AST_NEW
                                        (
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_WHILE
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_VAR)
                                            (AST_NEW
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (SCALAR)
                                                                (SCALAR)))
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CONST)
                                                                (SCALAR)))
                                                        (NULL)))
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (AST_UNARY_OP
                                                                (AST_EMPTY
                                                                    (AST_PROP
                                                                        (AST_VAR)))))
                                                        (SCALAR)))))))))))))))