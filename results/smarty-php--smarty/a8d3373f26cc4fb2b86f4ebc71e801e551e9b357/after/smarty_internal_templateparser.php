<?php

class TP_yyToken implements ArrayAccess
{
    public $string = '';

    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[ $offset ]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[ $offset ];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[ 0 ])) {
                $x = ($value instanceof TP_yyToken) ? $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[ $offset ] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[ $offset ] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[ $offset ]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;

#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";

    const Err2 = "Security error: Call to dynamic object member not allowed";

    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";

    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;

    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;

    /**
     * @var
     */
    public $yymajor;

    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;

    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;

    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;

    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;

    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;

    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;

    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;

    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;

    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;

    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;

    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;

    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;

    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();

    /**
     * security object
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    const TP_VERT = 1;

    const TP_COLON = 2;

    const TP_PHP = 3;

    const TP_NOCACHE = 4;

    const TP_TEXT = 5;

    const TP_STRIPON = 6;

    const TP_STRIPOFF = 7;

    const TP_LITERALSTART = 8;

    const TP_LITERALEND = 9;

    const TP_LITERAL = 10;

    const TP_RDEL = 11;

    const TP_SIMPELOUTPUT = 12;

    const TP_LDEL = 13;

    const TP_DOLLARID = 14;

    const TP_EQUAL = 15;

    const TP_SIMPLETAG = 16;

    const TP_ID = 17;

    const TP_PTR = 18;

    const TP_LDELIF = 19;

    const TP_LDELFOR = 20;

    const TP_SEMICOLON = 21;

    const TP_INCDEC = 22;

    const TP_TO = 23;

    const TP_STEP = 24;

    const TP_LDELFOREACH = 25;

    const TP_SPACE = 26;

    const TP_AS = 27;

    const TP_APTR = 28;

    const TP_LDELSETFILTER = 29;

    const TP_SMARTYBLOCKCHILDPARENT = 30;

    const TP_CLOSETAG = 31;

    const TP_LDELSLASH = 32;

    const TP_ATTR = 33;

    const TP_INTEGER = 34;

    const TP_COMMA = 35;

    const TP_OPENP = 36;

    const TP_CLOSEP = 37;

    const TP_MATH = 38;

    const TP_UNIMATH = 39;

    const TP_ISIN = 40;

    const TP_INSTANCEOF = 41;

    const TP_QMARK = 42;

    const TP_NOT = 43;

    const TP_TYPECAST = 44;

    const TP_HEX = 45;

    const TP_DOT = 46;

    const TP_SINGLEQUOTESTRING = 47;

    const TP_DOUBLECOLON = 48;

    const TP_NAMESPACE = 49;

    const TP_AT = 50;

    const TP_HATCH = 51;

    const TP_OPENB = 52;

    const TP_CLOSEB = 53;

    const TP_DOLLAR = 54;

    const TP_LOGOP = 55;

    const TP_SLOGOP = 56;

    const TP_TLOGOP = 57;

    const TP_SINGLECOND = 58;

    const TP_QUOTE = 59;

    const TP_BACKTICK = 60;

    const YY_NO_ACTION = 532;

    const YY_ACCEPT_ACTION = 531;

    const YY_ERROR_ACTION = 530;

    const YY_SZ_ACTTAB = 2073;

    static public $yy_action = array(299, 9, 132, 209, 255, 80, 137, 4, 84, 300, 18, 209, 10, 108, 301, 14, 315, 223,
                                     245, 271, 213, 218, 224, 22, 24, 173, 446, 39, 231, 90, 26, 44, 43, 241, 229, 297,
                                     235, 210, 446, 82, 1, 247, 268, 324, 299, 9, 131, 79, 255, 196, 2, 4, 84, 300, 18,
                                     85, 333, 108, 301, 28, 78, 223, 136, 271, 213, 243, 207, 22, 24, 165, 32, 39, 311,
                                     102, 26, 44, 43, 241, 229, 222, 22, 210, 2, 82, 1, 331, 268, 26, 299, 9, 135, 79,
                                     255, 195, 83, 4, 84, 244, 36, 82, 192, 108, 268, 110, 139, 223, 446, 271, 213, 215,
                                     205, 230, 24, 233, 211, 39, 103, 16, 446, 44, 43, 241, 229, 297, 239, 210, 91, 82,
                                     1, 33, 268, 303, 299, 9, 134, 79, 255, 208, 169, 4, 84, 300, 18, 209, 268, 108,
                                     301, 257, 269, 223, 254, 271, 213, 399, 224, 22, 24, 136, 5, 39, 220, 334, 26, 44,
                                     43, 241, 229, 297, 399, 210, 112, 82, 1, 247, 268, 399, 299, 9, 135, 79, 255, 208,
                                     148, 4, 84, 283, 270, 266, 232, 108, 268, 218, 78, 223, 82, 271, 213, 268, 224, 30,
                                     24, 300, 18, 39, 174, 447, 301, 44, 43, 241, 229, 297, 247, 210, 269, 82, 1, 447,
                                     268, 157, 299, 9, 135, 79, 255, 193, 459, 4, 84, 269, 459, 78, 459, 108, 34, 234,
                                     459, 223, 150, 271, 213, 228, 224, 15, 24, 3, 102, 39, 326, 29, 312, 44, 43, 241,
                                     229, 297, 230, 210, 226, 82, 1, 103, 268, 295, 299, 9, 136, 79, 255, 208, 172, 4,
                                     84, 475, 475, 268, 110, 108, 475, 159, 228, 223, 315, 271, 213, 184, 224, 218, 19,
                                     269, 102, 39, 182, 291, 308, 44, 43, 241, 229, 297, 230, 210, 246, 82, 1, 103, 268,
                                     192, 299, 9, 135, 79, 255, 208, 209, 4, 84, 292, 137, 176, 267, 108, 260, 170, 10,
                                     223, 209, 271, 213, 33, 194, 316, 24, 269, 166, 39, 151, 446, 334, 44, 43, 241,
                                     229, 297, 269, 210, 334, 82, 1, 446, 268, 22, 299, 9, 133, 79, 255, 208, 26, 4, 84,
                                     33, 192, 313, 321, 108, 263, 164, 143, 223, 163, 271, 213, 103, 224, 265, 6, 269,
                                     183, 39, 269, 185, 102, 44, 43, 241, 229, 297, 21, 210, 334, 82, 1, 334, 268, 26,
                                     299, 9, 135, 79, 255, 200, 188, 4, 84, 188, 285, 209, 214, 108, 181, 267, 110, 223,
                                     307, 271, 213, 298, 224, 104, 24, 140, 171, 39, 334, 186, 187, 44, 43, 241, 229,
                                     297, 282, 210, 12, 82, 1, 287, 268, 127, 299, 9, 136, 79, 255, 208, 105, 4, 84,
                                     188, 188, 475, 475, 108, 325, 285, 475, 223, 144, 271, 213, 268, 224, 180, 19, 247,
                                     236, 39, 269, 22, 209, 44, 43, 241, 229, 297, 26, 210, 293, 82, 362, 240, 268, 102,
                                     78, 119, 37, 79, 356, 475, 100, 273, 281, 261, 242, 253, 182, 31, 258, 247, 299, 9,
                                     290, 22, 255, 276, 280, 4, 84, 209, 26, 218, 201, 108, 117, 70, 115, 223, 78, 271,
                                     213, 100, 209, 209, 323, 322, 145, 191, 327, 212, 319, 310, 368, 290, 22, 127, 269,
                                     209, 37, 237, 280, 26, 329, 203, 289, 218, 201, 22, 126, 47, 106, 332, 114, 228,
                                     26, 100, 155, 446, 323, 322, 41, 40, 38, 212, 319, 310, 280, 290, 153, 446, 309,
                                     218, 201, 93, 117, 70, 115, 279, 275, 278, 262, 100, 286, 302, 323, 322, 177, 267,
                                     23, 212, 319, 310, 264, 290, 300, 18, 250, 280, 32, 301, 179, 124, 218, 201, 288,
                                     126, 62, 106, 95, 226, 296, 251, 100, 161, 400, 323, 322, 178, 225, 247, 212, 319,
                                     310, 269, 290, 280, 42, 20, 328, 400, 218, 201, 238, 126, 69, 115, 400, 300, 18,
                                     446, 100, 188, 301, 323, 322, 284, 118, 256, 212, 319, 310, 446, 290, 7, 152, 280,
                                     149, 178, 292, 206, 218, 201, 252, 126, 69, 115, 42, 20, 328, 156, 100, 87, 303,
                                     323, 322, 217, 138, 116, 212, 319, 310, 188, 290, 209, 334, 154, 280, 89, 303, 202,
                                     88, 218, 201, 402, 126, 69, 115, 303, 221, 86, 303, 100, 119, 303, 323, 322, 303,
                                     100, 402, 212, 319, 310, 303, 290, 303, 402, 280, 303, 303, 290, 204, 218, 201,
                                     303, 126, 64, 115, 209, 41, 40, 38, 100, 142, 303, 323, 322, 186, 317, 303, 212,
                                     319, 310, 269, 290, 280, 279, 275, 278, 262, 218, 201, 303, 126, 67, 115, 303, 303,
                                     303, 303, 100, 188, 303, 323, 322, 41, 40, 38, 212, 319, 310, 280, 290, 303, 303,
                                     303, 218, 201, 303, 126, 72, 115, 279, 275, 278, 262, 100, 303, 303, 323, 322, 303,
                                     330, 303, 212, 319, 310, 303, 290, 299, 8, 314, 303, 255, 303, 209, 4, 84, 303,
                                     303, 303, 303, 108, 303, 303, 402, 223, 280, 271, 213, 303, 303, 218, 201, 303,
                                     113, 48, 115, 209, 303, 402, 175, 100, 303, 303, 323, 322, 402, 358, 303, 212, 319,
                                     310, 303, 290, 303, 259, 11, 330, 303, 303, 303, 303, 22, 162, 299, 8, 314, 92,
                                     255, 26, 280, 4, 84, 269, 303, 218, 201, 108, 126, 50, 115, 223, 147, 271, 213,
                                     100, 94, 303, 323, 322, 303, 188, 269, 212, 319, 310, 303, 290, 280, 303, 303, 303,
                                     303, 218, 201, 303, 126, 76, 115, 303, 188, 249, 11, 100, 146, 303, 323, 322, 178,
                                     303, 303, 212, 319, 310, 269, 290, 303, 42, 20, 328, 280, 303, 303, 303, 303, 218,
                                     201, 303, 126, 63, 115, 303, 188, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303,
                                     212, 319, 310, 303, 290, 303, 280, 303, 303, 303, 303, 218, 201, 303, 126, 53, 115,
                                     303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303,
                                     290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 75, 115, 303, 303, 303, 303, 100,
                                     168, 303, 323, 322, 178, 303, 303, 212, 319, 310, 269, 290, 280, 42, 20, 328, 303,
                                     218, 98, 303, 81, 51, 107, 303, 303, 303, 303, 100, 188, 303, 323, 322, 303, 303,
                                     303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 96, 58, 115,
                                     303, 303, 303, 303, 100, 141, 303, 323, 322, 178, 303, 303, 212, 319, 310, 269,
                                     290, 280, 42, 20, 328, 303, 218, 97, 303, 81, 46, 107, 303, 303, 303, 303, 100,
                                     188, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303,
                                     303, 218, 201, 303, 101, 73, 115, 303, 303, 303, 303, 100, 167, 303, 323, 322, 178,
                                     303, 303, 212, 319, 310, 269, 290, 280, 42, 20, 328, 303, 218, 201, 303, 126, 65,
                                     115, 303, 303, 303, 303, 100, 188, 303, 323, 322, 303, 303, 303, 212, 319, 310,
                                     303, 290, 280, 303, 303, 303, 303, 218, 199, 303, 109, 61, 115, 303, 303, 303, 303,
                                     100, 160, 303, 323, 322, 178, 303, 303, 212, 319, 310, 269, 290, 280, 42, 20, 328,
                                     303, 218, 201, 303, 126, 57, 115, 303, 303, 303, 303, 100, 188, 303, 323, 322, 303,
                                     303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 59,
                                     115, 303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310,
                                     303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 56, 115, 303, 303, 303, 303,
                                     100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303,
                                     303, 303, 218, 201, 303, 126, 45, 115, 303, 303, 303, 303, 100, 303, 303, 323, 322,
                                     303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303,
                                     126, 55, 115, 303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319,
                                     310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 54, 115, 303, 303, 303,
                                     303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303,
                                     303, 303, 303, 218, 201, 303, 126, 68, 115, 303, 303, 303, 303, 100, 303, 303, 323,
                                     322, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 198,
                                     303, 126, 60, 115, 303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212,
                                     319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 66, 115, 303, 303,
                                     303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303, 290, 280,
                                     303, 303, 303, 303, 218, 201, 303, 126, 62, 115, 303, 303, 303, 303, 100, 303, 303,
                                     323, 322, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218,
                                     201, 303, 126, 49, 115, 303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303,
                                     212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 201, 303, 126, 77, 115, 303,
                                     303, 303, 303, 100, 303, 303, 323, 322, 303, 303, 303, 212, 319, 310, 303, 290,
                                     280, 303, 303, 303, 303, 218, 201, 303, 126, 74, 115, 303, 303, 303, 303, 100, 303,
                                     303, 323, 322, 303, 412, 412, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303,
                                     218, 201, 303, 99, 71, 115, 303, 303, 303, 303, 100, 303, 303, 323, 322, 303, 303,
                                     303, 212, 319, 310, 209, 290, 446, 303, 412, 412, 412, 303, 209, 303, 306, 303,
                                     303, 303, 446, 303, 303, 303, 303, 303, 303, 412, 412, 412, 412, 22, 303, 303, 303,
                                     303, 303, 27, 26, 22, 303, 303, 303, 41, 40, 38, 26, 303, 303, 303, 303, 41, 40,
                                     38, 303, 303, 303, 303, 303, 303, 279, 275, 278, 262, 303, 303, 303, 303, 279, 275,
                                     278, 262, 280, 216, 303, 303, 303, 218, 227, 303, 128, 303, 115, 475, 475, 303,
                                     303, 100, 475, 459, 216, 274, 303, 303, 303, 212, 319, 310, 303, 290, 475, 475,
                                     303, 280, 303, 475, 459, 303, 218, 227, 209, 130, 303, 115, 303, 303, 303, 459,
                                     100, 459, 303, 475, 318, 459, 272, 303, 212, 319, 310, 303, 290, 303, 303, 303,
                                     459, 22, 459, 303, 475, 303, 459, 303, 26, 303, 303, 303, 280, 41, 40, 38, 303,
                                     218, 227, 303, 125, 303, 115, 303, 209, 303, 303, 100, 303, 303, 279, 275, 278,
                                     262, 303, 212, 319, 310, 303, 290, 303, 280, 216, 303, 303, 303, 218, 227, 303,
                                     120, 158, 115, 475, 475, 303, 30, 100, 475, 459, 216, 303, 41, 40, 38, 212, 319,
                                     310, 303, 290, 475, 475, 303, 13, 303, 475, 459, 303, 303, 279, 275, 278, 262, 303,
                                     303, 303, 303, 459, 303, 459, 303, 475, 303, 459, 303, 303, 303, 280, 303, 303,
                                     303, 303, 218, 227, 459, 122, 459, 115, 475, 303, 459, 303, 100, 303, 303, 303,
                                     303, 303, 303, 303, 212, 319, 310, 303, 290, 280, 303, 303, 303, 303, 218, 227,
                                     209, 123, 303, 115, 280, 303, 303, 303, 100, 218, 227, 303, 121, 303, 115, 303,
                                     212, 319, 310, 100, 290, 303, 303, 303, 303, 303, 303, 212, 319, 310, 209, 290,
                                     303, 303, 303, 303, 280, 41, 40, 38, 209, 218, 227, 303, 129, 303, 115, 303, 303,
                                     303, 111, 100, 294, 209, 279, 275, 278, 262, 303, 212, 319, 310, 209, 290, 303,
                                     303, 303, 41, 40, 38, 303, 303, 277, 303, 303, 303, 219, 41, 40, 38, 303, 303, 303,
                                     303, 279, 275, 278, 262, 209, 320, 41, 40, 38, 209, 279, 275, 278, 262, 190, 41,
                                     40, 38, 303, 189, 303, 303, 303, 279, 275, 278, 262, 303, 303, 25, 303, 303, 279,
                                     275, 278, 262, 303, 303, 303, 475, 475, 41, 40, 38, 475, 459, 41, 40, 38, 209, 35,
                                     303, 303, 17, 197, 303, 303, 305, 279, 275, 278, 262, 209, 279, 275, 278, 262, 303,
                                     303, 303, 303, 303, 303, 459, 304, 459, 303, 475, 303, 459, 303, 303, 303, 303,
                                     303, 303, 41, 40, 38, 303, 303, 303, 303, 303, 268, 303, 303, 303, 406, 41, 40, 38,
                                     303, 279, 275, 278, 262, 303, 406, 303, 406, 303, 303, 406, 303, 303, 279, 275,
                                     278, 262, 406, 303, 406, 303, 406, 303, 475, 475, 303, 303, 303, 475, 459, 228,
                                     303, 303, 531, 52, 248, 270, 266, 232, 303, 303, 218, 303, 303, 303, 303, 303, 303,
                                     303, 303, 303, 303, 303, 303, 303, 303, 303, 459, 303, 459, 303, 475, 303, 459,);

    static public $yy_lookahead = array(12, 13, 14, 1, 16, 17, 46, 19, 20, 12, 13, 1, 52, 25, 17, 21, 65, 29, 30, 31,
                                        32, 70, 34, 26, 36, 28, 36, 39, 18, 35, 33, 43, 44, 45, 46, 47, 46, 49, 48, 51,
                                        52, 22, 54, 53, 12, 13, 14, 59, 16, 17, 36, 19, 20, 12, 13, 104, 105, 25, 17,
                                        13, 41, 29, 14, 31, 32, 17, 34, 26, 36, 28, 15, 39, 53, 18, 33, 43, 44, 45, 46,
                                        47, 26, 49, 36, 51, 52, 53, 54, 33, 12, 13, 14, 59, 16, 17, 17, 19, 20, 49, 28,
                                        51, 100, 25, 54, 48, 14, 29, 36, 31, 32, 17, 34, 75, 36, 77, 78, 39, 80, 15, 48,
                                        43, 44, 45, 46, 47, 22, 49, 36, 51, 52, 35, 54, 37, 12, 13, 14, 59, 16, 17, 72,
                                        19, 20, 12, 13, 1, 54, 25, 17, 17, 82, 29, 14, 31, 32, 11, 34, 26, 36, 14, 36,
                                        39, 17, 95, 33, 43, 44, 45, 46, 47, 26, 49, 48, 51, 52, 22, 54, 33, 12, 13, 14,
                                        59, 16, 17, 93, 19, 20, 64, 65, 66, 67, 25, 54, 70, 41, 29, 51, 31, 32, 54, 34,
                                        15, 36, 12, 13, 39, 72, 36, 17, 43, 44, 45, 46, 47, 22, 49, 82, 51, 52, 48, 54,
                                        72, 12, 13, 14, 59, 16, 17, 46, 19, 20, 82, 46, 41, 52, 25, 13, 14, 52, 29, 17,
                                        31, 32, 46, 34, 15, 36, 35, 18, 39, 53, 15, 60, 43, 44, 45, 46, 47, 75, 49, 77,
                                        51, 52, 80, 54, 53, 12, 13, 14, 59, 16, 17, 93, 19, 20, 12, 13, 54, 48, 25, 17,
                                        72, 46, 29, 65, 31, 32, 81, 34, 70, 36, 82, 18, 39, 8, 9, 10, 43, 44, 45, 46,
                                        47, 75, 49, 77, 51, 52, 80, 54, 100, 12, 13, 14, 59, 16, 17, 1, 19, 20, 94, 46,
                                        96, 97, 25, 105, 72, 52, 29, 1, 31, 32, 35, 34, 37, 36, 82, 72, 39, 93, 36, 95,
                                        43, 44, 45, 46, 47, 82, 49, 95, 51, 52, 48, 54, 26, 12, 13, 14, 59, 16, 17, 33,
                                        19, 20, 35, 100, 37, 9, 25, 53, 72, 75, 29, 72, 31, 32, 80, 34, 17, 36, 82, 76,
                                        39, 82, 76, 18, 43, 44, 45, 46, 47, 26, 49, 95, 51, 52, 95, 54, 33, 12, 13, 14,
                                        59, 16, 17, 100, 19, 20, 100, 101, 1, 50, 25, 96, 97, 48, 29, 66, 31, 32, 69,
                                        34, 80, 36, 14, 93, 39, 95, 76, 76, 43, 44, 45, 46, 47, 91, 49, 28, 51, 52, 98,
                                        54, 98, 12, 13, 14, 59, 16, 17, 68, 19, 20, 100, 100, 12, 13, 25, 11, 101, 17,
                                        29, 72, 31, 32, 54, 34, 14, 36, 22, 17, 39, 82, 26, 1, 43, 44, 45, 46, 47, 33,
                                        49, 97, 51, 11, 71, 54, 18, 41, 75, 2, 59, 11, 50, 80, 3, 4, 5, 6, 7, 8, 23, 88,
                                        22, 12, 13, 92, 26, 16, 5, 65, 19, 20, 1, 33, 70, 71, 25, 73, 74, 75, 29, 41,
                                        31, 32, 80, 1, 1, 83, 84, 72, 17, 91, 88, 89, 90, 11, 92, 26, 98, 82, 1, 2, 18,
                                        65, 33, 53, 102, 103, 70, 71, 26, 73, 74, 75, 53, 77, 46, 33, 80, 51, 36, 83,
                                        84, 38, 39, 40, 88, 89, 90, 65, 92, 51, 48, 17, 70, 71, 93, 73, 74, 75, 55, 56,
                                        57, 58, 80, 60, 11, 83, 84, 96, 97, 42, 88, 89, 90, 17, 92, 12, 13, 17, 65, 15,
                                        17, 81, 17, 70, 71, 103, 73, 74, 75, 81, 77, 17, 34, 80, 72, 11, 83, 84, 76, 15,
                                        22, 88, 89, 90, 82, 92, 65, 85, 86, 87, 26, 70, 71, 50, 73, 74, 75, 33, 12, 13,
                                        36, 80, 100, 17, 83, 84, 37, 17, 34, 88, 89, 90, 48, 92, 36, 93, 65, 93, 76, 94,
                                        99, 70, 71, 82, 73, 74, 75, 85, 86, 87, 93, 80, 80, 106, 83, 84, 50, 80, 79, 88,
                                        89, 90, 100, 92, 1, 95, 93, 65, 80, 106, 99, 80, 70, 71, 11, 73, 74, 75, 106,
                                        71, 80, 106, 80, 75, 106, 83, 84, 106, 80, 26, 88, 89, 90, 106, 92, 106, 33, 65,
                                        106, 106, 92, 99, 70, 71, 106, 73, 74, 75, 1, 38, 39, 40, 80, 72, 106, 83, 84,
                                        76, 11, 106, 88, 89, 90, 82, 92, 65, 55, 56, 57, 58, 70, 71, 106, 73, 74, 75,
                                        106, 106, 106, 106, 80, 100, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84, 106, 5,
                                        106, 88, 89, 90, 106, 92, 12, 13, 14, 106, 16, 106, 1, 19, 20, 106, 106, 106,
                                        106, 25, 106, 106, 11, 29, 65, 31, 32, 106, 106, 70, 71, 106, 73, 74, 75, 1,
                                        106, 26, 27, 80, 106, 106, 83, 84, 33, 11, 106, 88, 89, 90, 106, 92, 106, 59,
                                        60, 5, 106, 106, 106, 106, 26, 72, 12, 13, 14, 76, 16, 33, 65, 19, 20, 82, 106,
                                        70, 71, 25, 73, 74, 75, 29, 72, 31, 32, 80, 76, 106, 83, 84, 106, 100, 82, 88,
                                        89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 100, 59,
                                        60, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 106, 85, 86, 87, 65,
                                        106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 100, 106, 106, 80, 106, 106,
                                        83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 106, 65, 106, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
                                        89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
                                        106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85, 86, 87, 106,
                                        70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84, 106, 106,
                                        106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
                                        106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85,
                                        86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92,
                                        65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106,
                                        83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
                                        73, 74, 75, 106, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90,
                                        82, 92, 65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
                                        100, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106,
                                        70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
                                        106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
                                        106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65,
                                        106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
                                        83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
                                        73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
                                        106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
                                        106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106,
                                        106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75,
                                        106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
                                        65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106,
                                        106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
                                        89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
                                        106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 106, 1, 2, 88, 89, 90, 106, 92,
                                        65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106,
                                        106, 83, 84, 106, 106, 106, 88, 89, 90, 1, 92, 36, 106, 38, 39, 40, 106, 1, 106,
                                        11, 106, 106, 106, 48, 106, 106, 106, 106, 106, 106, 55, 56, 57, 58, 26, 106,
                                        106, 106, 106, 106, 24, 33, 26, 106, 106, 106, 38, 39, 40, 33, 106, 106, 106,
                                        106, 38, 39, 40, 106, 106, 106, 106, 106, 106, 55, 56, 57, 58, 106, 106, 106,
                                        106, 55, 56, 57, 58, 65, 2, 106, 106, 106, 70, 71, 106, 73, 106, 75, 12, 13,
                                        106, 106, 80, 17, 18, 2, 84, 106, 106, 106, 88, 89, 90, 106, 92, 12, 13, 106,
                                        65, 106, 17, 18, 106, 70, 71, 1, 73, 106, 75, 106, 106, 106, 46, 80, 48, 106,
                                        50, 84, 52, 53, 106, 88, 89, 90, 106, 92, 106, 106, 106, 46, 26, 48, 106, 50,
                                        106, 52, 106, 33, 106, 106, 106, 65, 38, 39, 40, 106, 70, 71, 106, 73, 106, 75,
                                        106, 1, 106, 106, 80, 106, 106, 55, 56, 57, 58, 106, 88, 89, 90, 106, 92, 106,
                                        65, 2, 106, 106, 106, 70, 71, 106, 73, 27, 75, 12, 13, 106, 15, 80, 17, 18, 2,
                                        106, 38, 39, 40, 88, 89, 90, 106, 92, 12, 13, 106, 15, 106, 17, 18, 106, 106,
                                        55, 56, 57, 58, 106, 106, 106, 106, 46, 106, 48, 106, 50, 106, 52, 106, 106,
                                        106, 65, 106, 106, 106, 106, 70, 71, 46, 73, 48, 75, 50, 106, 52, 106, 80, 106,
                                        106, 106, 106, 106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70,
                                        71, 1, 73, 106, 75, 65, 106, 106, 106, 80, 70, 71, 106, 73, 106, 75, 106, 88,
                                        89, 90, 80, 92, 106, 106, 106, 106, 106, 106, 88, 89, 90, 1, 92, 106, 106, 106,
                                        106, 65, 38, 39, 40, 1, 70, 71, 106, 73, 106, 75, 106, 106, 106, 21, 80, 53, 1,
                                        55, 56, 57, 58, 106, 88, 89, 90, 1, 92, 106, 106, 106, 38, 39, 40, 106, 106, 11,
                                        106, 106, 106, 37, 38, 39, 40, 106, 106, 106, 106, 55, 56, 57, 58, 1, 37, 38,
                                        39, 40, 1, 55, 56, 57, 58, 11, 38, 39, 40, 106, 11, 106, 106, 106, 55, 56, 57,
                                        58, 106, 106, 2, 106, 106, 55, 56, 57, 58, 106, 106, 106, 12, 13, 38, 39, 40,
                                        17, 18, 38, 39, 40, 1, 2, 106, 106, 13, 14, 106, 106, 17, 55, 56, 57, 58, 1, 55,
                                        56, 57, 58, 106, 106, 106, 106, 106, 106, 46, 34, 48, 106, 50, 106, 52, 106,
                                        106, 106, 106, 106, 106, 38, 39, 40, 106, 106, 106, 106, 106, 54, 106, 106, 106,
                                        11, 38, 39, 40, 106, 55, 56, 57, 58, 106, 21, 106, 23, 106, 106, 26, 106, 106,
                                        55, 56, 57, 58, 33, 106, 35, 106, 37, 106, 12, 13, 106, 106, 106, 17, 18, 46,
                                        106, 106, 62, 63, 64, 65, 66, 67, 106, 106, 70, 106, 106, 106, 106, 106, 106,
                                        106, 106, 106, 106, 106, 106, 106, 106, 106, 46, 106, 48, 106, 50, 106, 52,);

    const YY_SHIFT_USE_DFLT = - 41;

    const YY_SHIFT_MAX = 238;

    static public $yy_shift_ofst = array(488, 384, 164, 384, 340, 164, 340, 164, - 12, - 12, 32, 164, 164, 164, 164,
                                         164, 164, 164, 164, 164, 164, 76, 76, 120, 164, 208, 164, 164, 164, 164, 296,
                                         164, 164, 164, 164, 164, 164, 252, 252, 428, 428, 428, 428, 428, 428, 1570,
                                         1562, 1666, 1666, 1666, 1666, 1666, 488, 1909, 1914, 1954, 1874, 1883, 1714,
                                         726, 522, 1821, 1861, 1851, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
                                         1967, 1967, 1967, 1967, 690, 690, 48, 842, 521, 826, 143, 325, 90, 786, - 3,
                                         41, 129, 129, 90, 90, 325, 272, 508, 536, 803, 443, 477, 142, 582, 682, 221,
                                         189, 189, 284, 55, 228, 362, 313, 449, 407, 449, 469, 54, 364, 54, 406, 10,
                                         465, 2, 2, 2, 2, 2, 2, 2, 465, 2, 2, - 41, 1628, 1748, 1731, 1933, 1645, 2020,
                                         1946, 625, 184, 261, 54, 54, 102, 54, 54, 54, 54, - 40, - 40, 46, - 40, - 40,
                                         180, - 40, 180, - 40, 54, 136, 54, 54, 54, 54, 54, 54, 136, 54, 54, 54, 54, 54,
                                         - 40, - 40, 136, 54, 136, 465, 465, 2, 484, 617, 465, 355, 2, 484, 2, 2, 2,
                                         - 41, - 41, - 41, - 41, - 41, 1529, 1993, 603, - 10, 439, 190, 19, 70, 151, 94,
                                         210, 294, 234, 326, 195, 301, 358, 169, - 6, 122, 629, 575, 489, 593, 553, 572,
                                         546, 517, 505, 498, 510, 507, 579, 608, 597, 613, 577, 583, 584, 500, 474, 617,
                                         92, 14, 77, 130,);

    const YY_REDUCE_USE_DFLT = - 50;

    const YY_REDUCE_MAX = 192;

    static public $yy_reduce_ofst = array(1980, 441, 621, 501, 475, 560, 532, 590, 996, 940, 1080, 1304, 912, 751, 855,
                                          795, 1444, 1136, 1108, 1164, 1052, 968, 1024, 1220, 1360, 1416, 1472, 1388,
                                          1248, 1276, 1332, 1192, 651, 679, 884, 823, 705, 1595, 1564, 1638, 1793, 1761,
                                          1750, 1667, 1722, 1033, 977, 921, 541, 832, 1089, 977, 121, 581, 581, 581,
                                          581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
                                          581, 581, 581, 581, 581, 581, 581, 410, - 49, 800, 660, 627, 781, 36, 217, 66,
                                          295, 251, 298, 225, 181, 262, 223, 207, 305, 349, 147, 147, 349, 329, 349,
                                          339, 329, 243, 348, 314, 314, 132, 349, 437, 293, 341, 349, 386, 314, 454,
                                          349, 302, 314, 349, 349, 349, 349, 350, 349, 349, 490, 349, 349, 349, 177,
                                          177, 177, 177, 177, 177, 596, 589, 177, 177, 580, 580, 598, 580, 580, 580,
                                          580, 564, 564, 563, 564, 564, 576, 564, 592, 564, 580, 591, 580, 580, 580,
                                          580, 580, 580, 607, 580, 580, 580, 580, 580, 564, 564, 610, 580, 619, 381,
                                          381, 0, 354, 480, 381, 378, 0, 354, 0, 0, 0, 204, 89, 561, 527, 519,);

    static public $yyExpectedTokens = array(array(3, 4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 25, 29, 31, 32,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 30, 31, 32, 34, 36, 39, 43, 44,
                                                  45, 46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 30, 31, 32, 34, 36, 39, 43, 44,
                                                  45, 46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 53, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 52, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(12, 13, 14, 16, 17, 19, 20, 25, 29, 31, 32, 34, 36, 39, 43, 44, 45,
                                                  46, 47, 49, 51, 54, 59,),
                                            array(1, 24, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 11, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(3, 4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 25, 29, 31, 32,),
                                            array(1, 11, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 11, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 2, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 37, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 11, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 27, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 11, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58, 60,),
                                            array(1, 38, 39, 40, 53, 55, 56, 57, 58,),
                                            array(1, 37, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 21, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,), array(38, 39, 40, 55, 56, 57, 58,),
                                            array(38, 39, 40, 55, 56, 57, 58,), array(14, 17, 49, 51, 54,),
                                            array(5, 12, 13, 14, 16, 19, 20, 25, 29, 31, 32, 59, 60,),
                                            array(1, 11, 18, 26, 33, 36, 48,), array(1, 11, 26, 33,),
                                            array(14, 17, 51, 54,), array(1, 26, 33,), array(14, 36, 54,),
                                            array(5, 12, 13, 14, 16, 19, 20, 25, 29, 31, 32, 59, 60,),
                                            array(12, 13, 17, 26, 28, 33,), array(12, 13, 17, 26, 28, 33,),
                                            array(12, 13, 17, 26, 33,), array(12, 13, 17, 26, 33,), array(14, 36, 54,),
                                            array(14, 36, 54,), array(1, 26, 33,), array(18, 46, 52,),
                                            array(1, 26, 33,), array(1, 2,), array(1, 11, 26, 27, 33,),
                                            array(11, 22, 26, 33, 41,), array(11, 22, 26, 33, 41,),
                                            array(1, 11, 26, 33,), array(12, 13, 17, 50,), array(1, 11, 26, 33,),
                                            array(13, 14, 17, 54,), array(12, 13, 17,), array(12, 13, 17,),
                                            array(8, 9, 10,), array(15, 18, 48,), array(15, 18, 48,), array(26, 33,),
                                            array(1, 53,), array(14, 17,), array(14, 54,), array(14, 17,),
                                            array(1, 11,), array(26, 33,), array(18, 48,), array(26, 33,),
                                            array(1, 28,), array(1, 18,), array(18,), array(1,), array(1,), array(1,),
                                            array(1,), array(1,), array(1,), array(1,), array(18,), array(1,),
                                            array(1,), array(), array(2, 12, 13, 17, 18, 46, 48, 50, 52, 53,),
                                            array(2, 12, 13, 15, 17, 18, 46, 48, 50, 52,),
                                            array(2, 12, 13, 15, 17, 18, 46, 48, 50, 52,),
                                            array(2, 12, 13, 17, 18, 46, 48, 50, 52,),
                                            array(2, 12, 13, 17, 18, 46, 48, 50, 52,),
                                            array(12, 13, 17, 18, 46, 48, 50, 52,), array(13, 14, 17, 34, 54,),
                                            array(12, 13, 17, 50,), array(15, 46, 52,), array(12, 13, 17,),
                                            array(26, 33,), array(26, 33,), array(15, 22,), array(26, 33,),
                                            array(26, 33,), array(26, 33,), array(26, 33,), array(46, 52,),
                                            array(46, 52,), array(13, 36,), array(46, 52,), array(46, 52,),
                                            array(46, 52,), array(46, 52,), array(46, 52,), array(46, 52,),
                                            array(26, 33,), array(14, 54,), array(26, 33,), array(26, 33,),
                                            array(26, 33,), array(26, 33,), array(26, 33,), array(26, 33,),
                                            array(14, 54,), array(26, 33,), array(26, 33,), array(26, 33,),
                                            array(26, 33,), array(26, 33,), array(46, 52,), array(46, 52,),
                                            array(14, 54,), array(26, 33,), array(14, 54,), array(18,), array(18,),
                                            array(1,), array(2,), array(36,), array(18,), array(9,), array(1,),
                                            array(2,), array(1,), array(1,), array(1,), array(), array(), array(),
                                            array(), array(), array(1, 2, 36, 38, 39, 40, 48, 55, 56, 57, 58,),
                                            array(11, 21, 23, 26, 33, 35, 37, 46,), array(11, 15, 26, 33, 36, 48,),
                                            array(36, 46, 48, 53,), array(12, 13, 17, 50,), array(22, 41, 60,),
                                            array(22, 41, 53,), array(28, 36, 48,), array(22, 41,), array(35, 37,),
                                            array(35, 53,), array(35, 37,), array(15, 46,), array(35, 37,),
                                            array(46, 53,), array(36, 48,), array(17, 50,), array(36, 48,),
                                            array(21, 35,), array(36, 48,), array(17,), array(17,), array(53,),
                                            array(17,), array(17,), array(11,), array(42,), array(51,), array(51,),
                                            array(53,), array(17,), array(46,), array(17,), array(37,), array(22,),
                                            array(34,), array(34,), array(15,), array(17,), array(5,), array(23,),
                                            array(36,), array(17,), array(36,), array(17,), array(17,), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(),);

    static public $yy_default = array(338, 515, 494, 530, 530, 494, 530, 494, 530, 530, 530, 530, 530, 530, 530, 530,
                                      530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
                                      530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 396, 530, 372,
                                      363, 396, 396, 360, 335, 530, 530, 530, 530, 530, 401, 530, 530, 530, 530, 530,
                                      408, 418, 407, 492, 403, 493, 518, 398, 517, 401, 377, 516, 425, 424, 530, 530,
                                      436, 410, 530, 396, 530, 530, 396, 396, 396, 396, 530, 530, 396, 506, 396, 386,
                                      410, 426, 426, 410, 459, 410, 530, 459, 459, 530, 449, 449, 396, 410, 530, 530,
                                      530, 410, 374, 449, 396, 410, 390, 449, 429, 413, 428, 417, 392, 427, 410, 503,
                                      421, 414, 501, 448, 448, 448, 448, 448, 448, 530, 461, 475, 459, 361, 359, 530,
                                      375, 376, 380, 367, 487, 484, 459, 485, 486, 452, 455, 454, 453, 357, 530, 369,
                                      365, 364, 370, 385, 384, 530, 371, 379, 373, 382, 383, 457, 456, 530, 381, 530,
                                      507, 504, 416, 495, 459, 481, 351, 391, 496, 387, 443, 393, 500, 459, 459, 500,
                                      500, 436, 432, 436, 436, 460, 426, 426, 436, 426, 530, 530, 530, 432, 530, 432,
                                      436, 530, 444, 530, 530, 530, 530, 530, 530, 530, 530, 438, 530, 530, 439, 530,
                                      432, 530, 530, 426, 434, 530, 530, 530, 343, 404, 475, 530, 505, 530, 530, 378,
                                      423, 431, 346, 446, 447, 388, 405, 430, 336, 519, 397, 435, 394, 347, 475, 366,
                                      433, 450, 422, 520, 521, 344, 511, 472, 497, 498, 340, 482, 476, 395, 339, 389,
                                      470, 341, 420, 509, 345, 480, 510, 508, 442, 342, 445, 337, 409, 499, 524, 488,
                                      514, 513, 451, 349, 458, 483, 473, 512, 412, 439, 350, 355, 479, 478, 354, 491,
                                      464, 463, 527, 352, 353, 462, 440, 471, 523, 489, 525, 528, 490, 465, 502, 437,
                                      438, 348, 415, 411, 466, 526, 469, 441, 419, 467, 529, 474, 468, 522, 477,);

    const YYNOCODE = 107;

    const YYSTACKDEPTH = 500;

    const YYNSTATE = 335;

    const YYNRULE = 195;

    const YYERRORSYMBOL = 61;

    const YYERRSYMDT = 'yy0';

    const YYFALLBACK = 0;

    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;

    public $yyTracePrompt;

    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array('$', 'VERT', 'COLON', 'PHP', 'NOCACHE', 'TEXT', 'STRIPON', 'STRIPOFF', 'LITERALSTART',
                                'LITERALEND', 'LITERAL', 'RDEL', 'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
                                'SIMPLETAG', 'ID', 'PTR', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC', 'TO', 'STEP',
                                'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT',
                                'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP', 'CLOSEP', 'MATH',
                                'UNIMATH', 'ISIN', 'INSTANCEOF', 'QMARK', 'NOT', 'TYPECAST', 'HEX', 'DOT',
                                'SINGLEQUOTESTRING', 'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH', 'OPENB', 'CLOSEB',
                                'DOLLAR', 'LOGOP', 'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK', 'error',
                                'start', 'template', 'template_element', 'smartytag', 'literal', 'text_content',
                                'literal_elements', 'literal_element', 'tag', 'variable', 'attributes', 'value', 'expr',
                                'varindexed', 'modifierlist', 'statement', 'statements', 'foraction', 'varvar',
                                'modparameters', 'attribute', 'ternary', 'array', 'tlop', 'lop', 'scond', 'ns1',
                                'function', 'doublequoted_with_quotes', 'static_class_access', 'object', 'arrayindex',
                                'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method', 'params', 'modifier',
                                'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
                                'doublequotedcontent',);

    public static $yyRuleName = array('start ::= template', 'template ::= template_element',
                                      'template ::= template template_element', 'template ::=',
                                      'template_element ::= smartytag', 'template_element ::= literal',
                                      'template_element ::= PHP', 'template_element ::= NOCACHE',
                                      'template_element ::= text_content', 'text_content ::= TEXT',
                                      'text_content ::= text_content TEXT', 'template_element ::= STRIPON',
                                      'template_element ::= STRIPOFF', 'literal ::= LITERALSTART LITERALEND',
                                      'literal ::= LITERALSTART literal_elements LITERALEND',
                                      'literal_elements ::= literal_elements literal_element', 'literal_elements ::=',
                                      'literal_element ::= literal', 'literal_element ::= LITERAL',
                                      'smartytag ::= tag RDEL', 'smartytag ::= SIMPELOUTPUT', 'tag ::= LDEL variable',
                                      'tag ::= LDEL variable attributes', 'tag ::= LDEL value',
                                      'tag ::= LDEL value attributes', 'tag ::= LDEL expr',
                                      'tag ::= LDEL expr attributes', 'tag ::= LDEL DOLLARID EQUAL value',
                                      'tag ::= LDEL DOLLARID EQUAL expr', 'tag ::= LDEL DOLLARID EQUAL expr attributes',
                                      'tag ::= LDEL varindexed EQUAL expr attributes', 'smartytag ::= SIMPLETAG',
                                      'tag ::= LDEL ID attributes', 'tag ::= LDEL ID',
                                      'tag ::= LDEL ID modifierlist attributes', 'tag ::= LDEL ID PTR ID attributes',
                                      'tag ::= LDEL ID PTR ID modifierlist attributes', 'tag ::= LDELIF expr',
                                      'tag ::= LDELIF expr attributes', 'tag ::= LDELIF statement',
                                      'tag ::= LDELIF statement attributes',
                                      'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
                                      'foraction ::= EQUAL expr', 'foraction ::= INCDEC',
                                      'tag ::= LDELFOR statement TO expr attributes',
                                      'tag ::= LDELFOR statement TO expr STEP expr attributes',
                                      'tag ::= LDELFOREACH attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
                                      'tag ::= LDELSETFILTER ID modparameters',
                                      'tag ::= LDELSETFILTER ID modparameters modifierlist',
                                      'tag ::= LDEL SMARTYBLOCKCHILDPARENT', 'smartytag ::= CLOSETAG',
                                      'tag ::= LDELSLASH ID', 'tag ::= LDELSLASH ID modifierlist',
                                      'tag ::= LDELSLASH ID PTR ID', 'tag ::= LDELSLASH ID PTR ID modifierlist',
                                      'attributes ::= attributes attribute', 'attributes ::= attribute',
                                      'attributes ::=', 'attribute ::= SPACE ID EQUAL ID', 'attribute ::= ATTR expr',
                                      'attribute ::= ATTR value', 'attribute ::= SPACE ID', 'attribute ::= SPACE expr',
                                      'attribute ::= SPACE value', 'attribute ::= SPACE INTEGER EQUAL expr',
                                      'statements ::= statement', 'statements ::= statements COMMA statement',
                                      'statement ::= DOLLARID EQUAL INTEGER', 'statement ::= DOLLARID EQUAL expr',
                                      'statement ::= varindexed EQUAL expr', 'statement ::= OPENP statement CLOSEP',
                                      'expr ::= value', 'expr ::= ternary', 'expr ::= DOLLARID COLON ID',
                                      'expr ::= expr MATH value', 'expr ::= expr UNIMATH value', 'expr ::= array',
                                      'expr ::= expr modifierlist', 'expr ::= expr tlop value',
                                      'expr ::= expr lop expr', 'expr ::= expr scond', 'expr ::= expr ISIN array',
                                      'expr ::= expr ISIN value', 'expr ::= variable INSTANCEOF ns1',
                                      'expr ::= variable INSTANCEOF variable',
                                      'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
                                      'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr', 'value ::= variable',
                                      'value ::= UNIMATH value', 'value ::= NOT value', 'value ::= TYPECAST value',
                                      'value ::= variable INCDEC', 'value ::= HEX', 'value ::= INTEGER',
                                      'value ::= INTEGER DOT INTEGER', 'value ::= INTEGER DOT', 'value ::= DOT INTEGER',
                                      'value ::= ID', 'value ::= function', 'value ::= OPENP expr CLOSEP',
                                      'value ::= SINGLEQUOTESTRING', 'value ::= doublequoted_with_quotes',
                                      'value ::= varindexed DOUBLECOLON static_class_access', 'value ::= smartytag',
                                      'value ::= value modifierlist', 'value ::= NAMESPACE',
                                      'value ::= ns1 DOUBLECOLON static_class_access', 'ns1 ::= ID',
                                      'ns1 ::= NAMESPACE', 'variable ::= DOLLARID', 'variable ::= varindexed',
                                      'variable ::= varvar AT ID', 'variable ::= object', 'variable ::= HATCH ID HATCH',
                                      'variable ::= HATCH ID HATCH arrayindex', 'variable ::= HATCH variable HATCH',
                                      'variable ::= HATCH variable HATCH arrayindex',
                                      'varindexed ::= DOLLARID arrayindex', 'varindexed ::= varvar arrayindex',
                                      'arrayindex ::= arrayindex indexdef', 'arrayindex ::=',
                                      'indexdef ::= DOT DOLLARID', 'indexdef ::= DOT varvar',
                                      'indexdef ::= DOT varvar AT ID', 'indexdef ::= DOT ID',
                                      'indexdef ::= DOT INTEGER', 'indexdef ::= DOT LDEL expr RDEL',
                                      'indexdef ::= OPENB ID CLOSEB', 'indexdef ::= OPENB ID DOT ID CLOSEB',
                                      'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
                                      'indexdef ::= OPENB INTEGER CLOSEB', 'indexdef ::= OPENB DOLLARID CLOSEB',
                                      'indexdef ::= OPENB variable CLOSEB', 'indexdef ::= OPENB value CLOSEB',
                                      'indexdef ::= OPENB expr CLOSEB', 'indexdef ::= OPENB CLOSEB',
                                      'varvar ::= DOLLARID', 'varvar ::= DOLLAR', 'varvar ::= varvar varvarele',
                                      'varvarele ::= ID', 'varvarele ::= SIMPELOUTPUT', 'varvarele ::= LDEL expr RDEL',
                                      'object ::= varindexed objectchain', 'objectchain ::= objectelement',
                                      'objectchain ::= objectchain objectelement',
                                      'objectelement ::= PTR ID arrayindex', 'objectelement ::= PTR varvar arrayindex',
                                      'objectelement ::= PTR LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR method', 'function ::= ns1 OPENP params CLOSEP',
                                      'method ::= ID OPENP params CLOSEP', 'method ::= DOLLARID OPENP params CLOSEP',
                                      'params ::= params COMMA expr', 'params ::= expr', 'params ::=',
                                      'modifierlist ::= modifierlist modifier modparameters',
                                      'modifierlist ::= modifier modparameters', 'modifier ::= VERT AT ID',
                                      'modifier ::= VERT ID', 'modparameters ::= modparameters modparameter',
                                      'modparameters ::=', 'modparameter ::= COLON value',
                                      'modparameter ::= COLON array', 'static_class_access ::= method',
                                      'static_class_access ::= method objectchain', 'static_class_access ::= ID',
                                      'static_class_access ::= DOLLARID arrayindex',
                                      'static_class_access ::= DOLLARID arrayindex objectchain', 'lop ::= LOGOP',
                                      'lop ::= SLOGOP', 'tlop ::= TLOGOP', 'scond ::= SINGLECOND',
                                      'array ::= OPENB arrayelements CLOSEB', 'arrayelements ::= arrayelement',
                                      'arrayelements ::= arrayelements COMMA arrayelement', 'arrayelements ::=',
                                      'arrayelement ::= value APTR expr', 'arrayelement ::= ID APTR expr',
                                      'arrayelement ::= expr', 'doublequoted_with_quotes ::= QUOTE QUOTE',
                                      'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
                                      'doublequoted ::= doublequoted doublequotedcontent',
                                      'doublequoted ::= doublequotedcontent',
                                      'doublequotedcontent ::= BACKTICK variable BACKTICK',
                                      'doublequotedcontent ::= BACKTICK expr BACKTICK',
                                      'doublequotedcontent ::= DOLLARID', 'doublequotedcontent ::= LDEL variable RDEL',
                                      'doublequotedcontent ::= LDEL expr RDEL', 'doublequotedcontent ::= smartytag',
                                      'doublequotedcontent ::= TEXT',);

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] . "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx --;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)
                            ) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                }
                while (true);
            }
            break;
        }
        while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][ 1 ];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][ 0 ]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token, self::$yyExpectedTokens[ $nextstate ],
                                                                      true))
                        ) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][ 0 ];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                }
                while (true);
            }
            break;
        }
        while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback) &&
                ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0
            ) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . "FALLBACK " . $this->yyTokenName[ $iLookAhead ] . " => " .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx ++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx --;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 207 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt, $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i ++) {
                fprintf($this->yyTraceFILE, " %s", $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(array(0 => 62, 1 => 1), array(0 => 63, 1 => 1), array(0 => 63, 1 => 2),
                                      array(0 => 63, 1 => 0), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 64, 1 => 1), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 67, 1 => 1), array(0 => 67, 1 => 2), array(0 => 64, 1 => 1),
                                      array(0 => 64, 1 => 1), array(0 => 66, 1 => 2), array(0 => 66, 1 => 3),
                                      array(0 => 68, 1 => 2), array(0 => 68, 1 => 0), array(0 => 69, 1 => 1),
                                      array(0 => 69, 1 => 1), array(0 => 65, 1 => 2), array(0 => 65, 1 => 1),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 2),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 4), array(0 => 70, 1 => 5),
                                      array(0 => 70, 1 => 5), array(0 => 65, 1 => 1), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 4), array(0 => 70, 1 => 5),
                                      array(0 => 70, 1 => 6), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 8),
                                      array(0 => 79, 1 => 2), array(0 => 79, 1 => 1), array(0 => 70, 1 => 5),
                                      array(0 => 70, 1 => 7), array(0 => 70, 1 => 2), array(0 => 70, 1 => 6),
                                      array(0 => 70, 1 => 8), array(0 => 70, 1 => 6), array(0 => 70, 1 => 8),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 4), array(0 => 70, 1 => 2),
                                      array(0 => 65, 1 => 1), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 72, 1 => 2),
                                      array(0 => 72, 1 => 1), array(0 => 72, 1 => 0), array(0 => 82, 1 => 4),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 2),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 4),
                                      array(0 => 78, 1 => 1), array(0 => 78, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 77, 1 => 3), array(0 => 77, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 1), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 3), array(0 => 74, 1 => 3), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 3), array(0 => 74, 1 => 3), array(0 => 83, 1 => 7),
                                      array(0 => 83, 1 => 7), array(0 => 73, 1 => 1), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 2), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 2), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 88, 1 => 1), array(0 => 88, 1 => 1), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 1), array(0 => 71, 1 => 3), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 4), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 4), array(0 => 75, 1 => 2), array(0 => 75, 1 => 2),
                                      array(0 => 93, 1 => 2), array(0 => 93, 1 => 0), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 5), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 2), array(0 => 80, 1 => 1),
                                      array(0 => 80, 1 => 1), array(0 => 80, 1 => 2), array(0 => 95, 1 => 1),
                                      array(0 => 95, 1 => 1), array(0 => 95, 1 => 3), array(0 => 92, 1 => 2),
                                      array(0 => 96, 1 => 1), array(0 => 96, 1 => 2), array(0 => 97, 1 => 3),
                                      array(0 => 97, 1 => 3), array(0 => 97, 1 => 5), array(0 => 97, 1 => 6),
                                      array(0 => 97, 1 => 2), array(0 => 89, 1 => 4), array(0 => 98, 1 => 4),
                                      array(0 => 98, 1 => 4), array(0 => 99, 1 => 3), array(0 => 99, 1 => 1),
                                      array(0 => 99, 1 => 0), array(0 => 76, 1 => 3), array(0 => 76, 1 => 2),
                                      array(0 => 100, 1 => 3), array(0 => 100, 1 => 2), array(0 => 81, 1 => 2),
                                      array(0 => 81, 1 => 0), array(0 => 101, 1 => 2), array(0 => 101, 1 => 2),
                                      array(0 => 91, 1 => 1), array(0 => 91, 1 => 2), array(0 => 91, 1 => 1),
                                      array(0 => 91, 1 => 2), array(0 => 91, 1 => 3), array(0 => 86, 1 => 1),
                                      array(0 => 86, 1 => 1), array(0 => 85, 1 => 1), array(0 => 87, 1 => 1),
                                      array(0 => 84, 1 => 3), array(0 => 102, 1 => 1), array(0 => 102, 1 => 3),
                                      array(0 => 102, 1 => 0), array(0 => 103, 1 => 3), array(0 => 103, 1 => 3),
                                      array(0 => 103, 1 => 1), array(0 => 90, 1 => 2), array(0 => 90, 1 => 3),
                                      array(0 => 104, 1 => 2), array(0 => 104, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 1),);

    public static $yyReduceMap = array(0 => 0, 1 => 1, 2 => 2, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 17 => 9,
                                       18 => 9, 43 => 9, 66 => 9, 67 => 9, 75 => 9, 76 => 9, 80 => 9, 91 => 9, 96 => 9,
                                       97 => 9, 102 => 9, 104 => 9, 105 => 9, 109 => 9, 111 => 9, 116 => 9, 178 => 9,
                                       183 => 9, 10 => 10, 11 => 11, 12 => 12, 13 => 13, 16 => 13, 14 => 14, 74 => 14,
                                       15 => 15, 92 => 15, 94 => 15, 95 => 15, 123 => 15, 19 => 19, 20 => 20, 21 => 21,
                                       23 => 21, 25 => 21, 22 => 22, 24 => 22, 26 => 22, 27 => 27, 28 => 27, 29 => 29,
                                       30 => 30, 31 => 31, 32 => 32, 33 => 33, 34 => 34, 35 => 35, 36 => 36, 37 => 37,
                                       38 => 38, 40 => 38, 39 => 39, 41 => 41, 42 => 42, 44 => 44, 45 => 45, 46 => 46,
                                       47 => 47, 49 => 47, 48 => 48, 50 => 48, 51 => 51, 52 => 52, 53 => 53, 54 => 54,
                                       55 => 55, 56 => 56, 57 => 57, 58 => 58, 59 => 59, 60 => 60, 69 => 60, 158 => 60,
                                       162 => 60, 166 => 60, 167 => 60, 61 => 61, 159 => 61, 165 => 61, 62 => 62,
                                       63 => 63, 64 => 63, 65 => 65, 143 => 65, 68 => 68, 70 => 70, 71 => 71, 72 => 71,
                                       73 => 73, 77 => 77, 78 => 78, 79 => 78, 81 => 81, 108 => 81, 82 => 82, 83 => 83,
                                       84 => 84, 85 => 85, 86 => 86, 87 => 87, 88 => 87, 89 => 89, 90 => 90, 93 => 93,
                                       98 => 98, 99 => 99, 100 => 100, 101 => 101, 103 => 103, 106 => 106, 107 => 107,
                                       110 => 110, 112 => 112, 113 => 113, 114 => 114, 115 => 115, 117 => 117,
                                       118 => 118, 119 => 119, 120 => 120, 121 => 121, 122 => 122, 124 => 124,
                                       180 => 124, 125 => 125, 126 => 126, 127 => 127, 128 => 128, 129 => 129,
                                       130 => 130, 138 => 130, 131 => 131, 132 => 132, 133 => 133, 134 => 133,
                                       136 => 133, 137 => 133, 135 => 135, 139 => 139, 140 => 140, 141 => 141,
                                       184 => 141, 142 => 142, 144 => 144, 145 => 145, 146 => 146, 147 => 147,
                                       148 => 148, 149 => 149, 150 => 150, 151 => 151, 152 => 152, 153 => 153,
                                       154 => 154, 155 => 155, 156 => 156, 157 => 157, 160 => 160, 161 => 161,
                                       163 => 163, 164 => 164, 168 => 168, 169 => 169, 170 => 170, 171 => 171,
                                       172 => 172, 173 => 173, 174 => 174, 175 => 175, 176 => 176, 177 => 177,
                                       179 => 179, 181 => 181, 182 => 182, 185 => 185, 186 => 186, 187 => 187,
                                       188 => 188, 189 => 188, 191 => 188, 190 => 190, 192 => 192, 193 => 193,
                                       194 => 194,);

    #line 218 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 228 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 235 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r2()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 249 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $this->_retvalue = $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 260 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 264 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r6()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)), array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue =
                new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
        } else {
            $this->_retvalue = null;
        }
    }

    #line 275 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r7()
    {
        $this->compiler->tag_nocache = true;
        $save = $this->template->compiled->has_nocache_code;
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this,
                                                             $this->compiler->processNocacheCode("<?php echo '{$this->yystack[$this->yyidx + 0]->minor}';?>\n",
                                                                                                 $this->compiler,
                                                                                                 true));
        $this->template->compiled->has_nocache_code = $save;
    }

    #line 282 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r8()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 286 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r9()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 290 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r10()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 295 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r11()
    {
        $this->strip = true;
    }

    #line 299 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r12()
    {
        $this->strip = false;
    }

    #line 304 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r13()
    {
        $this->_retvalue = '';
    }

    #line 308 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 312 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 328 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 334 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r20()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[ 1 ] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 344 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                       array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 348 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r22()
    {
        $this->_retvalue =
            $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                        array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor));
    }

    #line 371 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r27()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                        0 ]->minor),
                                                                       array('var' => '\'' .
                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                             - 2 ]->minor,
                                                                                             1) . '\'')));
    }

    #line 379 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          - 1 ]->minor),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               - 3 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 383 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          - 1 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        - 3 ]->minor[ 'var' ])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        - 3 ]->minor[ 'smarty_internal_index' ]));
    }

    #line 388 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r31()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[ 1 ], array("'nocache'"));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 410 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r32()
    {
        if (defined($this->yystack[ $this->yyidx + - 1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + - 1 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                            array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 420 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r33()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 433 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r34()
    {
        if (defined($this->yystack[ $this->yyidx + - 2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + - 2 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                $this->compiler->compileTag('private_print_expression', $this->yystack[ $this->yyidx + 0 ]->minor,
                                            array('value' => $this->yystack[ $this->yyidx + - 2 ]->minor,
                                                  'modifierlist' => $this->yystack[ $this->yyidx + - 1 ]->minor));
        } else {
            $this->_retvalue = '<?php ob_start();?>' .
                               $this->compiler->compileTag($this->yystack[ $this->yyidx + - 2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor) . '<?php echo ';
            $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(),
                                                            array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                    - 1 ]->minor,
                                                                  'value' => 'ob_get_clean()')) . ';?>';
        }
    }

    #line 446 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor));
    }

    #line 451 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r36()
    {
        $this->_retvalue = '<?php ob_start();?>' .
                           $this->compiler->compileTag($this->yystack[ $this->yyidx + - 4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 2 ]->minor)) .
                           '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(),
                                                        array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor,
                                                              'value' => 'ob_get_clean()')) . ';?>';
    }

    #line 457 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r37()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 462 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r38()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 2 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               - 1 ]->minor));
    }

    #line 467 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r39()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + - 1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 478 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 6 ]->minor),
                                                                                array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                                 - 4 ]->minor),
                                                                                array('var' => $this->yystack[ $this->yyidx +
                                                                                                               - 2 ]->minor),
                                                                                array('step' => $this->yystack[ $this->yyidx +
                                                                                                                - 1 ]->minor))),
                                                       1);
    }

    #line 482 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 490 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 3 ]->minor),
                                                                                array('to' => $this->yystack[ $this->yyidx +
                                                                                                              - 1 ]->minor))),
                                                       0);
    }

    #line 494 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                          array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                                 - 5 ]->minor),
                                                                                array('to' => $this->yystack[ $this->yyidx +
                                                                                                              - 3 ]->minor),
                                                                                array('step' => $this->yystack[ $this->yyidx +
                                                                                                                - 1 ]->minor))),
                                                       0);
    }

    #line 499 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 504 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                              array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                                    - 3 ]->minor),
                                                                                    array('item' => $this->yystack[ $this->yyidx +
                                                                                                                    - 1 ]->minor))));
    }

    #line 508 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                              array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                                    - 5 ]->minor),
                                                                                    array('item' => $this->yystack[ $this->yyidx +
                                                                                                                    - 1 ]->minor),
                                                                                    array('key' => $this->yystack[ $this->yyidx +
                                                                                                                   - 3 ]->minor))));
    }

    #line 521 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        - 1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 525 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    - 2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              - 1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 530 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r53()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
        }
    }

    #line 543 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r54()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' /');
        if ($tag == 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 552 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 556 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 1 ]->minor . 'close', array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 561 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 2 ]->minor . 'close', array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 565 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + - 3 ]->minor . 'close', array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                - 1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 573 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r59()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 579 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 584 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = array();
    }

    #line 589 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r62()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + - 2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + - 2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                     '\'');
        }
    }

    #line 600 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r63()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + - 1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                   0 ]->minor);
    }

    #line 608 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r65()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 620 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r68()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 633 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r70()
    {
        $this->yystack[ $this->yyidx + - 2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor;
    }

    #line 638 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r71()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + - 2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 645 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r73()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + - 2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 669 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r77()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + - 2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 674 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r78()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . trim($this->yystack[ $this->yyidx + - 1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 688 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r81()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(),
                                                       array('value' => $this->yystack[ $this->yyidx + - 1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 694 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 1 ]->minor[ 'pre' ] . $this->yystack[ $this->yyidx + - 2 ]->minor .
            $this->yystack[ $this->yyidx + - 1 ]->minor[ 'op' ] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 698 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r83()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 702 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r84()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 706 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r85()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + - 2 ]->minor . ',' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 710 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + - 2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 714 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + - 1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 726 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r89()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                  substr($this->yystack[ $this->yyidx +
                                                                                                                                         - 2 ]->minor,
                                                                                                                         1) .
                                                                                                                  '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 730 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r90()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + - 2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 745 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r93()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 766 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r98()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 770 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r99()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . '.';
    }

    #line 774 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r100()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 779 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r101()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 796 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r103()
    {
        $this->_retvalue = "(" . $this->yystack[ $this->yyidx + - 1 ]->minor . ")";
    }

    #line 811 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r106()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + - 2 ]->minor[ 'var' ] == '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileTag('private_special_variable', array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          - 2 ]->minor[ 'smarty_internal_index' ]) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               - 2 ]->minor[ 'var' ]) .
                                              $this->yystack[ $this->yyidx + - 2 ]->minor[ 'smarty_internal_index' ] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
    }

    #line 822 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r107()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
        $this->_retvalue = $prefixVar;
    }

    #line 839 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r110()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + - 2 ]->minor), array('self', 'parent')) &&
            (!$this->security ||
             $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + - 2 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler))
        ) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + - 2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + - 2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] . $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            } else {
                $this->_retvalue = $this->yystack[ $this->yyidx + - 2 ]->minor . '::' .
                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 0 ] .
                                   $this->yystack[ $this->yyidx + 0 ]->minor[ 1 ];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[ $this->yyidx + - 2 ]->minor .
                                                    "' is undefined or not allowed by security setting");
        }
    }

    #line 858 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r112()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 869 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r113()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 872 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r114()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor[ 'smarty_internal_index' ]);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor[ 'smarty_internal_index' ];
        }
    }

    #line 885 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r115()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + - 2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 895 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r117()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + - 1 ]->minor . "'");
    }

    #line 899 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r118()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + - 2 ]->minor .
                                                                  "'") . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 903 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r119()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + - 1 ]->minor);
    }

    #line 907 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r120()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + - 2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 911 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r121()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + - 1 ]->minor, 1) . '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 914 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r122()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + - 1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 927 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r124()
    {
        return;
    }

    #line 933 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r125()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 936 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r126()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 940 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 944 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = "['" . $this->yystack[ $this->yyidx + 0 ]->minor . "']";
    }

    #line 948 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 953 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + - 1 ]->minor . ']';
    }

    #line 958 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r131()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 1 ]->minor .
                                                                                                  '\'][\'index\']') .
                           ']';
    }

    #line 962 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r132()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 3 ]->minor .
                                                                                                  '\'][\'' .
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  - 1 ]->minor .
                                                                                                  '\']') . ']';
    }

    #line 965 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r133()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + - 1 ]->minor . ']';
    }

    #line 971 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r135()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 987 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r139()
    {
        $this->_retvalue = '[]';
    }

    #line 997 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r140()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 1001 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r141()
    {
        $this->_retvalue = "''";
    }

    #line 1006 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r142()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1014 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r144()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, - $this->lex->rdel_length),
                 ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 1020 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r145()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 1027 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r146()
    {
        if ($this->yystack[ $this->yyidx + - 1 ]->minor[ 'var' ] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           - 1 ]->minor[ 'smarty_internal_index' ]) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 1 ]->minor[ 'var' ]) .
                               $this->yystack[ $this->yyidx + - 1 ]->minor[ 'smarty_internal_index' ] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 1036 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r147()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1041 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1046 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r149()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + - 1 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + - 1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1053 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + - 1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1060 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1067 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[ $this->yyidx + - 4 ]->minor . '\'.' .
                           $this->yystack[ $this->yyidx + - 2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor .
                           '}';
    }

    #line 1075 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r153()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1083 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r154()
    {
        if (!$this->security ||
            $this->security->isTrustedPhpFunction($this->yystack[ $this->yyidx + - 3 ]->minor, $this->compiler)
        ) {
            if (strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'isset') === 0 ||
                strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'empty') === 0 ||
                strcasecmp($this->yystack[ $this->yyidx + - 3 ]->minor, 'array') === 0 ||
                is_callable($this->yystack[ $this->yyidx + - 3 ]->minor)
            ) {
                $func_name = strtolower($this->yystack[ $this->yyidx + - 3 ]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[ $this->yyidx + - 1 ]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor);
                    if (strncasecmp($par, '$_smarty_tpl->smarty->ext->_config->_getConfigVariable',
                                    strlen('$_smarty_tpl->smarty->ext->_config->_getConfigVariable')) === 0
                    ) {
                        $prefixVar = $this->compiler->getNewPrefixVariable();
                        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' .
                                                          str_replace(')', ', false)', $par) . ';?>');
                        $isset_par = $prefixVar;
                    } else {
                        $isset_par = str_replace("')->value", "',null,true,false)->value", $par);
                    }
                    $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[ $this->yyidx + - 1 ]->minor) != 1) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "empty()"');
                    }
                    if ($func_name == 'empty') {
                        $this->_retvalue = $func_name . '(' . str_replace("')->value", "',null,true,false)->value",
                                                                          $this->yystack[ $this->yyidx +
                                                                                          - 1 ]->minor[ 0 ]) . ')';
                    } else {
                        $this->_retvalue = $func_name . '(' . $this->yystack[ $this->yyidx + - 1 ]->minor[ 0 ] . ')';
                    }
                } else {
                    $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" .
                                       implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" .
                                                        $this->yystack[ $this->yyidx + - 3 ]->minor . "\"");
            }
        }
    }

    #line 1122 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r155()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + - 3 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + - 3 ]->minor . "(" .
                           implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ")";
    }

    #line 1129 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
                                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                                             - 3 ]->minor,
                                                                                                             1) .
                                                                                                      '\'') . ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + - 1 ]->minor) . ')';
    }

    #line 1140 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r157()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + - 2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1157 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r160()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + - 2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + - 1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1161 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1169 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1177 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1196 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r168()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1201 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r169()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1206 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r170()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1211 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + - 1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1216 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + - 2 ]->minor,
                                 $this->yystack[ $this->yyidx + - 1 ]->minor .
                                 $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1222 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1226 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r174()
    {
        static $lops =
            array('eq' => ' == ', 'ne' => ' != ', 'neq' => ' != ', 'gt' => ' > ', 'ge' => ' >= ', 'gte' => ' >= ',
                  'lt' => ' < ', 'le' => ' <= ', 'lte' => ' <= ', 'mod' => ' % ', 'and' => ' && ', 'or' => ' || ',
                  'xor' => ' xor ',);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1245 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r175()
    {
        static $tlops =
            array('isdivby' => array('op' => ' % ', 'pre' => '!('), 'isnotdivby' => array('op' => ' % ', 'pre' => '('),
                  'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
                  'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1258 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r176()
    {
        static $scond =
            array('iseven' => '!(1 & ', 'isnoteven' => '(1 & ', 'isodd' => '(1 & ', 'isnotodd' => '!(1 & ',);
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1272 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')';
    }

    #line 1280 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1288 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r181()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + - 2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1292 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + - 2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1308 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r185()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor->to_smarty_php($this);
    }

    #line 1313 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r186()
    {
        $this->yystack[ $this->yyidx + - 1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + - 1 ]->minor;
    }

    #line 1318 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r187()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1322 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r188()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + - 1 ]->minor);
    }

    #line 1330 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r190()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1338 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r192()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + - 1 ]->minor . ')');
    }

    #line 1342 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1346 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0 && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n", $this->yyTracePrompt, $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][ 0 ];
        $yysize = self::$yyRuleInfo[ $yyruleno ][ 1 ];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i --) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx ++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 200 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 193 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = - 1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n", $this->yyTracePrompt, $this->yyTokenName[ $yymajor ]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL && !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt --;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n", $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n", $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 && $yymx != self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        }
        while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
