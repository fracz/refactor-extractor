    function __construct()
    {
        // initialize valid attributes
        $this->required_attributes = array();
        $this->optional_attributes = array();
    }

    /**
    * This function checks if the attributes passed are valid
    *
    * The attributes passed for the tag to compile are checked against the list of required and
    * optional attributes. Required attributes must be present. Optional attributes are check against
    * against the corresponding list. The keyword '_any' specifies that any attribute will be accepted
    * as valid
    *
    * @todo More generallized handling of the nocache attributes in compile plugins
    * @param array $args attributes applied to the tag
    * @return array attributes for further processing
    */
||||||||    function __construct()
    {
        // initialize valid attributes
        $this->required_attributes = array();
        $this->optional_attributes = array();
    }

    /**
    * This function checks if the attributes passed are valid
    *
    * The attributes passed for the tag to compile are checked against the list of required and
    * optional attributes. Required attributes must be present. Optional attributes are check against
    * against the corresponding list. The keyword '_any' specifies that any attribute will be accepted
    * as valid
    *
    * @todo More generallized handling of the nocache attributes in compile plugins
    * @param array $args attributes applied to the tag
    * @return array attributes for further processing
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY)))