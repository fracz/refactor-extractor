    public function getRenderedTemplate ()
    {
        // disable caching for evaluated code
        if ($this->isEvaluated()) {
            $this->caching = false;
        }
        // checks if template exists
        $this->getTemplateFilepath();
        // read from cache or render
        if ($this->rendered_content === null && !$this->isCached()) {
            // render template (not loaded and not in cache)
            $this->renderTemplate();
        }
        if ($this->caching && $this->usesCompiler()) {
            // cached output could contain nocache code
            $_start_time = $this->_get_time();
            $_smarty_tpl = $this;
            ob_start();
            eval("?>" . $this->rendered_content);
            $this->updateParentVariables();
            $this->cache_time += $this->_get_time() - $_start_time;
            return (isset($this->smarty->autoload_filters['output']) || isset($this->smarty->registered_filters['output']))?
            $this->smarty->filter_handler->execute('output', ob_get_clean()) : ob_get_clean();
        } else {
            $this->updateParentVariables();
            return (isset($this->smarty->autoload_filters['output']) || isset($this->smarty->registered_filters['output']))?
            $this->smarty->filter_handler->execute('output', $this->rendered_content) : $this->rendered_content;
        }
    }

    /**
    * parse a template resource in its name and type
    *
    * @param string $template_resource template resource specification
    */
||||||||    public function getRenderedTemplate ()
    {
        // disable caching for evaluated code
        if ($this->isEvaluated()) {
            $this->caching = false;
        }
        // checks if template exists
        $this->getTemplateFilepath();
        // read from cache or render
        if ($this->rendered_content === null && !$this->isCached()) {
            // render template (not loaded and not in cache)
            $this->renderTemplate();
        }
        $this->updateParentVariables();
        return (isset($this->smarty->autoload_filters['output']) || isset($this->smarty->registered_filters['output']))?
        $this->smarty->filter_handler->execute('output', $this->rendered_content) : $this->rendered_content;
    }

    /**
    * parse a template resource in its name and type
    *
    * @param string $template_resource template resource specification
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL)
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (AST_CALL)))
                        (AST_CALL)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_PROP
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_PROP
                (AST_VAR)))))