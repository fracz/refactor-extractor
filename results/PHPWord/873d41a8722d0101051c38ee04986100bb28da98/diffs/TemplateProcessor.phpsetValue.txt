    public function setValue($macro, $replace, $limit = self::MAXIMUM_REPLACEMENTS_DEFAULT)
    {
        if (substr($macro, 0, 2) !== '${' && substr($macro, -1) !== '}') {
            $macro = '${' . $macro . '}';
        }

        foreach ($this->tempDocumentHeaders as $index => $headerXML) {
            $this->tempDocumentHeaders[$index] = $this->setValueForPart($this->tempDocumentHeaders[$index], $macro, $replace, $limit);
        }

        $this->tempDocumentMainPart = $this->setValueForPart($this->tempDocumentMainPart, $macro, $replace, $limit);

        foreach ($this->tempDocumentFooters as $index => $headerXML) {
            $this->tempDocumentFooters[$index] = $this->setValueForPart($this->tempDocumentFooters[$index], $macro, $replace, $limit);
        }
    }

    /**
     * Returns array of all variables in template.
     *
     * @return string[]
     */
||||||||    public function setValue($macro, $replace, $limit = self::MAXIMUM_REPLACEMENTS_DEFAULT) {
        if (substr($macro, 0, 2) !== '${' && substr($macro, -1) !== '}') {
            $macro = '${' . $macro . '}';
        }

        if (!String::isUTF8($replace)) {
            $replace = utf8_encode($replace);
        }

        foreach ($this->tempDocumentHeaders as $index => $headerXML) {
            $this->tempDocumentHeaders[$index] = $this->setValueForPart($this->tempDocumentHeaders[$index], $macro, $replace, $limit);
        }

        $this->tempDocumentMainPart = $this->setValueForPart($this->tempDocumentMainPart, $macro, $replace, $limit);

        foreach ($this->tempDocumentFooters as $index => $headerXML) {
            $this->tempDocumentFooters[$index] = $this->setValueForPart($this->tempDocumentFooters[$index], $macro, $replace, $limit);
        }
    }

    /**
     * Returns array of all variables in template.
     *
     * @return string[]
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR))))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR))))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))))