    public static function getDocument(PhpWord $phpWord, $writerName = 'Word2007')
    {
        self::$file = tempnam(Settings::getTempDir(), 'PhpWord');
        if (false === self::$file) {
            throw new CreateTemporaryFileException();
        }

        if (!is_dir(Settings::getTempDir() . '/PhpWord_Unit_Test/')) {
            mkdir(Settings::getTempDir() . '/PhpWord_Unit_Test/');
        }

        $xmlWriter = IOFactory::createWriter($phpWord, $writerName);
        $xmlWriter->save(self::$file);

        $zip = new \ZipArchive;
        $res = $zip->open(self::$file);
        if ($res === true) {
            $zip->extractTo(Settings::getTempDir() . '/PhpWord_Unit_Test/');
            $zip->close();
        }

        return new XmlDocument(Settings::getTempDir() . '/PhpWord_Unit_Test/');
    }

    /**
     * Clear document
     */
||||||||    public static function getDocument(PhpWord $phpWord, $writerName = 'Word2007')
    {
        self::$file = tempnam(Settings::getTempDir(), 'PhpWord');
        if (false === self::$file) {
            throw new CreateTemporaryFileException();
        }

        if (!is_dir(Settings::getTempDir() . '/PhpWord_Unit_Test/')) {
            mkdir(Settings::getTempDir() . '/PhpWord_Unit_Test/');
        }

        $xmlWriter = IOFactory::createWriter($phpWord, $writerName);
        $xmlWriter->save(self::$file);

        $zip = new \ZipArchive;
        $res = $zip->open(self::$file);
        if (true === $res) {
            $zip->extractTo(Settings::getTempDir() . '/PhpWord_Unit_Test/');
            $zip->close();
        }

        return new XmlDocument(Settings::getTempDir() . '/PhpWord_Unit_Test/');
    }

    /**
     * Clear document
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_STATIC_CALL)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_STATIC_PROP))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_STATIC_PROP))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (AST_STATIC_CALL)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_STATIC_PROP))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_STATIC_PROP))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (SCALAR))))))