	public function init_charset() {
		if ( function_exists('is_multisite') && is_multisite() ) {
			$this->charset = 'utf8';
			if ( defined( 'DB_COLLATE' ) && DB_COLLATE ) {
				$this->collate = DB_COLLATE;
			} else {
				$this->collate = 'utf8_general_ci';
			}
		} elseif ( defined( 'DB_COLLATE' ) ) {
			$this->collate = DB_COLLATE;
		}

		if ( defined( 'DB_CHARSET' ) ) {
			$this->charset = DB_CHARSET;
		}

		if ( ( $this->use_mysqli && ! ( $this->dbh instanceof mysqli ) ) || empty( $this->dbh ) ) {
			return;
		}

		if ( 'utf8' === $this->charset && $this->has_cap( 'utf8mb4' ) ) {
			$this->charset = 'utf8mb4';
		}

		if ( 'utf8mb4' === $this->charset ) {
			// _general_ is outdated, so we can upgrade it to _unicode_, instead.
			if ( ! $this->collate || 'utf8_general_ci' === $this->collate ) {
				$this->collate = 'utf8mb4_unicode_ci';
			} else {
				$this->collate = str_replace( 'utf8_', 'utf8mb4_', $this->collate );
			}
		}
	}

	/**
	 * Sets the connection's character set.
	 *
	 * @since 3.1.0
	 *
	 * @param resource $dbh     The resource given by mysql_connect
	 * @param string   $charset Optional. The character set. Default null.
	 * @param string   $collate Optional. The collation. Default null.
	 */
||||||||	public function init_charset() {
		if ( function_exists('is_multisite') && is_multisite() ) {
			$this->charset = 'utf8';
			if ( defined( 'DB_COLLATE' ) && DB_COLLATE ) {
				$this->collate = DB_COLLATE;
			} else {
				$this->collate = 'utf8_general_ci';
			}
		} elseif ( defined( 'DB_COLLATE' ) ) {
			$this->collate = DB_COLLATE;
		}

		if ( defined( 'DB_CHARSET' ) ) {
			$this->charset = DB_CHARSET;
		}

		if ( ( $this->use_mysqli && ! ( $this->dbh instanceof mysqli ) ) || empty( $this->dbh ) ) {
			return;
		}

		if ( 'utf8' === $this->charset && $this->has_cap( 'utf8mb4' ) ) {
			$this->charset = 'utf8mb4';
		}

		if ( 'utf8mb4' === $this->charset ) {
			// _general_ is outdated, so we can upgrade it to _unicode_, instead.
			if ( ! $this->collate || 'utf8_general_ci' === $this->collate ) {
				$this->collate = 'utf8mb4_unicode_ci';
			} else {
				$this->collate = str_replace( 'utf8_', 'utf8mb4_', $this->collate );
			}
		}

		// _unicode_520_ is a better collation, we should use that when it's available.
		if ( $this->has_cap( 'utf8mb4_520' ) && 'utf8mb4_unicode_ci' === $this->collate ) {
			$this->collate = 'utf8mb4_unicode_520_ci';
		}
	}

	/**
	 * Sets the connection's character set.
	 *
	 * @since 3.1.0
	 *
	 * @param resource $dbh     The resource given by mysql_connect
	 * @param string   $charset Optional. The character set. Default null.
	 * @param string   $collate Optional. The collation. Default null.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_PROP
                                (AST_VAR)))))
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CALL))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_PROP
                                (AST_VAR)))))
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))))