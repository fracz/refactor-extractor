    public function createCollection($name, $capped = false, $size = 0, $max = 0)
    {
        $data = array(MongoUtil::$CREATE_COLLECTION => $name);
        if ($capped && $size) {
            $data[ "capped" ] = true;
            $data[ "size" ]   = $size;
            if ($max) {
                $data[ "max" ] = $max;
            }
        }

        MongoUtil::dbCommand($this->connection, $data, $this->name);
        return new MongoCollection($this, $name);
    }

    /**
     * Drops a collection.
     *
     * @param string|MongoCollection $coll collection to drop
     *
     * @return array the db response
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (AST_STATIC_PROP))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))))))))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)))))||||||||