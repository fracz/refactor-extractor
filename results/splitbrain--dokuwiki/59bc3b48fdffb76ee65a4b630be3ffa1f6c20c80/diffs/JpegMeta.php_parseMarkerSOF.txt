    function _parseMarkerSOF() {
        if (!isset($this->_markers)) {
            $this->_readJPEG();
        }

        if ($this->_markers == null) {
            return false;
        }

        $data = null;
        $count = count($this->_markers);
        for ($i = 0; $i < $count; $i++) {
            switch ($this->_markers[$i]['marker']) {
                case 0xC0: // SOF0
                case 0xC1: // SOF1
                case 0xC2: // SOF2
                case 0xC9: // SOF9
                    $data =& $this->_markers[$i]['data'];
                    $marker = $this->_markers[$i]['marker'];
                    break;
            }
        }

        if ($data == null) {
            $this->_info['sof'] = false;
            return false;
        }

        $pos = 0;
        $this->_info['sof'] = array();

        switch ($marker) {
            case 0xC0: // SOF0
                $format = 'Baseline';
                break;
            case 0xC1: // SOF1
                $format = 'Progessive';
                break;
            case 0xC2: // SOF2
                $format = 'Non-baseline';
                break;
            case 0xC9: // SOF9
                $format = 'Arithmetic';
                break;
            default:
                return false;
                break;
        }

        $this->_info['sof']['Format']          = $format;
        $this->_info['sof']['SamplePrecision'] = $this->_getByte($data, $pos + 0);
        $this->_info['sof']['ImageHeight']     = $this->_getShort($data, $pos + 1);
        $this->_info['sof']['ImageWidth']      = $this->_getShort($data, $pos + 3);
        $this->_info['sof']['ColorChannels']   = $this->_getByte($data, $pos + 5);

        return true;
    }

    /**
     * Parses the XMP data
     *
     * @author  Hakan Sandell <hakan.sandell@mydata.se>
     */
||||||||    function _parseMarkerSOF() {
        if (!isset($this->_markers)) {
            $this->_readJPEG();
        }

        if ($this->_markers == null) {
            return false;
        }

        $data = null;
        $count = count($this->_markers);
        for ($i = 0; $i < $count; $i++) {
            switch ($this->_markers[$i]['marker']) {
                case 0xC0: // SOF0
                case 0xC1: // SOF1
                case 0xC2: // SOF2
                case 0xC9: // SOF9
                    $data =& $this->_markers[$i]['data'];
                    $marker = $this->_markers[$i]['marker'];
                    break;
            }
        }

        if ($data == null) {
            $this->_info['sof'] = false;
            return false;
        }

        $pos = 0;
        $this->_info['sof'] = array();

        switch ($marker) {
            case 0xC0: // SOF0
                $format = 'Baseline';
                break;
            case 0xC1: // SOF1
                $format = 'Progessive';
                break;
            case 0xC2: // SOF2
                $format = 'Non-baseline';
                break;
            case 0xC9: // SOF9
                $format = 'Arithmetic';
                break;
            default:
                return false;
        }

        $this->_info['sof']['Format']          = $format;
        $this->_info['sof']['SamplePrecision'] = $this->_getByte($data, $pos + 0);
        $this->_info['sof']['ImageHeight']     = $this->_getShort($data, $pos + 1);
        $this->_info['sof']['ImageWidth']      = $this->_getShort($data, $pos + 3);
        $this->_info['sof']['ColorChannels']   = $this->_getByte($data, $pos + 5);

        return true;
    }

    /**
     * Parses the XMP data
     *
     * @author  Hakan Sandell <hakan.sandell@mydata.se>
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_SWITCH
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_BREAK
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_ARRAY))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_SWITCH
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_BREAK
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_ARRAY))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))