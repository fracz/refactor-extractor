    function putPage($put_id, $put_text, $put_summary='', $put_minor=0, $put_rev='', $put_pre='', $put_suf='') {
        global $TEXT;

        $TEXT = $put_text;

        // Check, if page is locked
        if (checklock($put_id) !== false)
            return 1;

        //spam check
        if(checkwordblock())
            return 2;

        lock($put_id);

        saveWikiText($put_id,con($put_pre,$put_text,$put_suf,1),$put_summary,$put_minor);

        unlock($put_id);

        return 0;
    }

    /**
     * Lists all links contained in a wiki page
     *
     * @author Michael Klier <chi@chimeric.de>
     */
||||||||    function putPage($id, $text, $params) {
        global $TEXT;

        $id    = cleanID($id);
        $TEXT  = trim($text);
        $sum   = $params['sum'];
        $minor = $params['minor'];

        if(empty($id))
            return new IXR_Error(1, 'Empty Page ID');

        if(auth_quickaclcheck($id) < AUTH_WRITE)
            return new IXR_Error(1, 'You are not allowed to edit this page');

        // Check, if page is locked
        if(checklock($id))
            return new IXR_Error(1, 'The page is currently locked');

        if(empty($TEXT))
            return new IXR_Error(1, 'No Text supplied');

        //spam check
        if(checkwordblock())
            return new IXR_Error(1, 'Positive wordblock check');

        lock($id);

        saveWikiText($id,$TEXT,$sum,$minor);

        unlock($id);

        return 0;
    }

    /**
     * Lists all links contained in a wiki page
     *
     * @author Michael Klier <chi@chimeric.de>
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (SCALAR)))