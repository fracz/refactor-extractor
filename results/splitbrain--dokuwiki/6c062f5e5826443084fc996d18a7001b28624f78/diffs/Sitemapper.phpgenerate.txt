    public function generate(){
        global $conf;
        dbglog('sitemapGenerate(): started');
        if(!$conf['sitemap']) return false;

        $sitemap = Sitemapper::getFilePath();
        dbglog("runSitemapper(): using $sitemap");

        if(@file_exists($sitemap)){
            if(!is_writable($sitemap)) return false;
        }else{
            if(!is_writable(dirname($sitemap))) return false;
        }

        if(@filesize($sitemap) &&
           @filemtime($sitemap) > (time()-($conf['sitemap']*60*60*24))){
            dbglog('runSitemapper(): Sitemap up to date');
            return false;
        }

        $pages = idx_getIndex('page', '');
        dbglog('runSitemapper(): creating sitemap using '.count($pages).' pages');
        $items = array();

        // build the sitemap items
        foreach($pages as $id){
            //skip hidden, non existing and restricted files
            if(isHiddenPage($id)) continue;
            if(auth_aclcheck($id,'','') < AUTH_READ) continue;
            $items[] = SitemapItem::createFromID($id);
        }

        $eventData = array('items' => &$items, 'sitemap' => &$sitemap);
        $event = new Doku_Event('SITEMAP_GENERATE', $eventData);
        if ($event->advise_before(true)) {
            //save the new sitemap
            $result = io_saveFile($sitemap, Sitemapper::getXML($items));
        }
        $event->advise_after();

        return $result;
    }

||||||||    public function generate(){
        global $conf;
        if($conf['sitemap'] < 1 || !is_numeric($conf['sitemap'])) return false;

        $sitemap = Sitemapper::getFilePath();

        if(@file_exists($sitemap)){
            if(!is_writable($sitemap)) return false;
        }else{
            if(!is_writable(dirname($sitemap))) return false;
        }

        if(@filesize($sitemap) &&
           @filemtime($sitemap) > (time()-($conf['sitemap']*86400))){ // 60*60*24=86400
            dbglog('Sitemapper::generate(): Sitemap up to date'); // FIXME: only in debug mode
            return false;
        }

        dbglog("Sitemapper::generate(): using $sitemap"); // FIXME: Only in debug mode

        $pages = idx_getIndex('page', '');
        dbglog('Sitemapper::generate(): creating sitemap using '.count($pages).' pages');
        $items = array();

        // build the sitemap items
        foreach($pages as $id){
            //skip hidden, non existing and restricted files
            if(isHiddenPage($id)) continue;
            if(auth_aclcheck($id,'','') < AUTH_READ) continue;
            $items[] = SitemapItem::createFromID($id);
        }

        $eventData = array('items' => &$items, 'sitemap' => &$sitemap);
        $event = new Doku_Event('SITEMAP_GENERATE', $eventData);
        if ($event->advise_before(true)) {
            //save the new sitemap
            $result = io_saveFile($sitemap, Sitemapper::getXML($items));
        }
        $event->advise_after();

        return $result;
    }

    /**
     * Builds the sitemap XML string from the given array auf SitemapItems.
     *
     * @param $items array The SitemapItems that shall be included in the sitemap.
     * @return string The sitemap XML.
     * @author Michael Hamann
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_CALL
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_CALL
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))