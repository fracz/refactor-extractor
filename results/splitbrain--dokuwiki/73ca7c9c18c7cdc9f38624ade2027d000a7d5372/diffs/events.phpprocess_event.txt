  function process_event(&$event,$advise='') {

    $evt_name = $event->name . ($advise ? '_'.$advise : '_BEFORE');

    if (!empty($this->_hooks[$evt_name])) {
      $hook = reset($this->_hooks[$evt_name]);
      do {
        list($obj, $method, $param) = $hook;
        if (is_null($obj)) {
          $method($event, $param);
        } else {
          $obj->$method($event, $param);
        }

      } while ($event->_continue && $hook = next($this->_hooks[$evt_name]));
    }

    return $event->_default;
  }
}

// function wrapper to enable one line event triggering
function trigger_event($name, &$data, $action=NULL, $canPreventDefault=true) {

  $evt = new Doku_Event($name, $data);
  return $evt->trigger($action, $canPreventDefault);
}

// create the event handler
$EVENT_HANDLER = new Doku_Event_Handler();||||||||  function process_event(&$event,$advise='') {

    $evt_name = $event->name . ($advise ? '_'.$advise : '_BEFORE');

    if (!empty($this->_hooks[$evt_name])) {
      $hook = reset($this->_hooks[$evt_name]);
      do {
        list($obj, $method, $param) = $hook;
        if (is_null($obj)) {
          $method($event, $param);
        } else {
          $obj->$method($event, $param);
        }

      } while ($event->_continue && $hook = next($this->_hooks[$evt_name]));
    }
  }
}

/**
 *  trigger_event
 *
 *  function wrapper to process (create, trigger and destroy) an event
 *
 *  @PARAM  $name               (string)   name for the event
 *  @PARAM  $data               (mixed)    event data
 *  @PARAM  $action             (callback) (optional, default=NULL) default action, a php callback function
 *  @PARAM  $canPreventDefault  (bool)     (optional, default=true) can hooks prevent the default action
 *
 *  @RETURN (mixed)                        the event results value after all event processing is complete
 *                                         by default this is the return value of the default action however
 *                                         it can be set or modified by event handler hooks
 */
function trigger_event($name, &$data, $action=NULL, $canPreventDefault=true) {

  $evt = new Doku_Event($name, $data);
  return $evt->trigger($action, $canPreventDefault);
}

// create the event handler
$EVENT_HANDLER = new Doku_Event_Handler();||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_DO_WHILE
                    (
                        (AST_ASSIGN
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_DO_WHILE
                    (
                        (AST_ASSIGN
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))))))))))