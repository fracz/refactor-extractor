	public function action_index()
	{
		$value = "This is the string to encrypt!";
		$this->request->output = 'Before: '.$value.'<br />';

		// enable mcrypt for encryption
		Encrypt::set('use_mcrypt', true);

		$value = Encrypt::encrypt($value);
		$this->request->output .= 'Encrypted: '.$value.'<br />';

		// disable mcrypt for decryption
		Encrypt::set('use_mcrypt', false);

		$value = Encrypt::decrypt($value);
		$this->request->output .= 'Decrypted: '.$value.'<br />';

		// we should still see a decrypted value due to autodetect
	}
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR))))||||||||