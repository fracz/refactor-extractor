	public static function parse($uri, $reload = false)
	{
		static::load_routes();

		// This handles the default route
		if ($uri->uri == '')
		{
			if ( ! isset(static::$routes['#']) || static::$routes['#'] == '')
			{
				// TODO: write logic to deal with missing default route.
				return false;
			}
			else
			{
				return static::parse_match(static::$routes['#']);
			}
		}

		foreach (static::$routes as $search => $route)
		{
			$result = static::_parse_search($uri, $search, $route);

			if ($result)
			{
				return $result;
			}
		}

		return static::parse_match($uri->uri);
	}

	/**
	 * Parse module routes
	 *
	 * This first adds the given routes to the current loaded routes and then
	 * reparses the given uri.
	 *
	 * @param	string	current module name
	 * @param	array	new routes
	 * @param	string	uri to reparse
	 * @return	array	parsed routing info
	 */
||||||||	public static function parse($uri, $reload = false)
	{
		static::load_routes($reload);

		// This handles the default route
		if ($uri->uri == '')
		{
			if ( ! isset(static::$routes['#']) || static::$routes['#'] == '')
			{
				// TODO: write logic to deal with missing default route.
				return false;
			}
			else
			{
				return static::parse_match(static::$routes['#']);
			}
		}

		foreach (static::$routes as $search => $route)
		{
			$result = static::_parse_search($uri, $search, $route);

			if ($result)
			{
				return $result;
			}
		}

		return static::parse_match($uri->uri);
	}

	/**
	 * Parse module routes
	 *
	 * This first adds the given routes to the current loaded routes and then
	 * reparses the given uri.
	 *
	 * @param	string	current module name
	 * @param	array	new routes
	 * @param	string	uri to reparse
	 * @return	array	parsed routing info
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_STATIC_PROP)
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (AST_DIM
                                            (AST_STATIC_PROP)
                                            (SCALAR)))))))))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_STATIC_PROP)
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (AST_DIM
                                            (AST_STATIC_PROP)
                                            (SCALAR)))))))))))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))))))