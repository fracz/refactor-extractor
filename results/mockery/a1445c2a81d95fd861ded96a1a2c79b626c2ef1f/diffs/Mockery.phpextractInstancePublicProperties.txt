||||||||    private static function extractInstancePublicProperties($object, $nesting)
    {
        $reflection = new \ReflectionClass(get_class($object));
        $properties = $reflection->getProperties(\ReflectionProperty::IS_PUBLIC & ~ \ReflectionProperty::IS_STATIC);
        $cleanedProperties = array();

        foreach ($properties as $publicProperty) {
            $name = $publicProperty->getName();
            $cleanedProperties[$name] = self::cleanupNesting($object->$name, $nesting);
        }

        return $cleanedProperties;
    }

    /**
     * Returns all object getters.
     *
     * @param $object
     * @param $nesting
     *
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_UNARY_OP
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))