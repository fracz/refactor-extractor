    public function testWriteTableThrowsExceptionOnInvalidType()
    {
        $this->setExpectedException('PhpAmqpLib\Exception\AMQPInvalidArgumentException', 'Invalid type "_"');

        $this->_writer->write_table(array(
            'x-foo' => array('_', 'bar'),
        ));
    }
}||||||||    public function testWriteTableThrowsExceptionOnInvalidType()
    {
        $this->setExpectedException('PhpAmqpLib\Exception\AMQPOutOfRangeException');

        $this->_writer->write_table(array(
            'x-foo' => array('_', 'bar'),
        ));
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (SCALAR))))))