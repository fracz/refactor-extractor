||||||||    public function testSignedLonglongWriteRead()
    {
        for ($i = 0; $i < self::LONG_RND_ITERS; $i++) {
            $this->signedLonglongWriteRead(mt_rand(-PHP_INT_MAX - 1, PHP_INT_MAX));
        }

        $this->signedLonglongWriteRead('-9223372036854775808');
        $this->signedLonglongWriteRead('-9223372036854775807');
        $this->signedLonglongWriteRead('-9223372036854775806');

        $this->signedLonglongWriteRead('-4294967297');
        $this->signedLonglongWriteRead('-4294967296');
        $this->signedLonglongWriteRead('-4294967295');

        $this->signedLonglongWriteRead('-2147483649');
        $this->signedLonglongWriteRead('-2147483648');
        $this->signedLonglongWriteRead('-2147483647');

        $this->signedLonglongWriteRead('-2');
        $this->signedLonglongWriteRead('-1');
        $this->signedLonglongWriteRead('0');
        $this->signedLonglongWriteRead('1');
        $this->signedLonglongWriteRead('2');

        $this->signedLonglongWriteRead('2147483646');
        $this->signedLonglongWriteRead('2147483647');
        $this->signedLonglongWriteRead('2147483648');

        $this->signedLonglongWriteRead('4294967294');
        $this->signedLonglongWriteRead('4294967295');
        $this->signedLonglongWriteRead('4294967296');

        $this->signedLonglongWriteRead('9223372036854775805');
        $this->signedLonglongWriteRead('9223372036854775806');
        $this->signedLonglongWriteRead('9223372036854775807');
    }



||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR))))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CONST)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))