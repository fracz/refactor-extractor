||||||||    public function testConflictingFieldSymbols()
    {
        $this->setProtoVersion(Wire\AMQPAbstractCollection::PROTO_091);

        $a = new Wire\AMQPArray();
        $a->push(576, Wire\AMQPArray::T_INT_SHORT);
        $a->push(1234567, Wire\AMQPArray::T_INT_LONGLONG);

        $this->assertEquals(
            array(
                array(Wire\AMQPAbstractCollection::getDataTypeForSymbol('U'), 576),
                array(Wire\AMQPAbstractCollection::getDataTypeForSymbol('L'), 1234567)
            ),
            $this->getEncodedRawData($a)
        );


        $this->setProtoVersion(Wire\AMQPAbstractCollection::PROTO_RBT);

        $a = new Wire\AMQPArray();
        $a->push(576, Wire\AMQPArray::T_INT_SHORT);
        $a->push(1234567, Wire\AMQPArray::T_INT_LONGLONG);

        $this->assertEquals(
            array(
                array(Wire\AMQPAbstractCollection::getDataTypeForSymbol('s'), 576),
                array(Wire\AMQPAbstractCollection::getDataTypeForSymbol('l'), 1234567)
            ),
            $this->getEncodedRawData($a)
        );
    }



||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))