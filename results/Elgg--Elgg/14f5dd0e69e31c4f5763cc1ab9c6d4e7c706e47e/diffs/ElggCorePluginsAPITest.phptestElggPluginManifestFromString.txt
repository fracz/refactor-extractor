	public function testElggPluginManifestFromString() {
		$manifest_file = file_get_contents(elgg_get_config('path') . 'engine/tests/test_files/plugin_18/manifest.xml');
		$manifest = new \ElggPluginManifest($manifest_file);

		$this->assertIsA($manifest, \ElggPluginManifest::class);
	}

||||||||	public function testElggPluginManifestFromString() {
		$manifest_file = file_get_contents(Paths::elgg() . 'engine/tests/test_files/plugin_18/manifest.xml');
		$manifest = new \ElggPluginManifest($manifest_file);

		$this->assertIsA($manifest, \ElggPluginManifest::class);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR)))))