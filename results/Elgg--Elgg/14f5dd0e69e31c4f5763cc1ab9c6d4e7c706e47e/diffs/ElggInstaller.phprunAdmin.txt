||||||||	protected function runAdmin($submissionVars) {
		$formVars = [
			'displayname' => [
				'type' => 'text',
				'value' => '',
				'required' => true,
				],
			'email' => [
				'type' => 'email',
				'value' => '',
				'required' => true,
				],
			'username' => [
				'type' => 'text',
				'value' => '',
				'required' => true,
				],
			'password1' => [
				'type' => 'password',
				'value' => '',
				'required' => true,
				'pattern' => '.{6,}',
				],
			'password2' => [
				'type' => 'password',
				'value' => '',
				'required' => true,
				],
		];

		if ($this->is_action) {
			call_user_func(function () use ($submissionVars, $formVars) {
				if (!$this->validateAdminVars($submissionVars, $formVars)) {
					return;
				}

				if (!$this->createAdminAccount($submissionVars, $this->autoLogin)) {
					return;
				}

				system_message(elgg_echo('install:success:admin'));

				$this->continueToNextStep('admin');
			});
		}

		// Bit of a hack to get the password help to show right number of characters
		// We burn the value into the stored translation.
		$lang = $this->services->translator->getCurrentLanguage();
		$translations = $this->services->translator->getLoadedTranslations();
		$this->services->translator->addTranslation($lang, [
			'install:admin:help:password1' => sprintf(
				$translations[$lang]['install:admin:help:password1'],
				$this->config->min_password_length
			),
		]);

		$formVars = $this->makeFormSticky($formVars, $submissionVars);

		$this->render('admin', ['variables' => $formVars]);
	}

	/**
	 * Controller for last step
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (
                                            (AST_RETURN
                                                (NULL)))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))))
                                        (
                                            (AST_RETURN
                                                (NULL)))))
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))))))