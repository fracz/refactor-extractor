	public function setUp() {
		_elgg_services()->events->backup();

		$this->entity1 = new ElggObject();
		$this->entity1->subtype = 'elgg_relationship_test';
		$this->entity1->access_id = ACCESS_PUBLIC;
		$this->entity1->save();

		$this->entity2 = new ElggObject();
		$this->entity2->subtype = 'elgg_relationship_test';
		$this->entity2->access_id = ACCESS_PUBLIC;
		$this->entity2->save();

		$this->entity3 = new ElggObject();
		$this->entity3->subtype = 'elgg_relationship_test';
		$this->entity3->access_id = ACCESS_PUBLIC;
		$this->entity3->save();
	}

	/**
	 * Called after each test method.
	 */
||||||||	public function setUp() {
		_elgg_services()->hooks->getEvents()->backup();

		$this->entity1 = new ElggObject();
		$this->entity1->subtype = 'elgg_relationship_test';
		$this->entity1->access_id = ACCESS_PUBLIC;
		$this->entity1->save();

		$this->entity2 = new ElggObject();
		$this->entity2->subtype = 'elgg_relationship_test';
		$this->entity2->access_id = ACCESS_PUBLIC;
		$this->entity2->save();

		$this->entity3 = new ElggObject();
		$this->entity3->subtype = 'elgg_relationship_test';
		$this->entity3->access_id = ACCESS_PUBLIC;
		$this->entity3->save();
	}

	/**
	 * Called after each test method.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_CALL)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_CALL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))))