	function load() {
		if ($this->timer) {
			$this->timer->begin([__METHOD__]);
		}

		$plugins_path = elgg_get_plugins_path();
		$start_flags = ELGG_PLUGIN_INCLUDE_START |
						ELGG_PLUGIN_REGISTER_VIEWS |
						ELGG_PLUGIN_REGISTER_LANGUAGES |
						ELGG_PLUGIN_REGISTER_CLASSES;

		if (!$plugins_path) {
			return false;
		}

		// temporary disable all plugins if there is a file called 'disabled' in the plugin dir
		if (file_exists("$plugins_path/disabled")) {
			if (elgg_is_admin_logged_in() && elgg_in_context('admin')) {
				system_message(_elgg_services()->translator->translate('plugins:disabled'));
			}
			return false;
		}

		if (elgg_get_config('system_cache_loaded')) {
			$start_flags = $start_flags & ~ELGG_PLUGIN_REGISTER_VIEWS;
		}

		if (!empty($GLOBALS['_ELGG']->i18n_loaded_from_cache)) {
			$start_flags = $start_flags & ~ELGG_PLUGIN_REGISTER_LANGUAGES;
		}

		$return = true;
		$plugins = $this->find('active');
		if ($plugins) {
			foreach ($plugins as $plugin) {
				$id = $plugin->getID();
				try {
					$plugin->start($start_flags);
					$this->active_ids[$id] = true;
				} catch (Exception $e) {
					$plugin->deactivate();
					$msg = _elgg_services()->translator->translate('PluginException:CannotStart',
									array($id, $plugin->guid, $e->getMessage()));
					elgg_add_admin_notice("cannot_start $id", $msg);
					$return = false;

					continue;
				}
			}
		}

		$this->active_ids_known = true;

		if ($this->timer) {
			$this->timer->end([__METHOD__]);
		}

		return $return;
	}

	/**
	 * Returns an ordered list of plugins
	 *
	 * @param string $status    The status of the plugins. active, inactive, or all.
	 * @param mixed  $site_guid Optional site guid
	 * @return \ElggPlugin[]
	 */
||||||||	function load() {
		if ($this->timer) {
			$this->timer->begin([__METHOD__]);
		}

		$plugins_path = elgg_get_plugins_path();
		$start_flags = ELGG_PLUGIN_INCLUDE_START |
						ELGG_PLUGIN_REGISTER_VIEWS |
						ELGG_PLUGIN_REGISTER_LANGUAGES |
						ELGG_PLUGIN_REGISTER_CLASSES;

		if (!$plugins_path) {
			return false;
		}

		// temporary disable all plugins if there is a file called 'disabled' in the plugin dir
		if (file_exists("$plugins_path/disabled")) {
			if (elgg_is_admin_logged_in() && elgg_in_context('admin')) {
				system_message(_elgg_services()->translator->translate('plugins:disabled'));
			}
			return false;
		}

		if (elgg_get_config('system_cache_loaded')) {
			$start_flags = $start_flags & ~ELGG_PLUGIN_REGISTER_VIEWS;
		}

		if (!empty($GLOBALS['_ELGG']->i18n_loaded_from_cache)) {
			$start_flags = $start_flags & ~ELGG_PLUGIN_REGISTER_LANGUAGES;
		}

		$plugins = $this->boot_plugins;
		if (!$plugins) {
			$this->active_guids_known = true;
			return true;
		}

		$return = true;
		foreach ($plugins as $plugin) {
			$id = $plugin->getID();
			try {
				$plugin->start($start_flags);
				$this->active_guids[$id] = $plugin->guid;
			} catch (Exception $e) {
				$plugin->deactivate();
				$msg = _elgg_services()->translator->translate('PluginException:CannotStart',
								array($id, $plugin->guid, $e->getMessage()));
				elgg_add_admin_notice("cannot_start $id", $msg);
				$return = false;
			}
		}

		$this->active_guids_known = true;

		if ($this->timer) {
			$this->timer->end([__METHOD__]);
		}
		return $return;
	}

	/**
	 * Returns an ordered list of plugins
	 *
	 * @param string $status    The status of the plugins. active, inactive, or all.
	 * @param mixed  $site_guid Optional site guid
	 * @return \ElggPlugin[]
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))
                (AST_CONST))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_CALL))
                                        (
                                            (SCALAR))))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_TRY
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_CONST)))
                            (AST_CATCH_LIST
                                (AST_CATCH
                                    (AST_NAME_LIST)
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_CALL))
                                                (
                                                    (SCALAR)
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_VAR)
                                                            (NULL))
                                                        (AST_ARRAY_ELEM
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (NULL))
                                                        (AST_ARRAY_ELEM
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))
                                                            (NULL))))))
                                        (AST_CALL
                                            (
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (AST_VAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_CONTINUE
                                            (NULL)))))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST))
                (AST_CONST))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_CALL))
                                        (
                                            (SCALAR))))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_UNARY_OP
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_TRY
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_CALL))
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (NULL))))))
                            (AST_CALL
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_MAGIC_CONST)
                                (NULL))))))))
    (AST_RETURN
        (AST_VAR)))