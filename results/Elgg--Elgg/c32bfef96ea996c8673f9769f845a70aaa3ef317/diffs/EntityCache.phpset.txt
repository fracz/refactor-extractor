	public function set(ElggEntity $entity) {
		$this->checkGlobal();

		$guid = $entity->guid;

		if (!$guid || isset($this->entities[$guid]) || isset($this->disabled_guids[$guid])) {
			// have it or not saved
			return;
		}

		// Don't cache non-plugin entities while access control is off, otherwise they could be
		// exposed to users who shouldn't see them when control is re-enabled.
		if (!($entity instanceof \ElggPlugin) && $this->session->getIgnoreAccess()) {
			return;
		}

		// Don't store too many or we'll have memory problems
		if (count($this->entities) > self::MAX_SIZE) {
			$this->remove(array_rand($this->entities));
		}

		$this->entities[$guid] = $entity;
		$GLOBALS['ENTITY_CACHE'] = $this->entities;
	}

	/**
	 * Invalidate this class's entry in the cache.
	 *
	 * @param int $guid The entity guid
	 * @return void
	 */
||||||||	public function set(ElggEntity $entity) {
		$this->checkGlobal();

		$guid = $entity->guid;

		if ($this->memcache) {
			$this->memcache->save($guid, $entity);
		}

		if (!$guid || isset($this->entities[$guid]) || isset($this->disabled_guids[$guid])) {
			// have it or not saved
			return;
		}

		// Don't cache non-plugin entities while access control is off, otherwise they could be
		// exposed to users who shouldn't see them when control is re-enabled.
		if (!($entity instanceof \ElggPlugin) && $this->session->getIgnoreAccess()) {
			return;
		}

		// Don't store too many or we'll have memory problems
		if (count($this->entities) > self::MAX_SIZE) {
			$this->remove(array_rand($this->entities));
		}

		$this->entities[$guid] = $entity;
		$GLOBALS['ENTITY_CACHE'] = $this->entities;

		if ($entity instanceof \ElggUser) {
			$this->username_cache[$entity->guid] = $entity->username;
		}
	}

	/**
	 * Invalidate this class's entry in the cache.
	 *
	 * @param int $guid The entity guid
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_ISSET
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_ISSET
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_VAR)))))))