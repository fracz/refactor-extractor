	public function __construct() {

		$sp = _elgg_services();

		$this->setFactory('db', function(MockServiceProvider $m) use ($sp) {
			$config = $this->getTestingDatabaseConfig();
			return new \Elgg\Mocks\Database($config, $sp->logger);
		});

		$this->setFactory('entityTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\EntityTable($sp->config, $m->db);
		});

		$this->setFactory('metadataTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\MetadataTable($sp->metadataCache, $m->db, $m->entityTable, $sp->events, $m->metastringsTable, $sp->session);
		});

		$this->setFactory('annotations', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\Annotations($m->db, $sp->session, $sp->events);
		});

		$this->setFactory('metastringsTable', function(MockServiceProvider $m) {
			$pool = new \Elgg\Cache\Pool\InMemory();
			return new \Elgg\Mocks\Database\MetastringsTable($pool, $m->db);
		});

		$this->setFactory('relationshipsTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\RelationshipsTable($m->db, $m->entityTable, $m->metadataTable, $sp->events);
		});

		$this->setFactory('subtypeTable', function(MockServiceProvider $m) {
			return new \Elgg\Mocks\Database\SubtypeTable($m->db);
		});

		$this->setFactory('accessCollections', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\AccessCollections($sp->config, $m->db, $m->entityTable, $sp->accessCache, $sp->hooks, $sp->session, $sp->translator);
		});

		$this->setFactory('accessCollections', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\AccessCollections($sp->config, $m->db, $m->entityTable, $sp->accessCache, $sp->hooks, $sp->session, $sp->translator);
		});

		$this->setFactory('datalist', function(MockServiceProvider $m) use ($sp) {
			$db = $m->db;
			$dbprefix = $db->prefix;
			$pool = new \Elgg\Cache\Pool\InMemory();
			return new \Elgg\Mocks\Database\Datalist($pool, $db, $sp->logger, "{$dbprefix}datalists");
		});
	}

	/**
	 * Setup testing database config
	 *
	 * @return \Elgg\Database\Config
	 */
||||||||	public function __construct() {

		$sp = _elgg_services();

		$this->setFactory('db', function(MockServiceProvider $m) use ($sp) {
			$config = $this->getTestingDatabaseConfig();
			return new \Elgg\Mocks\Database($config, $sp->logger);
		});

		$this->setFactory('entityTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\EntityTable(
				$sp->config,
				$m->db,
				$sp->entityCache,
				$sp->metadataCache,
				$m->subtypeTable,
				$sp->events,
				$sp->session,
				$sp->translator,
				$sp->logger
			);
		});

		$this->setFactory('metadataTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\MetadataTable($sp->metadataCache, $m->db, $m->entityTable, $sp->events, $m->metastringsTable, $sp->session);
		});

		$this->setFactory('annotations', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\Annotations($m->db, $sp->session, $sp->events);
		});

		$this->setFactory('metastringsTable', function(MockServiceProvider $m) {
			$pool = new \Elgg\Cache\Pool\InMemory();
			return new \Elgg\Mocks\Database\MetastringsTable($pool, $m->db);
		});

		$this->setFactory('relationshipsTable', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\RelationshipsTable($m->db, $m->entityTable, $m->metadataTable, $sp->events);
		});

		$this->setFactory('subtypeTable', function(MockServiceProvider $m) {
			return new \Elgg\Mocks\Database\SubtypeTable($m->db);
		});

		$this->setFactory('accessCollections', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\AccessCollections(
				$sp->config,
				$m->db,
				$m->entityTable,
				$sp->accessCache,
				$sp->hooks,
				$sp->session,
				$sp->translator
			);
		});

		$this->setFactory('accessCollections', function(MockServiceProvider $m) use ($sp) {
			return new \Elgg\Mocks\Database\AccessCollections(
				$sp->config,
				$m->db,
				$m->entityTable,
				$sp->accessCache,
				$sp->hooks,
				$sp->session,
				$sp->translator
			);
		});

		$this->setFactory('datalist', function(MockServiceProvider $m) use ($sp) {
			$db = $m->db;
			$dbprefix = $db->prefix;
			$pool = new \Elgg\Cache\Pool\InMemory();
			return new \Elgg\Mocks\Database\Datalist($pool, $db, $sp->logger, "{$dbprefix}datalists");
		});
	}

	/**
	 * Setup testing database config
	 *
	 * @return \Elgg\Database\Config
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))
                                (AST_ENCAPS_LIST
                                    (AST_VAR)
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))
                                (AST_ENCAPS_LIST
                                    (AST_VAR)
                                    (SCALAR))))))))))