||||||||	public function setClassNames(array $map) {
		foreach ($map as $name => $classname) {
			if (!is_string($classname) || !preg_match(self::CLASS_NAME_PATTERN, $classname)) {
				throw new InvalidArgumentException('Class names must be valid PHP class names');
			}
			$this->setFactory($name, create_function('', "return new $classname();"));
		}
		return $this;
	}

	/**
	 * Remove a value from the container
	 *
	 * @param string $name The name of the value
	 * @return Elgg_DIContainer
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_VAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))