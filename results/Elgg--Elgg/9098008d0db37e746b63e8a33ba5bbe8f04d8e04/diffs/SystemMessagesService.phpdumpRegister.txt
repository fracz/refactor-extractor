||||||||	function dumpRegister($name = '') {
		$registers = $this->loadRegisters($name);

		if ($name !== "") {
			$return = array();
			$return[$name] = empty($registers[$name]) ? [] : $registers[$name];
			unset($registers[$name]);
		} else {
			$return = $registers;
			$registers = array();
		}

		$this->saveRegisters($registers);
		return $return;
	}

	/**
	 * Counts the number of messages, either globally or in a particular register
	 *
	 * @param string $register_name Optionally, the register
	 *
	 * @return integer The number of messages
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_CONDITIONAL
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ARRAY)
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))))
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))