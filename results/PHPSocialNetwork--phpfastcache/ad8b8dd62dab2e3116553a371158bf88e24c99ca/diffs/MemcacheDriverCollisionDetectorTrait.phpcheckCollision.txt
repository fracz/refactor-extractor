||||||||    public static function checkCollision($driverName)
    {
        $CONSTANT_NAME = __NAMESPACE__ . '\MEMCACHE_DRIVER_USED';

        if ($driverName && is_string($driverName)) {
            if (!defined($CONSTANT_NAME)) {
                define($CONSTANT_NAME, $driverName);

                return true;
            } else if (constant($CONSTANT_NAME) !== $driverName) {
                trigger_error('Memcache collision detected, you used both Memcache and Memcached driver in your script, this may leads to unexpected behaviours',
                  E_USER_WARNING);

                return false;
            }

            return true;
        }

        return false;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_VAR))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CONST)))
                                        (AST_RETURN
                                            (AST_CONST))))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))