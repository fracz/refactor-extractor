||||||||    public function offsetSet($offset, $value)
    {
        trigger_error($this->getDeprecatedMsg(), E_USER_DEPRECATED);
        if (!is_string($offset)) {
            throw new InvalidArgumentException('$offset must be a string');
        } else {
            if (property_exists($this, $offset)) {
                $this->{$offset} = $value;
            } else {
                throw new LogicException("Property {$offset} does not exists");
            }
        }
    }

    /**
     * @param string $offset
     * @return bool
     * @throws InvalidArgumentException
     * @throws LogicException
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))))))))))