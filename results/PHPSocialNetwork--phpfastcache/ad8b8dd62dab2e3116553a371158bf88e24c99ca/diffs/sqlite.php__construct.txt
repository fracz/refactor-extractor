    public function __construct($config = array())
    {
        /**
         * init the path
         */
        $this->setup($config);
        if (!$this->checkdriver()) {
            throw new phpFastCacheDriverException('SQLITE is not installed, cannot continue.');
        }

        if (!file_exists($this->getPath() . '/' . self::SQLITE_DIR)) {
            if (!mkdir($this->getPath() . '/' . self::SQLITE_DIR, $this->__setChmodAuto(), true)) {
                $this->fallback = true;
            }
        }
        $this->path = $this->getPath() . '/' . self::SQLITE_DIR;
    }

    /**
     * INIT NEW DB
     * @param \PDO $db
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR))
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_CONST))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR)))))||||||||