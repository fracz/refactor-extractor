    public function askSlotsMap(NodeConnectionInterface $connection = null)
    {
        if (!$connection && !$connection = $this->getRandomConnection()) {
            return array();
        }

        $command = RawCommand::create('CLUSTER', 'SLOTS');
        $response = $connection->executeCommand($command);

        foreach ($response as $slots) {
            // We only support master servers for now, so we ignore subsequent
            // elements in the $slots array identifying slaves.
            list($start, $end, $master) = $slots;

            if ($master[0] === '') {
                $this->setSlots($start, $end, (string) $connection);
            } else {
                $this->setSlots($start, $end, "{$master[0]}:{$master[1]}");
            }
        }

        return $this->slotsMap;
    }

    /**
     * Returns the current slots map for the cluster.
     *
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CAST
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||