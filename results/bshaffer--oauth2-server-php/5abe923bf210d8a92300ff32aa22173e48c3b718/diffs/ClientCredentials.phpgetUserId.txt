    public function getUserId()
    {
        $this->loadClientData();

        return isset($this->clientData['user_id']) ? $this->clientData['user_id'] : null;
    }

||||||||    public function getUserId()
    {
        $this->loadClientData();

        return isset($this->clientData['user_id']) ? $this->clientData['user_id'] : null;
    }

    /**
     * Create access token
     *
     * @param AccessTokenInterface $accessToken
     * @param mixed                $client_id   - client identifier related to the access token.
     * @param mixed                $user_id     - user id associated with the access token
     * @param string               $scope       - scopes to be stored in space-separated string.
     * @return array
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST))))