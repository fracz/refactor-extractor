  public function testPermittedCharactersAreNotEncoded()
  {
    /* -- RFC 2045, 6.7 --
    (2)   (Literal representation) Octets with decimal values of
          33 through 60 inclusive, and 62 through 126, inclusive,
          MAY be represented as the US-ASCII characters which
          correspond to those octets (EXCLAMATION POINT through
          LESS THAN, and GREATER THAN through TILDE,
          respectively).
          */

    foreach (array_merge(range(33, 60), range(62, 126)) as $ordinal)
    {
      $char = chr($ordinal);

      $charStream = $this->_createCharStream();
      $this->_mockery()->checking(Expectations::create()
        -> one($charStream)->flushContents()
        -> one($charStream)->importString($char)
        -> one($charStream)->readBytes(optional()) -> returns(array($ordinal))
        -> atLeast(1)->of($charStream)->readBytes(optional()) -> returns(false)
        );

      $encoder = new Swift_Encoder_QpEncoder($charStream);

      $this->assertIdenticalBinary($char, $encoder->encodeString($char));
    }
  }

||||||||  public function testPermittedCharactersAreNotEncoded()
  {
    /* -- RFC 2045, 6.7 --
    (2)   (Literal representation) Octets with decimal values of
          33 through 60 inclusive, and 62 through 126, inclusive,
          MAY be represented as the US-ASCII characters which
          correspond to those octets (EXCLAMATION POINT through
          LESS THAN, and GREATER THAN through TILDE,
          respectively).
          */

    foreach (array_merge(range(33, 60), range(62, 126)) as $ordinal)
    {
      $char = chr($ordinal);

      $charStream = $this->_createCharStream();
      $this->_checking(Expectations::create()
        -> one($charStream)->flushContents()
        -> one($charStream)->importString($char)
        -> one($charStream)->readBytes(optional()) -> returns(array($ordinal))
        -> atLeast(1)->of($charStream)->readBytes(optional()) -> returns(false)
        );

      $encoder = new Swift_Encoder_QpEncoder($charStream);

      $this->assertIdenticalBinary($char, $encoder->encodeString($char));
    }
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOREACH
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_STATIC_CALL)
                                                                (
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_VAR)))
                                                    (
                                                        (AST_VAR)))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL)))
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL)))))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_CALL)))
                        (
                            (AST_CONST)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOREACH
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_STATIC_CALL)
                                                                (
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_VAR)))
                                                    (
                                                        (AST_VAR)))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL)))
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (NULL)))))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_CALL)))
                        (
                            (AST_CONST)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))))