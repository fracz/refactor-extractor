  public function testCleanCloneIsCreated()
  {
    $context = new Mockery();
    $buf = $context->mock('Swift_Transport_EsmtpBufferWrapper');

    $evt = new Swift_Events_ResponseEvent();
    $evt->response = "250 Ok\r\n";
    $evt->result = Swift_Events_ResponseEvent::RESULT_INVALID;

    $clone = $evt->cloneFor($buf);
    $source = $clone->getSource();
    $this->assertReference($buf, $source);
    $this->assertEqual('', $clone->getResponse());
    $this->assertEqual(Swift_Events_ResponseEvent::RESULT_VALID, $clone->getResult());
  }

}||||||||  public function testCleanCloneIsCreated()
  {
    $buf = $this->_mock('Swift_Transport_EsmtpBufferWrapper');

    $evt = new Swift_Events_ResponseEvent();
    $evt->response = "250 Ok\r\n";
    $evt->result = Swift_Events_ResponseEvent::RESULT_INVALID;

    $clone = $evt->cloneFor($buf);
    $source = $clone->getSource();
    $this->assertReference($buf, $source);
    $this->assertEqual('', $clone->getResponse());
    $this->assertEqual(Swift_Events_ResponseEvent::RESULT_VALID, $clone->getResult());
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))