||||||||  public static function createFromMap(array $map, $name)
  {
    if (!array_key_exists($name, $map))
    {
      throw new ClassNotFoundException(
        'Cannot create ' . $name . ' since no implemenation is registered for it'
        );
    }
    else
    {
      $spec = $map[$name];
      if ($spec['shared'] && array_key_exists($name, self::$_shared))
      {
        return self::$_shared[$name];
      }
      else
      {
        $className = $spec['class'];
        $instanceArgs = self::resolveArgs($spec['args'], $map);
        $reflector = new ReflectionClass($className);
        if ($reflector->getConstructor())
        {
          return $reflector->newInstanceArgs($instanceArgs);
        }
        else
        {
          return $reflector->newInstance();
        }
      }
    }
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_STATIC_PROP))))
                        (
                            (AST_RETURN
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_RETURN
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))))))))))