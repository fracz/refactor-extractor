||||||||  public function testEntityCanBeWrittenToByteStream()
  {
    $context = new Mockery();
    $cache = $this->_getCache($context, false);
    $is = $context->mock('Swift_InputByteStream');
    $context->checking(Expectations::create()
      -> ignoring($is)
      -> atLeast(1)->of($cache)->exportToByteStream(any(), any(), $is)
      -> ignoring($cache)
      );

    $entity = $this->_createEntity(array(), $this->_getEncoder($context), $cache);
    $entity->setBodyAsString('test');
    $entity->toByteStream($is);

    $context->assertIsSatisfied();
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_VAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)))
                    (
                        (AST_CALL)
                        (AST_CALL)
                        (AST_VAR)))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)))