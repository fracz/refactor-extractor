||||||||  public function testCharsetIsReadFromHeader()
  {
    $context = new Mockery();

    $h = $context->mock('Swift_Mime_ParameterizedHeader');
    $context->checking(Expectations::create()
      -> atLeast(1)->of($h)->getParameter('charset') -> returns('iso-8859-1')
      -> allowing($h)->getFieldName() -> returns('Content-Type')
      -> ignoring($h)
      );

    $headers = array($h);

    $part = $this->_createMimePart(
      $headers, $this->_getEncoder($context), $this->_getCache($context)
      );
    $this->assertEqual('iso-8859-1', $part->getCharset());

    $context->assertIsSatisfied();
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL)
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (AST_VAR))))
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)))