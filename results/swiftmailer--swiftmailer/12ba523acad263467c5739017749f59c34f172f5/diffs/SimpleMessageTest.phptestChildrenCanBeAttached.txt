  public function testChildrenCanBeAttached()
  {
    $message = $this->_createMessage(array(), $this->_encoder, $this->_cache);

    $entity1 = new Swift_Mime_MockMimeEntity();
    $entity1->setReturnValue('getNestingLevel',
      Swift_Mime_MimeEntity::LEVEL_ATTACHMENT
      );

    $message->attach($entity1);

    $this->assertEqual(array($entity1), $message->getChildren(),
      '%s: Child should be appended'
      );

    $entity2 = new Swift_Mime_MockMimeEntity();
    $entity2->setReturnValue('getNestingLevel',
      Swift_Mime_MimeEntity::LEVEL_SUBPART
      );

    $message->attach($entity2);

    $this->assertEqual(array($entity1, $entity2), $message->getChildren(),
      '%s: Children should be incrementally appended'
      );
  }

||||||||  public function testChildrenCanBeAttached()
  {
    $context = new Mockery();
    $entity1 = $context->mock('Swift_Mime_MimeEntity');
    $entity2 = $context->mock('Swift_Mime_MimeEntity');
    $context->checking(Expectations::create()
      -> allowing($entity1)->getNestingLevel() -> returns(Swift_Mime_MimeEntity::LEVEL_ATTACHMENT)
      -> ignoring($entity1)
      -> allowing($entity2)->getNestingLevel() -> returns(Swift_Mime_MimeEntity::LEVEL_SUBPART)
      -> ignoring($entity2)
      );

    $message = $this->_createMessage(
      array(), $this->_getEncoder($context), $this->_getCache($context)
      );

    $message->attach($entity1);

    $this->assertEqual(array($entity1), $message->getChildren(),
      '%s: Child should be appended'
      );

    $message->attach($entity2);

    $this->assertEqual(array($entity1, $entity2), $message->getChildren(),
      '%s: Children should be incrementally appended'
      );

    $context->assertIsSatisfied();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL)
                                            (
                                                (AST_VAR))))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_VAR)))
                            (
                                (AST_VAR))))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)))