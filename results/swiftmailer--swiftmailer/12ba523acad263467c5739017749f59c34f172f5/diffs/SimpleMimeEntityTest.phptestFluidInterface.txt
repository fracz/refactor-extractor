  public function testFluidInterface()
  {
    $entity = $this->_getEntity(array(), $this->_encoder, $this->_cache);
    $ref = $entity
      ->setContentType('text/plain')
      ->setEncoder($this->_encoder)
      ->setId('foo@bar')
      ->setDescription('my description')
      ->setMaxLineLength(998)
      ->setBodyAsString('xx')
      ->setBodyAsByteStream(new Swift_MockOutputByteStream())
      ->setBody('')
      ->setNestingLevel(10)
      ->setBoundary('xyz')
      ->setChildren(array())
      ->setHeaders(array())
      ;
    $this->assertReference($ref, $entity,
      '%s: All setters should return $this for fluid interface allowance'
      );
  }

  // -- Private helpers

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (SCALAR)))
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (
                                                    (SCALAR)))
                                            (
                                                (SCALAR)))
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_NEW)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (
                    (AST_ARRAY)))
            (
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (SCALAR))))||||||||