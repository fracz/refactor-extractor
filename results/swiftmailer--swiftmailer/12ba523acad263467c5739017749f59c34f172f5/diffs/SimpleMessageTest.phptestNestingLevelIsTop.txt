  public function testNestingLevelIsTop()
  {
    $message = $this->_createMessage(array(), $this->_encoder, $this->_cache);
    $this->assertEqual(
      Swift_Mime_MimeEntity::LEVEL_TOP, $message->getNestingLevel()
      );
  }

||||||||  public function testNestingLevelIsTop()
  {
    $context = new Mockery();
    $message = $this->_createMessage(
      array(), $this->_getEncoder($context), $this->_getCache($context)
      );
    $this->assertEqual(
      Swift_Mime_MimeEntity::LEVEL_TOP, $message->getNestingLevel()
      );
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))