  private function _refreshBoundary($apply)
  {
    $this->_notifyFieldChanged('boundary', $apply ? $this->getBoundary() : null);
  }

  /**
   * User defined callback for sorting children when they are nested.
   * This helps to ensure that all children appear in a logical order.
   * @param object $a
   * @param object $b
   * @return int
   * @access protected
   */
||||||||  private function _refreshBoundary()
  {
    $this->setBoundary($this->getBoundary());
  }

  /**
   * User defined callback for sorting children when they are nested.
   * This helps to ensure that all children appear in a logical order.
   * @param object $a
   * @param object $b
   * @return int
   * @access protected
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_CONST)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)))))