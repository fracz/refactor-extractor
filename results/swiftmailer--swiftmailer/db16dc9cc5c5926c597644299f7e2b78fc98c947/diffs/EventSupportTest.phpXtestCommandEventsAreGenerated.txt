||||||||  public function XtestCommandEventsAreGenerated()
  {
    $context = new Mockery();
    $buf = $this->_getBuffer($context);
    $dispatcher = $context->mock('Swift_Events_EventDispatcher');
    $evt = $context->mock('Swift_Events_EventObject');
    $smtp = $this->_getTransport($buf, $dispatcher);
    $context->checking(Expectations::create()
      -> allowing($dispatcher)->createEvent('command', $smtp, optional()) -> returns($evt)
      -> one($dispatcher)->dispatchEvent($evt, 'commandSent')
      -> ignoring($dispatcher)
      -> ignoring($evt)
      );
    $this->_finishBuffer($context, $buf);
    $smtp->start();
    $context->assertIsSatisfied();
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_CALL)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))