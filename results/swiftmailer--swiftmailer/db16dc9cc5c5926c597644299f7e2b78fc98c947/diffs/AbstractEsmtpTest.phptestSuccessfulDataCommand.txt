  public function testSuccessfulDataCommand()
  {
    /* -- RFC 2821, 3.3.

    The third step in the procedure is the DATA command (or some
    alternative specified in a service extension).

          DATA <CRLF>

    If accepted, the SMTP server returns a 354 Intermediate reply and
    considers all succeeding lines up to but not including the end of
    mail data indicator to be the message text.

    -- RFC 2821, 4.1.1.4.

    The receiver normally sends a 354 response to DATA, and then treats
    the lines (strings ending in <CRLF> sequences, as described in
    section 2.3.7) following the command as mail data from the sender.
    This command causes the mail data to be appended to the mail data
    buffer.  The mail data may contain any of the 128 ASCII character
    codes, although experience has indicated that use of control
    characters other than SP, HT, CR, and LF may cause problems and
    SHOULD be avoided when possible.

    -- RFC 2821, 4.3.2.

    DATA
      I: 354 -> data -> S: 250
                        E: 552, 554, 451, 452
      E: 451, 554, 503
    */

    $this->_buffer->expectAt(3, 'write', array("DATA\r\n"));
    $this->_buffer->setReturnValue('write', 4, array("DATA\r\n"));
    $this->_buffer->setReturnValue('readLine', "354 Go ahead\r\n", array(4));

    $this->_buffer->expectMinimumCallCount('write', 4);

    $this->_finishBuffer();

    $message = new Swift_Mime_MockMessage();
    $message->setReturnValue('getFrom', array('me@domain.com'=>'Me'));
    $message->setReturnValue('getTo', array('foo@bar' => null));

    try
    {
      $this->_smtp->start();
      $this->assertEqual(1, $this->_smtp->send($message));
      $this->pass();
    }
    catch (Exception $e)
    {
      $this->fail('354 is the expected response to DATA');
    }
  }

||||||||  public function testSuccessfulDataCommand()
  {
    /* -- RFC 2821, 3.3.

    The third step in the procedure is the DATA command (or some
    alternative specified in a service extension).

          DATA <CRLF>

    If accepted, the SMTP server returns a 354 Intermediate reply and
    considers all succeeding lines up to but not including the end of
    mail data indicator to be the message text.

    -- RFC 2821, 4.1.1.4.

    The receiver normally sends a 354 response to DATA, and then treats
    the lines (strings ending in <CRLF> sequences, as described in
    section 2.3.7) following the command as mail data from the sender.
    This command causes the mail data to be appended to the mail data
    buffer.  The mail data may contain any of the 128 ASCII character
    codes, although experience has indicated that use of control
    characters other than SP, HT, CR, and LF may cause problems and
    SHOULD be avoided when possible.

    -- RFC 2821, 4.3.2.

    DATA
      I: 354 -> data -> S: 250
                        E: 552, 554, 451, 452
      E: 451, 554, 503
    */

    $context = new Mockery();
    $buf = $this->_getBuffer($context);
    $smtp = $this->_getTransport($buf);
    $message = $context->mock('Swift_Mime_Message');
    $context->checking(Expectations::create()
      -> allowing($message)->getFrom() -> returns(array('me@domain.com'=>'Me'))
      -> allowing($message)->getTo() -> returns(array('foo@bar' => null))
      -> allowing($message)

      -> one($buf)->write("DATA\r\n") -> returns(1)
      -> one($buf)->readLine(1) -> returns('354 Go ahead' . "\r\n")
      );
    $this->_finishBuffer($context, $buf);
    try
    {
      $smtp->start();
      $smtp->send($message);
    }
    catch (Exception $e)
    {
      $this->fail('354 is the expected response to DATA');
    }
    $context->assertIsSatisfied();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))))
        (NULL)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_STATIC_CALL)
                                                                (
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_ARRAY
                                                                (AST_ARRAY_ELEM
                                                                    (SCALAR)
                                                                    (SCALAR)))))
                                                    (
                                                        (AST_VAR))))
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_CONST)
                                                        (SCALAR)))))
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)))