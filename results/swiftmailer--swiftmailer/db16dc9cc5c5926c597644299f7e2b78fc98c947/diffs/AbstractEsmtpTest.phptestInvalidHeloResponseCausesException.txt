  public function testInvalidHeloResponseCausesException()
  {
    $this->_buffer->setReturnValue(
      'readLine', '220 server.com foo' . "\r\n", array(0)
      );
    $this->_buffer->expectAt(
      0, 'write', array(new PatternExpectation('~^EHLO .*?\r\n$~D'))
      );
    $this->_buffer->setReturnValue(
      'write', 1, array(new PatternExpectation('~^EHLO .*?\r\n$~D'))
      );
    $this->_buffer->setReturnValue(
      'readLine', '501 WTF' . "\r\n", array(1)
      );
    $this->_buffer->expectAt(
      1, 'write', array(new PatternExpectation('~^HELO .*?\r\n$~D'))
      );
    $this->_buffer->setReturnValue(
      'write', 2, array(new PatternExpectation('~^HELO .*?\r\n$~D'))
      );
    $this->_buffer->setReturnValue(
      'readLine', '504 WTF' . "\r\n", array(2)
      );
    $this->_buffer->expectMinimumCallCount('write', 2);
    $this->_finishBuffer();

    try
    {
      $this->_smtp->start();
      $this->fail('Non 250 HELO response should raise Exception');
    }
    catch (Exception $e)
    {
      $this->pass();
    }
  }

||||||||  public function testInvalidHeloResponseCausesException()
  {
    $context = new Mockery();
    $buf = $this->_getBuffer($context);
    $smtp = $this->_getTransport($buf);
    $s = $context->sequence('SMTP-convo');
    $context->checking(Expectations::create()
      -> one($buf)->initialize() -> inSequence($s)
      -> one($buf)->readLine(0) -> inSequence($s) -> returns("220 some.server.tld bleh\r\n")
      -> one($buf)->write(pattern('~^EHLO .*?\r\n$~D')) -> inSequence($s) -> returns(1)
      -> one($buf)->readLine(1) -> inSequence($s) -> returns('501 WTF' . "\r\n")
      -> one($buf)->write(pattern('~^HELO .*?\r\n$~D')) -> inSequence($s) -> returns(2)
      -> one($buf)->readLine(2) -> inSequence($s) -> returns('504 WTF' . "\r\n")
      );
    $this->_finishBuffer($context, $buf);
    try
    {
      $this->assertFalse($smtp->isStarted(), '%s: SMTP should begin non-started');
      $smtp->start();
      $this->fail('Non 250 HELO response should raise Exception');
    }
    catch (Exception $e)
    {
      $this->assertFalse($smtp->isStarted(), '%s: SMTP start() should have failed');
    }
    $context->assertIsSatisfied();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (NULL)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_METHOD_CALL
                                                                        (AST_METHOD_CALL
                                                                            (AST_METHOD_CALL
                                                                                (AST_METHOD_CALL
                                                                                    (AST_METHOD_CALL
                                                                                        (AST_METHOD_CALL
                                                                                            (AST_METHOD_CALL
                                                                                                (AST_METHOD_CALL
                                                                                                    (AST_METHOD_CALL
                                                                                                        (AST_STATIC_CALL)
                                                                                                        (
                                                                                                            (AST_VAR))))
                                                                                                (
                                                                                                    (AST_VAR)))
                                                                                            (
                                                                                                (AST_VAR)))
                                                                                        (
                                                                                            (SCALAR)))
                                                                                    (
                                                                                        (AST_VAR)))
                                                                                (
                                                                                    (SCALAR)))
                                                                            (
                                                                                (AST_VAR)))
                                                                        (
                                                                            (AST_CALL
                                                                                (
                                                                                    (SCALAR)))))
                                                                    (
                                                                        (AST_VAR)))
                                                                (
                                                                    (SCALAR)))
                                                            (
                                                                (AST_VAR)))
                                                        (
                                                            (SCALAR)))
                                                    (
                                                        (AST_VAR)))
                                                (
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (SCALAR))))
                                            (
                                                (AST_VAR)))
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))
                                    (
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (
                                (AST_VAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)))