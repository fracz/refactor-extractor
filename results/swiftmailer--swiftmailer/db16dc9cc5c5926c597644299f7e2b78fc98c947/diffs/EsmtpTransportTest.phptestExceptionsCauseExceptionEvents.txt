  public function testExceptionsCauseExceptionEvents()
  {
    $evt = new Swift_Events_MockEventObject();

    $this->_dispatcher->setReturnValue(
      'createEvent', $evt, array('exception', $this->_smtpTransport, '*')
      );
    $this->_dispatcher->expectAtLeastOnce('dispatchEvent', array($evt, 'exceptionThrown'));

    $this->_smtpBuf->setReturnValue(
      'readLine', '503 I am sleepy, go away!' . "\r\n", array(0)
      );

    $this->_finishSmtpBuffer();

    try
    {
      $this->_smtpTransport->start();
      $this->fail('TransportException should be thrown on invalid response');
    }
    catch (Swift_Transport_TransportException $e)
    {
      $this->pass();
    }
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (NULL)))||||||||