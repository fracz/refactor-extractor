    protected function setUpDatabase($app)
    {
        file_put_contents($this->getTempDirectory().'/database.sqlite', null);

        $app['db']->connection()->getSchemaBuilder()->create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('email');
        });

        include_once '__DIR__'.'/../resources/migrations/create_permission_tables.php.stub';

        (new \CreatePermissionTables())->up();

        User::create(['email' => 'test@user.com']);
        Role::create(['name' => 'testRole']);
        Permission::create(['name' => 'edit-news']);
    }

    /**
     * Initialize the directory.
     *
     * @param string $directory
     */
||||||||    protected function setUpDatabase($app)
    {
        file_put_contents($this->getTempDirectory().'/database.sqlite', null);

        $app['db']->connection()->getSchemaBuilder()->create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('email');
        });

        include_once '__DIR__'.'/../resources/migrations/create_permission_tables.php.stub';

        (new \CreatePermissionTables())->up();

        User::create(['email' => 'test@user.com']);
        Role::create(['name' => 'testRole']);
        Permission::create(['name' => 'edit-articles']);
        Permission::create(['name' => 'edit-news']);
    }

    /**
     * Initialize the directory.
     *
     * @param string $directory
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_NEW))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))
        (
            (SCALAR)
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_NEW))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))))))