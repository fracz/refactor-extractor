    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $composer = $this->getComposer();

        // create local repo, this contains all packages that are installed in the local project
        $localRepo = $composer->getRepositoryManager()->getLocalRepository();
        // create installed repo, this contains all local packages + platform packages (php & extensions)
        $installedRepo = new PlatformRepository($localRepo);

        if ($input->getOption('local')) {
            foreach ($localRepo->getPackages() as $package) {
                $output->writeln('<info>local:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            }

            return;
        }

        if ($input->getOption('platform')) {
            $repos = array_diff($installedRepo->getPackages(), $localRepo->getPackages());
            foreach ($repos as $package) {
                $output->writeln('<info>plattform:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            }

            return;
        }

        foreach ($installedRepo->getPackages() as $package) {
            if ($localRepo->hasPackage($package)) {
                $output->writeln('<info>installed:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            } else {
                $output->writeln('<info>platform:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getName() . ' ' . $package->getVersion() . ')</comment>');
            }
        }

        foreach ($composer->getRepositoryManager()->getRepositories() as $repository) {
            foreach ($repository->getPackages() as $package) {
                $output->writeln('<comment>available:</comment> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getName() . ' ' . $package->getVersion() . ')</comment>');
            }
        }
    }

}||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $composer = $this->getComposer();

        // create local repo, this contains all packages that are installed in the local project
        $localRepo = $composer->getRepositoryManager()->getLocalRepository();
        // create installed repo, this contains all local packages + platform packages (php & extensions)
        $installedRepo = new CompositeRepository(array($localRepo, new PlatformRepository()));

        if ($input->getOption('local')) {
            foreach ($localRepo->getPackages() as $package) {
                $output->writeln('<info>local:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            }

            return;
        }

        if ($input->getOption('platform')) {
            $repos = array_diff($installedRepo->getPackages(), $localRepo->getPackages());
            foreach ($repos as $package) {
                $output->writeln('<info>plattform:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            }

            return;
        }

        foreach ($installedRepo->getPackages() as $package) {
            if ($localRepo->hasPackage($package)) {
                $output->writeln('<info>installed:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getVersion() . ')</comment>');
            } else {
                $output->writeln('<info>platform:</info> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getName() . ' ' . $package->getVersion() . ')</comment>');
            }
        }

        foreach ($composer->getRepositoryManager()->getRepositories() as $repository) {
            foreach ($repository->getPackages() as $package) {
                $output->writeln('<comment>available:</comment> ' . $package->getPrettyName() . ' ' . $package->getPrettyVersion() . '<comment> (' . $package->getName() . ' ' . $package->getVersion() . ')</comment>');
            }
        }
    }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)))
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR)))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)))
                                                        (SCALAR))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))
                                                (SCALAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_NEW)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)))
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR)))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)))
                                                        (SCALAR))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))
                                                (SCALAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR)))))))))