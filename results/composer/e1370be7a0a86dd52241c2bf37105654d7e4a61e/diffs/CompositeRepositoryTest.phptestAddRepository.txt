||||||||    public function testAddRepository()
    {
        $arrayRepoOne = new ArrayRepository;
        $arrayRepoOne->addPackage($this->getPackage('foo', '1'));

        $arrayRepoTwo = new ArrayRepository;
        $arrayRepoTwo->addPackage($this->getPackage('bar', '1'));
        $arrayRepoTwo->addPackage($this->getPackage('bar', '2'));
        $arrayRepoTwo->addPackage($this->getPackage('bar', '3'));

        $repo = new CompositeRepository(array($arrayRepoOne));
        $this->assertCount(1, $repo, "Composite repository should have just one package before addRepository() is called");
        $repo->addRepository($arrayRepoTwo);
        $this->assertCount(4, $repo, "Composite repository should have four packages after addRepository() is called");
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR))))