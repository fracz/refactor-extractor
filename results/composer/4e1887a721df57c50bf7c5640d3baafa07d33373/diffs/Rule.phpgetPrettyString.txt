    public function getPrettyString(Pool $pool, array $installedMap = array())
    {
        $ruleText = '';
        foreach ($this->literals as $i => $literal) {
            if ($i != 0) {
                $ruleText .= '|';
            }
            $ruleText .= $pool->literalToPrettyString($literal, $installedMap);
        }

        switch ($this->getReason()) {
            case self::RULE_INTERNAL_ALLOW_UPDATE:
                return $ruleText;

            case self::RULE_JOB_INSTALL:
                return "Install command rule ($ruleText)";

            case self::RULE_JOB_REMOVE:
                return "Remove command rule ($ruleText)";

            case self::RULE_PACKAGE_CONFLICT:
                $package1 = $pool->literalToPackage($this->literals[0]);
                $package2 = $pool->literalToPackage($this->literals[1]);

                return $package1->getPrettyString().' conflicts with '.$this->formatPackagesUnique($pool, array($package2)).'.';

            case self::RULE_PACKAGE_REQUIRES:
                $literals = $this->literals;
                $sourceLiteral = array_shift($literals);
                $sourcePackage = $pool->literalToPackage($sourceLiteral);

                $requires = array();
                foreach ($literals as $literal) {
                    $requires[] = $pool->literalToPackage($literal);
                }

                $text = $this->reasonData->getPrettyString($sourcePackage);
                if ($requires) {
                    $text .= ' -> satisfiable by ' . $this->formatPackagesUnique($pool, $requires) . '.';
                } else {
                    $targetName = $this->reasonData->getTarget();

                    if ($targetName === 'php' || $targetName === 'php-64bit' || $targetName === 'hhvm') {
                        // handle php/hhvm
                        if (defined('HHVM_VERSION')) {
                            return $text . ' -> your HHVM version does not satisfy that requirement.';
                        }

                        if ($targetName === 'hhvm') {
                            return $text . ' -> you are running this with PHP and not HHVM.';
                        }

                        $packages = $pool->whatProvides($targetName);
                        $package = count($packages) ? current($packages) : phpversion();

                        if (!($package instanceof CompletePackage)) {
                            return $text . ' -> your PHP version ('.phpversion().') does not satisfy that requirement.';
                        }

                        $extra = $package->getExtra();

                        if (!empty($extra['config.platform'])) {
                            $text .= ' -> your PHP version ('.phpversion().') overridden by "config.platform.php" version ('.$package->getPrettyVersion().') does not satisfy that requirement.';
                        } else {
                            $text .= ' -> your PHP version ('.$package->getPrettyVersion().') does not satisfy that requirement.';
                        }

                        return $text;
                    }

                    if (0 === strpos($targetName, 'ext-')) {
                        // handle php extensions
                        $ext = substr($targetName, 4);
                        $error = extension_loaded($ext) ? 'has the wrong version ('.(phpversion($ext) ?: '0').') installed' : 'is missing from your system';

                        return $text . ' -> the requested PHP extension '.$ext.' '.$error.'.';
                    }

                    if (0 === strpos($targetName, 'lib-')) {
                        // handle linked libs
                        $lib = substr($targetName, 4);

                        return $text . ' -> the requested linked library '.$lib.' has the wrong version installed or is missing from your system, make sure to have the extension providing it.';
                    }

                    if ($providers = $pool->whatProvides($targetName, $this->reasonData->getConstraint(), true, true)) {
                        return $text . ' -> satisfiable by ' . $this->formatPackagesUnique($pool, $providers) .' but these conflict with your requirements or minimum-stability.';
                    }

                    return $text . ' -> no matching package found.';
                }

                return $text;

            case self::RULE_PACKAGE_OBSOLETES:
                return $ruleText;
            case self::RULE_INSTALLED_PACKAGE_OBSOLETES:
                return $ruleText;
            case self::RULE_PACKAGE_SAME_NAME:
                return 'Can only install one of: ' . $this->formatPackagesUnique($pool, $this->literals) . '.';
            case self::RULE_PACKAGE_IMPLICIT_OBSOLETES:
                return $ruleText;
            case self::RULE_LEARNED:
                return 'Conclusion: '.$ruleText;
            case self::RULE_PACKAGE_ALIAS:
                return $ruleText;
            default:
                return '('.$ruleText.')';
        }
    }

||||||||    public function getPrettyString(Pool $pool, array $installedMap = array())
    {
        $literals = $this->getLiterals();

        $ruleText = '';
        foreach ($literals as $i => $literal) {
            if ($i != 0) {
                $ruleText .= '|';
            }
            $ruleText .= $pool->literalToPrettyString($literal, $installedMap);
        }

        switch ($this->getReason()) {
            case self::RULE_INTERNAL_ALLOW_UPDATE:
                return $ruleText;

            case self::RULE_JOB_INSTALL:
                return "Install command rule ($ruleText)";

            case self::RULE_JOB_REMOVE:
                return "Remove command rule ($ruleText)";

            case self::RULE_PACKAGE_CONFLICT:
                $package1 = $pool->literalToPackage($literals[0]);
                $package2 = $pool->literalToPackage($literals[1]);

                return $package1->getPrettyString().' conflicts with '.$this->formatPackagesUnique($pool, array($package2)).'.';

            case self::RULE_PACKAGE_REQUIRES:
                $sourceLiteral = array_shift($literals);
                $sourcePackage = $pool->literalToPackage($sourceLiteral);

                $requires = array();
                foreach ($literals as $literal) {
                    $requires[] = $pool->literalToPackage($literal);
                }

                $text = $this->reasonData->getPrettyString($sourcePackage);
                if ($requires) {
                    $text .= ' -> satisfiable by ' . $this->formatPackagesUnique($pool, $requires) . '.';
                } else {
                    $targetName = $this->reasonData->getTarget();

                    if ($targetName === 'php' || $targetName === 'php-64bit' || $targetName === 'hhvm') {
                        // handle php/hhvm
                        if (defined('HHVM_VERSION')) {
                            return $text . ' -> your HHVM version does not satisfy that requirement.';
                        }

                        if ($targetName === 'hhvm') {
                            return $text . ' -> you are running this with PHP and not HHVM.';
                        }

                        $packages = $pool->whatProvides($targetName);
                        $package = count($packages) ? current($packages) : phpversion();

                        if (!($package instanceof CompletePackage)) {
                            return $text . ' -> your PHP version ('.phpversion().') does not satisfy that requirement.';
                        }

                        $extra = $package->getExtra();

                        if (!empty($extra['config.platform'])) {
                            $text .= ' -> your PHP version ('.phpversion().') overridden by "config.platform.php" version ('.$package->getPrettyVersion().') does not satisfy that requirement.';
                        } else {
                            $text .= ' -> your PHP version ('.$package->getPrettyVersion().') does not satisfy that requirement.';
                        }

                        return $text;
                    }

                    if (0 === strpos($targetName, 'ext-')) {
                        // handle php extensions
                        $ext = substr($targetName, 4);
                        $error = extension_loaded($ext) ? 'has the wrong version ('.(phpversion($ext) ?: '0').') installed' : 'is missing from your system';

                        return $text . ' -> the requested PHP extension '.$ext.' '.$error.'.';
                    }

                    if (0 === strpos($targetName, 'lib-')) {
                        // handle linked libs
                        $lib = substr($targetName, 4);

                        return $text . ' -> the requested linked library '.$lib.' has the wrong version installed or is missing from your system, make sure to have the extension providing it.';
                    }

                    if ($providers = $pool->whatProvides($targetName, $this->reasonData->getConstraint(), true, true)) {
                        return $text . ' -> satisfiable by ' . $this->formatPackagesUnique($pool, $providers) .' but these conflict with your requirements or minimum-stability.';
                    }

                    return $text . ' -> no matching package found.';
                }

                return $text;

            case self::RULE_PACKAGE_OBSOLETES:
                return $ruleText;
            case self::RULE_INSTALLED_PACKAGE_OBSOLETES:
                return $ruleText;
            case self::RULE_PACKAGE_SAME_NAME:
                return 'Can only install one of: ' . $this->formatPackagesUnique($pool, $literals) . '.';
            case self::RULE_PACKAGE_IMPLICIT_OBSOLETES:
                return $ruleText;
            case self::RULE_LEARNED:
                return 'Conclusion: '.$ruleText;
            case self::RULE_PACKAGE_ALIAS:
                return $ruleText;
            default:
                return '('.$ruleText.')';
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))))))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR)))
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (SCALAR))))))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (SCALAR))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONDITIONAL
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL)))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_INSTANCEOF
                                                            (AST_VAR)))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_VAR)
                                                                        (SCALAR))
                                                                    (AST_CALL))
                                                                (SCALAR))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_EMPTY
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR))))
                                                    (
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_CALL))
                                                                        (SCALAR))
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))
                                                                (SCALAR)))))
                                                (AST_IF_ELEM
                                                    (NULL)
                                                    (
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))
                                                                (SCALAR))))))
                                            (AST_RETURN
                                                (AST_VAR)))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONDITIONAL
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_CONDITIONAL
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR)))
                                                                (NULL)
                                                                (SCALAR)))
                                                        (SCALAR))
                                                    (SCALAR)))
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (AST_CONST)
                                                    (AST_CONST))))
                                        (
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (SCALAR))))))
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))))))
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))))))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR)))
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (SCALAR))))))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (SCALAR))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONDITIONAL
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL)))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_INSTANCEOF
                                                            (AST_VAR)))
                                                    (
                                                        (AST_RETURN
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_VAR)
                                                                        (SCALAR))
                                                                    (AST_CALL))
                                                                (SCALAR))))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_UNARY_OP
                                                        (AST_EMPTY
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR))))
                                                    (
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_CALL))
                                                                        (SCALAR))
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))
                                                                (SCALAR)))))
                                                (AST_IF_ELEM
                                                    (NULL)
                                                    (
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)))
                                                                (SCALAR))))))
                                            (AST_RETURN
                                                (AST_VAR)))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONDITIONAL
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_CONDITIONAL
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR)))
                                                                (NULL)
                                                                (SCALAR)))
                                                        (SCALAR))
                                                    (SCALAR)))
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (AST_CONST)
                                                    (AST_CONST))))
                                        (
                                            (AST_RETURN
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (SCALAR))))))
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))))))
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))))))