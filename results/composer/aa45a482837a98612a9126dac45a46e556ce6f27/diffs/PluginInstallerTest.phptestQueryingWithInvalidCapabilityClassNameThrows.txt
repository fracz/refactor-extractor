||||||||    public function testQueryingWithInvalidCapabilityClassNameThrows($invalidImplementationClassNames)
    {
        $capabilityApi = 'Composer\Plugin\Capability\Capability';

        $plugin = $this->getMockBuilder('Composer\Test\Plugin\Mock\CapablePluginInterface')
                       ->getMock();

        $plugin->expects($this->once())
               ->method('getCapabilities')
               ->will($this->returnCallback(function() use ($invalidImplementationClassNames, $capabilityApi) {
                   return array($capabilityApi => $invalidImplementationClassNames);
               }));

        $this->pm->getPluginCapability($plugin, $capabilityApi);
    }

    /**
     * @dataProvider nonExistingOrInvalidImplementationClassTypes
     * @expectedException \RuntimeException
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR))))