    public function getPluginCapability(PluginInterface $plugin, $capability, array $ctorArgs = array())
    {
        if ($capabilityClass = $this->getCapabilityImplementationClassName($plugin, $capability)) {
            if (class_exists($capabilityClass)) {
                $capabilityObj = new $capabilityClass($ctorArgs);
                if ($capabilityObj instanceof Capability &&
                    $capabilityObj instanceof $capability
                ) {
                    return $capabilityObj;
                }
            }
        }
        return false;
    }
}||||||||    public function getPluginCapability(PluginInterface $plugin, $capabilityClassName, array $ctorArgs = array())
    {
        if ($capabilityClass = $this->getCapabilityImplementationClassName($plugin, $capabilityClassName)) {
            if (class_exists($capabilityClass)) {
                $capabilityObj = new $capabilityClass($ctorArgs);
                if ($capabilityObj instanceof Capability &&
                    $capabilityObj instanceof $capabilityClassName
                ) {
                    return $capabilityObj;
                } else {
                    throw new \RuntimeException(
                        'Class ' . $capabilityClass . ' must be of both \Composer\Plugin\Capability\Capability and '.
                        $capabilityClassName . ' types.'
                    );
                }
            } else {
                throw new \RuntimeException("Cannot instantiate Capability, as class $capabilityClass does not exist.");
            }
        }
        return null;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_INSTANCEOF
                                            (AST_VAR))
                                        (AST_INSTANCEOF
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (
                                        (AST_RETURN
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_INSTANCEOF
                                            (AST_VAR))
                                        (AST_INSTANCEOF
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (
                                        (AST_RETURN
                                            (AST_VAR))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (AST_VAR))
                                                        (SCALAR))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_RETURN
        (AST_CONST)))