    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $root = $this->getComposer()->getPackage();
        $repo = $this->getComposer()->getRepositoryManager()->getLocalRepository();

        $versionParser = new VersionParser;

        $nameLength = strlen($root->getPrettyName());
        $versionLength = strlen($versionParser->formatVersion($root));

        foreach ($repo->getPackages() as $package) {
            $packages[$package->getName()] = $package;

            $nameLength    = max($nameLength, strlen($package->getPrettyName()));
            $versionLength = max($versionLength, strlen($versionParser->formatVersion($package)));
        }

        ksort($packages);

        switch ($format = $input->getOption('format')) {
            case 'text':
                $formatRowCallback = function (PackageInterface $package) use ($versionParser, $nameLength, $versionLength) {
                    return sprintf(
                        '  %s  %s  %s',
                        str_pad($package->getPrettyName(), $nameLength, ' '),
                        str_pad($versionParser->formatVersion($package), $versionLength, ' '),
                        implode(', ', $package->getLicense()) ?: 'none'
                    );
                };

                $output->writeln('Root Package:');
                $output->writeln($formatRowCallback($root));
                $output->writeln('Dependencies:');
                foreach ($packages as $package) {
                    $output->writeln($formatRowCallback($package));
                }
                break;

            case 'json':
                foreach ($packages as $package) {
                    $dependencies[$package->getPrettyName()] = array(
                        'version' => $versionParser->formatVersion($package),
                        'license' => $package->getLicense(),
                    );
                }

                $output->writeln(json_encode(array(
                    'name'         => $root->getPrettyName(),
                    'version'      => $versionParser->formatVersion($root),
                    'license'      => $root->getLicense(),
                    'dependencies' => $dependencies,
                )));
                break;

            default:
                $output->writeln(sprintf('Unsupported format "%s".  See help for supported formats.', $format));
                break;
        }
    }
}||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $root = $this->getComposer()->getPackage();
        $repo = $this->getComposer()->getRepositoryManager()->getLocalRepository();

        $versionParser = new VersionParser;

        foreach ($repo->getPackages() as $package) {
            $packages[$package->getName()] = $package;
        }

        ksort($packages);

        switch ($format = $input->getOption('format')) {
            case 'text':
                $nameLength = strlen($root->getPrettyName());
                $versionLength = strlen($versionParser->formatVersion($root));

                foreach ($packages as $package) {
                    $nameLength    = max($nameLength, strlen($package->getPrettyName()));
                    $versionLength = max($versionLength, strlen($versionParser->formatVersion($package)));
                }

                $formatRowCallback = function (PackageInterface $package) use ($versionParser, $nameLength, $versionLength) {
                    return sprintf(
                        '  %s  %s  %s',
                        str_pad($package->getPrettyName(), $nameLength, ' '),
                        str_pad($versionParser->formatVersion($package), $versionLength, ' '),
                        implode(', ', $package->getLicense()) ?: 'none'
                    );
                };

                $output->writeln('Root Package:');
                $output->writeln($formatRowCallback($root));
                $output->writeln('Dependencies:');
                foreach ($packages as $package) {
                    $output->writeln($formatRowCallback($package));
                }
                break;

            case 'json':
                foreach ($packages as $package) {
                    $dependencies[$package->getPrettyName()] = array(
                        'version' => $versionParser->formatVersion($package),
                        'license' => $package->getLicense(),
                    );
                }

                $output->writeln(json_encode(array(
                    'name'         => $root->getPrettyName(),
                    'version'      => $versionParser->formatVersion($root),
                    'license'      => $root->getLicense(),
                    'dependencies' => $dependencies,
                )));
                break;

            default:
                $output->writeln(sprintf('Unsupported format "%s".  See help for supported formats.', $format));
                break;
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_SWITCH
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLOSURE
                            (PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_RETURN
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CONDITIONAL
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (NULL)
                                                (SCALAR))))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_SWITCH
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLOSURE
                            (PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_RETURN
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CONDITIONAL
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (NULL)
                                                (SCALAR))))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL)))))))