||||||||  public function find($data=[])
  {
    if (empty($data)) {
      throw new Exception("argument data is null", 400);
    }

    // 拼接where语句
    $count = (int)count($data);
    $where = '';
    $dataCopy = $data;
    $pop = array_pop($dataCopy);
    if ($count === 1) {
      $field = array_keys($data)[0];
      $value = array_values($data)[0];
      $where = "`{$field}` = '{$value}'";
    }else{
      foreach ($data as $k => $v) {
        if ($v === $pop) {
          $where .= "`{$k}` = '{$v}'";
          continue;
        }
        $where .= "`{$k}` = '{$v}' AND ";
      }
    }

    $sql = "SELECT * FROM `{$this->_tableName}` WHERE {$where}";

    echo $sql . "\n";
  }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONTINUE
                                        (NULL)))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))))