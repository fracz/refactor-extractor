||||||||  public function insert($data=[])
  {
    if (empty($data)) {
      throw new Exception("argument data is null", 400);
    }
    $count = count($data);
    //拼接字段
    $field = array_keys($data);
    $fieldString = '';
    foreach ($field as $k => $v) {
      if ($k === (int)($count - 1)) {
        $fieldString .= "`{$v}`";
        continue;
      }
      $fieldString .= "`{$v}`".',';
    }
    unset($k);
    unset($v);

    //拼接值
    $value = array_values($data);
    $valueString = '';
    foreach ($value as $k => $v) {
      if ($k === (int)($count - 1)) {
        $valueString .= "'{$v}'";
        continue;
      }
      $valueString .= "'{$v}'".',';
    }
    unset($k);
    unset($v);

    $sql = "INSERT INTO `{$this->_tableName}` ({$fieldString}) VALUES ({$valueString})";

    echo $sql . "\n";
  }

  /**
   *  删除数据
   *
   * @param  array $data 数据
   * @return mixed
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CAST
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CAST
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))))