    public function send(MessageInterface $message)
    {
        if (property_exists($message, 'id')) {
            $message->id = $this->lastId++;
        }

        $this->application->process->stdin->write(json_encode($message));
    }
}||||||||    public function send(MessageInterface $message)
    {
        if (property_exists($message, 'id')) {
            $message->id = $this->lastId++;

            // It's a command!
            $this->receiver->addMessageCallback($message->id, $message->callback);
        }

        $json = json_encode($message);

        // Escape }{ for message spliting on Lazarus
        $json = str_replace('}{', '}\{', $json);

        echo $json . PHP_EOL;

        $this->application->process->stdin->write($json);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_POST_INC
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_CALL
                (
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_POST_INC
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_VAR))))