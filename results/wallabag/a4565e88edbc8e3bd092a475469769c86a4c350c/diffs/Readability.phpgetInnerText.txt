    public function getInnerText($e, $normalizeSpaces=true) {
        $textContent = '';

        if (!isset($e->textContent) || $e->textContent == '') {
            return '';
        }

        $textContent = trim($e->textContent);

        if ($normalizeSpaces) {
            return preg_replace($this->regexps['normalize'], ' ', $textContent);
        } else {
            return $textContent;
        }
    }

    /**
    * Get the number of times a string $s appears in the node $e.
    *
    * @param DOMElement $e
    * @param string - what to count. Default is ","
    * @return number (integer)
    **/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_VAR))))))||||||||