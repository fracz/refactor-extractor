||||||||    public function parse(Twig_Token $token)
    {
        $template = $this->parser->getExpressionParser()->parseExpression();
        $stream = $this->parser->getStream();

        if (!$template instanceof Twig_Node_Expression_Constant) {
            throw new Twig_Error_Syntax('The template references in a "use" statement must be a string.', $stream->getCurrent()->getLine(), $stream->getFilename());
        }

        $targets = array();
        if ($stream->test('with')) {
            $stream->next();

            do {
                $name = $stream->expect(Twig_Token::NAME_TYPE)->getValue();

                $alias = $name;
                if ($stream->test('as')) {
                    $stream->next();

                    $alias = $stream->expect(Twig_Token::NAME_TYPE)->getValue();
                }

                $targets[$name] = new Twig_Node_Expression_Constant($alias, -1);

                if (!$stream->test(Twig_Token::PUNCTUATION_TYPE, ',')) {
                    break;
                }

                $stream->next();
            } while (true);
        }

        $stream->expect(Twig_Token::BLOCK_END_TYPE);

        $this->parser->addTrait(new Twig_Node(array('template' => $template, 'targets' => new Twig_Node($targets))));
    }

    /**
     * Gets the tag name associated with this token parser.
     *
     * @return string The tag name
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_DO_WHILE
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))))))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (SCALAR)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (SCALAR))))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_NEW
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_NEW
                                (
                                    (AST_VAR)))
                            (SCALAR))))))))