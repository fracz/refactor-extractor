    private function importFromReadability()
    {
        # TODO gestion des articles lus / favs
        $str_data = file_get_contents("./readability");
        $data = json_decode($str_data,true);
        Tools::logm('starting import from Readability');

        foreach ($data as $key => $value) {
            $url = '';
            foreach ($value as $attr => $attr_value) {
                if ($attr == 'article__url') {
                    $url = new Url(base64_encode($attr_value));
                }
                $sequence = '';
                if (STORAGE == 'postgres') {
                    $sequence = 'entries_id_seq';
                }
                // if ($attr_value == 'favorite' && $attr_value == 'true') {
                //     $last_id = $this->store->getLastId($sequence);
                //     $this->store->favoriteById($last_id);
                //     $this->action('toogle_fav', $url, $last_id, TRUE);
                // }
                if ($attr_value == 'archive' && $attr_value == 'true') {
                    $last_id = $this->store->getLastId($sequence);
                    $this->action('toggle_archive', $url, $last_id, TRUE);
                }
            }
            if ($url->isCorrect())
                $this->action('add', $url, 0, TRUE);
        }
        $this->messages->add('s', _('import from Readability completed'));
        Tools::logm('import from Readability completed');
        Tools::redirect();
    }

    /**
     * import datas into your poche
     * @param  string $from name of the service to import : pocket, instapaper or readability
     * @todo add the return value
     * @return boolean
     */
||||||||    private function importFromReadability()
    {
        # TODO gestion des articles lus / favs
        $str_data = file_get_contents("./readability");
        $data = json_decode($str_data,true);
        Tools::logm('starting import from Readability');
        $count = 0;
        foreach ($data as $key => $value) {
            $url = NULL;
            $favorite = FALSE;
            $archive = FALSE;
            foreach ($value as $attr => $attr_value) {
                if ($attr == 'article__url') {
                    $url = new Url(base64_encode($attr_value));
                }
                $sequence = '';
                if (STORAGE == 'postgres') {
                    $sequence = 'entries_id_seq';
                }
                if ($attr_value == 'true') {
                    if ($attr == 'favorite') {
                        $favorite = TRUE;
                    }
                    if ($attr == 'archive') {
                        $archive = TRUE;
                    }
                }
            }
            # we can add the url
            if (!is_null($url) && $url->isCorrect()) {
                $this->action('add', $url, 0, TRUE);
                $count++;
                if ($favorite) {
                    $last_id = $this->store->getLastId($sequence);
                    $this->action('toggle_fav', $url, $last_id, TRUE);
                }
                if ($archive) {
                    $last_id = $this->store->getLastId($sequence);
                    $this->action('toggle_archive', $url, $last_id, TRUE);
                }
            }
        }
        $this->messages->add('s', _('import from Readability completed. ' . $count . ' new links.'));
        Tools::logm('import from Readability completed');
        Tools::redirect();
    }

    /**
     * import datas into your poche
     * @param  string $from name of the service to import : pocket, instapaper or readability
     * @todo add the return value
     * @return boolean
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_NEW
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_CONST))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_NEW
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST)))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_CONST)))
                        (AST_POST_INC
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (AST_VAR))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_CONST))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (AST_VAR))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_CONST)))))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL))