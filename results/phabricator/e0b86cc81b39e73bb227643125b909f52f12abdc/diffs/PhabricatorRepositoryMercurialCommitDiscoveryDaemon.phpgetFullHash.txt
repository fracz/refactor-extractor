||||||||  private function getFullHash($commit) {

    // NOTE: Mercurial shortens hashes to 12 characters by default. This
    // implies collisions with as few as a few million commits. The
    // documentation sensibly advises "Do not use short-form IDs for
    // long-lived representations". It then continues "You can use the
    // --debug option to display the full changeset ID". What?! Yes, this
    // is in fact the only way to turn on full hashes, and the hg source
    // code is littered with "hexfn = ui.debugflag and hex or short" and
    // similar. There is no more-selective flag or config option.
    //
    // Unfortunately, "hg --debug" turns on tons of other extra output,
    // including full commit messages in "hg log" and "hg parents" (which
    // ignore --style); this renders them unparseable. So we have to use
    // "hg id" to convert short hashes into full hashes. See:
    //
    // <http://mercurial.selenic.com/wiki/ChangeSetID>
    //
    // Of course, this means that if there are collisions we will break here
    // (the short commit identifier won't be unambiguous) but maybe Mercurial
    // will have a --full-hashes flag or something by then and we can fix it
    // properly. Until we run into that, this allows us to store data in the
    // right format so when we eventually encounter this we won't have to
    // reparse every Mercurial repository.

    $repository = $this->getRepository();
    list($stdout) = $repository->execxLocalCommand(
      'id --debug -i --rev %s',
      $commit);
    return trim($stdout);
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))