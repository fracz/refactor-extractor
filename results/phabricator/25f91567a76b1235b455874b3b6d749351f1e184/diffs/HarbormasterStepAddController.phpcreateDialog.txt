  function createDialog(array $implementations, $cancel_uri) {
    $request = $this->getRequest();
    $viewer = $request->getUser();

    $control = id(new AphrontFormRadioButtonControl())
      ->setName('step-type');

    foreach ($implementations as $implementation_name) {
      $implementation = new $implementation_name();
      $control
        ->addButton(
          $implementation_name,
          $implementation->getName(),
          $implementation->getGenericDescription());
    }

    $dialog = new AphrontDialogView();
    $dialog->setTitle(pht('Add New Step'))
            ->setUser($viewer)
            ->addSubmitButton(pht('Add Build Step'))
            ->addCancelButton($cancel_uri);
    $dialog->appendChild(
      phutil_tag(
        'p',
        array(),
        pht(
          'Select what type of build step you want to add: ')));
    $dialog->appendChild($control);
    return id(new AphrontDialogResponse())->setDialog($dialog);
  }

}||||||||  private function createDialog($cancel_uri) {
    $request = $this->getRequest();
    $viewer = $request->getUser();

    $control = id(new AphrontFormRadioButtonControl())
      ->setName('step-type');

    $all = HarbormasterBuildStepImplementation::getImplementations();
    foreach ($all as $class => $implementation) {
      $control->addButton(
        $class,
        $implementation->getName(),
        $implementation->getGenericDescription());
    }

    return $this->newDialog()
      ->setTitle(pht('Add New Step'))
      ->addSubmitButton(pht('Add Build Step'))
      ->addCancelButton($cancel_uri)
      ->appendParagraph(pht('Choose a type of build step to add:'))
      ->appendChild($control);
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (SCALAR)))))
                (
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)))))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_ARRAY)
                    (AST_CALL
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))))
                    (
                        (AST_VAR)))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_VAR)))))