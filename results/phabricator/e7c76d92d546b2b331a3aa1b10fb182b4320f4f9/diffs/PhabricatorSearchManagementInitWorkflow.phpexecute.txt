  public function execute(PhutilArgumentParser $args) {
    $console = PhutilConsole::getConsole();

    $work_done = false;
    foreach (PhabricatorSearchService::getAllServices() as $service) {
      $console->writeOut(
        "%s\n",
        pht('Initializing search service "%s"', $service->getDisplayName()));

      try {
        $host = $service->getAnyHostForRole('write');
      } catch (PhabricatorClusterNoHostForRoleException $e) {
        // If there are no writable hosts for a given cluster, skip it
        $console->writeOut("%s\n", $e->getMessage());
        continue;
      }

      $engine = $host->getEngine();

      if (!$engine->indexExists()) {
        $console->writeOut(
          '%s',
          pht('Index does not exist, creating...'));
        $engine->initIndex();
        $console->writeOut(
          "%s\n",
          pht('done.'));
        $work_done = true;
      } else if (!$engine->indexIsSane()) {
        $console->writeOut(
          '%s',
          pht('Index exists but is incorrect, fixing...'));
        $engine->initIndex();
        $console->writeOut(
          "%s\n",
          pht('done.'));
        $work_done = true;
      }
    }

    if ($work_done) {
      $console->writeOut(
        "%s\n",
        pht(
          'Index maintenance complete. Run `%s` to reindex documents',
          './bin/search index'));
    } else {
      $console->writeOut(
        "%s\n",
        pht('Nothing to do.'));
    }
  }
}||||||||  public function execute(PhutilArgumentParser $args) {

    $work_done = false;
    foreach (PhabricatorSearchService::getAllServices() as $service) {
      echo tsprintf(
        "%s\n",
        pht(
          'Initializing search service "%s".',
          $service->getDisplayName()));

      if (!$service->isWritable()) {
        echo tsprintf(
          "%s\n",
          pht(
            'Skipping service "%s" because it is not writable.',
            $service->getDisplayName()));
        continue;
      }

      $engine = $service->getEngine();

      if (!$engine->indexExists()) {
        echo tsprintf(
          "%s\n",
          pht('Service index does not exist, creating...'));

        $engine->initIndex();
        $work_done = true;
      } else if (!$engine->indexIsSane()) {
        echo tsprintf(
          "%s\n",
          pht('Service index is out of date, repairing...'));

        $engine->initIndex();
        $work_done = true;
      } else {
        echo tsprintf(
          "%s\n",
          pht('Service index is already up to date.'));
      }

      echo tsprintf(
        "%s\n",
        pht('Done.'));
    }

    if (!$work_done) {
      echo tsprintf(
        "%s\n",
        pht('No services need initialization.'));
      return 0;
    }

    echo tsprintf(
      "%s\n",
      pht('Service initialization complete.'));
  }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_CONTINUE
                                (NULL)))))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_STATIC_CALL)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_ECHO
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_ECHO
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))))
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_ECHO
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ECHO
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR))))))))))))
            (AST_ECHO
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (SCALAR)))))
    (AST_ECHO
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)))))))