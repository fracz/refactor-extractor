  public function renderBurn() {
    $request = $this->getRequest();
    $user = $request->getUser();

    $handle = null;

    $project_phid = $request->getStr('project');
    if ($project_phid) {
      $phids = array($project_phid);
      $handles = id(new PhabricatorObjectHandleData($phids))->loadHandles();
      $handle = $handles[$project_phid];
    }

    $table = new ManiphestTransaction();
    $conn = $table->establishConnection('r');

    $joins = '';
    if ($project_phid) {
      $joins = qsprintf(
        $conn,
        'JOIN %T t ON x.taskID = t.id
          JOIN %T p ON p.taskPHID = t.phid AND p.projectPHID = %s',
        id(new ManiphestTask())->getTableName(),
        id(new ManiphestTaskProject())->getTableName(),
        $project_phid);
    }

    $data = queryfx_all(
      $conn,
      'SELECT x.newValue, x.dateCreated FROM %T x %Q WHERE transactionType = %s
        ORDER BY x.dateCreated ASC',
      $table->getTableName(),
      $joins,
      ManiphestTransactionType::TYPE_STATUS);

    $stats = array();
    $day_buckets = array();

    foreach ($data as $row) {
      $is_close = $row['newValue'];
      $day_bucket = __phabricator_format_local_time(
        $row['dateCreated'],
        $user,
        'z');
      $day_buckets[$day_bucket] = $row['dateCreated'];
      if (empty($stats[$day_bucket])) {
        $stats[$day_bucket] = array(
          'open'  => 0,
          'close' => 0,
        );
      }
      $stats[$day_bucket][$is_close ? 'close' : 'open']++;
    }

    $template = array(
      'open'  => 0,
      'close' => 0,
    );

    $rows = array();
    $rowc = array();
    $last_month = null;
    $last_month_epoch = null;
    $last_week = null;
    $last_week_epoch = null;
    $week = null;
    $month = null;

    $last = key($stats) - 1;
    $period = $template;

    foreach ($stats as $bucket => $info) {
      $epoch = $day_buckets[$bucket];

      $week_bucket = __phabricator_format_local_time(
        $epoch,
        $user,
        'W');
      if ($week_bucket != $last_week) {
        if ($week) {
          $rows[] = $this->formatBurnRow(
            'Week of '.phabricator_date($last_week_epoch, $user),
            $week);
          $rowc[] = 'week';
        }
        $week = $template;
        $last_week = $week_bucket;
        $last_week_epoch = $epoch;
      }

      $month_bucket = __phabricator_format_local_time(
        $epoch,
        $user,
        'm');
      if ($month_bucket != $last_month) {
        if ($month) {
          $rows[] = $this->formatBurnRow(
            __phabricator_format_local_time($last_month_epoch, $user, 'F, Y'),
            $month);
          $rowc[] = 'month';
        }
        $month = $template;
        $last_month = $month_bucket;
        $last_month_epoch = $epoch;
      }

      $rows[] = $this->formatBurnRow(phabricator_date($epoch, $user), $info);
      $rowc[] = null;
      $week['open'] += $info['open'];
      $week['close'] += $info['close'];
      $month['open'] += $info['open'];
      $month['close'] += $info['close'];
      $period['open'] += $info['open'];
      $period['close'] += $info['close'];
    }

    if ($week) {
      $rows[] = $this->formatBurnRow(
        'Week To Date',
        $week);
      $rowc[] = 'week';
    }

    if ($month) {
      $rows[] = $this->formatBurnRow(
        'Month To Date',
        $month);
      $rowc[] = 'month';
    }

    $rows[] = $this->formatBurnRow(
      'All Time',
      $period);
    $rowc[] = 'aggregate';

    $rows = array_reverse($rows);
    $rowc = array_reverse($rowc);

    $table = new AphrontTableView($rows);
    $table->setRowClasses($rowc);
    $table->setHeaders(
      array(
        'Period',
        'Opened',
        'Closed',
        'Change',
      ));
    $table->setColumnClasses(
      array(
        'right wide',
        'n',
        'n',
        'n',
      ));

    if ($handle) {
      $header = "Task Burn Rate for Project ".$handle->renderLink();
      $caption = "<p>NOTE: This table reflects tasks <em>currently</em> in ".
                 "the project. If a task was opened in the past but added to ".
                 "the project recently, it is counted on the day it was ".
                 "opened, not the day it was categorized. If a task was part ".
                 "of this project in the past but no longer is, it is not ".
                 "counted at all.</p>";
    } else {
      $header = "Task Burn Rate for All Tasks";
      $caption = null;
    }

    $panel = new AphrontPanelView();
    $panel->setHeader($header);
    $panel->setCaption($caption);
    $panel->appendChild($table);

    $tokens = array();
    if ($handle) {
      $tokens = array(
        $handle->getPHID() => $handle->getFullName(),
      );
    }

    $form = id(new AphrontFormView())
      ->setUser($user)
      ->appendChild(
        id(new AphrontFormTokenizerControl())
          ->setDatasource('/typeahead/common/projects/')
          ->setLabel('Project')
          ->setLimit(1)
          ->setName('set_project')
          ->setValue($tokens))
      ->appendChild(
        id(new AphrontFormSubmitControl())
          ->setValue('Filter By Project'));

    $filter = new AphrontListFilterView();
    $filter->appendChild($form);

    $id = celerity_generate_unique_node_id();
    $chart = phutil_render_tag(
      'div',
      array(
        'id' => $id,
        'style' => 'border: 1px solid #6f6f6f; '.
                   'margin: 1em 2em; '.
                   'height: 400px; ',
      ),
      '');

    list($open_x, $close_x, $open_y, $close_y) = $this->buildSeries($data);

    require_celerity_resource('raphael-core');
    require_celerity_resource('raphael-g');
    require_celerity_resource('raphael-g-line');

    Javelin::initBehavior('burn-chart', array(
      'hardpoint' => $id,
      'x' => array(
        $open_x,
        $close_x,
      ),
      'y' => array(
        $open_y,
        $close_y,
      ),
    ));

    return array($filter, $chart, $panel);
  }

||||||||  public function renderBurn() {
    $request = $this->getRequest();
    $user = $request->getUser();

    $handle = null;

    $project_phid = $request->getStr('project');
    if ($project_phid) {
      $phids = array($project_phid);
      $handles = id(new PhabricatorObjectHandleData($phids))->loadHandles();
      $handle = $handles[$project_phid];
    }

    $table = new ManiphestTransaction();
    $conn = $table->establishConnection('r');

    $joins = '';
    if ($project_phid) {
      $joins = qsprintf(
        $conn,
        'JOIN %T t ON x.taskID = t.id
          JOIN %T p ON p.taskPHID = t.phid AND p.projectPHID = %s',
        id(new ManiphestTask())->getTableName(),
        id(new ManiphestTaskProject())->getTableName(),
        $project_phid);
    }

    $data = queryfx_all(
      $conn,
      'SELECT x.oldValue, x.newValue, x.dateCreated FROM %T x %Q
        WHERE transactionType = %s
        ORDER BY x.dateCreated ASC',
      $table->getTableName(),
      $joins,
      ManiphestTransactionType::TYPE_STATUS);

    $stats = array();
    $day_buckets = array();

    $open_tasks = array();

    foreach ($data as $key => $row) {

      // NOTE: Hack to avoid json_decode().
      $oldv = trim($row['oldValue'], '"');
      $newv = trim($row['newValue'], '"');

      $old_is_open = ($oldv === (string)ManiphestTaskStatus::STATUS_OPEN);
      $new_is_open = ($newv === (string)ManiphestTaskStatus::STATUS_OPEN);

      $is_open  = ($new_is_open && !$old_is_open);
      $is_close = ($old_is_open && !$new_is_open);

      $data[$key]['_is_open'] = $is_open;
      $data[$key]['_is_close'] = $is_close;

      if (!$is_open && !$is_close) {
        // This is either some kind of bogus event, or a resolution change
        // (e.g., resolved -> invalid). Just skip it.
        continue;
      }

      $day_bucket = __phabricator_format_local_time(
        $row['dateCreated'],
        $user,
        'z');
      $day_buckets[$day_bucket] = $row['dateCreated'];
      if (empty($stats[$day_bucket])) {
        $stats[$day_bucket] = array(
          'open'  => 0,
          'close' => 0,
        );
      }
      $stats[$day_bucket][$is_close ? 'close' : 'open']++;
    }

    $template = array(
      'open'  => 0,
      'close' => 0,
    );

    $rows = array();
    $rowc = array();
    $last_month = null;
    $last_month_epoch = null;
    $last_week = null;
    $last_week_epoch = null;
    $week = null;
    $month = null;

    $last = key($stats) - 1;
    $period = $template;

    foreach ($stats as $bucket => $info) {
      $epoch = $day_buckets[$bucket];

      $week_bucket = __phabricator_format_local_time(
        $epoch,
        $user,
        'W');
      if ($week_bucket != $last_week) {
        if ($week) {
          $rows[] = $this->formatBurnRow(
            'Week of '.phabricator_date($last_week_epoch, $user),
            $week);
          $rowc[] = 'week';
        }
        $week = $template;
        $last_week = $week_bucket;
        $last_week_epoch = $epoch;
      }

      $month_bucket = __phabricator_format_local_time(
        $epoch,
        $user,
        'm');
      if ($month_bucket != $last_month) {
        if ($month) {
          $rows[] = $this->formatBurnRow(
            __phabricator_format_local_time($last_month_epoch, $user, 'F, Y'),
            $month);
          $rowc[] = 'month';
        }
        $month = $template;
        $last_month = $month_bucket;
        $last_month_epoch = $epoch;
      }

      $rows[] = $this->formatBurnRow(phabricator_date($epoch, $user), $info);
      $rowc[] = null;
      $week['open'] += $info['open'];
      $week['close'] += $info['close'];
      $month['open'] += $info['open'];
      $month['close'] += $info['close'];
      $period['open'] += $info['open'];
      $period['close'] += $info['close'];
    }

    if ($week) {
      $rows[] = $this->formatBurnRow(
        'Week To Date',
        $week);
      $rowc[] = 'week';
    }

    if ($month) {
      $rows[] = $this->formatBurnRow(
        'Month To Date',
        $month);
      $rowc[] = 'month';
    }

    $rows[] = $this->formatBurnRow(
      'All Time',
      $period);
    $rowc[] = 'aggregate';

    $rows = array_reverse($rows);
    $rowc = array_reverse($rowc);

    $table = new AphrontTableView($rows);
    $table->setRowClasses($rowc);
    $table->setHeaders(
      array(
        'Period',
        'Opened',
        'Closed',
        'Change',
      ));
    $table->setColumnClasses(
      array(
        'right wide',
        'n',
        'n',
        'n',
      ));

    if ($handle) {
      $header = "Task Burn Rate for Project ".$handle->renderLink();
      $caption = "<p>NOTE: This table reflects tasks <em>currently</em> in ".
                 "the project. If a task was opened in the past but added to ".
                 "the project recently, it is counted on the day it was ".
                 "opened, not the day it was categorized. If a task was part ".
                 "of this project in the past but no longer is, it is not ".
                 "counted at all.</p>";
    } else {
      $header = "Task Burn Rate for All Tasks";
      $caption = null;
    }

    $panel = new AphrontPanelView();
    $panel->setHeader($header);
    $panel->setCaption($caption);
    $panel->appendChild($table);

    $tokens = array();
    if ($handle) {
      $tokens = array(
        $handle->getPHID() => $handle->getFullName(),
      );
    }

    $form = id(new AphrontFormView())
      ->setUser($user)
      ->appendChild(
        id(new AphrontFormTokenizerControl())
          ->setDatasource('/typeahead/common/projects/')
          ->setLabel('Project')
          ->setLimit(1)
          ->setName('set_project')
          ->setValue($tokens))
      ->appendChild(
        id(new AphrontFormSubmitControl())
          ->setValue('Filter By Project'));

    $filter = new AphrontListFilterView();
    $filter->appendChild($form);

    $id = celerity_generate_unique_node_id();
    $chart = phutil_render_tag(
      'div',
      array(
        'id' => $id,
        'style' => 'border: 1px solid #6f6f6f; '.
                   'margin: 1em 2em; '.
                   'height: 400px; ',
      ),
      '');

    list($burn_x, $burn_y) = $this->buildSeries($data);

    require_celerity_resource('raphael-core');
    require_celerity_resource('raphael-g');
    require_celerity_resource('raphael-g-line');

    Javelin::initBehavior('burn-chart', array(
      'hardpoint' => $id,
      'x' => array(
        $burn_x,
      ),
      'y' => array(
        $burn_y,
      ),
    ));

    return array($filter, $chart, $panel);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW
                                    (
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW))))
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW))))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))
            (AST_POST_INC
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR))))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_CONST))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (SCALAR)))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW
                                    (
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW))))
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW))))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CAST
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CAST
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_VAR))
                        (AST_UNARY_OP
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))
            (AST_POST_INC
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR))))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_CONST))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (SCALAR)))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))