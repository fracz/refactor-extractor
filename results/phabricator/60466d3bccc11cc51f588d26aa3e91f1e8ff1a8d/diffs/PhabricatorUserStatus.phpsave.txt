||||||||  public function save() {

    if ($this->getDateTo() <= $this->getDateFrom()) {
      throw new PhabricatorUserStatusInvalidEpochException();
    }

    $this->openTransaction();
    $this->beginWriteLocking();

    if ($this->shouldInsertWhenSaved()) {

      $overlap = $this->loadAllWhere(
        'userPHID = %s AND dateFrom < %d AND dateTo > %d',
        $this->getUserPHID(),
        $this->getDateTo(),
        $this->getDateFrom());

      if ($overlap) {
        $this->endWriteLocking();
        $this->killTransaction();
        throw new PhabricatorUserStatusOverlapException();
      }
    }

    parent::save();

    $this->endWriteLocking();
    return $this->saveTransaction();
  }

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_THROW
                                (AST_NEW))))))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))