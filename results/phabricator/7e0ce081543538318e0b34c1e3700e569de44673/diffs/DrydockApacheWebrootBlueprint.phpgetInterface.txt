  public function getInterface(
    DrydockResource $resource,
    DrydockLease $lease,
    $type) {

    switch ($type) {
      case 'webroot':
        $iface = new DrydockApacheWebrootInterface();
        $iface->setConfiguration(
          array(
            'uri' => $lease->getAttribute('uri'),
          ));
        return $iface;
      case 'command':
        $host_lease_id = $resource->getAttribute('lease.host');
        $host_lease = id(new DrydockLease())->load($host_lease_id);
        $host_lease->attachResource($host_lease->loadResource());
        return $host_lease->getInterface($type);
    }


    throw new Exception("No interface of type '{$type}'.");
  }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))))||||||||