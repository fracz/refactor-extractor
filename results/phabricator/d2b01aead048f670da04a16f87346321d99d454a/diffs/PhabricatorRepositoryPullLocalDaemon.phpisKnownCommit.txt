||||||||  private static function isKnownCommit(
    PhabricatorRepository $repository,
    $target) {

    if (self::getCache($repository, $target)) {
      return true;
    }

    $commit = id(new PhabricatorRepositoryCommit())->loadOneWhere(
      'repositoryID = %s AND commitIdentifier = %s',
      $repository->getID(),
      $target);

    if (!$commit) {
      return false;
    }

    self::setCache($repository, $target);
    while (count(self::$commitCache) > 2048) {
      array_shift(self::$commitCache);
    }

    return true;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (SCALAR))
        (
            (AST_CALL
                (
                    (AST_STATIC_PROP)))))
    (AST_RETURN
        (AST_CONST)))