||||||||  public static function discoverRepository(PhabricatorRepository $repository) {
    $vcs = $repository->getVersionControlSystem();
    switch ($vcs) {
      case PhabricatorRepositoryType::REPOSITORY_TYPE_GIT:
        return self::executeGitDiscover($repository);
      case PhabricatorRepositoryType::REPOSITORY_TYPE_SVN:
        return self::executeSvnDiscover($repository);
      case PhabricatorRepositoryType::REPOSITORY_TYPE_MERCURIAL:
        return self::executeHgDiscover($repository);
      default:
        throw new Exception("Unknown VCS '{$vcs}'!");
    }
  }


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))))))