  protected function expandTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {

    $results = parent::expandTransaction($object, $xaction);

    $type = $xaction->getTransactionType();
    switch ($type) {
      case PhabricatorTransactions::TYPE_COLUMNS:
        try {
          $this->buildMoveTransaction($object, $xaction);

          // Implicilty add the task to any boards that we're moving it
          // on, since moves on a board the task isn't part of are not
          // meaningful.
          $board_phids = ipull($xaction->getNewValue(), 'boardPHID');
          if ($board_phids) {
            $results[] = id(new ManiphestTransaction())
              ->setTransactionType(PhabricatorTransactions::TYPE_EDGE)
              ->setMetadataValue(
                'edge:type',
                PhabricatorProjectObjectHasProjectEdgeType::EDGECONST)
              ->setIgnoreOnNoEffect(true)
              ->setNewValue(
                array(
                  '+' => array_fuse($board_phids),
                ));
          }
        } catch (Exception $ex) {
          $error = new PhabricatorApplicationTransactionValidationError(
            $type,
            pht('Invalid'),
            $ex->getMessage(),
            $xaction);
          $this->moreValidationErrors[] = $error;
        }
        break;
      case ManiphestTransaction::TYPE_OWNER:
        // If this is a no-op update, don't expand it.
        $old_value = $object->getOwnerPHID();
        $new_value = $xaction->getNewValue();
        if ($old_value === $new_value) {
          continue;
        }

        // When a task is reassigned, move the old owner to the subscriber
        // list so they're still in the loop.
        if ($old_value) {
          $results[] = id(new ManiphestTransaction())
            ->setTransactionType(PhabricatorTransactions::TYPE_SUBSCRIBERS)
            ->setIgnoreOnNoEffect(true)
            ->setNewValue(
              array(
                '+' => array($old_value => $old_value),
              ));
        }
        break;
    }

    return $results;
  }

||||||||  protected function expandTransaction(
    PhabricatorLiskDAO $object,
    PhabricatorApplicationTransaction $xaction) {

    $results = parent::expandTransaction($object, $xaction);

    $type = $xaction->getTransactionType();
    switch ($type) {
      case PhabricatorTransactions::TYPE_COLUMNS:
        try {
          $more_xactions = $this->buildMoveTransaction($object, $xaction);
          foreach ($more_xactions as $more_xaction) {
            $results[] = $more_xaction;
          }
        } catch (Exception $ex) {
          $error = new PhabricatorApplicationTransactionValidationError(
            $type,
            pht('Invalid'),
            $ex->getMessage(),
            $xaction);
          $this->moreValidationErrors[] = $error;
        }
        break;
      case ManiphestTransaction::TYPE_OWNER:
        // If this is a no-op update, don't expand it.
        $old_value = $object->getOwnerPHID();
        $new_value = $xaction->getNewValue();
        if ($old_value === $new_value) {
          continue;
        }

        // When a task is reassigned, move the old owner to the subscriber
        // list so they're still in the loop.
        if ($old_value) {
          $results[] = id(new ManiphestTransaction())
            ->setTransactionType(PhabricatorTransactions::TYPE_SUBSCRIBERS)
            ->setIgnoreOnNoEffect(true)
            ->setNewValue(
              array(
                '+' => array($old_value => $old_value),
              ));
        }
        break;
    }

    return $results;
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_TRY
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_CALL
                                                                (
                                                                    (AST_NEW)))
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))))
                                                        (
                                                            (SCALAR)
                                                            (AST_CLASS_CONST
                                                                (SCALAR))))
                                                    (
                                                        (AST_CONST)))
                                                (
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))
                                                            (SCALAR))))))))))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR)))))
                        (NULL))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_CALL
                                                    (
                                                        (AST_NEW)))
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))
                                            (
                                                (AST_CONST)))
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_VAR)
                                                            (AST_VAR)))
                                                    (SCALAR)))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_TRY
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_VAR)))))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR)))))
                        (NULL))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_CALL
                                                    (
                                                        (AST_NEW)))
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))
                                            (
                                                (AST_CONST)))
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (AST_VAR)
                                                            (AST_VAR)))
                                                    (SCALAR)))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_VAR)))