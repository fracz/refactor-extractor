||||||||  public function normalizeAtomRef(DivinerAtomRef $ref) {
    if (!strlen($ref->getBook())) {
      $ref->setBook($this->getConfig('name'));
    }

    if ($ref->getBook() != $this->getConfig('name')) {
      // If the ref is from a different book, we can't normalize it. Just return
      // it as-is if it has enough information to resolve.
      if ($ref->getName() && $ref->getType()) {
        return $ref;
      } else {
        return null;
      }
    }

    $atom = $this->getPublisher()->findAtomByRef($ref);
    if ($atom) {
      return $atom->getRef();
    }

    return null;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONST)))