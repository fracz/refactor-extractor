||||||||  public function testURIGeneration() {
    $map = array(
      '/diffusion/A/browse/branch/path.ext;abc$1' => array(
        'action'    => 'browse',
        'callsign'  => 'A',
        'branch'    => 'branch',
        'path'      => 'path.ext',
        'commit'    => 'abc',
        'line'      => '1',
      ),
      '/diffusion/A/browse/a%252Fb/path.ext' => array(
        'action'    => 'browse',
        'callsign'  => 'A',
        'branch'    => 'a/b',
        'path'      => 'path.ext',
      ),
      '/diffusion/A/browse/%2B/%20%21' => array(
        'action'    => 'browse',
        'callsign'  => 'A',
        'path'      => '+/ !',
      ),
      '/diffusion/A/browse/money/%24%24100$2' => array(
        'action'    => 'browse',
        'callsign'  => 'A',
        'path'      => 'money/$100',
        'line'      => '2',
      ),
      '/diffusion/A/browse/path/to/file.ext?view=things' => array(
        'action'    => 'browse',
        'callsign'  => 'A',
        'path'      => 'path/to/file.ext',
        'params'    => array(
          'view' => 'things',
        ),
      ),
      '/diffusion/A/repository/master/' => array(
        'action'    => 'branch',
        'callsign'  => 'A',
        'branch'    => 'master',
      ),
      'path/to/file.ext;abc' => array(
        'action'    => 'rendering-ref',
        'path'      => 'path/to/file.ext',
        'commit'    => 'abc',
      ),
    );

    foreach ($map as $expect => $input) {
      $actual = DiffusionRequest::generateDiffusionURI($input);
      $this->assertEqual(
        $expect,
        (string)$actual);
    }
  }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_CAST
                        (AST_VAR)))))))