  public function getApplicationTransactionTitle(
    PhabricatorApplicationTransaction $xaction) {

    $old = $xaction->getOldValue();
    if (!is_array($old)) {
      $old = array();
    }

    $new = $xaction->getNewValue();
    if (!is_array($new)) {
      $new = array();
    }

    $add = array_diff($new, $old);
    $rem = array_diff($old, $new);

    $author_phid = $xaction->getAuthorPHID();
    if ($add && $rem) {
      return pht(
        '%s updated JIRA issue(s): added %d %s; removed %d %s.',
        $xaction->renderHandleLink($author_phid),
        new PhutilNumber(count($add)),
        implode(', ', $add),
        new PhutilNumber(count($rem)),
        implode(', ', $rem));
    } else if ($add) {
      return pht(
        '%s added %d JIRA issue(s): %s.',
        $xaction->renderHandleLink($author_phid),
        new PhutilNumber(count($add)),
        implode(', ', $add));
    } else if ($rem) {
      return pht(
        '%s removed %d JIRA issue(s): %s.',
        $xaction->renderHandleLink($author_phid),
        new PhutilNumber(count($rem)),
        implode(', ', $rem));
    }

    return parent::getApplicationTransactionTitle($xaction);
  }

||||||||  public function getApplicationTransactionTitle(
    PhabricatorApplicationTransaction $xaction) {

    $old = $xaction->getOldValue();
    if (!is_array($old)) {
      $old = array();
    }

    $new = $xaction->getNewValue();
    if (!is_array($new)) {
      $new = array();
    }

    $add = array_diff($new, $old);
    $rem = array_diff($old, $new);

    $author_phid = $xaction->getAuthorPHID();
    if ($add && $rem) {
      return pht(
        '%s updated JIRA issue(s): added %d %s; removed %d %s.',
        $xaction->renderHandleLink($author_phid),
        phutil_count($add),
        implode(', ', $add),
        phutil_count($rem),
        implode(', ', $rem));
    } else if ($add) {
      return pht(
        '%s added %d JIRA issue(s): %s.',
        $xaction->renderHandleLink($author_phid),
        phutil_count($add),
        implode(', ', $add));
    } else if ($rem) {
      return pht(
        '%s removed %d JIRA issue(s): %s.',
        $xaction->renderHandleLink($author_phid),
        phutil_count($rem),
        implode(', ', $rem));
    }

    return parent::getApplicationTransactionTitle($xaction);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_RETURN
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))
                                                    (AST_NEW
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))))
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))))))))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_RETURN
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))))))))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))