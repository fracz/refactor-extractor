  private function rebuildRepository(PhabricatorRepository $repo) {
    $console = PhutilConsole::getConsole();
    $console->writeOut("%s\n", pht('Rebuilding "%s"...', $repo->getMonogram()));

    $refs = id(new PhabricatorRepositoryRefCursorQuery())
      ->setViewer($this->getViewer())
      ->withRefTypes(array(PhabricatorRepositoryRefCursor::TYPE_BRANCH))
      ->withRepositoryPHIDs(array($repo->getPHID()))
      ->execute();

    $graph = array();
    foreach ($refs as $ref) {
      if (!$repo->shouldTrackBranch($ref->getRefName())) {
        continue;
      }

      $console->writeOut(
        "%s\n",
        pht('Rebuilding branch "%s"...', $ref->getRefName()));

      $commit = $ref->getCommitIdentifier();

      if ($repo->isGit()) {
        $stream = new PhabricatorGitGraphStream($repo, $commit);
      } else {
        $stream = new PhabricatorMercurialGraphStream($repo, $commit);
      }

      $discover = array($commit);
      while ($discover) {
        $target = array_pop($discover);
        if (isset($graph[$target])) {
          continue;
        }
        $graph[$target] = $stream->getParents($target);
        foreach ($graph[$target] as $parent) {
          $discover[] = $parent;
        }
      }
    }

    $console->writeOut(
      "%s\n",
      pht(
        'Found %s total commit(s); updating...',
        new PhutilNumber(count($graph))));

    $commit_table = id(new PhabricatorRepositoryCommit());
    $commit_table_name = $commit_table->getTableName();
    $conn_w = $commit_table->establishConnection('w');

    $bar = id(new PhutilConsoleProgressBar())
      ->setTotal(count($graph));

    $need = array();
    foreach ($graph as $child => $parents) {
      foreach ($parents as $parent) {
        $need[$parent] = $parent;
      }
      $need[$child] = $child;
    }

    $map = array();
    foreach (array_chunk($need, 2048) as $chunk) {
      $rows = queryfx_all(
        $conn_w,
        'SELECT id, commitIdentifier FROM %T
          WHERE commitIdentifier IN (%Ls) AND repositoryID = %d',
        $commit_table_name,
        $chunk,
        $repo->getID());
      foreach ($rows as $row) {
        $map[$row['commitIdentifier']] = $row['id'];
      }
    }

    $insert_sql = array();
    $delete_sql = array();

    foreach ($graph as $child => $parents) {
      $names = $parents;
      $names[] = $child;

      foreach ($names as $name) {
        if (empty($map[$name])) {
          throw new Exception(pht('Unknown commit "%s"!', $name));
        }
      }

      if (!$parents) {
        // Write an explicit 0 to indicate "no parents" instead of "no data".
        $insert_sql[] = qsprintf(
          $conn_w,
          '(%d, 0)',
          $map[$child]);
      } else {
        foreach ($parents as $parent) {
          $insert_sql[] = qsprintf(
            $conn_w,
            '(%d, %d)',
            $map[$child],
            $map[$parent]);
        }
      }

      $delete_sql[] = $map[$child];

      $bar->update(1);
    }

    $commit_table->openTransaction();
    foreach (PhabricatorLiskDAO::chunkSQL($delete_sql) as $chunk) {
      queryfx(
        $conn_w,
        'DELETE FROM %T WHERE childCommitID IN (%Q)',
        PhabricatorRepository::TABLE_PARENTS,
        $chunk);
    }

    foreach (PhabricatorLiskDAO::chunkSQL($insert_sql) as $chunk) {
      queryfx(
        $conn_w,
        'INSERT INTO %T (childCommitID, parentCommitID) VALUES %Q',
        PhabricatorRepository::TABLE_PARENTS,
        $chunk);
    }
    $commit_table->saveTransaction();

    $bar->done();
  }

}||||||||  private function rebuildRepository(PhabricatorRepository $repo) {
    $console = PhutilConsole::getConsole();
    $console->writeOut("%s\n", pht('Rebuilding "%s"...', $repo->getMonogram()));

    $refs = id(new PhabricatorRepositoryRefCursorQuery())
      ->setViewer($this->getViewer())
      ->withRefTypes(array(PhabricatorRepositoryRefCursor::TYPE_BRANCH))
      ->withRepositoryPHIDs(array($repo->getPHID()))
      ->execute();

    $graph = array();
    foreach ($refs as $ref) {
      if (!$repo->shouldTrackBranch($ref->getRefName())) {
        continue;
      }

      $console->writeOut(
        "%s\n",
        pht('Rebuilding branch "%s"...', $ref->getRefName()));

      $commit = $ref->getCommitIdentifier();

      if ($repo->isGit()) {
        $stream = new PhabricatorGitGraphStream($repo, $commit);
      } else {
        $stream = new PhabricatorMercurialGraphStream($repo, $commit);
      }

      $discover = array($commit);
      while ($discover) {
        $target = array_pop($discover);
        if (isset($graph[$target])) {
          continue;
        }
        $graph[$target] = $stream->getParents($target);
        foreach ($graph[$target] as $parent) {
          $discover[] = $parent;
        }
      }
    }

    $console->writeOut(
      "%s\n",
      pht(
        'Found %s total commit(s); updating...',
        phutil_count($graph)));

    $commit_table = id(new PhabricatorRepositoryCommit());
    $commit_table_name = $commit_table->getTableName();
    $conn_w = $commit_table->establishConnection('w');

    $bar = id(new PhutilConsoleProgressBar())
      ->setTotal(count($graph));

    $need = array();
    foreach ($graph as $child => $parents) {
      foreach ($parents as $parent) {
        $need[$parent] = $parent;
      }
      $need[$child] = $child;
    }

    $map = array();
    foreach (array_chunk($need, 2048) as $chunk) {
      $rows = queryfx_all(
        $conn_w,
        'SELECT id, commitIdentifier FROM %T
          WHERE commitIdentifier IN (%Ls) AND repositoryID = %d',
        $commit_table_name,
        $chunk,
        $repo->getID());
      foreach ($rows as $row) {
        $map[$row['commitIdentifier']] = $row['id'];
      }
    }

    $insert_sql = array();
    $delete_sql = array();

    foreach ($graph as $child => $parents) {
      $names = $parents;
      $names[] = $child;

      foreach ($names as $name) {
        if (empty($map[$name])) {
          throw new Exception(pht('Unknown commit "%s"!', $name));
        }
      }

      if (!$parents) {
        // Write an explicit 0 to indicate "no parents" instead of "no data".
        $insert_sql[] = qsprintf(
          $conn_w,
          '(%d, 0)',
          $map[$child]);
      } else {
        foreach ($parents as $parent) {
          $insert_sql[] = qsprintf(
            $conn_w,
            '(%d, %d)',
            $map[$child],
            $map[$parent]);
        }
      }

      $delete_sql[] = $map[$child];

      $bar->update(1);
    }

    $commit_table->openTransaction();
    foreach (PhabricatorLiskDAO::chunkSQL($delete_sql) as $chunk) {
      queryfx(
        $conn_w,
        'DELETE FROM %T WHERE childCommitID IN (%Q)',
        PhabricatorRepository::TABLE_PARENTS,
        $chunk);
    }

    foreach (PhabricatorLiskDAO::chunkSQL($insert_sql) as $chunk) {
      queryfx(
        $conn_w,
        'INSERT INTO %T (childCommitID, parentCommitID) VALUES %Q',
        PhabricatorRepository::TABLE_PARENTS,
        $chunk);
    }
    $commit_table->saveTransaction();

    $bar->done();
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))
            (AST_WHILE
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_FOREACH
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_NEW))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))
            (AST_WHILE
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_FOREACH
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_NEW))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_VAR)
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))