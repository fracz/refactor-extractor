  protected function renderHarbormasterStatus(
    DifferentialDiff $diff,
    array $messages) {

    $colors = array(
      DifferentialUnitStatus::UNIT_NONE => 'grey',
      DifferentialUnitStatus::UNIT_OKAY => 'green',
      DifferentialUnitStatus::UNIT_WARN => 'yellow',
      DifferentialUnitStatus::UNIT_FAIL => 'red',
      DifferentialUnitStatus::UNIT_SKIP => 'blue',
      DifferentialUnitStatus::UNIT_AUTO_SKIP => 'blue',
    );
    $icon_color = idx($colors, $diff->getUnitStatus(), 'grey');

    $message = DifferentialRevisionUpdateHistoryView::getDiffUnitMessage($diff);

    $note = array();

    $groups = mgroup($messages, 'getResult');

    $groups = array_select_keys(
      $groups,
      array(
        ArcanistUnitTestResult::RESULT_FAIL,
        ArcanistUnitTestResult::RESULT_BROKEN,
        ArcanistUnitTestResult::RESULT_UNSOUND,
        ArcanistUnitTestResult::RESULT_SKIP,
        ArcanistUnitTestResult::RESULT_PASS,
      )) + $groups;

    foreach ($groups as $result => $group) {
      $count = new PhutilNumber(count($group));
      switch ($result) {
        case ArcanistUnitTestResult::RESULT_PASS:
          $note[] = pht('%s Passed Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_FAIL:
          $note[] = pht('%s Failed Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_SKIP:
          $note[] = pht('%s Skipped Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_BROKEN:
          $note[] = pht('%s Broken Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_UNSOUND:
          $note[] = pht('%s Unsound Test(s)', $count);
          break;
        default:
          $note[] = pht('%s Other Test(s)', $count);
          break;
      }
    }

    $buildable = $diff->getBuildable();
    if ($buildable) {
      $full_results = '/harbormaster/unit/'.$buildable->getID().'/';
      $note[] = phutil_tag(
        'a',
        array(
          'href' => $full_results,
        ),
        pht('View Full Results'));
    }

    $excuse = $diff->getProperty('arc:unit-excuse');
    if (strlen($excuse)) {
      $excuse = array(
        phutil_tag('strong', array(), pht('Excuse:')),
        ' ',
        phutil_escape_html_newlines($excuse),
      );
      $note[] = $excuse;
    }

    $note = phutil_implode_html(" \xC2\xB7 ", $note);

    $status = id(new PHUIStatusListView())
      ->addItem(
        id(new PHUIStatusItemView())
          ->setIcon(PHUIStatusItemView::ICON_STAR, $icon_color)
          ->setTarget($message)
          ->setNote($note));

    return $status;
  }

||||||||  protected function renderHarbormasterStatus(
    DifferentialDiff $diff,
    array $messages) {

    $colors = array(
      DifferentialUnitStatus::UNIT_NONE => 'grey',
      DifferentialUnitStatus::UNIT_OKAY => 'green',
      DifferentialUnitStatus::UNIT_WARN => 'yellow',
      DifferentialUnitStatus::UNIT_FAIL => 'red',
      DifferentialUnitStatus::UNIT_SKIP => 'blue',
      DifferentialUnitStatus::UNIT_AUTO_SKIP => 'blue',
    );
    $icon_color = idx($colors, $diff->getUnitStatus(), 'grey');

    $message = DifferentialRevisionUpdateHistoryView::getDiffUnitMessage($diff);

    $note = array();

    $groups = mgroup($messages, 'getResult');

    $groups = array_select_keys(
      $groups,
      array(
        ArcanistUnitTestResult::RESULT_FAIL,
        ArcanistUnitTestResult::RESULT_BROKEN,
        ArcanistUnitTestResult::RESULT_UNSOUND,
        ArcanistUnitTestResult::RESULT_SKIP,
        ArcanistUnitTestResult::RESULT_PASS,
      )) + $groups;

    foreach ($groups as $result => $group) {
      $count = phutil_count($group);
      switch ($result) {
        case ArcanistUnitTestResult::RESULT_PASS:
          $note[] = pht('%s Passed Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_FAIL:
          $note[] = pht('%s Failed Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_SKIP:
          $note[] = pht('%s Skipped Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_BROKEN:
          $note[] = pht('%s Broken Test(s)', $count);
          break;
        case ArcanistUnitTestResult::RESULT_UNSOUND:
          $note[] = pht('%s Unsound Test(s)', $count);
          break;
        default:
          $note[] = pht('%s Other Test(s)', $count);
          break;
      }
    }

    $buildable = $diff->getBuildable();
    if ($buildable) {
      $full_results = '/harbormaster/unit/'.$buildable->getID().'/';
      $note[] = phutil_tag(
        'a',
        array(
          'href' => $full_results,
        ),
        pht('View Full Results'));
    }

    $excuse = $diff->getProperty('arc:unit-excuse');
    if (strlen($excuse)) {
      $excuse = array(
        phutil_tag('strong', array(), pht('Excuse:')),
        ' ',
        phutil_escape_html_newlines($excuse),
      );
      $note[] = $excuse;
    }

    $note = phutil_implode_html(" \xC2\xB7 ", $note);

    $status = id(new PHUIStatusListView())
      ->addItem(
        id(new PHUIStatusItemView())
          ->setIcon(PHUIStatusItemView::ICON_STAR, $icon_color)
          ->setTarget($message)
          ->setNote($note));

    return $status;
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL)))))
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_SWITCH
                (AST_VAR)
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY)
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR)))
                        (
                            (AST_VAR)))
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL)))))
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_SWITCH
                (AST_VAR)
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (AST_CLASS_CONST
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_BREAK
                                (NULL))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY)
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW)))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR)))
                        (
                            (AST_VAR)))
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))