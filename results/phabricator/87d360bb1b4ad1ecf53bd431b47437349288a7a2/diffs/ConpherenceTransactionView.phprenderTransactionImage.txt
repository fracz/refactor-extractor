||||||||  private function renderTransactionImage() {
    $image = null;
    if ($this->getShowImages()) {
      $transaction = $this->getConpherenceTransaction();
      switch ($transaction->getTransactionType()) {
        case PhabricatorTransactions::TYPE_COMMENT:
          $handles = $this->getHandles();
          $author = $handles[$transaction->getAuthorPHID()];
          $image_uri = $author->getImageURI();
          $image = phutil_tag(
            'span',
            array(
              'class' => 'phabricator-transaction-image',
              'style' => 'background-image: url('.$image_uri.');',
            ));
          break;
      }
    }
    return $image;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_SWITCH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_CLASS_CONST
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))
                                                (AST_ARRAY_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (SCALAR))))))
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_RETURN
        (AST_VAR)))