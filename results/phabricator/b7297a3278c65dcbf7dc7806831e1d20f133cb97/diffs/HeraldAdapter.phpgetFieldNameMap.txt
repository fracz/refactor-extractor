  public function getFieldNameMap() {
    return array(
      self::FIELD_TITLE => pht('Title'),
      self::FIELD_BODY => pht('Body'),
      self::FIELD_AUTHOR => pht('Author'),
      self::FIELD_COMMITTER => pht('Committer'),
      self::FIELD_REVIEWER => pht('Reviewer'),
      self::FIELD_REVIEWERS => pht('Reviewers'),
      self::FIELD_CC => pht('CCs'),
      self::FIELD_TAGS => pht('Tags'),
      self::FIELD_DIFF_FILE => pht('Any changed filename'),
      self::FIELD_DIFF_CONTENT => pht('Any changed file content'),
      self::FIELD_DIFF_ADDED_CONTENT => pht('Any added file content'),
      self::FIELD_DIFF_REMOVED_CONTENT => pht('Any removed file content'),
      self::FIELD_REPOSITORY => pht('Repository'),
      self::FIELD_RULE => pht('Another Herald rule'),
      self::FIELD_AFFECTED_PACKAGE => pht('Any affected package'),
      self::FIELD_AFFECTED_PACKAGE_OWNER =>
        pht("Any affected package's owner"),
      self::FIELD_CONTENT_SOURCE => pht('Content Source'),
      self::FIELD_ALWAYS => pht('Always'),
    );
  }


/* -(  Conditions  )--------------------------------------------------------- */


||||||||  public function getFieldNameMap() {
    return array(
      self::FIELD_TITLE => pht('Title'),
      self::FIELD_BODY => pht('Body'),
      self::FIELD_AUTHOR => pht('Author'),
      self::FIELD_COMMITTER => pht('Committer'),
      self::FIELD_REVIEWER => pht('Reviewer'),
      self::FIELD_REVIEWERS => pht('Reviewers'),
      self::FIELD_CC => pht('CCs'),
      self::FIELD_TAGS => pht('Tags'),
      self::FIELD_DIFF_FILE => pht('Any changed filename'),
      self::FIELD_DIFF_CONTENT => pht('Any changed file content'),
      self::FIELD_DIFF_ADDED_CONTENT => pht('Any added file content'),
      self::FIELD_DIFF_REMOVED_CONTENT => pht('Any removed file content'),
      self::FIELD_REPOSITORY => pht('Repository'),
      self::FIELD_RULE => pht('Another Herald rule'),
      self::FIELD_AFFECTED_PACKAGE => pht('Any affected package'),
      self::FIELD_AFFECTED_PACKAGE_OWNER =>
        pht("Any affected package's owner"),
      self::FIELD_CONTENT_SOURCE => pht('Content Source'),
      self::FIELD_ALWAYS => pht('Always'),
      self::FIELD_AUTHOR_PROJECTS => pht("Author's projects"),
    );
  }


/* -(  Conditions  )--------------------------------------------------------- */


||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_CLASS_CONST
                    (SCALAR))))))