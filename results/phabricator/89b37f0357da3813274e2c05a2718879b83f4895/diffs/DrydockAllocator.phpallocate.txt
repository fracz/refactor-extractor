  public function allocate() {
    $lease = $this->getPendingLease();

    $data = array(
      'type'        => $this->getResourceType(),
      'lease'       => $lease->getID(),
    );

    $task = PhabricatorWorker::scheduleTask('DrydockAllocatorWorker', $data);

    $lease->setTaskID($task->getID());

    return $lease;
  }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||