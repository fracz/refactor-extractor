  final public function setAggregateStories(array $aggregate_stories) {
    assert_instances_of($aggregate_stories, 'PhabricatorFeedStory');
    $this->aggregateStories = $aggregate_stories;
    return $this;
  }

||||||||  final public function setAggregateStories(array $aggregate_stories) {
    assert_instances_of($aggregate_stories, 'PhabricatorFeedStory');
    $this->aggregateStories = $aggregate_stories;

    $objects = array();
    $handles = array();

    foreach ($this->aggregateStories as $story) {
      $objects += $story->getObjects();
      $handles += $story->getHandles();
    }

    $this->setObjects($objects);
    $this->setHandles($handles);

    return $this;
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))