  public function getPolicy($capability) {
    return PhabricatorEnv::getEnvConfig('feed.public')
      ? PhabricatorPolicies::POLICY_PUBLIC
      : PhabricatorPolicies::POLICY_USER;
  }

||||||||  public function getPolicy($capability) {
    // If this story's primary object is a policy-aware object, use its policy
    // to control story visiblity.

    $primary_phid = $this->getPrimaryObjectPHID();
    if (isset($this->objects[$primary_phid])) {
      $object = $this->objects[$primary_phid];
      if ($object instanceof PhabricatorPolicyInterface) {
        return $object->getPolicy($capability);
      }
    }

    // TODO: Remove this once all objects are policy-aware. For now, keep
    // respecting the `feed.public` setting.
    return PhabricatorEnv::getEnvConfig('feed.public')
      ? PhabricatorPolicies::POLICY_PUBLIC
      : PhabricatorPolicies::POLICY_USER;
  }


  /**
   * @task policy
   */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR)))))