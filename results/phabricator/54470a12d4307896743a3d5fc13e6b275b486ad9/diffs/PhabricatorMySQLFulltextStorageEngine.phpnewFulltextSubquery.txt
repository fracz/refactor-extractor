||||||||  private function newFulltextSubquery(
    PhabricatorSavedQuery $query,
    AphrontDatabaseConnection $conn) {

    $field = new PhabricatorSearchDocumentField();
    $field_table = $field->getTableName();

    $document = new PhabricatorSearchDocument();
    $document_table = $document->getTableName();

    $select = array();
    $select[] = 'document.phid AS documentPHID';

    $join = array();
    $where = array();

    $raw_query = $query->getParameter('query');
    $compiled_query = $this->compileQuery($raw_query);
    if (strlen($compiled_query)) {
      $select[] = qsprintf(
        $conn,
        'MATCH(corpus) AGAINST (%s IN BOOLEAN MODE) AS fieldScore',
        $compiled_query);

      $join[] = qsprintf(
        $conn,
        '%T field ON field.phid = document.phid',
        $field_table);

      $where[] = qsprintf(
        $conn,
        'MATCH(corpus) AGAINST (%s IN BOOLEAN MODE)',
        $compiled_query);

      if ($query->getParameter('field')) {
        $where[] = qsprintf(
          $conn,
          'field.field = %s',
          $field);
      }
    } else {
      $select[] = qsprintf(
        $conn,
        'document.dateCreated AS fieldScore');
    }

    $exclude = $query->getParameter('exclude');
    if ($exclude) {
      $where[] = qsprintf(
        $conn,
        'document.phid != %s',
        $exclude);
    }

    $types = $query->getParameter('types');
    if ($types) {
      if (strlen($compiled_query)) {
        $where[] = qsprintf(
          $conn,
          'field.phidType IN (%Ls)',
          $types);
      }

      $where[] = qsprintf(
        $conn,
        'document.documentType IN (%Ls)',
        $types);
    }

    $join[] = $this->joinRelationship(
      $conn,
      $query,
      'authorPHIDs',
      PhabricatorSearchRelationship::RELATIONSHIP_AUTHOR);

    $statuses = $query->getParameter('statuses', array());
    $statuses = array_fuse($statuses);
    $open_rel = PhabricatorSearchRelationship::RELATIONSHIP_OPEN;
    $closed_rel = PhabricatorSearchRelationship::RELATIONSHIP_CLOSED;
    $include_open = !empty($statuses[$open_rel]);
    $include_closed = !empty($statuses[$closed_rel]);

    if ($include_open && !$include_closed) {
      $join[] = $this->joinRelationship(
        $conn,
        $query,
        'statuses',
        $open_rel,
        true);
    } else if ($include_closed && !$include_open) {
      $join[] = $this->joinRelationship(
        $conn,
        $query,
        'statuses',
        $closed_rel,
        true);
    }

    if ($query->getParameter('withAnyOwner')) {
      $join[] = $this->joinRelationship(
        $conn,
        $query,
        'withAnyOwner',
        PhabricatorSearchRelationship::RELATIONSHIP_OWNER,
        true);
    } else if ($query->getParameter('withUnowned')) {
      $join[] = $this->joinRelationship(
        $conn,
        $query,
        'withUnowned',
        PhabricatorSearchRelationship::RELATIONSHIP_UNOWNED,
        true);
    } else {
      $join[] = $this->joinRelationship(
        $conn,
        $query,
        'ownerPHIDs',
        PhabricatorSearchRelationship::RELATIONSHIP_OWNER);
    }

    $join[] = $this->joinRelationship(
      $conn,
      $query,
      'subscriberPHIDs',
      PhabricatorSearchRelationship::RELATIONSHIP_SUBSCRIBER);

    $join[] = $this->joinRelationship(
      $conn,
      $query,
      'projectPHIDs',
      PhabricatorSearchRelationship::RELATIONSHIP_PROJECT);

    $join[] = $this->joinRelationship(
      $conn,
      $query,
      'repository',
      PhabricatorSearchRelationship::RELATIONSHIP_REPOSITORY);

    $select = implode(', ', $select);

    $join = array_filter($join);
    foreach ($join as $key => $clause) {
      $join[$key] = ' JOIN '.$clause;
    }
    $join = implode(' ', $join);

    if ($where) {
      $where = 'WHERE '.implode(' AND ', $where);
    } else {
      $where = '';
    }

    return qsprintf(
      $conn,
      'SELECT %Q FROM %T document %Q %Q LIMIT 1000',
      $select,
      $document_table,
      $join,
      $where);
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_UNARY_OP
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_UNARY_OP
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_CONST))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_CONST))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_CLASS_CONST
                                            (SCALAR)))))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))