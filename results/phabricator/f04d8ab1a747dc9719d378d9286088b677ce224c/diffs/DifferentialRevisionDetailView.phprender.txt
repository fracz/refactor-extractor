  public function render() {

    require_celerity_resource('differential-core-view-css');
    require_celerity_resource('differential-revision-detail-css');

    $revision = $this->revision;

    $dict = array();
    foreach ($this->auxiliaryFields as $field) {
      $value = $field->renderValueForRevisionView();
      if (strlen($value)) {
        $label = rtrim($field->renderLabelForRevisionView(), ':');
        $dict[$label] = $value;
      }
    }

    $actions = array();
    foreach ($this->actions as $action) {
      $obj = new AphrontHeadsupActionView();
      $obj->setName($action['name']);
      $obj->setURI(idx($action, 'href'));
      $obj->setWorkflow(idx($action, 'sigil') == 'workflow');
      $obj->setClass(idx($action, 'class'));
      $obj->setInstant(idx($action, 'instant'));
      $obj->setUser($this->user);
      $actions[] = $obj;
    }

    $action_list = new AphrontHeadsupActionListView();
    $action_list->setActions($actions);

    $action_panel = new AphrontHeadsupView();
    $action_panel->setActionList($action_list);
    $action_panel->setHasKeyboardShortcuts(true);
    $action_panel->setProperties($dict);

    $action_panel->setObjectName('D'.$revision->getID());
    $action_panel->setHeader($revision->getTitle());

    return $action_panel->render();
  }
}||||||||  public function render() {

    require_celerity_resource('differential-core-view-css');

    $revision = $this->revision;

    $dict = array();
    foreach ($this->auxiliaryFields as $field) {
      $value = $field->renderValueForRevisionView();
      if (strlen($value)) {
        $label = rtrim($field->renderLabelForRevisionView(), ':');
        $dict[$label] = $value;
      }
    }

    $actions = array();
    foreach ($this->actions as $action) {
      $obj = new AphrontHeadsupActionView();
      $obj->setName($action['name']);
      $obj->setURI(idx($action, 'href'));
      $obj->setWorkflow(idx($action, 'sigil') == 'workflow');
      $obj->setClass(idx($action, 'class'));
      $obj->setInstant(idx($action, 'instant'));
      $obj->setUser($this->user);
      $actions[] = $obj;
    }

    $action_list = new AphrontHeadsupActionListView();
    $action_list->setActions($actions);

    $action_panel = new AphrontHeadsupView();
    $action_panel->setActionList($action_list);
    $action_panel->setHasKeyboardShortcuts(true);
    $action_panel->setProperties($dict);

    $action_panel->setObjectName('D'.$revision->getID());
    $action_panel->setHeader($revision->getTitle());

    return $action_panel->render();
  }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))