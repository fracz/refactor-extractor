||||||||  public static function executeSearch(PhabricatorSavedQuery $query) {
    $services = self::getAllServices();
    $exceptions = array();
    foreach ($services as $service) {
      $engine = $service->getEngine();
      // try all hosts until one succeeds
      try {
        $res = $engine->executeSearch($query);
        // return immediately if we get results without an exception
        return $res;
      } catch (Exception $ex) {
        $exceptions[] = $ex;
      }
    }
    throw new PhutilAggregateException('All search engines failed:',
      $exceptions);
  }

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_VAR)))))
                (NULL))))
    (AST_THROW
        (AST_NEW
            (
                (SCALAR)
                (AST_VAR)))))