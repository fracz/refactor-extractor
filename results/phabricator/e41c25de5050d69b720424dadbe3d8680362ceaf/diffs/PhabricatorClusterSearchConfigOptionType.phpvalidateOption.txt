||||||||  public function validateOption(PhabricatorConfigOption $option, $value) {
    if (!is_array($value)) {
      throw new Exception(
        pht(
          'Search cluster configuration is not valid: value must be a '.
          'list of search hosts.'));
    }

    $engines = PhabricatorSearchService::loadAllFulltextStorageEngines();

    foreach ($value as $index => $spec) {
      if (!is_array($spec)) {
        throw new Exception(
          pht(
            'Search cluster configuration is not valid: each entry in the '.
            'list must be a dictionary describing a search service, but '.
            'the value with index "%s" is not a dictionary.',
            $index));
      }

      try {
        PhutilTypeSpec::checkMap(
          $spec,
          array(
            'type'      => 'string',
            'hosts'     => 'optional list<map<string, wild>>',
            'roles'     => 'optional map<string, wild>',
            'port'      => 'optional int',
            'protocol'  => 'optional string',
            'path'      => 'optional string',
            'version'   => 'optional int',
          ));
      } catch (Exception $ex) {
        throw new Exception(
          pht(
            'Search engine configuration has an invalid service '.
            'specification (at index "%s"): %s.',
            $index,
            $ex->getMessage()));
      }

      if (!array_key_exists($spec['type'], $engines)) {
        throw new Exception(
          pht('Invalid search engine type: %s. Valid types include: %s',
            $spec['type'],
            implode(', ', array_keys($engines))));
      }

      if (isset($spec['hosts'])) {
        foreach ($spec['hosts'] as $hostindex => $host) {
          try {
            PhutilTypeSpec::checkMap(
              $host,
              array(
                'host'     => 'string',
                'roles'     => 'optional map<string, wild>',
                'port'      => 'optional int',
                'protocol'  => 'optional string',
                'path'      => 'optional string',
                'version'   => 'optional int',
              ));
          } catch (Exception $ex) {
            throw new Exception(
              pht(
                'Search cluster configuration has an invalid host '.
                'specification (at index "%s"): %s.',
                $hostindex,
                $ex->getMessage()));
          }
        }
      }
    }
  }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (SCALAR))
                                                (SCALAR))
                                            (AST_VAR)))))))))
            (AST_TRY
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (SCALAR))
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))))))
                (NULL))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_TRY
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (SCALAR))))))
                                    (AST_CATCH_LIST
                                        (AST_CATCH
                                            (AST_NAME_LIST)
                                            (AST_VAR)
                                            (
                                                (AST_THROW
                                                    (AST_NEW
                                                        (
                                                            (AST_CALL
                                                                (
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (SCALAR))
                                                                    (AST_VAR)
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR))))))))))
                                    (NULL))))))))))