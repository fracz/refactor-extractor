||||||||  public function getDatasource() {
    $parameters = $this->getFieldConfigValue('datasource.parameters', array());

    $class = $this->getFieldConfigValue('datasource.class');
    $parent = 'PhabricatorTypeaheadDatasource';
    if (!is_subclass_of($class, $parent)) {
      throw new Exception(
        pht(
          'Configured datasource class "%s" must be a valid subclass of '.
          '"%s".',
          $class,
          $parent));
    }

    return newv($class, array())
      ->setParameters($parameters);
  }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY)))
            (
                (AST_VAR)))))