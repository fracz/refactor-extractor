  public function linkBugtraq($message, $revision = null) {
    $bugtraq_url = PhabricatorEnv::getEnvConfig('bugtraq.url');
    list($bugtraq_re, $id_re) =
      PhabricatorEnv::getEnvConfig('bugtraq.logregex') +
      array('', '');

    switch ($this->getVersionControlSystem()) {
      case PhabricatorRepositoryType::REPOSITORY_TYPE_SVN:
        // TODO: Get bugtraq:logregex and bugtraq:url from SVN properties.
        break;
    }

    if (!$bugtraq_url || $bugtraq_re == '') {
      return $message;
    }

    $matches = null;
    $flags = PREG_SET_ORDER | PREG_OFFSET_CAPTURE;
    preg_match_all($bugtraq_re, $message, $matches, $flags);
    foreach ($matches as $match) {
      list($all, $all_offset) = array_shift($match);

      if ($id_re != '') {
        // Match substrings with bug IDs
        preg_match_all($id_re, $all, $match, PREG_OFFSET_CAPTURE);
        list(, $match) = $match;
      } else {
        $all_offset = 0;
      }

      $match = array_reverse($match);
      foreach ($match as $val) {
        list($s, $offset) = $val;
        $message = substr_replace(
          $message,
          '[[ '.str_replace('%BUGID%', $s, $bugtraq_url).' | '.$s.' ]]',
          $offset + $all_offset,
          strlen($s));
      }
    }

    return $message;
  }


/* -(  PhabricatorPolicyInterface  )----------------------------------------- */


||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONST)))
                        (AST_ASSIGN
                            (AST_ARRAY
                                (NULL)
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||