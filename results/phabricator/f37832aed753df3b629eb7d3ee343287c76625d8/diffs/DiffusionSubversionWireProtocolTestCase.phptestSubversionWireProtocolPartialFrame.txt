||||||||  public function testSubversionWireProtocolPartialFrame() {
    $proto = new DiffusionSubversionWireProtocol();

    // This is primarily a test that we don't hang when we write() a frame
    // which straddles a string boundary.
    $msg1 = $proto->writeData('( duck 5:qu');
    $msg2 = $proto->writeData('ack ) ');

    $this->assertEqual(array(), ipull($msg1, 'structure'));
    $this->assertEqual(
      array(
        array(
          array(
            'type' => 'word',
            'value' => 'duck',
          ),
          array(
            'type'=> 'string',
            'value' => 'quack',
          ),
        ),
      ),
      ipull($msg2, 'structure'));
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL)))
                    (NULL)))
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR))))))