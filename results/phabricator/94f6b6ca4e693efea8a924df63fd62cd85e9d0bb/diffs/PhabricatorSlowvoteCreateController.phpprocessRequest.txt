  public function processRequest() {

    $request = $this->getRequest();
    $user = $request->getUser();

    $poll = new PhabricatorSlowvotePoll();
    $poll->setAuthorPHID($user->getPHID());

    $e_question = true;
    $e_response = true;
    $errors = array();

    $responses = $request->getArr('response');

    if ($request->isFormPost()) {
      $poll->setQuestion($request->getStr('question'));
      $poll->setResponseVisibility($request->getInt('response_visibility'));
      $poll->setShuffle($request->getBool('shuffle', false));
      $poll->setMethod($request->getInt('method'));

      if (!strlen($poll->getQuestion())) {
        $e_question = 'Required';
        $errors[] = 'You must ask a poll question.';
      } else {
        $e_question = null;
      }

      $responses = array_filter($responses);
      if (empty($responses)) {
        $errors[] = 'You must offer at least one response.';
        $e_response = 'Required';
      } else {
        $e_response = null;
      }

      if (empty($errors)) {
        $poll->save();

        foreach ($responses as $response) {
          $option = new PhabricatorSlowvoteOption();
          $option->setName($response);
          $option->setPollID($poll->getID());
          $option->save();
        }

        return id(new AphrontRedirectResponse())
          ->setURI('/V'.$poll->getID());
      }
    }

    $error_view = null;
    if ($errors) {
      $error_view = new AphrontErrorView();
      $error_view->setTitle('Form Errors');
      $error_view->setErrors($errors);
    }

    $form = id(new AphrontFormView())
      ->setUser($user)
      ->appendChild(
        '<p class="aphront-form-instructions">Resolve issues and build '.
        'consensus through protracted deliberation.</p>')
      ->appendChild(
        id(new AphrontFormTextControl())
          ->setLabel('Question')
          ->setName('question')
          ->setValue($poll->getQuestion())
          ->setError($e_question));

    for ($ii = 0; $ii < 10; $ii++) {
      $n = ($ii + 1);
      $response = id(new AphrontFormTextControl())
        ->setLabel("Response {$n}")
        ->setName('response[]')
        ->setValue(idx($responses, $ii, ''));

      if ($ii == 0) {
        $response->setError($e_response);
      }

      $form->appendChild($response);
    }

    $poll_type_options = array(
      PhabricatorSlowvotePoll::METHOD_PLURALITY => 'Plurality (Single Choice)',
      PhabricatorSlowvotePoll::METHOD_APPROVAL  => 'Approval (Multiple Choice)',
    );

    $response_type_options = array(
      PhabricatorSlowvotePoll::RESPONSES_VISIBLE
        => 'Allow anyone to see the responses',
      PhabricatorSlowvotePoll::RESPONSES_VOTERS
        => 'Require a vote to see the responses',
      PhabricatorSlowvotePoll::RESPONSES_OWNER
        => 'Only I can see the responses',
    );

    $form
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setLabel('Vote Type')
          ->setName('method')
          ->setValue($poll->getMethod())
          ->setOptions($poll_type_options))
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setLabel('Responses')
          ->setName('response_visibility')
          ->setValue($poll->getResponseVisibility())
          ->setOptions($response_type_options))
      ->appendChild(
        id(new AphrontFormCheckboxControl())
          ->setLabel('Shuffle')
          ->addCheckbox(
            'shuffle',
            1,
            'Show choices in random order',
            $poll->getShuffle()))
      ->appendChild(
        id(new AphrontFormSubmitControl())
          ->setValue('Create Slowvote')
          ->addCancelButton('/vote/'));

    $panel = new AphrontPanelView();
    $panel->setWidth(AphrontPanelView::WIDTH_FORM);
    $panel->setHeader('Create Slowvote');
    $panel->appendChild($form);

    return $this->buildStandardPageResponse(
      array(
        $error_view,
        $panel,
      ),
      array(
        'title' => 'Create Slowvote',
      ));
  }

}||||||||  public function processRequest() {

    $request = $this->getRequest();
    $user = $request->getUser();

    $poll = new PhabricatorSlowvotePoll();
    $poll->setAuthorPHID($user->getPHID());

    $e_question = true;
    $e_response = true;
    $errors = array();

    $responses = $request->getArr('response');

    if ($request->isFormPost()) {
      $poll->setQuestion($request->getStr('question'));
      $poll->setResponseVisibility($request->getInt('response_visibility'));
      $poll->setShuffle((int)$request->getBool('shuffle', false));
      $poll->setMethod($request->getInt('method'));

      if (!strlen($poll->getQuestion())) {
        $e_question = 'Required';
        $errors[] = 'You must ask a poll question.';
      } else {
        $e_question = null;
      }

      $responses = array_filter($responses);
      if (empty($responses)) {
        $errors[] = 'You must offer at least one response.';
        $e_response = 'Required';
      } else {
        $e_response = null;
      }

      if (empty($errors)) {
        $poll->save();

        foreach ($responses as $response) {
          $option = new PhabricatorSlowvoteOption();
          $option->setName($response);
          $option->setPollID($poll->getID());
          $option->save();
        }

        return id(new AphrontRedirectResponse())
          ->setURI('/V'.$poll->getID());
      }
    }

    $error_view = null;
    if ($errors) {
      $error_view = new AphrontErrorView();
      $error_view->setTitle('Form Errors');
      $error_view->setErrors($errors);
    }

    $form = id(new AphrontFormView())
      ->setUser($user)
      ->appendChild(
        '<p class="aphront-form-instructions">Resolve issues and build '.
        'consensus through protracted deliberation.</p>')
      ->appendChild(
        id(new AphrontFormTextControl())
          ->setLabel('Question')
          ->setName('question')
          ->setValue($poll->getQuestion())
          ->setError($e_question));

    for ($ii = 0; $ii < 10; $ii++) {
      $n = ($ii + 1);
      $response = id(new AphrontFormTextControl())
        ->setLabel("Response {$n}")
        ->setName('response[]')
        ->setValue(idx($responses, $ii, ''));

      if ($ii == 0) {
        $response->setError($e_response);
      }

      $form->appendChild($response);
    }

    $poll_type_options = array(
      PhabricatorSlowvotePoll::METHOD_PLURALITY => 'Plurality (Single Choice)',
      PhabricatorSlowvotePoll::METHOD_APPROVAL  => 'Approval (Multiple Choice)',
    );

    $response_type_options = array(
      PhabricatorSlowvotePoll::RESPONSES_VISIBLE
        => 'Allow anyone to see the responses',
      PhabricatorSlowvotePoll::RESPONSES_VOTERS
        => 'Require a vote to see the responses',
      PhabricatorSlowvotePoll::RESPONSES_OWNER
        => 'Only I can see the responses',
    );

    $form
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setLabel('Vote Type')
          ->setName('method')
          ->setValue($poll->getMethod())
          ->setOptions($poll_type_options))
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setLabel('Responses')
          ->setName('response_visibility')
          ->setValue($poll->getResponseVisibility())
          ->setOptions($response_type_options))
      ->appendChild(
        id(new AphrontFormCheckboxControl())
          ->setLabel('Shuffle')
          ->addCheckbox(
            'shuffle',
            1,
            'Show choices in random order',
            $poll->getShuffle()))
      ->appendChild(
        id(new AphrontFormSubmitControl())
          ->setValue('Create Slowvote')
          ->addCancelButton('/vote/'));

    $panel = new AphrontPanelView();
    $panel->setWidth(AphrontPanelView::WIDTH_FORM);
    $panel->setHeader('Create Slowvote');
    $panel->appendChild($form);

    return $this->buildStandardPageResponse(
      array(
        $error_view,
        $panel,
      ),
      array(
        'title' => 'Create Slowvote',
      ));
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_CONST)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))))
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_VAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_VAR))))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (
                                (AST_VAR)))))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_CONST))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))))
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_VAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_VAR))))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (
                                (AST_VAR)))))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))))))