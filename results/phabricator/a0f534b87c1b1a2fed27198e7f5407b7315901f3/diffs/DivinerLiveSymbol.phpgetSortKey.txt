  public function getSortKey() {
    return $this->getTitle();
  }

||||||||  public function getSortKey() {
    // Sort articles before other types of content. Then, sort atoms in a
    // case-insensitive way.
    return sprintf(
      '%c:%s',
      ($this->getType() == DivinerAtom::TYPE_ARTICLE ? '0' : '1'),
      phutil_utf8_strtolower($this->getTitle()));
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR)
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))))))