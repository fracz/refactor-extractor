  protected function getBuiltinProfilePanels($object) {
    $viewer = $this->getViewer();

    $panels = array();

    $panels[] = $this->newPanel()
      ->setBuiltinKey(self::PANEL_PROFILE)
      ->setPanelKey(PhabricatorPeopleDetailsProfilePanel::PANELKEY);

    // TODO: Convert this into a proper panel type.
    $have_calendar = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorCalendarApplication',
      $viewer);
    if ($have_calendar) {
      $uri = urisprintf(
        '/p/%s/calendar/',
        $object->getUsername());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('calendar')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'calendar')
        ->setPanelProperty('name', pht('Calendar'))
        ->setPanelProperty('uri', $uri);
    }

    $have_maniphest = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorManiphestApplication',
      $viewer);
    if ($have_maniphest) {
      $uri = urisprintf(
        '/maniphest/?statuses=open()&assigned=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('tasks')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'maniphest')
        ->setPanelProperty('name', pht('Open Tasks'))
        ->setPanelProperty('uri', $uri);
    }

    $have_differential = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorDifferentialApplication',
      $viewer);
    if ($have_differential) {
      $uri = urisprintf(
        '/differential/?authors=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('revisions')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'differential')
        ->setPanelProperty('name', pht('Revisions'))
        ->setPanelProperty('uri', $uri);
    }

    $have_diffusion = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorDiffusionApplication',
      $viewer);
    if ($have_diffusion) {
      $uri = urisprintf(
        '/audit/?authors=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('commits')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'diffusion')
        ->setPanelProperty('name', pht('Commits'))
        ->setPanelProperty('uri', $uri);
    }

    return $panels;
  }

}||||||||  protected function getBuiltinProfilePanels($object) {
    $viewer = $this->getViewer();

    $panels = array();

    $panels[] = $this->newPanel()
      ->setBuiltinKey(self::PANEL_PROFILE)
      ->setPanelKey(PhabricatorPeopleDetailsProfilePanel::PANELKEY);

    // TODO: Convert this into a proper panel type.
    $have_calendar = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorCalendarApplication',
      $viewer);
    if ($have_calendar) {
      $uri = urisprintf(
        '/p/%s/calendar/',
        $object->getUsername());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('calendar')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'calendar')
        ->setPanelProperty('name', pht('Calendar'))
        ->setPanelProperty('uri', $uri);
    }

    $have_maniphest = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorManiphestApplication',
      $viewer);
    if ($have_maniphest) {
      $uri = urisprintf(
        '/maniphest/?statuses=open()&assigned=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('tasks')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'maniphest')
        ->setPanelProperty('name', pht('Open Tasks'))
        ->setPanelProperty('uri', $uri);
    }

    $have_differential = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorDifferentialApplication',
      $viewer);
    if ($have_differential) {
      $uri = urisprintf(
        '/differential/?authors=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('revisions')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'differential')
        ->setPanelProperty('name', pht('Revisions'))
        ->setPanelProperty('uri', $uri);
    }

    $have_diffusion = PhabricatorApplication::isClassInstalledForViewer(
      'PhabricatorDiffusionApplication',
      $viewer);
    if ($have_diffusion) {
      $uri = urisprintf(
        '/audit/?authors=%s#R',
        $object->getPHID());

      $panels[] = $this->newPanel()
        ->setBuiltinKey('commits')
        ->setPanelKey(PhabricatorLinkProfilePanel::PANELKEY)
        ->setPanelProperty('icon', 'diffusion')
        ->setPanelProperty('name', pht('Commits'))
        ->setPanelProperty('uri', $uri);
    }

    $panels[] = $this->newPanel()
      ->setBuiltinKey(self::PANEL_MANAGE)
      ->setPanelKey(PhabricatorPeopleManageProfilePanel::PANELKEY);

    return $panels;
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))