||||||||  public function processRequest() {
    $request = $this->getRequest();
    $admin = $request->getUser();

    $user = id(new PhabricatorPeopleQuery())
      ->setViewer($admin)
      ->withIDs(array($this->id))
      ->executeOne();
    if (!$user) {
      return new Aphront404Response();
    }

    $profile_uri = '/p/'.$user->getUsername();

    if ($user->getPHID() == $admin->getPHID()) {
      return $this->buildDeleteSelfResponse($profile_uri);
    }

    $errors = array();

    $v_username = '';
    $e_username = true;
    if ($request->isFormPost()) {
      $v_username = $request->getStr('username');

      if (!$v_username) {
        $errors[] = pht(
          'You must type the username to confirm that you want to delete '.
          'this user account.');
        $e_username = pht('Required');
      } else if ($v_username != $user->getUsername()) {
        $errors[] = pht(
          'You must type the username correctly to confirm that you want '.
          'to delete this user account.');
        $e_username = pht('Incorrect');
      }

      if (!$errors) {
        id(new PhabricatorUserEditor())
          ->setActor($admin)
          ->deleteUser($user);

        $done_uri = $this->getApplicationURI();

        return id(new AphrontRedirectResponse())->setURI($done_uri);
      }
    }

    $str1 = pht(
      'Be careful when deleting users! This will permanently and '.
      'irreversibly destroy this user account.');

    $str2 = pht(
      'If this user interacted with anything, it is generally better to '.
      'disable them, not delete them. If you delete them, it will no longer '.
      'be possible to (for example) search for objects they created, and you '.
      'will lose other information about their history. Disabling them '.
      'instead will prevent them from logging in but not destroy any of '.
      'their data.');

    $str3 = pht(
      'It is generally safe to delete newly created users (and test users and '.
      'so on), but less safe to delete established users. If possible, '.
      'disable them instead.');

    $form = id(new AphrontFormView())
      ->setUser($admin)
      ->appendRemarkupInstructions(
        pht(
          'To confirm that you want to permanently and irrevocably destroy '.
          'this user account, type their username:'))
      ->appendChild(
        id(new AphrontFormStaticControl())
          ->setLabel(pht('Username'))
          ->setValue($user->getUsername()))
      ->appendChild(
        id(new AphrontFormTextControl())
          ->setLabel(pht('Confirm'))
          ->setValue($v_username)
          ->setName('username')
          ->setError($e_username));

    if ($errors) {
      $errors = id(new AphrontErrorView())->setErrors($errors);
    }

    return $this->newDialog()
      ->setWidth(AphrontDialogView::WIDTH_FORM)
      ->setTitle(pht('Really Delete User?'))
      ->setShortTitle(pht('Delete User'))
      ->appendChild($errors)
      ->appendParagraph($str1)
      ->appendParagraph($str2)
      ->appendParagraph($str3)
      ->appendChild($form->buildLayoutView())
      ->addSubmitButton(pht('Delete User'))
      ->addCancelButton($profile_uri);
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_VAR)))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_CALL
                                                (
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (SCALAR)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (AST_NEW)))
                                    (
                                        (AST_VAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))))))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (
                                (AST_VAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW)))
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)))))
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_VAR)))
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_VAR)))))