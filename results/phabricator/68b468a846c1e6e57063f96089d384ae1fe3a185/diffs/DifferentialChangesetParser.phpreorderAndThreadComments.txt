||||||||  private function reorderAndThreadComments(array $comments) {
    $comments = msort($comments, 'getID');

    // Build an empty map of all the comments we actually have. If a comment
    // is a reply but the parent has gone missing, we don't want it to vanish
    // completely.
    $comment_phids = mpull($comments, 'getPHID');
    $replies = array_fill_keys($comment_phids, array());

    // Now, remove all comments which are replies, leaving only the top-level
    // comments.
    foreach ($comments as $key => $comment) {
      $reply_phid = $comment->getReplyToCommentPHID();
      if (isset($replies[$reply_phid])) {
        $replies[$reply_phid][] = $comment;
        unset($comments[$key]);
      }
    }

    // For each top level comment, add the comment, then add any replies
    // to it. Do this recursively so threads are shown in threaded order.
    $results = array();
    foreach ($comments as $comment) {
      $results[] = $comment;
      $phid = $comment->getPHID();
      $descendants = $this->getInlineReplies($replies, $phid, 1);
      foreach ($descendants as $descendant) {
        $results[] = $descendant;
      }
    }

    // If we have anything left, they were cyclic references. Just dump
    // them in a the end. This should be impossible, but users are very
    // creative.
    foreach ($replies as $phid => $comments) {
      foreach ($comments as $comment) {
        $results[] = $comment;
      }
    }

    return $results;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (NULL))
                            (AST_VAR))
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))