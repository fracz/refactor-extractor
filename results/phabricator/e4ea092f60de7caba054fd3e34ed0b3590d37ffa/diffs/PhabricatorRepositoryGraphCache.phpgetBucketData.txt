||||||||  private function getBucketData($bucket_key, $rebuild_data = null) {
    $cache_key = $this->getBucketCacheKey($bucket_key);

    // TODO: This cache stuff could be handled more gracefully, but the
    // database cache currently requires values to be strings and needs
    // some tweaking to support this as part of a stack. Our cache semantics
    // here are also unusual (not purely readthrough) because this cache is
    // appendable.

    $cache_level1 = PhabricatorCaches::getRepositoryGraphL1Cache();
    $cache_level2 = PhabricatorCaches::getRepositoryGraphL2Cache();
    if ($rebuild_data === null) {
      $bucket_data = $cache_level1->getKey($cache_key);
      if ($bucket_data) {
        return $bucket_data;
      }

      $bucket_data = $cache_level2->getKey($cache_key);
      if ($bucket_data) {
        $unserialized = @unserialize($bucket_data);
        if ($unserialized) {
          // Fill APC if we got a database hit but missed in APC.
          $cache_level1->setKey($cache_key, $unserialized);
          return $unserialized;
        }
      }
    }

    if (!is_array($rebuild_data)) {
      $rebuild_data = array();
    }

    $bucket_data = $this->rebuildBucket($bucket_key, $rebuild_data);

    // Don't bother writing the data if we didn't update anything.
    if ($bucket_data !== $rebuild_data) {
      $cache_level2->setKey($cache_key, serialize($bucket_data));
      $cache_level1->setKey($cache_key, $bucket_data);
    }

    return $bucket_data;
  }


  /**
   * Rebuild a cache bucket, amending existing data if avialable.
   *
   * @param   int     Bucket key, from @{method:getBucketKey}.
   * @param   array   Existing bucket data.
   * @return  array   Rebuilt bucket data.
   * @task cache
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_RETURN
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))