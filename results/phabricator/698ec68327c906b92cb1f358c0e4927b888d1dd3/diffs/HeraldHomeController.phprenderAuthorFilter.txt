||||||||  private function renderAuthorFilter($phid) {
    if ($phid) {
      $handle = PhabricatorObjectHandleData::loadOneHandle($phid);
      $tokens = array(
        $phid => $handle->getFullName(),
      );
    } else {
      $tokens = array();
    }

    $form = id(new AphrontFormView())
      ->setUser($this->getRequest()->getUser())
      ->appendChild(
        id(new AphrontFormTokenizerControl())
          ->setName('set_phid')
          ->setValue($tokens)
          ->setLimit(1)
          ->setLabel('Filter Author')
          ->setDataSource('/typeahead/common/accounts/'))
      ->appendChild(
        id(new AphrontFormSubmitControl())
          ->setValue('Apply Filter'));

    $filter = new AphrontListFilterView();
    $filter->appendChild($form);
    return $filter;
  }


}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL
                                            (
                                                (AST_NEW)))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))))
            (
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))