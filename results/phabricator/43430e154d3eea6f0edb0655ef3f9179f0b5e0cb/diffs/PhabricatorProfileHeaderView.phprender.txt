||||||||  public function render() {
    require_celerity_resource('phabricator-profile-header-css');

    $image = null;
    if ($this->profilePicture) {
      $image = phutil_render_tag(
        'div',
        array(
          'class' => 'profile-header-picture-frame',
          'style' => 'background-image: url('.$this->profilePicture.');',
        ),
        '');
    }

    return
      '<table class="phabricator-profile-header">
        <tr>
          <td class="profile-header-name">'.
            phutil_escape_html($this->profileName).
          '</td>
          <td class="profile-header-picture" rowspan="2">'.
            $image.
          '</td>
        </tr>
        <tr>
          <td class="profile-header-description">'.
            phutil_escape_html($this->profileDescription).
          '</td>
        </tr>
      </table>'.
      $this->renderChildren();
  }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR))
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR)))))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))