||||||||  private function renderAboutPage(
    PhabricatorProject $project,
    PhabricatorProjectProfile $profile) {

    $viewer = $this->getRequest()->getUser();

    $blurb = $profile->getBlurb();
    $blurb = phutil_escape_html($blurb);
    $blurb = str_replace("\n", '<br />', $blurb);

    $phids = array_merge(
      array($project->getAuthorPHID()),
      $project->getSubprojectPHIDs()
    );
    $phids = array_unique($phids);
    $handles = id(new PhabricatorObjectHandleData($phids))
      ->loadHandles();

    $timestamp = phabricator_datetime($project->getDateCreated(), $viewer);

    $about =
      '<div class="phabricator-profile-info-group">
        <h1 class="phabricator-profile-info-header">About</h1>
        <div class="phabricator-profile-info-pane">
          <table class="phabricator-profile-info-table">
            <tr>
              <th>Creator</th>
              <td>'.$handles[$project->getAuthorPHID()]->renderLink().'</td>
            </tr>
            <tr>
              <th>Created</th>
              <td>'.$timestamp.'</td>
            </tr>
            <tr>
              <th>PHID</th>
              <td>'.phutil_escape_html($project->getPHID()).'</td>
            </tr>
            <tr>
              <th>Blurb</th>
              <td>'.$blurb.'</td>
            </tr>
          </table>
        </div>
      </div>';

    if ($project->getSubprojectPHIDs()) {
      $table = $this->renderSubprojectTable(
        $handles,
        $project->getSubprojectPHIDs());
      $subproject_list = $table->render();
    } else {
      $subproject_list = '<p><em>No subprojects.</em></p>';
    }

    $about .=
      '<div class="phabricator-profile-info-group">'.
        '<h1 class="phabricator-profile-info-header">Subprojects</h1>'.
        '<div class="phabricator-profile-info-pane">'.
          $subproject_list.
        '</div>'.
      '</div>';

    return $about;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (NULL)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (AST_NEW
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))