  public function buildQueryFromSavedQuery(PhabricatorSavedQuery $saved) {
    $resource_phids = $saved->getParameter('resourcePHIDs', array());
    $lease_phids = $saved->getParameter('leasePHIDs', array());

     // TODO: Change logs to use PHIDs instead of IDs.
    $resource_ids = array();
    $lease_ids = array();

    if ($resource_phids) {
      $resource_ids = id(new DrydockResourceQuery())
        ->setViewer(PhabricatorUser::getOmnipotentUser())
        ->withPHIDs($resource_phids)
        ->execute();
      $resource_ids = mpull($resource_ids, 'getID');
    }

    if ($lease_phids) {
      $lease_ids = id(new DrydockLeaseQuery())
        ->setViewer(PhabricatorUser::getOmnipotentUser())
        ->withPHIDs($lease_phids)
        ->execute();
      $lease_ids = mpull($lease_ids, 'getID');
    }

    $query = new DrydockLogQuery();
    if ($resource_ids) {
      $query->withResourceIDs($resource_ids);
    }
    if ($lease_ids) {
      $query->withLeaseIDs($lease_ids);
    }

    return $query;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (AST_STATIC_CALL)))
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (AST_STATIC_CALL)))
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||