  final protected function renderDate($epoch) {
    $viewer = $this->getViewer();

    $display = phabricator_datetime($epoch, $viewer);

    // When rendering to text, we explicitly render the offset from UTC to
    // provide context to the date: the mail may be generating with the
    // server's settings, or the user may later refer back to it after changing
    // timezones.

    if ($this->isTextMode()) {
      $offset = $viewer->getTimeZoneOffsetInHours();
      if ($offset >= 0) {
        $display = pht('%s (UTC+%d)', $display, $offset);
      } else {
        $display = pht('%s (UTC-%d)', $display, abs($offset));
      }
    }

    return $this->renderValue($display);
  }

||||||||  final protected function renderDate($epoch) {
    $viewer = $this->getViewer();

    // We accept either epoch timestamps or dictionaries describing a
    // PhutilCalendarDateTime.
    if (is_array($epoch)) {
      $datetime = PhutilCalendarAbsoluteDateTime::newFromDictionary($epoch)
        ->setViewerTimezone($viewer->getTimezoneIdentifier());

      $all_day = $datetime->getIsAllDay();

      $epoch = $datetime->getEpoch();
    } else {
      $all_day = false;
    }

    if ($all_day) {
      $display = phabricator_date($epoch, $viewer);
    } else {
      $display = phabricator_datetime($epoch, $viewer);

      // When rendering to text, we explicitly render the offset from UTC to
      // provide context to the date: the mail may be generating with the
      // server's settings, or the user may later refer back to it after
      // changing timezones.

      if ($this->isTextMode()) {
        $offset = $viewer->getTimeZoneOffsetInHours();
        if ($offset >= 0) {
          $display = pht('%s (UTC+%d)', $display, $offset);
        } else {
          $display = pht('%s (UTC-%d)', $display, abs($offset));
        }
      }
    }

    return $this->renderValue($display);
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (AST_VAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))))))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))