  final public static function getAllTypes() {
    return id(new PhutilClassMapQuery())
      ->setAncestorClass(__CLASS__)
      ->setUniqueMethod('getTypeConstant')
      ->execute();
  }


  /**
   * Get all PHID types of applications installed for a given viewer.
   *
   * @param PhabricatorUser Viewing user.
   * @return dict<string, PhabricatorPHIDType> Map of constants to installed
   *  types.
   */
||||||||  final public static function getAllTypes() {
    return self::newClassMapQuery()
      ->execute();
  }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_NEW)))
                    (
                        (AST_MAGIC_CONST)))
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL))))