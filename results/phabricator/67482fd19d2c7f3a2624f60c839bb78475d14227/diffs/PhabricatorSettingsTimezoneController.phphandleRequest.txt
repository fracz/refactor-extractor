  public function handleRequest(AphrontRequest $request) {
    $viewer = $this->getViewer();

    $client_offset = $request->getURIData('offset');
    $client_offset = (int)$client_offset;

    $timezones = DateTimeZone::listIdentifiers();
    $now = new DateTime('@'.PhabricatorTime::getNow());

    $options = array(
      'ignore' => pht('Ignore Conflict'),
    );

    foreach ($timezones as $identifier) {
      $zone = new DateTimeZone($identifier);
      $offset = -($zone->getOffset($now) / 60);
      if ($offset == $client_offset) {
        $options[$identifier] = $identifier;
      }
    }

    $settings_help = pht(
      'You can change your date and time preferences in Settings.');

    if ($request->isFormPost()) {
      $timezone = $request->getStr('timezone');

      $pref_ignore = PhabricatorUserPreferences::PREFERENCE_IGNORE_OFFSET;
      $pref_timezone = PhabricatorTimezoneSetting::SETTINGKEY;

      $preferences = $viewer->loadPreferences();

      if ($timezone == 'ignore') {
        $preferences
          ->setPreference($pref_ignore, $client_offset)
          ->save();

        return $this->newDialog()
          ->setTitle(pht('Conflict Ignored'))
          ->appendParagraph(
            pht(
              'The conflict between your browser and profile timezone '.
              'settings will be ignored.'))
          ->appendParagraph($settings_help)
          ->addCancelButton('/', pht('Done'));
      }

      if (isset($options[$timezone])) {
        $preferences
          ->setPreference($pref_ignore, null)
          ->setPreference($pref_timezone, $timezone)
          ->save();

        $viewer->clearCacheData(
          PhabricatorUserPreferencesCacheType::KEY_PREFERENCES);
      }
    }

    $server_offset = $viewer->getTimeZoneOffset();

    if ($client_offset == $server_offset) {
      return $this->newDialog()
        ->setTitle(pht('Timezone Calibrated'))
        ->appendParagraph(
          pht(
            'Your browser timezone and profile timezone are now '.
            'in agreement (%s).',
            $this->formatOffset($client_offset)))
        ->appendParagraph($settings_help)
        ->addCancelButton('/', pht('Done'));
    }

    // If we have a guess at the timezone from the client, select it as the
    // default.
    $guess = $request->getStr('guess');
    if (empty($options[$guess])) {
      $guess = 'ignore';
    }

    $current_zone = $viewer->getTimezoneIdentifier();
    $current_zone = phutil_tag('strong', array(), $current_zone);

    $form = id(new AphrontFormView())
      ->appendChild(
        id(new AphrontFormMarkupControl())
          ->setLabel(pht('Current Setting'))
          ->setValue($current_zone))
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setName('timezone')
          ->setLabel(pht('New Setting'))
          ->setOptions($options)
          ->setValue($guess));

    return $this->newDialog()
      ->setTitle(pht('Adjust Timezone'))
      ->setWidth(AphrontDialogView::WIDTH_FORM)
      ->appendParagraph(
        pht(
          'Your browser timezone (%s) differs from your profile timezone '.
          '(%s). You can ignore this conflict or adjust your profile setting '.
          'to match your client.',
          $this->formatOffset($client_offset),
          $this->formatOffset($server_offset)))
      ->appendForm($form)
      ->addCancelButton(pht('Cancel'))
      ->addSubmitButton(pht('Change Timezone'));
  }

||||||||  public function handleRequest(AphrontRequest $request) {
    $viewer = $this->getViewer();

    $client_offset = $request->getURIData('offset');
    $client_offset = (int)$client_offset;

    $timezones = DateTimeZone::listIdentifiers();
    $now = new DateTime('@'.PhabricatorTime::getNow());

    $options = array(
      'ignore' => pht('Ignore Conflict'),
    );

    foreach ($timezones as $identifier) {
      $zone = new DateTimeZone($identifier);
      $offset = -($zone->getOffset($now) / 60);
      if ($offset == $client_offset) {
        $options[$identifier] = $identifier;
      }
    }

    $settings_help = pht(
      'You can change your date and time preferences in Settings.');

    if ($request->isFormPost()) {
      $timezone = $request->getStr('timezone');

      $pref_ignore = PhabricatorTimezoneIgnoreOffsetSetting::SETTINGKEY;
      $pref_timezone = PhabricatorTimezoneSetting::SETTINGKEY;

      $preferences = $viewer->loadPreferences();

      if ($timezone == 'ignore') {
        $preferences
          ->setPreference($pref_ignore, $client_offset)
          ->save();

        return $this->newDialog()
          ->setTitle(pht('Conflict Ignored'))
          ->appendParagraph(
            pht(
              'The conflict between your browser and profile timezone '.
              'settings will be ignored.'))
          ->appendParagraph($settings_help)
          ->addCancelButton('/', pht('Done'));
      }

      if (isset($options[$timezone])) {
        $preferences
          ->setPreference($pref_ignore, null)
          ->setPreference($pref_timezone, $timezone)
          ->save();

        $viewer->clearUserSettingCache();
      }
    }

    $server_offset = $viewer->getTimeZoneOffset();

    if ($client_offset == $server_offset) {
      return $this->newDialog()
        ->setTitle(pht('Timezone Calibrated'))
        ->appendParagraph(
          pht(
            'Your browser timezone and profile timezone are now '.
            'in agreement (%s).',
            $this->formatOffset($client_offset)))
        ->appendParagraph($settings_help)
        ->addCancelButton('/', pht('Done'));
    }

    // If we have a guess at the timezone from the client, select it as the
    // default.
    $guess = $request->getStr('guess');
    if (empty($options[$guess])) {
      $guess = 'ignore';
    }

    $current_zone = $viewer->getTimezoneIdentifier();
    $current_zone = phutil_tag('strong', array(), $current_zone);

    $form = id(new AphrontFormView())
      ->appendChild(
        id(new AphrontFormMarkupControl())
          ->setLabel(pht('Current Setting'))
          ->setValue($current_zone))
      ->appendChild(
        id(new AphrontFormSelectControl())
          ->setName('timezone')
          ->setLabel(pht('New Setting'))
          ->setOptions($options)
          ->setValue($guess));

    return $this->newDialog()
      ->setTitle(pht('Adjust Timezone'))
      ->setWidth(AphrontDialogView::WIDTH_FORM)
      ->appendParagraph(
        pht(
          'Your browser timezone (%s) differs from your profile timezone '.
          '(%s). You can ignore this conflict or adjust your profile setting '.
          'to match your client.',
          $this->formatOffset($client_offset),
          $this->formatOffset($server_offset)))
      ->appendForm($form)
      ->addCancelButton(pht('Cancel'))
      ->addSubmitButton(pht('Change Timezone'));
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (SCALAR))))))
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)))))
                                (
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_CALL
                    (
                        (AST_NEW)))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (SCALAR)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (
                        (AST_VAR)))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (SCALAR))))))
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)))))
                                (
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_CALL
                    (
                        (AST_NEW)))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_NEW)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_CALL
                                    (
                                        (AST_NEW)))
                                (
                                    (SCALAR)))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (
                        (AST_VAR)))
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)))))))