  public function getTitleForFeed() {
    $new = $this->getNewValue();

    switch ($new) {
      case PhabricatorAuditCommitStatusConstants::NONE:
        return pht(
          '%s no longer requires audit.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::NEEDS_AUDIT:
        return pht(
          '%s now requires audit.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::CONCERN_RAISED:
        return pht(
          '%s now has outstanding concerns.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::FULLY_AUDITED:
        return pht(
          'All concerns with %s have now been addressed.',
          $this->renderObject());
    }

    return null;
  }

}||||||||  public function getTitleForFeed() {
    $new = $this->getNewValue();

    switch ($new) {
      case PhabricatorAuditCommitStatusConstants::NONE:
        return pht(
          '%s no longer requires audit.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::NEEDS_AUDIT:
        return pht(
          '%s now requires audit.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::CONCERN_RAISED:
        return pht(
          '%s now has outstanding concerns.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::NEEDS_VERIFICATION:
        return pht(
          '%s now requires verification by auditors.',
          $this->renderObject());
      case PhabricatorAuditCommitStatusConstants::FULLY_AUDITED:
        return pht(
          'All concerns with %s have now been addressed.',
          $this->renderObject());
    }

    return null;
  }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONST)))