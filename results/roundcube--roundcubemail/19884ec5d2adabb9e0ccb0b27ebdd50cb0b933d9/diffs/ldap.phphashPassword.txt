    function hashPassword( $passwordClear, $encodageType )
    {
        $encodageType = strtolower( $encodageType );
        switch( $encodageType ) {
        case 'crypt':
            $cryptedPassword = '{CRYPT}' . crypt($passwordClear, $this->randomSalt(2));
            break;

        case 'ext_des':
            // extended des crypt. see OpenBSD crypt man page.
            if ( ! defined( 'CRYPT_EXT_DES' ) || CRYPT_EXT_DES == 0 ) {
                // Your system crypt library does not support extended DES encryption.
                return FALSE;
            }
            $cryptedPassword = '{CRYPT}' . crypt( $passwordClear, '_' . $this->randomSalt(8) );
            break;

        case 'md5crypt':
            if( ! defined( 'CRYPT_MD5' ) || CRYPT_MD5 == 0 ) {
                // Your system crypt library does not support md5crypt encryption.
                return FALSE;
            }
            $cryptedPassword = '{CRYPT}' . crypt( $passwordClear , '$1$' . $this->randomSalt(9) );
            break;

        case 'blowfish':
            if( ! defined( 'CRYPT_BLOWFISH' ) || CRYPT_BLOWFISH == 0 ) {
                // Your system crypt library does not support blowfish encryption.
                return FALSE;
            }
            // hardcoded to second blowfish version and set number of rounds
            $cryptedPassword = '{CRYPT}' . crypt( $passwordClear , '$2a$12$' . $this->randomSalt(13) );
            break;

        case 'md5':
            $cryptedPassword = '{MD5}' . base64_encode( pack( 'H*' , md5( $passwordClear) ) );
            break;

        case 'sha':
            if( function_exists('sha1') ) {
                // use php 4.3.0+ sha1 function, if it is available.
                $cryptedPassword = '{SHA}' . base64_encode( pack( 'H*' , sha1( $passwordClear) ) );
            } elseif( function_exists( 'mhash' ) ) {
                $cryptedPassword = '{SHA}' . base64_encode( mhash( MHASH_SHA1, $passwordClear) );
            } else {
                return FALSE; //Your PHP install does not have the mhash() function. Cannot do SHA hashes.
            }
            break;

        case 'ssha':
            if( function_exists( 'mhash' ) && function_exists( 'mhash_keygen_s2k' ) ) {
                mt_srand( (double) microtime() * 1000000 );
                $salt = mhash_keygen_s2k( MHASH_SHA1, $passwordClear, substr( pack( 'h*', md5( mt_rand() ) ), 0, 8 ), 4 );
                $cryptedPassword = '{SSHA}'.base64_encode( mhash( MHASH_SHA1, $passwordClear.$salt ).$salt );
            } else {
                return FALSE; //Your PHP install does not have the mhash() function. Cannot do SHA hashes.
            }
            break;

        case 'smd5':
            if( function_exists( 'mhash' ) && function_exists( 'mhash_keygen_s2k' ) ) {
                mt_srand( (double) microtime() * 1000000 );
                $salt = mhash_keygen_s2k( MHASH_MD5, $passwordClear, substr( pack( 'h*', md5( mt_rand() ) ), 0, 8 ), 4 );
                $cryptedPassword = '{SMD5}'.base64_encode( mhash( MHASH_MD5, $passwordClear.$salt ).$salt );
            } else {
                return FALSE; //Your PHP install does not have the mhash() function. Cannot do SHA hashes.
            }
            break;

        case 'samba':
            if (function_exists('hash')) {
                $cryptedPassword = hash('md4', rcube_charset::convert($passwordClear, RCUBE_CHARSET, 'UTF-16LE'));
                $cryptedPassword = strtoupper($cryptedPassword);
            } else {
                /* Your PHP install does not have the hash() function */
                return false;
            }
            break;

        case 'ad':
            $cryptedPassword = rcube_charset::convert('"' . $passwordClear . '"', RCUBE_CHARSET, 'UTF-16LE');
            break;

        case 'clear':
        default:
            $cryptedPassword = $passwordClear;
        }

        return $cryptedPassword;
    }

    /**
     * Code originaly from the phpLDAPadmin development team
     * http://phpldapadmin.sourceforge.net/
     *
     * Used to generate a random salt for crypt-style passwords. Salt strings are used
     * to make pre-built hash cracking dictionaries difficult to use as the hash algorithm uses
     * not only the user's password but also a randomly generated string. The string is
     * stored as the first N characters of the hash for reference of hashing algorithms later.
     *
     * --- added 20021125 by bayu irawan <bayuir@divnet.telkom.co.id> ---
     * --- ammended 20030625 by S C Rigler <srigler@houston.rr.com> ---
     *
     * @param int $length The length of the salt string to generate.
     * @return string The generated salt string.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR)))
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR)))
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR)))
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR))))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))))))))))
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)
                                                        (AST_VAR)))))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_CAST
                                                (AST_CALL))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_CONST)
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_CALL)))))
                                                    (SCALAR)
                                                    (SCALAR)))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CONST)
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (AST_VAR))))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_CAST
                                                (AST_CALL))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_CONST)
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_CALL)))))
                                                    (SCALAR)
                                                    (SCALAR)))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CONST)
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))))
                                                    (AST_VAR))))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CONST)
                                                    (SCALAR))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CONST)
                                (SCALAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||