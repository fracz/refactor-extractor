    public function db_read($key)
    {
        $sql_result = $this->db->query(
            "SELECT `vars`, `ip`, `changed`, " . $this->db->now() . " AS ts"
            . " FROM {$this->table_name} WHERE `sess_id` = ?", $key);

        if ($sql_result && ($sql_arr = $this->db->fetch_assoc($sql_result))) {
            $this->time_diff = time() - strtotime($sql_arr['ts']);
            $this->changed   = strtotime($sql_arr['changed']);
            $this->ip        = $sql_arr['ip'];
            $this->vars      = base64_decode($sql_arr['vars']);
            $this->key       = $key;

            return !empty($this->vars) ? (string) $this->vars : '';
        }

        return null;
    }


    /**
     * Save session data.
     * handler for session_read()
     *
     * @param string Session ID
     * @param string Serialized session vars
     *
     * @return boolean True on success
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))||||||||