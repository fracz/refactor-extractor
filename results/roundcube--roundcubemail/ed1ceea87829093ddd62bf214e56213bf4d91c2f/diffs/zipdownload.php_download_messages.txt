    private function _download_messages($messageset)
    {
        $rcmail    = rcmail::get_instance();
        $imap      = $rcmail->get_storage();
        $temp_dir  = $rcmail->config->get('temp_dir');
        $tmpfname  = tempnam($temp_dir, 'zipdownload');
        $tempfiles = array($tmpfname);
        $folders   = count($messageset) > 1;

        // open zip file
        $zip = new ZipArchive();
        $zip->open($tmpfname, ZIPARCHIVE::OVERWRITE);

        foreach ($messageset as $mbox => $uids){
            $imap->set_folder($mbox);
            $path = $folders ? str_replace($imap->get_hierarchy_delimiter(), '/', $mbox) . '/' : '';

            foreach ($uids as $uid){
                $headers = $imap->get_message_headers($uid);
                $subject = rcube_mime::decode_mime_string((string)$headers->subject);
                $subject = $this->_convert_filename($subject);
                $subject = substr($subject, 0, 16);

                $disp_name = ($subject ? $subject : 'message_rfc822') . ".eml";
                $disp_name = $path . $uid . "_" . $disp_name;

                $tmpfn = tempnam($temp_dir, 'zipmessage');
                $tmpfp = fopen($tmpfn, 'w');
                $imap->get_raw_body($uid, $tmpfp);
                $tempfiles[] = $tmpfn;
                fclose($tmpfp);
                $zip->addFile($tmpfn, $disp_name);
            }
        }

        $zip->close();

        $filename = $folders ? 'messages' : $imap->get_folder();
        $this->_deliver_zipfile($tmpfname, $filename . '.zip');

        // delete temporary files from disk
        foreach ($tempfiles as $tmpfn) {
            unlink($tmpfn);
        }

        exit;
    }

    /**
     * Helper method to send the zip archive to the browser
     */
||||||||    private function _download_messages($messageset)
    {
        $rcmail    = rcmail::get_instance();
        $imap      = $rcmail->get_storage();
        $mode      = rcube_utils::get_input_value('_mode', rcube_utils::INPUT_POST);
        $temp_dir  = $rcmail->config->get('temp_dir');
        $tmpfname  = tempnam($temp_dir, 'zipdownload');
        $tempfiles = array($tmpfname);
        $folders   = count($messageset) > 1;

        // @TODO: file size limit

        // open zip file
        $zip = new ZipArchive();
        $zip->open($tmpfname, ZIPARCHIVE::OVERWRITE);

        if ($mode == 'mbox') {
            $tmpfp = fopen($tmpfname . '.mbox', 'w');
        }

        foreach ($messageset as $mbox => $uids) {
            $imap->set_folder($mbox);
            $path = $folders ? str_replace($imap->get_hierarchy_delimiter(), '/', $mbox) . '/' : '';

            foreach ($uids as $uid) {
                $headers = $imap->get_message_headers($uid);

                if ($mode == 'mbox') {
                    $from = rcube_mime::decode_address_list($headers->from, null, true, $headers->charset, true);
                    $from = array_shift($from);

                    // Mbox format header
                    // @FIXME: \r\n or \n
                    // @FIXME: date format
                    $header = sprintf("From %s %s\r\n",
                        // replace spaces with hyphens
                        $from ? preg_replace('/\s/', '-', $from) : 'MAILER-DAEMON',
                        // internaldate
                        $headers->internaldate
                    );

                    fwrite($tmpfp, $header);

                    // Use stream filter to quote "From " in the message body
                    stream_filter_register('mbox_filter', 'zipdownload_mbox_filter');
                    $filter = stream_filter_append($tmpfp, 'mbox_filter');
                    $imap->get_raw_body($uid, $tmpfp);
                    stream_filter_remove($filter);
                    fwrite($tmpfp, "\r\n");
                }
                else { // maildir
                    $subject = rcube_mime::decode_mime_string((string)$headers->subject);
                    $subject = $this->_convert_filename($subject);
                    $subject = substr($subject, 0, 16);

                    $disp_name = ($subject ? $subject : 'message_rfc822') . ".eml";
                    $disp_name = $path . $uid . "_" . $disp_name;

                    $tmpfn = tempnam($temp_dir, 'zipmessage');
                    $tmpfp = fopen($tmpfn, 'w');
                    $imap->get_raw_body($uid, $tmpfp);
                    $tempfiles[] = $tmpfn;
                    fclose($tmpfp);
                    $zip->addFile($tmpfn, $disp_name);
                }
            }
        }

        $filename = $folders ? 'messages' : $imap->get_folder();

        if ($mode == 'mbox') {
            $tempfiles[] = $tmpfname . '.mbox';
            fclose($tmpfp);
            $zip->addFile($tmpfname . '.mbox', $filename . '.mbox');
        }

        $zip->close();

        $this->_deliver_zipfile($tmpfname, $filename . '.zip');

        // delete temporary files from disk
        foreach ($tempfiles as $tmpfn) {
            unlink($tmpfn);
        }

        exit;
    }

    /**
     * Helper method to send the zip archive to the browser
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))
                    (SCALAR)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_CAST
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_EXIT
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))
                    (SCALAR)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST)
                                            (AST_CONST)
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CONDITIONAL
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (SCALAR))
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_CAST
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CONDITIONAL
                                            (AST_VAR)
                                            (AST_VAR)
                                            (SCALAR))
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_EXIT
        (NULL)))