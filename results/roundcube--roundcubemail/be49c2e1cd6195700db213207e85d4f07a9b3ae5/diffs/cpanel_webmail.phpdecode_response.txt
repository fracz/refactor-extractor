    public static function decode_response($response)
    {
        if (!$response) {
            return PASSWORD_CONNECT_ERROR;
        }

        // $result should be `null` or `stdClass` object
        $result = json_decode($response, !JSON_OBJECT_AS_ARRAY);

        // The UAPI may return HTML instead of JSON on missing authentication
        if (is_object($result) && $result->status === 1) {
            return PASSWORD_SUCCESS;
        }

        $errors = $result->errors;
        if (is_array($errors) && count($errors) > 0) {
            return array(
                'code'    => PASSWORD_ERROR,
                'message' => $errors[0],
            );
        }

        return PASSWORD_ERROR;
    }

    /**
     * Post data to the given URL using basic authentication.
     *
     * Example:
     *
     * <code>
     * curl_auth_post('john:Secr3t', 'https://example.org', array(
     *     'param' => 'value',
     *     'param' => 'value'
     * ));
     * </code>
     *
     * @param string $userpwd  user name and password separated by a colon
     *                         <code>:</code>
     * @param string $url      the URL to post data to
     * @param array  $postdata the data to post
     *
     * @return string the body of the reply
     * @throws Exception
     */
||||||||    public static function decode_response($response)
    {
        if (!$response) {
            return PASSWORD_CONNECT_ERROR;
        }

        // $result should be `null` or `stdClass` object
        $result = json_decode($response);

        // The UAPI may return HTML instead of JSON on missing authentication
        if ($result && $result->status === 1) {
            return PASSWORD_SUCCESS;
        }

        if ($result && is_array($result->errors) && count($result->errors) > 0) {
            return array(
                'code'    => PASSWORD_ERROR,
                'message' => $result->errors[0],
            );
        }

        return PASSWORD_ERROR;
    }

    /**
     * Post data to the given URL using basic authentication.
     *
     * Example:
     *
     * <code>
     * curl_auth_post('john:Secr3t', 'https://example.org', array(
     *     'param' => 'value',
     *     'param' => 'value'
     * ));
     * </code>
     *
     * @param string $userpwd  user name and password separated by a colon
     *                         <code>:</code>
     * @param string $url      the URL to post data to
     * @param array  $postdata the data to post
     *
     * @return string|false The body of the reply, False on error
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CONST)))