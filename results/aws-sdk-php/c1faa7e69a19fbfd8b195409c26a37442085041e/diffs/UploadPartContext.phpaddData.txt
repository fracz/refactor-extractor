    public function addData($data)
    {
        $size = strlen($data);

        if ($this->size + $size > $this->maxSize) {
            throw new LogicException('You cannot add data that will exceed the maximum size of this upload.');
        }

        try {
            $this->treeHash->addData($data);
            $this->chunkHash->addData($data);
            $this->size += $size;
        } catch (LogicException $e) {
            throw new LogicException('You cannot add data to a finalized UploadPartContext.', 0, $e);
        }

        return $this;
    }

    /**
     * Finalizes the context by calculating the final hashes and generates an upload part object
     *
     * @return UploadPart
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_ASSIGN_OP
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))||||||||