    protected function getCommandForPart(UploadPart $part, $useSourceCopy = false)
    {
        // Setup the command with identifying parameters (accountId, vaultName, and uploadId)
        /** @var $command OperationCommand */
        $command = $this->client->getCommand('UploadMultipartPart', $this->state->getUploadId()->toParams());
        $command->set(Ua::OPTION, Ua::MULTIPART_UPLOAD);

        // Get the correct source
        $source = $this->source;
        if ($useSourceCopy) {
            $sourceUri = $this->source->getUri();
            $source = new EntityBody(fopen($sourceUri, 'r'));
        }

        // Add the range, checksum, and the body limited by the range
        $command->set('range', $part->getFormattedRange());
        $command->set('checksum', $part->getChecksum());
        $command->set('ContentSHA256', $part->getContentHash());
        $command->set('body', new ReadLimitEntityBody($source, $part->getSize(), $part->getOffset()));

        return $command;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_NEW
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||