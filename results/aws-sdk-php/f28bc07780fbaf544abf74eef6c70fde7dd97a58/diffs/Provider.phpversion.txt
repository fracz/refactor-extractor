||||||||    public static function version()
    {
        return function ($version, $service, $region) {
            switch ($version) {
                case 'v4':
                    return $service === 's3'
                        ? new S3SignatureV4($service, $region)
                        : new SignatureV4($service, $region);
                case 's3':
                    return new S3Signature();
                case 'v2':
                    return new SignatureV2();
                case 'anonymous':
                    return new AnonymousSignature();
            }

            throw new \InvalidArgumentException("Unknown signature version: $version");
        };
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_SWITCH
                    (AST_VAR)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_CONDITIONAL
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_NEW))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_NEW))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_NEW))))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)))))))))