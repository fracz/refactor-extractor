||||||||    public function onPrepare(PrepareEvent $event)
    {
        $command = $event->getCommand();

        if (!isset($this->commands[$command->getName()])) {
            return;
        }

        // Get the interesting parameters
        $source = $command[$this->sourceParameter];
        $body = $command[$this->bodyParameter];

        // If a file path is passed in then get the file handle
        if (is_string($source) && file_exists($source)) {
            $body = fopen($source, 'r');
        }

        if ($body === null) {
            throw new \InvalidArgumentException("You must specify a "
                . "non-null value for the {$this->bodyParameter} or "
                . $this->sourceParameter . " parameters.");
        }

        // Prepare the body parameter and remove the source file parameter
        unset($command[$this->sourceParameter]);
        $command[$this->bodyParameter] = Stream\create($body);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))))))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR)))
        (AST_CALL
            (
                (AST_VAR)))))