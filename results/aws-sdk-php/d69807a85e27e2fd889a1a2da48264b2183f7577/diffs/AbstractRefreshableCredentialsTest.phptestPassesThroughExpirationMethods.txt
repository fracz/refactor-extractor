    public function testPassesThroughExpirationMethods()
    {
        $a = new Credentials('a', 'b', 'c', time() + 5000);
        $b = $this->getMockBuilder('Aws\Common\Credentials\AbstractRefreshableCredentials')
            ->setConstructorArgs([$a])
            ->getMockForAbstractClass();
        $this->assertSame($a->isExpired(), $b->isExpired());
        $this->assertSame($a->getExpiration(), $b->getExpiration());
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (AST_CALL)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||