||||||||    public function testLoadsFromDefaultChainIfNeeded()
    {
        $key = getenv(Credentials::ENV_KEY);
        $secret = getenv(Credentials::ENV_SECRET);
        putenv(Credentials::ENV_KEY . '=foo');
        putenv(Credentials::ENV_SECRET . '=bar');
        $c = Credentials::factory();
        $this->assertInstanceOf('Aws\Common\Credentials\CredentialsInterface', $c);
        $this->assertEquals('foo', $c->getAccessKeyId());
        $this->assertEquals('bar', $c->getSecretKey());
        putenv(Credentials::ENV_KEY . "=$key");
        putenv(Credentials::ENV_SECRET . "=$secret");
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR))))))