    public function testRefreshesCredentials()
    {
        $t = time() - 1000;
        $t2 = time() + 1000;
        $c = $this->getTestCreds(
            $this->getCredentialArray('foo', 'baz', null, "@{$t}"),
            'foo',
            new Response(200, [], Stream::factory(json_encode(
                $this->getCredentialArray('abc', '123', null, '@' . $t2)
            )))
        );
        $this->assertEquals('abc', $c->getAccessKeyId());
        $this->assertEquals('123', $c->getSecretKey());
        $this->assertEquals($t2, $c->getExpiration());
    }

    /**
     * @expectedException \RuntimeException
     * @expectedExceptionMessage Error retrieving credentials from the instance
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CONST)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR))))
                (SCALAR)
                (AST_NEW
                    (
                        (SCALAR)
                        (AST_ARRAY)
                        (AST_STATIC_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_CONST)
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR)))))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||