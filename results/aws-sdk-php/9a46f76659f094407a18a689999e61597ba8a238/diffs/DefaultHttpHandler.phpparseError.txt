    private function parseError($reason, CommandInterface $command, $uri)
    {
        if (!$reason instanceof RequestException) {
            // A non Muzzle exception.
            if ($reason instanceof \Exception) {
                return $reason;
            }
            // An unexpected rejection reason.
            return new \RuntimeException(
                sprintf(
                    'Error executing %s on "%s"; %s',
                    $command->getName(),
                    $uri,
                    $reason
                )
            );
        }

        $serviceError = $reason->getMessage();
        if (!($response = $reason->getResponse())) {
            $parts = [];
        } else {
            $errorParser = $this->errorParser;
            $parts = $errorParser($response);
            $serviceError = $parts['code'] . '(' . $parts['type'] . '): '
                . $parts['message'] . ' (' . $serviceError . ') - '
                . $response->getBody();
        }

        $msg = sprintf(
            'Error executing %s on "%s"; %s',
            $command->getName(),
            $uri,
            $serviceError
        );

        return new AwsException($msg, $command, null, $response, $parts);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_CONST)
                (AST_VAR)
                (AST_VAR)))))||||||||