    public function __invoke(CommandInterface $command)
    {
        $serializer = $this->serializer;
        $options = $serializer($command);
        // Extract the request and response into an array.
        $ctx = [];
        $options['last_middleware'][] = $this->createHttpExtractor($ctx);
        // Get the method and uri and remove them from the array.
        $method = $options['method'];
        $uri = $options['uri'];
        unset($options['method'], $options['uri']);
        // Merge the serialization options on top of the command options.
        $options = $command->getRequestOptions() + $options;
        // Send the request with the using the request options.
        $promise = $this->client->request($method, $uri, $options);

        // Return a promise that parses the response into a result or error.
        return $promise->then(
            function (ResponseInterface $response) use ($command, $uri, &$ctx) {
                return $this->parseResponse($command, $response, $uri, $ctx);
            },
            function ($reason) use ($command, $uri) {
                throw $this->parseError($reason, $command, $uri);
            }
        );
    }

    /**
     * Creates a function that extracts the request of a transaction into the
     * given context array by reference.
     *
     * @param array $ctx
     *
     * @return callable
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_THROW
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))))))||||||||