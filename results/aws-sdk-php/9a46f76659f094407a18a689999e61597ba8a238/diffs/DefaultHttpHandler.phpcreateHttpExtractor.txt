    private function createHttpExtractor(array &$ctx)
    {
        return function (callable $handler) use (&$ctx) {
            return function (
                RequestInterface $request,
                array $options
            ) use ($handler, &$ctx) {
                $ctx['request'] = $request;
                return $handler($request, $options);
            };
        };
    }

    /**
     * @param CommandInterface  $command
     * @param ResponseInterface $response
     * @param string            $uri
     *
     * @return ResultInterface
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CLOSURE
            (PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR))
            (
                (AST_RETURN
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))))||||||||