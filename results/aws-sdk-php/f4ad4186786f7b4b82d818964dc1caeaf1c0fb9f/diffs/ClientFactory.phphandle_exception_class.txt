    private function handle_exception_class($value, array &$args)
    {
        if ($value !== true) {
            // An explicitly provided exception must be found.
            if (!class_exists($value)) {
                throw new \RuntimeException("Exception not found: $value");
            }
            return;
        }

        $value = "Aws\\Service\\{$args['class_name']}\\{$args['class_name']}Exception";
        // If the dynamically created exception cannot be found, then use the
        // default exception class.
        if (!class_exists($value)) {
            $value = 'Aws\Exception\AwsException';
        }

        $args['exception_class'] = $value;
    }

||||||||    private function handle_exception_class($value, array &$args)
    {
        if ($value !== true) {
            // An explicitly provided exception must be found.
            if (class_exists($value)) {
                return;
            }
            throw new \InvalidArgumentException("Exception not found when "
                . "evaluating the exception_class argument: $value");
        }

        $value = "Aws\\Service\\{$args['class_name']}\\{$args['class_name']}Exception";
        // If the dynamically created exception cannot be found, then use the
        // default exception class.
        if (!class_exists($value)) {
            $value = 'Aws\Exception\AwsException';
        }

        $args['exception_class'] = $value;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR))))))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (NULL)))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)))