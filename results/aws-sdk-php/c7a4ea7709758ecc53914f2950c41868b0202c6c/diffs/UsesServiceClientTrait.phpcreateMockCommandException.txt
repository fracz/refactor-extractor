    private function createMockCommandException($code)
    {
        return new CommandException(
            'Test error',
            $this->getMock('Aws\AwsClientInterface'),
            $this->getMock('Aws\AwsCommandInterface'),
            null,
            null,
            null,
            ['aws_error' => ['message' => 'Test error', 'code' => $code]]
        );
    }
}||||||||    private function createMockCommandException($code)
    {
        $client = $this->getMockBuilder('Aws\AwsClientInterface')
            ->setMethods(['getApi'])
            ->getMockForAbstractClass();

        $client->expects($this->any())
            ->method('getApi')
            ->will($this->returnValue(
                new Service([
                    'metadata' => [
                        'endpointPrefix' => 'foo'
                    ]
                ])
            ));

        return new CommandException(
            'Test error',
            $client,
            $this->getMock('Aws\AwsCommandInterface'),
            null,
            null,
            null,
            ['aws_error' => ['message' => 'Test error', 'code' => $code]]
        );
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_NEW
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_NEW
            (
                (SCALAR)
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR)))))))