||||||||    public function testCorrectlyReadsLogFiles($responseBody, $recordCount)
    {
        $mock = new Mock([new Response(200, [], Stream\create($responseBody))]);
        $s3Client = S3Client::factory([
            'key'    => 'foo',
            'secret' => 'bar',
        ]);
        $s3Client->getHttpClient()->getEmitter()->attach($mock);
        $reader = new LogFileReader($s3Client);
        $records = $reader->read('test-bucket', 'test-key');
        $this->assertCount($recordCount, $records);
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_ARRAY)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))