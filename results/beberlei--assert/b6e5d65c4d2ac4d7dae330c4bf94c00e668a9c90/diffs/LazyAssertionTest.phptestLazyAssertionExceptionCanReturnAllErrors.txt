||||||||    public function testLazyAssertionExceptionCanReturnAllErrors()
    {
        try {
            \Assert\lazy()
                ->that(10, 'foo')->string()
                ->that(null, 'bar')->notEmpty()
                ->that('string', 'baz')->isArray()
                ->verifyNow();
        } catch (LazyAssertionException $ex) {
            self::assertEquals([
                'Value "10" expected to be string, type integer given.',
                'Value "<NULL>" is empty, but non empty value was expected.',
                'Value "string" is not an array.',
            ], array_map(function (\Exception $ex) {
                return $ex->getMessage();
            }, $ex->getErrorExceptions()));
        }
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_CALL)
                                        (
                                            (SCALAR)
                                            (SCALAR))))
                                (
                                    (AST_CONST)
                                    (SCALAR))))
                        (
                            (SCALAR)
                            (SCALAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_CALL
                                (
                                    (AST_CLOSURE
                                        (PARAM_TYPENO_PARAM_DEFAULT)
                                        (NULL)
                                        (
                                            (AST_RETURN
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))
        (NULL)))