            private function register_styles() {

                //*****************************************************************
                // Redux Admin CSS
                //*****************************************************************
                wp_enqueue_style(
                    'redux-admin-css',
                    ReduxFramework::$_url . 'assets/css/redux-admin.css',
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Redux Fields CSS
                //*****************************************************************
                if ( ! $this->parent->args['dev_mode'] ) {
                    wp_enqueue_style(
                        'redux-fields-css',
                        ReduxFramework::$_url . 'assets/css/redux-fields.css',
                        array(),
                        $this->timestamp,
                        'all'
                    );
                }

                //*****************************************************************
                // Select2 CSS
                //*****************************************************************
                $css_file = 'select2.min.css';
                if ($this->parent->args['dev_mode']) {
                    $css_file = 'select2.css';
                }

                Redux_CDN::register_style(
                    'select2-css',
                    'https://cdnjs.cloudflare.com/ajax/libs/select2/3.5.2/' . $css_file,
                    array(),
                    '3.5.2',//$this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Spectrum CSS
                //*****************************************************************
                $css_file = 'redux-spectrum.min.css';
                if ($this->parent->args['dev_mode']) {
                    $css_file = 'redux-spectrum.css';
                }

                wp_register_style(
                    'redux-spectrum-css',
                    ReduxFramework::$_url . 'assets/css/vendor/spectrum/' . $css_file,
                    array(),
                    '1.3.3',
                    'all'
                );

                //*****************************************************************
                // Elusive Icon CSS
                //*****************************************************************
                wp_enqueue_style(
                    'redux-elusive-icon',
                    ReduxFramework::$_url . 'assets/css/vendor/elusive-icons/elusive-icons.css',
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // QTip CSS
                //*****************************************************************
                $css_file = 'jquery.qtip.min.css';
                if ($this->parent->args['dev_mode']) {
                    $css_file = 'jquery.qtip.css';
                }

                wp_enqueue_style(
                    'qtip-css',
                    ReduxFramework::$_url . 'assets/css/vendor/qtip/' . $css_file,
                    array(),
                    '2.2.0',
                    'all'
                );

                //*****************************************************************
                // JQuery UI CSS
                //*****************************************************************
                wp_enqueue_style(
                    'jquery-ui-css',
                    apply_filters( "redux/page/{$this->parent->args['opt_name']}/enqueue/jquery-ui-css", ReduxFramework::$_url . 'assets/css/vendor/jquery-ui-bootstrap/jquery-ui-1.10.0.custom.css' ),
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Iris CSS
                //*****************************************************************
                wp_enqueue_style( 'wp-color-picker' );

                if ( $this->parent->args['dev_mode'] ) {

                    //*****************************************************************
                    // Color Picker CSS
                    //*****************************************************************
                    wp_register_style(
                        'redux-color-picker-css',
                        ReduxFramework::$_url . 'assets/css/color-picker/color-picker.css',
                        array( 'wp-color-picker' ),
                        $this->timestamp,
                        'all'
                    );

                    //*****************************************************************
                    // Media CSS
                    //*****************************************************************
                    wp_enqueue_style(
                        'redux-field-media-css',
                        ReduxFramework::$_url . 'assets/css/media/media.css',
                        array(),
                        time(),
                        'all'
                    );
                }

                //*****************************************************************
                // RTL CSS
                //*****************************************************************
                if ( is_rtl() ) {
                    wp_enqueue_style(
                        'redux-rtl-css',
                        ReduxFramework::$_url . 'assets/css/rtl.css',
                        array( 'redux-admin-css' ),
                        $this->timestamp,
                        'all'
                    );
                }

            }

||||||||            private function register_styles() {

                //*****************************************************************
                // Redux Admin CSS
                //*****************************************************************
                wp_enqueue_style(
                    'redux-admin-css',
                    ReduxFramework::$_url . 'assets/css/redux-admin.css',
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Redux Fields CSS
                //*****************************************************************
                if ( ! $this->parent->args['dev_mode'] ) {
                    wp_enqueue_style(
                        'redux-fields-css',
                        ReduxFramework::$_url . 'assets/css/redux-fields.css',
                        array(),
                        $this->timestamp,
                        'all'
                    );
                }

                //*****************************************************************
                // Select2 CSS
                //*****************************************************************
                Redux_CDN::register_style(
                    'select2-css',
                    '//cdn.jsdelivr.net/select2/3.5.2/select2.css',
                    array(),
                    '3.5.2',//$this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Spectrum CSS
                //*****************************************************************
                $css_file = 'redux-spectrum.min.css';
                if ($this->parent->args['dev_mode']) {
                    $css_file = 'redux-spectrum.css';
                }

                wp_register_style(
                    'redux-spectrum-css',
                    ReduxFramework::$_url . 'assets/css/vendor/spectrum/' . $css_file,
                    array(),
                    '1.3.3',
                    'all'
                );

                //*****************************************************************
                // Elusive Icon CSS
                //*****************************************************************
                wp_enqueue_style(
                    'redux-elusive-icon',
                    ReduxFramework::$_url . 'assets/css/vendor/elusive-icons/elusive-icons.css',
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // QTip CSS
                //*****************************************************************
                $css_file = 'jquery.qtip.min.css';
                if ($this->parent->args['dev_mode']) {
                    $css_file = 'jquery.qtip.css';
                }

                wp_enqueue_style(
                    'qtip-css',
                    ReduxFramework::$_url . 'assets/css/vendor/qtip/' . $css_file,
                    array(),
                    '2.2.0',
                    'all'
                );

                //*****************************************************************
                // JQuery UI CSS
                //*****************************************************************
                wp_enqueue_style(
                    'jquery-ui-css',
                    apply_filters( "redux/page/{$this->parent->args['opt_name']}/enqueue/jquery-ui-css", ReduxFramework::$_url . 'assets/css/vendor/jquery-ui-bootstrap/jquery-ui-1.10.0.custom.css' ),
                    array(),
                    $this->timestamp,
                    'all'
                );

                //*****************************************************************
                // Iris CSS
                //*****************************************************************
                wp_enqueue_style( 'wp-color-picker' );

                if ( $this->parent->args['dev_mode'] ) {

                    //*****************************************************************
                    // Color Picker CSS
                    //*****************************************************************
                    wp_register_style(
                        'redux-color-picker-css',
                        ReduxFramework::$_url . 'assets/css/color-picker/color-picker.css',
                        array( 'wp-color-picker' ),
                        $this->timestamp,
                        'all'
                    );

                    //*****************************************************************
                    // Media CSS
                    //*****************************************************************
                    wp_enqueue_style(
                        'redux-field-media-css',
                        ReduxFramework::$_url . 'assets/css/media/media.css',
                        array(),
                        time(),
                        'all'
                    );
                }

                //*****************************************************************
                // RTL CSS
                //*****************************************************************
                if ( is_rtl() ) {
                    wp_enqueue_style(
                        'redux-rtl-css',
                        ReduxFramework::$_url . 'assets/css/rtl.css',
                        array( 'redux-admin-css' ),
                        $this->timestamp,
                        'all'
                    );
                }

            }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_VAR))
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_VAR))
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_DIM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY)
                        (AST_CALL)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_VAR))
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_VAR))
            (AST_ARRAY)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_DIM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (AST_ARRAY)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY)
                        (AST_CALL)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL)
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))))