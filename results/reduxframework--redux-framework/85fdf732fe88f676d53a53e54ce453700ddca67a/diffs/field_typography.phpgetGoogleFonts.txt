    function getGoogleFonts($wp_filesystem) {

        /*
                $sid = session_id();
                if($sid) {
                    $googleArray = $_SESSION['googleArray'];
                } else {
                    session_start();
                    $googleArray = array();
                }

                if (empty($_SESSION['googleArray'])) :
                    */



        if( !file_exists( ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json' ) ) {
            $result = wp_remote_get( 'https://www.googleapis.com/webfonts/v1/webfonts?key='.$this->parent->args['google_api_key']);
            if ($result['response']['code'] == 200) {
                $result = json_decode($result['body']);
                foreach ($result->items as $font) {
                    $googleArray[$font->family] = array(
                        'variants' => $this->getVariants($font->variants),
                        'subsets' => $this->getSubsets($font->subsets)
                    );
                }

                if ( !empty( $googleArray ) ) {
                    $wp_filesystem->put_contents(
                        ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json',
                        json_encode($googleArray),
                        FS_CHMOD_FILE // predefined mode settings for WP files
                    );
                }

            }//if
        }//if
        if (empty($googleArray)) {
            $googleArray = json_decode($wp_filesystem->get_contents(ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json' ), true );
        }
        $gfonts = '<optgroup label="'.__('Google Webfonts', 'redux-framework').'">';
        foreach ($googleArray as $i => $face) {
            $gfonts .= '<option data-details="'.urlencode(json_encode($face)).'" data-google="true" value="'.$i.'">'. $i .'</option>';
        }
        $gfonts .= '</optgroup>';
        //endif;
        if (empty($googleArray)) {
            $gfonts = "";
        }

        $wp_filesystem->put_contents(
            ReduxFramework::$_dir.'inc/fields/typography/googlefonts.html',
            $gfonts,
            FS_CHMOD_FILE // predefined mode settings for WP files
        );
    }//function

    /**
     * getGoogleFonts Function.
     *
     * Clean up the Google Webfonts subsets to be human readable
     *
     * @since ReduxFramework 0.2.0
     */
||||||||    function getGoogleFonts($wp_filesystem) {

        if( !file_exists( ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json' ) ) {
            $result = wp_remote_get( 'https://www.googleapis.com/webfonts/v1/webfonts?key='.$this->parent->args['google_api_key']);
            if ($result['response']['code'] == 200) {
                $result = json_decode($result['body']);
                foreach ($result->items as $font) {
                    $googleArray[$font->family] = array(
                        'variants' => $this->getVariants($font->variants),
                        'subsets' => $this->getSubsets($font->subsets)
                    );
                }

                if ( !empty( $googleArray ) ) {
                    $wp_filesystem->put_contents(
                        ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json',
                        json_encode($googleArray),
                        FS_CHMOD_FILE // predefined mode settings for WP files
                    );
                }

            }//if
        }//if

        if (empty($googleArray)) {
            $googleArray = json_decode($wp_filesystem->get_contents(ReduxFramework::$_dir.'inc/fields/typography/googlefonts.json' ), true );
        }

        if (empty($googleArray)) {
          return;
        }
        $gfonts = '<optgroup label="'.__('Google Webfonts', 'redux-framework').'">';
        foreach ($googleArray as $i => $face) {
            $gfonts .= '<option data-details="'.urlencode(json_encode($face)).'" data-google="true" value="'.$i.'">'. $i .'</option>';
        }
        $gfonts .= '</optgroup>';
        //endif;
        if (empty($googleArray)) {
            $gfonts = "";
        }

        $wp_filesystem->put_contents(
            ReduxFramework::$_dir.'inc/fields/typography/googlefonts.html',
            $gfonts,
            FS_CHMOD_FILE // predefined mode settings for WP files
        );
    }//function

    /**
     * getGoogleFonts Function.
     *
     * Clean up the Google Webfonts subsets to be human readable
     *
     * @since ReduxFramework 0.2.0
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_BINARY_OP
                                                    (AST_STATIC_PROP)
                                                    (SCALAR))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (AST_CONST))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (AST_STATIC_PROP)
                                        (SCALAR))))
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_VAR)
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_BINARY_OP
                                                    (AST_STATIC_PROP)
                                                    (SCALAR))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (AST_CONST))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (AST_STATIC_PROP)
                                        (SCALAR))))
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))
            (AST_VAR)
            (AST_CONST))))