	public function __construct() {
		// Default path
		$this->set_redux_path( dirname(__FILE__) . '/../..' );

		// All available projects with their settings
		$this->projects = array(
			'redux' => array(
				'title'    => 'Front-end',
				'file'     => $this->redux_path . 'ReduxCore/languages/redux-framework.pot',
				'excludes' => array( 'sample/.*' ),
				'includes' => array( ),
			),
		);

		// Ignore some strict standards notices caused by extract/extract.php
		error_reporting(E_ALL);

		// Load required files and objects
		require_once 'not-gettexted.php';
		require_once 'pot-ext-meta.php';
		require_once 'extract/extract.php';
		$this->extractor = new StringExtractor( $this->rules );
	}

	/**
	 * Sets the ReduxFramework filesystem directory path
	 *
	 * @param string $path
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_MAGIC_CONST)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY)
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (
            (AST_CONST)))
    (AST_INCLUDE_OR_EVAL
        (SCALAR))
    (AST_INCLUDE_OR_EVAL
        (SCALAR))
    (AST_INCLUDE_OR_EVAL
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))))))||||||||