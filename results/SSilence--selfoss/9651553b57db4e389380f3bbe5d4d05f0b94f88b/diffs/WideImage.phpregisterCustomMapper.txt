		static function registerCustomMapper($mapper_class_name, $mime_type, $extension)
		{
			WideImage_MapperFactory::registerMapper($mapper_class_name, $mime_type, strtoupper($extension));
		}

		/**
		 * Loads an image from a file, URL, HTML input file field, binary string, or a valid image handle.
		 * The image format is auto-detected.
		 *
		 * Currently supported formats: PNG, GIF, JPG, BMP, TGA, GD, GD2.
		 *
		 * This function analyzes the input and decides whether to use WideImage::loadFromHandle(),
		 * WideImage::loadFromFile(), WideImage::loadFromUpload() or WideImage::loadFromString(),
		 * all of which you can also call directly to spare WideImage some guessing.
		 *
		 * Arrays are supported for upload fields; it returns an array of loaded images.
		 * To load only a single image from an array field, use WideImage::loadFromUpload('img', $i),
		 * where $i is the index of the image you want to load.
		 *
		 * <code>
		 * $img = WideImage::load('http://url/image.png'); // image URL
		 * $img = WideImage::load('/path/to/image.png'); // local file path
		 * $img = WideImage::load('img'); // upload field name
		 * $img = WideImage::load(imagecreatetruecolor(10, 10)); // a GD resource
		 * $img = WideImage::load($image_data); // binary string containing image data
		 * </code>
		 *
		 * @param mixed $source File name, url, HTML file input field name, binary string, or a GD image resource
		 * @return WideImage_Image WideImage_PaletteImage or WideImage_TrueColorImage instance
		 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR))))))||||||||