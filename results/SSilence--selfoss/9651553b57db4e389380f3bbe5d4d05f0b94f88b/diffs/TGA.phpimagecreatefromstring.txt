	static function imagecreatefromstring($bin_data)
	{
		$bin_pos = 0;
		$header = substr($bin_data, $bin_pos, 18);
		$bin_pos += 18;
		$header = unpack(	"cimage_id_len/ccolor_map_type/cimage_type/vcolor_map_origin/vcolor_map_len/" .
							"ccolor_map_entry_size/vx_origin/vy_origin/vwidth/vheight/" .
							"cpixel_size/cdescriptor", $header);

		switch ($header['image_type'])
		{
			case 2:		//no palette, uncompressed
			case 10:	//no palette, rle
						break;
			default:	return false; //die('Unsupported TGA format');
		}

		if ($header['pixel_size'] != 24)
		{
			return false;
			//die('Unsupported TGA color depth');
		}

		$bytes = $header['pixel_size'] / 8;

		if ($header['image_id_len'] > 0)
		{
			$header['image_id'] = substr($bin_data, $bin_pos, $header['image_id_len']);
			$bin_pos += $header['image_id_len'];
		}
		else
		{
			$header['image_id'] = '';
		}

		$im = imagecreatetruecolor($header['width'], $header['height']);

		$size = $header['width'] * $header['height'] * 3;

		//-- check whether this is NEW TGA or not
		$pos = $bin_pos;
		$bin_pos = strlen($bin_data) - 26;
		$newtga = substr($bin_data, $bin_pos, 26);
		if (substr($newtga, 8, 16) != 'TRUEVISION-XFILE')
		{
			$newtga = false;
		}

		$bin_pos = strlen($bin_data);
		$datasize = $bin_pos - $pos;
		if ($newtga)
		{
			$datasize -= 26;
		}

		$bin_pos = $pos;

		//-- end of check
		$data = substr($bin_data, $bin_pos, $datasize);
		$bin_pos += $datasize;
		if ($header['image_type'] == 10)
		{
			$data = self::rle_decode($data, $size);
		}
		if (self::bit5($header['descriptor']) == 1)
		{
			$reverse = true;
		}
		else
		{
			$reverse = false;
		}

		$pixels = str_split($data, 3);
		$i = 0;

		//read pixels
		if ($reverse)
		{
		    for ($y=0; $y<$header['height']; $y++)
		    {
		    	for ($x=0; $x<$header['width']; $x++)
		    	{
		    		imagesetpixel($im, $x, $y, self::dwordize($pixels[$i]));
		    		$i++;
		    	}
		    }
	    }
	    else
	    {
	        for ($y=$header['height']-1; $y>=0; $y--)
		    {
		    	for ($x=0; $x<$header['width']; $x++)
		    	{
		    		imagesetpixel($im, $x, $y, self::dwordize($pixels[$i]));
		    		$i++;
		    	}
		    }
	    }

		return $im;
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_SWITCH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_FOR
                    (AST_EXPR_LIST
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR)))
                    (AST_EXPR_LIST
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (AST_EXPR_LIST
                        (AST_POST_INC
                            (AST_VAR)))
                    (
                        (AST_FOR
                            (AST_EXPR_LIST
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_EXPR_LIST
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_EXPR_LIST
                                (AST_POST_INC
                                    (AST_VAR)))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))))
                                (AST_POST_INC
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_FOR
                    (AST_EXPR_LIST
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))
                    (AST_EXPR_LIST
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (AST_EXPR_LIST
                        (AST_POST_DEC
                            (AST_VAR)))
                    (
                        (AST_FOR
                            (AST_EXPR_LIST
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_EXPR_LIST
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_EXPR_LIST
                                (AST_POST_INC
                                    (AST_VAR)))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))))
                                (AST_POST_INC
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||