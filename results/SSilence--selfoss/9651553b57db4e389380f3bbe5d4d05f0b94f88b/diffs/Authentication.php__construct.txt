    public function __construct() {
        // session cookie will be valid for one month
        session_set_cookie_params(time()+(3600*24*30), "/");

        // session will be valid for this day
        @ini_set('session.gc_maxlifetime', time()+(3600*24));

        session_name();
        if(session_id()=="")
            session_start();
        if(isset($_SESSION['loggedin']) && $_SESSION['loggedin']===true)
            $this->loggedin = true;
        $this->enabled = strlen(trim(\F3::get('username')))!=0 && strlen(trim(\F3::get('password')))!=0;

        // autologin if request contains unsername and password
        if( $this->enabled===true
            && $this->loggedin===false
            && isset($_REQUEST['username'])
            && isset($_REQUEST['password'])) {
            $this->login($_REQUEST['username'], $_REQUEST['password']);
        }
    }


    /**
     * login enabled
     *
     * @return bool
     * @param string $username
     * @param string $password
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CALL)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))
            (SCALAR)))
    (AST_UNARY_OP
        (AST_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_CALL)
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))))))
    (AST_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (
                (AST_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (SCALAR))
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST)))
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))))))||||||||