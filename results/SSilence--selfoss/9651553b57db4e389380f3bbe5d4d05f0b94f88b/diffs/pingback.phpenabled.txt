	protected function enabled($url) {
		$web=\Web::instance();
		$req=$web->request($url);
		$found=FALSE;
		if ($req && $req['body']) {
			// Look for pingback header
			foreach ($req['headers'] as $header)
				if (preg_match('/^X-Pingback:\h*(.+)/',$header,$href)) {
					$found=$href[1];
					break;
				}
			if (!$found &&
				// Scan page for pingback link tag
				preg_match('/<link\h+(.+?)\h*\/?>/i',$req['body'],$parts) &&
				preg_match('/rel\h*=\h*"pingback"/i',$parts[1]) &&
				preg_match('/href\h*=\h*"\h*(.+?)\h*"/i',$parts[1],$href))
				$found=$href[1];
		}
		return $found;
	}

	/**
		Load local page contents, parse HTML anchor tags, find permalinks,
		and send XML-RPC calls to corresponding pingback servers
		@return NULL
		@param $source string
	**/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_BREAK
                                        (NULL)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||