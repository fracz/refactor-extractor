		function asPalette($nColors = 255, $dither = null, $matchPalette = true)
		{
			$nColors = intval($nColors);
			if ($nColors < 1)
				$nColors = 1;
			elseif ($nColors > 255)
				$nColors = 255;

			if ($dither === null)
				$dither = $this->isTransparent();

			$temp = $this->copy();
			imagetruecolortopalette($temp->handle, $dither, $nColors);
			if ($matchPalette == true && function_exists('imagecolormatch'))
				imagecolormatch($this->handle, $temp->handle);

			// The code below isn't working properly; it corrupts transparency on some palette->tc->palette conversions.
			// Why is this code here?
			/*
			if ($this->isTransparent())
			{
				$trgb = $this->getTransparentColorRGB();
				$tci = $temp->getClosestColor($trgb);
				$temp->setTransparentColor($tci);
			}
			/**/

			$temp->releaseHandle();
			return new WideImage_PaletteImage($temp->handle);
		}

		/**
		 * Returns the index of the color that best match the given color components
		 *
		 * This method accepts either each component as an integer value,
		 * or an associative array that holds the color's components in keys
		 * 'red', 'green', 'blue', 'alpha'.
		 *
		 * @param mixed $R Red component value or an associative array
		 * @param int $G Green component
		 * @param int $B Blue component
		 * @param int $A Alpha component
		 * @return int The color index
		 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))))))||||||||