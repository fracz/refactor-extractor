	function strstr($stack,$needle,$before=FALSE,$case=FALSE) {
		if (!$needle)
			return FALSE;
		preg_match('/^(.*?)'.preg_quote($needle,'/').'/us'.($case?'i':''),
			$stack,$match);
		return isset($match[1])?
			($before?
				$match[1]:
				$this->substr($stack,$this->strlen($match[1]))):
			FALSE;
	}

	/**
		Return part of a string
		@return string|FALSE
		@param $str string
		@param $start int
		@param $len int
	**/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_CONST))))||||||||