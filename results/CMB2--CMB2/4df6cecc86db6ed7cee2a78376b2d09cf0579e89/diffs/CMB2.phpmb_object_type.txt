	public function mb_object_type() {
		if ( null !== $this->mb_object_type ) {
			return $this->mb_object_type;
		}

		if ( $this->is_options_page_mb() ) {
			$this->mb_object_type = 'options-page';
			return $this->mb_object_type;
		}

		$registered_types = $this->box_types();

		$type = false;

		// if it's an array of one, extract it
		if ( 1 === count( $registered_types ) ) {
			$last = end( $registered_types );
			if ( is_string( $last ) ) {
				$type = $last;
			}
		} elseif ( in_array( $page_type = $this->current_object_type(), $registered_types, true ) ) {
			$type = $page_type;
		}

		// Get our object type
		switch ( $type ) {

			case 'user':
			case 'comment':
			case 'term':
				$this->mb_object_type = $type;
				break;

			default:
				$this->mb_object_type = 'post';
				break;
		}

		return $this->mb_object_type;
	}

	/**
	 * Gets the box 'object_types' array based on box settings.
	 * @since  2.2.3
	 * @return array Object types
	 */
||||||||	public function mb_object_type() {
		if ( null !== $this->mb_object_type ) {
			return $this->mb_object_type;
		}

		if ( $this->is_options_page_mb() ) {
			$this->mb_object_type = 'options-page';
			return $this->mb_object_type;
		}

		$registered_types = $this->box_types();

		$type = false;

		// if it's an array of one, extract it
		if ( 1 === count( $registered_types ) ) {
			$last = end( $registered_types );
			if ( is_string( $last ) ) {
				$type = $last;
			}
		} elseif ( ( $curr_type = $this->current_object_type() ) && in_array( $curr_type, $registered_types, true ) ) {
			$type = $curr_type;
		}

		// Get our object type
		switch ( $type ) {

			case 'user':
			case 'comment':
			case 'term':
				$this->mb_object_type = $type;
				break;

			default:
				$this->mb_object_type = 'post';
				break;
		}

		return $this->mb_object_type;
	}

	/**
	 * Gets the box 'object_types' array based on box settings.
	 * @since  2.2.3
	 * @return array Object types
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_CONST))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))