    protected function ensureBucketExists()
    {
        if (!$this->ensureBucket) {

            $available = $this->service->isBucketAvailable($this->bucket);

            if (!$available && $this->create) {
                $created = $this->service->createBucket($this->bucket);
                if (!$created) {
                    throw new \RuntimeException(sprintf('Could not create the \'%s\' bucket.', $this->bucket));
                }
            } else if (!$available) {
                throw new \RuntimeException(sprintf('The bucket \'%s\' was not found. Please create it on Amazon AWS.', $this->bucket));
            }

            $this->ensureBucket = true;
        }
    }

    /**
     * Computes the path for the specified key taking the bucket in account
     *
     * @param  string $key The key for which to compute the path
     *
     * @return string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR))))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))))))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))))))||||||||