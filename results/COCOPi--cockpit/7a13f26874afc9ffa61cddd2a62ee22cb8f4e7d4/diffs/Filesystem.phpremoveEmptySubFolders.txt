    public function removeEmptySubFolders($dir, $selfremove = false) {

        if ($path = $this->app->path($dir)) {

            $empty = true;

            foreach (glob($path.DIRECTORY_SEPARATOR."*") as $file) {
                $empty &= is_dir($file) && $this->removeEmptySubFolders($file, true);
            }

            return $empty && ($selfremove ? @rmdir($path) : true);
        }

        return false;
    }
}


if(!function_exists('fnmatch')) {
    function fnmatch($pattern, $string){
        return preg_match("#^".strtr(preg_quote($pattern, '#'), array('\*' => '.*', '\?' => '.'))."$#i", $string);
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_FOREACH
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (SCALAR))))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_CONST)))))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_CONST)))||||||||