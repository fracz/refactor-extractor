||||||||  public function __construct($action, $post = array())
  {
		if (empty($action))
		{
			throw new Exception("No action specified", "no_action_specified");
			return;
		}

    $this->action = $action;
    $post = Utils::cleanHash($post);

		switch ($this->action)
		{
			case "loadConfiguration":
        $assertions = array(
          "logged_in" => true,
          "post" => array(
            "required" => "form_id",
            "numeric"  => "form_id"
          )
        );
        Utils::assert($assertions);
        $this->response = Core::$user->loadConfiguration($post["form_id"]);
				break;

/*
        if (empty(Core::$user))
        {
					throw new Exception("Not logged in", "not_logged_in");
					return;
        }
        if (!isset($post["form_id"]) || empty($post["form_id"]))
        {
					throw new Exception("Not logged in", "not_logged_in");
					return;
        }
        if (!is_numeric($post["form_id"]))
        {
					throw new Exception("Invalid form ID.", "");
					return;
        }
*/

			case "saveConfiguration":
//				$account_id   = $_SESSION["account_id"];
//				$form_name    = addslashes($request["form_name"]);
//				$form_content = addslashes($request["form_content"]);
				//gd_save_form($account_id, $form_name, $form_content);

				$this->response = Core::$user->saveConfiguration($post["form_id"]);
				break;

			case "deleteConfiguration":
		    $form_id = $request["form_id"];
		    gd_delete_form($form_id);
		    $this->response = Core::$user->saveConfiguration($post["form_id"]);
		    break;

			case "install":

				// first, test the DB information
		    list($success, $error) = gd_test_db_settings($request);
		    if (!$success)
		    {
		    	echo "{ \"success\": 0, \"error\": \"$error\" }";
		    	exit;
		    }

		    // second, populate the database with the Core + any modules

		    // third, create the settings.php file
				break;

			case "login":
				break;

			case "logout":
				break;
		}
  }
}
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR))))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_VAR))
                            (
                                (AST_ECHO
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_EXIT
                                    (NULL)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_BREAK
                        (NULL)))))))