    function yylex1()
    {
        $tokenMap = array (
              1 => 0,
              2 => 0,
              3 => 0,
              4 => 0,
              5 => 0,
              6 => 0,
              7 => 0,
              8 => 0,
            );
        if ($this->counter >= ($this->mbstring_overload ? mb_strlen($this->data,'latin1'): strlen($this->data))) {
            return false; // end of input
        }
        $yy_global_pattern = "/\G(#|;)|\G(\\[)|\G(\\])|\G(=)|\G([ \t\r]+)|\G(\n)|\G([0-9]*[a-zA-Z_]\\w*)|\G([\S\s])/iS";

        do {
            if ($this->mbstring_overload ? preg_match($yy_global_pattern, mb_substr($this->data, $this->counter,2000000000,'latin1'), $yymatches) : preg_match($yy_global_pattern,$this->data, $yymatches, null, $this->counter)) {
                $yysubmatches = $yymatches;
                $yymatches = array_filter($yymatches, 'strlen'); // remove empty sub-patterns
                if (!count($yymatches)) {
                    throw new Exception('Error: lexing failed because a rule matched' .
                        ' an empty string.  Input "' . substr($this->data,
                        $this->counter, 5) . '... state START');
                }
                next($yymatches); // skip global match
                $this->token = key($yymatches); // token number
                if ($tokenMap[$this->token]) {
                    // extract sub-patterns for passing to lex function
                    $yysubmatches = array_slice($yysubmatches, $this->token + 1,
                        $tokenMap[$this->token]);
                } else {
                    $yysubmatches = array();
                }
                $this->value = current($yymatches); // token value
                $r = $this->{'yy_r1_' . $this->token}($yysubmatches);
                if ($r === null) {
                    $this->counter += ($this->mbstring_overload ? mb_strlen($this->value,'latin1'): strlen($this->value));
                    $this->line += substr_count($this->value, "\n");
                    // accept this token
                    return true;
                } elseif ($r === true) {
                    // we have changed state
                    // process this token in the new state
                    return $this->yylex();
                } elseif ($r === false) {
                    $this->counter += ($this->mbstring_overload ? mb_strlen($this->value,'latin1'): strlen($this->value));
                    $this->line += substr_count($this->value, "\n");
                    if ($this->counter >= ($this->mbstring_overload ? mb_strlen($this->data,'latin1'): strlen($this->data))) {
                        return false; // end of input
                    }
                    // skip this token
                    continue;
                }            } else {
                throw new Exception('Unexpected input at line' . $this->line .
                    ': ' . $this->data[$this->counter]);
            }
            break;
        } while (true);

    } // end function


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONDITIONAL
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_DO_WHILE
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (AST_CONST)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_CALL
                                                            (
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (SCALAR))))
                                                    (SCALAR))))))))
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR))))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY)))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONDITIONAL
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))))
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (AST_RETURN
                                        (AST_CONST))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_RETURN
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONDITIONAL
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))))
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONDITIONAL
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)))
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))))))
                                            (
                                                (AST_RETURN
                                                    (AST_CONST)))))
                                    (AST_CONTINUE
                                        (NULL)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_PROP
                                                (AST_VAR))))))))))
            (AST_BREAK
                (NULL)))
        (AST_CONST)))||||||||