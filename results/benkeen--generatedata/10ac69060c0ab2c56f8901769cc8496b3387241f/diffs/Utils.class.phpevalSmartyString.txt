	function evalSmartyString($placeholderStr, $placeholders)
	{
	  global $g_smarty;

	  $smarty = new Smarty();
	  $smarty->template_dir = realpath(dirname(__FILE__) . "/../code/smarty");
	  $smarty->compile_dir  = realpath(dirname(__FILE__) . "/../cache");

	  $smarty->assign("eval_str", $placeholderStr);
	  if (!empty($placeholders))
	  {
	    while (list($key, $value) = each($placeholders))
	      $smarty->assign($key, $value);
	  }

	  return $smarty->fetch("eval.tpl");
	}

	/**
	 * Converts the following characters in the string and returns it:
	 *
	 *     C, c, A - any consonant (Upper case, lower case, any)
	 *     V, v, B - any vowel (Upper case, lower case, any)
	 *     L, l, V - any letter (Upper case, lower case, any)
	 *     X       - 1-9
	 *     x       - 0-9
	 *     H       - 0-F
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))))||||||||