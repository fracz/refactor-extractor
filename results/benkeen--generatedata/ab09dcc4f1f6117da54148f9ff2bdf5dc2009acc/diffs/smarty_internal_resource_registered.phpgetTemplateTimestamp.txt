||||||||    public function getTemplateTimestamp(Smarty_Template_Source $source)
    {
        // return timestamp
        $time_stamp = false;
        call_user_func_array($source->smarty->registered_resources[$source->type][0][1], array($source->name, &$time_stamp, $source->smarty));
        return is_numeric($time_stamp) ? (int) $time_stamp : $time_stamp;
    }

    /**
     * Load template's source by invoking the registered callback into current template object
     *
     * @param Smarty_Template_Source $source source object
     * @return string template source
     * @throws SmartyException if source cannot be loaded
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_CALL
        (
            (AST_DIM
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (NULL)))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CAST
                (AST_VAR))
            (AST_VAR))))