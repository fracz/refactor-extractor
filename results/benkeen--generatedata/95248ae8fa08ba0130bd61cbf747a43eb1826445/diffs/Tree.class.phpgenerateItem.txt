||||||||  public function generateItem($row, $options, $existingRowData) {
	  global $Tree_open_nodes, $L;

	  $ai_row_num = $options["ai_row_num"];

	  if (!isset($existing_row_data["order{$ai_row_num}"]["random_data"]))
	    return $L["Tree_invalid_parent"];

	  $parent_row_id = $existing_row_data["order{$ai_row_num}"]["random_data"];

	  if ($row == 1)
	  {
	    $Tree_open_nodes[] = array($parent_row_id, 1);
		  return "0";
	  }

	  // randomly pick an open (non-full) node
	  $rand_index = rand(0, count($Tree_open_nodes)-1);
	  $rand_row   = $Tree_open_nodes[$rand_index];
	  $parent_row = $rand_row[0];

	  // increment this node. If it's full, remove it from the array
	  $Tree_open_nodes[$rand_index][1]++;
	  if ($Tree_open_nodes[$rand_index][1] > $options["max_siblings"])
	    array_splice($Tree_open_nodes, $rand_index, 1);

	  // finally, add the new index
	  $Tree_open_nodes[] = array($parent_row_id, 1);

	  return $parent_row;
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))))
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_POST_INC
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_RETURN
        (AST_VAR)))