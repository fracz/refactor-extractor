||||||||	public function getExportTypeJSResources($exportTypes) {
		$files = array();
		foreach ($exportTypes as $exportType) {
			$jsModules = $exportType->getJSModules();
			$path      = $exportType->getPath();
			for ($i=0; $i<count($jsModules); $i++) {
				$files[] = "$path/{$jsModules[$i]}";
			}
		}

		$exportTypeJSModules = "";
		if (!empty($files)) {
			$exportTypeJSModules = "\"" . implode("\",\n\"", $files) . "\"";
		}

		return $exportTypeJSModules;
	}

	/**
	 * Used in the main page to generate the tabset of additional settings for each Export Type.
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_FOR
                (AST_EXPR_LIST
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR)))
                (AST_EXPR_LIST
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_EXPR_LIST
                    (AST_POST_INC
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))