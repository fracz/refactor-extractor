||||||||	public static function testDbSettings($dbHostname, $dbName, $dbUsername, $dbPassword) {
		$dbConnectionError = "";
		$lang = Core::$language->getCurrentLanguageStrings();
		$link = @mysql_connect($dbHostname, $dbUsername, $dbPassword)
			or $dbConnectionError = mysql_error();

		if ($dbConnectionError) {
			$placeholders = array("db_connection_error" => $dbConnectionError);
			$error = Templates::evalSmartyString($lang["install_invalid_db_info"], $placeholders);
			return array(false, $error);
		} else {
			$dbSelectError = "";
			@mysql_select_db($dbName)
				or $dbSelectError = mysql_error();

			if ($dbSelectError) {
				$placeholders = array("db_select_error" => $dbSelectError);
				$error = Template::evalSmartyString($lang["install_no_db_connection"], $placeholders);
				return array(false, $error);
			} else {
				@mysql_close($link);
			}
		}

		return array(true, "");
	}

	/**
	 * Performs our actual database query/queries.  This accepts either a single query string or an array of queries
	 * through the first param. The second optional param allows for a custom rollback. We don't use transactions
	 * because it requires the InnoDB or BDB storage engines being available (and from my experience with formtools.org,
	 * there are still a lot of environments that don't have it).
	 *
	 * This function works for any query type: INSERT, UPDATE, SELECT. But the returned info obviously only has
	 * meaning with the SELECT query.
	 *
	 * @param mixed $queries
	 * @param mixed $rollbackQueries
	 * @return hash "success"      => boolean
	 *              "errorMessage" => error string
	 *              "results"      => the result of the MySQL query, or an array of results if an array was passed
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_PROP)))
    (AST_BINARY_OP
        (AST_ASSIGN
            (AST_VAR)
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_ASSIGN
            (AST_VAR)
            (AST_CALL)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))))
                (AST_RETURN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL)))))