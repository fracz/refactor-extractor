||||||||	public static function assert($statements) {
		if (empty($statements)) {
			return;
		}

		 while (list($test, $values) = each($statements)) {
			 switch ($test) {
				 case "loggedIn":
					if (empty(Core::$user)) {
						throw new GDException(Exceptions::NOTLOGGEDIN);
						return;
					}
					 break;

				 case "noSettingsFile":
					 $settingsFileAndPath = realpath(dirname(__FILE__) . "/../settings.php");
					 $settingsFileExists = file_exists($settingsFileAndPath);
					if ($values === true && $settingsFileExists) {
						throw new GDException(Exceptions::SETTINGSFILEEXISTS);
					}
					 break;
			 }
		}
	}


	/**
	 * Recursively sanitizes data stored in any non-object data format, preparing it
	 * for safe use in SQL statements.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_CALL
                (
                    (AST_VAR))))
        (
            (AST_SWITCH
                (AST_VAR)
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_EMPTY
                                        (AST_STATIC_PROP))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))))
                                        (AST_RETURN
                                            (NULL)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_MAGIC_CONST)))
                                            (SCALAR)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_VAR))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))))))
                            (AST_BREAK
                                (NULL)))))))))