||||||||    public static function compileAllTemplates($extention, $force_compile, $time_limit, $max_errors, Smarty $smarty)
    {
        // switch off time limit
        if (function_exists('set_time_limit')) {
            @set_time_limit($time_limit);
        }
        $smarty->force_compile = $force_compile;
        $_count = 0;
        $_error_count = 0;
        // loop over array of template directories
        foreach($smarty->getTemplateDir() as $_dir) {
            $_compileDirs = new RecursiveDirectoryIterator($_dir);
            $_compile = new RecursiveIteratorIterator($_compileDirs);
            foreach ($_compile as $_fileinfo) {
                if (substr($_fileinfo->getBasename(),0,1) == '.' || strpos($_fileinfo, '.svn') !== false) continue;
                $_file = $_fileinfo->getFilename();
                if (!substr_compare($_file, $extention, - strlen($extention)) == 0) continue;
                if ($_fileinfo->getPath() == substr($_dir, 0, -1)) {
                   $_template_file = $_file;
                } else {
                   $_template_file = substr($_fileinfo->getPath(), strlen($_dir)) . DS . $_file;
                }
                echo '<br>', $_dir, '---', $_template_file;
                flush();
                $_start_time = microtime(true);
                try {
                    $_tpl = $smarty->createTemplate($_template_file,null,null,null,false);
                    if ($_tpl->mustCompile()) {
                        $_tpl->compileTemplateSource();
                        echo ' compiled in  ', microtime(true) - $_start_time, ' seconds';
                        flush();
                    } else {
                        echo ' is up to date';
                        flush();
                    }
                }
                catch (Exception $e) {
                    echo 'Error: ', $e->getMessage(), "<br><br>";
                    $_error_count++;
                }
                // free memory
                $smarty->template_objects = array();
                $_tpl->smarty->template_objects = array();
                $_tpl = null;
                if ($max_errors !== null && $_error_count == $max_errors) {
                    echo '<br><br>too many errors';
                    exit();
                }
            }
        }
        return $_count;
    }

    /**
     * Compile all config files
     *
     * @param string $extension     config file name extension
     * @param bool   $force_compile force all to recompile
     * @param int    $time_limit    set maximum execution time
     * @param int    $max_errors    set maximum allowed errors
     * @param Smarty $smarty        Smarty instance
     * @return integer number of config files compiled
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_UNARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))))))
                                (SCALAR))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_UNARY_OP
                                            (SCALAR)))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))))
                                            (AST_CONST))
                                        (AST_VAR))))))
                    (AST_ECHO
                        (SCALAR))
                    (AST_ECHO
                        (AST_VAR))
                    (AST_ECHO
                        (SCALAR))
                    (AST_ECHO
                        (AST_VAR))
                    (AST_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_CONST))))
                    (AST_TRY
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_CONST)
                                        (AST_CONST))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_ECHO
                                            (SCALAR))
                                        (AST_ECHO
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)))
                                                (AST_VAR)))
                                        (AST_ECHO
                                            (SCALAR))
                                        (AST_CALL)))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ECHO
                                            (SCALAR))
                                        (AST_CALL)))))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_ECHO
                                        (SCALAR))
                                    (AST_ECHO
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ECHO
                                        (SCALAR))
                                    (AST_POST_INC
                                        (AST_VAR)))))
                        (NULL))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_ARRAY))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_ARRAY))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_ECHO
                                    (SCALAR))
                                (AST_EXIT
                                    (NULL)))))))))
    (AST_RETURN
        (AST_VAR)))