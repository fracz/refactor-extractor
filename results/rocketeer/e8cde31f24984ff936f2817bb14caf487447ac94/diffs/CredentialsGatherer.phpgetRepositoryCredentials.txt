    public function getRepositoryCredentials()
    {
        // Check for repository credentials
        $repository = $this->credentials->getCurrentRepository();
        $repositoryCredentials = $repository->toArray();

        // If we didn't specify a login/password ask for both the first time
        $rules = $this->rules['repository'];
        if ($repository->needsCredentials()) {
            // Else assume the repository is passwordless and only ask again for username
            $rules += ['username' => true, 'password' => true];
        }

        // Gather credentials
        $credentials = $this->gatherCredentials($rules, $repositoryCredentials, 'repository');

        // Save them to local storage and runtime configuration
        $this->localStorage->set('credentials', $credentials);
        foreach ($credentials as $key => $credential) {
            $this->config->set('scm.'.$key, $credential);
        }
    }

    /**
     * Get the Storage's credentials.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_VAR))))))||||||||