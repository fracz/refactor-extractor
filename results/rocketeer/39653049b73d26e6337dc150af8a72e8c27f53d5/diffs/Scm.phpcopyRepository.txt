	public function copyRepository($destination = null)
	{
		// Get the previous release, if none clone from scratch
		$previous = $this->releasesManager->getPreviousRelease();
		$previous = $this->releasesManager->getPathToRelease($previous);
		if (!$previous) {
			return $this->cloneRepository($destination);
		}

		// Recompute destination
		if (!$destination) {
			$destination = $this->releasesManager->getCurrentReleasePath();
		}

		// Copy old release into new one
		$this->command->info('Copying previous release "'.$previous.'" in "'.$destination.'"');
		$this->copy($previous, $destination);

		// Update repository
		return $this->updateRepository();
	}

	/**
	 * Clone the repo into a release folder
	 *
	 * @param string $destination Where to clone to
	 *
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||