	protected function getConfig($expectations = array())
	{
		$config = Mockery::mock('Illuminate\Config\Repository');
		$config->shouldIgnoreMissing();

		foreach ($expectations as $key => $value) {
			$config->shouldReceive('get')->with($key)->andReturn($value);
		}

		// Drivers
		$config->shouldReceive('get')->with('cache.driver')->andReturn('file');
		$config->shouldReceive('get')->with('database.default')->andReturn('mysql');
		$config->shouldReceive('get')->with('remote.default')->andReturn('production');
		$config->shouldReceive('get')->with('remote.connections')->andReturn(array(
			'production' => array(),
			'staging'    => array()
		));
		$config->shouldReceive('get')->with('session.driver')->andReturn('file');

		// Rocketeer
		$config->shouldReceive('get')->with('rocketeer::application_name')->andReturn('foobar');
		$config->shouldReceive('get')->with('rocketeer::default')->andReturn(array('production', 'staging'));
		$config->shouldReceive('get')->with('rocketeer::logs')->andReturn(false);
		$config->shouldReceive('get')->with('rocketeer::connections')->andReturn(array());
		$config->shouldReceive('get')->with('rocketeer::remote.strategy')->andReturn('clone');
		$config->shouldReceive('get')->with('rocketeer::remote.keep_releases')->andReturn(1);
		$config->shouldReceive('get')->with('rocketeer::remote.permissions.callback')->andReturn(function ($task, $file) {
			return array(
				sprintf('chmod -R 755 %s', $file),
				sprintf('chmod -R g+s %s', $file),
				sprintf('chown -R www-data:www-data %s', $file),
			);
		});
		$config->shouldReceive('get')->with('rocketeer::remote.permissions.files')->andReturn(array('tests'));
		$config->shouldReceive('get')->with('rocketeer::remote.root_directory')->andReturn(__DIR__.'/../_server/');
		$config->shouldReceive('get')->with('rocketeer::remote.app_directory')->andReturn(null);
		$config->shouldReceive('get')->with('rocketeer::remote.shared')->andReturn(array('tests/Elements'));
		$config->shouldReceive('get')->with('rocketeer::remote.composer')->andReturn(function ($task) {
			return array(
				$task->composer('self-update'),
				$task->composer('install --no-interaction --no-dev --prefer-dist'),
			);
		});
		$config->shouldReceive('get')->with('rocketeer::stages.default')->andReturn(null);
		$config->shouldReceive('get')->with('rocketeer::stages.stages')->andReturn(array());

		// Paths
		$config->shouldReceive('get')->with('rocketeer::paths.php')->andReturn('');
		$config->shouldReceive('get')->with('rocketeer::paths.composer')->andReturn('');
		$config->shouldReceive('get')->with('rocketeer::paths.artisan')->andReturn('');

		// SCM
		$config->shouldReceive('get')->with('rocketeer::scm.branch')->andReturn('master');
		$config->shouldReceive('get')->with('rocketeer::scm.repository')->andReturn('https://github.com/'.$this->repository);
		$config->shouldReceive('get')->with('rocketeer::scm.scm')->andReturn('git');
		$config->shouldReceive('get')->with('rocketeer::scm.shallow')->andReturn(true);
		$config->shouldReceive('get')->with('rocketeer::scm.submodules')->andReturn(true);

		// Tasks
		$config->shouldReceive('get')->with('rocketeer::hooks')->andReturn(array(
			'before' => array(
				'deploy' => array(
					'before',
					'foobar'
				),
			),
			'after'  => array(
				'check'  => array(
					'Rocketeer\Dummies\MyCustomTask',
				),
				'deploy' => array(
					'after',
					'foobar'
				),
			),
		));

		return $config;
	}

	/**
	 * Swap the current config
	 *
	 * @param  array $config
	 *
	 * @return void
	 */
||||||||	protected function getConfig($expectations = array())
	{
		$config = Mockery::mock('Illuminate\Config\Repository');
		$config->shouldIgnoreMissing();

		foreach ($expectations as $key => $value) {
			$config->shouldReceive('get')->with($key)->andReturn($value);
		}

		// Drivers
		$config->shouldReceive('get')->with('cache.driver')->andReturn('file');
		$config->shouldReceive('get')->with('database.default')->andReturn('mysql');
		$config->shouldReceive('get')->with('remote.default')->andReturn('production');
		$config->shouldReceive('get')->with('remote.connections')->andReturn(array(
			'production' => array(),
			'staging'    => array()
		));
		$config->shouldReceive('get')->with('session.driver')->andReturn('file');

		// Rocketeer
		$config->shouldReceive('get')->with('rocketeer::application_name')->andReturn('foobar');
		$config->shouldReceive('get')->with('rocketeer::default')->andReturn(array('production', 'staging'));
		$config->shouldReceive('get')->with('rocketeer::logs')->andReturn(false);
		$config->shouldReceive('get')->with('rocketeer::connections')->andReturn(array());
		$config->shouldReceive('get')->with('rocketeer::remote.strategy')->andReturn('clone');
		$config->shouldReceive('get')->with('rocketeer::remote.keep_releases')->andReturn(1);
		$config->shouldReceive('get')->with('rocketeer::remote.permissions.callback')->andReturn(function ($task, $file) {
			return array(
				sprintf('chmod -R 755 %s', $file),
				sprintf('chmod -R g+s %s', $file),
				sprintf('chown -R www-data:www-data %s', $file),
			);
		});
		$config->shouldReceive('get')->with('rocketeer::remote.permissions.files')->andReturn(array('tests'));
		$config->shouldReceive('get')->with('rocketeer::remote.root_directory')->andReturn(__DIR__.'/../_server/');
		$config->shouldReceive('get')->with('rocketeer::remote.app_directory')->andReturn(null);
		$config->shouldReceive('get')->with('rocketeer::remote.shared')->andReturn(array('tests/Elements'));
		$config->shouldReceive('get')->with('rocketeer::remote.composer')->andReturn(function ($task) {
			return array(
				$task->composer('self-update'),
				$task->composer('install --no-interaction --no-dev --prefer-dist'),
			);
		});
		$config->shouldReceive('get')->with('rocketeer::stages.default')->andReturn(null);
		$config->shouldReceive('get')->with('rocketeer::stages.stages')->andReturn(array());

		// Paths
		$config->shouldReceive('get')->with('rocketeer::paths.php')->andReturn('');
		$config->shouldReceive('get')->with('rocketeer::paths.composer')->andReturn('');
		$config->shouldReceive('get')->with('rocketeer::paths.artisan')->andReturn('');

		// SCM
		$config->shouldReceive('get')->with('rocketeer::scm')->andReturn(array(
			'branch'     => 'master',
			'repository' => 'https://github.com/'.$this->repository,
			'scm'        => 'git',
			'shallow'    => true,
			'submodules' => true,
		));
		$config->shouldReceive('get')->with('rocketeer::scm.branch')->andReturn('master');
		$config->shouldReceive('get')->with('rocketeer::scm.repository')->andReturn('https://github.com/'.$this->repository);
		$config->shouldReceive('get')->with('rocketeer::scm.scm')->andReturn('git');
		$config->shouldReceive('get')->with('rocketeer::scm.shallow')->andReturn(true);
		$config->shouldReceive('get')->with('rocketeer::scm.submodules')->andReturn(true);

		// Tasks
		$config->shouldReceive('get')->with('rocketeer::hooks')->andReturn(array(
			'before' => array(
				'deploy' => array(
					'before',
					'foobar'
				),
			),
			'after'  => array(
				'check'  => array(
					'Rocketeer\Dummies\MyCustomTask',
				),
				'deploy' => array(
					'after',
					'foobar'
				),
			),
		));

		return $config;
	}

	/**
	 * Swap the current config
	 *
	 * @param  array $config
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (NULL))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (NULL))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (AST_MAGIC_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (NULL))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))