	public function getCurrentLogsFile()
	{
		/** @type \Callable $logs */
		$logs = $this->config->get('rocketeer::logs');
		if (!$logs) {
			return false;
		}

		$file = $logs($this->connections);
		$file = $this->app['path.rocketeer.logs'].'/'.$file;

		return $file;
	}

	/**
	 * Get a logger instance by context
	 *
	 * @param string $file
	 *
	 * @return \Illuminate\Log\Writer
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (SCALAR))
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||