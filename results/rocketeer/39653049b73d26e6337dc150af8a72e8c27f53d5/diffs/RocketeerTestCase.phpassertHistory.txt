||||||||	public function assertHistory($expected, $obtained)
	{
		// Look for release in history
		$release = implode(array_flatten($obtained));
		preg_match_all('/[0-9]{14}/', $release, $releases);
		$release = array_get($releases, '0.0', date('YmdHis'));
		if ($release === '10000000000000') {
			$release = array_get($releases, '0.1', date('YmdHis'));
		}

		// Replace placeholders
		$expected = $this->replaceHistoryPlaceholders($expected, $release);

		// Check equality
		$this->assertEquals($expected, $obtained);
	}

	/**
	 * Replace placeholders in an history
	 *
	 * @param array $history
	 *
	 * @return array
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))