    public function bindStrategies()
    {
        // Bind SCM class
        $scm = $this->container->get('rocketeer.rocketeer')->getOption('scm.scm');
        $this->container->add('rocketeer.scm', function () use ($scm) {
            return $this->container->get('rocketeer.builder')->buildBinary($scm);
        });

        // Bind strategies
        $strategies = (array) $this->container->get('rocketeer.rocketeer')->getOption('strategies');
        foreach ($strategies as $strategy => $concrete) {
            if (!is_string($concrete) || !$concrete) {
                continue;
            }

            $this->container->share('rocketeer.strategies.'.$strategy, function () use ($strategy, $concrete) {
                return $this->container->get('rocketeer.builder')->buildStrategy($strategy, $concrete);
            });
        }
    }

    ////////////////////////////////////////////////////////////////////
    /////////////////////////////// HELPERS ////////////////////////////
    ////////////////////////////////////////////////////////////////////

    /**
     * @param string $alias
     * @param string $concrete
     */
||||||||    public function bindStrategies()
    {
        /** @var ContextualConfiguration $config */
        $config = $this->container->get('config');

        // Bind SCM class
        $scm = $config->getContextually('scm.scm');
        $this->container->add('rocketeer.scm', function () use ($scm) {
            return $this->container->get('rocketeer.builder')->buildBinary($scm);
        });

        // Bind strategies
        $strategies = (array) $config->getContextually('strategies');
        foreach ($strategies as $strategy => $concrete) {
            if (!is_string($concrete) || !$concrete) {
                continue;
            }

            $this->container->share('rocketeer.strategies.'.$strategy, function () use ($strategy, $concrete) {
                return $this->container->get('rocketeer.builder')->buildStrategy($strategy, $concrete);
            });
        }
    }

    ////////////////////////////////////////////////////////////////////
    /////////////////////////////// HELPERS ////////////////////////////
    ////////////////////////////////////////////////////////////////////

    /**
     * @param string $alias
     * @param string $concrete
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_UNARY_OP
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_UNARY_OP
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))))