    public function handleExceptions( Exception $e ) {
        if ( $e instanceof Slim_Exception_Stop === false ) {
            $this->getLog()->error($e);
            if ( $this->config('debug') === true ) {
                $this->halt(500, self::generateErrorMarkup($e->getMessage(), $e->getFile(), $e->getLine(), $e->getTraceAsString()));
            } else {
                $this->error();
            }
        }
        die();
    }

    /**
     * Generate markup for error message
     *
     * This method accepts details about an error or exception and
     * generates HTML markup for the 500 response body that will
     * be sent to the client.
     *
     * @param   string  $message    The error message
     * @param   string  $file       The absolute file path to the affected file
     * @param   int     $line       The line number in the affected file
     * @param   string  $trace      A stack trace of the error
     * @return  string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_EXIT
        (NULL)))||||||||