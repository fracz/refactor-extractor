||||||||    public static function createMatchingChangeInfo(CommitMessage $commitMessage) {

        // Map between partial regex describing the format of the VP-Action tag
        // and a ChangeInfo class. The full PCRE regex will be constructed from the string
        // by adding "^" and "$" so the values below have to match the whole VP-Action value.

        $map = array(

            // VersionPress actions:
            "versionpress/(?!(undo|rollback)).*" => 'VersionPressChangeInfo',
            "versionpress/(undo|rollback)/.*" => 'RevertChangeInfo',

            // WordPress core actions:
            "plugin/.*" => 'PluginChangeInfo',
            "theme/.*" => 'ThemeChangeInfo',
            "wordpress/update/.*" => 'WordPressUpdateChangeInfo',

            // Actions on entities:
            "post/.*" => 'PostChangeInfo',
            "comment/.*" => 'CommentChangeInfo',
            "option/.*" => 'OptionChangeInfo',
            "term/.*" => 'TermChangeInfo',
            "usermeta/.*" => 'UserMetaChangeInfo',
            "user/.*" => 'UserChangeInfo',

        );

        $changeInfoTypeToCreate = 'UntrackedChangeInfo'; // fallback

        $actionTagValue = $commitMessage->getVersionPressTag(TrackedChangeInfo::ACTION_TAG);
        if ($actionTagValue != '') {
            foreach ($map as $expr => $changeInfoType) {
                $regex = "~^" . $expr . "$~";
                if (preg_match($regex, $actionTagValue)) {
                    $changeInfoTypeToCreate = $changeInfoType;
                }
            }
        }

        return $changeInfoTypeToCreate::buildFromCommitMessage($commitMessage);

    }

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (AST_VAR)
            (
                (AST_VAR)))))