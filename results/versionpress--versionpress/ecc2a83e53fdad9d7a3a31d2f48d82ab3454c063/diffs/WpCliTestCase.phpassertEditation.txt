    protected function assertEditation($entity, $changes, $expectedAction, $createFunction, $editFunction) {
        $id = call_user_func($createFunction, $entity);
        $creationCommit = $this->getLastCommit();
        $createdPostVpId = $this->getVpIdFromCommit($creationCommit);

        call_user_func($editFunction, $id, $changes);
        $editationCommit = $this->getLastCommit();
        $this->assertStringStartsWith(
            $expectedAction,
            $editationCommit->getMessage()->getVersionPressTag(TrackedChangeInfo::ACTION_TAG),
            "Expected another action"
        );

        $editedPostVpId = $this->getVpIdFromCommit($editationCommit);
        $this->assertEquals($createdPostVpId, $editedPostVpId, "Edited different entity");

        $commitedEntity = $this->getCommitedEntity($createdPostVpId);
        $newEntity = array_merge($entity, $changes);
        $this->assertEntityEquals($newEntity, $commitedEntity);
    }

    /**
     * Creates new entity, deletes it and checks that actual action corresponds with the expected one.
     * Also checks there the right entity was deleted.
     *
     * @param array $entity Entity to create
     * @param string $entityName Name of entity (e.g. post, comment etc.)
     * @param callable $createFunction Function that creates new entity (perhaps from WpAutomation)
     * @param callable $deleteFunction Function that deletes new entity (perhaps from WpAutomation)
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||