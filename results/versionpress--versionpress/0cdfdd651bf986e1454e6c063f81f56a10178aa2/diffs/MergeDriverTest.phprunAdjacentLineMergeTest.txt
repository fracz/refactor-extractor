||||||||    private function runAdjacentLineMergeTest($driver) {
        MergeDriverInstaller::installMergeDriver(self::$initializationDir);

        switch ($driver) {
            case 'bash': MergeDriverTestUtils::switchDriverToBash(); break;
            case 'php': MergeDriverTestUtils::switchDriverToPhp(); break;
        }

        $date = '2011-11-11 11:11:11';

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'Default content', 'Default title');
        MergeDriverTestUtils::commit('Initial commit to common ancestor');

        MergeDriverTestUtils::runGitCommand('git checkout -b test-branch');

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'Default content', 'CHANGED TITLE');
        MergeDriverTestUtils::commit('Commit to branch');

        MergeDriverTestUtils::runGitCommand('git checkout master');

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'CHANGED CONTENT', 'Default title');
        MergeDriverTestUtils::commit('Commit to master');

        MergeAsserter::assertCleanMerge('git merge test-branch');
    }



}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_STATIC_PROP)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_STATIC_CALL)
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_STATIC_CALL)
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR))))