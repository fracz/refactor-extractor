||||||||    public static function assertMergeConflict($mergeCommand) {

        $exitCode = MergeDriverTestUtils::runGitCommand($mergeCommand);

        if ($exitCode == 0) {
            PHPUnit_Framework_Assert::fail('Expected merge conflict, got clean merge instead');
        } else if ($exitCode != 1) {
            PHPUnit_Framework_Assert::fail('Merge ended with an unexpected exit code ' . $exitCode);
        }

    }

    /**
     * Asserts that a merge from $fromBranch ends with a clean merge (not a conflict)
     *
     * @param string $mergeCommand Merge command to run and assert on
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR)))))))))))