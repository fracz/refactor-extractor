||||||||    public function changesOnAdjacentLinesMergeWithoutConflict($driver) {

        if (DIRECTORY_SEPARATOR == '\\' && $driver == 'bash') {
            $this->markTestSkipped('No Bash on Windows.');
            return;
        }

        $this->installMergeDriver($driver);

        $date = '2011-11-11 11:11:11';

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'Default content', 'Default title');
        MergeDriverTestUtils::commit('Initial commit to common ancestor');

        MergeDriverTestUtils::runGitCommand('git checkout -b test-branch');

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'Default content', 'CHANGED TITLE');
        MergeDriverTestUtils::commit('Commit to branch');

        MergeDriverTestUtils::runGitCommand('git checkout master');

        MergeDriverTestUtils::writeIniFile('file.ini', $date, 'CHANGED CONTENT', 'Default title');
        MergeDriverTestUtils::commit('Commit to master');

        MergeAsserter::assertCleanMerge('git merge test-branch');
    }



}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR))))