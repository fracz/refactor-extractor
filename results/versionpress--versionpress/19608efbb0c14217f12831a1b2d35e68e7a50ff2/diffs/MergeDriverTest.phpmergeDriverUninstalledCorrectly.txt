    public function mergeDriverUninstalledCorrectly() {
        MergeDriverInstaller::installMergeDriver(self::$initializationDir);
        MergeDriverInstaller::uninstallMergeDriver();
        $this->assertNotContains('vp-ini', file_get_contents(self::$repositoryDir . "/.git/config"));
        $this->assertNotContains('merge=vp-ini', file_get_contents(self::$repositoryDir . "/.gitattributes"));
    }

    /**
     * @test
     */
||||||||    public function mergeDriverUninstalledCorrectly() {
        $this->installMergeDriver('auto');
        MergeDriverInstaller::uninstallMergeDriver(self::$repositoryDir);
        $this->assertNotContains('vp-ini', file_get_contents(self::$repositoryDir . "/.git/config"));
        $this->assertNotContains('merge=vp-ini', file_get_contents(self::$repositoryDir . "/.gitattributes"));
    }

    /**
     * Creates two branches differing only in the date modified (and the GMT version of it).
     * This should result in a clean merge when our merge driver is installed.
     *
     * @test
     * @dataProvider driverProvider
     * @param string $driver
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_STATIC_PROP)))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_STATIC_PROP)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_STATIC_PROP)
                        (SCALAR)))))))