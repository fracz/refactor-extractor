    public function getCommitMessage() {
        return new CommitMessage($this->getChangeDescription(), $this->constructCommitMessageBody());
    }


    /**
     * Constructs commit message body, which is typically a couple of lines
     * with VP tags.
     *
     * General algorithm is defined in this base class implementation and the subclasses
     * only need to provide content for VP-Action tag and an array of custom VP tags.
     *
     * @see constructActionTagValue()
     * @see getCustomTags()
     *
     * @return string
     */
||||||||    public function getCommitMessage() {
        return new CommitMessage($this->getChangeDescription(), $this->getCommitMessageBody());
    }

    /**
     * Constructs commit message body, which is typically a couple of lines of VP tags.
     *
     * General algorithm is defined in this base class and the subclasses
     * only need to provide content for VP-Action tag and an array of custom VP tags.
     *
     * @see getActionTagValue()
     * @see getCustomTags()
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))))))