    public function factoryCreatesRightStorages() {
        $storages = array(
            'post' => 'VersionPress\Storages\PostStorage',
            'comment' => 'VersionPress\Storages\CommentStorage',
            'option' => 'VersionPress\Storages\OptionStorage',
            'term' => 'VersionPress\Storages\TermStorage',
            'termmeta' => 'VersionPress\Storages\TermMetaStorage',
            'term_taxonomy' => 'VersionPress\Storages\TermTaxonomyStorage',
            'user' => 'VersionPress\Storages\UserStorage',
            'usermeta' => 'VersionPress\Storages\UserMetaStorage',
            'postmeta' => 'VersionPress\Storages\PostMetaStorage',
        );

        /** @var \wpdb $wpdbStub */
        $wpdbStub = $this->getMockBuilder('\wpdb')->disableOriginalConstructor()->getMock();

        $factory = new StorageFactory(__DIR__ . '/vpdb', new DbSchemaInfo(__DIR__ . '/../../src/Database/wordpress-schema.yml', 'wp_', PHP_INT_MAX), $wpdbStub, array());
        foreach ($storages as $entityName => $expectedClass) {
            $this->assertInstanceOf($expectedClass, $factory->getStorage($entityName));
        }

    }
}||||||||    public function factoryCreatesRightStorages() {
        $storages = array(
            'post' => 'VersionPress\Storages\PostStorage',
            'comment' => 'VersionPress\Storages\CommentStorage',
            'option' => 'VersionPress\Storages\OptionStorage',
            'term' => 'VersionPress\Storages\TermStorage',
            'termmeta' => 'VersionPress\Storages\TermMetaStorage',
            'term_taxonomy' => 'VersionPress\Storages\TermTaxonomyStorage',
            'user' => 'VersionPress\Storages\UserStorage',
            'usermeta' => 'VersionPress\Storages\UserMetaStorage',
            'postmeta' => 'VersionPress\Storages\PostMetaStorage',
        );

        /** @var \wpdb $wpdbStub */
        $wpdbStub = $this->getMockBuilder('\wpdb')->disableOriginalConstructor()->getMock();

        $database = new Database($wpdbStub);

        $factory = new StorageFactory(__DIR__ . '/vpdb', new DbSchemaInfo(__DIR__ . '/../../src/Database/wordpress-schema.yml', 'wp_', PHP_INT_MAX), $database, array());
        foreach ($storages as $entityName => $expectedClass) {
            $this->assertInstanceOf($expectedClass, $factory->getStorage($entityName));
        }

    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR))
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))
                        (SCALAR)
                        (AST_CONST)))
                (AST_VAR)
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR))
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))
                        (SCALAR)
                        (AST_CONST)))
                (AST_VAR)
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))))