    private function generateEntities($entity, $count) {
        $entities = array();
        Debugger::timer();
        for ($i = 0; $i < $count; $i++) {
            $entities[] = $this->generateEntity($entity);
        }

        WP_CLI::success("Generating ($entity): " . Debugger::timer());
        $insertQueries = $this->buildInsertQueries($this->database->prefix . $entity, $entities);
        WP_CLI::success("Building queries ($entity): " . Debugger::timer());

        $connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        $connection->query("SET GLOBAL max_allowed_packet=100*1024*1024");
        $chunks = array_chunk($insertQueries, 50);
        foreach ($chunks as $chunk) {
            $connection->multi_query(join(" ", $chunk));
            while ($connection->next_result()) // flush multi_queries
            {
                if (!$connection->more_results()) break;
            }
        }

        WP_CLI::success("Queries ($entity): " . Debugger::timer());

        $connection->close();
    }

||||||||    private function generateEntities($entity, $count) {
        $entities = array();
        Debugger::timer();
        for ($i = 0; $i < $count; $i++) {
            $entities[] = $this->generateEntity($entity);
        }

        WP_CLI::success("Generating ($entity): " . Debugger::timer());
        $insertQueries = $this->buildInsertQueries($this->database->getTablePrefix() . $entity, $entities);
        WP_CLI::success("Building queries ($entity): " . Debugger::timer());

        $connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        $connection->query("SET GLOBAL max_allowed_packet=100*1024*1024");
        $chunks = array_chunk($insertQueries, 50);
        foreach ($chunks as $chunk) {
            $connection->multi_query(join(" ", $chunk));
            while ($connection->next_result()) // flush multi_queries
            {
                if (!$connection->more_results()) break;
            }
        }

        WP_CLI::success("Queries ($entity): " . Debugger::timer());

        $connection->close();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_STATIC_CALL)
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))
            (AST_WHILE
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_STATIC_CALL)
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR))
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))
            (AST_WHILE
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_BREAK
                                    (NULL)))))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_STATIC_CALL))))
    (AST_METHOD_CALL
        (AST_VAR)))