    private function runLoadTest() {
        $limit = 1000;
        for ($i = 0; $i < $limit; $i++) {
            MergeDriverTestUtils::fillFakeFile(ORIGIN_DATE, 'file' . $i . '.ini');
        }
        MergeDriverTestUtils::commit('Initial commit to Ancestor');
        MergeDriverTestUtils::runProcess(CHECKOUT_BRANCH_CMD);
        for ($i = 0; $i < $limit; $i++) {
            MergeDriverTestUtils::fillFakeFile(BRANCH_DATE, 'file' . $i . '.ini');
        }
        MergeDriverTestUtils::commit('Commit to branch');
        MergeDriverTestUtils::runProcess(CHECKOUT_MASTER_CMD);
        for ($i = 0; $i < $limit; $i++) {
            MergeDriverTestUtils::fillFakeFile(MASTER_DATE, 'file' . $i . '.ini');
        }
        MergeDriverTestUtils::commit('Commit to master');
        echo "Done";
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_STATIC_CALL
                (
                    (AST_CONST)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_CONST)))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_STATIC_CALL
                (
                    (AST_CONST)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_CONST)))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_STATIC_CALL
                (
                    (AST_CONST)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR)))||||||||