    private function ensureCleanInstallationIsAvailable()
    {

        $cleanInstallationPath = $this->getCleanInstallationPath();

        if (!is_dir($cleanInstallationPath) || !is_file($cleanInstallationPath . '/wp-settings.php')) {
            if (!is_dir($cleanInstallationPath)) {
                FileSystem::mkdir($cleanInstallationPath);
            } else {
                FileSystem::removeContent($cleanInstallationPath);
            }
            $wpVersion = $this->siteConfig->wpVersion;
            $wpLocale = $this->siteConfig->wpLocale;
            $downloadCommand = "wp core download --path=\"$cleanInstallationPath\" --version=\"$wpVersion\"";
            if ($wpLocale) {
                $downloadCommand .= " --locale=$wpLocale";
            }

            $this->exec($downloadCommand, null);
        }
    }

    /**
     * Returns a path where a clean installation of the configured WP version is stored and cached.
     *
     * @return string
     */
||||||||    private function ensureCleanInstallationIsAvailable()
    {

        $cleanInstallationPath = $this->getCleanInstallationPath();

        if (!$this->isCorrectlyDownloaded($cleanInstallationPath)) {
            FileSystem::remove($cleanInstallationPath);
            FileSystem::mkdir($cleanInstallationPath);

            $wpVersion = $this->siteConfig->wpVersion;
            $wpLocale = $this->siteConfig->wpLocale;
            $downloadCommand = "wp core download --path=\"$cleanInstallationPath\" --version=\"$wpVersion\"";
            if ($wpLocale) {
                $downloadCommand .= " --locale=$wpLocale";
            }

            $this->exec($downloadCommand, null);
        }
    }

    /**
     * Checks that clean WP installation is available and downloaded correctly. (Simple implementation
     * for now, just checking some basic paths.)
     *
     * @param string $cleanInstallationPath
     * @return bool
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_CONST)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_CONST)))))))