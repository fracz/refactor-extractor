||||||||    public function subscribe($events) {
        $events->listen('eloquent.creating', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentCreating', 5);
        $events->listen('eloquent.created', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentCreated', 5);
        $events->listen('eloquent.updating', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentUpdating', 5);
        $events->listen('eloquent.updated', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentUpdated', 5);
        $events->listen('eloquent.deleting', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentDeleting', 5);
        $events->listen('eloquent.deleted', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentDeleted', 5);
        $events->listen('eloquent.saving', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentSaving', 5);
        $events->listen('eloquent.saved', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentSaved', 5);
        $events->listen('eloquent.restoring', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentRestoring', 5);
        $events->listen('eloquent.restored', 'GrahamCampbell\BootstrapCMS\Subscribers\EloquentSubscriber@onEloquentRestored', 5);
    }

    /**
     * Handle an eloquent.creating event.
     *
     * @param  mixed  $event
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR))))