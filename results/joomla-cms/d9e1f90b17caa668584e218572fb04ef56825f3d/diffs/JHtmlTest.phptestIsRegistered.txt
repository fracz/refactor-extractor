	public function testIsRegistered()
	{
		$registered = $this->getMock('MyHtmlClass', array('mockFunction'));

		// Test that we can register the method.
		JHtml::register('prefix.isregistered.method', array($registered, 'mockFunction'));

		$this->assertTrue(
			JHtml::isRegistered('prefix.isregistered.method'),
			'Calling isRegistered on a valid method should pass.'
		);

		$this->assertFalse(
			JHtml::isRegistered('prefix.isregistered.nomethod'),
			'Calling isRegistered on a missing method should fail.'
		);
	}

	/**
	 * Gets the data for testing the JHtml::link method.
	 *
	 * @return  array
	 *
	 * @since   3.1
	 */
||||||||	public function testIsRegistered()
	{
		// Build the mock object.
		$registered = $this->getMockBuilder('MyHtmlClass')
					->setMethods(array('mockFunction'))
					->getMock();

		// Test that we can register the method.
		JHtml::register('prefix.isregistered.method', array($registered, 'mockFunction'));

		$this->assertTrue(
			JHtml::isRegistered('prefix.isregistered.method'),
			'Calling isRegistered on a valid method should pass.'
		);

		$this->assertFalse(
			JHtml::isRegistered('prefix.isregistered.nomethod'),
			'Calling isRegistered on a missing method should fail.'
		);
	}

	/**
	 * Gets the data for testing the JHtml::link method.
	 *
	 * @return  array
	 *
	 * @since   3.1
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR))))