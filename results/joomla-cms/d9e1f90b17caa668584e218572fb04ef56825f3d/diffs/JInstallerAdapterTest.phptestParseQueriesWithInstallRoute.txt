	public function testParseQueriesWithInstallRoute()
	{
		$mockInstaller = $this->getMock('JInstaller');
		$mockDatabase = $this->getMockDatabase();
		$object = $this->getMockForAbstractClass(
			'JInstallerAdapter',
			array($mockInstaller, $mockDatabase),
			'',
			true,
			true,
			true,
			array('doDatabaseTransactions')
		);
		TestReflection::setValue($object, 'route', 'install');
		$object->expects($this->once())
			->method('doDatabaseTransactions')
			->willReturn(false);

		TestReflection::invoke($object, 'parseQueries');
	}

	/**
	 * @testdox Test parse queries throws an exception with install route and JInstallerAdapter::doDatabaseTransactions() returning false
	 *
	 * @expectedException  RuntimeException
	 * @covers  JInstallerAdapter::parseQueries
	 */
||||||||	public function testParseQueriesWithInstallRoute()
	{
		$mockInstaller = $this->getMockBuilder('JInstaller')->getMock();
		$mockDatabase = $this->getMockDatabase();
		$object = $this->getMockForAbstractClass(
			'JInstallerAdapter',
			array($mockInstaller, $mockDatabase),
			'',
			true,
			true,
			true,
			array('doDatabaseTransactions')
		);
		TestReflection::setValue($object, 'route', 'install');
		$object->expects($this->once())
			->method('doDatabaseTransactions')
			->willReturn(false);

		TestReflection::invoke($object, 'parseQueries');
	}

	/**
	 * @testdox Test parse queries throws an exception with install route and JInstallerAdapter::doDatabaseTransactions() returning false
	 *
	 * @expectedException  RuntimeException
	 * @covers  JInstallerAdapter::parseQueries
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (SCALAR)
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (SCALAR)
                (AST_CONST)
                (AST_CONST)
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR))))