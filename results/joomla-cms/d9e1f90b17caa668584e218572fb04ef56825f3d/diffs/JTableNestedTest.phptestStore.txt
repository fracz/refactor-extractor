	public function testStore()
	{
		$this->class->reset();
		$this->class->setLocation(102, 'last-child');

		$this->assertTrue($this->class->store(), 'Checks the store method.');

		// TestReflection::invoke($this->class, '_logtable');

		$this->assertEquals(8, $this->class->lft, 'Check new lft.');
		$this->assertEquals(9, $this->class->rgt, 'Check new rgt.');

		// We need to confirm the locking is called, so we create a mock.
		$class = $this->getMock(
			'NestedTable',
			array('_lock'),
			array(self::$driver)
		);

		$class->expects($this->any())->method('_lock')->will($this->returnValue(false));
		$this->assertFalse($class->store(), 'Checks a locked table returns false.');
	}

	/**
	 * Tests the `_getNode` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||	public function testStore()
	{
		$this->class->reset();
		$this->class->setLocation(102, 'last-child');

		$this->assertTrue($this->class->store(), 'Checks the store method.');

		// TestReflection::invoke($this->class, '_logtable');

		$this->assertEquals(8, $this->class->lft, 'Check new lft.');
		$this->assertEquals(9, $this->class->rgt, 'Check new rgt.');

		// We need to confirm the locking is called, so we create a mock.
		$class  = $this->getMockBuilder('NestedTable')
					->setMethods(array('_lock'))
					->setConstructorArgs(array(self::$driver))
					->getMock();

		$class->expects($this->any())->method('_lock')->will($this->returnValue(false));
		$this->assertFalse($class->store(), 'Checks a locked table returns false.');
	}

	/**
	 * Tests the `_getNode` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_STATIC_PROP)
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_PROP)
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))