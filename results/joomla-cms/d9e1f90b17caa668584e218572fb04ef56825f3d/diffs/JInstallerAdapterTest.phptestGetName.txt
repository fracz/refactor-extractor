	public function testGetName()
	{
		// Create the test object
		$mockInstaller = $this->getMock('JInstaller');
		$mockDatabase = $this->getMockDatabase();
		$object = $this->getMockForAbstractClass('JInstallerAdapter', array($mockInstaller, $mockDatabase));

		// Mock the manifest Object and set it into the test object
		$manifestObject = simplexml_load_string('<extension><name>plg_finder_content</name></extension>');
		$object->manifest = $manifestObject;

		$this->assertEquals(
			'plg_finder_content',
			$object->getName(),
			'The name was not retrieved correctly from JInstallerAdapter::getName()'
		);
	}


	/**
	 * @testdox Test getting the default route
	 */
||||||||	public function testGetName()
	{
		// Create the test object
		$mockInstaller = $this->getMockBuilder('JInstaller')->getMock();
		$mockDatabase = $this->getMockDatabase();
		$object = $this->getMockForAbstractClass('JInstallerAdapter', array($mockInstaller, $mockDatabase));

		// Mock the manifest Object and set it into the test object
		$manifestObject = simplexml_load_string('<extension><name>plg_finder_content</name></extension>');
		$object->manifest = $manifestObject;

		$this->assertEquals(
			'plg_finder_content',
			$object->getName(),
			'The name was not retrieved correctly from JInstallerAdapter::getName()'
		);
	}


	/**
	 * @testdox Test getting the default route
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR))))