	protected function tearDown()
	{
		$this->restoreFactoryState();

		if ($this->handler instanceof JCacheStorage)
		{
			$this->handler->clean($this->group);
		}

		parent::tearDown();
	}

	/**
	 * Check if the adapter is blacklisted in an environment
	 *
	 * @param   string  $name  The name of the adapter
	 *
	 * @return  boolean
	 */
||||||||	protected function tearDown()
	{
		$this->restoreFactoryState();

		if ($this->handler instanceof JCacheStorage)
		{
			// Deprecated, temporary have to stay because flush method is not implemented in all storages.
			$this->handler->clean($this->group);
			$this->handler->flush();
		}

		parent::tearDown();
	}

	/**
	 * Check if the adapter is blacklisted in an environment
	 *
	 * @param   string  $name  The name of the adapter
	 *
	 * @return  boolean
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_STATIC_CALL))