	public function install()
	{
		$app = &JFactory::getApplication();
		if(isset($this->downloadurl->_data)) {
			$url = $this->downloadurl->_data;
		} else {
			JError::raiseWarning('SOME_ERROR_CODE', JText::_('Invalid extension update'));
			return false;
		}

		jimport('joomla.installer.helper');
		$p_file = JInstallerHelper::downloadPackage($url);

		// Was the package downloaded?
		if (!$p_file) {
			JError::raiseWarning('SOME_ERROR_CODE', JText::_('Package download failed').': '. $url);
			return false;
		}

		$config =& JFactory::getConfig();
		$tmp_dest 	= $config->getValue('config.tmp_path');

		// Unpack the downloaded package file
		$package = JInstallerHelper::unpack($tmp_dest.DS.$p_file);

		// Get an installer instance
		$installer =& JInstaller::getInstance();

		// Install the package
		if (!$installer->install($package['dir'])) {
			// There was an error installing the package
			$msg = JText::sprintf('INSTALLEXT', JText::_($package['type']), JText::_('Error'));
			$result = false;
		} else {
			// Package installed sucessfully
			$msg = JText::sprintf('INSTALLEXT', JText::_($package['type']), JText::_('Success'));
			$result = true;
		}

		// Set some model state values
		$app->enqueueMessage($msg);

		$this->setState('name', $installer->get('name'));
		$this->setState('result', $result);
		$this->setState('message', $installer->message);
		$this->setState('extension.message', $installer->get('extension.message'));

		// Cleanup the install files
		if (!is_file($package['packagefile'])) {
			$config =& JFactory::getConfig();
			$package['packagefile'] = $config->getValue('config.tmp_path').DS.$package['packagefile'];
		}

		JInstallerHelper::cleanupInstall($package['packagefile'], $package['extractdir']);

		return $result;
	}
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))
                            (AST_VAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_VAR)))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_CONST))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))||||||||