||||||||	function display() {
		$mainframe	= &$this->getApplication();
		$db			= &$this->getDBO();
		$Itemid		= JRequest::getVar( 'Itemid' );

		$query = "SELECT p.id, p.title" .
				"\n FROM #__polls AS p, #__poll_menu AS pm" .
				"\n WHERE (pm.menuid = ".(int) $Itemid." OR pm.menuid = 0)" .
				"\n AND p.id = pm.pollid" .
				"\n AND p.published = 1";

		$db->setQuery($query);
		$polls = $db->loadObjectList();

		// try to find poll component's Itemid
		$query = "SELECT id"
		. "\n FROM #__menu"
		. "\n WHERE type = 'components'"
		. "\n AND published = 1"
		. "\n AND link = 'index.php?option=com_poll'"
		;
		$db->setQuery( $query );
		$_Itemid = $db->loadResult();

		if ($_Itemid) {
			$_Itemid = '&amp;Itemid='. $_Itemid;
		}

		if ($db->getErrorNum()) {
			echo $db->stderr(true);
			return;
		}

		foreach ($polls as $poll) {
			if ($poll->id && $poll->title) {
				$query = "SELECT id, text" .
						"\n FROM #__poll_data" .
						"\n WHERE pollid = $poll->id" .
						"\n AND text <> ''" .
						"\n ORDER BY id";
				$db->setQuery($query);

				if (!($options = $db->loadObjectList())) {
					echo "MD ".$db->stderr(true);
					return;
				}
				$this->_poll_vote_form_html($poll, $options, $_Itemid );
			}
		}
	}

	/**
	 * @param object Poll object
	 * @param array
	 * @param int The current menu item
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CAST
                            (AST_VAR)))
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ECHO
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST))))
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (SCALAR))
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (
                                    (AST_ECHO
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_CONST)))))
                                    (AST_RETURN
                                        (NULL)))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)))))))))