||||||||	function parse($uri)
	{
		$menu =& JMenu::getInstance();

		$params = array();

		// Check entry point
		$path = $uri->toString();
		if (!(preg_match( '#index\d?\.php#', $path) || (strpos($path, 'feed.php') == false))) {
			return;
		}

		// Get the base and full URLs
		$full = $uri->toString( array('scheme', 'host', 'port', 'path'));
		$base = JURI::base();

		$url = urldecode(trim(str_replace($base, '', $full), '/'));
		$url = str_replace('index.php/', '', $url);

		if (!$itemid = JRequest::getVar('Itemid'))
		{
			// Set document link
			$doc = & JFactory::getDocument();
			$doc->setLink($base);

			if (!empty($url))
			{
				//Need to reverse the array (highest sublevels first)
				$items = array_reverse($menu->getMenu());

				foreach ($items as $item)
				{
					if(strpos($url, $item->route) === 0) {
						$itemid = $item->id;
						$url    = str_replace($item->route, '', $url);
						break;
					}
				}

				//MOVE somwhere else
				/*$path = JPATH_BASE.DS.'components'.DS.'com_'.$component.DS.$component.'.php';
				// Do a quick check to make sure component exists
				if (!file_exists($path)) {
					JError::raiseError(404, JText::_('Invalid Request'));
					exit (404);
				}*/
			}
		}

		$item = $menu->getItem($itemid);

		$uri =& JURI::getInstance(($item) ? $item->link : null);
		$query = $uri->getQuery(true);

		JRequest::set($query, 'get', false);
		JRequest::setVar('Itemid', ($item) ? $item->id : null, 'get');

		// Use the custom sef handler if it exists
		$path = ($item) ? JPATH_BASE.DS.'components'.DS.$item->component.DS.'route.php' : null;

		$urlArray = explode('/', $url);
		array_shift($urlArray);

		if (count($urlArray) && file_exists($path))
		{
			require_once $path;
			$function =  substr($item->component, 4).'ParseRoute';
			$function($urlArray, $params);
		}
	}

	/**
 	 * Function to convert an internal URI to a route
 	 *
 	 * @param	string	$string	The internal URL
 	 * @return	string	The absolute search engine friendly URL
 	 * @since	1.0
 	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CONST))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)
                                                            (AST_VAR))))
                                                (AST_BREAK
                                                    (NULL)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR)
            (AST_CONST)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CONST))
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CONST))
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR)))
                (AST_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))))))