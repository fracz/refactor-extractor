	function _buildQuery()
	{
		$user =& JFactory::getUser();
		$aid = $user->get('aid', 0);

		//Query to retrieve all categories that belong under the web links section and that are published.
		$query = "SELECT *, COUNT(a.id) AS numlinks FROM #__categories AS cc" .
			"\n LEFT JOIN #__weblinks AS a ON a.catid = cc.id" .
			"\n WHERE a.published = 1" .
			"\n AND section = 'com_weblinks'" .
			"\n AND cc.published = 1".
			"\n AND cc.access <= ".(int) $aid.
			"\n GROUP BY cc.id" .
			"\n ORDER BY cc.ordering";

		return $query;
	}
}
?>||||||||	function _buildQuery()
	{
		$user =& JFactory::getUser();
		$aid = $user->get('aid', 0);

		//Query to retrieve all categories that belong under the web links section and that are published.
		$query = "SELECT *, COUNT(a.id) AS numlinks," .
			"\n CASE WHEN CHAR_LENGTH(cc.name) THEN CONCAT_WS(':', cc.id, cc.name) ELSE cc.id END as slug".
			"\n FROM #__categories AS cc".
			"\n LEFT JOIN #__weblinks AS a ON a.catid = cc.id" .
			"\n WHERE a.published = 1" .
			"\n AND section = 'com_weblinks'" .
			"\n AND cc.published = 1".
			"\n AND cc.access <= ".(int) $aid.
			"\n GROUP BY cc.id" .
			"\n ORDER BY cc.ordering";

		return $query;
	}
}
?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_CAST
                        (AST_VAR)))
                (SCALAR))
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (AST_CAST
                        (AST_VAR)))
                (SCALAR))
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))