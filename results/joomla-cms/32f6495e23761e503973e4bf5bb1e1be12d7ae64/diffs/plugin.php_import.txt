	function _import( $folder, $element, $published, $params='' )
	{
		global $_MAMBOTS, $mainframe; //needed for backwards compatibility

		$path = JPATH_ROOT.DS.'plugins'.DS.$folder.DS.$element.'.php';

		$result = false;

		if (file_exists( $path )) {
			require_once( $path );
			$result = true;

			$lang =& $mainframe->getLanguage();
			$lang->load( 'plg_'.trim( $folder ).'_'.trim( $element ), JPATH_ADMINISTRATOR );
		}

		return $result;
	}

	/**
	 * Loads the plugin data
	 *
	 * @access private
	 */
||||||||	function _import( $folder, $element, $published, $params='' )
	{
		global $_MAMBOTS, $mainframe; //needed for backwards compatibility

		$path = JPATH_ROOT.DS.'plugins'.DS.$folder.DS.$element.'.php';

		$result = false;

		if (file_exists( $path ))
		{
			require_once( $path );
			$result = true;

			$lang =& JFactory::getLanguage();
			$lang->load( 'plg_'.trim( $folder ).'_'.trim( $element ), JPATH_ADMINISTRATOR );
		}

		return $result;
	}

	/**
	 * Loads the plugin data
	 *
	 * @access private
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CONST))
                        (AST_VAR))
                    (AST_CONST))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CONST))
                        (AST_VAR))
                    (AST_CONST))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))