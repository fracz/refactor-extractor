||||||||	function sendmail()
	{
		global $mainframe, $Itemid;

		/*
		 * Initialize some variables
		 */
		$db = & $mainframe->getDBO();

		$SiteName 	= $mainframe->getCfg('sitename');
		$MailFrom 	= $mainframe->getCfg('mailfrom');
		$FromName 	= $mainframe->getCfg('fromname');
		$validate 	= mosHash( $mainframe->getCfg('db') );

		$default 	= sprintf(JText::_('MAILENQUIRY'), $SiteName);
		$option 	= JRequest::getVar('option');
		$contactId 	= JRequest::getVar('con_id');
		$validate 	= JRequest::getVar($validate, 		0, 			'post');
		$email 		= JRequest::getVar('email', 		'', 		'post');
		$text 		= JRequest::getVar('text', 			'', 		'post');
		$name 		= JRequest::getVar('name', 			'', 		'post');
		$subject 	= JRequest::getVar('subject', 		$default, 	'post');
		$emailCopy 	= JRequest::getVar('email_copy', 	0, 			'post');

		// probably a spoofing attack
		if (!$validate) {
			mosErrorAlert( _NOT_AUTH );
		}

		/*
		 * This obviously won't catch all attempts, but it does not hurt to make
		 * sure the request came from a client with a user agent string.
		 */
		if (!isset ($_SERVER['HTTP_USER_AGENT'])) {
			mosErrorAlert( _NOT_AUTH );
		}

		/*
		 * This obviously won't catch all attempts either, but we ought to check
		 * to make sure that the request was posted as well.
		 */
		if (!$_SERVER['REQUEST_METHOD'] == 'POST') {
			mosErrorAlert( _NOT_AUTH );
		}

		// An array of e-mail headers we do not want to allow as input
		$headers = array ('Content-Type:',
						  'MIME-Version:',
						  'Content-Transfer-Encoding:',
						  'bcc:',
						  'cc:');

		// An array of the input fields to scan for injected headers
		$fields = array ('email',
						 'text',
						 'name',
						 'subject',
						 'email_copy');

		/*
		 * Here is the meat and potatoes of the header injection test.  We
		 * iterate over the array of form input and check for header strings.
		 * If we fine one, send an unauthorized header and die.
		 */
		foreach ($fields as $field) {
			foreach ($headers as $header) {
				if (strpos($_POST[$field], $header) !== false) {
					mosErrorAlert( _NOT_AUTH );
				}
			}
		}

		/*
		 * Now that we have passed the header injection tests lets free up the
		 * used memory and continue.
		 */
		unset ($fields, $field, $headers, $header);

		/*
		 * Load the contact details
		 */
		$contact = new JTableContact($db);
		$contact->load($contactId);

		/*
		 * If there is no valid email address or message body then we throw an
		 * error and return false.
		 */
		jimport('joomla.utilities.mail');
		if (!$email || !$text || (JMailHelper::isEmailAddress($email) == false)) {
			JContactView::emailError();
		} else {
			$menu = JTable::getInstance( 'menu', $db );
			$menu->load( $Itemid );
			$mparams = new JParameter( $menu->params );
			$bannedEmail 	= $mparams->get( 'bannedEmail', 	'' );
			$bannedSubject 	= $mparams->get( 'bannedSubject', 	'' );
			$bannedText 	= $mparams->get( 'bannedText', 		'' );
			$sessionCheck 	= $mparams->get( 'sessionCheck', 	1 );

			// check for session cookie
			if  ( $sessionCheck ) {
				if ( !isset($_COOKIE[JSession::name()]) ) {
					mosErrorAlert( _NOT_AUTH );
				}
			}

			// Prevent form submission if one of the banned text is discovered in the email field
			if ( $bannedEmail ) {
				$bannedEmail = explode( ';', $bannedEmail );
				foreach ($bannedEmail as $value) {
					if ( JString::stristr($email, $value) ) {
						mosErrorAlert( _NOT_AUTH );
					}
				}
			}
			// Prevent form submission if one of the banned text is discovered in the subject field
			if ( $bannedSubject ) {
				$bannedSubject = explode( ';', $bannedSubject );
				foreach ($bannedSubject as $value) {
					if ( JString::stristr($subject, $value) ) {
						mosErrorAlert( _NOT_AUTH );
					}
				}
			}
			// Prevent form submission if one of the banned text is discovered in the text field
			if ( $bannedText ) {
				$bannedText = explode( ';', $bannedText );
				foreach ($bannedText as $value) {
					if ( JString::stristr($text, $value) ) {
						mosErrorAlert( _NOT_AUTH );
					}
				}
			}

			// test to ensure that only one email address is entered
			$check = explode( '@', $email );
			if ( strpos( $email, ';' ) || strpos( $email, ',' ) || strpos( $email, ' ' ) || count( $check ) > 2 ) {
				mosErrorAlert( JText::_( 'You cannot enter more than one email address', true ) );
			}

			/*
			 * Prepare email body
			 */
			$prefix = sprintf(JText::_('ENQUIRY_TEXT'), $mainframe->getBaseURL());
			$text 	= $prefix."\n".$name.' <'.$email.'>'."\r\n\r\n".stripslashes($text);

			// Send mail
			josMail($email, $name, $contact->email_to, $FromName.': '.$subject, $text);

			/*
			 * If we are supposed to copy the admin, do so.
			 */
			// parameter check
			$menuParams 		= new JParameter( $contact->params );
			$emailcopyCheck = $menuParams->get( 'email_copy', 0 );

			// check whether email copy function activated
			if ( $emailCopy && $emailcopyCheck ) {
				$copyText 		= sprintf(JText::_('Copy of:'), $contact->name, $SiteName);
				$copyText 		.= "\r\n\r\n".$text;
				$copySubject 	= JText::_('Copy of:')." ".$subject;
				josMail($MailFrom, $FromName, $email, $copySubject, $copyText);
			}

			$link = sefRelToAbs( 'index.php?option=com_contact&task=view&contact_id='. $contactId .'&Itemid='. $Itemid );
			$text = JText::_( 'Thank you for your e-mail', true );

			josRedirect( $link, $text );
		}
	}

	/**
	 * Method to output a vCard
	 *
	 * @static
	 * @since 1.0
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_CALL
                    (
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_VAR)))
                                (AST_CONST))
                            (
                                (AST_CALL
                                    (
                                        (AST_CONST))))))))))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_CONST)))
            (
                (AST_STATIC_CALL)))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_STATIC_CALL))))
                                    (
                                        (AST_CALL
                                            (
                                                (AST_CONST)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_CONST)))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_CONST))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (SCALAR))
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_CONST))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))