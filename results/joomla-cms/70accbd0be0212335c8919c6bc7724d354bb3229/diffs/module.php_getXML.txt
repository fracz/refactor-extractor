	protected function &_getXML()
	{
		if (!$this->_xml)
		{
			$clientId	= $this->getState('clientId', 0);
			$path		= ($clientId == 1) ? 'mod1_xml' : 'mod0_xml';
			$module		= &$this->getData();

			if ($module->module == 'custom') {
				$xmlpath = JApplicationHelper::getPath($path, 'mod_custom');
			} else {
				$xmlpath = JApplicationHelper::getPath($path, $module->module);
			}

			if (file_exists($xmlpath))
			{
				$xml = &JFactory::getXMLParser('Simple');
				if ($xml->loadFile($xmlpath)) {
					$this->_xml = &$xml;
				}
			}
		}
		return $this->_xml;
	}

	/**
	 * Method to load module data
	 *
	 * @return	boolean	True on success
	 * @since	1.6
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN_REF
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||