	function delete()
	{
		// Check for request forgeries
		//JRequest::checkToken() or jexit(JText::_('JInvalid_Token'));

		$model = $this->getModel('template');
		$client		= &$model->getClient();
		$template	= &$model->getTemplate();
		$id	= &$model->getId();


		if (!$template) {
			$this->setRedirect('index.php?option=com_templates&client='.$client->id, JText::_('Operation Failed').': '.JText::_('No template specified.'));
			return;
		}

		if ($model->delete()) {
			$msg = JText::_('Template Saved');
		} else {
			$msg = JText::_('Error Saving Template') . $model->getError();
		}
		$this->setRedirect('index.php?option=com_templates&task=edit&template='.$template.'&client='.$client->id, $msg);
	}

	/**
	* Preview Template
	*/
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_VAR))))||||||||