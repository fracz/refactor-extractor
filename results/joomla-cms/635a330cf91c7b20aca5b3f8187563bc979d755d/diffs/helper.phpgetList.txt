	public static function getList(&$params)
	{
		$useDefault = $params->get('default');
		$db = JFactory::getDBO();
		$query = $db->getQuery(true);;
		$query->from($db->nameQuote('#__languages'));
		$query->select($db->nameQuote('lang_code'));
		$query->select($db->nameQuote('title'));
		$query->select($db->nameQuote('image'));
		$query->select($db->nameQuote('sef'));
		$query->where($db->nameQuote('published').'=1');
		$db->setQuery($query);
		$result = $db->loadObjectList('lang_code');
		$query->clear();
		$query->from($db->nameQuote('#__menu'));
		$query->select('id');
		$query->select('language');
		$query->where('home=1');
		$db->setQuery($query);
		$home = $db->loadObjectList('language');
		foreach($result as $i=>&$language) {
			if (!JLanguage::exists($language->lang_code)) {
				unset($result[$i]);
			}
			else {
				$language->id = array_key_exists($language->lang_code, $home) ? $home[$language->lang_code]->id : $home['*']->id;
			}
		}
		if (false && $useDefault && count($result)) {
			$option = array();
			$option['text'] = JText::_('MOD_LANGUAGES_OPTION_DEFAULT_LANGUAGE');
			$option['value'] = 'default';
			$option['image'] = 'default';
			$config =& JFactory::getConfig();
			$paramsLanguagues =  JComponentHelper::getParams('com_languages');
			$option['redirect']=$result[$paramsLanguagues->get('site', $config->get('language','en-GB'))]['redirect'];
			array_unshift($result, $option);
		}
		return $result;
	}
}||||||||	public static function getList(&$params)
	{
		$languages	= JLanguageHelper::getLanguages();
		$db			= JFactory::getDBO();
		$query		= $db->getQuery(true);

		$query->select('id');
		$query->select('language');
		$query->from($db->nameQuote('#__menu'));
		$query->where('home=1');
		$db->setQuery($query);
		$homes = $db->loadObjectList('language');

		foreach($languages as $i => &$language) {
			if (!JLanguage::exists($language->lang_code)) {
				unset($languages[$i]);
			}
			else {
				$language->id = isset($homes[$language->lang_code]) ? $homes[$language->lang_code]->id : $homes['*']->id;
			}
		}
		return $languages;
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR)))
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR))))))
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_VAR)))