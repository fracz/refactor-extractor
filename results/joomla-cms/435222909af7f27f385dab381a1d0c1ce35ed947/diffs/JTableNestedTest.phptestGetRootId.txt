	public function testGetRootId()
	{
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for parent_id = 0 case.');

		// Change the id of the root node.
		self::$driver->setQuery('UPDATE #__categories SET parent_id = 99 WHERE id = 1')->execute();
		$this->class->resetRootId();
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for lft = 0 case.');

		// Change the lft of the root node.
		self::$driver->setQuery('UPDATE #__categories SET lft = 99, alias = ' . self::$driver->q('root') . ' WHERE id = 1')->execute();
		$this->class->resetRootId();
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for alias = root case.');

		// Change the alias of the root node.
		self::$driver->setQuery('UPDATE #__categories SET alias = ' . self::$driver->q('foo') . ' WHERE id = 1')->execute();
		$this->class->resetRootId();
		$this->assertFalse($this->class->getRootId(), 'Checks for failure.');
	}

	/**
	 * Tests the `getTree` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||	public function testGetRootId()
	{
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for parent_id = 0 case.');

		// Change the id of the root node.
		self::$driver->setQuery('UPDATE #__categories SET parent_id = 99 WHERE id = 1')->execute();
		NestedTable::resetRootId();
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for lft = 0 case.');

		// Change the lft of the root node.
		self::$driver->setQuery('UPDATE #__categories SET lft = 99, alias = ' . self::$driver->q('root') . ' WHERE id = 1')->execute();
		NestedTable::resetRootId();
		$this->assertEquals(1, $this->class->getRootId(), 'Checks for alias = root case.');

		// Change the alias of the root node.
		self::$driver->setQuery('UPDATE #__categories SET alias = ' . self::$driver->q('foo') . ' WHERE id = 1')->execute();
		NestedTable::resetRootId();
		$this->assertFalse($this->class->getRootId(), 'Checks for failure.');
	}

	/**
	 * Tests the `getTree` method.
	 *
	 * @return  void
	 *
	 * @since   12.1
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (SCALAR))))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (SCALAR))))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (SCALAR))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (SCALAR))))
                    (SCALAR)))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_PROP)
                            (
                                (SCALAR))))
                    (SCALAR)))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (SCALAR))))