	function editNewsFeed(&$row, &$lists, $option)
	{
		JRequest::setVar('hidemainmenu', 1);

		JFilterOutput::objectHTMLSafe($row, ENT_QUOTES);
		?>
		<script language="javascript" type="text/javascript">
		function submitbutton(pressbutton) {
			var form = document.adminForm;
			if (pressbutton == 'cancel') {
				submitform(pressbutton);
				return;
			}

			// do field validation
			if (form.name.value == '') {
				alert("<?php echo JText::_('Please fill in the newsfeed name.', true); ?>");
			} else if (form.catid.value == 0) {
				alert("<?php echo JText::_('Please select a Category.', true); ?>");
			} else if (form.link.value == '') {
				alert("<?php echo JText::_('Please fill in the newsfeed link.', true); ?>");
			} else if (getSelectedValue('adminForm','catid') < 0) {
				alert("<?php echo JText::_('Please select a category.', true); ?>");
			} else if (form.numarticles.value == "" || form.numarticles.value == 0) {
				alert("<?php echo JText::_('VALIDARTICLESDISPLAY', true); ?>");
			} else if (form.cache_time.value == "" || form.cache_time.value == 0) {
				alert("<?php echo JText::_('Please fill in the cache refresh time.', true); ?>");
			} else {
				submitform(pressbutton);
			}
		}
		</script>

		<form action="index.php" method="post" name="adminForm">

		<div class="col100">
			<fieldset class="adminform">
				<legend><?php echo JText::_('Details'); ?></legend>

				<table class="admintable">
				<tr>
					<td width="170" class="key">
						<label for="name">
							<?php echo JText::_('Name'); ?>
						</label>
					</td>
					<td>
						<input class="inputbox" type="text" size="40" name="name" id="name" value="<?php echo $row->name; ?>" />
					</td>
				</tr>
				<tr>
					<td width="170" class="key">
						<label for="name">
							<?php echo JText::_('Alias'); ?>
						</label>
					</td>
					<td>
						<input class="inputbox" type="text" size="40" name="alias" id="alias" value="<?php echo $row->alias; ?>" />
					</td>
				</tr>
				<tr>
					<td valign="top" align="right" class="key">
						<?php echo JText::_('Published'); ?>:
					</td>
					<td>
						<?php echo $lists['published']; ?>
					</td>
				</tr>
				<tr>
					<td class="key">
						<label for="catid">
							<?php echo JText::_('Category'); ?>
						</label>
					</td>
					<td>
						<?php echo $lists['category']; ?>
					</td>
				</tr>
				<tr>
					<td class="key">
						<label for="link">
							<?php echo JText::_('Link'); ?>
						</label>
					</td>
					<td>
						<input class="inputbox" type="text" size="60" name="link" id="link" value="<?php echo $row->link; ?>" />
					</td>
				</tr>
				<tr>
					<td class="key">
						<label for="numarticles">
							<?php echo JText::_('Number of Articles'); ?>
						</label>
					</td>
					<td>
						<input class="inputbox" type="text" size="2" name="numarticles" id="numarticles" value="<?php echo $row->numarticles; ?>" />
					</td>
				</tr>
				<tr>
					<td class="key">
						<span class="editlinktip hasTip" title="<?php echo JText::_('TIPCACHETIME'); ?>">
					<?php echo JText::_('Cache time'); ?>
				</span>
					</td>
					<td>
						<input class="inputbox" type="text" size="4" name="cache_time" id="cache_time" value="<?php echo $row->cache_time; ?>" />
					</td>
				</tr>
				<tr>
					<td class="key">
						<label for="ordering">
							<?php echo JText::_('Ordering'); ?>
						</label>
					</td>
					<td>
						<?php echo $lists['ordering']; ?>
					</td>
				</tr>

				<tr>
					<td class="key">
						<label for="rtl">
							<?php echo JText::_('RTL feed'); ?>
						</label>
					</td>
					<td>
						<?php echo $lists['rtl']; ?>
					</td>
				</tr>
				<tr>
					<td colspan="2" align="center">
					</td>
				</tr>
				</table>
			</fieldset>
		</div>
		<div class="clr"></div>

		<input type="hidden" name="id" value="<?php echo $row->id; ?>" />
		<input type="hidden" name="cid[]" value="<?php echo $row->id; ?>" />
		<input type="hidden" name="option" value="<?php echo $option; ?>" />
		<input type="hidden" name="task" value="" />
		<?php echo JHtml::_('form.token'); ?>
		</form>
	<?php
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_PROP
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR)))||||||||