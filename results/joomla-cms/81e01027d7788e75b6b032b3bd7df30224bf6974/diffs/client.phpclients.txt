	function clients(&$rows, &$pageNav, &$lists)
	{
		BannersViewClients::setClientsToolbar();
		$user = &JFactory::getUser();
		JHtml::_('behavior.tooltip');
		?>
		<form action="index.php" method="post" name="adminForm">
			<fieldset id="filter-bar">
				<div class="filter-search fltlft">
					<label class="filter-search-lbl"><?php echo JText::_('Filter'); ?>:</label>
					<input type="text" name="search" id="search" value="<?php echo $lists['search'];?>" class="text_area" onchange="document.adminForm.submit();" />
					<button onclick="this.form.submit();"><?php echo JText::_('Go'); ?></button>
					<button onclick="document.getElementById('search').value='';this.form.submit();"><?php echo JText::_('Reset'); ?></button>
				</div>
			</fieldset>
			<div class="clr"> </div>
			<table class="adminlist">
			<thead>
			<tr>
				<th width="20">
					<?php echo JText::_('Num'); ?>
				</th>
				<th width="20">
					<input type="checkbox" name="toggle" value="" onclick="checkAll(<?php echo count($rows); ?>);" />
				</th>
				<th class="nowrap">
					<?php echo JHtml::_('grid.sort',   'Client Name', 'a.name', @$lists['order_Dir'], @$lists['order']); ?>
				</th>
				<th class="nowrap" width="35%">
					<?php echo JHtml::_('grid.sort',   'Contact', 'a.contact', @$lists['order_Dir'], @$lists['order']); ?>
				</th>
				<th class="nowrap center" width="5%">
					<?php echo JHtml::_('grid.sort',   'No. of Active Banners', 'bid', @$lists['order_Dir'], @$lists['order']); ?>
				</th>
				<th width="1%" class="nowrap">
					<?php echo JHtml::_('grid.sort',   'ID', 'a.cid', @$lists['order_Dir'], @$lists['order']); ?>
				</th>
			</tr>
			</thead>
			<tfoot>
			<tr>
				<td colspan="6">
					<?php echo $pageNav->getListFooter(); ?>
				</td>
			</tr>
			</tfoot>
			<tbody>
			<?php
			$k = 0;
			for ($i=0, $n=count($rows); $i < $n; $i++) {
				$row = &$rows[$i];

				$row->id		= $row->cid;
				$link			= JRoute::_('index.php?option=com_banners&c=client&task=edit&cid[]='. $row->id);

				$checked		= JHtml::_('grid.checkedout',   $row, $i);
				?>
				<tr class="<?php echo "row$k"; ?>">
					<td class="center">
						<?php echo $pageNav->getRowOffset($i); ?>
					</td>
					<td>
						<?php echo $checked; ?>
					</td>
					<td>
						<?php
						if (JTable::isCheckedOut($user->get ('id'), $row->checked_out)) {
							echo $row->name;
						} else {
							?>
								<span class="editlinktip hasTip" title="<?php echo JText::_('Edit');?>::<?php echo $row->name; ?>">
							<a href="<?php echo $link; ?>">
								<?php echo $row->name; ?></a>
								</span>
							<?php
						}
						?>
					</td>
					<td class="center">
						<?php echo $row->contact; ?>
					</td>
					<td class="center">
						<?php echo $row->nbanners;?>
					</td>
					<td class="center">
						<?php echo $row->cid; ?>
					</td>
				</tr>
				<?php
				$k = 1 - $k;
			}
			?>
			</tbody>
			</table>

		<input type="hidden" name="c" value="client" />
		<input type="hidden" name="option" value="com_banners" />
		<input type="hidden" name="task" value="" />
		<input type="hidden" name="boxchecked" value="0" />
		<input type="hidden" name="filter_order" value="<?php echo $lists['order']; ?>" />
		<input type="hidden" name="filter_order_Dir" value="<?php echo $lists['order_Dir']; ?>" />
		<?php echo JHtml::_('form.token'); ?>
		</form>
		<?php
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_VAR))
            (AST_ECHO
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ECHO
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ECHO
                            (SCALAR))
                        (AST_ECHO
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (AST_ECHO
                            (SCALAR))
                        (AST_ECHO
                            (AST_PROP
                                (AST_VAR)))
                        (AST_ECHO
                            (SCALAR))
                        (AST_ECHO
                            (AST_VAR))
                        (AST_ECHO
                            (SCALAR))
                        (AST_ECHO
                            (AST_PROP
                                (AST_VAR)))
                        (AST_ECHO
                            (SCALAR)))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_PROP
                    (AST_VAR)))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_PROP
                    (AST_VAR)))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_PROP
                    (AST_VAR)))
            (AST_ECHO
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR)))||||||||