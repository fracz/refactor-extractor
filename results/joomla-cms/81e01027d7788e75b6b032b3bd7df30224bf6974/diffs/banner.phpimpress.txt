	function impress($list)
	{
		$config = &JComponentHelper::getParams('com_banners');
		$db		= &$this->getDbo();
		$n		= count($list);

		$trackImpressions = $config->get('track_impressions');
		$trackDate = JFactory::getDate()->toFormat('%Y-%m-%d');

		// TODO: Change loop single sql with where bid = x OR bid = y format
		for ($i = 0; $i < $n; $i++) {
			$item = &$list[$i];

			$item->impmade++;
			$expire = ($item->impmade >= $item->imptotal) && ($item->imptotal != 0);

			$query = 'UPDATE #__banner'
			. ' SET impmade = impmade + 1'
			. ($expire ? ', showBanner=0' : '')
			. ' WHERE bid = '.(int) $item->bid
			;
			$db->setQuery($query);

			if (!$db->query()) {
				JError::raiseError(500, $db->stderror());
			}

			if ($trackImpressions)
			{
				// TODO: Add impression tracking
				/*
				$query = 'UPDATE #__bannertrack SET' .
					' track_type = 1,' .
					' banner_id = ' . $item->bid;
				*/
				$query = 'INSERT INTO #__bannertrack (track_type, banner_id, track_date)' .
					' VALUES (1, '.(int) $item->bid.', '.$db->Quote($trackDate).')'
					;
				$db->setQuery($query);

				if (!$db->query()) {
					JError::raiseError(500, $db->stderror());
				}
			}
		}
	}

	/**
	 * Clicks the URL, incrementing the counter
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (SCALAR))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_POST_INC
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_CAST
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))))))))))||||||||