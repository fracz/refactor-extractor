||||||||	public function testGetRecursively()
	{
		$this->response->code = 200;
		$this->response->body = $this->sampleString;

		$this->client->expects($this->once())
			->method('get')
			->with('/repos/joomla/joomla-platform/git/trees/12345?recursive=1', 0, 0)
			->will($this->returnValue($this->response));

		$this->assertThat(
			$this->object->getRecursively('joomla', 'joomla-platform', '12345'),
			$this->equalTo(json_decode($this->response->body))
		);
	}

	/**
	 * @covers JGithubPackageDataTrees::create
	 * @todo   Implement testCreate().
	 *
	 * POST /repos/:owner/:repo/git/trees
	Input

	{
	"tree": [
	{
	"path": "file.rb",
	"mode": "100644",
	"type": "blob",
	"sha": "44b4fc6d56897b048c772eb4087f854f46256132"
	}
	]
	}

	Response

	Status: 201 Created
	Location: https://api.github.com/repos/:owner/:repo/git/trees/:sha
	X-RateLimit-Limit: 5000
	X-RateLimit-Remaining: 4999

	{
	"sha": "cd8274d15fa3ae2ab983129fb037999f264ba9a7",
	"url": "https://api.github.com/repo/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7",
	"tree": [
	{
	"path": "file.rb",
	"mode": "100644",
	"type": "blob",
	"size": 132,
	"sha": "7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b",
	"url": "https://api.github.com/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b"
	}
	]
	}


	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))))))