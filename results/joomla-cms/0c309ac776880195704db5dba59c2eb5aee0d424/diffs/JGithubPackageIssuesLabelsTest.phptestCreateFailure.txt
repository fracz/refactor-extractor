||||||||	public function testCreateFailure()
	{
		$this->response->code = 404;
		$this->response->body = $this->errorString;

		$this->client->expects($this->once())
			->method('post')
			->with('/repos/joomla/joomla-platform/labels', '{"name":"foobar","color":"red"}', 0, 0)
			->will($this->returnValue($this->response));

		$this->assertThat(
			$this->object->create('joomla', 'joomla-platform', 'foobar', 'red'),
			$this->equalTo(json_decode($this->response->body))
		);
	}

	/**
	 * @covers JGithubPackageIssuesLabels::update
	 * @todo   Implement testUpdate().
	 *
	 * PATCH /repos/:owner/:repo/labels/:name

	Input

	name
	Required string
	color
	Required string - 6 character hex code, without a leading #.

	{
	"name": "API",
	"color": "FFFFFF"
	}

	Response

	Status: 200 OK
	X-RateLimit-Limit: 5000
	X-RateLimit-Remaining: 4999

	{
	"url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
	"name": "bug",
	"color": "f29513"
	}
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))))))