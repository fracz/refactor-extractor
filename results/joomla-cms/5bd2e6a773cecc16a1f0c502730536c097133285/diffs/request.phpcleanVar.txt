	function cleanVar(& $var, $mask = 0)
	{
		/*
		 * Static input filters for specific settings
		 */
		static $noHtmlFilter = null;
		static $safeHtmlFilter = null;

		// Initialize variables
		$return = null;

		// Ensure the variable to clean is a string
		if (is_string($var))
		{
			/*
			 * If the no trim flag is not set, trim the variable
			 */
			if (!($mask & 1))
			{
				$var = trim($var);
			}

			/*
			 * Now we handle input filtering
			 */
			if ($mask & 2)
			{
				/*
				 * If the allow raw flag is set, do not modify the variable
				 */
				$return = $var;
			} elseif ($mask & 4)
			{
				/*
				 * If the allow html flag is set, apply a safe html filter to the variable
				 */
				if (is_null($safeHtmlFilter))
				{
					$safeHtmlFilter = new InputFilter(null, null, 1, 1);
				}
				$return = $safeHtmlFilter->process($var);
			} else
			{
				/*
				 * Since no allow flags were set, we will apply the most strict filter to the variable
				 */
				if (is_null($noHtmlFilter))
				{
					$noHtmlFilter = new InputFilter(/* $tags, $attr, $tag_method, $attr_method, $xss_auto */
					);
				}
				$return = $noHtmlFilter->process($var);
			}

			/*
			 * Handle magic quotes compatability
			 */
			if (get_magic_quotes_gpc()) {
				$return = stripslashes($return);
			}
		}
		elseif (is_array($var))
		{
			/*
			 * If the variable to clean is an array, recursively iterate through it
			 */
			foreach ($var as $offset)
			{
				$offset = JRequest :: cleanVar($offset, $mask);
			}
			$return = $var;
		} else
		{
			/*
			 * If the variable is neither an array or string just return the raw value
			 */
			$return = $var;
		}
		return $return;
	}
}
?>||||||||	function cleanVar(& $var, $mask = 0)
	{
		/*
		 * Static input filters for specific settings
		 */
		static $noHtmlFilter = null;
		static $safeHtmlFilter = null;

		// Initialize variables
		$return = null;

		// Ensure the variable to clean is a string
		if (is_string($var))
		{
			/*
			 * If the no trim flag is not set, trim the variable
			 */
			if (!($mask & 1))
			{
				$var = trim($var);
			}

			/*
			 * Now we handle input filtering
			 */
			if ($mask & 2)
			{
				/*
				 * If the allow raw flag is set, do not modify the variable
				 */
				$return = $var;
			} elseif ($mask & 4)
			{
				/*
				 * If the allow html flag is set, apply a safe html filter to the variable
				 */
				if (is_null($safeHtmlFilter))
				{
					jimport( 'phpinputfilter.inputfilter' );
					$safeHtmlFilter = new InputFilter(null, null, 1, 1);
				}
				$return = $safeHtmlFilter->process($var);
			} else
			{
				/*
				 * Since no allow flags were set, we will apply the most strict filter to the variable
				 */
				if (is_null($noHtmlFilter))
				{
					jimport( 'phpinputfilter.inputfilter' );
					$noHtmlFilter = new InputFilter(/* $tags, $attr, $tag_method, $attr_method, $xss_auto */
					);
				}
				$return = $noHtmlFilter->process($var);
			}

			/*
			 * Handle magic quotes compatability
			 */
			if (get_magic_quotes_gpc()) {
				$return = stripslashes($return);
			}
		}
		elseif (is_array($var))
		{
			/*
			 * If the variable to clean is an array, recursively iterate through it
			 */
			foreach ($var as $offset)
			{
				$offset = JRequest :: cleanVar($offset, $mask);
			}
			$return = $var;
		} else
		{
			/*
			 * If the variable is neither an array or string just return the raw value
			 */
			$return = $var;
		}
		return $return;
	}
}
?>||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_NEW
                                                (
                                                    (AST_CONST)
                                                    (AST_CONST)
                                                    (SCALAR)
                                                    (SCALAR)))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_NEW)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_NEW
                                                (
                                                    (AST_CONST)
                                                    (AST_CONST)
                                                    (SCALAR)
                                                    (SCALAR)))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_NEW)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))