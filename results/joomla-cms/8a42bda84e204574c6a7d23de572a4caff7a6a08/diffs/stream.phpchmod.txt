||||||||	function chmod($filename='', $mode=0) {
		if(!$filename) {
			if(!isset($this->filename) || !$this->filename) {
				$this->setError(JText::_('Filename not set'));
				return false;
			}
			$filename = $this->filename;
		}

		// if no mode is set use the default
		if(!$mode) $mode = $this->filemode;

		$retval = false;
		// Capture PHP errors
		$php_errormsg = '';
		$track_errors = ini_get('track_errors');
		ini_set('track_errors', true);
		$sch = parse_url($filename, PHP_URL_SCHEME);
		// scheme specific options; ftp's chmod support is fun
		switch($sch) {
			case 'ftp':
			case 'ftps':
				$res = JFilesystemHelper::ftpChmod($filename, $mode);
				break;
			default:
				//echo '<p>Chmodding '. $filename . ' with ' . decoct($mode) .'</p>';
				$res = chmod($filename, $mode);
				break;
		}
		// seek, interestingly returns 0 on success or -1 on failure
		if(!$res) {
			$this->setError($php_errormsg);
		} else {
			$retval = true;
		}
		// restore error tracking to what it was before
		ini_set('track_errors',$track_errors);
		// return the result
		return $retval;
	}

	// ----------------------------
	// Stream contexts
	// ----------------------------

    /**
     * Builds the context from the array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))