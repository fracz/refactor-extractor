	public static function calendar($value, $name, $id, $format = '%Y-%m-%d', $attribs = null)
	{
		JHTML::_('behavior.calendar'); //load the calendar behavior

		if (is_array($attribs)) {
			$attribs = JArrayHelper::toString( $attribs );
		}
		$document =& JFactory::getDocument();
		$document->addScriptDeclaration('window.addEvent(\'domready\', function() {Calendar.setup({
		inputField	:	"'.$id.'",	 // id of the input field
		ifFormat	:	"'.$format.'",	  // format of the input field
		button		:	"'.$id.'_img",  // trigger for the calendar (button ID)
		align		:	"Tl",		   // alignment (defaults to "Bl")
		singleClick	:	true
	});});');

		return '<input type="text" name="'.$name.'" id="'.$id.'" value="'.htmlspecialchars($value, ENT_COMPAT, 'UTF-8').'" '.$attribs.' />'.
				 '<img class="calendar" src="'.JURI::root(true).'/templates/system/images/calendar.png" alt="calendar" id="'.$id.'_img" />';
	}

	/**
	 * Add a directory where JHTML should search for helpers. You may
	 * either pass a string or an array of directories.
	 *
	 * @access	public
	 * @param	string	A path to search.
	 * @return	array	An array with directory elements
	 * @since	1.5
	 */
||||||||	public static function calendar($value, $name, $id, $format = '%Y-%m-%d', $attribs = null)
	{
		// Load the calendar behavior
		JHtml::_('behavior.calendar');

		if (is_array($attribs)) {
			$attribs = JArrayHelper::toString($attribs);
		}
		$document = &JFactory::getDocument();
		$document->addScriptDeclaration(
			'window.addEvent(\'domready\', function() {Calendar.setup({'
			. 'inputField:"' . $id . '",'       // Id of the input field
			. 'ifFormat:"' . $format . '",'     // Format of the input field
			. 'button:"' . $id . '_img",'       // Trigger for the calendar (button ID)
			. 'align:"Tl",'                     // Alignment (defaults to "Bl")
			. 'singleClick:true'
			. '});});'
		);

		return '<input type="text" name="' . $name . '" id="' . $id . '"'
			. ' value="' . htmlspecialchars($value, ENT_COMPAT, 'UTF-8') . '" '
			. $attribs . ' />'
			. '<img class="calendar" src="' .JURI::root(true)
			. '/templates/system/images/calendar.png" alt="calendar" id="' . $id . '_img" />';
	}

	/**
	 * Add a directory where JHtml should search for helpers. You may
	 * either pass a string or an array of directories.
	 *
	 * @access	public
	 * @param	string	A path to search.
	 * @return	array	An array with directory elements
	 * @since	1.5
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CONST)
                                                    (SCALAR))))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_CONST))))
                    (SCALAR))
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (SCALAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (SCALAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (SCALAR))
                                                        (AST_VAR))
                                                    (SCALAR))
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CONST)
                                                    (SCALAR))))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_STATIC_CALL
                            (
                                (AST_CONST))))
                    (SCALAR))
                (AST_VAR))
            (SCALAR))))