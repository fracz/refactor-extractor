	function showDelete( $option, $cid, $items, $type, $return ) {
	?>
		<form action="index.php?option=com_trash&amp;task=<?php echo $return; ?>" method="post" name="adminForm">

		<table class="adminform">
		<tr>
			<td width="3%">
			</td>
			<td  valign="top" width="20%">
				<strong><?php echo JText::_( 'Number of Items' ); ?>:</strong>
				<br />
				<font color="#000066"><strong><?php echo count( $cid ); ?></strong></font>
				<br /><br />
			</td>
			<td  valign="top" width="25%">
				<strong><?php echo JText::_( 'Items being Deleted' ); ?>:</strong>
				<br />
				<?php
				echo "<ol>";
				foreach ( $items as $item ) {
					echo "<li>". $item->name ."</li>";
				}
				echo "</ol>";
				?>
				</td>
				 <td valign="top"><?php echo JText::_( 'PERMDELETETHESEITEMS' ); ?>
				<br /><br /><br />
				<a class="icon-32-delete" style="border: 1px dotted gray; width: 70px; padding: 10px; margin-left: 50px; background-repeat: no-repeat; padding-left: 40px; "  href="javascript:void submitbutton('delete')">
				&nbsp;<?php echo JText::_( 'Delete' ); ?></a>
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
		</tr>
		</table>
		<br /><br />

		<input type="hidden" name="option" value="<?php echo $option;?>" />
		<input type="hidden" name="task" value="" />
		<input type="hidden" name="boxchecked" value="1" />
		<input type="hidden" name="type" value="<?php echo $type; ?>" />
		<input type="hidden" name="return" value="<?php echo $return;?>" />
		<?php
		foreach ($cid as $id) {
			echo "\n<input type=\"hidden\" name=\"cid[]\" value=\"$id\" />";
		}
		?>
		<?php echo JHTML::_( 'form.token' ); ?>
		</form>
		<?php
	}

	/**
	* A restore confirmation page
	* Writes list of the items that have been selected for restore
	*/
||||||||	function showDelete( $option, $cid, $items, $type, $return ) {
	?>
		<form action="<?php echo JRoute::_('index.php?option=com_trash&amp;task=' . $return); ?>" method="post" name="adminForm">

		<table class="adminform">
		<tr>
			<td width="3%">
			</td>
			<td  valign="top" width="20%">
				<strong><?php echo JText::_( 'Number of Items' ); ?>:</strong>
				<br />
				<font color="#000066"><strong><?php echo count( $cid ); ?></strong></font>
				<br /><br />
			</td>
			<td  valign="top" width="25%">
				<strong><?php echo JText::_( 'Items being Deleted' ); ?>:</strong>
				<br />
				<?php
				echo "<ol>";
				foreach ( $items as $item ) {
					echo "<li>". $item->name ."</li>";
				}
				echo "</ol>";
				?>
				</td>
				 <td valign="top"><?php echo JText::_( 'PERMDELETETHESEITEMS' ); ?>
				<br /><br /><br />
				<a class="icon-32-delete" style="border: 1px dotted gray; width: 70px; padding: 10px; margin-left: 50px; background-repeat: no-repeat; padding-left: 40px; "  href="javascript:void submitbutton('delete')">
				&nbsp;<?php echo JText::_( 'Delete' ); ?></a>
			</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
		</tr>
		</table>
		<br /><br />

		<input type="hidden" name="option" value="<?php echo $option;?>" />
		<input type="hidden" name="task" value="" />
		<input type="hidden" name="boxchecked" value="1" />
		<input type="hidden" name="type" value="<?php echo $type; ?>" />
		<input type="hidden" name="return" value="<?php echo $return;?>" />
		<?php
		foreach ($cid as $id) {
			echo "\n<input type=\"hidden\" name=\"cid[]\" value=\"$id\" />";
		}
		?>
		<?php echo JHTML::_( 'form.token' ); ?>
		</form>
		<?php
	}

	/**
	* A restore confirmation page
	* Writes list of the items that have been selected for restore
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ECHO
        (SCALAR)))