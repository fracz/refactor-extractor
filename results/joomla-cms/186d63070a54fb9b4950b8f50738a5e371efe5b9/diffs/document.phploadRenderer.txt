	function &loadRenderer( $type )
	{
		$null	= null;
		$class	= 'JDocumentRenderer'.$type;

		if( !class_exists( $class ) )
		{
			$path = dirname(__FILE__).DS.$this->_type.DS.'renderer'.DS.$type.'.php';
			if(file_exists($path)) {
				require_once($path);
			} else {
				JError::raiseError(500,JText::_('Unable to load renderer class'));
			}
		}

		if ( !class_exists( $class ) ) {
			return $null;
		}

		$instance = new $class($this);
		return $instance;
	}

	/**
	 * Outputs the document
	 *
	 * @access public
	 * @param boolean 	$cache		If true, cache the output
	 * @param boolean 	$compress	If true, compress the output
	 * @param array		$params		Associative array of attributes
	 * @return 	The rendered data
	 */
||||||||	public function &loadRenderer( $type )
	{
		$null	= null;
		$class	= 'JDocumentRenderer'.$type;

		if( !class_exists( $class ) )
		{
			$path = dirname(__FILE__).DS.$this->_type.DS.'renderer'.DS.$type.'.php';
			if(file_exists($path)) {
				require_once $path;
			} else {
				throw new JException(JText::_('Unable to load renderer class'), 500, E_ERROR, $class, true);
			}
		}

		if ( !class_exists( $class ) ) {
			return $null;
		}

		$instance = new $class($this);
		return $instance;
	}

	/**
	 * Outputs the document
	 *
	 * @access public
	 * @param boolean 	$cache		If true, cache the output
	 * @param boolean 	$compress	If true, compress the output
	 * @param array		$params		Associative array of attributes
	 * @return 	The rendered data
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_MAGIC_CONST)))
                                                (AST_CONST))
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_CONST))
                            (AST_VAR))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_MAGIC_CONST)))
                                                (AST_CONST))
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_CONST))
                                    (SCALAR))
                                (AST_CONST))
                            (AST_VAR))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)))
                                        (SCALAR)
                                        (AST_CONST)
                                        (AST_VAR)
                                        (AST_CONST))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))