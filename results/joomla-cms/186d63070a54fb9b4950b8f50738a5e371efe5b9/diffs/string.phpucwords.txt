	function ucwords($str)
	{
		jimport('phputf8.ucwords');
		return utf8_ucwords($str);
	}

	/**
	 * Transcode a string.
	 *
	 * @static
	 * @param string $source The string to transcode.
	 * @param string $from_encoding The source encoding.
	 * @param string $to_encoding The target encoding.
	 * @return string Transcoded string
	 * @since 1.5
	 */
||||||||	public static function ucwords($str)
	{
		 // Note: [\x0c\x09\x0b\x0a\x0d\x20] matches;
		// form feeds, horizontal tabs, vertical tabs, linefeeds and carriage returns
		// This corresponds to the definition of a "word" defined at http://www.php.net/ucwords
		$pattern = '/(^|([\x0c\x09\x0b\x0a\x0d\x20]+))([^\x0c\x09\x0b\x0a\x0d\x20]{1})[^\x0c\x09\x0b\x0a\x0d\x20]*/u';
		return preg_replace_callback($pattern, 'JString::ucwords_callback',$str);
	}


	/**
	 * Callback function for preg_replace_callback call in utf8_ucwords
	 * You don't need to call this yourself
	 * @param array of matches corresponding to a single word
	 * @return string with first char of the word in uppercase
	 * @see ucwords
	 * @see strtoupper
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR)))))