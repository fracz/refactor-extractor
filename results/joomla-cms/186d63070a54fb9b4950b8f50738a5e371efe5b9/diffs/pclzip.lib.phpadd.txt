  function add($p_filelist /* options */)
  {
//--(MAGIC-PclTrace)--//PclTraceFctStart(__FILE__, __LINE__, 'PclZip::add', "filelist='$p_filelist', ...");
$v_result=1;

// ----- Reset the error handler
$this->privErrorReset();

// ----- Set default values
$v_options = array();
$v_add_path = "";
$v_remove_path = "";
$v_remove_all_path = false;
$v_options[PCLZIP_OPT_NO_COMPRESSION] = FALSE;

// ----- Look for variable options arguments
$v_size = func_num_args();
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 4, "$v_size arguments passed to the method");

// ----- Look for arguments
if ($v_size > 1) {
  // ----- Get the arguments
  $v_arg_list = &func_get_args();

  // ----- Remove form the options list the first argument
  array_shift($v_arg_list);
  $v_size--;

  // ----- Look for first arg
  if ((is_integer($v_arg_list[0])) && ($v_arg_list[0] > 77000)) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Variable list of options detected");

// ----- Parse the options
$v_result = $this->privParseOptions($v_arg_list, $v_size, $v_options,
array (PCLZIP_OPT_REMOVE_PATH => 'optional',
	PCLZIP_OPT_REMOVE_ALL_PATH => 'optional',
	PCLZIP_OPT_ADD_PATH => 'optional',
	PCLZIP_CB_PRE_ADD => 'optional',
	PCLZIP_CB_POST_ADD => 'optional',
	PCLZIP_OPT_NO_COMPRESSION => 'optional',
	PCLZIP_OPT_COMMENT => 'optional',
	PCLZIP_OPT_ADD_COMMENT => 'optional',
	PCLZIP_OPT_PREPEND_COMMENT => 'optional' ));
if ($v_result != 1) {
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0);
  return 0;
}

// ----- Set the arguments
if (isset($v_options[PCLZIP_OPT_ADD_PATH])) {
  $v_add_path = $v_options[PCLZIP_OPT_ADD_PATH];
}
if (isset($v_options[PCLZIP_OPT_REMOVE_PATH])) {
  $v_remove_path = $v_options[PCLZIP_OPT_REMOVE_PATH];
}
if (isset($v_options[PCLZIP_OPT_REMOVE_ALL_PATH])) {
  $v_remove_all_path = $v_options[PCLZIP_OPT_REMOVE_ALL_PATH];
}
  }

  // ----- Look for 2 args
  // Here we need to support the first historic synopsis of the
  // method.
  else {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Static synopsis");

// ----- Get the first argument
$v_add_path = $v_arg_list[0];

// ----- Look for the optional second argument
if ($v_size == 2) {
  $v_remove_path = $v_arg_list[1];
}
else if ($v_size > 2) {
  // ----- Error log
  PclZip::privErrorLog(PCLZIP_ERR_INVALID_PARAMETER, "Invalid number / type of arguments");

  // ----- Return
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, PclZip::errorCode(), PclZip::errorInfo());
  return 0;
}
  }
}

// ----- Trace
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "add_path='$v_add_path', remove_path='$v_remove_path', remove_all_path='".($v_remove_all_path?'true':'false')."'");

// ----- Look if the $p_filelist is really an array
$p_result_list = array();
if (is_array($p_filelist))
{
  // ----- Call the create fct
  $v_result = $this->privAdd($p_filelist, $p_result_list, $v_add_path, $v_remove_path, $v_remove_all_path, $v_options);
}

// ----- Look if the $p_filelist is a string
else if (is_string($p_filelist))
{
  // ----- Create a list with the elements from the string
  $v_list = explode(PCLZIP_SEPARATOR, $p_filelist);

  // ----- Call the create fct
  $v_result = $this->privAdd($v_list, $p_result_list, $v_add_path, $v_remove_path, $v_remove_all_path, $v_options);
}

// ----- Invalid variable
else
{
  // ----- Error log
  PclZip::privErrorLog(PCLZIP_ERR_INVALID_PARAMETER, "Invalid variable type p_filelist");
  $v_result = PCLZIP_ERR_INVALID_PARAMETER;
}

if ($v_result != 1)
{
  // ----- Return
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0);
  return 0;
}

// ----- Return
//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $p_result_list);
return $p_result_list;
  }
  // --------------------------------------------------------------------------------

  // --------------------------------------------------------------------------------
  // Function : listContent()
  // Description :
  //	This public method, gives the list of the files and directories, with their
  //	properties.
  //	The properties of each entries in the list are (used also in other functions) :
  // filename : Name of the file. For a create or add action it is the filename
  //given by the user. For an extract function it is the filename
  //of the extracted file.
  // stored_filename : Name of the file / directory stored in the archive.
  // size : Size of the stored file.
  // compressed_size : Size of the file's data compressed in the archive
  //	(without the headers overhead)
  // mtime : Last known modification date of the file (UNIX timestamp)
  // comment : Comment associated with the file
  // folder : true | false
  // index : index of the file in the archive
  // status : status of the action (depending of the action) :
  //  Values are :
  //ok : OK !
  //filtered : the file / dir is not extracted (filtered by user)
  //already_a_directory : the file can not be extracted because a
  //  directory with the same name already exists
  //write_protected : the file can not be extracted because a file
  //  with the same name already exists and is
  //  write protected
  //newer_exist : the file was not extracted because a newer file exists
  //path_creation_fail : the file is not extracted because the folder
  // does not exists and can not be created
  //write_error : the file was not extracted because there was a
  //  error while writing the file
  //read_error : the file was not extracted because there was a error
  // while reading the file
  //invalid_header : the file was not extracted because of an archive
  // format error (bad file header)
  //	Note that each time a method can continue operating when there
  //	is an action error on a file, the error is only logged in the file status.
  // Return Values :
  //	0 on an unrecoverable failure,
  //	The list of the files in the archive.
  // --------------------------------------------------------------------------------
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_CONST))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_CALL))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_POST_DEC
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_RETURN
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_CONST)
                                                            (SCALAR)))
                                                    (AST_RETURN
                                                        (SCALAR))))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_CONST)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||