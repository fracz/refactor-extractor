||||||||	public static function imagetooltip($width=120, $height=90, $selector='.hasSnapshot', $params = array())
	{
		static $snapshots;

		if (!isset($snapshots)) {
			$snapshots = array();
		}

		$sig = md5(serialize(array($selector,$params)));
		if (isset($snapshots[$sig]) && ($snapshots[$sig])) {
			return;
		}

		$params['initialize']			= "
		function()
		{
			$$('" . $selector . "').each(
				function (el){
					if (el.id){
						el.\$tmp.myImg = el.id;
						el.removeAttribute('id');
					}
					el.addEvent('mouseenter', function(event){
						this.start(el);
						if (el.\$tmp.myImg){
							this.img = new Element('img', {
								src: el.\$tmp.myImg,
								width: $width,
								height: $height,
							});
							this.img.inject(new Element('div', {'class': this.options.className + '-img'}).inject(this.wrapper));
						}
					}.bind(this));
				},
			this);
		}";

		JHTMLBehavior::tooltip($selector, $params);

		// Set static array
		$snapshots[$sig] = true;
		return;
	}

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (NULL)))