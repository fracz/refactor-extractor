||||||||
	 	 // Require the OpenID consumer.
		jimport ('openid.consumer');
		// Access the session data
		$session =& JFactory::getSession();
	    // load plugin parameters
		$plugin =& JPluginHelper::getPlugin('authentication', 'openid');
		$params = new JParameter( $plugin->params );				// create response object
		$return = new JAuthenticateResponse('openid');					// Need to check for bcmath or gmp - if not, use the dumb mode.		// TODO: Should dump an error to debug saying we are dumb      	global $_Auth_OpenID_math_extensions;		$ext = Auth_OpenID_detectMathLibrary($_Auth_OpenID_math_extensions);		if (!isset($ext['extension']) || !isset($ext['class'])) {			define ("Auth_OpenID_NO_MATH_SUPPORT", true);		}					// Create and/or start using the data store		$store_path = JPATH_ROOT . '/tmp/_joomla_openid_store';		if (!file_exists($store_path) && !mkdir($store_path)) {			print "Could not create the FileStore directory '$store_path'. " . " Please check the effective permissions.";			exit (0);		}		// Create store object				$store = new Auth_OpenID_FileStore($store_path);	  	// Create a consumer object		$consumer = new Auth_OpenID_Consumer($store);

		if (!$session->get('_openid_consumer_last_token')) 		{
			// Begin the OpenID authentication process.			if(!$request = $consumer->begin($username))			{				$return->type = JAUTHENTICATE_STATUS_FAILURE;				$return->error_message = 'Authentication error : could not connect to the openid server';				return $return;			}	    		    	// Request simple registration information			$request->addExtensionArg('sreg', 'required' , 'email');			$request->addExtensionArg('sreg', 'optional', 'fullname');			$request->addExtensionArg('sreg', 'optional', 'language');			$request->addExtensionArg('sreg', 'optional', 'timezone');						$uri = JFactory::getURI();			$url = $uri->toString();	    			$process_url = sprintf("index.php?option=com_login&task=login&username=%s&return=%s", $username, $url);			$redirect_url = $request->redirectURL(JURI::base(), JURI::base().'/'.$process_url);			$session->set('trust_url', JURI::base());			$session->pause();			// Redirect the user to the OpenID server for authentication.  Store	    	// the token for this authentication so we can verify the response.			$mainframe->redirect($redirect_url);                                 			return false;		}					$response = $consumer->complete(JRequest::get('get'));						switch ($response->status)		{			case Auth_OpenID_SUCCESS :			{				$sreg = $response->extensionResponse('sreg');									$return->status   = JAUTHENTICATE_STATUS_SUCCESS;				$return->email    = isset($sreg['email'])    ? $sreg['email']    : "";				$return->fullname = isset($sreg['fullname']) ? $sreg['fullname'] : "";				$return->language = isset($sreg['language']) ? $sreg['language'] : "";				$return->timezone = isset($sreg['timezone']) ? $sreg['timezone'] : "";							} break;								case Auth_OpenID_CANCEL :			{					$return->status = JAUTHENTICATE_STATUS_CANCEL;				$return->error_message = 'Authentication failed';			} break;								case Auth_OpenID_FAILURE :			{					$return->status = JAUTHENTICATE_STATUS_FAILURE;				$return->error_message = 'Authentication cancelled';			} break;		}						return $return;
    }
}
?>||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CALL)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_PRINT
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_EXIT
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_STATIC_CALL)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL)
                                    (SCALAR))
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_STATIC_CALL)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_VAR)))