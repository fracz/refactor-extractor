	function onLogin($user, $remember)
	{
		// Get the JUser object for the user to login
		$user =& JUser::getInstance( $user['username'] );

		// If the user is blocked, redirect with an error
		if ($user->get('block') == 1) {
			return JError::raiseWarning(
             	'SOME_ERROR_CODE', JText::_('E_NOLOGIN_BLOCKED')
            	);
		}

		// Fudge the ACL stuff for now...
		// TODO: Implement ACL :)
		jimport('joomla.factory');
		$acl = &JFactory::getACL();
		$grp = $acl->getAroGroup($user->get('id'));
		$row->gid = 1;

		// ToDO: Add simple mapping based on the group table to allow positive references between content and user groups
		if ($acl->is_group_child_of($grp->name, 'Registered', 'ARO') || $acl->is_group_child_of($grp->name, 'Public Backend', 'ARO')) {
				// fudge Authors, Editors, Publishers and Super Administrators into the Special Group
				$user->set('gid', 2);
		}
		$user->set('usertype', $grp->name);

		// Register the needed session variables
		$session =& JFactory::getSession();
		$session->set('session.user.id', $user->get('id'));

		// Get the session object
		$table = & JTable::getInstance('session');
		$table->load( $session->getId() );

		$table->guest 		= 0;
		$table->username 	= $user->get('username');
		$table->userid 		= intval($user->get('id'));
		$table->usertype 	= $user->get('usertype');
		$table->gid 			= intval($user->get('gid'));

		$table->update();

		// Hit the user last visit field
		$user->setLastVisit();

		// Set remember me option
		if ($remember == 'yes')
		{
			$lifetime = time() + 365*24*60*60;
			setcookie( 'usercookie[username]', $user->get('username'), $lifetime, '/' );
			setcookie( 'usercookie[password]', $user->get('password'), $lifetime, '/' );
		}

		return true;
	}

	/**
	 * This method should handle any logout logic and report back to the subject
	 *
	 * @access public
	* @param   array	  holds the user data
	 * @return boolean True on success
	 * @since 1.5
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))))))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))||||||||