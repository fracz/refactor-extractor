	function display(&$params)
	{
		$model		= &$this->getModel( 'banner', 'JModel' );
		$db			= &JFactory::getDBO();

		// Model Variables
		$vars['cid']		= (int) $params->get( 'cid' );
		$vars['catid']		= (int) $params->get( 'catid' );
		$vars['limit']		= (int) $params->get( 'count', 1 );
		$vars['ordering']	= $params->get( 'ordering' );

		if ($params->get( 'tag_search' ))
		{
			// get the document keywords
			$application	= &$this->getApplication();
			$document		= &$application->getDocument();
			$keywords		= &$document->getMetaData( 'keywords' );

			$vars['tag_search'] = JBannerHelper::getKeywords( $keywords );
		}

		$banners = $model->getList( $vars );
		$model->impress( $banners );

		// View Variables
		$cssSuffix	= $params->get( 'moduleclass_sfx' );
		$headerText	= trim( $params->get( 'header_text' ) );
		$footerText	= trim( $params->get( 'footer_text' ) );

		echo '<div class="bannergroup' . $cssSuffix . '">';
		if ($footerText)
		{
			echo '<div class="bannerheader">' . $headerText . '</div>';
		}

		$n = count( $banners );
		for ($i = 0; $i < $n; $i++) {
			$item = &$banners[$i];
			$link = sefRelToAbs( 'index.php?option=com_banners&amp;task=click&amp;bid='. $item->bid );

			echo '<div class="banneritem' . $cssSuffix . '">';

			if (trim($item->custombannercode))
			{
				// template replacements
				$html = str_replace( '{CLICKURL}', $link, $item->custombannercode );
				$html = str_replace( '{NAME}', $item->name, $html );
				echo $html;
			}
			else if ($model->isImage( $item->imageurl ))
			{
				$image 	= '<img src="images/banners/'.$item->imageurl.'" border="0" alt="'.JText::_('Banner').'" />';
				if ($item->clickurl)
				{
					switch ($params->get( 'target', 1 )) {
						// cases are slightly different
						case 1:
							// open in a new window
							$a = '<a href="'. $link .'" target="_blank">';
							break;

						case 2:
							// open in a popup window
							$a = "<a href=\"javascript:void window.open('". $link ."', '', 'toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=550'); return false\">";
							break;

						default:	// formerly case 2
							// open in parent window
							$a = '<a href="'. $link .'">';
							break;
					}

					echo $a . $image . '</a>';
				}
				else
				{
					echo $image;

				}
			}
			else if ($model->isFlash( $item->imageurl ))
			{
				$imageurl = "images/banners/".$item->imageurl;
				echo "	<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0\" border=\"5\">
							<param name=\"movie\" value=\"$imageurl\"><embed src=\"$imageurl\" loop=\"false\" pluginspage=\"http://www.macromedia.com/go/get/flashplayer\" type=\"application/x-shockwave-flash\"></embed>
						</object>";
			}

			echo '	<div class="clr"></div>';
			echo '</div>';
		}
		if ($footerText)
		{
			echo '<div class="bannerfooter' . $cssSuffix . '">' . $footerText . '</div>';
		}
		echo '</div>';
	}
}

$controller = new modBanner($mainframe );
$controller->setModelPath( JPATH_SITE . '/components/com_banners/models' );
$controller->display($params);

?>||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_ECHO
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))
                        (AST_ECHO
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_STATIC_CALL
                                                    (
                                                        (SCALAR))))
                                            (SCALAR)))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (AST_SWITCH
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (AST_SWITCH_LIST
                                                        (AST_SWITCH_CASE
                                                            (SCALAR)
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_VAR))
                                                                        (SCALAR)))
                                                                (AST_BREAK
                                                                    (NULL))))
                                                        (AST_SWITCH_CASE
                                                            (SCALAR)
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_VAR))
                                                                        (SCALAR)))
                                                                (AST_BREAK
                                                                    (NULL))))
                                                        (AST_SWITCH_CASE
                                                            (NULL)
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_VAR))
                                                                        (SCALAR)))
                                                                (AST_BREAK
                                                                    (NULL))))))
                                                (AST_ECHO
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (SCALAR)))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ECHO
                                                    (AST_VAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (AST_ECHO
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR))))))))))))
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR)))||||||||