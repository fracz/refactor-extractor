	function &getInstance( $type, $prefix='JTable' )
	{
		$adapter = $prefix.ucfirst($type);
		if (!class_exists( $adapter ))
		{
			$paths = JTable::addIncludePath();
			for ($i = 0, $n = count($paths); $i < $n; $i++)
			{
				$file = $paths[$i].DS.strtolower($type).'.php';
				if (file_exists( $file )) {
					require_once $file;
				}
			}
		}
		if (!class_exists( $adapter )) {
			return JError::raiseError(20, JText::sprintf('Database Table object [%s] does not exist', $prefix.$type));
		}
		else
		{
			$db =& JFactory::getDBO();
			$m = new $adapter($db);
		}
		return $m;
	}

	/**
	 * Get the internal database object
	 *
	 * @return object A JDatabase based object
	 */
||||||||	function &getInstance( $type, $prefix='JTable' )
	{
		$false = false;

		$tableClass = $prefix.ucfirst($type);

		if (!class_exists( $tableClass ))
		{
			jimport('joomla.filesystem.path');
			if($path = JPath::find(JTable::addIncludePath(), strtolower($type).'.php'))
			{
				require_once $path;

				if (!class_exists( $tableClass ))
				{
					JError::raiseWarning( 0, 'Table class ' . $tableClass . ' not found in file.' );
					return $false;
				}
			}
			else
			{
				JError::raiseWarning( 0, 'Table ' . $type . ' not supported. File not found.' );
				return $false;
			}
		}

		$db =& JFactory::getDBO();
		$instance = new $tableClass($db);

		return $instance;
	}

	/**
	 * Get the internal database object
	 *
	 * @return object A JDatabase based object
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_FOR
                    (AST_EXPR_LIST
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_EXPR_LIST
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_EXPR_LIST
                        (AST_POST_INC
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_CONST))
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_INCLUDE_OR_EVAL
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_STATIC_CALL)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR)))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_VAR))
                                                    (SCALAR))))
                                        (AST_RETURN
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))