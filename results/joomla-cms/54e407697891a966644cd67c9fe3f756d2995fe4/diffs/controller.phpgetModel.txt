	function &getModel($name, $prefix='')
	{
		if (empty($prefix)) {
			$prefix = $this->_name.'Model';
		}

		if ($model = &$this->_createModel( $name, $prefix ))
		{
			// task is a reserved state
			$model->setState( 'task', $this->_task );
		}
		return $model;
	}

	/**
     * Adds to the stack of controller model paths in LIFO order.
     *
     * @static
     * @param string|array The directory (-ies) to add.
     * @return void
     */
||||||||	function &getModel($name, $prefix='')
	{
		global $Itemid;

		if (empty($prefix)) {
			$prefix = $this->_name.'Model';
		}

		if ($model = &$this->_createModel( $name, $prefix ))
		{
			// task is a reserved state
			$model->setState( 'task', $this->_task );

			// Get menu item information if Itemid exists
			if (isset($Itemid))
			{
				$menu		= &JMenu::getInstance();
				$item		= &$menu->getItem( $Itemid );
				$params	    = new JParameter($item->params);

				// Set Default State Data
				$model->setState( 'parameters.menu', $params);
			}
		}
		return $model;
	}

	/**
     * Adds to the stack of controller model paths in LIFO order.
     *
     * @static
     * @param string|array The directory (-ies) to add.
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_VAR))
                        (
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_STATIC_CALL))
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))