	function Connected() {
		if(!empty($this->smtp_conn)) {
			$sock_status = socket_get_status($this->smtp_conn);
			if($sock_status["eof"]) {
				# hmm this is an odd situation... the socket is
				# valid but we aren't connected anymore
				if($this->do_debug >= 1) {
					echo "SMTP -> NOTICE:" . $this->CRLF .
						 "EOF caught while checking if connected";
				}
				$this->Close();
				return false;
			}
			return true; # everything looks good
		}
		return false;
	}

	/**
	 * Closes the socket and cleans up the state of the class.
	 * It is not considered good to use this function without
	 * first trying to use QUIT.
	 * @access public
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (
                                        (AST_ECHO
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (SCALAR))))))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||