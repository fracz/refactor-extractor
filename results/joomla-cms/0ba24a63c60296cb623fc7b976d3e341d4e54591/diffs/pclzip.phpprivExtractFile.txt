||||||||  function privExtractFile(&$p_entry, $p_path, $p_remove_path, $p_remove_all_path, &$p_options)
  {
//--(MAGIC-PclTrace)--//PclTraceFctStart(__FILE__, __LINE__, 'PclZip::privExtractFile', "path='$p_path', remove_path='$p_remove_path', remove_all_path='".($p_remove_all_path?'true':'false')."'");
$v_result=1;

// ----- Read the file header
if (($v_result = $this->privReadFileHeader($v_header)) != 1)
{
  // ----- Return
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
  return $v_result;
}

//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Found file '".$v_header['filename']."', size '".$v_header['size']."'");

// ----- Check that the file header is coherent with $p_entry info
// TBC

// ----- Look for all path to remove
if ($p_remove_all_path == true) {
// ----- Get the basename of the path
$p_entry['filename'] = basename($p_entry['filename']);
}

// ----- Look for path to remove
else if ($p_remove_path != "")
{
  //if (strcmp($p_remove_path, $p_entry['filename'])==0)
  if (PclZipUtilPathInclusion($p_remove_path, $p_entry['filename']) == 2)
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "The folder is the same as the removed path '".$p_entry['filename']."'");

// ----- Change the file status
$p_entry['status'] = "filtered";

// ----- Return
//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
return $v_result;
  }

  $p_remove_path_size = strlen($p_remove_path);
  if (substr($p_entry['filename'], 0, $p_remove_path_size) == $p_remove_path)
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Found path '$p_remove_path' to remove in file '".$p_entry['filename']."'");

// ----- Remove the path
$p_entry['filename'] = substr($p_entry['filename'], $p_remove_path_size);

//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Resulting file is '".$p_entry['filename']."'");
  }
}

// ----- Add the path
if ($p_path != '')
{
  $p_entry['filename'] = $p_path."/".$p_entry['filename'];
}

// ----- Look for pre-extract callback
if (isset($p_options[PCLZIP_CB_PRE_EXTRACT])) {
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "A pre-callback '".$p_options[PCLZIP_CB_PRE_EXTRACT]."()') is defined for the extraction");

  // ----- Generate a local information
  $v_local_header = array();
  $this->privConvertHeader2FileInfo($p_entry, $v_local_header);

  // ----- Call the callback
  // Here I do not use call_user_func() because I need to send a reference to the
  // header.
  eval('$v_result = '.$p_options[PCLZIP_CB_PRE_EXTRACT].'(PCLZIP_CB_PRE_EXTRACT, $v_local_header);');
  if ($v_result == 0) {
// ----- Change the file status
$p_entry['status'] = "skipped";
$v_result = 1;
  }

  // ----- Look for abort result
  if ($v_result == 2) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "User callback abort the extraction");
// ----- This status is internal and will be changed in 'skipped'
$p_entry['status'] = "aborted";
  	$v_result = PCLZIP_ERR_USER_ABORTED;
  }

  // ----- Update the informations
  // Only some fields can be modified
  $p_entry['filename'] = $v_local_header['filename'];
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "New filename is '".$p_entry['filename']."'");
}

// ----- Trace
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Extracting file (with path) '".$p_entry['filename']."', size '$v_header[size]'");

// ----- Look if extraction should be done
if ($p_entry['status'] == 'ok') {

// ----- Look for specific actions while the file exist
if (file_exists($p_entry['filename']))
{
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "File '".$p_entry['filename']."' already exists");

  // ----- Look if file is a directory
  if (is_dir($p_entry['filename']))
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Existing file '".$p_entry['filename']."' is a directory");

// ----- Change the file status
$p_entry['status'] = "already_a_directory";

// ----- Return
////--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
//return $v_result;
  }
  // ----- Look if file is write protected
  else if (!is_writeable($p_entry['filename']))
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Existing file '".$p_entry['filename']."' is write protected");

// ----- Change the file status
$p_entry['status'] = "write_protected";

// ----- Return
////--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
//return $v_result;
  }

  // ----- Look if the extracted file is older
  else if (filemtime($p_entry['filename']) > $p_entry['mtime'])
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Existing file '".$p_entry['filename']."' is newer (".date("l dS of F Y h:i:s A", filemtime($p_entry['filename'])).") than the extracted file (".date("l dS of F Y h:i:s A", $p_entry['mtime']).")");

// ----- Change the file status
$p_entry['status'] = "newer_exist";

// ----- Return
////--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
//return $v_result;
  }
}

// ----- Check the directory availability and create it if necessary
else {
  if ((($p_entry['external']&0x00000010)==0x00000010) || (substr($p_entry['filename'], -1) == '/'))
$v_dir_to_check = $p_entry['filename'];
  else if (!strstr($p_entry['filename'], "/"))
$v_dir_to_check = "";
  else
$v_dir_to_check = dirname($p_entry['filename']);

  if (($v_result = $this->privDirCheck($v_dir_to_check, (($p_entry['external']&0x00000010)==0x00000010))) != 1) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Unable to create path for '".$p_entry['filename']."'");

// ----- Change the file status
$p_entry['status'] = "path_creation_fail";

// ----- Return
////--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
//return $v_result;
$v_result = 1;
  }
}
}

// ----- Look if extraction should be done
if ($p_entry['status'] == 'ok') {

  // ----- Do the extraction (if not a folder)
  if (!(($p_entry['external']&0x00000010)==0x00000010))
  {

// ----- Look for not compressed file
if ($p_entry['compressed_size'] == $p_entry['size'])
{
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Extracting an un-compressed file");

  // ----- Opening destination file
  if (($v_dest_file = @fopen($p_entry['filename'], 'wb')) == 0)
  {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Error while opening '".$p_entry['filename']."' in write binary mode");

// ----- Change the file status
$p_entry['status'] = "write_error";

// ----- Return
//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
return $v_result;
  }

  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Reading '".$p_entry['size']."' bytes");

  // ----- Read the file by PCLZIP_READ_BLOCK_SIZE octets blocks
  $v_size = $p_entry['compressed_size'];
  while ($v_size != 0)
  {
$v_read_size = ($v_size < PCLZIP_READ_BLOCK_SIZE ? $v_size : PCLZIP_READ_BLOCK_SIZE);
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Read $v_read_size bytes");
$v_buffer = fread($this->zip_fd, $v_read_size);
$v_binary_data = pack('a'.$v_read_size, $v_buffer);
@fwrite($v_dest_file, $v_binary_data, $v_read_size);
$v_size -= $v_read_size;
  }

  // ----- Closing the destination file
  fclose($v_dest_file);

  // ----- Change the file mtime
  touch($p_entry['filename'], $p_entry['mtime']);
}
else
{
  // ----- Trace
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Extracting a compressed file");

  // ----- Opening destination file
  if (($v_dest_file = @fopen($p_entry['filename'], 'wb')) == 0) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Error while opening '".$p_entry['filename']."' in write binary mode");

// ----- Change the file status
$p_entry['status'] = "write_error";

//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
return $v_result;
  }

  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 5, "Reading '".$p_entry['size']."' bytes");

  // ----- Read the compressed file in a buffer (one shot)
  $v_buffer = @fread($this->zip_fd, $p_entry['compressed_size']);

  // ----- Decompress the file
  $v_file_content = gzinflate($v_buffer);
  unset($v_buffer);

  // ----- Write the uncompressed data
  @fwrite($v_dest_file, $v_file_content, $p_entry['size']);
  unset($v_file_content);

  // ----- Closing the destination file
  @fclose($v_dest_file);

  // ----- Change the file mtime
  touch($p_entry['filename'], $p_entry['mtime']);
}

// ----- Look for chmod option
if (isset($p_options[PCLZIP_OPT_SET_CHMOD])) {
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "chmod option activated '".$p_options[PCLZIP_OPT_SET_CHMOD]."'");

  // ----- Change the mode of the file
  chmod($p_entry['filename'], $p_options[PCLZIP_OPT_SET_CHMOD]);
}

//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "Extraction done");
  }
}

	// ----- Change abort status
	if ($p_entry['status'] == "aborted") {
  $p_entry['status'] = "skipped";
	}

// ----- Look for post-extract callback
elseif (isset($p_options[PCLZIP_CB_POST_EXTRACT])) {
  //--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "A post-callback '".$p_options[PCLZIP_CB_POST_EXTRACT]."()') is defined for the extraction");

  // ----- Generate a local information
  $v_local_header = array();
  $this->privConvertHeader2FileInfo($p_entry, $v_local_header);

  // ----- Call the callback
  // Here I do not use call_user_func() because I need to send a reference to the
  // header.
  eval('$v_result = '.$p_options[PCLZIP_CB_POST_EXTRACT].'(PCLZIP_CB_POST_EXTRACT, $v_local_header);');

  // ----- Look for abort result
  if ($v_result == 2) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "User callback abort the extraction");
  	$v_result = PCLZIP_ERR_USER_ABORTED;
  }
}

// ----- Return
//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $v_result);
return $v_result;
  }
  // --------------------------------------------------------------------------------

  // --------------------------------------------------------------------------------
  // Function : privExtractFileInOutput()
  // Description :
  // Parameters :
  // Return Values :
  // --------------------------------------------------------------------------------
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR))
                                        (AST_RETURN
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (SCALAR)
                                                (AST_VAR)))
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_VAR)))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_CONST)))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR)))))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_BINARY_OP
                                                                (AST_CALL
                                                                    (
                                                                        (AST_DIM
                                                                            (AST_VAR)
                                                                            (SCALAR))))
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR)))
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR))
                                                                    (SCALAR)))))))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (SCALAR))
                                            (SCALAR))
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_UNARY_OP
                                                        (SCALAR))))
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR))
                                                            (SCALAR))))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_CALL
                                                            (
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR)))))))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR))
                                                            (SCALAR))
                                                        (SCALAR)))))
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_UNARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR))
                                                                    (SCALAR)))))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_RETURN
                                                        (AST_VAR)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_WHILE
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONDITIONAL
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_CONST))
                                                        (AST_VAR)
                                                        (AST_CONST)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (AST_VAR))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_VAR))
                                                            (AST_VAR))))
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR)
                                                            (AST_VAR))))
                                                (AST_ASSIGN_OP
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_UNARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR))
                                                                    (SCALAR)))))
                                                    (SCALAR))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_RETURN
                                                        (AST_VAR)))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_UNARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_UNSET
                                            (AST_VAR))
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR)))))
                                        (AST_UNSET
                                            (AST_VAR))
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_CONST)))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_CONST)))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_VAR)))