||||||||	function get_object_groups($object_id, $object_type = 'ARO', $option = 'NO_RECURSE') {
		$this->debug_text('get_object_groups(): Object ID: '. $object_id .' Object Type: '. $object_type .' Option: '. $option);

		switch(strtolower(trim($object_type))) {
			case 'axo':
				$object_type = 'axo';
				$group_table = $this->_db_table_prefix .'axo_groups';
				$map_table = $this->_db_table_prefix .'groups_axo_map';
				break;
			case 'aro':
				$object_type = 'aro';
				$group_table = $this->_db_table_prefix .'aro_groups';
				$map_table = $this->_db_table_prefix .'groups_aro_map';
				break;
			default:
				$this->debug_text('get_object_groups(): Invalid Object Type: '. $object_type);
				return FALSE;
		}

		if (empty($object_id)) {
			$this->debug_text('get_object_groups(): Object ID: ('. $object_id .') is empty, this is required');
			return FALSE;
		}

		if (strtoupper($option) == 'RECURSE') {
		    $query = '
				SELECT		DISTINCT g.id AS group_id
				FROM		'. $map_table .' gm
				LEFT JOIN	'. $group_table .' g1 ON g1.id=gm.group_id
				LEFT JOIN	'. $group_table .' g ON g.lft<=g1.lft AND g.rgt>=g1.rgt';
		} else {
		    $query = '
		    	SELECT		gm.group_id
		    	FROM		'. $map_table .' gm';
		}

		$query .= '
				WHERE		gm.'. $object_type .'_id='. $object_id;
		$rs = $this->db->Execute($query);

		if (!is_object($rs)) {
			$this->debug_db('get_object_groups');
			return FALSE;
		}

		$retarr = array();

		while ($row = $rs->FetchRow()) {
			$retarr[] = $row[0];
		}

		return $retarr;
	}

	/**
	 * add_object()
	 *
	 * Inserts a new object
	 *
	 * @return int Returns the ID # of the new object if successful, FALSE otherwise
	 *
	 * @param string Object Section Value
	 * @param string Object Name
	 * @param string Object Value
	 * @param int Display Order
	 * @param int Hidden Flag, either 1 to hide, or 0 to show.
	 * @param string Object Type, either 'ACO', 'ARO', or 'AXO'
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_SWITCH
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))