||||||||  function extract(/* options */)
  {
//--(MAGIC-PclTrace)--//PclTraceFctStart(__FILE__, __LINE__, "PclZip::extract", "");
$v_result=1;

// ----- Reset the error handler
$this->privErrorReset();

// ----- Check archive
if (!$this->privCheckFormat()) {
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0);
  return(0);
}

// ----- Set default values
$v_options = array();
$v_path = "./";
$v_remove_path = "";
$v_remove_all_path = false;

// ----- Look for variable options arguments
$v_size = func_num_args();
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 4, "$v_size arguments passed to the method");

// ----- Default values for option
$v_options[PCLZIP_OPT_EXTRACT_AS_STRING] = FALSE;

// ----- Look for arguments
if ($v_size > 0) {
  // ----- Get the arguments
  $v_arg_list = func_get_args();

  // ----- Look for first arg
  if ((is_integer($v_arg_list[0])) && ($v_arg_list[0] > 77000)) {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Variable list of options");

// ----- Parse the options
$v_result = $this->privParseOptions($v_arg_list, $v_size, $v_options,
array (PCLZIP_OPT_PATH => 'optional',
	PCLZIP_OPT_REMOVE_PATH => 'optional',
	PCLZIP_OPT_REMOVE_ALL_PATH => 'optional',
	PCLZIP_OPT_ADD_PATH => 'optional',
	PCLZIP_CB_PRE_EXTRACT => 'optional',
	PCLZIP_CB_POST_EXTRACT => 'optional',
	PCLZIP_OPT_SET_CHMOD => 'optional',
	PCLZIP_OPT_BY_NAME => 'optional',
	PCLZIP_OPT_BY_EREG => 'optional',
	PCLZIP_OPT_BY_PREG => 'optional',
	PCLZIP_OPT_BY_INDEX => 'optional',
	PCLZIP_OPT_EXTRACT_AS_STRING => 'optional',
	PCLZIP_OPT_EXTRACT_IN_OUTPUT => 'optional' ));
if ($v_result != 1) {
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0);
  return 0;
}

// ----- Set the arguments
if (isset($v_options[PCLZIP_OPT_PATH])) {
  $v_path = $v_options[PCLZIP_OPT_PATH];
}
if (isset($v_options[PCLZIP_OPT_REMOVE_PATH])) {
  $v_remove_path = $v_options[PCLZIP_OPT_REMOVE_PATH];
}
if (isset($v_options[PCLZIP_OPT_REMOVE_ALL_PATH])) {
  $v_remove_all_path = $v_options[PCLZIP_OPT_REMOVE_ALL_PATH];
}
if (isset($v_options[PCLZIP_OPT_ADD_PATH])) {
  // ----- Check for '/' in last path char
  if ((strlen($v_path) > 0) && (substr($v_path, -1) != '/')) {
$v_path .= '/';
  }
  $v_path .= $v_options[PCLZIP_OPT_ADD_PATH];
}
  }

  // ----- Look for 2 args
  // Here we need to support the first historic synopsis of the
  // method.
  else {
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 3, "Static synopsis");

// ----- Get the first argument
$v_path = $v_arg_list[0];

// ----- Look for the optional second argument
if ($v_size == 2) {
  $v_remove_path = $v_arg_list[1];
}
else if ($v_size > 2) {
  // ----- Error log
  PclZip::privErrorLog(PCLZIP_ERR_INVALID_PARAMETER, "Invalid number / type of arguments");

  // ----- Return
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0, PclZip::errorInfo());
  return 0;
}
  }
}

// ----- Trace
//--(MAGIC-PclTrace)--//PclTraceFctMessage(__FILE__, __LINE__, 2, "path='$v_path', remove_path='$v_remove_path', remove_all_path='".($v_remove_path?'true':'false')."'");

// ----- Call the extracting fct
$p_list = array();
$v_result = $this->privExtractByRule($p_list, $v_path, $v_remove_path,
	 $v_remove_all_path, $v_options);
if ($v_result < 1) {
  unset($p_list);
  //--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, 0, PclZip::errorInfo());
  return(0);
}

// ----- Return
//--(MAGIC-PclTrace)--//PclTraceFctEnd(__FILE__, __LINE__, $p_list);
return $p_list;
  }
  // --------------------------------------------------------------------------------


  // --------------------------------------------------------------------------------
  // Function :
  //	extractByIndex($p_index, $p_path="./", $p_remove_path="")
  //	extractByIndex($p_index, [$p_option, $p_option_value, ...])
  // Description :
  //	This method supports two synopsis. The first one is historical.
  //	This method is doing a partial extract of the archive.
  //	The extracted files or folders are identified by their index in the
  //	archive (from 0 to n).
  //	Note that if the index identify a folder, only the folder entry is
  //	extracted, not all the files included in the archive.
  // Parameters :
  //	$p_index : A single index (integer) or a string of indexes of files to
  //  extract. The form of the string is "0,4-6,8-12" with only numbers
  //  and '-' for range or ',' to separate ranges. No spaces or ';'
  //  are allowed.
  //	$p_path : Path where the files and directories are to be extracted
  //	$p_remove_path : First part ('root' part) of the memorized path
  //(if any similar) to remove while extracting.
  // Options :
  //	PCLZIP_OPT_PATH :
  //	PCLZIP_OPT_ADD_PATH :
  //	PCLZIP_OPT_REMOVE_PATH :
  //	PCLZIP_OPT_REMOVE_ALL_PATH :
  //	PCLZIP_OPT_EXTRACT_AS_STRING : The files are extracted as strings and
  // not as files.
  // The resulting content is in a new field 'content' in the file
  // structure.
  // This option must be used alone (any other options are ignored).
  //	PCLZIP_CB_PRE_EXTRACT :
  //	PCLZIP_CB_POST_EXTRACT :
  // Return Values :
  //	0 on failure,
  //	The list of the extracted files, with a status of the action.
  //	(see PclZip::listContent() for list entry format)
  // --------------------------------------------------------------------------------
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_CONST))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_RETURN
                                            (SCALAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_CONST)))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))
                                                        (SCALAR))
                                                    (AST_BINARY_OP
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_UNARY_OP
                                                                    (SCALAR))))
                                                        (SCALAR)))
                                                (
                                                    (AST_ASSIGN_OP
                                                        (AST_VAR)
                                                        (SCALAR)))))
                                        (AST_ASSIGN_OP
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CONST))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_CONST)
                                                            (SCALAR)))
                                                    (AST_RETURN
                                                        (SCALAR))))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_UNSET
                    (AST_VAR))
                (AST_RETURN
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))