	function &getCache($group='', $handler = 'function')
	{
		global $mainframe;

		jimport('joomla.cache.cache');

		/*
		 * If we are in the installation application, we don't need to be
		 * creating any directories or have caching on
		 */
		if ($mainframe->getClientId() != 2)
		{
			/*
			 * Add the application specific subdirectory for cache paths
			 */
			$cachePath = $mainframe->getCfg('cachepath').DS;
			$cachePath .= ($mainframe->getClientId()) ? 'administrator'.DS : 'site'.DS;

			/*
			 * Create cache directory if not present
			 */
			if (!JFolder::exists($cachePath))
			{
				JFolder::create($cachePath);
			}
			$options = array(
				'cacheDir' 		=> $cachePath,
				'caching' 		=> $mainframe->getCfg('caching'),
				'defaultGroup' 	=> $group,
				'lifeTime' 		=> $mainframe->getCfg('cachetime'),
				'fileNameProtection' => false
			);
		} else
		{
			$options = array(
				'cacheDir' 		=> $mainframe->getCfg('cachepath') . '/',
				'caching' 		=> false,
				'defaultGroup' 	=> $group,
				'lifeTime' 		=> $mainframe->getCfg('cachetime'),
				'fileNameProtection' => false
			);
		}

		$cache =& JCache::getInstance( $handler, $options );

		return $cache;
	}

	/**
	 * Returns a reference to the global JAuthorization object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @return object
	 */
||||||||	function &getCache($group='', $handler = 'function')
	{
		global $mainframe;

		jimport('joomla.cache.cache');

		$cachePath = $mainframe->getCfg('cachepath').DS;

		/*
		 * If we are in the installation application, we don't need to be
		 * creating any directories or have caching on
		 */
		if ($mainframe->getClientId() != 2)
		{
			/*
			 * Add the application specific subdirectory for cache paths
			 */

			$options = array(
				'cacheDir' 		=> $cachePath,
				'caching' 		=> $mainframe->getCfg('caching'),
				'defaultGroup' 	=> $group,
				'lifeTime' 		=> $mainframe->getCfg('cachetime'),
				'fileNameProtection' => false
			);
		}
		else
		{
			$options = array(
				'cacheDir' 		=> $mainframe->getCfg('cachepath') . '/',
				'caching' 		=> false,
				'defaultGroup' 	=> $group,
				'lifeTime' 		=> $mainframe->getCfg('cachetime'),
				'fileNameProtection' => false
			);
		}

		$cache =& JCache::getInstance( $handler, $options );

		return $cache;
	}

	/**
	 * Returns a reference to the global JAuthorization object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @return object
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_CONST)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))