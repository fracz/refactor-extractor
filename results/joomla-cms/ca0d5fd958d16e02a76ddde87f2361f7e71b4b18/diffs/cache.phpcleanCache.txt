	function cleanCache($group = false, $mode = 'ingroup')
	{
		global $mainframe;

		if ($mainframe->getCfg('caching'))
		{
			$cache = & JCache::getCache($group);
			$cache->clean($group, $mode);

			/*
			 * Build the cache directory
			 */
			$baseDir = $mainframe->getCfg('cachepath');
			$baseDir .= ($mainframe->getClientId()) ? DS.'administrator'.DS : DS.'site'.DS;
			$path = JPath::clean($baseDir);
			$files = JFolder::files($path, '.xml');
			foreach ($files as $file)
			{
				$file = $path.$file;
				unlink($file);
			}
		}
	}

	/**
	 * Deprecated, use JFactory createCache instead
	 * @since 1.1
	 */
||||||||	function cleanCache($group = false, $mode = 'ingroup')
	{
		global $mainframe;

		if ($mainframe->getCfg('caching'))
		{
			$cache = & JCache::getCache($group);
			$cache->clean($group, $mode);

			/*
			 * Build the cache directory
			 */
			$baseDir = $mainframe->getCfg('cachepath');
			jimport('joomla.filesystem.folder');
			$files = JFolder::files($baseDir, '.xml');
			foreach ($files as $file)
			{
				$file = $baseDir.DS.$file;
				unlink($file);
			}
		}
	}

	/**
	 * Deprecated, use JFactory createCache instead
	 * @since 1.1
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CONST))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_VAR)))))))))