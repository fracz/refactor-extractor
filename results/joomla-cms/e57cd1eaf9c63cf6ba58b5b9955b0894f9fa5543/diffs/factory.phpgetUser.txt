	function &getUser()
	{
	    jimport('joomla.user.user');

		// If there is a userid in the session, load the application user
		// object with the logged in user.
		$session  =& JFactory::getSession();
		$instance =& $session->get('user');

		// TODO: Find more permanent solution?? Jinx??
		if (!is_object($instance)) {
			$instance = new JUser(null);
			$instance->set('aid',	0);
			$session->set('user', $instance);
		}

		return $instance;
	}

	/**
	 * Get a cache object
	 *
	 * Returns a reference to the global {@link JCache} object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @param string The cache group name
	 * @param string The cache class name
	 * @return object JCache
	 */
||||||||	function &getUser()
	{
	    jimport('joomla.user.user');
		$session  =& JFactory::getSession();
		$instance =& $session->get('user');

		return $instance;
	}

	/**
	 * Get a cache object
	 *
	 * Returns a reference to the global {@link JCache} object, only creating it
	 * if it doesn't already exist.
	 *
	 * @access public
	 * @param string The cache group name
	 * @param string The cache class name
	 * @return object JCache
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CONST))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))