	function save( $updateOnly = false )
	{
		/*
		 * We need to get the JUser object for the current installed user, but
		 * might very well be modifying that user... and isn't it ironic...
		 * don't ya think?
		 */
		$me = & JFactory::getUser();

		/*
		 * Now that we have gotten all the field handling out of the way, time
		 * to check and store the object.
		 */
		if (!$this->_table->check())
		{
			$this->_setError("JUser::save: ".$this->_table->getError());
			return false;
		}

		// if user is made a Super Admin group and user is NOT a Super Admin
		if ( $this->get('gid') == 25 && $me->get('gid') != 25 )
		{
			// disallow creation of Super Admin by non Super Admin users
			$this->_setError("JUser::save: ".JText::_( 'WARNSUPERADMINCREATE' ));
			return false;
		}

		/*
		 * Since we have passed all checks lets load the user plugin group and
		 * fire the onBeforeStoreUser event.
		 */
		JPluginHelper::importPlugin( 'user' );
		$dispatcher =& JEventDispatcher::getInstance();
		$dispatcher->trigger( 'onBeforeStoreUser', array( get_object_vars( $this->_table ), $this->_table->id ) );

		/*
		 * Time for the real thing... are you ready for the real thing?  Store
		 * the JUserModel ... if a fail condition exists throw a warning
		 */
		$result = false;
		if (!$result = $this->_table->store())
		{
			$this->_setError("JUser::save: ".$this->_table->getError());
		}

		/*
		 * If we have just updated ourselves, lets modify our session
		 * parameters... i know a little too "inside the matrix" for some...
		 */
		if ( $me->get('id') == $this->get('id') )
		{
			JSession::set('session_user_params', $this->get( 'params' ));
		}

		/*
		 * If the id is not set, lets set the id for the JUser object.  This
		 * might happen if we just inserted a new user... and need to update
		 * this objects id value with the inserted id.
		 */
		if (empty($this->_id))
		{
			$this->_id = $this->get( 'id' );
		}

		// We stored the user... lets tell everyone about it.
		$dispatcher->trigger( 'onAfterStoreUser', array( get_object_vars( $this->_table ), $this->_table->id, $result, $this->getError() ) );

		return $result;
	}

	/**
	 * Method to delete the JUser object from the database
	 *
	 * @access 	private
	 * @param 	boolean $updateOnly Save the object only if not a new user
	 * @return 	boolean 			True on success
	 * @since 1.5
	 */
||||||||	function save( $updateOnly = false )
	{
		/*
		 * We need to get the JUser object for the current installed user, but
		 * might very well be modifying that user... and isn't it ironic...
		 * don't ya think?
		 */
		$me = & JFactory::getUser();

		/*
		 * Now that we have gotten all the field handling out of the way, time
		 * to check and store the object.
		 */
		if (!$this->_table->check())
		{
			$this->_setError("JUser::save: ".$this->_table->getError());
			return false;
		}

		// if user is made a Super Admin group and user is NOT a Super Admin
		if ( $this->get('gid') == 25 && $me->get('gid') != 25 )
		{
			// disallow creation of Super Admin by non Super Admin users
			$this->_setError("JUser::save: ".JText::_( 'WARNSUPERADMINCREATE' ));
			return false;
		}

		/*
		 * Since we have passed all checks lets load the user plugin group and
		 * fire the onBeforeStoreUser event.
		 */
		JPluginHelper::importPlugin( 'user' );
		$dispatcher =& JEventDispatcher::getInstance();
		$dispatcher->trigger( 'onBeforeStoreUser', array( get_object_vars( $this->_table ), $this->_table->id ) );

		/*
		 * Time for the real thing... are you ready for the real thing?  Store
		 * the JUserModel ... if a fail condition exists throw a warning
		 */
		$result = false;
		if (!$result = $this->_table->store())
		{
			$this->_setError("JUser::save: ".$this->_table->getError());
		}

		/*
		 * If the id is not set, lets set the id for the JUser object.  This
		 * might happen if we just inserted a new user... and need to update
		 * this objects id value with the inserted id.
		 */
		if (empty($this->_id))
		{
			$this->_id = $this->get( 'id' );
		}

		// We stored the user... lets tell everyone about it.
		$dispatcher->trigger( 'onAfterStoreUser', array( get_object_vars( $this->_table ), $this->_table->id, $result, $this->getError() ) );

		return $result;
	}

	/**
	 * Method to delete the JUser object from the database
	 *
	 * @access 	private
	 * @param 	boolean $updateOnly Save the object only if not a new user
	 * @return 	boolean 			True on success
	 * @since 1.5
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (NULL)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (NULL)))))
    (AST_RETURN
        (AST_VAR)))