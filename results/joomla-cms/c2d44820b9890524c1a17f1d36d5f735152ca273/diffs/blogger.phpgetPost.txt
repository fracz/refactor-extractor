||||||||	function getPost($appkey, $postid, $username, $password)
	{
		global $xmlrpcerruser, $xmlrpcI4, $xmlrpcInt, $xmlrpcBoolean, $xmlrpcDouble, $xmlrpcString, $xmlrpcDateTime, $xmlrpcBase64, $xmlrpcArray, $xmlrpcStruct, $xmlrpcValue;

		if(!JBloggerHelper::authenticateUser($username, $password)) {
			return new xmlrpcresp(0, $xmlrpcerruser+1, "Login Failed");
		}

		$user =& JUser::getInstance($username);
		//TODO::implement generic access check

		// load the row from the db table
		$item =& JTable::getInstance('content', JFactory::getDBO() );
		$item->load( $postid );

		$content  = '<title>'.$item->title.'</title>';
		//$content .= '<category>'.$item->catid.'</category>';
		$content .= $item->introtext.'<more_text>'.$item->fulltext.'</more_text>';

		$struct = new xmlrpcval(
		array(
		   'userid'    => new xmlrpcval($item->created_by),
		   'dateCreated' => new xmlrpcval('0'), //TODO
		   'content'     => new xmlrpcval($content),
		   'postid'  => new xmlrpcval($item->id)
		), $xmlrpcStruct);

		return new xmlrpcresp($struct);
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_STATIC_CALL))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (SCALAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_VAR))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)))))