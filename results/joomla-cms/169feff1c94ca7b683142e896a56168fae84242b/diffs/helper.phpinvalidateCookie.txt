	public static function invalidateCookie($userId, $cookieName)
	{
		$db = JFactory::getDbo();
		$query = $db->getQuery(true);

		// Invalidate cookie in the database
		$query
			->update($db->quoteName('#__user_keys'))
			->set($db->quoteName('invalid') . ' = 1')
			->where($db->quotename('user_id') . ' = ' . $db->quote($userId));

		$db->setQuery($query)->execute();

		// Destroy the cookie in the browser.
		$app = JFactory::getApplication();
		$app->input->cookie->set($cookieName, false, time() - 42000, $app->get('cookie_path', '/'), $app->get('cookie_domain'), false, true);

		return true;
	}

	/**
	 * Clear all expired tokens for all users.
	 *
	 * @return  mixed  Database query result
	 *
	 * @since   3.2
	 * @deprecated  4.0  This is handled in the authentication plugin itself
	 */
||||||||	public static function invalidateCookie($userId, $cookieName)
	{
		$db = JFactory::getDbo();
		$query = $db->getQuery(true);

		// Invalidate cookie in the database
		$query
			->update($db->quoteName('#__user_keys'))
			->set($db->quoteName('invalid') . ' = 1')
			->where($db->quotename('user_id') . ' = ' . $db->quote($userId));

		$db->setQuery($query)->execute();

		// Destroy the cookie in the browser.
		$app = JFactory::getApplication();
		$app->input->cookie->set($cookieName, '', 1, $app->get('cookie_path', '/'), $app->get('cookie_domain', ''));

		return true;
	}

	/**
	 * Clear all expired tokens for all users.
	 *
	 * @return  mixed  Database query result
	 *
	 * @since   3.2
	 * @deprecated  4.0  This is handled in the authentication plugin itself
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))