||||||||	function &getInstance($client, $options = array())
	{
		//Load the router object
		$info =& JApplicationHelper::getClientInfo($client, true);

		$path = $info->path.DS.'includes'.DS.'router.php';
		if(file_exists($path))
		{
			require_once $path;

			// Create a JRouter object
			$classname = 'JRouter'.ucfirst($client);
			$instance = new $classname($options);
		}
		else
		{
			$error = new JException( E_ERROR, 500, 'Unable to load router: '.$classname);
			return $error;
		}

		return $instance;
	}

	/**
	 * Route a request
	 *
	 * @access public
	 * @since	1.5
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (SCALAR))
                (AST_CONST))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_CONST)
                            (SCALAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))