	protected function _setToolbar()
	{
		JToolBarHelper::title( JText::_( 'Plugin Manager' ), 'plugin.png' );
		JToolBarHelper::editList();
		JToolBarHelper::divider();
		JToolBarHelper::publishList();
		JToolBarHelper::unpublishList();
		JToolBarHelper::divider();
		JToolBarHelper::preferences('com_plugins');
		JToolBarHelper::divider();
		JToolBarHelper::help( 'screen.plugins' );
	}
}||||||||	protected function _setToolbar()
	{
		$state	= $this->get('State');
		$canDo	= PluginsHelper::getActions();

		JToolBarHelper::title(JText::_('Plugn_Manager_Plugins'), 'plugin');
		if ($canDo->get('core.edit')) {
			JToolBarHelper::editList('plugin.edit');
		}
		if ($canDo->get('core.edit.state')) {
			JToolBarHelper::custom('plugins.publish', 'publish.png', 'publish_f2.png', 'JToolbar_Enable', true);
			JToolBarHelper::custom('plugins.unpublish', 'unpublish.png', 'unpublish_f2.png', 'JToolbar_Disable', true);
		}
		if ($canDo->get('core.admin')) {
			JToolBarHelper::preferences('com_plugins');
		}
		JToolBarHelper::help('screen.plugins');
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_STATIC_CALL
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (SCALAR))))