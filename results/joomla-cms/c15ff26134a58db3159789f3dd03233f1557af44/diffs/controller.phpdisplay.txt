	function display( )
	{
		switch($this->getTask())
		{
			case 'add'     :
			case 'edit'    :
			{
				JRequest::setVar( 'hidemainmenu', 1 );
				JRequest::setVar( 'layout', 'form'  );
				JRequest::setVar( 'view', 'plugin' );
			} break;
		}

		parent::display();
	}

||||||||	public function display()
	{
		require_once JPATH_COMPONENT.'/helpers/plugins.php';

		// Get the document object.
		$document	= JFactory::getDocument();

		// Set the default view name and format from the Request.
		$vName		= JRequest::getWord('view', 'plugins');
		$vFormat	= $document->getType();
		$lName		= JRequest::getWord('layout', 'default');

		// Get and render the view.
		if ($view = &$this->getView($vName, $vFormat))
		{
			// Get the model for the view.
			$model = &$this->getModel($vName);

			// Push the model into the view (as default).
			$view->setModel($model, true);
			$view->setLayout($lName);

			// Push document object into the view.
			$view->assignRef('document', $document);

			$view->display();

			// Load the submenu.
			PluginsHelper::addSubmenu($vName);
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))))