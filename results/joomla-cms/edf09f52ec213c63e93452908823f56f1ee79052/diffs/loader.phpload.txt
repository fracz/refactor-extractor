	public static function load($class)
	{
		$class = strtolower($class); //force to lower case

		if (class_exists($class)) {
			return true;
		}

		if (array_key_exists(strtolower($class), JLoader::$classes))
		{
			include JLoader::$classes[$class];
			return true;
		}
		return false;
	}
}

/**
 * Global application exit.
 *
 * This function provides a single exit point for the framework.
 *
 * @param	mixed	Exit code or string. Defaults to zero.
 * @since	1.5
 */
function jexit($message = 0)
{
	exit($message);
}

/**
 * Intelligent file importer
 *
 * @param	string	A dot syntax path.
 * @since	1.5
 */
function jimport($path)
{
	return JLoader::import($path);
}||||||||	public static function load($class)
	{
		$class = strtolower($class); //force to lower case

		if (class_exists($class)) {
			return true;
		}

		if (array_key_exists($class, JLoader::$classes))
		{
			include JLoader::$classes[$class];
			return true;
		}
		return false;
	}
}

/**
 * Global application exit.
 *
 * This function provides a single exit point for the framework.
 *
 * @param	mixed	Exit code or string. Defaults to zero.
 * @since	1.5
 */
function jexit($message = 0)
{
	exit($message);
}

/**
 * Intelligent file importer
 *
 * @param	string	A dot syntax path.
 * @since	1.5
 */
function jimport($path)
{
	return JLoader::import($path);
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_STATIC_PROP)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))