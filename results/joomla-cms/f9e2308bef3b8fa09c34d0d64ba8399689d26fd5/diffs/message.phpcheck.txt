	function check()
	{
		return true;
	}

	/**
	 * Method to send a private message
	 *
	 * @param	int		Sender's userid.
	 * @param	int		Recipient's userid.
	 * @param	string	The message subject.
	 * @param	string	The message body.
	 * @return	boolean	True on success.
	 * @since	1.5
	 */
||||||||	function check()
	{
		// Check the to and from users.
		$user = new JUser($table->user_id_from);
		if (empty($user->id)) {
			$this->setError('Messages_Error_Invalid_from_user');
			return false;
		}

		$user = new JUser($table->user_id_to);
		if (empty($user->id)) {
			$this->setError('Messages_Error_Invalid_to_user');
			return false;
		}

		if (empty($this->subject)) {
			$this->setError('Messages_Error_Invalid_subject');
			return false;
		}

		if (empty($this->message)) {
			$this->setError('Messages_Error_Invalid_message');
			return false;
		}

		return true;
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))