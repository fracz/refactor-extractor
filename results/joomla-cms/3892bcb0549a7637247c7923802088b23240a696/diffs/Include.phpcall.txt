	function call( $params, $content )
	{
		if(!isset($params['type'])) {
			return false;
		}

		$type = isset($params['type']) ? strtolower( $params['type'] ) : null;
		unset($params['type']);

		$name = isset($params['name']) ? strtolower( $params['name'] ) : null;
		unset($params['name']);

		switch($type)
		{
			case 'modules'  		:
			{
				$modules =& JModuleHelper::getModules($name);

				$total = count($modules);
				for($i = 0; $i < $total; $i++) {
					foreach($params as $param => $value) {
						$modules[$i]->$param = $value;
					}
				}

				$this->_addPlaceholder($type, $name);

			} break;
			case 'module' 		:
			{
				$module =& JModuleHelper::getModule($name);

				foreach($params as $param => $value) {
					$module->$param = $value;
				}

				$this->_addPlaceholder($type, $name);
			} break;

			case 'message'		:
			case 'head'         :
			case 'component'	:
			{
				//do nothing
			}	break;

			default : $this->_addPlaceholder($type, $name);
		}

		return '{'.strtoupper($type).'_'.strtoupper($name).'}';
	}

	 /**
	* reference to the patTemplate object that instantiated the module
	*
	* @access	public
	* @param	object		JDocument object
	*/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_CONST)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_CONST)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN_REF
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_FOR
                        (AST_EXPR_LIST
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))
                        (AST_EXPR_LIST
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_EXPR_LIST
                            (AST_POST_INC
                                (AST_VAR)))
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_VAR))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN_REF
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR))))||||||||