    public function delay($time)
    {
        if (null !== $this->result) {
            return $this->unwrap()->delay($time);
        }

        ++$this->children;

        return new self(
            function (callable $resolve) use ($time) {
                $this->onFulfilled(function () use (&$timer, $time, $resolve) {
                    $timer = Loop\timer($time, function () use ($resolve) {
                        $resolve($this->result);
                    });
                });

                $this->onRejected(function () use ($resolve) {
                    $resolve($this->result);
                });

                return function (Exception $exception) use (&$timer) {
                    if (null !== $timer) {
                        $timer->stop();
                    }

                    if (0 === --$this->children) {
                        $this->cancel($exception);
                    }
                };
            }
        );
    }

    /**
     * {@inheritdoc}
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_VAR)))))))
    (AST_PRE_INC
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_NEW
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLOSURE
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR)
                                        (AST_CLOSURE_VAR)
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (AST_CLOSURE
                                                        (AST_CLOSURE_USES
                                                            (AST_CLOSURE_VAR))
                                                        (
                                                            (AST_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR)))))))))))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CLOSURE
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_CALL
                                            (AST_VAR)
                                            (
                                                (AST_PROP
                                                    (AST_VAR))))))))
                        (AST_RETURN
                            (AST_CLOSURE
                                (PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (AST_VAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_PRE_DEC
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)))))))))))))))||||||||