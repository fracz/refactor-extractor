    public function testSimultaneousEmitThrows()
    {
        $emitter = new Emitter(function (callable $emit) {
            $coroutine1 = new Coroutine($emit(1));
            $coroutine2 = new Coroutine($emit(2));

            yield $coroutine1;
            yield $coroutine2;
        });

        $awaitable = new Coroutine($emitter->each($this->createCallback(1)));

        $awaitable->wait();
    }

    /**
     * @depends testEmit
     * @expectedException \Icicle\Tests\Observable\EmitterTestException
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR))))))
                        (AST_YIELD
                            (AST_VAR)
                            (NULL))
                        (AST_YIELD
                            (AST_VAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||