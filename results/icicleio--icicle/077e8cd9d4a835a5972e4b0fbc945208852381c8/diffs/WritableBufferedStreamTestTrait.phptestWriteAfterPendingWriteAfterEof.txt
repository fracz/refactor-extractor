||||||||    public function testWriteAfterPendingWriteAfterEof()
    {
        list($readable, $writable) = $this->createStreams();

        do { // Write until a pending promise is returned.
            $promise = $writable->write(self::WRITE_STRING);
        } while (!$promise->isPending());

        // Extra write to ensure queue is not empty when write callback is called.
        $promise = $writable->write(self::WRITE_STRING);

        $readable->close(); // Close other end of pipe.

        $callback = $this->createCallback(1);
        $callback->method('__invoke')
                 ->with($this->isInstanceOf('Icicle\Socket\Exception\FailureException'));

        $promise->done($this->createCallback(0), $callback);

        Loop::run();
    }

    /**
     * @depends testAwait
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))))
        (AST_UNARY_OP
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_VAR)))
    (AST_STATIC_CALL))