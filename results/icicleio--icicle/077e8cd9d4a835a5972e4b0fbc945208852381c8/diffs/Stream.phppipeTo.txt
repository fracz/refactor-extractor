||||||||    public function pipeTo(WritableStreamInterface $stream, $byte, $endOnClose = true, $length = null)
    {
        if (!$stream->isWritable()) {
            return Promise::reject(new UnwritableException('The stream is not writable.'));
        }

        if (null !== $length) {
            $length = (int) $length;
            if (0 > $length) {
                return Promise::resolve(0);
            }
        }

        if ($byte !== null) {
            $byte = is_int($byte) ? pack('C', $byte) : (string) $byte;
            $byte = strlen($byte) ? $byte[0] : null;
        }

        $result = new Promise(
            function ($resolve, $reject) use (&$promise, $stream, $byte, $length) {
                $handler = function ($data) use (&$handler, &$promise, &$length, $stream, $byte, $resolve, $reject) {
                    static $bytes = 0;
                    $count = strlen($data);
                    $bytes += $count;

                    $promise = $stream->write($data);

                    if (null !== $byte && $data[$count - 1] === $byte) {
                        $resolve($bytes);
                        return;
                    }

                    if (null !== $length && 0 >= $length -= $count) {
                        $resolve($bytes);
                        return;
                    }

                    $promise = $promise->then(
                        function () use ($byte, $length) {
                            return $this->readTo($byte, $length);
                        },
                        function (Exception $exception) use ($bytes, $resolve) {
                            $resolve($bytes);
                            throw $exception;
                        }
                    );

                    $promise->done($handler, $reject);
                };

                $promise = $this->readTo($byte, $length);
                $promise->done($handler, $reject);
            },
            function (Exception $exception) use (&$promise) {
                $promise->cancel($exception);
            }
        );

        if ($endOnClose) {
            $result->done(null, function () use ($stream) {
                if (!$this->isOpen()) {
                    $stream->end();
                }
            });
        }

        return $result;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_NEW
                                (
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (AST_CAST
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_STATIC
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CONST)
                                                    (AST_VAR))
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (AST_VAR)))
                                            (
                                                (AST_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)))
                                                (AST_RETURN
                                                    (NULL)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CONST)
                                                    (AST_VAR))
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_ASSIGN_OP
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR)))
                                                (AST_RETURN
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CLOSURE
                                                    (AST_CLOSURE_USES
                                                        (AST_CLOSURE_VAR)
                                                        (AST_CLOSURE_VAR))
                                                    (
                                                        (AST_RETURN
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR)
                                                                    (AST_VAR))))))
                                                (AST_CLOSURE
                                                    (PARAM_TYPENO_PARAM_DEFAULT)
                                                    (AST_CLOSURE_USES
                                                        (AST_CLOSURE_VAR)
                                                        (AST_CLOSURE_VAR))
                                                    (
                                                        (AST_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR)))
                                                        (AST_THROW
                                                            (AST_VAR)))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST)
                        (AST_CLOSURE
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))))
    (AST_RETURN
        (AST_VAR)))