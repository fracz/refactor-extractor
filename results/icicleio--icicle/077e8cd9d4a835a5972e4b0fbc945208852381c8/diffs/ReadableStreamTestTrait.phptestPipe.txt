||||||||    public function testPipe()
    {
        list($readable, $writable) = $this->createStreams();

        $mock = $this->getMockBuilder('Icicle\Stream\WritableStreamInterface')->getMock();

        $mock->method('isWritable')
             ->will($this->returnValue(true));

        $mock->expects($this->exactly(3))
             ->method('write')
             ->will($this->returnCallback(function ($data) {
                 static $count = 0;
                 ++$count;
                 $this->assertSame(self::WRITE_STRING, $data);
                 if (3 > $count) {
                     return Promise::resolve(strlen($data));
                 } else {
                     return Promise::reject(new Exception());
                 }
             }));

        $promise = $readable->pipe($mock);
        $writable->write(self::WRITE_STRING);

        Loop::tick();

        $this->assertTrue($promise->isPending());
        $writable->write(self::WRITE_STRING);

        Loop::tick();

        $this->assertTrue($promise->isPending());
        $writable->write(self::WRITE_STRING);

        Loop::tick();

        $this->assertTrue($promise->isFulfilled());
        $this->assertSame(strlen(self::WRITE_STRING) * 3, $promise->getResult());
    }

    /**
     * @depends testPipe
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_STATIC
                                (AST_VAR)
                                (SCALAR))
                            (AST_PRE_INC
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_RETURN
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_NEW)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))