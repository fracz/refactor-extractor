	private static function _colorize( $text, $options, $nlAfter = true )
	{
		$nlAfter = $nlAfter ? PHP_EOL : '';

		if ( Kint::enabled() === Kint::MODE_PLAIN && strpos( $options, 'bold' ) !== false ) {
			$text = "<b>{$text}</b>";
		}

		if ( !self::$_enableColors || Kint::enabled() !== Kint::MODE_CLI ) return $text . $nlAfter;

		return
			"\x1b["
			. strtr( $options, self::$_cliEffects + array( ' ' => ';' ) ) . 'm' . $text . "\x1b[0m"
			. $nlAfter;
	}


||||||||	private static function _colorize( $text, $type, $nlAfter = true )
	{
		$nlAfter = $nlAfter ? PHP_EOL : '';

		switch ( Kint::enabled() ) {
			case Kint::MODE_WHITESPACE:
				return $text . $nlAfter;
				break;
			case Kint::MODE_PLAIN:
				if ( !self::$_enableColors ) return $text . $nlAfter;

				switch ( $type ) {
					case 'value':
						$text = "<i>{$text}</i>";
						break;
					case 'type':
						$text = "<b>{$text}</b>";
						break;
					case 'title':
						$text = "<u>{$text}</u>";
						break;
				}

				return $text . $nlAfter;
				break;
			case Kint::MODE_CLI:
				if ( !self::$_enableColors ) return $text . $nlAfter;

				$optionsMap = array(
					'title' => "\x1b[36m", # cyan
					'type'  => "\x1b[35;1m", # magenta bold
					'value' => "\x1b[32m", # green
				);

				return $optionsMap[ $type ] . $text . "\x1b[0m" . $nlAfter;
				break;
			default:
		}

		if ( Kint::enabled() === Kint::MODE_PLAIN ) {
			if ( strpos( $type, 'bold' ) !== false ) {
				$text = "<b>{$text}</b>";
			}
			if ( strpos( $type, 'italic' ) !== false ) {
				$text = "<i>{$text}</i>";
			}
		}

		if ( !self::$_enableColors || Kint::enabled() !== Kint::MODE_CLI ) return $text . $nlAfter;

		return
			"\x1b["
			. strtr( $type, self::$_cliEffects + array( ' ' => ';' ) ) . 'm' . $text . "\x1b[0m"
			. $nlAfter;
	}


||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_CONST)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_STATIC_PROP))
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_STATIC_PROP)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR)))))))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_CONST)
            (SCALAR)))
    (AST_SWITCH
        (AST_STATIC_CALL)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_STATIC_PROP))
                            (
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_SWITCH
                        (AST_VAR)
                        (AST_SWITCH_LIST
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_BREAK
                                        (NULL))))))
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_STATIC_PROP))
                            (
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_CALL)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_STATIC_PROP))
                (AST_BINARY_OP
                    (AST_STATIC_CALL)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_STATIC_PROP)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR)))))))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))
            (AST_VAR))))