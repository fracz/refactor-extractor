	protected function _parse( & $variable )
	{
		try {
			if ( !is_string( $variable )
				|| substr( $variable, 0, 5 ) !== '<?xml'
				|| ( $xml = simplexml_load_string( $variable ) ) === null
			) return false;
		} catch ( Exception $e ) {
			return false;
		}

		$this->_value = kintParser::factory( $xml );
		$this->_type  = 'XML';
	}
}||||||||	protected function _parse( & $variable )
	{
		try {
			if ( !is_string( $variable )
				|| substr( $variable, 0, 5 ) !== '<?xml'
				|| ( $xml = simplexml_load_string( $variable ) ) === null
			) return false;
		} catch ( Exception $e ) {
			return false;
		}

		$this->extendedValue = kintParser::factory( $val )->extendedValue;
		$this->type          = 'XML';
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_CONST)))
                    (
                        (AST_RETURN
                            (AST_CONST))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_CONST)))
                    (
                        (AST_RETURN
                            (AST_CONST))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR)))