	public static function _autoload( $className )
	{
		$className = strtolower( $className );
		if ( substr( $className, 0, 4 ) !== 'kint' ) return;

		if ( substr( $className, 0, 13 ) === 'kint_parsers_' ) {
			if ( file_exists( $fileName = KINT_DIR . 'parsers/custom/' . substr( $className, 13 ) . '.php' ) ) {
				require $fileName;
			}
		} elseif ( substr( $className, 0, 16 ) === 'kint_decorators_' ) {
			if ( file_exists( $fileName = KINT_DIR . 'decorators/' . substr( $className, 16 ) . '.php' ) ) {
				require $fileName;
			}
		}
	}

	/**
	 * Prints a debug backtrace
	 *
	 * @param array $trace [OPTIONAL] you can pass your own trace, otherwise, `debug_backtrace` will be called
	 *
	 * @return void
	 */
||||||||	public static function _autoload( $className )
	{
		$className = strtolower( $className );
		if ( substr( $className, 0, 16 ) === 'kint_decorators_' ) {
			if ( file_exists( $fileName = KINT_DIR . 'decorators/' . substr( $className, 16 ) . '.php' ) ) {
				require $fileName;
			}
		}
	}

	/**
	 * Prints a debug backtrace
	 *
	 * @param array $trace [OPTIONAL] you can pass your own trace, otherwise, `debug_backtrace` will be called
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (SCALAR)))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (SCALAR)))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (SCALAR)))))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_VAR)))))))))