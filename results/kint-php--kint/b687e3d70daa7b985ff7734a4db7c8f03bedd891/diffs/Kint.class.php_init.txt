	public static function _init()
	{
		spl_autoload_register( array( 'kint', '_autoload' ) );
		require KINT_DIR . 'parsers/basetypes.php';

		$fh = opendir( KINT_DIR . 'parsers/custom' );
		while ( $fileName = readdir( $fh ) ) {
			if ( substr( $fileName, -4 ) !== '.php' ) continue;
			self::$_customDataTypes[] = substr( $fileName, 0, -4 );
		}

		// init settings
		if ( isset( $GLOBALS['_kint_settings'] ) ) {
			foreach ( $GLOBALS['_kint_settings'] as $key => $val ) {
				self::$$key = $val;
			}
		}
		self::$_richDecorator  = new Kint_Decorators_Rich;
		self::$_plainDecorator = new Kint_Decorators_Plain;
	}

	/**
	 * @static
	 *
	 * @param $className
	 *
	 * @return bool
	 */
||||||||	public static function _init()
	{
		spl_autoload_register( array( 'kint', '_autoload' ) );

		# init settings
		if ( isset( $GLOBALS['_kint_settings'] ) ) {
			foreach ( $GLOBALS['_kint_settings'] as $key => $val ) {
				self::$$key = $val;
			}
		}
		self::$_richDecorator  = new Kint_Decorators_Rich;
		self::$_plainDecorator = new Kint_Decorators_Plain;
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR)))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR))))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_STATIC_PROP)
                    (NULL))
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_UNARY_OP
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_STATIC_PROP)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_STATIC_PROP)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW)))