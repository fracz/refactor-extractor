	public function setFields($fields) {
		if (!is_array($fields)) {
			throw new Elastica_Exception_Invalid('Parameter has to be an array');
		}

		$this->_fields = $fields;
		return $this;
	}

	/**
	 * Converts the query string object to an array
	 *
	 * @return array Query string array
	 */
||||||||	public function setFields($fields) {
		if (!is_array($fields)) {
			throw new Elastica_Exception_Invalid('Parameter has to be an array');
		}
		return $this->setParam('fields', $fields);
	}

	/**
	 * Converts the query string object to an array
	 *
	 * @return array Query string array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_VAR)))))