	public function __construct() {
		$this->_client = new Elastica_Client();

		if (empty($this->_indexName)) {
			throw new Elastica_Elastica_Exception('Index name has to be set');
		}

		if (empty($this->_typeName)) {
			throw new Elastica_Elastica_Exception('Type name has to be set');
		}

		$this->_index = new Elastica_Index($this->_client, $this->_indexName);
		$this->_type = new Elastica_Type($this->_index, $this->_typeName);
	}

	/**
	 * Creates the index and sets the mapping for this type
	 *
	 * @param bool $recreate OPTIONAL Recreates the index if true (default = false)
	 */
||||||||	public function __construct(Elastica_Client $client = null) {
		if (!$client) {
			$client = new Elastica_Client();
		}

		if (empty($this->_indexName)) {
			throw new Elastica_Elastica_Exception('Index name has to be set');
		}

		if (empty($this->_typeName)) {
			throw new Elastica_Elastica_Exception('Type name has to be set');
		}

		$this->_client = $client;
		$this->_index = new Elastica_Index($this->_client, $this->_indexName);
		$this->_type = new Elastica_Type($this->_index, $this->_typeName);
	}

	/**
	 * Creates the index and sets the mapping for this type
	 *
	 * @param bool $recreate OPTIONAL Recreates the index if true (default = false)
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))))