  protected function whenFileIsDeleted()
  {
    $result = $this->git->transactional(function(TQ\Vcs\Repository\Transaction $t) {
      unlink($this->repository."/test.txt");
      $t->setCommitMsg('Add configuration');
    });
  }

||||||||  protected function whenFileIsDeleted()
  {
    $result = $this->git->transactional(function(TQ\Vcs\Repository\Transaction $t) {
      unlink($this->repository."/test.txt");
      $t->setCommitMsg('Deleted test.txt');
    });
    $this->whenRepositoryIsSynchronized();
  }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLOSURE
                    (PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)))