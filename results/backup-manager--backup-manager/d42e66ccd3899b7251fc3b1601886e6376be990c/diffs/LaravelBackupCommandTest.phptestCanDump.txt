    public function testCanDump()
    {
        // @todo - move mysqldumper stuff into the service provider so that I can mock it out
        $this->runCommand();
    }

||||||||    public function testCanDump()
    {
        $app = $this->getApp();

        // ensure that dumper is called
        $dumper = m::mock('McCool\DatabaseBackup\Dumpers\MysqlDumper');
        $dumper->shouldReceive('getOutputFilename');
        $dumper->shouldReceive('dump')->once();
        $app['databasebackup.dumpers.mysqldumper'] = $dumper;

        // prepare
        $command = $this->getCommand();
        $command->setLaravel($app);

        // run
        $this->runCommand($command, ['gzip' => true]);
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR))))))