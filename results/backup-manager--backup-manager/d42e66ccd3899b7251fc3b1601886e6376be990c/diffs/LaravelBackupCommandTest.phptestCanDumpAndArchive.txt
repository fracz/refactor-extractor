||||||||    public function testCanDumpAndArchive()
    {
        $app = $this->getApp();

        // ensure that dumper is called
        $dumper = m::mock('McCool\DatabaseBackup\Dumpers\DumperInterface');
        $dumper->shouldReceive('getOutputFilename');
        $dumper->shouldReceive('dump')->once();
        $app['databasebackup.dumpers.mysqldumper'] = $dumper;

        // ensure that archiver is called
        $archiver = m::mock('McCool\DatabaseBackup\Archivers\ArchiverInterface');
        $archiver->shouldReceive('getOutputFilename');
        $archiver->shouldReceive('archive')->once();
        $app['databasebackup.archivers.gziparchiver'] = $archiver;

        // prepare
        $command = $this->getCommand();
        $command->setLaravel($app);

        // run
        $this->runCommand($command);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))