	public function __construct(\ThreadedLogger $logger, \ClassLoader $loader){
		$this->loader = $loader;
		$this->logger = $logger;
		$loadPaths = [];
		$this->addDependency($loadPaths, new \ReflectionClass($this->loader));
		$this->loadPaths = array_reverse($loadPaths);

		$sockets = [];
		if(!socket_create_pair((strtoupper(substr(PHP_OS, 0, 3)) === 'WIN' ? AF_INET : AF_UNIX), SOCK_STREAM, 0, $sockets)){
			throw new \Exception("Could not create IPC sockets. Reason: " . socket_strerror(socket_last_error()));
		}

		$this->internalSocket = $sockets[0];
		socket_set_block($this->internalSocket); //IMPORTANT!
		@socket_set_option($this->internalSocket, SOL_SOCKET, SO_SNDBUF, 1024 * 1024 * 2);
		@socket_set_option($this->internalSocket, SOL_SOCKET, SO_RCVBUF, 1024 * 1024 * 2);
		$this->externalSocket = $sockets[1];
		socket_set_nonblock($this->externalSocket);
		@socket_set_option($this->externalSocket, SOL_SOCKET, SO_SNDBUF, 1024 * 1024 * 2);
		@socket_set_option($this->externalSocket, SOL_SOCKET, SO_RCVBUF, 1024 * 1024 * 2);

		$this->start();
	}

||||||||	public function __construct(\ThreadedLogger $logger, \ClassLoader $loader){
		$this->loader = $loader;
		$this->logger = $logger;
		$loadPaths = [];
		$this->addDependency($loadPaths, new \ReflectionClass($this->loader));
		$this->loadPaths = array_reverse($loadPaths);

		$this->externalQueue = new \Threaded();
		$this->internalQueue = new \Threaded();

		$this->start();
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_CONST)
                                                (SCALAR)
                                                (SCALAR)))))
                                (SCALAR))
                            (AST_CONST)
                            (AST_CONST))
                        (AST_CONST)
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_CALL))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CONST)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)))