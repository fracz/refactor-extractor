	protected function sendChunk($levelID, FullChunk $chunk){
		$binary = chr(GenerationManager::PACKET_SEND_CHUNK) . Binary::writeInt($levelID) . chr(strlen($class = get_class($chunk))) . $class . $chunk->toBinary();
		@socket_write($this->socket, Binary::writeInt(strlen($binary)) . $binary);
	}

||||||||	protected function sendChunk($levelID, FullChunk $chunk){
		$buffer = chr(GenerationManager::PACKET_SEND_CHUNK) . Binary::writeInt($levelID) . chr(strlen($class = get_class($chunk))) . $class . $chunk->toBinary();
		$this->generationThread->pushMainToThreadPacket($buffer);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))))))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))))))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR))))