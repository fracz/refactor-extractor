	public function readChunk($x, $z, $generate = true, $forward = false){
		$index = self::getChunkOffset($x, $z);
		if($index < 0 or $index >= 4096){
			return null;
		}

		$this->lastUsed = time();

		if(!$this->isChunkGenerated($index)){
			if($generate === true){
				//Allocate space
				$this->locationTable[$index][0] = ++$this->lastSector;
				$this->locationTable[$index][1] = 1;
				fseek($this->filePointer, $this->locationTable[$index][0] << 12);
				fwrite($this->filePointer, str_pad(Binary::writeInt(-1) . chr(self::COMPRESSION_ZLIB), 4096, "\x00", STR_PAD_RIGHT));
				$this->writeLocationIndex($index);
			}else{
				return null;
			}
		}

		fseek($this->filePointer, $this->locationTable[$index][0] << 12);
		$length = Binary::readInt(fread($this->filePointer, 4));
		$compression = ord(fgetc($this->filePointer));

		if($length <= 0 or $length >= self::MAX_SECTOR_LENGTH){ //Not yet generated / corrupted
			if($length >= self::MAX_SECTOR_LENGTH){
				$this->locationTable[$index][0] = ++$this->lastSector;
				$this->locationTable[$index][1] = 1;
				MainLogger::getLogger()->error("Corrupted chunk header detected");
			}
			$this->generateChunk($x, $z);
			fseek($this->filePointer, $this->locationTable[$index][0] << 12);
			$length = Binary::readInt(fread($this->filePointer, 4));
			$compression = ord(fgetc($this->filePointer));
		}

		if($length > ($this->locationTable[$index][1] << 12)){ //Invalid chunk, bigger than defined number of sectors
			MainLogger::getLogger()->error("Corrupted bigger chunk detected");
			$this->locationTable[$index][1] = $length >> 12;
			$this->writeLocationIndex($index);
		}elseif($compression !== self::COMPRESSION_ZLIB and $compression !== self::COMPRESSION_GZIP){
			MainLogger::getLogger()->error("Invalid compression type");

			return null;
		}

		$chunk = Chunk::fromBinary(fread($this->filePointer, $length - 1), $this->levelProvider);
		if($chunk instanceof Chunk){
			return $chunk;
		}elseif($forward === false){
			MainLogger::getLogger()->error("Corrupted chunk detected");
			$this->generateChunk($x, $z);

			return $this->readChunk($x, $z, $generate, true);
		}else{
			return null;
		}
	}

||||||||	public function readChunk($x, $z, $generate = true, $forward = false){
		$index = self::getChunkOffset($x, $z);
		if($index < 0 or $index >= 4096){
			return null;
		}

		$this->lastUsed = time();

		if(!$this->isChunkGenerated($index)){
			if($generate === true){
				//Allocate space
				$this->locationTable[$index][0] = ++$this->lastSector;
				$this->locationTable[$index][1] = 1;
				fseek($this->filePointer, $this->locationTable[$index][0] << 12);
				fwrite($this->filePointer, str_pad(Binary::writeInt(-1) . chr(self::COMPRESSION_ZLIB), 4096, "\x00", STR_PAD_RIGHT));
				$this->writeLocationIndex($index);
			}else{
				return null;
			}
		}

		fseek($this->filePointer, $this->locationTable[$index][0] << 12);
		$length = Binary::readInt(fread($this->filePointer, 4));
		$compression = ord(fgetc($this->filePointer));

		if($length <= 0 or $length >= self::MAX_SECTOR_LENGTH){ //Not yet generated / corrupted
			if($length >= self::MAX_SECTOR_LENGTH){
				$this->locationTable[$index][0] = ++$this->lastSector;
				$this->locationTable[$index][1] = 1;
				MainLogger::getLogger()->error("Corrupted chunk header detected");
			}
			$this->generateChunk($x, $z);
			fseek($this->filePointer, $this->locationTable[$index][0] << 12);
			$length = Binary::readInt(fread($this->filePointer, 4));
			$compression = ord(fgetc($this->filePointer));
		}

		if($length > ($this->locationTable[$index][1] << 12)){ //Invalid chunk, bigger than defined number of sectors
			MainLogger::getLogger()->error("Corrupted bigger chunk detected");
			$this->locationTable[$index][1] = $length >> 12;
			$this->writeLocationIndex($index);
		}elseif($compression !== self::COMPRESSION_ZLIB and $compression !== self::COMPRESSION_GZIP){
			MainLogger::getLogger()->error("Invalid compression type");

			return null;
		}

		$data = fread($this->filePointer, $length - 1);
		$chunk = Chunk::fromBinary($data, $this->levelProvider);
		if($chunk instanceof Chunk){
			return $chunk;
		}elseif($forward === false){
			MainLogger::getLogger()->error("Corrupted chunk detected");
			$this->generateChunk($x, $z);

			return $this->readChunk($x, $z, $generate, true);
		}else{
			return null;
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PRE_INC
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_UNARY_OP
                                                            (SCALAR))))
                                                (AST_CALL
                                                    (
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))))
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CONST)))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PRE_INC
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))))
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONST))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PRE_INC
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_UNARY_OP
                                                            (SCALAR))))
                                                (AST_CALL
                                                    (
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))))
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CONST)))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PRE_INC
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONST))))))