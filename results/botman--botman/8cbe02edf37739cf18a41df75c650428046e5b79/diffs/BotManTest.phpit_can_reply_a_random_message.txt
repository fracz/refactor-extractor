    public function it_can_reply_a_random_message()
    {
        $driver = m::mock(NullDriver::class);
        $driver->shouldReceive('reply')
            ->once()
            ->with(m::anyOf('foo', 'bar', 'baz'),
                null,
                []
            );

        $botman = m::mock(BotMan::class)->makePartial();
        $botman->shouldReceive('getDriver')
            ->once()
            ->andReturn($driver);

        $botman->randomReply(['foo', 'bar', 'baz'], []);
    }

    /**
     * @test
     * @runInSeparateProcess
     * @preserveGlobalState disabled
     */
||||||||    public function it_can_reply_a_random_message()
    {
        $randomMessages = ['foo', 'bar', 'baz'];
        $botman = $this->getBot([]);
        $driver = m::mock(FakeDriver::class)->makePartial();
        $botman->setDriver($driver);
        $botman->randomReply($randomMessages, []);

        $message = $botman->getDriver()->getBotMessages()[0];
        $this->assertContains($message, $randomMessages);
    }

    /**
     * @test
     * @runInSeparateProcess
     * @preserveGlobalState disabled
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (AST_CONST)
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_ARRAY))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))