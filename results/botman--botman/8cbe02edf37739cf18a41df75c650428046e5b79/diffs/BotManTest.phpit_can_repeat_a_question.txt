    public function it_can_repeat_a_question()
    {
        $driver = m::mock(NullDriver::class)->makePartial();

        $driver->shouldReceive('getMessages')
            ->andReturn([new Message('Hi Julia', 'UX12345', 'general')]);

        $driver->shouldReceive('reply')
            ->once()
            ->with('This is a test question', m::type(Message::class), []);

        $botman = $this->getBot([
            'token' => 'foo',
            'event' => [
                'user' => 'UX12345',
                'channel' => 'general',
                'text' => 'Hi Julia',
            ],
        ]);

        $botman->setDriver($driver);

        $botman->hears('Hi Julia', function ($bot) {
            $bot->startConversation(new TestConversation());
        });
        $botman->listen();

        /*
         * Now that the first message is saved, fake a reply
         */
        $botman = $this->getBot([]);

        $driver->shouldReceive('getConversationAnswer')
            ->andReturn(Answer::create('repeat'));

        $driver->shouldReceive('getMessages')
            ->andReturn([new Message('repeat', 'UX12345', 'general')]);

        $driver->shouldReceive('reply')
            ->once()
            ->with('This is a test question', m::type(Message::class), []);

        $botman->setDriver($driver);

        $botman->listen();
    }

    /** @test */
||||||||    public function it_can_repeat_a_question()
    {
        $driver = m::mock(NullDriver::class)->makePartial();

        $driver->shouldReceive('getMessages')
            ->andReturn([new Message('Hi Julia', 'UX12345', 'general')]);

        $driver->shouldReceive('buildServicePayload')
            ->once()
            ->with('This is a test question', m::type(Message::class), []);

        $driver->shouldReceive('sendPayload')
            ->once();

        $botman = $this->getBot([
            'token' => 'foo',
            'event' => [
                'user' => 'UX12345',
                'channel' => 'general',
                'text' => 'Hi Julia',
            ],
        ]);

        $botman->setDriver($driver);

        $botman->hears('Hi Julia', function ($bot) {
            $bot->startConversation(new TestConversation());
        });
        $botman->listen();

        /*
         * Now that the first message is saved, fake a reply
         */
        $botman = $this->getBot([]);

        $driver->shouldReceive('getConversationAnswer')
            ->andReturn(Answer::create('repeat'));

        $driver->shouldReceive('getMessages')
            ->andReturn([new Message('repeat', 'UX12345', 'general')]);

        $driver->shouldReceive('buildServicePayload')
            ->once()
            ->with('This is a test question', m::type(Message::class), []);

        $driver->shouldReceive('sendPayload')
            ->once();

        $botman->setDriver($driver);

        $botman->listen();
    }

    /** @test */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (AST_ARRAY)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)))