	public function testUniqueWithCache()
	{
		// Manually flush the cache for tests
		\Cache::tags('sluggable')->flush();

		for ($i=0; $i < 20; $i++)
		{
			$post = $this->makePost('A post title');
			$post->setSlugConfig(array(
				'use_cache' => 10,
			));
			$post->save();
			if ($i==0)
			{
				$this->assertEquals('a-post-title', $post->slug);
			}
			else
			{
				$this->assertEquals('a-post-title-'.$i, $post->slug);
			}
		}
	}

	/**
	 * Test building a slug from multiple attributes.
	 *
	 * @test
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))))||||||||