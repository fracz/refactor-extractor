    public function testRunFailedTestEvent() {
        $this->markTestSkipped();
        $events = array();
        $this->dispatcher->addListener('test.fail', function () use (&$events) { $events[] = 'test.fail'; });
        $this->testcase->getScenario()->assertion('seeEquals', array(5,6));
        $this->testcase->run();
        $this->assertEquals($events, array('test.fail'));
    }

    /**
     * @group core
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))||||||||