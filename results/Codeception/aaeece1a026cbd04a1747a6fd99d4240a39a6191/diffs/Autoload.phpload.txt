    public static function load($class)
    {
        $map = array_reverse(self::$map);
        foreach ($map as $record) {
            list($regex, $path) = $record;
            if (!preg_match($regex, $class)) {
                continue;
            }
            $className = str_replace('\\', '', substr($class, (int)strrpos($class, '\\')));
            $file      = $path . DIRECTORY_SEPARATOR . $className . '.php';
            if (!file_exists($file)) {
                continue;
            }
            include_once $file;
            return true;
        }

        return false;
    }

    // being public for testing purposes
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_PROP))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CAST
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_VAR))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_INCLUDE_OR_EVAL
                (AST_VAR))
            (AST_RETURN
                (AST_CONST))))
    (AST_RETURN
        (AST_CONST)))||||||||