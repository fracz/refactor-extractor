    public function testBasic()
    {
        $this->execute(array('namespace' => 'MiddleEarth', '--force' => true));
        $this->assertContains('adds namespaces to your Helper and Guy classes and Cepts', $this->output);

        $config = $this->log[0];
        $this->assertContains('Config file updated', $this->output);
        $this->assertContains('namespace: MiddleEarth', $config['content']);
        $this->assertEquals(\Codeception\Configuration::projectDir() . 'codeception.yml', (string)$config['filename']);

        $helper = $this->log[1];
        $this->assertContains('namespace MiddleEarth\\Codeception\\Module', $helper['content']);
        $this->assertContains(\Codeception\Configuration::helpersDir(), (string)$helper['filename']);

        // log[2] is helper, log[3] ... are helpers too
        $cept = $this->log[7];
        $this->assertContains('<?php use MiddleEarth\\Codeception\\', $cept['content']);
    }

}||||||||    public function testBasic()
    {
        $this->execute(array('namespace' => 'MiddleEarth', '--force' => true));
        $this->assertContains('adds namespaces to your Helper and Guy classes and Cepts', $this->output);

        $config = $this->log[0];
        $this->assertContains('Config file updated', $this->output);
        $this->assertContains('namespace: MiddleEarth', $config['content']);
        $this->assertEquals(\Codeception\Configuration::projectDir() . 'codeception.yml', (string)$config['filename']);

        $helper = $this->log[1];
        $this->assertContains('namespace MiddleEarth\\Codeception\\Module', $helper['content']);
        $this->assertRegExp('~'.\Codeception\Configuration::helpersDir().'.*?Helper~', (string)$helper['filename']);

        // log[2] is helper, log[3] ... are helpers too
        $cept = $this->log[7];
        $this->assertRegExp('~<?php use MiddleEarth\\\\Codeception\\\\.*Guy~', $cept['content']);
    }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_STATIC_CALL)
                (SCALAR))
            (AST_CAST
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)
            (AST_CAST
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_STATIC_CALL)
                (SCALAR))
            (AST_CAST
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_STATIC_CALL))
                (SCALAR))
            (AST_CAST
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))