    protected function createTestForMethod($cestInstance, $methodName, $file)
    {
        if (strpos($methodName, '_') === 0) {
            return null;
        }
        $cest = new CestFormat($cestInstance, $methodName, $file);
        $cest->getMetadata()->setEnv(Annotation::forMethod($cestInstance, $methodName)->fetchAll('env'));
        return $cest;
    }
}||||||||    protected function createTestForMethod($cestInstance, $methodName, $file)
    {
        if (strpos($methodName, '_') === 0) {
            return null;
        }

        return new CestFormat($cestInstance, $methodName, $file);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))