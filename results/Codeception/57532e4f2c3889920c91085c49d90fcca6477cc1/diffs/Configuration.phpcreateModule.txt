    public static function createModule($config, $namespace = '')
    {
        if (!isset($config['class'])) {
            throw new ConfigurationException('Module configuration must be an array containing a "class" element.');
        }

        $class = $config['class'];
        unset($config['class']);

        $isNamespaced = (mb_strpos($class, '\\') !== false);

        if ($isNamespaced) {
            $classname = $class;
        } else {

            // try find module under users suite namespace setting
            $classname = $namespace.'\\Codeception\\Module\\' . $class;

            if (!class_exists($classname)) {

                // fallback to default namespace
                $classname = '\\Codeception\\Module\\' . $class;
                if (!class_exists($classname)) {
                    throw new ConfigurationException($class.' could not be found and loaded');
                }
            }
        }

        return new $classname($config);
    }

||||||||    public static function createModule($class, $config, $namespace = '')
    {
        $hasNamespace = (mb_strpos($class, '\\') !== false);

        if ($hasNamespace) {
            return new $class($config);
        }

        // try find module under users suite namespace setting
        $className = $namespace.'\\Codeception\\Module\\' . $class;

        if (!class_exists($className)) {
            // fallback to default namespace
            $className = '\\Codeception\\Module\\' . $class;
            if (!class_exists($className)) {
                throw new ConfigurationException($class.' could not be found and loaded');
            }
        }

        return new $className($config);
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR))))))))))))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)))))