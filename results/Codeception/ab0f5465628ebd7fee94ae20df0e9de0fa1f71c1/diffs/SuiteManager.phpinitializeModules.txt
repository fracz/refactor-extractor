    public static function initializeModules() {
        foreach (self::$modules as $modulename => $module) {
            $module->_initialize();
            $class = new \ReflectionClass($modulename);
            $methods = $class->getMethods(\ReflectionMethod::IS_PUBLIC);
            foreach ($methods as $method) {
			    if (strpos($method->name,'_')===0) continue;
                \Codeception\SuiteManager::$methods[$method->name] = $modulename;
            }
        }
        self::$modulesInitialized = true;
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))
                                (SCALAR))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST)))||||||||