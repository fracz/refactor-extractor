    protected function initLogger()
    {
        if (!file_exists($path = getcwd().DIRECTORY_SEPARATOR.$this->config['paths']['output'].DIRECTORY_SEPARATOR))
            throw new \Exception("Path $path does not exists. Can't write logs");

        if (!isset($this->config['settings']['log_max_files'])) $this->config['settings']['log_max_files'] = 3;

        $this->logHandler = new \Monolog\Handler\RotatingFileHandler($path.'tests.log', $this->config['settings']['log_max_files']);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (AST_CONST))
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR)))
                                (AST_CONST))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR))))))||||||||