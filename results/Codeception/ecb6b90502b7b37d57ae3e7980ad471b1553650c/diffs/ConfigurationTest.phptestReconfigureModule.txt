    public function testReconfigureModule()
    {
        $config = array(
            'firstField'     => 'firstValue',
            'secondField' => 'secondValue',
        );

        $module = \Codeception\Configuration::createModule('StubModule', $config);
        $module->_reconfigure(array('firstField' => '1st', 'secondField' => '2nd'));
        $this->assertEquals('1st',$module->_getFirstField());
        $this->assertEquals('2nd',$module->_getSecondField());
        $module->_resetConfig();
        $this->assertEquals($config['firstField'],$module->_getFirstField());
        $this->assertEquals($config['secondField'],$module->_getSecondField());
    }

}

class StubModule extends \Codeception\Module
{

    protected $requiredFields = array(
        'firstField',
        'secondField',
    );

    public function _getFirstField()
    {
        return $this->config['firstField'];
    }

    public function _getSecondField()
    {
        return $this->config['secondField'];
    }

}||||||||    public function testReconfigureModule()
    {
        $config = array(
            'firstField'     => 'firstValue',
            'secondField' => 'secondValue',
        );

        $class = 'StubModule';
        $module = new $class($config);
        $module->_reconfigure(array('firstField' => '1st', 'secondField' => '2nd'));
        $this->assertEquals('1st',$module->_getFirstField());
        $this->assertEquals('2nd',$module->_getSecondField());
        $module->_resetConfig();
        $this->assertEquals($config['firstField'],$module->_getFirstField());
        $this->assertEquals($config['secondField'],$module->_getSecondField());
    }

}

class StubModule extends \Codeception\Module
{

    protected $requiredFields = array(
        'firstField',
        'secondField',
    );

    public function _getFirstField()
    {
        return $this->config['firstField'];
    }

    public function _getSecondField()
    {
        return $this->config['secondField'];
    }

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))