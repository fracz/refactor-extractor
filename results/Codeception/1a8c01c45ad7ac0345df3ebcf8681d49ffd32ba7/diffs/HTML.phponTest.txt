    protected function onTest($name, $success = TRUE, array $steps = array(), $time = 0)
    {
	    $this->timeTaken += $time;
        if ($this->testStatus == \PHPUnit_Runner_BaseTestRunner::STATUS_FAILURE) {
            $scenarioStatus = 'scenarioFailed';
        }

        else if ($this->testStatus == \PHPUnit_Runner_BaseTestRunner::STATUS_SKIPPED) {
            $scenarioStatus = 'scenarioSkipped';
        }

        else if ($this->testStatus == \PHPUnit_Runner_BaseTestRunner::STATUS_INCOMPLETE) {
            $scenarioStatus = 'scenarioIncomplete';
        }

        else {
            $scenarioStatus = 'scenarioSuccess';
        }

        $stepsBuffer  = '';

        foreach ($steps as $step) {
            $currentStepName = $step->getName();

            $stepText = $currentStepName;

            $stepTemplate = new \Text_Template(
              $this->templatePath . 'step.html'
            );

            $stepTemplate->setVar(
              array(
                'action' => $step->getHumanizedAction() . ' ' . $step->getArguments(TRUE),
              )
            );

            $stepsBuffer .= $stepTemplate->render();
        }

        $scenarioTemplate = new \Text_Template(
          $this->templatePath . 'scenario.html'
        );

        $scenarioTemplate->setVar(
          array(
            'id'             => ++$this->id,
            'name'           => $name,
            'scenarioStatus' => $scenarioStatus,
            'steps'          => $stepsBuffer,
	        'time' => round($time, 2)
          )
        );

        $this->scenarios .= $scenarioTemplate->render();
    }

    /**
     * Handler for 'end run' event.
     *
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST))))
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_PRE_INC
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR))))||||||||