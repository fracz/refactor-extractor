    protected function createUnitSuite()
    {
        // CodeGuy
        $suiteConfig = array(
            'class_name' => 'Code'.$this->actor,
            'modules'    => array('enabled' => array('CodeHelper')),
        );

        $str = "# Codeception Test Suite Configuration\n\n";
        $str .= "# suite for unit (internal) tests.\n";
        $str .= "# RUN `build` COMMAND AFTER ADDING/REMOVING MODULES.\n\n";
        $str .= Yaml::dump($suiteConfig, 2);

        file_put_contents(
            'tests/unit/_bootstrap.php',
            "<?php\n// Here you can initialize variables that will for your tests\n"
        );
        file_put_contents(
            'tests/_helpers/CodeHelper.php',
            (new Helper('Code', $this->namespace))->produce()
        );
        file_put_contents('tests/unit.suite.yml', $str);
    }
}||||||||    protected function createUnitSuite()
    {
        // CodeGuy
        $suiteConfig = array(
            'class_name' => 'Code'.$this->actor,
            'modules'    => array('enabled' => array('Asserts', 'CodeHelper')),
        );

        $str = "# Codeception Test Suite Configuration\n\n";
        $str .= "# suite for unit (internal) tests.\n";
        $str .= "# RUN `build` COMMAND AFTER ADDING/REMOVING MODULES.\n\n";
        $str .= Yaml::dump($suiteConfig, 2);

        file_put_contents(
            'tests/unit/_bootstrap.php',
            "<?php\n// Here you can initialize variables that will for your tests\n"
        );
        file_put_contents(
            'tests/_helpers/CodeHelper.php',
            (new Helper('Code', $this->namespace))->produce()
        );
        file_put_contents('tests/unit.suite.yml', $str);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR))))