||||||||    final public function run(\PHPUnit_Framework_TestResult $result = null)
    {
        $this->testResult = $result;
        $result->startTest($this);

        foreach ($this->mixins as $mixin) {
            if (method_exists($this, $mixin.'Start')) {
                $this->{$mixin.'Start'}();
            }
        }

        $status = null;
        $e = null;

        \PHP_Timer::start();
        try {
            $this->test();
            $status = self::STATUS_OK;
        } catch (\PHPUnit_Framework_AssertionFailedError $e) {
            $status = self::STATUS_FAIL;
        } catch (\PHPUnit_Framework_Exception $e) {
            $status = self::STATUS_ERROR;
        } catch (\Throwable $e) {
            $e     = new \PHPUnit_Framework_ExceptionWrapper($e);
            $status = self::STATUS_ERROR;
        } catch (\Exception $e) {
            $e     = new \PHPUnit_Framework_ExceptionWrapper($e);
            $status = self::STATUS_ERROR;
        }
        $time = \PHP_Timer::stop();

        foreach (array_reverse($this->mixins) as $mixin) {
            if (method_exists($this, $mixin.'End')) {
                $this->{$mixin.'End'}($status, $time, $e);
            }
        }

        $result->endTest($this, $time);
        return $result;
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_STATIC_CALL)
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))