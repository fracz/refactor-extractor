    public function initialize()
    {
        $this->dispatcher->dispatch(Events::MODULE_INIT, new Event\SuiteEvent($this->suite, null, $this->settings));
        foreach ($this->moduleContainer->all() as $module) {
            $module->_initialize();
        }
        if (!file_exists(Configuration::supportDir() . $this->settings['class_name'] . '.php')) {
            throw new Exception\ConfigurationException(
                $this->settings['class_name']
                . " class doesn't exist in suite folder.\nRun the 'build' command to generate it"
            );
        }
        $this->dispatcher->dispatch(Events::SUITE_INIT, new Event\SuiteEvent($this->suite, null, $this->settings));
        ini_set('xdebug.show_exception_trace', 0); // Issue https://github.com/symfony/symfony/issues/7646
    }

||||||||    public function initialize()
    {
        $this->dispatcher->dispatch(Events::MODULE_INIT, new Event\SuiteEvent($this->suite, null, $this->settings));
        foreach ($this->moduleContainer->all() as $module) {
            $module->_initialize();
        }
        if ($this->settings['actor'] && !file_exists(Configuration::supportDir() . $this->settings['actor'] . '.php')) {
            throw new Exception\ConfigurationException(
                $this->settings['actor']
                . " class doesn't exist in suite folder.\nRun the 'build' command to generate it"
            );
        }
        $this->dispatcher->dispatch(Events::SUITE_INIT, new Event\SuiteEvent($this->suite, null, $this->settings));
        ini_set('xdebug.show_exception_trace', 0); // Issue https://github.com/symfony/symfony/issues/7646
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_STATIC_CALL)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))
                            (SCALAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_NEW
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR))))