    public function _afterSuite($suite)
    {
        if ($this->config['xdebug_codecoverage']) {
            // Create a stream
            $options = array(
                'http' => array('header' => "X-Codeception-CodeCoverage: let me in\r\n")
            );
            $context = stream_context_create($options);
            $url = $this->config['url'] . '/c3/report/html';

            $tempFile = str_replace('.', '', tempnam(sys_get_temp_dir(), 'C3')) . '.tar';
            file_put_contents($tempFile, file_get_contents($url, null, $context));

            $destDir = \Codeception\Configuration::logDir() . 'codecoverage';

            if (!is_dir($destDir)) {
                mkdir($destDir, 0777, true);
            } else {
                \Codeception\Util\FileSystem::doEmptyDir($destDir);
            }

            $phar = new \PharData($tempFile);
            $phar->extractTo($destDir);

            unlink($tempFile);
        }
    }

    /**
     * Sets HTTP header
     *
     * @param $name
     * @param $value
     */
||||||||    public function _afterSuite($suite)
    {
        if ($this->config['xdebug_codecoverage']) {
            // Create a stream
            $options = array(
                'http' => array('header' => "X-Codeception-CodeCoverage: let me in\r\n")
            );
            $context = stream_context_create($options);
            $url = $this->config['url'] . '/c3/report/';

            /**
             * Get html code coverage report
             */

            $tempFile = str_replace('.', '', tempnam(sys_get_temp_dir(), 'C3')) . '.tar';
            file_put_contents($tempFile, file_get_contents($url . 'html', null, $context));

            $destDir = \Codeception\Configuration::logDir() . 'codecoverage';

            if (!is_dir($destDir)) {
                mkdir($destDir, 0777, true);
            } else {
                \Codeception\Util\FileSystem::doEmptyDir($destDir);
            }

            $phar = new \PharData($tempFile);
            $phar->extractTo($destDir);

            unlink($tempFile);

            /**
             * Get clover code coverage report
             */

            $destFile = \Codeception\Configuration::logDir() . 'codeception.clover.xml';

            file_put_contents($destFile, file_get_contents($url . 'clover', null, $context));
        }
    }

    /**
     * Sets HTTP header
     *
     * @param $name
     * @param $value
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_CALL)
                                        (SCALAR)))))
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_CONST)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_CALL)
                                        (SCALAR)))))
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONST)
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_CONST)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONST)
                                (AST_VAR)))))))))