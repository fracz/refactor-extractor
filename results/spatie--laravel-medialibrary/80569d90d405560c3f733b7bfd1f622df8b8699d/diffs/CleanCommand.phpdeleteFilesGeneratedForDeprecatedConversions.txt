    protected function deleteFilesGeneratedForDeprecatedConversions()
    {
        $this->getMediaItems()->each(function (Media $media) {

            // Get conversion directory
            $path = $this->basePathGenerator->getPathForConversions($media);
            $files = $this->fileSystem->disk($media->disk)->files($path);

            // Get the list of currently defined conversions
            $conversions = ConversionCollection::createForMedia($media)->getConversionsFiles($media->collection_name);

            // Verify that each file on disk is defined in a conversion, else we delete the file
            foreach ($files as $file) {
                if (!$conversions->contains(basename($file))) {
                    if (!$this->dry) {
                        $this->fileSystem->disk($media->disk)->delete($file);
                    }

                    $this->info("Deprecated conversion file `{$file}` " . ($this->dry ? 'found' : 'has been removed'));
                }
            }
        });
    }

||||||||    protected function deleteFilesGeneratedForDeprecatedConversions()
    {
        $this->getMediaItems()->each(function (Media $media) {

            $conversionFilePaths = ConversionCollection::createForMedia($media)->getConversionsFiles($media->collection_name);

            $path = $this->basePathGenerator->getPathForConversions($media);
            $currentFilePaths = $this->fileSystem->disk($media->disk)->files($path);

            collect($currentFilePaths)
                ->filter(function (string $currentFilePath) use ($conversionFilePaths) {
                    return !$conversionFilePaths->contains(basename($currentFilePath));
                })
                ->each(function (string $currentFilePath) use ($media) {
                    if (!$this->isDryRun) {
                        $this->fileSystem->disk($media->disk)->delete($currentFilePath);
                    }

                    $this->info("Deprecated conversion file `{$currentFilePath}` " . ($this->isDryRun ? 'found' : 'has been removed'));
                });

        });
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (
                                                                (AST_PROP
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_VAR))))))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_BINARY_OP
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_CONDITIONAL
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)
                                                        (SCALAR)))))))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CLOSURE
                (PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_CLOSURE
                                    (PARAM_TYPENO_PARAM_DEFAULT)
                                    (AST_CLOSURE_USES
                                        (AST_CLOSURE_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)))))))))))
                        (
                            (AST_CLOSURE
                                (PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (
                                                        (AST_VAR))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_BINARY_OP
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_CONDITIONAL
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)
                                                    (SCALAR))))))))))))))