    private function createMediaFromFile($file, $collectionName, $addAsTemporary)
    {
        $pathParts = pathinfo($file);

        $media = new Media();

        $media->name = $pathParts['filename'];
        $media->url = $pathParts['basename'];
        $media->path = $pathParts['basename'];
        $media->extension = strtolower($pathParts['extension']);
        $media->size = filesize($file);
        $media->temp = $addAsTemporary;
        $media->collection_name = $collectionName;
        $media->order_column = Media::getHighestNumberOrder();

        return $media;
    }

    /**
     * Load media by collectionName.
     *
     * @param MediaLibraryModelInterface $model
     * @param $collectionName
     *
     * @return mixed
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_RETURN
        (AST_VAR)))||||||||