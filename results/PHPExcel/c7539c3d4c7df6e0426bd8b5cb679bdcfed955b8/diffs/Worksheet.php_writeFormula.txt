	private function _writeFormula($row, $col, $formula, $xfIndex, $calculatedValue)
	{
		$record	= 0x0006;	 // Record identifier

		// Initialize possible additional value for STRING record that should be written after the FORMULA record?
		$stringValue = null;

		// calculated value
		if (isset($calculatedValue)) {
			// Since we can't yet get the data type of the calculated value,
			// we use best effort to determine data type
			if (is_bool($calculatedValue)) {
				// Boolean value
				$num = pack('CCCvCv', 0x01, 0x00, (int)$calculatedValue, 0x00, 0x00, 0xFFFF);
			} elseif (is_int($calculatedValue) || is_float($calculatedValue)) {
				// Numeric value
				$num = pack('d', $calculatedValue);
			} elseif (is_string($calculatedValue)) {
				if (array_key_exists($calculatedValue, PHPExcel_Cell_DataType::getErrorCodes())) {
					// Error value
					$num = pack('CCCvCv', 0x02, 0x00, $this->_mapErrorCode($calculatedValue), 0x00, 0x00, 0xFFFF);
				} elseif ($calculatedValue === '') {
					// Empty string (and BIFF8)
					$num = pack('CCCvCv', 0x03, 0x00, 0x00, 0x00, 0x00, 0xFFFF);
				} else {
					// Non-empty string value (or empty string BIFF5)
					$stringValue = $calculatedValue;
					$num = pack('CCCvCv', 0x00, 0x00, 0x00, 0x00, 0x00, 0xFFFF);
				}
			} else {
				// We are really not supposed to reach here
				$num = pack('d', 0x00);
			}
		} else {
			$num = pack('d', 0x00);
		}

		$grbit		= 0x03;				// Option flags
		$unknown	= 0x0000;			// Must be zero

		// Strip the '=' or '@' sign at the beginning of the formula string
		if ($formula{0} == '=') {
			$formula = substr($formula,1);
		} else {
			// Error handling
			$this->_writeString($row, $col, 'Unrecognised character for formula');
			return -1;
		}

		// Parse the formula using the parser in Parser.php
		try {
			$error = $this->_parser->parse($formula);
			$formula = $this->_parser->toReversePolish();

			$formlen	= strlen($formula);	// Length of the binary string
			$length	 = 0x16 + $formlen;	 // Length of the record data

			$header	= pack("vv",	  $record, $length);

			$data	  = pack("vvv", $row, $col, $xfIndex)
						. $num
						. pack("vVv", $grbit, $unknown, $formlen);
			$this->_append($header . $data . $formula);

			// Append also a STRING record if necessary
			if ($stringValue !== null) {
				$this->_writeStringRecord($stringValue);
			}

			return 0;

		} catch (Exception $e) {
			// do nothing
		}

	}

	/**
	 * Write a STRING record. This
	 *
	 * @param string $stringValue
	 */
||||||||	private function _writeFormula($row, $col, $formula, $xfIndex, $calculatedValue)
	{
		$record	= 0x0006;	 // Record identifier

		// Initialize possible additional value for STRING record that should be written after the FORMULA record?
		$stringValue = null;

		// calculated value
		if (isset($calculatedValue)) {
			// Since we can't yet get the data type of the calculated value,
			// we use best effort to determine data type
			if (is_bool($calculatedValue)) {
				// Boolean value
				$num = pack('CCCvCv', 0x01, 0x00, (int)$calculatedValue, 0x00, 0x00, 0xFFFF);
			} elseif (is_int($calculatedValue) || is_float($calculatedValue)) {
				// Numeric value
				$num = pack('d', $calculatedValue);
			} elseif (is_string($calculatedValue)) {
				if (array_key_exists($calculatedValue, PHPExcel_Cell_DataType::getErrorCodes())) {
					// Error value
					$num = pack('CCCvCv', 0x02, 0x00, self::_mapErrorCode($calculatedValue), 0x00, 0x00, 0xFFFF);
				} elseif ($calculatedValue === '') {
					// Empty string (and BIFF8)
					$num = pack('CCCvCv', 0x03, 0x00, 0x00, 0x00, 0x00, 0xFFFF);
				} else {
					// Non-empty string value (or empty string BIFF5)
					$stringValue = $calculatedValue;
					$num = pack('CCCvCv', 0x00, 0x00, 0x00, 0x00, 0x00, 0xFFFF);
				}
			} else {
				// We are really not supposed to reach here
				$num = pack('d', 0x00);
			}
		} else {
			$num = pack('d', 0x00);
		}

		$grbit		= 0x03;				// Option flags
		$unknown	= 0x0000;			// Must be zero

		// Strip the '=' or '@' sign at the beginning of the formula string
		if ($formula{0} == '=') {
			$formula = substr($formula,1);
		} else {
			// Error handling
			$this->_writeString($row, $col, 'Unrecognised character for formula');
			return -1;
		}

		// Parse the formula using the parser in Parser.php
		try {
			$error = $this->_parser->parse($formula);
			$formula = $this->_parser->toReversePolish();

			$formlen	= strlen($formula);	// Length of the binary string
			$length	 = 0x16 + $formlen;	 // Length of the record data

			$header	= pack("vv",	  $record, $length);

			$data	  = pack("vvv", $row, $col, $xfIndex)
						. $num
						. pack("vVv", $grbit, $unknown, $formlen);
			$this->_append($header . $data . $formula);

			// Append also a STRING record if necessary
			if ($stringValue !== null) {
				$this->_writeStringRecord($stringValue);
			}

			return 0;

		} catch (Exception $e) {
			// do nothing
		}

	}

	/**
	 * Write a STRING record. This
	 *
	 * @param string $stringValue
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_CAST
                                            (AST_VAR))
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_STATIC_CALL)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)))
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_UNARY_OP
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))
            (AST_RETURN
                (SCALAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_CAST
                                            (AST_VAR))
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_STATIC_CALL)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (SCALAR)))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_UNARY_OP
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))))
            (AST_RETURN
                (SCALAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))