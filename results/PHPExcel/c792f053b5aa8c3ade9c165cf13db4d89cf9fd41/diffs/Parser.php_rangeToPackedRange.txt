	function _rangeToPackedRange($range)
	{
		preg_match('/(\$)?(\d+)\:(\$)?(\d+)/', $range, $match);
		// return absolute rows if there is a $ in the ref
		$row1_rel = empty($match[1]) ? 1 : 0;
		$row1     = $match[2];
		$row2_rel = empty($match[3]) ? 1 : 0;
		$row2     = $match[4];
		// Convert 1-index to zero-index
		--$row1;
		--$row2;
		// Trick poor inocent Excel
		$col1 = 0;
		$col2 = 16383; // FIXME: maximum possible value for Excel 5 (change this!!!)

		// FIXME: this changes for BIFF8
		if (($row1 >= 16384) or ($row2 >= 16384)) {
			throw new Exception("Row in: $range greater than 16384 ");
		}

		// Set the high bits to indicate if rows are relative.
		if ($this->_BIFF_version == 0x0500) {
			$row1    |= $row1_rel << 14; // FIXME: probably a bug
			$row2    |= $row2_rel << 15;
			$col1     = pack('C', $col1);
			$col2     = pack('C', $col2);
		} elseif ($this->_BIFF_version == 0x0600) {
			$col1    |= $row1_rel << 15;
			$col2    |= $row2_rel << 15;
			$col1     = pack('v', $col1);
			$col2     = pack('v', $col2);
		}
		$row1     = pack('v', $row1);
		$row2     = pack('v', $row2);

		return array($row1, $col1, $row2, $col2);
	}

	/**
	 * Convert an Excel cell reference such as A1 or $B2 or C$3 or $D$4 to a zero
	 * indexed row and column number. Also returns two (0,1) values to indicate
	 * whether the row or column are relative references.
	 *
	 * @access private
	 * @param string $cell The Excel cell reference in A1 format.
	 * @return array
	 */
||||||||	function _rangeToPackedRange($range)
	{
		preg_match('/(\$)?(\d+)\:(\$)?(\d+)/', $range, $match);
		// return absolute rows if there is a $ in the ref
		$row1_rel = empty($match[1]) ? 1 : 0;
		$row1     = $match[2];
		$row2_rel = empty($match[3]) ? 1 : 0;
		$row2     = $match[4];
		// Convert 1-index to zero-index
		--$row1;
		--$row2;
		// Trick poor inocent Excel
		$col1 = 0;
		$col2 = 16383; // FIXME: maximum possible value for Excel 5 (change this!!!)

		// FIXME: this changes for BIFF8
		if (($row1 >= 16384) or ($row2 >= 16384)) {
			throw new Exception("Row in: $range greater than 16384 ");
		}

		// Set the high bits to indicate if rows are relative.
		$col1 |= $row1_rel << 15;
		$col2 |= $row2_rel << 15;
		$col1 = pack('v', $col1);
		$col2 = pack('v', $col2);

		$row1 = pack('v', $row1);
		$row2 = pack('v', $row2);

		return array($row1, $col1, $row2, $col2);
	}

	/**
	 * Convert an Excel cell reference such as A1 or $B2 or C$3 or $D$4 to a zero
	 * indexed row and column number. Also returns two (0,1) values to indicate
	 * whether the row or column are relative references.
	 *
	 * @access private
	 * @param string $cell The Excel cell reference in A1 format.
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_PRE_DEC
        (AST_VAR))
    (AST_PRE_DEC
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_PRE_DEC
        (AST_VAR))
    (AST_PRE_DEC
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))