    public function testChainableSourceWithMergeableDefinitions()
    {
        $source1 = new ArrayDefinitionSource();
        $source1->addDefinitions(array(
            'foo1' => \DI\object('stdClass'),
        ));

        $source2 = new ArrayDefinitionSource();
        $source2->addDefinitions(array(
            'foo2' => \DI\object('stdClass'),
        ));

        $source1->chain($source2);

        $this->assertEquals(new ClassDefinition('foo1', 'stdClass'), $source1->getDefinition('foo1'));
        $this->assertEquals(new ClassDefinition('foo2', 'stdClass'), $source1->getDefinition('foo2'));
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||