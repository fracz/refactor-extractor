    public static function mergeDataProvider()
    {
        $definition1 = new ClassDefinition('foo', 'bar');
        $definition1->setLazy(true);
        $definition1->setScope(Scope::PROTOTYPE());
        $definition1->setConstructorInjection(MethodInjection::constructor());
        $definition1->addPropertyInjection(new PropertyInjection('property1', 'Property1'));
        $definition1->addPropertyInjection(new PropertyInjection('property2', 'Property2'));
        $definition1->addMethodInjection(new MethodInjection('method1'));
        $definition1->addMethodInjection(new MethodInjection('method2'));

        $definition2 = new ClassDefinition('foo');
        $definition2->addPropertyInjection(new PropertyInjection('property1', 'Property1'));
        $definition2->addPropertyInjection(new PropertyInjection('property3', 'Property3'));
        $definition2->addMethodInjection(new MethodInjection('method1'));
        $definition2->addMethodInjection(new MethodInjection('method3'));

        return array(
            array($definition1, $definition2),
            array($definition2, $definition1),
        );
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (NULL)))))||||||||