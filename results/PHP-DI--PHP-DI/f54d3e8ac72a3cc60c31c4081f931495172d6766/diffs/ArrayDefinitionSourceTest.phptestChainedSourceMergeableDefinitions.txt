    public function testChainedSourceMergeableDefinitions()
    {
        $source1 = new ArrayDefinitionSource();
        $definition1 = new ClassDefinition('foo');
        $definition1->addPropertyInjection(new PropertyInjection('p1', 'val1'));
        $source1->addDefinition($definition1);

        $source2 = new ArrayDefinitionSource();
        $definition2 = new ClassDefinition('foo');
        $definition2->addPropertyInjection(new PropertyInjection('p2', 'val2'));
        $source2->addDefinition($definition2);

        $source1->chain($source2);

        /** @var ClassDefinition $mergedDefinition */
        $mergedDefinition = $source1->getDefinition('foo');

        // Check that it's a different, merged, definition
        $this->assertNotSame($definition1, $mergedDefinition);
        $this->assertNotSame($definition2, $mergedDefinition);
        $this->assertInstanceOf('DI\Definition\ClassDefinition', $mergedDefinition);
        $this->assertEquals(new PropertyInjection('p1', 'val1'), $mergedDefinition->getPropertyInjection('p1'));
        $this->assertEquals(new PropertyInjection('p2', 'val2'), $mergedDefinition->getPropertyInjection('p2'));
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||