    private function readMethodInjection(ClassDefinition $definition, $methodName, $arrayMethodDefinition)
    {
        $methodInjection = new MethodInjection($methodName);

        if (is_array($arrayMethodDefinition)) {
            $this->readParameterInjections($definition, $methodInjection, $arrayMethodDefinition);
        } else {
            // String: shortcut for 1 parameter method
            $methodInjection->addParameterInjection(new ParameterInjection(0, $arrayMethodDefinition));
        }

        return $methodInjection;
    }

    /**
     * @param ClassDefinition $definition
     * @param MethodInjection $methodInjection
     * @param array           $arrayDefinition
     * @throws DefinitionException
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||