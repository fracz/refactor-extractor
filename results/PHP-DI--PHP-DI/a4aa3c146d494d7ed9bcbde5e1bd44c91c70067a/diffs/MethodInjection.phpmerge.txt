    public function merge(MethodInjection $methodInjection)
    {
        // Merge parameter injections
        foreach ($methodInjection->getParameterInjections() as $parameterName => $parameterInjection) {
            if (array_key_exists($parameterName, $this->parameterInjections)) {
                // Merge
                $this->parameterInjections[$parameterName]->merge($parameterInjection);
            } else {
                // Add
                $this->parameterInjections[$parameterName] = $parameterInjection;
            }
        }
    }

}||||||||    public function merge(MethodInjection $methodInjection)
    {
        $this->parameters = $methodInjection->parameters + $this->parameters;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))))