    private function readMethodInjections(ClassDefinition $definition, array $arrayDefinition)
    {
        if (array_key_exists('methods', $arrayDefinition)) {
            if (!is_array($arrayDefinition['methods'])) {
                throw new DefinitionException("Key 'methods' for class " . $definition->getName()
                    . " should be an array");
            }

            foreach ($arrayDefinition['methods'] as $methodName => $arrayMethodDefinition) {
                $methodInjection = $this->readMethodInjection($definition, $methodName, $arrayMethodDefinition);
                $definition->addMethodInjection($methodInjection);
            }
        }
    }

    /**
     * @param ClassDefinition $definition
     * @param string          $methodName
     * @param array|string    $arrayMethodDefinition
     * @throws \DI\Definition\Exception\DefinitionException
     * @return MethodInjection
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR))))))))
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))))||||||||