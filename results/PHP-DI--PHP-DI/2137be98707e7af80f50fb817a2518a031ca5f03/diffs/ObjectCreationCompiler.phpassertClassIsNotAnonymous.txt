    private function assertClassIsNotAnonymous(ObjectDefinition $definition)
    {
        if (strpos($definition->getClassName(), '@') !== false) {
            throw new \Exception('Cannot compile anonymous classes');
        }
    }

||||||||    private function assertClassIsNotAnonymous(ObjectDefinition $definition)
    {
        if (strpos($definition->getClassName(), '@') !== false) {
            throw InvalidDefinition::create($definition, sprintf(
                'Entry "%s" cannot be compiled: anonymous classes cannot be compiled',
                $definition->getName()
            ));
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))