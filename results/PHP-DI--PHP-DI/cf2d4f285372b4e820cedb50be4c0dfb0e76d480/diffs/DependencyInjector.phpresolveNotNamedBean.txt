	private function resolveNotNamedBean($object, \ReflectionProperty $property, Inject $annotation,
										array $typeMap, FactoryInterface $factory
	) {
		$dependencyInstance = null;
		// Not named bean => we use the @var annotation
		$dependencyType = $this->getPropertyType($property);
		if ($dependencyType == null) {
			throw new AnnotationException("@Inject was found on " . get_class($object) . "::"
				. $property->getName() . " but no @var annotation");
		}

		// Try to find a mapping for the implementation to use
		if (array_key_exists($dependencyType, $typeMap)) {
			$tmp = $typeMap[$dependencyType];
			if (is_string($tmp)) {
				// Override the dependency type, will use the factory to get an instance
				$dependencyType = $tmp;
			} else {
				// This is an instance
				$dependencyInstance = $tmp;
			}
		}

		// Use the factory to get an instance
		if ($dependencyInstance === null) {
			try {
				if ($annotation->lazy) {
					// Lazy loading for the dependency: inject a proxy class
					$dependencyInstance = new Proxy(function() use ($factory, $dependencyType) {
						return $factory->getInstance($dependencyType);
					});
				} else {
					$dependencyInstance = $factory->getInstance($dependencyType);
				}
			} catch (\Exception $e) {
				throw new DependencyException("Error while injecting $dependencyType in "
					. get_class($object) . "::" . $property->getName() . ". "
					. $e->getMessage(), 0, $e);
			}
		}

		return $dependencyInstance;
	}

	/**
	 * Parse the docblock of the property to get the var annotation
	 * @param \ReflectionProperty $property
	 * @return string Type of the property (content of var annotation)
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_TRY
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_CLOSURE
                                                    (AST_CLOSURE_USES
                                                        (AST_CLOSURE_VAR)
                                                        (AST_CLOSURE_VAR))
                                                    (
                                                        (AST_RETURN
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR)))))))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_ENCAPS_LIST
                                                                    (SCALAR)
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR))))
                                                            (SCALAR))
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (NULL)))))
    (AST_RETURN
        (AST_VAR)))||||||||