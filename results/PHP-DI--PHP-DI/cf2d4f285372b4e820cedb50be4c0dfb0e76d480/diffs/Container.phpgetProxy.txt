||||||||	private function getProxy($classname) {
		$container = $this;
		return new Proxy(function() use ($container, $classname) {
			// Create the instance and add it to the container
			$instance = new $classname();
			$container->resolveDependencies($instance);
			$container->set($classname, $instance);
			return $instance;
		});
	}

	/**
	 * Create a new instance of the class
	 * @param string $classname Class to instantiate
	 * @return string the instance
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_RETURN
        (AST_NEW
            (
                (AST_CLOSURE
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_VAR))))))))