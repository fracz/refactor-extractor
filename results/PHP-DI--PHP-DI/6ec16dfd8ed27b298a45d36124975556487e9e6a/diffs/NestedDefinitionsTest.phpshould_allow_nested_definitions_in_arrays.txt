    public function should_allow_nested_definitions_in_arrays(ContainerBuilder $builder)
    {
        $builder->addDefinitions([
            'foo'   => 'bar',
            'array' => [
                'env'    => env('PHP_DI_DO_NOT_DEFINE_THIS', get('foo')),
                'link'   => get('foo'),
                'object' => create('stdClass'),
                'objectInArray' => [create('stdClass')],
                'autowired' => autowire('stdClass'),
                'array' => [
                    'object' => create('stdClass'),
                ],
            ],
        ]);

        $container = $builder->build();

        $expected = [
            'env'    => 'bar',
            'link'   => 'bar',
            'object' => new \stdClass,
            'objectInArray' => [new \stdClass],
            'autowired' => new \stdClass,
            'array' => [
                'object' => new \stdClass,
            ],
        ];

        $this->assertEquals($expected, $container->get('array'));
    }
}

namespace DI\Test\IntegrationTest\Definitions\NestedDefinitionsTest;

class AllKindsOfInjections
{
    public $property;
    public $constructorParameter;
    public $methodParameter;

    public function __construct($constructorParameter)
    {
        $this->constructorParameter = $constructorParameter;
    }

    public function method($methodParameter)
    {
        $this->methodParameter = $methodParameter;
    }
}||||||||    public function should_allow_nested_definitions_in_arrays(ContainerBuilder $builder)
    {
        $builder->addDefinitions([
            'foo'   => 'bar',
            'array' => [
                'env'    => env('PHP_DI_DO_NOT_DEFINE_THIS', get('foo')),
                'link'   => get('foo'),
                'object' => create('stdClass'),
                'objectInArray' => [create('stdClass')],
                'autowired' => autowire('stdClass'),
                'array' => [
                    'object' => create('stdClass'),
                ],
                'factory' => \DI\factory(function () {
                    return 'hello';
                }),
            ],
        ]);

        $container = $builder->build();

        $expected = [
            'env'    => 'bar',
            'link'   => 'bar',
            'object' => new \stdClass,
            'objectInArray' => [new \stdClass],
            'autowired' => new \stdClass,
            'array' => [
                'object' => new \stdClass,
            ],
            'factory' => 'hello',
        ];

        $this->assertEquals($expected, $container->get('array'));
    }
}

namespace DI\Test\IntegrationTest\Definitions\NestedDefinitionsTest;

class AllKindsOfInjections
{
    public $property;
    public $constructorParameter;
    public $methodParameter;

    public function __construct($constructorParameter)
    {
        $this->constructorParameter = $constructorParameter;
    }

    public function method($methodParameter)
    {
        $this->methodParameter = $methodParameter;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (NULL)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW)
                        (NULL)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW)
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (NULL)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (SCALAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_CLOSURE
                                        (NULL)
                                        (
                                            (AST_RETURN
                                                (SCALAR))))))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW)
                        (NULL)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_NEW)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_NEW)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))