||||||||    private function isCompilable($value)
    {
        if ($value instanceof ValueDefinition) {
            return $this->isCompilable($value->getValue());
        }
        if ($value instanceof DecoratorDefinition) {
            if (empty($value->getName())) {
                return 'Decorators cannot be nested in another definition';
            }
            return 'A decorator definition was found but decorators cannot be compiled';
        }
        if ($value instanceof FactoryDefinition) {
            return 'A factory definition was found but factories cannot be compiled';
        }
        // All other definitions are compilable
        if ($value instanceof Definition) {
            return true;
        }
        if (is_array($value)) {
            $compilable = true;
            array_walk_recursive($value, function ($value) use (&$compilable) {
                // The if avoids unnecessary checks
                if ($compilable === true) {
                    $message = $this->isCompilable($value);
                    if ($message !== true) {
                        $compilable = $message;
                    }
                }
            });
            return $compilable;
        }
        if (is_object($value)) {
            return 'An object was found but objects cannot be compiled';
        }
        if (is_resource($value)) {
            return 'A resource was found but resources cannot be compiled';
        }

        return true;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (SCALAR)))))
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CONST))
                                                    (
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (AST_VAR))))))))))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))