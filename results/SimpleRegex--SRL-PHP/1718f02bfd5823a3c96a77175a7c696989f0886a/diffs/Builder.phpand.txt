    public function and (Closure $condition)
    {
        $builder = new Builder;

        $condition($builder);

        return $this->add($builder->get(''));
    }

    /**
     * Create capture group for given conditions.
     *
     * @param Closure $conditions Anonymous function with its Builder as a first parameter.
     * @param string $name Name for capture group, if any.
     * @return Builder
     */
||||||||    public function and ($conditions) : self
    {
        return $this->addClosure(new Builder, $conditions);
    }

    /**
     * Positive lookahead. Match the previous condition only if followed by given conditions.
     *
     * @param Closure|Builder|string $conditions Anonymous function with its Builder as a first parameter.
     * @return Builder
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_NEW)
                (AST_VAR)))))