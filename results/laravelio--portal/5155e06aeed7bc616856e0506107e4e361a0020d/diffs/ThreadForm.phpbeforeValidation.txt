||||||||    protected function beforeValidation()
    {
        Validator::extend('max_tags', function($attribute, $tagIds, $params) {
            $maxCount = $params[0];

            $tagRepo = App::make('Lio\Tags\TagRepository');
            $tags = $tagRepo->getTagsByIds($tagIds);

            if ($tags->count() > $maxCount) {
                return false;
            }

            return true;
        });
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR))
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_RETURN
                        (AST_CONST)))))))