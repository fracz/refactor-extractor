    public function getThreadCommentsPaginated(Comment $thread, $perPage = 20)
    {
        return $this->model->where(function($q) use ($thread) {
                        $q->where(function($q) use ($thread) {
                            $q->where('id', '=', $thread->id);
                        });

                        $q->orWhere(function($q) use ($thread) {
                            $q->where('parent_id', '=', $thread->id);
                        });
                    })
                    ->where('type', '=', Comment::TYPE_FORUM)
                    ->orderBy('created_at', 'asc')
                    ->paginate($perPage);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CLOSURE
                                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                                (AST_CLOSURE_USES
                                                    (AST_CLOSURE_VAR))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR))))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CLOSURE
                                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                                (AST_CLOSURE_USES
                                                    (AST_CLOSURE_VAR))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR))))))))))))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CLASS_CONST
                            (SCALAR))))
                (
                    (SCALAR)
                    (SCALAR)))
            (
                (AST_VAR)))))||||||||