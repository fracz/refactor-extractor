    public function getTaskIdFromEvent($event_name, array $event_data)
    {
        switch ($event_name) {
            case TaskFileModel::EVENT_CREATE:
                return $event_data['file']['task_id'];
            case CommentModel::EVENT_CREATE:
            case CommentModel::EVENT_UPDATE:
                return $event_data['comment']['task_id'];
            case SubtaskModel::EVENT_CREATE:
            case SubtaskModel::EVENT_UPDATE:
                return $event_data['subtask']['task_id'];
            case TaskModel::EVENT_CREATE:
            case TaskModel::EVENT_UPDATE:
            case TaskModel::EVENT_CLOSE:
            case TaskModel::EVENT_OPEN:
            case TaskModel::EVENT_MOVE_COLUMN:
            case TaskModel::EVENT_MOVE_POSITION:
            case TaskModel::EVENT_MOVE_SWIMLANE:
            case TaskModel::EVENT_ASSIGNEE_CHANGE:
            case CommentModel::EVENT_USER_MENTION:
            case TaskModel::EVENT_USER_MENTION:
                return $event_data['task']['id'];
            case TaskModel::EVENT_OVERDUE:
                return $event_data['tasks'][0]['id'];
            default:
                return 0;
        }
    }
}||||||||    public function getTaskIdFromEvent($event_name, array $event_data)
    {
        switch ($event_name) {
            case TaskFileModel::EVENT_CREATE:
                return $event_data['file']['task_id'];
            case CommentModel::EVENT_CREATE:
            case CommentModel::EVENT_UPDATE:
            case CommentModel::EVENT_REMOVE:
                return $event_data['comment']['task_id'];
            case SubtaskModel::EVENT_CREATE:
            case SubtaskModel::EVENT_UPDATE:
                return $event_data['subtask']['task_id'];
            case TaskModel::EVENT_CREATE:
            case TaskModel::EVENT_UPDATE:
            case TaskModel::EVENT_CLOSE:
            case TaskModel::EVENT_OPEN:
            case TaskModel::EVENT_MOVE_COLUMN:
            case TaskModel::EVENT_MOVE_POSITION:
            case TaskModel::EVENT_MOVE_SWIMLANE:
            case TaskModel::EVENT_ASSIGNEE_CHANGE:
            case CommentModel::EVENT_USER_MENTION:
            case TaskModel::EVENT_USER_MENTION:
                return $event_data['task']['id'];
            case TaskModel::EVENT_OVERDUE:
                return $event_data['tasks'][0]['id'];
            default:
                return 0;
        }
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_DIM
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (SCALAR)))))))