    private function createOpposite($label)
    {
        $label_id = $this->db->getConnection()->getLastId();

        $this->db
            ->table(self::TABLE)
            ->insert(array(
                'label' => $label,
                'opposite_id' => $label_id,
            ));

        $this->db
            ->table(self::TABLE)
            ->eq('id', $label_id)
            ->update(array(
                'opposite_id' => $this->db->getConnection()->getLastId()
            ));
    }

    /**
     * Update a link
     *
     * @access public
     * @param  array   $values
     * @return boolean
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLASS_CONST
                    (SCALAR))))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (SCALAR)
                (AST_VAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR))))))||||||||