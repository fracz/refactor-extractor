    public function getById($comment_id)
    {
        return $this->db
            ->table(self::TABLE)
            ->columns(
                self::TABLE.'.id',
                self::TABLE.'.task_id',
                self::TABLE.'.user_id',
                self::TABLE.'.date',
                self::TABLE.'.comment',
                User::TABLE.'.username'
            )
            ->join(User::TABLE, 'id', 'user_id')
            ->eq(self::TABLE.'.id', $comment_id)
            ->findOne();
    }

    /**
     * Get the number of comments for a given task
     *
     * @access public
     * @param  integer  $task_id  Task id
     * @return integer
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)
                        (SCALAR)))
                (
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR))
                    (AST_VAR))))))||||||||