    public function update(array $values)
    {
        $this->db->startTransaction();

        foreach (array('title', 'task_limit') as $field) {
            foreach ($values[$field] as $column_id => $field_value) {
                $this->db->table(self::TABLE)->eq('id', $column_id)->update(array($field => $field_value));
            }
        }

        $this->db->closeTransaction();

        return true;
    }

    /**
     * Move a column down, increment the column position value
     *
     * @access public
     * @param  integer  $project_id   Project id
     * @param  integer  $column_id    Column id
     * @return boolean
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL)))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_CONST)))||||||||