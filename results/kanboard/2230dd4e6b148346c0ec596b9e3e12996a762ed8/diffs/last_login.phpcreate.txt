    public function create($auth_type, $user_id, $ip, $user_agent)
    {
        // Cleanup old sessions if necessary
        $connections = $this->db
                            ->table(self::TABLE)
                            ->eq('user_id', $user_id)
                            ->desc('date_creation')
                            ->findAllByColumn('id');

        if (count($connections) >= self::NB_LOGINS) {

            $this->db->table(self::TABLE)
                     ->eq('user_id', $user_id)
                     ->notin('id', array_slice($connections, 0, self::NB_LOGINS - 1))
                     ->remove();
        }

        return $this->db
                    ->table(self::TABLE)
                    ->insert(array(
                        'auth_type' => $auth_type,
                        'user_id' => $user_id,
                        'ip' => $ip,
                        'user_agent' => $user_agent,
                        'date_creation' => time(),
                    ));
    }

    /**
     * Get the last connections for a given user
     *
     * @access public
     * @param  integer  $user_id  User id
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CALL)
                        (SCALAR)))))))||||||||