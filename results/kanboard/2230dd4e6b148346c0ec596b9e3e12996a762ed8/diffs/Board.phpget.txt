    public function get($project_id, array $filters = array())
    {
        $this->db->startTransaction();

        $columns = $this->getColumns($project_id);

        $filters[] = array('column' => 'project_id', 'operator' => 'eq', 'value' => $project_id);
        $filters[] = array('column' => 'is_active', 'operator' => 'eq', 'value' => Task::STATUS_OPEN);

        $taskModel = new Task($this->db, $this->event);
        $tasks = $taskModel->find($filters);

        foreach ($columns as &$column) {

            $column['tasks'] = array();

            foreach ($tasks as &$task) {
                if ($task['column_id'] == $column['id']) {
                    $column['tasks'][] = $task;
                }
            }
        }

        $this->db->closeTransaction();

        return $columns;
    }

    /**
     * Get the first column id for a given project
     *
     * @access public
     * @param  integer  $project_id   Project id
     * @return integer
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY))
            (AST_FOREACH
                (AST_VAR)
                (AST_REF
                    (AST_VAR))
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (NULL))
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||