    public function create(array $values)
    {
        $values['date'] = time();

        return $this->db->transaction(function($db) use ($values) {

            if (! $db->table(Comment::TABLE)->save($values)) {
                return false;
            }

            $comment_id = (int) $db->getConnection()->getLastId();
            $values['id'] = $comment_id;

            $this->event->trigger(self::EVENT_CREATE, $values);

            return $comment_id;
        });
    }

    /**
     * Update a comment in the database
     *
     * @access public
     * @param  array    $values   Form values
     * @return boolean
     */
||||||||    public function create(array $values)
    {
        $values['date'] = time();
        $comment_id = $this->persist(self::TABLE, $values);

        if ($comment_id) {
            $this->event->trigger(self::EVENT_CREATE, array('id' => $comment_id) + $values);
        }

        return $comment_id;
    }

    /**
     * Update a comment in the database
     *
     * @access public
     * @param  array    $values   Form values
     * @return boolean
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CLASS_CONST
                                                    (SCALAR))))
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_RETURN
                                        (AST_CONST)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CAST
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))