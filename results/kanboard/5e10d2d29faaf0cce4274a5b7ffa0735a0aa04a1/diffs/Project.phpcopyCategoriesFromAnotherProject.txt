    public function copyCategoriesFromAnotherProject($project_from, $project_to)
    {
        $categoriesTemplate = $this->category->getAll($project_from);

        foreach ($categoriesTemplate as $category) {

            unset($category['id']);
            $category['project_id'] = $project_to;

            if (! $this->category->create($category)) {
                return false;
            }
        }

        return true;
    }

    /**
     * Copy User Access from a project to another one.
     *
     * @author Antonio Rabelo
     * @param  integer    $project_from      Project Template
     * @return integer    $project_to        Project that receives the copy
     * @return boolean
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))
                    (
                        (AST_RETURN
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_CONST)))||||||||