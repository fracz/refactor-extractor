||||||||    public function withFilter(FilterInterface $filter, $default = false)
    {
        $attributes = $filter->getAttributes();

        foreach ($attributes as $attribute) {
            $this->filters[$attribute] = $filter;
            $this->lexer->addToken(sprintf("/^(%s:)/", $attribute), $attribute);

            if ($default) {
                $this->lexer->setDefaultToken($attribute);
            }
        }

        return $this;
    }

    /**
     * Set the query
     *
     * @access public
     * @param  Table $query
     * @return LexerBuilder
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))