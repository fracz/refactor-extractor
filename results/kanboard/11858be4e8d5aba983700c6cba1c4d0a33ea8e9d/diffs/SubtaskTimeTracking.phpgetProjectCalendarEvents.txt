    public function getProjectCalendarEvents($project_id, $start, $end)
    {
        $result = $this
            ->getProjectQuery($project_id)
            ->addCondition($this->getCalendarCondition(
                $this->dateParser->getTimestampFromIsoFormat($start),
                $this->dateParser->getTimestampFromIsoFormat($end),
                'start',
                'end'
            ))
            ->findAll();

        return $this->toCalendarEvents($result);
    }

    /**
     * Convert a record set to calendar events
     *
     * @access private
     * @param  array    $rows
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||