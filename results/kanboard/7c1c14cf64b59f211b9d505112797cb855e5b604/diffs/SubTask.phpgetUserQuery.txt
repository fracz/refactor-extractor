||||||||    public function getUserQuery($user_id, array $status)
    {
        return $this->db->table(SubTask::TABLE)
            ->columns(
                SubTask::TABLE.'.*',
                Task::TABLE.'.project_id',
                Task::TABLE.'.color_id',
                Project::TABLE.'.name AS project_name'
            )
            ->eq('user_id', $user_id)
            ->in(SubTask::TABLE.'.status', $status)
            ->join(Task::TABLE, 'id', 'task_id')
            ->join(Project::TABLE, 'id', 'project_id', Task::TABLE)
            ->filter(array($this, 'addStatusName'));
    }

    /**
     * Get all subtasks for a given task
     *
     * @access public
     * @param  integer   $task_id    Task id
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (AST_BINARY_OP
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (SCALAR))
                            (AST_VAR)))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)
                        (SCALAR)))
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))))))