    public function getActiveProjectsByUser($user_id)
    {
        return $this->getProjectsByUser($user_id, $status = array(Project::ACTIVE));
    }

    /**
     * Get the list of project visible for the given user
     *
     * @access public
     * @param  integer  $user_id
     * @param  array    $status
     * @return array
     */
||||||||    public function getActiveProjectsByUser($user_id)
    {
        return $this->getProjectsByUser($user_id, array(Project::ACTIVE));
    }

    /**
     * Get the list of project visible for the given user
     *
     * @access public
     * @param  integer  $user_id
     * @param  array    $status
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CLASS_CONST
                            (SCALAR))
                        (NULL)))))))