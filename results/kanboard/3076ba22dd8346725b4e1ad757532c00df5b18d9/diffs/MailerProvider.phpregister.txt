    public function register(Container $container)
    {
        $container['mailer'] = $this->getInstance();
    }

||||||||    public function register(Container $container)
    {
        $container['mailer'] = function () {
            switch (MAIL_TRANSPORT) {
                case 'smtp':
                    $transport = Swift_SmtpTransport::newInstance(MAIL_SMTP_HOSTNAME, MAIL_SMTP_PORT);
                    $transport->setUsername(MAIL_SMTP_USERNAME);
                    $transport->setPassword(MAIL_SMTP_PASSWORD);
                    $transport->setEncryption(MAIL_SMTP_ENCRYPTION);
                    break;
                case 'sendmail':
                    $transport = Swift_SendmailTransport::newInstance(MAIL_SENDMAIL_COMMAND);
                    break;
                default:
                    $transport = Swift_MailTransport::newInstance();
            }

            return $transport;
        };
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CLOSURE
            (NULL)
            (
                (AST_SWITCH
                    (AST_CONST)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_CONST)
                                            (AST_CONST))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_CONST))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL))))))
                (AST_RETURN
                    (AST_VAR))))))