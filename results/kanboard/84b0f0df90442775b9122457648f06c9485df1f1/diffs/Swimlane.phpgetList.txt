||||||||    public function getList($project_id, $prepend = false)
    {
        $swimlanes = array();
        $swimlanes[] = $this->db->table(Project::TABLE)->eq('id', $project_id)->findOneColumn('default_swimlane');

        $swimlanes = array_merge(
            $swimlanes,
            $this->db->table(self::TABLE)->eq('project_id', $project_id)->orderBy('name', 'asc')->listing('id', 'name')
        );

        return $prepend ? array(-1 => t('All swimlanes')) + $swimlanes : $swimlanes;
    }

    /**
     * Add a new swimlane
     *
     * @access public
     * @param  integer   $project_id
     * @param  string    $name
     * @return bool
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (SCALAR)))
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_BINARY_OP
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_UNARY_OP
                            (SCALAR))))
                (AST_VAR))
            (AST_VAR))))