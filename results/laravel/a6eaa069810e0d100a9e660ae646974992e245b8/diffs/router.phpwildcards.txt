||||||||	protected function wildcards($key)
	{
		$replacements = 0;

		// For optional parameters, first translate the wildcards to their
		// regex equivalent, sans the ")?" ending. We will add the endings
		// back on after we know how many replacements we made.
		$key = str_replace(array_keys($this->optional), array_values($this->optional), $key, $replacements);

		$key .= ($replacements > 0) ? str_repeat(')?', $replacements) : '';

		// After replacing all of the optional wildcards, we can replace all
		// of the "regular" wildcards and return the fully regexed string.
		return str_replace(array_keys($this->patterns), array_values($this->patterns), $key);
	}

	/**
	 * Extract the parameters from a URI based on a route URI.
	 *
	 * Any route segment wrapped in parentheses is considered a parameter.
	 *
	 * @param  string  $uri
	 * @param  string  $route
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_VAR)))))