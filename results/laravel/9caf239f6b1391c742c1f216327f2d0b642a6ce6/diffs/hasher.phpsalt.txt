	protected static function salt()
	{
		if (function_exists('openssl_random_pseudo_bytes'))
		{
			return substr(strtr(base64_encode(openssl_random_pseudo_bytes(16)), '+', '.'), 0 , 22);
		}

		return substr(str_replace('+', '.', base64_encode(Str::random(40))), 0, 22);
	}

}||||||||	protected static function salt()
	{
		// Bcrypt expects the salt to be 22 base64 encoded characters, including dots
		// and slashes. We will get rid of the plus signs included in the base64 data
		// and replace them with dots. OpenSSL will be used if available, since it is
		// more random, otherwise we will fallback on Str::random.
		if (function_exists('openssl_random_pseudo_bytes'))
		{
			$bytes = openssl_random_pseudo_bytes(16);

			return substr(strtr(base64_encode($bytes), '+', '.'), 0 , 22);
		}

		return substr(str_replace('+', '.', base64_encode(Str::random(40))), 0, 22);
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (SCALAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))))))
                (SCALAR)
                (SCALAR)))))