	public function links()
	{
		if ($this->last_page <= 1) return '';

		// The hard-coded "7" is to account for all of the constant elements in a sliding range.
		// Namely: The the current page, the two ellipses, the two beginning pages, and the two ending pages.
		$numbers = ($this->last_page < 7 + ($this->adjacent * 2)) ? $this->range(1, $this->last_page) : $this->slider();

		return '<div class="pagination">'.$this->previous().$numbers.$this->next().'</div>';
	}

	/**
	 * Build a sliding list of HTML numeric page links.
	 *
	 * If the current page is close to the beginning of the pages, all of the beginning links will be
	 * shown and the ending links will be abbreviated.
	 *
	 * If the current page is in the middle of the pages, the beginning and ending links will be abbreviated.
	 *
	 * If the current page is close to the end of the list of pages, all of the ending links will be
	 * shown and the beginning links will be abbreviated.
	 *
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR))))||||||||