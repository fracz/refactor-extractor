	public static function plural($value)
	{
		return static::$plural_cache[$value] = static::inflect($value, static::$plural_cache, array_flip(static::$irregular), static::$plural);
	}

	/**
	 * Convert a word to its singular form.
	 *
	 * <code>
	 *		// Returns "friend"
	 *		Inflector::singular('friends');
	 *
	 *		// Returns "child"
	 *		Inflector::singular('children');
	 * </code>
	 *
	 * @param  string  $value
	 * @return string
	 */
||||||||	public static function plural($value)
	{
		$irregular = array_flip(static::$irregular);

		return static::$plural_cache[$value] = static::inflect($value, static::$plural_cache, $irregular, static::$plural);
	}

	/**
	 * Convert a word to its singular form.
	 *
	 * <code>
	 *		// Returns "friend"
	 *		Inflector::singular('friends');
	 *
	 *		// Returns "child"
	 *		Inflector::singular('children');
	 * </code>
	 *
	 * @param  string  $value
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_ASSIGN
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)
                    (AST_CALL
                        (
                            (AST_STATIC_PROP)))
                    (AST_STATIC_PROP))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_PROP))))
    (AST_RETURN
        (AST_ASSIGN
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)
                    (AST_VAR)
                    (AST_STATIC_PROP))))))