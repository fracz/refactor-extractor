	public function __construct($page, $total, $per_page)
	{
		$this->last_page = ceil($total / $per_page);
		$this->per_page = $per_page;
		$this->total = $total;

		// Determine if the current request is using HTTPS. If it is, we will use HTTPS when
		// generating the links unless otherwise specified by the secure() method.
		$this->secure = Request::active()->is_secure();

		// The page method will validate the given page number and adjust it if necessary.
		// For example, when the given page number is greater than the last page or less
		// than zero, the page number will be adjusted.
		$this->page = $this->adjust($page);
	}

	/**
	 * Check a given page number for validity and adjust it if necessary.
	 *
	 * The page will be validated and adjusted if it is less than one or greater than the last page.
	 * For example, if the current page is not an integer or less than one, one will be returned.
	 * If the current page is greater than the last page, the last page will be returned.
	 *
	 * @param  int    $page
	 * @return int
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_STATIC_CALL)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||