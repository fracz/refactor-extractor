	public static function make($attributes, $rules, $messages = array())
	{
		return IoC::container()->resolve('laravel.validator')->make($attributes, $rules, $messages);
	}

	/**
	 * Validate the target array using the specified validation rules.
	 *
	 * @return bool
	 */
||||||||	public function make($attributes, $rules, $messages = array())
	{
		return new Validator($this->lang, $this->validators, $attributes, $rules, $messages);
	}

	/**
	 * Register a custom validation callback.
	 *
	 * @param  string     $name
	 * @param  string     $message
	 * @param  Closure    $closure
	 * @return Validator
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (SCALAR)))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))