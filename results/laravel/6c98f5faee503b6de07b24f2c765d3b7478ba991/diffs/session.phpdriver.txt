	public static function driver()
	{
		if (is_null(static::$driver))
		{
			switch (Config::get('session.driver'))
			{
				case 'cookie':
					static::$driver = new Session\Cookie;
					break;

				case 'file':
					static::$driver = new Session\File;
					break;

				case 'db':
					static::$driver = new Session\DB;
					break;

				case 'memcached':
					static::$driver = new Session\Memcached;
					break;

				case 'apc':
					static::$driver = new Session\APC;
					break;

				default:
					throw new \Exception("Session driver [$driver] is not supported.");
			}
		}

		return static::$driver;
	}

	/**
	 * Load a user session by ID.
	 *
	 * @param  string  $id
	 * @return void
	 */
||||||||	public static function driver()
	{
		if (is_null(static::$driver))
		{
			switch (Config::get('session.driver'))
			{
				case 'cookie':
					return static::$driver = new Session\Cookie;

				case 'file':
					return static::$driver = new Session\File;

				case 'db':
					return static::$driver = new Session\DB;

				case 'memcached':
					return static::$driver = new Session\Memcached;

				case 'apc':
					return static::$driver = new Session\APC;

				default:
					throw new \Exception("Session driver [$driver] is not supported.");
			}
		}
	}

	/**
	 * Load a user session by ID.
	 *
	 * @param  string  $id
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_SWITCH
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_NEW))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_NEW))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_NEW))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_NEW))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_NEW))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR)
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_SWITCH
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_NEW)))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_NEW)))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_NEW)))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_NEW)))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_ASSIGN
                                        (AST_STATIC_PROP)
                                        (AST_NEW)))))
                        (AST_SWITCH_CASE
                            (NULL)
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR)
                                                (SCALAR)))))))))))))