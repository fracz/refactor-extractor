	public function run($method, $parameters)
	{
		fwrite($this->connection, $this->command($method, $parameters));

		$reply = trim(fgets($this->connection, 512));
	}

	/**
	 * Build the Redis command based from a given method and parameters.
	 *
	 * @param  string  $method
	 * @param  array   $parameters
	 * @return string
	 */
||||||||	public function run($method, $parameters)
	{
		fwrite(static::$connection, $this->command($method, $parameters));

		$reply = trim(fgets(static::$connection, 512));
	}

	/**
	 * Build the Redis command based from a given method and parameters.
	 *
	 * @param  string  $method
	 * @param  array   $parameters
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_STATIC_PROP)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_STATIC_PROP)
                        (SCALAR)))))))