||||||||	protected function response()
	{
		if ($this->callback instanceof Closure)
		{
			return call_user_func_array($this->callback, $this->parameters);
		}
		// If the route is an array we will return the first value with a
		// key of "delegate", or the first instance of a Closure. If the
		// value is a string, the route is delegating the responsibility
		// for handling the request to a controller.
		elseif (is_array($this->callback))
		{
			$callback = Arr::first($this->callback, function($key, $value)
			{
				return $key == 'delegate' or $value instanceof Closure;
			});

			if ($callback instanceof Closure)
			{
				return call_user_func_array($callback, $this->parameters);
			}
			else
			{
				return new Delegate($callback);
			}
		}
		elseif (is_string($this->callback))
		{
			return new Delegate($this->callback);
		}
	}

	/**
	 * Get an array of filter names defined for the route.
	 *
	 * @param  string  $name
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                                (NULL)
                                (
                                    (AST_RETURN
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_INSTANCEOF
                                                (AST_VAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_NEW
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))))))