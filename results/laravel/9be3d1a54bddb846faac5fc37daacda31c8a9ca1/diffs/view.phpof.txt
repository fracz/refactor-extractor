	protected function of($name, $data = array())
	{
		foreach ($this->composers as $key => $value)
		{
			if ($name === $value or (isset($value['name']) and $name === $value['name']))
			{
				return new View($key, $this->path, $data, $this->composers, $this);
			}
		}

		throw new \Exception("Named view [$name] is not defined.");
	}

	/**
	 * Magic Method for handling the dynamic creation of named views.
	 *
	 * <code>
	 *		// Create an instance of the "login" named view
	 *		$view = View::of_login();
	 *
	 *		// Create an instance of the "login" named view and bind data to the view
	 *		$view = View::of_login(array('name' => 'Fred'));
	 * </code>
	 */
||||||||	protected function of($name, $data = array())
	{
		if ( ! is_null($view = $this->composer->name($name)))
		{
			return new View($view, $data, $this->path($view), $this->composer, $this);
		}

		throw new \Exception("Named view [$name] is not defined.");
	}

	/**
	 * Get the path to a given view on disk.
	 *
	 * @param  string  $view
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (
                        (AST_RETURN
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))))))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))))