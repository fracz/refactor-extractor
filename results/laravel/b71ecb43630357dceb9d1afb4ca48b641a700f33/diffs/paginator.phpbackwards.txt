	protected function backwards($element, $text, $last)
	{
		return $this->element($element, $text, $last, function($page) { return $page <= 1; });
	}

	/**
	 * Create a "forwards" paginatino element.
	 *
	 * This function handles the creation of the next and last elements.
	 *
	 * @param  string  $element
	 * @param  string  $text
	 * @param  int     $last
	 * @return string
	 */
||||||||	protected function backwards($element, $text, $last)
	{
		$disabler = function($page) { return $page <= 1; };

		return $this->element($element, $text, $last, $disabler);
	}

	/**
	 * Create a "forwards" paginatino element.
	 *
	 * This function handles the creation of the next and last elements.
	 *
	 * @param  string  $element
	 * @param  string  $text
	 * @param  int     $last
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))