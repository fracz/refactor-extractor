||||||||	protected function transform($sql, $bindings)
	{
		if (strpos($sql, '(...)') === false) return $sql;

		for ($i = 0; $i < count($bindings); $i++)
		{
			// If the binding is an array, we can assume it is being used to fill
			// a "where in" condition, so we will replace the next place-holder
			// in the query with the correct number of parameters based on the
			// number of elements in this binding.
			if (is_array($bindings[$i]))
			{
				$parameters = implode(', ', array_fill(0, count($bindings[$i]), '?'));

				$sql = preg_replace('~\(\.\.\.\)~', "({$parameters})", $sql, 1);
			}
		}

		return $sql;
	}

	/**
	 * Execute a prepared PDO statement and return the appropriate results.
	 *
	 * @param  PDOStatement  $statement
	 * @param  array         $results
	 * @return mixed
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (SCALAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))