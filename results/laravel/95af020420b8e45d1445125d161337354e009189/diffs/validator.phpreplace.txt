||||||||	protected function replace($message, $attribute, $rule, $parameters)
	{
		$message = str_replace(':attribute', $this->attribute($attribute), $message);

		if (in_array($rule, $this->size_rules))
		{
			// Even though every size rule will not have a place-holder for min, max, and size,
			// we will go ahead and make replacements for all of them just for convenience.
			// Except for "between" every replacement should be the first parameter.
			$max = ($rule == 'between') ? $parameters[1] : $parameters[0];

			$message = str_replace(array(':size', ':min', ':max'), array($parameters[0], $parameters[0], $max), $message);
		}
		elseif (in_array($rule, $this->inclusion_rules))
		{
			$message = str_replace(':values', implode(', ', $parameters), $message);
		}

		return $message;
	}

	/**
	 * Get the displayable name for a given attribute.
	 *
	 * Storing attribute names in the language file allows a more reader friendly
	 * version of the attribute name to be place in the :attribute place-holder.
	 *
	 * If no language line is specified for the attribute, a default formatting
	 * will be used for the attribute.
	 *
	 * @param  string  $attribute
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))