	public static function attempt($username, $password = null, $remember = false)
	{
		$config = Config::get('auth');

		// When attempting to login the user, we will call the "attempt" closure
		// from the configuration file. This gives the developer the freedom to
		// authenticate based on the needs of their application, even allowing
		// the user of third-party providers.
		$user = call_user_func($config['attempt'], $username, $password);

		if (is_null($user)) return false;

		static::login($user, $remember);

		return true;
	}

	/**
	 * Log a user into the application.
	 *
	 * <code>
	 *		// Login the user with an ID of 15
	 *		Auth::login(15);
	 *
	 *		// Login a user by passing a user object
	 *		Auth::login($user);
	 *
	 *		// Login a user and set a "remember me" cookie
	 *		Auth::login($user, true);
	 * </code>
	 *
	 * @param  object|int  $user
	 * @param  bool        $remember
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_RETURN
        (AST_CONST)))||||||||