	public function save()
	{
		// -----------------------------------------------------
		// If the model doesn't have any dirty attributes, there
		// is no need to save it to the database.
		// -----------------------------------------------------
		if ($this->exists and count($this->dirty) == 0)
		{
			return true;
		}

		$result = Eloquent\Warehouse::put($this);

		// -----------------------------------------------------
		// The dirty attributes can be cleared after each save.
		// -----------------------------------------------------
		$this->dirty = array();

		return $result;
	}

	/**
	 * Delete a model from the database.
	 */
||||||||	public function save()
	{
		// -----------------------------------------------------
		// If the model doesn't have any dirty attributes, there
		// is no need to save it to the database.
		// -----------------------------------------------------
		if ($this->exists and count($this->dirty) == 0)
		{
			return true;
		}

		// -----------------------------------------------------
		// Get the class name of the Eloquent model.
		// -----------------------------------------------------
		$model = get_class($this);

		// -----------------------------------------------------
		// Get a fresh query instance for the model.
		// -----------------------------------------------------
		$this->query = Query::table(static::table($model));

		// -----------------------------------------------------
		// Set the creation and update timestamps.
		// -----------------------------------------------------
		if (property_exists($model, 'timestamps') and $model::$timestamps)
		{
			$this->updated_at = date('Y-m-d H:i:s');

			if ( ! $this->exists)
			{
				$this->created_at = $this->updated_at;
			}
		}

		// -----------------------------------------------------
		// If the model already exists in the database, we only
		// need to update it. Otherwise, we'll insert it.
		// -----------------------------------------------------
		if ($this->exists)
		{
			$result = $this->query->where('id', '=', $this->attributes['id'])->update($this->dirty) == 1;
		}
		else
		{
			$this->attributes['id'] = $this->query->insert_get_id($this->attributes);

			$result = $this->exists = is_numeric($this->id);
		}

		// -----------------------------------------------------
		// The dirty attributes can be cleared after each save.
		// -----------------------------------------------------
		$this->dirty = array();

		return $result;
	}

	/**
	 * Delete a model from the database.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_STATIC_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_RETURN
        (AST_VAR)))