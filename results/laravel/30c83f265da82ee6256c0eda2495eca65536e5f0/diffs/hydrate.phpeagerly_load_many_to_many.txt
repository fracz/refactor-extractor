	private static function eagerly_load_many_to_many($relating_key, $relating_table, $foreign_key, $include, $model, &$results)
	{
		// -----------------------------------------------------
		// Reset the SELECT clause.
		// -----------------------------------------------------
		$model->query->select = null;

		// -----------------------------------------------------
		// Retrieve the raw results as stdClasses.
		//
		// We also add the foreign key to the select which will allow us
		// to match the models back to their parents.
		// -----------------------------------------------------
		$inclusions = $model->query->where_in($relating_key, array_keys($results))->get(Meta::table(get_class($model)).'.*', $relating_table.'.'.$foreign_key);

		// -----------------------------------------------------
		// Get the class name of the related model.
		// -----------------------------------------------------
		$class = get_class($model);

		// -----------------------------------------------------
		// Create the related models.
		// -----------------------------------------------------
		foreach ($inclusions as $inclusion)
		{
			$related = new $class;

			$related->exists = true;
			$related->attributes = (array) $inclusion;

			// -----------------------------------------------------
			// Remove the foreign key from the attributes since it
			// was only added to the query to help us match the models.
			// -----------------------------------------------------
			unset($related->attributes[$foreign_key]);

			// -----------------------------------------------------
			// Add the related model to the parent model's array.
			// -----------------------------------------------------
			$results[$inclusion->$foreign_key]->ignore[$include][$inclusion->id] = $related;
		}
	}

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_BINARY_OP
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CAST
                    (AST_VAR)))
            (AST_UNSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR)))))||||||||