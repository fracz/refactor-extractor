	private static function has_one_or_many($model, $foreign_key, $eloquent)
	{
		$eloquent->relating_key = (is_null($foreign_key)) ? \System\Str::lower(get_class($eloquent)).'_id' : $foreign_key;
		return Factory::make($model)->where($eloquent->relating_key, '=', $eloquent->id);
	}

	/**
	 * Retrieve the query for a 1:1 belonging relationship.
	 *
	 * @param  array   $caller
	 * @param  string  $model
	 * @param  object  $eloquent
	 * @return mixed
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_BINARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (SCALAR))
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (AST_PROP
                    (AST_VAR))))))||||||||