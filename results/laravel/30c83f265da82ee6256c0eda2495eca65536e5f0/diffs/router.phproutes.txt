	private static function routes($uri)
	{
		// --------------------------------------------------------------
		// If a route directory is being used, load the route file
		// corresponding to the first segment of the URI.
		// --------------------------------------------------------------
		if (is_dir(APP_PATH.'routes'))
		{
			if ($uri == '/')
			{
				if ( ! file_exists(APP_PATH.'routes/home'.EXT))
				{
					throw new \Exception("A [home] route file is required when using a route directory.");
				}

				return require APP_PATH.'routes/home'.EXT;
			}
			else
			{
				$segments = explode('/', trim($uri, '/'));

				if ( ! file_exists(APP_PATH.'routes/'.$segments[0].EXT))
				{
					throw new \Exception("No route file defined for routes beginning with [".$segments[0]."]");
				}

				return require APP_PATH.'routes/'.$segments[0].EXT;
			}
		}
		// --------------------------------------------------------------
		// If no route directory is being used, we can simply load the
		// routes file from the application directory.
		// --------------------------------------------------------------
		else
		{
			return require APP_PATH.'routes'.EXT;
		}
	}

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (SCALAR))
                                                    (AST_CONST)))))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (SCALAR)))))))
                            (AST_RETURN
                                (AST_INCLUDE_OR_EVAL
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_CONST))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_CONST)
                                                            (SCALAR))
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (AST_CONST)))))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR)))
                                                        (SCALAR))))))))
                            (AST_RETURN
                                (AST_INCLUDE_OR_EVAL
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_CONST)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CONST))))))))||||||||