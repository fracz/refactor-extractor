||||||||	public static function load($uri)
	{
		// --------------------------------------------------------------
		// If a single routes is being used, return it.
		// --------------------------------------------------------------
		if ( ! is_dir(APP_PATH.'routes'))
		{
			return require APP_PATH.'routes'.EXT;
		}

		// --------------------------------------------------------------
		// If the request is to the root, load the "home" routes file.
		// --------------------------------------------------------------
		if ($uri == '/')
		{
			if ( ! file_exists(APP_PATH.'routes/home'.EXT))
			{
				throw new \Exception("A [home] route file is required when using a route directory.");
			}

			return require APP_PATH.'routes/home'.EXT;
		}
		// --------------------------------------------------------------
		// Load the route file matching the first segment of the URI.
		// --------------------------------------------------------------
		else
		{
			$segments = explode('/', trim($uri, '/'));

			if ( ! file_exists(APP_PATH.'routes/'.$segments[0].EXT))
			{
				throw new \Exception("No route file defined for routes beginning with [".$segments[0]."]");
			}

			return array_merge(require APP_PATH.'routes/'.$segments[0].EXT, require APP_PATH.'routes/home'.EXT);
		}
	}

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_CONST)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_RETURN
                    (AST_INCLUDE_OR_EVAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_CONST)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR))))))))
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST)))
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (AST_CONST))))))))))