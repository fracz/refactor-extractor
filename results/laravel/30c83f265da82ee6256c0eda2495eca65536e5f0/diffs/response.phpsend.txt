	public function send()
	{
		if ( ! array_key_exists('Content-Type', $this->headers))
		{
			$this->header('Content-Type', 'text/html; charset=utf-8');
		}

		// -------------------------------------------------
		// Send the headers to the browser.
		// -------------------------------------------------
		if ( ! headers_sent())
		{
			$protocol = (isset($_SERVER['SERVER_PROTOCOL'])) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.1';

			header($protocol.' '.$this->status.' '.$this->statuses[$this->status]);

			foreach ($this->headers as $name => $value)
			{
				header($name.': '.$value, true);
			}
		}

		// -------------------------------------------------
		// Send the content of the response to the browser.
		// -------------------------------------------------
		echo (string) $this->content;
	}

	/**
	 * Add a header to the response.
	 *
	 * @param  string    $name
	 * @param  string    $value
	 * @return Response
	 */
||||||||	public function send()
	{
		// -------------------------------------------------
		// If a Content-Type header has not been set, do it.
		// -------------------------------------------------
		if ( ! array_key_exists('Content-Type', $this->headers))
		{
			$this->header('Content-Type', 'text/html; charset=utf-8');
		}

		// -------------------------------------------------
		// Send the headers to the browser.
		// -------------------------------------------------
		if ( ! headers_sent())
		{
			$this->send_headers();
		}

		// -------------------------------------------------
		// Send the content of the response to the browser.
		// -------------------------------------------------
		echo (string) $this->content;
	}

	/**
	 * Send the response headers to the browser.
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_ECHO
        (AST_CAST
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ECHO
        (AST_CAST
            (AST_PROP
                (AST_VAR)))))