||||||||	public function has_and_belongs_to_many($model, $table = null)
	{
		$this->relating = __FUNCTION__;

		// -----------------------------------------------------
		// Determine the intermediate table name.
		// -----------------------------------------------------
		if ( ! is_null($table))
		{
			$this->relating_table = $table;
		}
		else
		{
			// -----------------------------------------------------
			// By default, the intermediate table name is the plural
			// names of the models arranged alphabetically and
			// concatenated with an underscore.
			// -----------------------------------------------------
			$models = array(\System\Inflector::plural($model), \System\Inflector::plural(get_class($this)));
			sort($models);

			$this->relating_table = \System\Str::lower($models[0].'_'.$models[1]);
		}

		// -----------------------------------------------------
		// Determine the foreign key for the relationship.
		// -----------------------------------------------------
		$this->relating_key = $this->relating_table.'.'.\System\Str::lower(get_class($this)).'_id';

		return static::make($model)
						->select(static::table($model).'.*')
						->join($this->relating_table, static::table($model).'.id', '=', $this->relating_table.'.'.\System\Str::lower($model).'_id')
						->where($this->relating_key, '=', $this->id);
	}

	/**
	 * Save the model to the database.
	 *
	 * @return bool
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_MAGIC_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (NULL))))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (SCALAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))))
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR))))
            (
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (AST_PROP
                    (AST_VAR))))))