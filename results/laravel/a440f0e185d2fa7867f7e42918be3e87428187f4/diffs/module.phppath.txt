	public static function path($module)
	{
		if (array_key_exists($module, static::$paths)) return static::$paths[$module];

		if (array_key_exists($module, static::$modules))
		{
			return static::$paths[$module] = MODULE_PATH.static::$modules[$module].'/';
		}
	}

	/**
	 * Get the an array of paths to all of the modules.
	 *
	 * The module paths will be determined by the modules that are specified in the application
	 * modules configuration item. A trailing slash will be added to the paths.
	 *
	 * @return array
	 */
||||||||	public static function path($module)
	{
		if (array_key_exists($module, static::$paths)) return static::$paths[$module];

		if (in_array($module, static::$modules))
		{
			return static::$paths[$module] = MODULE_PATH.$module.'/';
		}
		elseif (array_key_exists($module, static::$modules))
		{
			return static::$paths[$module] = MODULE_PATH.static::$modules[$module].'/';
		}
	}

	/**
	 * Get the an array of paths to all of the modules.
	 *
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))
                            (SCALAR))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (SCALAR))))))))