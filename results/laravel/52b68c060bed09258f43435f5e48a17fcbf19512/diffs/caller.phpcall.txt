	public function call(Route $route)
	{
		// Since "before" filters can halt the request cycle, we will return any response
		// from the before filters. Allowing the filters to halt the request cycle makes
		// common tasks like authorization convenient to implement.
		if ( ! is_null($response = $this->before($route)))
		{
			return $this->finish($route, $response);
		}

		if ( ! is_null($response = $route->call()))
		{
			// If a route returns a Delegate, it also means the route is delegating the
			// handling of the request to a controller method. So, we will pass the string
			// to the route delegator, exploding on "@".
			if ($response instanceof Delegate) return $this->delegate($route, $response->destination);

			return $this->finish($route, $response);
		}

		// If we get to this point, no response was returned from the filters or the route.
		// The 404 response will be returned to the browser instead of a blank screen.
		return $this->finish($route, Response::error('404'));
	}

	/**
	 * Handle the delegation of a route to a controller method.
	 *
	 * @param  Route   $route
	 * @param  string  $delegate
	 * @return mixed
	 */
||||||||	public function call(Route $route)
	{
		// Since "before" filters can halt the request cycle, we will return any response
		// from the before filters. Allowing the filters to halt the request cycle makes
		// common tasks like authorization convenient to implement.
		$before = array_merge(array('before'), $route->filters('before'));

		if ( ! is_null($response = $this->filter($before, array(), true)))
		{
			return $this->finish($route, $response);
		}

		// If a route returns a Delegate, it means the route is delegating the handling
		// of the request to a controller method. We will pass the Delegate instance
		// to the "delegate" method which will call the controller.
		if ($route->delegates())
		{
			return $this->delegate($route, $route->call());
		}
		// If no before filters returned a response and the route is not delegating
		// execution to a controller, we will call the route like normal and return
		// the response. If the no response is given by the route, we will return
		// the 404 error view.
		elseif ( ! is_null($response = $route->call()))
		{
			return $this->finish($route, $response);
		}
		else
		{
			return $this->finish($route, Response::error('404'));
		}
	}

	/**
	 * Handle the delegation of a route to a controller method.
	 *
	 * @param  Route     $route
	 * @param  Delegate  $delegate
	 * @return mixed
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_ARRAY)
                                    (AST_CONST)))))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))))