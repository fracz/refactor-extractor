||||||||	protected function clean($uri)
	{
		// The base application URL is removed first. If the application is being
		// served out of a sub-directory of the web document root, we need to get
		// rid of the folders that are included in the URI.
		$uri = $this->remove($uri, parse_url(Config::$items['application']['url'], PHP_URL_PATH));

		// Next, the application index file is removed. The index file has nothing
		// to do with how the request is routed to a closure or controller, so it
		// can be safely removed from the URI.
		if (($index = '/'.Config::$items['application']['index']) !== '/')
		{
			$uri = $this->remove($uri, $index);
		}

		// We don't consider the request format to be a part of the request URI.
		// The format merely determines in which format the requested resource
		// should be returned to the client.
		return rtrim($uri, '.'.Request::format($uri));
	}

	/**
	 * Remove a string from the beginning of a URI.
	 *
	 * @param  string   $uri
	 * @param  string   $remove
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))))))