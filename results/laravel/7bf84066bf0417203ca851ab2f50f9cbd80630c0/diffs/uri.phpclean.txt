	protected function clean($uri)
	{
		$uri = $this->remove($uri, parse_url(Config::$items['application']['url'], PHP_URL_PATH));

		if (($index = '/'.Config::$items['application']['index']) !== '/')
		{
			$uri = $this->remove($uri, $index);
		}

		return rtrim($uri, '.'.Request::format($uri));
	}

	/**
	 * Remove a string from the beginning of a URI.
	 *
	 * @param  string   $uri
	 * @param  string   $remove
	 * @return string
	 */
||||||||	protected function clean($uri)
	{
		$uri = $this->remove($uri, $this->parse(Config::$items['application']['url']));

		if (($index = '/'.Config::$items['application']['index']) !== '/')
		{
			$uri = $this->remove($uri, $index);
		}

		return $uri;
	}

	/**
	 * Parse a given string URI using PHP_URL_PATH to remove the domain.
	 *
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR))
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_DIM
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))