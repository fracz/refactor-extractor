	protected function grammar()
	{
		if (isset($this->grammar)) return $this->grammar;

		if (isset(\Laravel\Database::$registrar[$this->driver()]))
		{
			\Laravel\Database::$registrar[$this->driver()]['query']();
		}

		switch ($this->driver())
		{
			case 'mysql':
				return $this->grammar = new Query\Grammars\MySQL($this);

			case 'sqlite':
				return $this->grammar = new Query\Grammars\SQLite($this);

			case 'sqlsrv':
				return $this->grammar = new Query\Grammars\SQLServer($this);

			default:
				return $this->grammar = new Query\Grammars\Grammar($this);
		}
	}

	/**
	 * Execute a callback wrapped in a database transaction.
	 *
	 * @param  callback  $callback
	 * @return void
	 */
||||||||	protected function grammar()
	{
		if (isset($this->grammar)) return $this->grammar;

		if (isset(\Laravel\Database::$registrar[$this->driver()]))
		{
			\Laravel\Database::$registrar[$this->driver()]['query']();
		}

		switch ($this->driver())
		{
			case 'mysql':
				return $this->grammar = new Query\Grammars\MySQL($this);

			case 'sqlite':
				return $this->grammar = new Query\Grammars\SQLite($this);

			case 'sqlsrv':
				return $this->grammar = new Query\Grammars\SQLServer($this);

			case 'pgsql':
				return $this->grammar = new Query\Grammars\Postgres($this);

			default:
				return $this->grammar = new Query\Grammars\Grammar($this);
		}
	}

	/**
	 * Execute a callback wrapped in a database transaction.
	 *
	 * @param  callback  $callback
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_CALL
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_CALL
                    (AST_DIM
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_NEW
                                (
                                    (AST_VAR))))))))))