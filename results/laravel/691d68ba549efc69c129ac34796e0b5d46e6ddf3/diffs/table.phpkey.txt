	public function key($type, $columns, $name)
	{
		$columns = (array) $columns;

		// If no index name was specified, we will concatenate the columns and
		// append the index type to the name to generate a unique name for
		// the index that can be used when dropping indexes.
		if (is_null($name))
		{
			$name = $this->name.'_'.implode('_', $columns).'_'.$type;
		}

		return $this->command($type, compact('name', 'columns'));
	}

	/**
	 * Drop the database table.
	 *
	 * @return Fluent
	 */
||||||||	public function key($type, $columns, $name)
	{
		$columns = (array) $columns;

		// If no index name was specified, we will concatenate the columns and
		// append the index type to the name to generate a unique name for
		// the index that can be used when dropping indexes.
		if (is_null($name))
		{
			$name = str_replace(array('-', '.'), '_', $this->name);

			$name = $name.'_'.implode('_', $columns).'_'.$type;
		}

		return $this->command($type, compact('name', 'columns'));
	}

	/**
	 * Drop the database table.
	 *
	 * @return Fluent
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))))))