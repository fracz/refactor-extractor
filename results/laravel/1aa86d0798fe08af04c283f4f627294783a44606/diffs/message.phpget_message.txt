	private static function get_message($rule)
	{
		// ---------------------------------------------------------
		// The built-in error messages are stored in the language
		// directory and are keyed by the class name of the rule
		// they are associated with.
		// ---------------------------------------------------------
		if (is_null($rule->error))
		{
			$class = explode('\\', get_class($rule));

			$rule->error = Str::lower(end($class));
		}

		return (is_null($rule->message)) ? Lang::line('validation.'.$rule->error)->get() : $rule->message;
	}

	/**
	 * Get the error message for a Rangable rule.
	 *
	 * @param  Rule    $rule
	 * @return string
	 */
||||||||	private static function get_message($rule)
	{
		// ---------------------------------------------------------
		// The built-in error messages are stored in the language
		// directory and are keyed by the class name of the rule
		// they are associated with.
		// ---------------------------------------------------------
		if (is_null($rule->error))
		{
			$class = explode('\\', get_class($rule));

			$rule->error = strtolower(end($class));
		}

		return (is_null($rule->message)) ? Lang::line('validation.'.$rule->error)->get() : $rule->message;
	}

	/**
	 * Get the error message for a Rangable rule.
	 *
	 * @param  Rule    $rule
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_PROP
                (AST_VAR)))))