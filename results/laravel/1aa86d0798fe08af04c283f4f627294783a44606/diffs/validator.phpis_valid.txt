	public function is_valid()
	{
		$this->errors = array();

		foreach ($this->rules as $rule)
		{
			// ---------------------------------------------------------
			// The error collector is passed to the rule so that the
			// rule may conveniently add error messages.
			// ---------------------------------------------------------
			$rule->validate($this->attributes, $this->errors);
		}

		return count($this->errors) == 0;
	}

	/**
	 * Magic Method for dynamically creating validation rules.
	 */
||||||||	public function is_valid()
	{
		$this->errors->messages = array();

		foreach ($this->rules as $rule)
		{
			// ---------------------------------------------------------
			// The error collector is passed to the rule so that the
			// rule may conveniently add error messages.
			// ---------------------------------------------------------
			$rule->validate($this->attributes, $this->errors);
		}

		return count($this->errors->messages) == 0;
	}

	/**
	 * Magic Method for dynamically creating validation rules.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (SCALAR))))