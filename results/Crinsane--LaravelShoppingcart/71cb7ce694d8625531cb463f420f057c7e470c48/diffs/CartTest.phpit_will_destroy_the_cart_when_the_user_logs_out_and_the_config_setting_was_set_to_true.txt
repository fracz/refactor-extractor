||||||||    public function it_will_destroy_the_cart_when_the_user_logs_out_and_the_config_setting_was_set_to_true()
    {
        $this->app['config']->set('cart.destroy_on_logout', true);

        $session = Mockery::mock(\Illuminate\Session\SessionManager::class);

        $session->shouldReceive('forget')->once()->with('cart');

        $this->app->instance(\Illuminate\Session\SessionManager::class, $session);

        $user = Mockery::mock(\Illuminate\Contracts\Auth\Authenticatable::class);

        event(new \Illuminate\Auth\Events\Logout($user));
    }

    /**
     * Get an instance of the cart.
     *
     * @return \Gloudemans\Shoppingcart\Cart
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_NEW
                (
                    (AST_VAR))))))