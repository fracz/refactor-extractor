||||||||	public function testFetchToken()
	{
		$s = '';
		$this->assertEquals('', CurlyBracketsFilter::fetchToken($s));
		$this->assertEquals('', $s);

		$s = '$1d-,a';
		$this->assertEquals('$1d-', CurlyBracketsFilter::fetchToken($s));
		$this->assertEquals('a', $s);

		$s = '$1d"-,a';
		$this->assertEquals('$1d', CurlyBracketsFilter::fetchToken($s));
		$this->assertEquals('"-,a', $s);

		$s = '"item\'1""item2"';
		$this->assertEquals('"item\'1""item2"', CurlyBracketsFilter::fetchToken($s));
		$this->assertEquals('', $s);
	}



	/**
	 * formatString() test.
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))