	private function roleDFSVisitOnePrivilege($role, $resource, $privilege, &$dfs)
	{
		if (NULL !== ($type = $this->getRuleType($resource, $role, $privilege))) {
			return self::ALLOW === $type;
		}

		if (NULL !== ($type = $this->getRuleType($resource, $role, NULL))) {
			return self::ALLOW === $type;
		}

		$dfs['visited'][$role] = TRUE;
		foreach ($this->roles[$role]['parents'] as $roleParent => $foo)
			$dfs['stack'][] = $roleParent;

		return NULL;
	}



	/**
	 * Returns the rule type associated with the specified Resource, Role, and privilege.
	 * combination.
	 *
	 * If a rule does not exist or its attached assertion fails, which means that
	 * the rule is not applicable, then this method returns NULL. Otherwise, the
	 * rule type applies and is returned as either ALLOW or DENY.
	 *
	 * If $resource or $role is Permission::ALL, then this means that the rule must apply to
	 * all Resources or Roles, respectively.
	 *
	 * If $privilege is Permission::ALL, then the rule must apply to all privileges.
	 *
	 * If all three parameters are Permission::ALL, then the default ACL rule type is returned,
	 * based on whether its assertion method passes.
	 *
	 * @param  string|Permission::ALL  role
	 * @param  string|Permission::ALL  resource
	 * @param  string|Permission::ALL  privilege
	 * @return bool|NULL
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CONST)))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR))
        (AST_CONST))
    (AST_FOREACH
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (NULL))
                (AST_VAR))))
    (AST_RETURN
        (AST_CONST)))||||||||