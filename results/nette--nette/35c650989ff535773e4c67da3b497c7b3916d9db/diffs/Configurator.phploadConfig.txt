	public function loadConfig($file)
	{
		$name = Environment::getName();

		if ($file instanceof /*Nette\Config\*/Config) {
			$config = $file;
			$file = NULL;

		} else {
			if ($file === NULL) {
				$file = $this->defaultConfigFile;
			}
			$file = Environment::expand($file);
			$config = /*Nette\Config\*/Config::fromFile($file, $name, 0);
		}

		// process environment variables
		if ($config->variable instanceof /*Nette\Config\*/Config) {
			foreach ($config->variable as $key => $value) {
				Environment::setVariable($key, $value);
			}
		}

		$config->expand();

		// process services
		$locator = Environment::getServiceLocator();
		if ($config->service instanceof /*Nette\Config\*/Config) {
			foreach ($config->service as $key => $value) {
				$locator->addService($value, strtr($key, '-', '\\'));
			}
		}

		// check temporary directory - TODO: discuss
		/*
		$dir = Environment::getVariable('tempDir');
		if ($dir && !(is_dir($dir) && is_writable($dir))) {
			trigger_error("Temporary directory '$dir' is not writable", E_USER_NOTICE);
		}
		*/

		// process ini settings
		if ($config->set instanceof /*Nette\Config\*/Config) {
			if (PATH_SEPARATOR !== ';' && isset($config->set->include_path)) {
				$config->set->include_path = str_replace(';', PATH_SEPARATOR, $config->set->include_path);
			}

			foreach ($config->set as $key => $value) {
				$key = strtr($key, '-', '.'); // old INI compatibility

				if (!is_scalar($value)) {
					throw new /*\*/InvalidStateException("Configuration value for directive '$key' is not scalar.");
				}

				if (function_exists('ini_set')) {
					ini_set($key, $value);
				} else {
					switch ($key) {
					case 'include_path':
						set_include_path($value);
						break;
					case 'iconv.internal_encoding':
						iconv_set_encoding('internal_encoding', $value);
						break;
					case 'mbstring.internal_encoding':
						mb_internal_encoding($value);
						break;
					case 'date.timezone':
						date_default_timezone_set($value);
						break;
					case 'error_reporting':
						error_reporting($value);
						break;
					case 'ignore_user_abort':
						ignore_user_abort($value);
						break;
					case 'max_execution_time':
						set_time_limit($value);
						break;
					default:
						throw new /*\*/NotSupportedException('Required function ini_set() is disabled.');
					}
				}
			}
		}

		// define constants
		if ($config->const instanceof /*Nette\Config\*/Config) {
			foreach ($config->const as $key => $value) {
				define($key, $value);
			}
		}

		// set modes
		if (isset($config->mode)) {
			foreach($config->mode as $mode => $state) {
				Environment::setMode($mode, $state);
			}
		}

		$config->setReadOnly();
		return $config;
	}



	/********************* service factories ****************d*g**/



	/**
	 * Get initial instance of service locator.
	 * @return IServiceLocator
	 */
||||||||	public function loadConfig($file)
	{
		$name = Environment::getName();

		if ($file instanceof /*Nette\Config\*/Config) {
			$config = $file;
			$file = NULL;

		} else {
			if ($file === NULL) {
				$file = $this->defaultConfigFile;
			}
			$file = Environment::expand($file);
			$config = /*Nette\Config\*/Config::fromFile($file, $name, 0);
		}

		// process environment variables
		if ($config->variable instanceof /*Nette\Config\*/Config) {
			foreach ($config->variable as $key => $value) {
				Environment::setVariable($key, $value);
			}
		}

		$config->expand();

		// process services
		$locator = Environment::getServiceLocator();
		if ($config->service instanceof /*Nette\Config\*/Config) {
			foreach ($config->service as $key => $value) {
				$locator->addService($value, strtr($key, '-', '\\'));
			}
		}

		// check temporary directory - TODO: discuss
		/*
		$dir = Environment::getVariable('tempDir');
		if ($dir && !(is_dir($dir) && is_writable($dir))) {
			trigger_error("Temporary directory '$dir' is not writable", E_USER_NOTICE);
		}
		*/

		// process ini settings
		if ($config->set instanceof /*Nette\Config\*/Config) {
			if (PATH_SEPARATOR !== ';' && isset($config->set->include_path)) {
				$config->set->include_path = str_replace(';', PATH_SEPARATOR, $config->set->include_path);
			}

			foreach ($config->set as $key => $value) {
				$key = strtr($key, '-', '.'); // old INI compatibility

				if (!is_scalar($value)) {
					throw new /*\*/InvalidStateException("Configuration value for directive '$key' is not scalar.");
				}

				if (function_exists('ini_set')) {
					ini_set($key, $value);
				} else {
					switch ($key) {
					case 'include_path':
						set_include_path($value);
						break;
					case 'iconv.internal_encoding':
						iconv_set_encoding('internal_encoding', $value);
						break;
					case 'mbstring.internal_encoding':
						mb_internal_encoding($value);
						break;
					case 'date.timezone':
						date_default_timezone_set($value);
						break;
					case 'error_reporting':
						error_reporting($value);
						break;
					case 'ignore_user_abort':
						ignore_user_abort($value);
						break;
					case 'max_execution_time':
						set_time_limit($value);
						break;
					default:
						if (ini_get($key) != $value) { // intentionally ==
							throw new /*\*/NotSupportedException('Required function ini_set() is disabled.');
						}
					}
				}
			}
		}

		// define constants
		if ($config->const instanceof /*Nette\Config\*/Config) {
			foreach ($config->const as $key => $value) {
				define($key, $value);
			}
		}

		// set modes
		if (isset($config->mode)) {
			foreach($config->mode as $mode => $state) {
				Environment::setMode($mode, $state);
			}
		}

		$config->setReadOnly();
		return $config;
	}



	/********************* service factories ****************d*g**/



	/**
	 * Get initial instance of service locator.
	 * @return IServiceLocator
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_ISSET
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_CONST)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_SWITCH
                                        (AST_VAR)
                                        (AST_SWITCH_LIST
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (NULL)
                                                (
                                                    (AST_THROW
                                                        (AST_NEW
                                                            (
                                                                (SCALAR))))))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR))
                            (AST_ISSET
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_CONST)
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_SWITCH
                                        (AST_VAR)
                                        (AST_SWITCH_LIST
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (SCALAR)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_BREAK
                                                        (NULL))))
                                            (AST_SWITCH_CASE
                                                (NULL)
                                                (
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_BINARY_OP
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR)))
                                                                (AST_VAR))
                                                            (
                                                                (AST_THROW
                                                                    (AST_NEW
                                                                        (
                                                                            (SCALAR)))))))))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))