	protected function getSessionSection($need)
	{
		if ($this->session !== NULL) {
			return $this->session;
		}

		if (!$need && !$this->context->session->exists()) {
			return NULL;
		}

		$this->session = $session = $this->context->session->getSection('Nette.Web.User/' . $this->namespace);

		if (!$session->identity instanceof IIdentity || !is_bool($session->authenticated)) {
			$session->remove();
		}

		if ($session->authenticated && $session->expireBrowser && !$session->browserCheck) { // check if browser was closed?
			$session->reason = self::BROWSER_CLOSED;
			$session->authenticated = FALSE;
			$this->onLoggedOut($this);
			if ($session->expireIdentity) {
				unset($session->identity);
			}
		}

		if ($session->authenticated && $session->expireDelta > 0) { // check time expiration
			if ($session->expireTime < time()) {
				$session->reason = self::INACTIVITY;
				$session->authenticated = FALSE;
				$this->onLoggedOut($this);
				if ($session->expireIdentity) {
					unset($session->identity);
				}
			}
			$session->expireTime = time() + $session->expireDelta; // sliding expiration
		}

		if (!$session->authenticated) {
			unset($session->expireTime, $session->expireDelta, $session->expireIdentity,
				$session->expireBrowser, $session->browserCheck, $session->authTime);
		}

		return $this->session;
	}



	/**
	 * Sets the authenticated status of this user.
	 * @param  bool  flag indicating the authenticated status of user
	 * @return User  provides a fluent interface
	 */
||||||||	protected function getSessionSection($need)
	{
		if ($this->section !== NULL) {
			return $this->section;
		}

		if (!$need && !$this->session->exists()) {
			return NULL;
		}

		$this->section = $section = $this->session->getSection('Nette.Web.User/' . $this->namespace);

		if (!$section->identity instanceof IIdentity || !is_bool($section->authenticated)) {
			$section->remove();
		}

		if ($section->authenticated && $section->expireBrowser && !$section->browserCheck) { // check if browser was closed?
			$section->reason = self::BROWSER_CLOSED;
			$section->authenticated = FALSE;
			$this->onLoggedOut($this);
			if ($section->expireIdentity) {
				unset($section->identity);
			}
		}

		if ($section->authenticated && $section->expireDelta > 0) { // check time expiration
			if ($section->expireTime < time()) {
				$section->reason = self::INACTIVITY;
				$section->authenticated = FALSE;
				$this->onLoggedOut($this);
				if ($section->expireIdentity) {
					unset($section->identity);
				}
			}
			$section->expireTime = time() + $section->expireDelta; // sliding expiration
		}

		if (!$section->authenticated) {
			unset($section->expireTime, $section->expireDelta, $section->expireIdentity,
				$section->expireBrowser, $section->browserCheck, $section->authTime);
		}

		return $this->section;
	}



	/**
	 * Sets the authenticated status of this user.
	 * @param  bool  flag indicating the authenticated status of user
	 * @return User  provides a fluent interface
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_UNSET
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CALL))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_UNSET
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_INSTANCEOF
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_UNSET
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CALL))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_UNSET
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNSET
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))