	public function lookup($type, $need = FALSE)
	{
		/**/// fix for namespaced classes/interfaces in PHP < 5.3
		if ($a = strrpos($type, ':')) $type = substr($type, $a + 1);/**/

		if (!isset($this->lookupCache[$type])) {
			$obj = $this;
			$path = array();
			do {
				if ($obj instanceof $type) break;
				array_unshift($path, $obj->getName());
				$obj = $obj->getParent(); // IConponent::getParent()
				if ($obj === $this) $obj = NULL; // prevent cycling
			} while ($obj !== NULL);

			$this->lookupCache[$type] = array(
				$obj,
				$obj === NULL ? NULL : implode(self::NAME_SEPARATOR, $path),
			);
		}

		if ($need && $this->lookupCache[$type][0] === NULL) {
			throw new /*::*/InvalidStateException("Component is not attached to '$type'.");
		}
		return $this->lookupCache[$type][0];
	}



	/**
	 * Lookup for component specified by class or interface name. Returns backtrace path.
	 * A path is the concatenation of component names separated by self::NAME_SEPARATOR.
	 * @param  string class/interface type
	 * @param  bool   throw exception if component doesn't exist?
	 * @return string
	 */
||||||||	public function lookup($type, $need = FALSE)
	{
		/**/// fix for namespaced classes/interfaces in PHP < 5.3
		if ($a = strrpos($type, ':')) $type = substr($type, $a + 1);/**/

		if (!isset($this->monitors[$type])) {
			$obj = $this->parent;
			$path = self::NAME_SEPARATOR . $this->name;
			$depth = 1;
			while ($obj !== NULL) {
				if ($obj instanceof $type) break;
				$path = self::NAME_SEPARATOR . $obj->getName() . $path;
				$depth++;
				$obj = $obj->getParent(); // IConponent::getParent()
				if ($obj === $this) $obj = NULL; // prevent cycling
			}

			$monitored = array_key_exists($type, $this->monitors);
			if ($obj) {
				$this->monitors[$type] = array(
					$obj,
					$depth,
					substr($path, 1),
					$monitored,
				);
				if ($monitored) {
					$this->attached($obj);
				}
			} else {
				$this->monitors[$type] = array(NULL, NULL, NULL, $monitored);
			}
		}

		if ($need && $this->monitors[$type][0] === NULL) {
			throw new /*::*/InvalidStateException("Component is not attached to '$type'.");
		}

		return $this->monitors[$type][0];
	}



	/**
	 * Lookup for component specified by class or interface name. Returns backtrace path.
	 * A path is the concatenation of component names separated by self::NAME_SEPARATOR.
	 * @param  string class/interface type
	 * @param  bool   throw exception if component doesn't exist?
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_DO_WHILE
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_INSTANCEOF
                                    (AST_VAR)
                                    (AST_VAR))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_CONST)
                                (AST_CALL
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (AST_VAR))))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_INSTANCEOF
                                    (AST_VAR)
                                    (AST_VAR))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_VAR)))
                        (AST_POST_INC
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_CONST)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_RETURN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))))