	protected function notification(/*Nette::*/IComponent $sender, $message)
	{
		parent::notification($sender, $message);

		$presenter = $this->getPresenter(FALSE);
		if ($presenter !== NULL) {
			if ($message === self::HIERARCHY_DETACH) {
				// is called before sender's parent is about to be detached
				$presenter->unregisterComponent($this);

			} elseif ($message === self::HIERARCHY_ATTACH) {
				// is called after sender's parent was attached
				$presenter->registerComponent($this->getUniqueId(), $this);
			}
		}
	}



||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR))))))))))||||||||