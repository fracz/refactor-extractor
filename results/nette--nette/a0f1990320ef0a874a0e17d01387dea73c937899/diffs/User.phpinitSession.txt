	protected function initSession()
	{
		$this->session = $session = Environment::getSession($this->namespace);

		if (!($session->identity instanceof /*Nette::Security::*/IIdentity)) {
			$session->identity = NULL;
		}

		if (!is_bool($session->authenticated)) {
			$session->authenticated = FALSE;
		}

		if ($session->authkey !== Environment::getHttpRequest()->cookies[$this->namespace . 'authkey']) {
			$this->setAuthenticated(FALSE);
		}
	}



	/********************* Authentication ****************d*g**/



	/**
	 * Check the authenticated status.
	 * @param  string
	 * @param  string
	 * @return void
	 * @throws Nette::Security::AuthenticationException
	 */
||||||||	protected function initSession()
	{
		$this->session = $session = Environment::getSession('Nette.Web.User');

		if (!($session->identity instanceof /*Nette::Security::*/IIdentity)) {
			$session->identity = NULL;
		}

		if (!is_bool($session->authenticated)) {
			$session->authenticated = FALSE;
		}

		if ($session->authkey !== Environment::getHttpRequest()->cookies[$this->cookieName]) {
			$this->setAuthenticated(FALSE);
		}
	}



	/********************* Authentication ****************d*g**/



	/**
	 * Check the authenticated status.
	 * @param  string
	 * @param  string
	 * @param  mixed
	 * @return void
	 * @throws Nette::Security::AuthenticationException
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ASSIGN
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST)))))))