	public function macroInclude(MacroNode $node, $writer)
	{
		$destination = $writer->fetchWord($node->args); // destination [,] [params]
		$params = $writer->formatArray($node->args) . ($node->args ? ' + ' : '');

		$cmd = 'Nette\Latte\Macros\CoreMacros::includeTemplate(' . $writer->formatWord($destination) . ', '
			. $params . '$template->getParams(), $_l->templates[' . var_export($this->parser->templateId, TRUE) . '])';

		return $node->modifiers
			? 'echo ' . $writer->formatModifiers($cmd . '->__toString(TRUE)', $node->modifiers, $this->parser->escape)
			: $cmd . '->render()';
	}



	/**
	 * {capture $variable}
	 */
||||||||	public function macroInclude(MacroNode $node, $writer)
	{
		$destination = $node->tokenizer->fetchWord(); // destination [,] [params]
		$params = $writer->formatArray();
		$params .= $params ? ' + ' : '';

		$cmd = 'Nette\Latte\Macros\CoreMacros::includeTemplate(' . $writer->formatWord($destination) . ', '
			. $params . '$template->getParams(), $_l->templates[' . var_export($this->parser->templateId, TRUE) . '])';

		return $node->modifiers
			? 'echo ' . $writer->formatModifiers($cmd . '->__toString(TRUE)')
			: $cmd . '->render()';
	}



	/**
	 * {capture $variable}
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_CONDITIONAL
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CONST))))
            (SCALAR)))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (AST_CONST))))
            (SCALAR)))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))))