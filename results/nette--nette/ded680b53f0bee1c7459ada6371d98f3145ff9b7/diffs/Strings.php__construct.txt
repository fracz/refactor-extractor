	final public function __construct()
	{
		throw new Nette\StaticClassException;
	}



	/**
	 * Checks if the string is valid for the specified encoding.
	 * @param  string  byte stream to check
	 * @param  string  expected encoding
	 * @return bool
	 */
||||||||	public function __construct($message, $code = NULL, $pattern = NULL)
	{
		if (!$message) {
			$message = (isset(self::$messages[$code]) ? self::$messages[$code] : 'Unknown error') . ($pattern ? " (pattern: $pattern)" : '');
		} elseif ($pattern) {
			$message .= " in pattern: $pattern";
		}
		parent::__construct($message, $code);
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_THROW
        (AST_NEW)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (AST_VAR))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))))))
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR))))