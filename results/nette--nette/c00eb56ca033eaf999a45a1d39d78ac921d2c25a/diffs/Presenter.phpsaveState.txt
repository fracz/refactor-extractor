	public function saveState(array & $params, $forClass = NULL)
	{
		// save persistent state
		if ($forClass === NULL) {
			$forClass = $this->getClass();
		}

		foreach (PresenterHelpers::getPersistentParams($forClass) as $nm => $l)
		{
			if (!($this instanceof $l['since'])) continue;

			if (array_key_exists($nm, $params)) {
				if ($params[$nm] === NULL) continue;
				$val = $params[$nm];

			} else {
				$val = $this->$nm;
			}

			if ($l['type']) settype($val, $l['type']);

			$params[$nm] = $val === $l['def'] ? NULL : $val;
		}
	}



	/**
	 * Saves state information for all subcomponents.
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CONST))
                                (
                                    (AST_CONTINUE
                                        (NULL)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST)
                    (AST_VAR))))))||||||||