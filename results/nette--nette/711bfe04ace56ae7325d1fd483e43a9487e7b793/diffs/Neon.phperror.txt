	private function error($message = "Unexpected '%s'")
	{
		list(, $line, $col) = self::$tokenizer->getOffset($this->n);
		$token = isset(self::$tokenizer->tokens[$this->n])
			? str_replace("\n", '<new line>', Strings::truncate(self::$tokenizer->tokens[$this->n], 40))
			: 'end';
		throw new NeonException(str_replace('%s', $token, $message) . " on line $line, column $col.");
	}

}



/**
 * Representation of 'foo(bar=1)' literal
 */
class NeonEntity extends \stdClass
{
	public $value;
	public $attributes;
}



/**
 * The exception that indicates error of NEON decoding.
 */
class NeonException extends \Exception
{
}||||||||	private function error($message = "Unexpected '%s'")
	{
		list(, $line, $col) = self::$tokenizer->getOffset($this->n);
		$token = isset($this->tokens[$this->n])
			? str_replace("\n", '<new line>', Strings::truncate($this->tokens[$this->n], 40))
			: 'end';
		throw new NeonException(str_replace('%s', $token, $message) . " on line $line, column $col.");
	}

}



/**
 * Representation of 'foo(bar=1)' literal
 */
class NeonEntity extends \stdClass
{
	public $value;
	public $attributes;
}



/**
 * The exception that indicates error of NEON decoding.
 */
class NeonException extends \Exception
{
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_STATIC_PROP))
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR)))))
            (SCALAR)))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR)))))
            (SCALAR)))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))))