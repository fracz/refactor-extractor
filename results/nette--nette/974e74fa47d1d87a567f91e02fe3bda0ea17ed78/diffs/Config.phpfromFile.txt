    public static function fromFile($file, $section = NULL, $flags = self::READONLY)
    {
        require_once dirname(__FILE__) . '/ConfigAdapters.php';

        $class = /*Nette::*/'ConfigAdapter_' . strtoupper(pathinfo($file, PATHINFO_EXTENSION));
        if (class_exists($class)) {
            $arr = call_user_func(array($class, 'load'), $file, $section);
            return new /**/self/**//*static*/($arr, $flags);

        } else {
            throw new /*::*/InvalidArgumentException("Unknown file '$file' extension.");
        }
    }



    /**
     * Save configuration to file.
     * @param  string  file
     * @param  string  section to write
     * @return void
     */
||||||||    public static function fromFile($file, $section = NULL, $flags = self::READONLY)
    {
        $class = /*Nette::*/'ConfigAdapter_' . strtoupper(pathinfo($file, PATHINFO_EXTENSION));
        if (class_exists($class)) {
            $arr = call_user_func(array($class, 'load'), $file, $section);
            return new /**/self/**//*static*/($arr, $flags);

        } else {
            throw new /*::*/InvalidArgumentException("Unknown file '$file' extension.");
        }
    }



    /**
     * Save configuration to file.
     * @param  string  file
     * @param  string  section to write
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_MAGIC_CONST)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_VAR)
                            (AST_VAR))))
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_VAR)
                            (AST_VAR))))
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))))))