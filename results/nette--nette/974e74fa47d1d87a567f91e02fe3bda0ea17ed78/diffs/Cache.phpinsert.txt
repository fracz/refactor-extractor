    public function insert($key, $data, $tags = NULL, $lifeTime = 0)
    {
        if (!is_string($key)) {
            throw new /*::*/InvalidArgumentException('Key must be a string.');
        }

        $this->storage->write($key, $data, $tags, $lifeTime, NULL);
    }


    /********************* interface ::ArrayAccess ****************d*g**/



    /**
     * Inserts (replaces) item into the cache (::ArrayAccess implementation).
     * @param  string key
     * @param  mixed
     * @return void
     * @throws ::InvalidArgumentException
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONST))))||||||||