	public function getToggles($actual = FALSE)
	{
		$toggles = $this->toggles;
		foreach ($actual ? $this : array() as $rule) {
			if ($rule->branch) {
				$success = static::validateRule($rule);
				foreach ($rule->branch->getToggles(TRUE) as $id => $hide) {
					$toggles[$id] = empty($toggles[$id]) ? ($success && $hide) : TRUE;
				}
			}
		}
		return $toggles;
	}


	/**
	 * Process 'operation' string.
	 * @param  Rule
	 * @return void
	 */
||||||||	public function getToggles($actual = FALSE)
	{
		return $actual ? $this->getToggleStates() : $this->toggles;
	}


	/**
	 * @internal
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_VAR)
            (AST_ARRAY))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CONST)))
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CONDITIONAL
                                        (AST_EMPTY
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_CONST))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))))