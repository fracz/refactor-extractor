	public static function formatMessage($rule)
	{
		$message = $rule->message;
		if ($translator = $rule->control->getForm()->getTranslator()) {
			$message = $translator->translate($message, is_int($rule->arg) ? $rule->arg : NULL);
		}
		$message = str_replace('%name', $rule->control->getName(), $message);
		$message = str_replace('%label', $rule->control->caption, $message);
		if (strpos($message, '%value') !== FALSE) {
			str_replace('%value', $rule->control->getValue(), $message);
		}
		$message = vsprintf($message, (array) $rule->arg);
		return $message;
	}

}||||||||	public static function formatMessage($rule)
	{
		$message = $rule->message;
		if ($translator = $rule->control->getForm()->getTranslator()) {
			$message = $translator->translate($message, is_int($rule->arg) ? $rule->arg : NULL);
		}
		$message = str_replace('%name', $rule->control->getName(), $message);
		$message = str_replace('%label', $rule->control->translate($rule->control->caption), $message);
		if (strpos($message, '%value') !== FALSE) {
			str_replace('%value', (string) $rule->control->getValue(), $message);
		}
		$message = vsprintf($message, (array) $rule->arg);
		return $message;
	}

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CAST
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CAST
                    (AST_PROP
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))