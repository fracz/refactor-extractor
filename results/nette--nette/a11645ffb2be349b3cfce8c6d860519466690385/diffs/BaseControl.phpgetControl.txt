	public function getControl()
	{
		$this->setOption('rendered', TRUE);

		$control = clone $this->control;
		$control->name = $this->getHtmlName();
		$control->disabled = $this->disabled;
		$control->id = $this->getHtmlId();
		$control->required = $this->isRequired();

		if (isset($control->placeholder)) {
			$control->placeholder = $this->translate($control->placeholder);
		}

		$rules = self::exportRules($this->rules);
		$control->data('nette-rules', $rules ? Nette\Utils\Json::encode($rules) : NULL);

		return $control;
	}


	/**
	 * Generates label's HTML element.
	 * @param  string
	 * @return Nette\Utils\Html
	 */
||||||||	public function getControl()
	{
		$this->setOption('rendered', TRUE);

		$rules = self::exportRules($this->rules);
		$el = clone $this->control;
		return $el->addAttributes(array(
			'name' => $this->getHtmlName(),
			'id' => $this->getHtmlId(),
			'required' => $this->isRequired(),
			'disabled' => $this->isDisabled(),
		))->data('nette-rules', $rules ? Nette\Utils\Json::encode($rules) : NULL);
	}


	/**
	 * Generates label's HTML element.
	 * @param  string
	 * @return Nette\Utils\Html
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_CONST))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_PROP
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR)))))
            (
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (AST_CONST))))))