	private function error($message = "Unexpected '%s'")
	{
		list(, $line, $col) = self::$tokenizer->getOffset($this->n);
		$token = str_replace("\n", '\n', Nette\String::truncate(self::$tokenizer->tokens[$this->n], 40));
		throw new NeonException(str_replace('%s', $token, $message) . "' on line " . ($line - 1) . ", column $col.");
	}

}



/**
 * The exception that indicates error of NEON decoding.
 */
class NeonException extends \Exception
{
}||||||||	private function error($message = "Unexpected '%s'")
	{
		list(, $line, $col) = self::$tokenizer->getOffset($this->n);
		$token = str_replace("\n", '<new line>', Nette\String::truncate(self::$tokenizer->tokens[$this->n], 40));
		throw new NeonException(str_replace('%s', $token, $message) . " on line $line, column $col.");
	}

}



/**
 * The exception that indicates error of NEON decoding.
 */
class NeonException extends \Exception
{
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_STATIC_PROP))
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_ARRAY
            (NULL)
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_STATIC_PROP))
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))))