	public function addClass($class, $file)
	{
		$class = strtolower($class);
		if (isset($this->list[$class]) && $this->list[$class] !== $file) {
			// throwing exception is not possible
			trigger_error("Ambiguous class '$class' resolution; defined in $file and in " . $this->list[$class] . ".", E_USER_ERROR);
		}
		$this->list[$class] = $file;
	}



	/**
	 * Scan a directory for PHP files, subdirectories and 'netterobots.txt' file.
	 * @param  string
	 * @return void
	 */
||||||||	public function addClass($class, $file)
	{
		$class = strtolower($class);
		if (isset($this->list[$class]) && $this->list[$class] !== $file) {
			// throwing exception is not possible, Nette::Debug converts errors to exceptions
			die("Ambiguous class '$class' resolution; defined in $file and in " . $this->list[$class] . ".");
		}
		$this->list[$class] = $file;
	}



	/**
	 * Scan a directory for PHP files, subdirectories and 'netterobots.txt' file.
	 * @param  string
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_EXIT
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR)))