	public function redirectUri($uri, $code = /*Nette::Web::*/IHttpResponse::S303_POST_GET)
	{
		if ($this->isPartialMode()) {
			$this->ajaxDriver->redirect($uri);

		} else {
			if (substr($uri, 0, 2) === '//') {
				$uri = $this->httpRequest->getUri()->scheme . ':' . $uri;
			} elseif (substr($uri, 0, 1) === '/') {
				$uri = $this->httpRequest->getUri()->hostUri . $uri;
			}

			$httpResponse = Environment::getHttpResponse();
			$httpResponse->setCode($code);
			$httpResponse->setHeader('Location: ' . $uri);
			echo '<h1>Redirect</h1><p><a href="', htmlSpecialChars($uri), '">Please click here to continue</a>.</p>';
		}

		$this->abort();
	}



	/**
	 * Link to myself.
	 * @param  bool
	 * @return string
	 */
||||||||	public function redirectUri($uri, $code = /*Nette::Web::*/IHttpResponse::S303_POST_GET)
	{
		if ($this->isPartialMode()) {
			$this->ajaxDriver->redirect($uri);
			$this->abort();

		} else {
			throw new RedirectingException($uri, $code);
		}
	}



	/**
	 * Link to myself.
	 * @param  bool
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (SCALAR))
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (AST_ECHO
                    (SCALAR))
                (AST_ECHO
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR))))))))