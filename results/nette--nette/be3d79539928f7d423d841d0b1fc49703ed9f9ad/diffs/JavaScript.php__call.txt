	public function __call($method, $args)
	{
		if ($this->state === FALSE) {
			throw new /*::*/InvalidStateException('Invalid syntax.');
		}
		foreach ($args as $key => $arg) {
			$args[$key] = json_encode($arg);
		}
		$this->js .= $this->state . $method . '(' . implode(', ', $args) . ')';
		$this->state = '.';
		return $this;
	}



	/**
	 * Appends user expressions.
	 * @param  mixed  one or more parameters
	 * @return JavaScript provides a fluent interface
	 */
||||||||	public function __call($method, $args)
	{
		if ($this->state === FALSE) {
			throw new /*::*/InvalidStateException('Invalid syntax.');
		}
		foreach ($args as $key => $arg) {
			$args[$key] = $arg instanceof self ? $arg->js : json_encode($arg);
		}
		$this->js .= $this->state . $method . '(' . implode(', ', $args) . ')';
		$this->state = '.';
		return $this;
	}



	/**
	 * Appends user expressions.
	 * @param  mixed  one or more parameters
	 * @return JavaScript provides a fluent interface
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CONDITIONAL
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))