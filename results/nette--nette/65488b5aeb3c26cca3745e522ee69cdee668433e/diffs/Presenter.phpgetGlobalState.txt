	public function getGlobalState()
	{
		if ($this->phase > self::PHASE_SIGNAL) {
			return $this->globalParams;
		}

		$state = array();
		foreach ($this->globalComponents as $id => $component)
		{
			if ($component instanceof IStatePersistent) {
				$params = array();
				$component->saveState($params);
				if ($id === '') {
					$state = $params + $state;
				} else {
					$prefix = $id . self::NAME_SEPARATOR;
					foreach ($params as $key => $val) {
						$state[$prefix . $key] = $val;
					}
				}
			}
		}
		return $state;
	}



	/**
	 * Initializes $this->globalParams, $this->signal & $this->signalReceiver, $this->view, $this->scene.
	 * @return void
	 * @throws BadRequestException if view name is not valid
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CLASS_CONST
                                                (SCALAR))))
                                    (AST_FOREACH
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_VAR)))
                                                (AST_VAR))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||