	public function remove($key)
	{
		$metaFile = $this->getMetaFile($key);
		$meta = $this->readMeta($metaFile);
		if (!$meta) return;

		ftruncate($meta['handle'], 0);
		@unlink($file); // intentionally @
		@unlink($meta['file']); // intentionally @
		fclose($meta['handle']);
	}



	/**
	 * Removes items from the cache by conditions & garbage collector.
	 * @param  array  conditions
	 * @return void
	 */
||||||||	public function remove($key)
	{
		$metaFile = $this->getMetaFile($key);
		$meta = $this->readMeta($metaFile, LOCK_EX);
		if (!$meta) return TRUE;

		ftruncate($meta['handle'], 0);
		@unlink($meta['file']); // intentionally @
		@unlink($file); // intentionally @
		fclose($meta['handle']);
		return TRUE;
	}



	/**
	 * Removes items from the cache by conditions & garbage collector.
	 * @param  array  conditions
	 * @return bool  TRUE if no problem
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_CONST)))