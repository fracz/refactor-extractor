||||||||	public function getImageResource()
	{
		if ($this->file !== NULL) {
			if (!$this->isTemporary) {
				$this->execute("convert -strip %input %output", self::PNG);
			}
			$this->setImageResource(imagecreatefrompng($this->file));
			if ($this->isTemporary) {
				unlink($this->file);
			}
			$this->file = NULL;
		}

		return parent::getImageResource();
	}



	/**
	 * Resizes image.
	 * @param  mixed  width in pixels or percent
	 * @param  mixed  height in pixels or percent
	 * @param  int    flags
	 * @return ImageMagick  provides a fluent interface
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_RETURN
        (AST_STATIC_CALL)))