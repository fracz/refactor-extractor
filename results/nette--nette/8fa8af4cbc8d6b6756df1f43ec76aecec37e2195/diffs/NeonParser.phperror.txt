||||||||	private function error()
	{
		$tokens = String::split($this->input, self::$regexp, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_OFFSET_CAPTURE);
		list($token, $offset) = $tokens[$this->n];
		$line = substr_count($this->input, "\n", 0, $offset) + 1;
		$col = $offset - strrpos(substr($this->input, 0, $offset), "\n");
		throw new \Exception('NEON parse error: unexpected ' . str_replace("\n", '\n', substr($token, 0, 10))  . " on line $line, column $col.");
	}

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_PROP)
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_DIM
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_VAR)))
                    (SCALAR)))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))))))