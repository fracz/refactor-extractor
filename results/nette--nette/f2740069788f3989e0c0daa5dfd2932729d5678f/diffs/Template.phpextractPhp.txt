||||||||	private static function extractPhp($source, & $blocks)
	{
		$res = '';
		$blocks = array();
		foreach (token_get_all($source) as $token) {
			if (is_array($token)) {
				if ($token[0] === T_INLINE_HTML) {
					$res .= $token[1];
					unset($php);
				} else {
					if (!isset($php)) {
						$res .= $php = "\x01@php:p" . count($blocks) . "@\x02";
						$php = & $blocks[$php];
					}
					$php .= $token[1];
				}
			} else {
				$php .= $token;
			}
		}
		return $res;
	}



	/**
	 * Removes unnecessary blocks of PHP code.
	 * @param  string
	 * @return string
	*/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CONST))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_UNSET
                                        (AST_VAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN_OP
                                                    (AST_VAR)
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_CALL
                                                                    (
                                                                        (AST_VAR))))
                                                            (SCALAR))))
                                                (AST_ASSIGN_REF
                                                    (AST_VAR)
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))