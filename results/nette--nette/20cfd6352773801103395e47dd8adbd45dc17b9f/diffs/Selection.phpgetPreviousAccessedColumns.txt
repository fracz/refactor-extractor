||||||||	public function getPreviousAccessedColumns()
	{
		if ($this->cache && $this->previousAccessedColumns === NULL) {
			$this->accessedColumns = $this->previousAccessedColumns = $this->cache->load(array(__CLASS__, $this->name, $this->sqlBuilder->getConditions()));
		}

		return array_keys(array_filter((array) $this->previousAccessedColumns));
	}



	/**
	 * @internal
	 * @return SqlBuilder
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_MAGIC_CONST)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_PROP
                                            (AST_VAR))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR)))
                                        (NULL))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CAST
                            (AST_PROP
                                (AST_VAR)))))))))