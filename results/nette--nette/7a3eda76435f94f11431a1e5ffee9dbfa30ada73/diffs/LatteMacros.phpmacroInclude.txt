	public function macroInclude($content, $modifiers, $isDefinition = FALSE)
	{
		$destination = LatteFilter::fetchToken($content); // destination [,] [params]
		$params = LatteFilter::formatArray($content) . ($content ? ' + ' : '');

		if ($destination === NULL) {
			throw new \InvalidStateException("Missing destination in {include} on line {$this->filter->line}.");

		} elseif ($destination[0] === '#') { // include #block
			$destination = ltrim($destination, '#');
			if (!String::match($destination, '#^' . LatteFilter::RE_IDENTIFIER . '$#')) {
				throw new \InvalidStateException("Included block name must be alphanumeric string, '$destination' given on line {$this->filter->line}.");
			}

			$parent = $destination === 'parent';
			if ($destination === 'parent' || $destination === 'this') {
				$item = end($this->blocks);
				while ($item && $item[0] !== self::BLOCK_NAMED) $item = prev($this->blocks);
				if (!$item) {
					throw new \InvalidStateException("Cannot include $destination block outside of any block on line {$this->filter->line}.");
				}
				$destination = $item[1];
			}
			$name = var_export($destination, TRUE);
			$params .= $isDefinition ? 'get_defined_vars()' : '$template->getParams()';
			$cmd = isset($this->namedBlocks[$destination]) && !$parent
				? "call_user_func(reset(\$_l->blocks[$name]), \$_l, $params)"
				: 'Nette\Templates\LatteMacros::callBlock' . ($parent ? 'Parent' : '') . "(\$_l, $name, $params)";
			return $modifiers
				? "ob_start(); $cmd; echo " . LatteFilter::formatModifiers('ob_get_clean()', $modifiers)
				: $cmd;

		} else { // include "file"
			$destination = LatteFilter::formatString($destination);
			$params .= '$template->getParams()';
			return $modifiers
				? 'echo ' . LatteFilter::formatModifiers('Nette\Templates\LatteMacros::includeTemplate' . "($destination, $params, \$_l->templates[" . var_export($this->uniq, TRUE) . '])->__toString(TRUE)', $modifiers)
				: 'Nette\Templates\LatteMacros::includeTemplate' . "($destination, $params, \$_l->templates[" . var_export($this->uniq, TRUE) . '])->render()';
		}
	}



	/**
	 * {extends ...}
	 */
||||||||	public function macroInclude($content, $modifiers, $isDefinition = FALSE)
	{
		$destination = LatteFilter::fetchToken($content); // destination [,] [params]
		$params = LatteFilter::formatArray($content) . ($content ? ' + ' : '');

		if ($destination === NULL) {
			throw new \InvalidStateException("Missing destination in {include} on line {$this->filter->line}.");

		} elseif ($destination[0] === '#') { // include #block
			$destination = ltrim($destination, '#');
			if (!String::match($destination, '#^' . LatteFilter::RE_IDENTIFIER . '$#')) {
				throw new \InvalidStateException("Included block name must be alphanumeric string, '$destination' given on line {$this->filter->line}.");
			}

			$parent = $destination === 'parent';
			if ($destination === 'parent' || $destination === 'this') {
				$item = end($this->blocks);
				while ($item && $item[0] !== self::BLOCK_NAMED) $item = prev($this->blocks);
				if (!$item) {
					throw new \InvalidStateException("Cannot include $destination block outside of any block on line {$this->filter->line}.");
				}
				$destination = $item[1];
			}
			$name = var_export($destination, TRUE);
			$params .= $isDefinition ? 'get_defined_vars()' : '$template->getParams()';
			$cmd = isset($this->namedBlocks[$destination]) && !$parent
				? "call_user_func(reset(\$_l->blocks[$name]), \$_l, $params)"
				: 'Nette\Templates\LatteMacros::callBlock' . ($parent ? 'Parent' : '') . "(\$_l, $name, $params)";
			return $modifiers
				? "ob_start(); $cmd; echo " . LatteFilter::formatModifiers('ob_get_clean()', $modifiers)
				: $cmd;

		} else { // include "file"
			$destination = LatteFilter::formatString($destination);
			$cmd = 'Nette\Templates\LatteMacros::includeTemplate(' . $destination . ', ' . $params . '$template->getParams(), $_l->templates[' . var_export($this->uniq, TRUE) . '])';
			return $modifiers
				? 'echo ' . LatteFilter::formatModifiers($cmd . '->__toString(TRUE)', $modifiers)
				: $cmd . '->render()';
		}
	}



	/**
	 * {extends ...}
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CLASS_CONST
                                                (SCALAR)))
                                        (SCALAR)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_WHILE
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_VAR)))
                                                        (SCALAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_UNARY_OP
                                (AST_VAR)))
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CONDITIONAL
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST))))
                                        (SCALAR))
                                    (AST_VAR))))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONST))))
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CLASS_CONST
                                                (SCALAR)))
                                        (SCALAR)))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_WHILE
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_VAR))
                                    (
                                        (AST_THROW
                                            (AST_NEW
                                                (
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_VAR)))
                                                        (SCALAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_UNARY_OP
                                (AST_VAR)))
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CONDITIONAL
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST))))
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR))))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))))))))