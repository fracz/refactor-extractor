	final static public function getMethodAnnotations($class, $method)
	{
		$cache = & self::$mcCache[strtolower($class . ':' . $method)];
		if ($cache !== NULL) return $cache;

		try {
			$cache = FALSE;
			// check class
			$rc = new ReflectionClass($class);
			if (!$rc->isInstantiable()) {
				return FALSE;
			}

			// check method
			$rm = $rc->getMethod($method);
			if (!$rm || !$rm->isPublic() || $rm->isAbstract() || $rm->isStatic()) {
				return FALSE;
			}

			// parse annotation
			if (preg_match_all('#@([a-z]+):\s*(\S+)#', $rm->getDocComment(), $match)) {
				$cache = array_combine($match[1], $match[2]);
			} else {
				$cache = array();
			}
			return $cache;

		} catch (ReflectionException $e) {
			return FALSE;
		}
	}



	/**
	 * Converts named parameters to list of arguments.
	 * Used by PresenterComponent::tryCall()
	 * @param  string  class name
	 * @param  string  method name
	 * @param  array   parameters - associative array
	 * @return array   arguments  - list
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY)))))
            (AST_RETURN
                (AST_VAR)))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL)))||||||||