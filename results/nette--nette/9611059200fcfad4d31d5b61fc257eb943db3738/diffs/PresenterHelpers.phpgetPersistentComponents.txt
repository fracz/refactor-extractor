||||||||	final static public function getPersistentComponents($class)
	{
		$meta = & self::$pcCache[strtolower($class)];
		if ($meta !== NULL) return $meta;

		try {
			$meta = array();
			$rc = new ReflectionClass($class);
			if (!$rc->isSubclassOf(/*Nette\Application\*/'Presenter')) return array();

			// generate
			preg_match_all('#@persistent\((.*?)\)#', $rc->getDocComment(), $matches, PREG_SET_ORDER);
			foreach ($matches as $m) {
				foreach (explode(',', $m[1]) as $id) {
					$meta[trim($id)] = $class;
				}
			}
			unset($meta['']);
			$meta = $meta + self::getPersistentComponents(get_parent_class($class));

		} catch (ReflectionException $e) {
		}
		return $meta;
	}



	/**
	 * Is a method callable? It means class is instantiable and method has
	 * public visibility, is non-static and non-abstract.
	 * @param  string  class name
	 * @param  string  method name
	 * @return bool
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (
                        (AST_RETURN
                            (AST_ARRAY)))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (AST_CONST)))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_FOREACH
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (AST_VAR))))))
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL))
    (AST_RETURN
        (AST_VAR)))