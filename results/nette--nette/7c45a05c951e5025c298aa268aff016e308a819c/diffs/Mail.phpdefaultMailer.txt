	private static function defaultMailer($message)
	{
		$body = $message->getEncodedBody();

		$headers = $headersS = array();
		foreach ($message->getHeaders() as $name => $value) {
			$headers[$name] = self::encodeHeader(is_array($value) ? implode(',', $value) : $value, $message->charset);
			$headersS[$name] = $name . ': ' . $headers[$name];
		}

		unset($headersS['Subject'], $headersS['To']);
		$headersS = implode(self::EOL, $headersS);

		if (PHP_OS !== 'Linux') {
			$body = str_replace(self::EOL, "\r\n", $body);
			$headersS = str_replace(self::EOL, "\r\n", $headersS);
		}

		return mail(
			isset($headers['To']) ? $headers['To'] : '',
			isset($headers['Subject']) ? $headers['Subject'] : '',
			$body,
			$headersS
		);
	}

}||||||||	private static function defaultMailer(Mail $mail)
	{
		$tmp = clone $mail;
		$tmp->setHeader('Subject', NULL);
		$tmp->setHeader('To', NULL);

		$parts = explode(self::EOL . self::EOL, $tmp->generateMessage(), 2);
		$linux = strncasecmp(PHP_OS, 'win', 3);
		return mail(
			$mail->getEncodedHeader('To'),
			$mail->getEncodedHeader('Subject'),
			$linux ? $parts[1] : str_replace(self::EOL, "\r\n", $parts[1]),
			$linux ? $parts[0] : str_replace(self::EOL, "\r\n", $parts[0])
		);
	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_ARRAY)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_CONDITIONAL
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST)
                (SCALAR)
                (SCALAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))))