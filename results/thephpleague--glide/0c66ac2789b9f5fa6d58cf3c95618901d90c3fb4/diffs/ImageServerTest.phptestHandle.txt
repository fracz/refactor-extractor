||||||||    public function testHandle()
    {
        $app = Mockery::mock('Symfony\Component\HttpKernel\HttpKernelInterface');
        $server = Mockery::mock('League\Glide\Server', function ($mock) {
            $mock->shouldReceive('getImageResponse')->andReturn(Mockery::mock('Symfony\Component\HttpFoundation\StreamedResponse'))->once();
        });

        $imageServer = new ImageServer($app, $server);
        $request = Request::create('image.jpg', ['w' => '100']);

        $this->assertInstanceOf('Symfony\Component\HttpFoundation\StreamedResponse', $imageServer->handle($request));
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))