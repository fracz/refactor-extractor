||||||||    public function testGetManipulatorsWithMaxImageSize()
    {
        $server = new ApiFactory([
            'max_image_size' => 2000*2000,
        ]);

        $sizeManipulator = null;

        foreach ($server->getManipulators() as $manipulator) {
            if ($manipulator instanceof SizeManipulator) {
                $sizeManipulator = $manipulator;
            }
        }

        $this->assertInstanceOf('League\Glide\Api\Manipulator\Size', $sizeManipulator);
        $this->assertEquals(2000*2000, $sizeManipulator->getMaxImageSize());
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)))))