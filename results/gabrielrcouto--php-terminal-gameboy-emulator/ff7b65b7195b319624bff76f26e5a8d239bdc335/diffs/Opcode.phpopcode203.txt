    private static function opcode203(Core $core)
    {
        $opcode = $core->memoryReader[$core->programCounter]($core, $core->programCounter);
        //Increment the program counter to the next instruction:
        $core->programCounter = ($core->programCounter + 1) & 0xFFFF;
        //Get how many CPU cycles the current 0xCBXX op code counts for:
        $core->CPUTicks = $core->SecondaryTICKTable[$opcode];
        //Execute secondary OP codes for the 0xCB OP code call.
        Cbopcode::run($core, $opcode);
    }

    /**
     * Opcode #0xCC.
     *
     * CALL FZ, nn
     *
     * @param Core $core
     */
||||||||    public static function opcode203(Core $core)
    {
        $opcode = $core->memoryRead($core->programCounter);
        //Increment the program counter to the next instruction:
        $core->programCounter = ($core->programCounter + 1) & 0xFFFF;
        //Get how many CPU cycles the current 0xCBXX op code counts for:
        $core->CPUTicks = $core->SecondaryTICKTable[$opcode];
        //Execute secondary OP codes for the 0xCB OP code call.
        Cbopcode::run($core, $opcode);
    }

    /**
     * Opcode #0xCC.
     *
     * CALL FZ, nn
     *
     * @param Core $core
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR))))