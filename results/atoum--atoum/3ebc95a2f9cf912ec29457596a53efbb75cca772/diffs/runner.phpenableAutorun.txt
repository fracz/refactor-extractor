	public static function enableAutorun($name)
	{
		static $autorunIsRegistered = false;

		if (static::$autorunner instanceof static)
		{
			throw new exceptions\runtime('Unable to autorun \'' . $name . '\' because \'' . static::$autorunner->getName() . '\' is already set as autorunner');
		}

		if ($autorunIsRegistered === false)
		{
			$autorunner = & static::$autorunner;
			$calledClass = get_called_class();

			register_shutdown_function(function() use (& $autorunner, $calledClass) {
					if ($autorunner instanceof $calledClass)
					{
						$score = $autorunner->run()->getRunner()->getScore();

						exit($score->getFailNumber() <= 0 && $score->getErrorNumber() <= 0 && $score->getExceptionNumber() <= 0 ? 0 : 1);
					}
				}
			);

			$autorunIsRegistered = true;
		}

		static::$autorunner = new static($name);

		return static::$autorunner;
	}

||||||||	public static function enableAutorun($name)
	{
		static $autorunIsRegistered = false;

		if (static::$autorunner instanceof static)
		{
			throw new exceptions\runtime('Unable to autorun \'' . $name . '\' because \'' . static::$autorunner->getName() . '\' is already set as autorunner');
		}

		if ($autorunIsRegistered === false)
		{
			$autorunner = & static::$autorunner;
			$calledClass = get_called_class();

			register_shutdown_function(function() use (& $autorunner, $calledClass) {
					if ($autorunner instanceof $calledClass)
					{
						set_error_handler(function($error, $message, $file, $line) use ($autorunner) {
								if (error_reporting() !== 0)
								{
									$autorunner->writeError($message . ' in ' . $file . ' at line ' . $line, $error);

									exit($error);
								}
							}
						);

						try
						{
							$score = $autorunner->run()->getRunner()->getScore();

							exit($score->getFailNumber() <= 0 && $score->getErrorNumber() <= 0 && $score->getExceptionNumber() <= 0 ? 0 : 1);
						}
						catch (\exception $exception)
						{
							$autorunner->writeError($exception->getMessage());

							exit($exception->getCode());
						}
					}
				}
			);

			$autorunIsRegistered = true;
		}

		static::$autorunner = new static($name);

		return static::$autorunner;
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_STATIC_PROP))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_STATIC_PROP)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL))
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_INSTANCEOF
                                            (AST_VAR)
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)))))
                                            (AST_EXIT
                                                (AST_CONDITIONAL
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (AST_BINARY_OP
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))
                                                                (SCALAR)))
                                                        (AST_BINARY_OP
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))
                                                            (SCALAR)))
                                                    (SCALAR)
                                                    (SCALAR))))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_STATIC_PROP))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_STATIC_PROP)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_STATIC_PROP))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL))
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_INSTANCEOF
                                            (AST_VAR)
                                            (AST_VAR))
                                        (
                                            (AST_CALL
                                                (
                                                    (AST_CLOSURE
                                                        (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                                                        (AST_CLOSURE_USES
                                                            (AST_CLOSURE_VAR))
                                                        (
                                                            (AST_IF
                                                                (AST_IF_ELEM
                                                                    (AST_BINARY_OP
                                                                        (AST_CALL)
                                                                        (SCALAR))
                                                                    (
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR)
                                                                            (
                                                                                (AST_BINARY_OP
                                                                                    (AST_BINARY_OP
                                                                                        (AST_BINARY_OP
                                                                                            (AST_BINARY_OP
                                                                                                (AST_VAR)
                                                                                                (SCALAR))
                                                                                            (AST_VAR))
                                                                                        (SCALAR))
                                                                                    (AST_VAR))
                                                                                (AST_VAR)))
                                                                        (AST_EXIT
                                                                            (AST_VAR)))))))))
                                            (AST_TRY
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)))))
                                                    (AST_EXIT
                                                        (AST_CONDITIONAL
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR))
                                                                        (SCALAR))
                                                                    (AST_BINARY_OP
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR))
                                                                        (SCALAR)))
                                                                (AST_BINARY_OP
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR))
                                                                    (SCALAR)))
                                                            (SCALAR)
                                                            (SCALAR))))
                                                (AST_CATCH_LIST
                                                    (AST_CATCH
                                                        (AST_NAME_LIST)
                                                        (AST_VAR)
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR))))
                                                            (AST_EXIT
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))))))
                                                (NULL)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_PROP)))