||||||||	public function testIsSetByReference()
	{
		$asserter = new asserters\variable($score = new atoum\score(), $locale = new atoum\locale());

		$this->assert
			->boolean($asserter->isSetByReference())->isFalse()
		;

		$asserter->setWith(uniqid());

		$this->assert
			->boolean($asserter->isSetByReference())->isFalse()
		;

		$asserter->setWith(uniqid());

		$this->assert
			->boolean($asserter->isSetByReference())->isFalse()
		;

		$variable = uniqid();

		$asserter->setByReferenceWith($variable);

		$this->assert
			->boolean($asserter->isSetByReference())->isTrue()
		;
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))