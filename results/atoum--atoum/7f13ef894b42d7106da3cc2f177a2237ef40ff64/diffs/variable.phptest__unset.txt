	public function test__unset()
	{
		$asserter = new asserters\variable(new atoum\score(), new atoum\locale());

		$this->assert
			->exception(function() use ($asserter, & $property) {
					unset($asserter->{$property = uniqid()});
				}
			)
				->isInstanceOf('\logicException')
				->hasMessage('Property \'' . $property . '\' is undefined in class \'' . get_class($asserter) . '\'')
		;

		$asserter->variable = uniqid();

		$this->assert
			->variable($asserter->variable)->isNotNull()
			->boolean(isset($asserter->variable))->isTrue()
		;

		unset($asserter->variable);

		$this->assert
			->variable($asserter->variable)->isNull()
			->boolean(isset($asserter->variable))->isFalse()
		;
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW)
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_UNSET
                                (AST_PROP
                                    (AST_VAR)))))))
            (
                (SCALAR)))
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR)))))))||||||||