||||||||	public function testIsReferenceTo()
	{
		$asserter = new asserters\variable($score = new atoum\score(), $locale = new atoum\locale());

		$variable = uniqid();

		$this->assert
			->boolean($asserter->wasSet())->isFalse()
			->exception(function() use ($asserter, $variable) {
						$asserter->isReferenceTo($variable);
					}
				)
				->isInstanceOf('\logicException')
				->hasMessage('Variable is undefined')
			->integer($score->getPassNumber())->isZero()
			->integer($score->getFailNumber())->isZero()
		;

		$asserter->setWith($variable);

		$this->assert
			->boolean($asserter->wasSet())->isTrue()
			->boolean($asserter->isSetByReference())->isFalse()
			->exception(function() use ($asserter, $variable) {
						$asserter->isReferenceTo($variable);
					}
				)
				->isInstanceOf('\logicException')
				->hasMessage('Variable is not set by reference')
			->integer($score->getPassNumber())->isZero()
			->integer($score->getFailNumber())->isZero()
		;

		$asserter->setByReferenceWith($variable);

		$reference = & $variable;

		$this->assert
			->boolean($asserter->wasSet())->isTrue()
			->boolean($asserter->isSetByReference())->isTrue()
			->object($asserter->isReferenceTo($reference))->isIdenticalTo($asserter)
			->integer($score->getPassNumber())->isEqualTo(1)
			->integer($score->getFailNumber())->isZero()
		;

		$notReference = uniqid();

		$this->assert
			->exception(function() use ($asserter, $notReference) {
						$asserter->isReferenceTo($notReference);
					}
				)
				->isInstanceOf('\mageekguy\atoum\asserter\exception')
				->hasMessage(sprintf($locale->_('%s is not a reference to %s'), $asserter, $asserter->toString($notReference)))
			->integer($score->getPassNumber())->isEqualTo(1)
			->integer($score->getFailNumber())->isEqualTo(1)
		;

		$variable = new \exception();
		$reference = $variable;

		$asserter->setByReferenceWith($variable);

		$this->assert
			->boolean($asserter->wasSet())->isTrue()
			->boolean($asserter->isSetByReference())->isTrue()
			->object($asserter->isReferenceTo($reference))->isIdenticalTo($asserter)
			->integer($score->getPassNumber())->isEqualTo(2)
			->integer($score->getFailNumber())->isEqualTo(1)
		;

		$notReference = new \exception();

		$this->assert
			->exception(function() use ($asserter, $notReference) {
						$asserter->isReferenceTo($notReference);
					}
				)
				->isInstanceOf('\mageekguy\atoum\asserter\exception')
				->hasMessage(sprintf($locale->_('%s is not a reference to %s'), $asserter, $asserter->toString($notReference)))
			->integer($score->getPassNumber())->isEqualTo(2)
			->integer($score->getFailNumber())->isEqualTo(2)
		;
	}
}

?>||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (
                                    (AST_CLOSURE
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR)
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_VAR))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (
                                    (AST_CLOSURE
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR)
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLOSURE
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR)
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (SCALAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CLOSURE
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR)
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))
                            (
                                (SCALAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (SCALAR))))