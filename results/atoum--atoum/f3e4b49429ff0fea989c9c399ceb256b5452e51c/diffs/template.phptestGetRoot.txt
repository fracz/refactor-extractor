||||||||	public function testGetRoot()
	{
		$template = new atoum\template();

		$this->assert
			->object($template->getRoot())->isIdenticalTo($template)
		;

		$template->addChild($childTemplate = new atoum\template());

		$this->assert
			->object($template->getRoot())->isIdenticalTo($template)
			->object($childTemplate->getRoot())->isIdenticalTo($template)
		;

		$childTemplate->addChild($littleChildTemplate = new atoum\template());

		$this->assert
			->object($template->getRoot())->isIdenticalTo($template)
			->object($childTemplate->getRoot())->isIdenticalTo($template)
			->object($littleChildTemplate->getRoot())->isIdenticalTo($template)
		;
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (
            (AST_VAR))))