    public static function ordinalize($number, $locale = 'en')
    {
        return $number.self::ordinal($number, $locale);
    }

    /**
     * @param int|float $number
     * @param string    $locale
     *
     * @return string
     */
||||||||    public static function ordinalize($number, $locale = 'en')
    {
        $ordinal = new Ordinal($number, $locale);
        if ($ordinal->isPrefix()) {
            return (string) $ordinal.$number;
        }
        else return (string) $number.$ordinal;
    }

    /**
     * @param int|float $number
     * @param string    $locale
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CAST
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CAST
                            (AST_VAR))
                        (AST_VAR)))))))