||||||||    public function getDefaultOptions($type, FieldDescriptionInterface $fieldDescription, array $options = array())
    {
        $options['sonata_field_description'] = $fieldDescription;

        if (!is_string($type)) {
            return $options;
        }

        // only add default options to Admin Bundle widget ...
        $types = array('sonata_type_model', 'sonata_type_admin', 'sonata_type_collection');

        if (!in_array($type, $types)) {
            return $options;
        }

        $fieldOptions = array();

        switch ($fieldDescription->getMappingType()) {
            case ClassMetadataInfo::ONE_TO_MANY:

                $fieldOptions = $this->getOneToManyFieldOptions($type, $fieldDescription);
                break;

            case ClassMetadataInfo::MANY_TO_MANY:
                $fieldOptions = $this->getManyToManyFieldOptions($type, $fieldDescription);
                break;

            case ClassMetadataInfo::MANY_TO_ONE:
            case ClassMetadataInfo::ONE_TO_ONE:
                $fieldOptions = $this->getOneToOneFieldOptions($type, $fieldDescription);
                break;
        }

        return array_merge($fieldOptions, $options);
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)))))