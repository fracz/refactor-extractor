    protected function addFormFieldInstance($form, $object, FieldDescription $fieldDescription)
    {

        switch ($fieldDescription->getType()) {

            case ClassMetadataInfo::ONE_TO_MANY:

                $instance = $this->getOneToManyField($object, $fieldDescription);
                break;

            case ClassMetadataInfo::MANY_TO_MANY:

                $instance = $this->getManyToManyField($object, $fieldDescription);
                break;

            case ClassMetadataInfo::MANY_TO_ONE:
                $instance = $this->getManyToOneField($object, $fieldDescription);
                break;

            case ClassMetadataInfo::ONE_TO_ONE:
                $instance = $this->getOneToOneField($object, $fieldDescription);
                break;

            default:
                $class   = $this->getFormFieldClass($fieldDescription);
                $options = $fieldDescription->getOption('form_field_options', array());

                // there is no way to use a custom widget with the FieldFactory
                if($class) {
                    $instance = new $class($fieldDescription->getFieldName(), $options);
                } else {
                    $instance = $this->container->get('form.field_factory')->getInstance($this->getClass(), $fieldDescription->getFieldName(), $options);
                }
        }

        $form->add($instance);
    }

    /**
     * return a form depend on the given $object and FieldDescription $fields array
     *
     * @throws RuntimeException
     * @param  $object
     * @return Symfony\Component\Form\Form
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_ARRAY))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_NEW
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||