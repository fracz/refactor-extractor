||||||||    protected function getManyToOneField($object, FieldDescription $fieldDescription)
    {

        // tweak the widget depend on the edit mode
        if ($fieldDescription->getOption('edit') == 'inline') {

            return $this->getRelatedAssociatedField($object, $fieldDescription);
        }

        $options = array(
            'value_transformer' => new EntityToIDTransformer(array(
                'em'        =>  $fieldDescription->getAdmin()->getEntityManager(),
                'className' =>  $fieldDescription->getTargetEntity()
            ))
        );
        $options = array_merge($options, $fieldDescription->getOption('form_field_options', array()));


        if ($fieldDescription->getOption('edit') == 'list') {

            return new \Symfony\Component\Form\TextField($fieldDescription->getFieldName(), $options);
        }

        $class = $fieldDescription->getOption('form_field_widget', false);

        if (!$class) {
            $instance = $this->getFieldFactory()->getInstance(
                $fieldDescription->getAdmin()->getClass(),
                $fieldDescription->getFieldName(),
                $fieldDescription->getOption('form_field_options', array())
            );
        } else {
            $instance = new $class($fieldDescription->getFieldName(), array_merge(array('expanded' => true), $options));
        }

        return $instance;
    }

    /**
     * The method add a new field to the provided Form, there are 4 ways to add new field :
     *
     *   - if $name is a string with no related FieldDescription, then the form will use the FieldFactory
     *     to instanciate a new Field
     *   - if $name is a FormDescription, the method uses information defined in the FormDescription to
     *     instanciate a new Field
     *   - if $name is a FieldInterface, then a FieldDescription is created, the FieldInterface is added to
     *     the form
     *   - if $name is a string with a related FieldDescription, then the medhod uses information defined in the
     *     FormDescription to instanciate a new Field
     *
     *
     * @param Form $form
     * @param FieldDescription $name
     * @param array $options
     * @return void
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR)))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_ARRAY))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_CONST)
                                            (SCALAR)))
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))