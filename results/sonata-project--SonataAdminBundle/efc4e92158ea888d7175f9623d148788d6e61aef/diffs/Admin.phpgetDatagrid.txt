||||||||    public function getDatagrid()
    {

        $datagrid = $this->getBaseDatagrid();
        $datagrid->setMaxPerPage($this->maxPerPage);
        $datagrid->setValues($this->container->get('request')->query->all());

        $mapper = new DatagridMapper($this->getDatagridBuilder(), $datagrid, $this);

        foreach ($this->getFilterFieldDescriptions() as $fieldDescription) {

            if (!$fieldDescription->getType()) {

                continue;
            }

            $mapper->add($fieldDescription);
        }

        $this->configureDatagridFilters($mapper);

        return $datagrid;
    }

    /**
     *
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))