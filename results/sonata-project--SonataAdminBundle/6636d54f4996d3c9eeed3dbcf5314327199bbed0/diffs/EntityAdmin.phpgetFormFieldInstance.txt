    protected function getFormFieldInstance($object, FieldDescription $fieldDescription)
    {

        switch ($fieldDescription->getType()) {

            case ClassMetadataInfo::ONE_TO_MANY:

                return $this->getOneToManyField($object, $fieldDescription);

            case ClassMetadataInfo::MANY_TO_MANY:

                return $this->getManyToManyField($object, $fieldDescription);

            case ClassMetadataInfo::MANY_TO_ONE:
                return $this->getManyToOneField($object, $fieldDescription);

            case ClassMetadataInfo::ONE_TO_ONE:

                return $this->getOneToOneField($object, $fieldDescription);

            default:
                $class   = $this->getFormFieldClass($fieldDescription);
                $options = $fieldDescription->getOption('form_field_options', array());

                return new $class($fieldDescription->getFieldName(), $options);
        }
    }

    /**
     * return a form depend on the given $object and FieldDescription $fields array
     *
     * @throws RuntimeException
     * @param  $object
     * @param  $fields
     * @return Symfony\Component\Form\Form
     */
||||||||    protected function getFormFieldInstance($object, FieldDescription $fieldDescription)
    {
        /*

        UNUSED RIGHT NOW

        switch ($fieldDescription->getType()) {

            case ClassMetadataInfo::ONE_TO_MANY:

                return $this->getOneToManyField($object, $fieldDescription);

            case ClassMetadataInfo::MANY_TO_MANY:

                return $this->getManyToManyField($object, $fieldDescription);

            case ClassMetadataInfo::MANY_TO_ONE:
                return $this->getManyToOneField($object, $fieldDescription);

            case ClassMetadataInfo::ONE_TO_ONE:

                return $this->getOneToOneField($object, $fieldDescription);

            default:
                $class   = $this->getFormFieldClass($fieldDescription);
                $options = $fieldDescription->getOption('form_field_options', array());

                return new $class($fieldDescription->getFieldName(), $options);
        }

        */
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_ARRAY))))
                    (AST_RETURN
                        (AST_NEW
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)