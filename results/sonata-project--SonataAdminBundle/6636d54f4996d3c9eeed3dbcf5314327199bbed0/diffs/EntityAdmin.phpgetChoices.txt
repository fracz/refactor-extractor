    protected function getChoices(FieldDescription $description, $prependChoices = array())
    {

        if (!isset($this->choicesCache[$description->getTargetEntity()])) {
            $targets = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('t')
                ->from($description->getTargetEntity(), 't')
                ->getQuery()
                ->execute();

            $choices = array();
            foreach ($targets as $target) {
                // todo : puts this into a configuration option and use reflection
                foreach (array('getTitle', 'getName', '__toString') as $getter) {
                    if (method_exists($target, $getter)) {
                        $choices[$target->getId()] = $target->$getter();
                        break;
                    }
                }
            }

            $this->choicesCache[$description->getTargetEntity()] = $choices;
        }

        return $prependChoices + $this->choicesCache[$description->getTargetEntity()];
    }

    /**
     * return the field associated to a FieldDescription
     *   ie : build the embedded form from the related Admin instance
     *
     * @throws RuntimeException
     * @param  $object
     * @param FieldDescription $fieldDescription
     * @param null $fieldName
     * @return FieldGroup
     */
||||||||    protected function getChoices(FieldDescription $description, $prependChoices = array())
    {
        /*

        UNUSED RIGHT NOW

        if (!isset($this->choicesCache[$description->getTargetEntity()])) {
            $targets = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('t')
                ->from($description->getTargetEntity(), 't')
                ->getQuery()
                ->execute();

            $choices = array();
            foreach ($targets as $target) {
                // todo : puts this into a configuration option and use reflection
                foreach (array('getTitle', 'getName', '__toString') as $getter) {
                    if (method_exists($target, $getter)) {
                        $choices[$target->getId()] = $target->$getter();
                        break;
                    }
                }
            }

            $this->choicesCache[$description->getTargetEntity()] = $choices;
        }

        return $prependChoices + $this->choicesCache[$description->getTargetEntity()];

        */
    }

    /**
     * return the field associated to a FieldDescription
     *   ie : build the embedded form from the related Admin instance
     *
     * @throws RuntimeException
     * @param  $object
     * @param FieldDescription $fieldDescription
     * @param null $fieldName
     * @return FieldGroup
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_BREAK
                                                (NULL)))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_VAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)