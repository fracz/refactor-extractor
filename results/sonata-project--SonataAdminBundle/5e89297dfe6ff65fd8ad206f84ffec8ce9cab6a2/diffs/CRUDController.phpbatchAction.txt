    public function batchAction()
    {
        if ($this->get('request')->getMethod() != 'POST') {
           throw new \RuntimeException('invalid request type, POST expected');
        }

        if ($data = json_decode($this->get('request')->get('data'), true)) {
            $action = $data['action'];
            $idx    = $data['idx'];
            $all_elements = $data['all_elements'];
        } else {
            $action       = $this->get('request')->get('action');
            $idx          = $this->get('request')->get('idx');
            $all_elements = $this->get('request')->get('all_elements', false);
        }

        $batchActions = $this->admin->getBatchActions();
        if (!array_key_exists($action, $batchActions)) {
            throw new \RuntimeException(sprintf('The `%s` batch action is not defined', $action));
        }

        if (count($idx) == 0 && !$all_elements) { // no item selected
            $this->get('session')->setFlash('sonata_flash_info', 'flash_batch_empty');

            return new RedirectResponse($this->admin->generateUrl('list', $this->admin->getFilterParameters()));
        }

        $askConfirmation = isset($batchActions[$action]['ask_confirmation']) ? $batchActions[$action]['ask_confirmation'] : true;

        if ($askConfirmation && $this->get('request')->get('confirmation') != 'ok') {
            $data = json_encode(array(
                'action' => $action,
                'idx'    => $idx,
                'all_elements' => $all_elements,
            ));

            $datagrid = $this->admin->getDatagrid();
            $formView = $datagrid->getForm()->createView();

            return $this->render('SonataAdminBundle:CRUD:batch_confirmation.html.twig', array(
                'action'   => 'list',
                'datagrid' => $datagrid,
                'form'     => $formView,
                'data'     => $data,
            ));
        }

        // execute the action, batchActionXxxxx
        $action = \Sonata\AdminBundle\Admin\BaseFieldDescription::camelize($action);

        $final_action = sprintf('batchAction%s', ucfirst($action));
        if (!method_exists($this, $final_action)) {
            throw new \RuntimeException(sprintf('A `%s::%s` method must be created', get_class($this), $final_action));
        }

        $datagrid = $this->admin->getDatagrid();
        $datagrid->buildPager();
        $query = $datagrid->getQuery();

        $query->setFirstResult(null);
        $query->setMaxResults(null);

        if (count($idx) > 0) {
            $this->admin->getModelManager()->addIdentifiersToQuery($this->admin->getClass(), $query, $idx);
        }

        return call_user_func(array($this, $final_action), $query);
    }

    /**
     * return the Response object associated to the create action
     *
     * @return \Symfony\Component\HttpFoundation\Response
     */
||||||||    public function batchAction()
    {
        if ($this->get('request')->getMethod() != 'POST') {
           throw new \RuntimeException('invalid request type, POST expected');
        }

        if ($data = json_decode($this->get('request')->get('data'), true)) {
            $action = $data['action'];
            $idx    = $data['idx'];
            $all_elements = $data['all_elements'];
        } else {
            $action       = $this->get('request')->get('action');
            $idx          = $this->get('request')->get('idx');
            $all_elements = $this->get('request')->get('all_elements', false);
        }

        $batchActions = $this->admin->getBatchActions();
        if (!array_key_exists($action, $batchActions)) {
            throw new \RuntimeException(sprintf('The `%s` batch action is not defined', $action));
        }

        if (count($idx) == 0 && !$all_elements) { // no item selected
            $this->setFlash('sonata_flash_info', 'flash_batch_empty');

            return new RedirectResponse($this->admin->generateUrl('list', $this->admin->getFilterParameters()));
        }

        $askConfirmation = isset($batchActions[$action]['ask_confirmation']) ? $batchActions[$action]['ask_confirmation'] : true;

        if ($askConfirmation && $this->get('request')->get('confirmation') != 'ok') {
            $data = json_encode(array(
                'action' => $action,
                'idx'    => $idx,
                'all_elements' => $all_elements,
            ));

            $datagrid = $this->admin->getDatagrid();
            $formView = $datagrid->getForm()->createView();

            return $this->render('SonataAdminBundle:CRUD:batch_confirmation.html.twig', array(
                'action'   => 'list',
                'datagrid' => $datagrid,
                'form'     => $formView,
                'data'     => $data,
            ));
        }

        // execute the action, batchActionXxxxx
        $action = \Sonata\AdminBundle\Admin\BaseFieldDescription::camelize($action);

        $final_action = sprintf('batchAction%s', ucfirst($action));
        if (!method_exists($this, $final_action)) {
            throw new \RuntimeException(sprintf('A `%s::%s` method must be created', get_class($this), $final_action));
        }

        $datagrid = $this->admin->getDatagrid();
        $datagrid->buildPager();
        $query = $datagrid->getQuery();

        $query->setFirstResult(null);
        $query->setMaxResults(null);

        if (count($idx) > 0) {
            $this->admin->getModelManager()->addIdentifiersToQuery($this->admin->getClass(), $query, $idx);
        }

        return call_user_func(array($this, $final_action), $query);
    }

    /**
     * return the Response object associated to the create action
     *
     * @return \Symfony\Component\HttpFoundation\Response
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (AST_CONST))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (AST_CONST))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR)))))