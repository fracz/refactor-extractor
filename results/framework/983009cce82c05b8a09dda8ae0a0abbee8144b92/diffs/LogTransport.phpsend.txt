	public function send(Swift_Mime_Message $message, &$failedRecipients = null)
	{
		$this->logger->debug((string) $message);
	}

	/**
	 * {@inheritdoc}
	 */
||||||||	public function send(Swift_Mime_Message $message, &$failedRecipients = null)
	{
		$this->logger->debug($this->getMimeEntityString($message));
	}

	/**
	 * Get a loggable string out of a Swiftmailer entity.
	 *
	 * @param  \Swift_Mime_MimeEntity $entity
	 * @return string
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CAST
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))