    public function notify($instance)
    {
        $manager = app(ChannelManager::class);

        $notifications = Channels\Notification::notificationsFromInstance(
            $this, $instance
        );

        if ($instance instanceof ShouldQueue) {
            return $this->queueNotifications($instance, $notifications);
        }

        foreach ($notifications as $notification) {
            $manager->send($notification->application(
                config('app.name'), config('app.logo')
            ));
        }
    }

    /**
     * Queue the given notification instances.
     *
     * @param  mixed  $instance
     * @param  array[\Illuminate\Notifcations\Channels\Notification]
     * @return void
     */
||||||||    public function notify($instance)
    {
        $manager = app(ChannelManager::class);

        $notifications = Channels\Notification::notificationsFromInstance(
            $this, $instance
        );

        if ($instance instanceof ShouldQueue) {
            return $this->queueNotifications($instance, $notifications);
        }

        foreach ($notifications as $notification) {
            $manager->send($notification);
        }
    }

    /**
     * Queue the given notification instances.
     *
     * @param  mixed  $instance
     * @param  array[\Illuminate\Notifcations\Channels\Notification]
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))