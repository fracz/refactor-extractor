||||||||	public function testHasNestedWithConstraints()
	{
		$model = new EloquentBuilderTestModelParentStub;

		$builder = $model->whereHas('foo', function ($q) {
			$q->whereHas('bar', function ($q) {
				$q->where('baz', 'bam');
			});
		})->toSql();

		$result = $model->whereHas('foo.bar', function ($q) {
			$q->where('baz', 'bam');
		})->toSql();

		$this->assertEquals($builder, $result);
	}


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_CLOSURE
                                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                        (NULL)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)
                                                    (SCALAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))