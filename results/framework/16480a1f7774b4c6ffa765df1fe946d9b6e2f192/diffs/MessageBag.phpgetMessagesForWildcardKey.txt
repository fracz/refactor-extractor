||||||||    protected function getMessagesForWildcardKey($key, $format)
    {
        return collect($this->messages)
                ->filter(function ($messages, $messageKey) use ($key) {
                    return Str::is($key, $messageKey);
                })
                ->map(function ($messages, $messageKey) use ($format) {
                    return $this->transform(
                        $messages, $this->checkFormat($format), $messageKey
                    );
                })->all();
    }

    /**
     * Get all of the messages for every key in the bag.
     *
     * @param  string  $format
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR))
                            (
                                (AST_RETURN
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))))))
                (
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))
                                        (AST_VAR)))))))))))