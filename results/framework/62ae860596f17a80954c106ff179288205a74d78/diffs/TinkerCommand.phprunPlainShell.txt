	protected function runPlainShell()
	{
		$input = $this->prompt();

		while ($input != 'quit')
		{
			// We will wrap the execution of the command in a try / catch block so we
			// can easily display the errors in a convenient way instead of having
			// them bubble back out to the CLI and stop the entire command loop.
			try
			{
				if (starts_with($input, 'dump '))
				{
					$input = 'var_dump('.substr($input, 5).');';
				}

				eval($input);
			}

			// If an exception occurs, we will just display the message and keep this
			// loop going so we can keep executing commands. However, when a fatal
			// error occurs, we have no choice but to bail out of this routines.
			catch (\Exception $e)
			{
				$this->error($e->getMessage());
			}

			$input = $this->prompt();
		}
	}

	/**
	 * Prompt the developer for a command.
	 *
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))
        (
            (AST_TRY
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (SCALAR))))))
                    (AST_INCLUDE_OR_EVAL
                        (AST_VAR)))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||