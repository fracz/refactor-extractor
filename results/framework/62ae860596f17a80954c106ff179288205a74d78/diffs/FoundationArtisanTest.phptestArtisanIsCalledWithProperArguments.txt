	public function testArtisanIsCalledWithProperArguments()
	{
		$artisan = $this->getMock('Illuminate\Foundation\Artisan', array('getArtisan'), array($app = new Illuminate\Foundation\Application));
		$artisan->expects($this->once())->method('getArtisan')->will($this->returnValue($console = m::mock('Illuminate\Console\Application[find]')));
		$console->shouldReceive('find')->once()->with('foo')->andReturn($command = m::mock('StdClass'));
		$command->shouldReceive('run')->once()->with(m::type('Symfony\Component\Console\Input\ArrayInput'), m::type('Symfony\Component\Console\Output\BufferedOutput'))->andReturnUsing(function($input, $output)
		{
			return $input;
		});

		$input = $artisan->call('foo', array('--bar' => 'baz'));
		$this->assertEquals('baz', $input->getParameterOption('--bar'));
	}

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW))
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (SCALAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_STATIC_CALL
                    (
                        (SCALAR)))))
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||