||||||||    public function test_job_can_be_fired()
    {
        $worker = $this->getWorker('default', ['queue' => [$job = new WorkerFakeJob]]);
        $worker->runNextJob('default', 'queue');
        $this->assertTrue($job->fired);
        $this->events->shouldHaveReceived('fire')->with(Mockery::type(JobProcessing::class))->once();
        $this->events->shouldHaveReceived('fire')->with(Mockery::type(JobProcessed::class))->once();
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_NEW))
                                (NULL)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))))))