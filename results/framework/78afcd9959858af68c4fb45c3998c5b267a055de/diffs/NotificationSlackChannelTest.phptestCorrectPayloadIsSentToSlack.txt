    public function testCorrectPayloadIsSentToSlack()
    {
        $notification = new Notification([
            $notifiable = new NotificationSlackChannelTestNotifiable,
        ]);

        $notification->subject = 'Subject';
        $notification->level = 'success';
        $notification->introLines = ['line 1'];
        $notification->actionText = 'Text';
        $notification->actionUrl = 'url';
        $notification->outroLines = ['line 2'];

        $channel = new Illuminate\Notifications\Channels\SlackWebhookChannel(
            $http = Mockery::mock('GuzzleHttp\Client')
        );

        $http->shouldReceive('post')->with('url', [
            'json' => [
                'attachments' => [
                    [
                        'color' => 'good',
                        'title' => 'Subject',
                        'title_link' => 'url',
                        'text' => 'line 1

<url|Text>

line 2',
                    ],
                ],
            ],
        ]);

        $channel->send($notification);
    }
}

class NotificationSlackChannelTestNotifiable
{
    use Illuminate\Notifications\Notifiable;

    public $phone_number = '5555555555';

    public function routeNotificationForSlack()
    {
        return 'url';
    }
}||||||||    public function testCorrectPayloadIsSentToSlack()
    {
        $notification = new Notification;
        $notifiables = collect([
            $notifiable = new NotificationSlackChannelTestNotifiable,
        ]);

        $notification->subject = 'Subject';
        $notification->level = 'success';
        $notification->introLines = ['line 1'];
        $notification->actionText = 'Text';
        $notification->actionUrl = 'url';
        $notification->outroLines = ['line 2'];

        $channel = new Illuminate\Notifications\Channels\SlackWebhookChannel(
            $http = Mockery::mock('GuzzleHttp\Client')
        );

        $http->shouldReceive('post')->with('url', [
            'json' => [
                'attachments' => [
                    [
                        'color' => 'good',
                        'title' => 'Subject',
                        'title_link' => 'url',
                        'text' => 'line 1

<url|Text>

line 2',
                    ],
                ],
            ],
        ]);

        $channel->send($notifiables, $notification);
    }
}

class NotificationSlackChannelTestNotifiable
{
    use Illuminate\Notifications\Notifiable;

    public $phone_number = '5555555555';

    public function routeNotificationForSlack()
    {
        return 'url';
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW))
                        (NULL))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW))
                        (NULL))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (SCALAR)))
                                    (NULL)))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))