	public function listen($connection, $queue = null, $delay = 0, $memory = 128)
	{
		$connection = $this->manager->connection($connection);

		while (true)
		{
			$job = $connection->pop($queue);

			// If we're able to pull a job off of the stack, we will process it and
			// then make sure we are not exceeding our memory limits for the run
			// which is to protect against run-away memory leakages from here.
			if ( ! is_null($job))
			{
				$this->process($job, $delay);
			}
			else
			{
				$this->sleep(1);
			}

			// Once we have run the job we'll go check if the memory limit has been
			// exceeded for the script. If it has, we will kill this script so a
			// process managers will restart this with a clean slate of memory.
			if ($this->memoryExceeded($memory))
			{
				$this->stop(); return;
			}
		}
	}

	/**
	 * Process a given job from the queue.
	 *
	 * @param  Illuminate\Queue\Jobs\Job  $job
	 * @param  int  $delay
	 * @return void
	 */
||||||||	public function listen($connection, $queue, $delay, $memory)
	{
		$process = $this->makeProcess($connection, $queue, $delay, $memory);

		while(true)
		{
			$this->runProcess($process, $memory);
		}
	}

	/**
	 * Run the given process.
	 *
	 * @param  Symfony\Component\Process\Process  $process
	 * @param  int  $memory
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_RETURN
                            (NULL))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_WHILE
        (AST_CONST)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))