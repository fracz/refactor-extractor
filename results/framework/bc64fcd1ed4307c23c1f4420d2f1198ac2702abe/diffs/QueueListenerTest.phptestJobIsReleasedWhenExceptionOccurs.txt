	public function testJobIsReleasedWhenExceptionOccurs()
	{
		$l = $this->getListener();
		$job = m::mock('Illuminate\Queue\Jobs\Job');
		$job->shouldReceive('fire')->once()->andReturnUsing(function()
		{
			throw new RuntimeException;
		});
		$job->shouldReceive('release')->once()->with(1);

		$l->process($job, 1);
	}


||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (AST_CLOSURE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR))))||||||||