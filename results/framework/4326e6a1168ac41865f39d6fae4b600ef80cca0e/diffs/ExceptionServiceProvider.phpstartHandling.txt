	public function startHandling($app)
	{
		$this->setExceptionHandler($app['exception.function']);

		// By registering the error handler with a level of -1, we state that we want
		// all PHP errors converted into ErrorExceptions and thrown which provides
		// a very strict development environment but prevents any unseen errors.
		$app['kernel.error'] = ErrorHandler::register(-1);

		if (isset($app['env']) and $app['env'] != 'testing')
		{
			$this->registerShutdownHandler();
		}
	}

	/**
	 * Register the service provider.
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_STATIC_CALL
            (
                (AST_UNARY_OP
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||