  public function __construct(LimeTestSuite $suite, array $options = array())
  {
    $this->suite = $suite;
    $this->options = array_merge(array(
      'base_dir'  => null,
      'extension' => '.php',
      'verbose'   => false,
    ), $options);

    // temporary solution, LimeRegistration needs to be modified
    $this->setBaseDir($this->options['base_dir']);
    $this->setExtension($this->options['extension']);

    if (!function_exists('xdebug_start_code_coverage'))
    {
      throw new Exception('You must install and enable xdebug before using lime coverage.');
    }

    if (!ini_get('xdebug.extended_info'))
    {
      throw new Exception('You must set xdebug.extended_info to 1 in your php.ini to use lime coverage.');
    }
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||