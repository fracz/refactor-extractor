  public function verify()
  {
    if (!$this->verified)
    {
      list ($file, $line) = LimeTrace::findCaller('LimeMockInterface');

      if ($this->isSatisfied())
      {
        $this->output->pass((string)$this, $file, $line);
      }
      else
      {
        $this->output->fail((string)$this, $file, $line);
      }

      $this->verified = true;
    }
  }

  /**
   * This method is expected to be called the given number of times.
   *
   * @param  integer $times
   * @return LimeMockInvocationExpectation  This object
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_CAST
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))))))||||||||