  protected static function generateClass($classOrInterface, $generateControls = true)
  {
    $methods = '';

    if (!class_exists($classOrInterface, false) && !interface_exists($classOrInterface, false))
    {
      if (($pos = strrpos($classOrInterface, '\\')) !== false)
      {
        $namespace = substr($classOrInterface, 0, $pos);
        $interface = substr($classOrInterface, $pos+1);

        eval(sprintf('namespace %s { interface %s {} }', $namespace, $interface));
      }
      else
      {
        eval(sprintf('interface %s {}', $classOrInterface));
      }
    }

    $class = new ReflectionClass($classOrInterface);
    foreach ($class->getMethods() as $method)
    {
      /* @var $method ReflectionMethod */
      if (in_array($method->getName(), self::$controlMethods) && $generateControls)
      {
        throw new LogicException(sprintf('The mocked class "%s" contains the method "%s", which conflicts with the mock\'s control methods. Please set the option "generate_controls" to false.', $classOrInterface, $method->getName()));
      }

      if (!in_array($method->getName(), self::$illegalMethods) && !$method->isFinal())
      {
        $modifiers = Reflection::getModifierNames($method->getModifiers());
        $modifiers = array_diff($modifiers, array('abstract'));
        $modifiers = implode(' ', $modifiers);

        $parameters = array();

        foreach ($method->getParameters() as $parameter)
        {
          $typeHint = '';

          /* @var $parameter ReflectionParameter */
          if ($parameter->getClass())
          {
            $typeHint = $parameter->getClass()->getName();
          }
          else if ($parameter->isArray())
          {
            $typeHint = 'array';
          }

          $name = '$'.$parameter->getName();

          if ($parameter->isPassedByReference())
          {
            $name = '&'.$name;
          }

          if ($parameter->isOptional())
          {
            $default = var_export($parameter->getDefaultValue(), true);
            $parameters[] = sprintf(self::$parameterWithDefaultTemplate, $typeHint, $name, $default);
          }
          else
          {
            $parameters[] = sprintf(self::$parameterTemplate, $typeHint, $name);
          }
        }

        $methods .= sprintf(self::$methodTemplate, $modifiers, $method->getName(),
            implode(', ', $parameters), $method->getName())."\n  ";
      }
    }

    $interfaces = array();

    $name = self::generateName($class->getName());

    $declaration = 'class '.$name;

    if ($class->isInterface())
    {
      $interfaces[] = $class->getName();
    }
    else
    {
      $declaration .= ' extends '.$class->getName();
    }

    $interfaces[] = 'LimeMockInterface';

    if (count($interfaces) > 0)
    {
      $declaration .= ' implements '.implode(', ', $interfaces);
    }

    $template = new LimeMockTemplate(dirname(__FILE__).'/template/mocked_class.tpl');

    eval($template->render(array(
      'class_declaration'   =>  $declaration,
      'methods'             =>  $methods,
      'generate_controls'   =>  $generateControls,
    )));

    return $name;
  }

  /**
   * Generates a mock class name for the given original class/interface name.
   *
   * @param  string $originalName
   * @return string
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_INCLUDE_OR_EVAL
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_STATIC_PROP)))
                        (AST_VAR))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_STATIC_PROP))))
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY))
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (SCALAR))))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))))))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))
                                                        (AST_CONST))))
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_CALL
                                                    (
                                                        (AST_STATIC_PROP)
                                                        (AST_VAR)
                                                        (AST_VAR)
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_CALL
                                                    (
                                                        (AST_STATIC_PROP)
                                                        (AST_VAR)
                                                        (AST_VAR)))))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_STATIC_PROP)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)))
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR)))))
    (AST_INCLUDE_OR_EVAL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||