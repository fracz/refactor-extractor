  protected static function generateName($originalName)
  {
    // strip namespace separators
    $originalName = str_replace('\\', '_', $originalName);

    while (!isset($name) || class_exists($name, false))
    {
      // inspired by PHPUnit_Framework_MockObject_Generator
      $name = 'Mock_'.$originalName.'_'.substr(md5(microtime()), 0, 8);
    }

    return $name;
  }

  /**
   * Turns the given mock into replay mode.
   *
   * @param LimeMockInterface $mock
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CONST))))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CALL)))
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||