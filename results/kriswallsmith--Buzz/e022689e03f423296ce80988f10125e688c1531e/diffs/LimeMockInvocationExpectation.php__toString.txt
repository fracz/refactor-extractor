  public function __toString()
  {
    $string = $this->invocation.' was called';

    foreach ($this->getMatchers() as $matcher)
    {
      // avoid trailing spaces if the message is empty
      $string = rtrim($string.' '.$matcher->getMessage());
    }

    return $string;
  }

  /**
   * Notifies this object of the given method invocation.
   *
   * If any of the matchers decides that this method should not have been
   * invoked, an exception is thrown. If all matchers are satisfied, a success
   * message is printed to the output.
   *
   * If this object was configured to throw an exception, this exception is
   * thrown now. Otherwise the method's configured return value is returned.
   *
   * @param  LimeMockInvocation $invocation  The invoked method
   * @return mixed                           The configured return value
   *                                         See returns()
   * @throws LimeMockInvocationException     If the method should not have been
   *                                         invoked
   * @throws Exception                       If this object was configured to
   *                                         throw an exception
   *                                         See throw()
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||