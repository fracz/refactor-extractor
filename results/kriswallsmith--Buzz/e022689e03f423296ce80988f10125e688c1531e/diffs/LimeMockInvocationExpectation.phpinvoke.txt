  public function invoke(LimeMockInvocation $invocation)
  {
    try
    {
      foreach ($this->getMatchers() as $matcher)
      {
        $matcher->invoke($invocation);
      }
    }
    catch (LimeMockInvocationMatcherException $e)
    {
      throw new LimeMockInvocationException($this->invocation, $e->getMessage());
    }

    if (!$this->verified && $this->isSatisfied())
    {
      list ($file, $line) = LimeTrace::findCaller('LimeMockInterface');

      $this->output->pass((string)$this, $file, $line);

      $this->verified = true;
    }

    if (!is_null($this->callback))
    {
      $result = call_user_func_array($this->callback, $invocation->getParameters());

      return $this->returns ? $this->returnValue : $result;
    }

    if (!is_null($this->exception))
    {
      if (is_string($this->exception))
      {
        throw new $this->exception();
      }
      else
      {
        throw $this->exception;
      }
    }

    return $this->returnValue;
  }

  /**
   * Returns whether the method signature and parameters of this object match
   * the given invocation.
   *
   * @param  LimeMockInvocation $invocation
   * @return boolean
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CAST
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||