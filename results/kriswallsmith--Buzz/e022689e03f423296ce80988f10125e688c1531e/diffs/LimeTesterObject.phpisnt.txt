  public function isnt(LimeTesterInterface $expected)
  {
    // don't compare twice to allow for cyclic dependencies
    if (in_array(array($this->value, $expected->value), self::$unequal, true) || in_array(array($expected->value, $this->value), self::$unequal, true))
    {
      return;
    }

    self::$unequal[] = array($this->value, $expected->value);

    parent::isnt($expected);
  }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL)))
                        (AST_STATIC_PROP)
                        (AST_CONST)))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL)))
                        (AST_STATIC_PROP)
                        (AST_CONST))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (NULL))))
    (AST_STATIC_CALL
        (
            (AST_VAR))))||||||||