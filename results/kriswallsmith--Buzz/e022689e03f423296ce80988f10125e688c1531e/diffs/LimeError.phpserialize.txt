  public function serialize()
  {
    $traces = $this->trace;

    foreach ($traces as &$trace)
    {
      if (array_key_exists('args', $trace))
      {
        foreach ($trace['args'] as &$value)
        {
          // TODO: This should be improved. Maybe we can check for recursions
          // and only exclude duplicate objects from the trace
          if (is_object($value))
          {
            // replace object by class name
            $value = sprintf('object (%s) (...)', get_class($value));
          }
          else if (is_array($value))
          {
            $value = 'array(...)';
          }
        }
      }
    }

    return serialize(array($this->file, $this->line, $this->message, $traces, $this->type));
  }

  /**
   * Unserializes an error.
   *
   * @see   Serializable#unserialize()
   * @param string $data  The serialized error content
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (AST_FOREACH
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_REF
                                (AST_VAR))
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR))))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (SCALAR)))))))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL)))))))||||||||