    static protected function setCurlOptsFromRequest($curl, Message\Request $request)
    {
        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, $request->getMethod());
        curl_setopt($curl, CURLOPT_URL, $request->getUrl());
        curl_setopt($curl, CURLOPT_HTTPHEADER, $request->getHeaders());
        curl_setopt($curl, CURLOPT_POSTFIELDS, $request->getContent());
    }

||||||||    static protected function setCurlOptsFromRequest($curl, Message\Request $request)
    {

        $curlMethodValue = true;
        switch ($request->getMethod()) {
            case Message\Request::METHOD_GET:
                $curlHttpMethod = CURLOPT_HTTPGET;
                break;

            case Message\Request::METHOD_POST:
                $curlHttpMethod = CURLOPT_POST;
                curl_setopt($curl, CURLOPT_POSTFIELDS, $request->getContent());
                break;

            case Message\Request::METHOD_HEAD:
                $curlHttpMethod = CURLOPT_NOBODY;
                break;

            case Message\Request::METHOD_PUT:
                $curlHttpMethod = CURLOPT_UPLOAD;
                break;

            case Message\Request::METHOD_DELETE:
                $curlHttpMethod = CURLOPT_CUSTOMREQUEST;
                $curlMethodValue = $request->getMethod();
                break;

            default:
                // For now, through an exception for unsupported request methods
                $curlHttpMethod = $request->getMethod();
                throw new \InvalidArgumentException("HTTP method '$curlHttpMethod' not supported.");
        }
        curl_setopt($curl, $curlHttpMethod, $curlMethodValue);
        curl_setopt($curl, CURLOPT_URL, $request->getUrl());
        curl_setopt($curl, CURLOPT_HTTPHEADER, $request->getHeaders());
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_METHOD_CALL
                (AST_VAR)))))