    public function flush()
    {
        foreach ($this->queue as $i => $queue) {
            list($request, $response, $curl) = $queue;

            if (null === $curl) {
                $curl = $this->queue[$i][2] = static::createCurlHandle();
            }

            $this->prepare($request, $response, $curl);
            curl_multi_add_handle($this->curl, $curl);
        }

        $active = null;
        do {
            $mrc = curl_multi_exec($this->curl, $active);
        } while (CURLM_CALL_MULTI_PERFORM == $mrc);

        while ($active && CURLM_OK == $mrc) {
            if (-1 != curl_multi_select($this->curl)) {
                do {
                    $mrc = curl_multi_exec($this->curl, $active);
                } while (CURLM_CALL_MULTI_PERFORM == $mrc);
            }
        }

        foreach ($this->queue as $queue) {
            list($request, $response, $curl) = $queue;

            $data = curl_multi_getcontent($curl);
            $pos  = curl_getinfo($curl, CURLINFO_HEADER_SIZE);
            $response->setHeaders(self::getLastHeaders(rtrim(substr($data, 0, $pos))));
            $response->setContent(substr($data, $pos));

            curl_multi_remove_handle($this->curl, $curl);
        }

        $this->queue = array();
    }

||||||||    public function flush()
    {
        if (false === $curlm = curl_multi_init()) {
            throw new \RuntimeException('Unable to create a new cURL multi handle');
        }

        // prepare a cURL handle for each entry in the queue
        foreach ($this->queue as $i => &$queue) {
            list($request, $response, $options) = $queue;
            $curl = $queue[] = static::createCurlHandle();
            $this->prepare($curl, $request, $options);
            curl_multi_add_handle($curlm, $curl);
        }

        $active = null;
        do {
            $mrc = curl_multi_exec($curlm, $active);
        } while (CURLM_CALL_MULTI_PERFORM == $mrc);

        while ($active && CURLM_OK == $mrc) {
            if (-1 != curl_multi_select($curlm)) {
                do {
                    $mrc = curl_multi_exec($curlm, $active);
                } while (CURLM_CALL_MULTI_PERFORM == $mrc);
            }
        }

        // populate the responses
        while (list($request, $response, $options, $curl) = array_shift($this->queue)) {
            static::populateResponse($curl, curl_multi_getcontent($curl), $response);
            curl_multi_remove_handle($curlm, $curl);
        }

        curl_multi_close($curlm);
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_STATIC_CALL))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_BINARY_OP
            (AST_CONST)
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_DO_WHILE
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_REF
            (AST_VAR))
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_STATIC_CALL)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_BINARY_OP
            (AST_CONST)
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_DO_WHILE
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))))))))
    (AST_WHILE
        (AST_ASSIGN
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL)))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR)))))
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_VAR))))