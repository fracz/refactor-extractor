AST_STMT_LIST
    0: AST_IF
        0: AST_IF_ELEM
            cond: AST_UNARY_OP
                flags: UNARY_BOOL_NOT (13)
                expr: AST_CALL
                    expr: AST_NAME
                        flags: NAME_NOT_FQ (1)
                        name: "defined"
                    args: AST_ARG_LIST
                        0: "BASEPATH"
            stmts: AST_STMT_LIST
                0: AST_EXIT
                    expr: "No direct script access allowed"
    1: AST_CLASS
        flags: 0
        name: "CI_Encrypt"
        docComment: "/**
         * CodeIgniter Encryption Class
         *
         * Provides two-way keyed encoding using XOR Hashing and Mcrypt
         *
         * @package		CodeIgniter
         * @subpackage	Libraries
         * @category	Libraries
         * @author		ExpressionEngine Dev Team
         * @link		http://codeigniter.com/user_guide/libraries/encryption.html
         */"
        extends: null
        implements: null
        stmts: AST_STMT_LIST
            0: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "CI"
                    default: null
                    docComment: null
            1: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "encryption_key"
                    default: ""
                    docComment: null
            2: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "_hash_type"
                    default: "sha1"
                    docComment: null
            3: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "_mcrypt_exists"
                    default: AST_CONST
                        name: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "FALSE"
                    docComment: null
            4: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "_mcrypt_cipher"
                    default: null
                    docComment: null
            5: AST_PROP_DECL
                flags: MODIFIER_PUBLIC (256)
                0: AST_PROP_ELEM
                    name: "_mcrypt_mode"
                    default: null
                    docComment: null
            6: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "CI_Encrypt"
                docComment: "/**
                	 * Constructor
                	 *
                	 * Simply determines whether the mcrypt library exists.
                	 *
                	 */"
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN_REF
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "CI"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "get_instance"
                            args: AST_ARG_LIST
                    1: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_mcrypt_exists"
                        expr: AST_CONDITIONAL
                            cond: AST_UNARY_OP
                                flags: UNARY_BOOL_NOT (13)
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "function_exists"
                                    args: AST_ARG_LIST
                                        0: "mcrypt_encrypt"
                            true: AST_CONST
                                name: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "FALSE"
                            false: AST_CONST
                                name: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "TRUE"
                    2: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: "Encrypt Class Initialized"
                returnType: null
                __declId: 0
            7: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "get_key"
                docComment: "/**
                	 * Fetch the encryption key
                	 *
                	 * Returns it as MD5 in order to have an exact-length 128 bit key.
                	 * Mcrypt is sensitive to keys that are not the correct length
                	 *
                	 * @access	public
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_VAR
                                    name: "key"
                                right: ""
                            stmts: AST_STMT_LIST
                                0: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_BINARY_OP
                                            flags: BINARY_IS_NOT_EQUAL (18)
                                            left: AST_PROP
                                                expr: AST_VAR
                                                    name: "this"
                                                prop: "encryption_key"
                                            right: ""
                                        stmts: AST_STMT_LIST
                                            0: AST_RETURN
                                                expr: AST_PROP
                                                    expr: AST_VAR
                                                        name: "this"
                                                    prop: "encryption_key"
                                1: AST_ASSIGN_REF
                                    var: AST_VAR
                                        name: "CI"
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "get_instance"
                                        args: AST_ARG_LIST
                                2: AST_ASSIGN
                                    var: AST_VAR
                                        name: "key"
                                    expr: AST_METHOD_CALL
                                        expr: AST_PROP
                                            expr: AST_VAR
                                                name: "CI"
                                            prop: "config"
                                        method: "item"
                                        args: AST_ARG_LIST
                                            0: "encryption_key"
                                3: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_BINARY_OP
                                            flags: BINARY_IS_EQUAL (17)
                                            left: AST_VAR
                                                name: "key"
                                            right: AST_CONST
                                                name: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "FALSE"
                                        stmts: AST_STMT_LIST
                                            0: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "show_error"
                                                args: AST_ARG_LIST
                                                    0: "In order to use the encryption class requires that you set an encryption key in your config file."
                    1: AST_RETURN
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "md5"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                returnType: null
                __declId: 1
            8: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_key"
                docComment: "/**
                	 * Set the encryption key
                	 *
                	 * @access	public
                	 * @param	string
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "encryption_key"
                        expr: AST_VAR
                            name: "key"
                returnType: null
                __declId: 2
            9: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "encode"
                docComment: "/**
                	 * Encode
                	 *
                	 * Encodes the message string using bitwise XOR encoding.
                	 * The key is combined with a random hash, and then it
                	 * too gets converted using XOR. The whole thing is then run
                	 * through mcrypt (if supported) using the randomized key.
                	 * The end result is a double-encrypted message string
                	 * that is randomized with each call to this function,
                	 * even if the supplied message and key are the same.
                	 *
                	 * @access	public
                	 * @param	string	the string to encode
                	 * @param	string	the key
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "string"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "key"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "get_key"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "enc"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_xor_encode"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "string"
                                1: AST_VAR
                                    name: "key"
                    2: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_IDENTICAL (15)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_mcrypt_exists"
                                right: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "TRUE"
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_VAR
                                        name: "enc"
                                    expr: AST_METHOD_CALL
                                        expr: AST_VAR
                                            name: "this"
                                        method: "mcrypt_encode"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "enc"
                                            1: AST_VAR
                                                name: "key"
                    3: AST_RETURN
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "base64_encode"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "enc"
                returnType: null
                __declId: 3
            10: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "decode"
                docComment: "/**
                	 * Decode
                	 *
                	 * Reverses the above process
                	 *
                	 * @access	public
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "string"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "key"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "get_key"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                    1: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "preg_match"
                                args: AST_ARG_LIST
                                    0: "/[^a-zA-Z0-9\/\+=]/"
                                    1: AST_VAR
                                        name: "string"
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "dec"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "base64_decode"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "string"
                    3: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_IDENTICAL (15)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_mcrypt_exists"
                                right: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "TRUE"
                            stmts: AST_STMT_LIST
                                0: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_BINARY_OP
                                            flags: BINARY_IS_IDENTICAL (15)
                                            left: AST_ASSIGN
                                                var: AST_VAR
                                                    name: "dec"
                                                expr: AST_METHOD_CALL
                                                    expr: AST_VAR
                                                        name: "this"
                                                    method: "mcrypt_decode"
                                                    args: AST_ARG_LIST
                                                        0: AST_VAR
                                                            name: "dec"
                                                        1: AST_VAR
                                                            name: "key"
                                            right: AST_CONST
                                                name: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "FALSE"
                                        stmts: AST_STMT_LIST
                                            0: AST_RETURN
                                                expr: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "FALSE"
                    4: AST_RETURN
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_xor_decode"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "dec"
                                1: AST_VAR
                                    name: "key"
                returnType: null
                __declId: 4
            11: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_xor_encode"
                docComment: "/**
                	 * XOR Encode
                	 *
                	 * Takes a plain-text string and key as input and generates an
                	 * encoded bit-string using XOR
                	 *
                	 * @access	private
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "string"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "rand"
                        expr: ""
                    1: AST_WHILE
                        cond: AST_BINARY_OP
                            flags: BINARY_IS_SMALLER (19)
                            left: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "strlen"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "rand"
                            right: 32
                        stmts: AST_STMT_LIST
                            0: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "rand"
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "mt_rand"
                                    args: AST_ARG_LIST
                                        0: 0
                                        1: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "mt_getrandmax"
                                            args: AST_ARG_LIST
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "rand"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "hash"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "rand"
                    3: AST_ASSIGN
                        var: AST_VAR
                            name: "enc"
                        expr: ""
                    4: AST_FOR
                        init: AST_EXPR_LIST
                            0: AST_ASSIGN
                                var: AST_VAR
                                    name: "i"
                                expr: 0
                        cond: AST_EXPR_LIST
                            0: AST_BINARY_OP
                                flags: BINARY_IS_SMALLER (19)
                                left: AST_VAR
                                    name: "i"
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "string"
                        loop: AST_EXPR_LIST
                            0: AST_POST_INC
                                var: AST_VAR
                                    name: "i"
                        stmts: AST_STMT_LIST
                            0: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "enc"
                                expr: AST_BINARY_OP
                                    flags: BINARY_CONCAT (8)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "substr"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "rand"
                                            1: AST_BINARY_OP
                                                flags: BINARY_MOD (5)
                                                left: AST_VAR
                                                    name: "i"
                                                right: AST_CALL
                                                    expr: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "strlen"
                                                    args: AST_ARG_LIST
                                                        0: AST_VAR
                                                            name: "rand"
                                            2: 1
                                    right: AST_BINARY_OP
                                        flags: BINARY_BITWISE_XOR (11)
                                        left: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "substr"
                                            args: AST_ARG_LIST
                                                0: AST_VAR
                                                    name: "rand"
                                                1: AST_BINARY_OP
                                                    flags: BINARY_MOD (5)
                                                    left: AST_VAR
                                                        name: "i"
                                                    right: AST_CALL
                                                        expr: AST_NAME
                                                            flags: NAME_NOT_FQ (1)
                                                            name: "strlen"
                                                        args: AST_ARG_LIST
                                                            0: AST_VAR
                                                                name: "rand"
                                                2: 1
                                        right: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "substr"
                                            args: AST_ARG_LIST
                                                0: AST_VAR
                                                    name: "string"
                                                1: AST_VAR
                                                    name: "i"
                                                2: 1
                    5: AST_RETURN
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_xor_merge"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "enc"
                                1: AST_VAR
                                    name: "key"
                returnType: null
                __declId: 5
            12: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_xor_decode"
                docComment: "/**
                	 * XOR Decode
                	 *
                	 * Takes an encoded string and key as input and generates the
                	 * plain-text original message
                	 *
                	 * @access	private
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "string"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "string"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_xor_merge"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "string"
                                1: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "dec"
                        expr: ""
                    2: AST_FOR
                        init: AST_EXPR_LIST
                            0: AST_ASSIGN
                                var: AST_VAR
                                    name: "i"
                                expr: 0
                        cond: AST_EXPR_LIST
                            0: AST_BINARY_OP
                                flags: BINARY_IS_SMALLER (19)
                                left: AST_VAR
                                    name: "i"
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "string"
                        loop: AST_EXPR_LIST
                            0: AST_POST_INC
                                var: AST_VAR
                                    name: "i"
                        stmts: AST_STMT_LIST
                            0: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "dec"
                                expr: AST_BINARY_OP
                                    flags: BINARY_BITWISE_XOR (11)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "substr"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "string"
                                            1: AST_POST_INC
                                                var: AST_VAR
                                                    name: "i"
                                            2: 1
                                    right: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "substr"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "string"
                                            1: AST_VAR
                                                name: "i"
                                            2: 1
                    3: AST_RETURN
                        expr: AST_VAR
                            name: "dec"
                returnType: null
                __declId: 6
            13: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_xor_merge"
                docComment: "/**
                	 * XOR key + string Combiner
                	 *
                	 * Takes a string and key as input and computes the difference using XOR
                	 *
                	 * @access	private
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "string"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "hash"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "hash"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "str"
                        expr: ""
                    2: AST_FOR
                        init: AST_EXPR_LIST
                            0: AST_ASSIGN
                                var: AST_VAR
                                    name: "i"
                                expr: 0
                        cond: AST_EXPR_LIST
                            0: AST_BINARY_OP
                                flags: BINARY_IS_SMALLER (19)
                                left: AST_VAR
                                    name: "i"
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "string"
                        loop: AST_EXPR_LIST
                            0: AST_POST_INC
                                var: AST_VAR
                                    name: "i"
                        stmts: AST_STMT_LIST
                            0: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "str"
                                expr: AST_BINARY_OP
                                    flags: BINARY_BITWISE_XOR (11)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "substr"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "string"
                                            1: AST_VAR
                                                name: "i"
                                            2: 1
                                    right: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "substr"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "hash"
                                            1: AST_BINARY_OP
                                                flags: BINARY_MOD (5)
                                                left: AST_VAR
                                                    name: "i"
                                                right: AST_CALL
                                                    expr: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "strlen"
                                                    args: AST_ARG_LIST
                                                        0: AST_VAR
                                                            name: "hash"
                                            2: 1
                    3: AST_RETURN
                        expr: AST_VAR
                            name: "str"
                returnType: null
                __declId: 7
            14: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "mcrypt_encode"
                docComment: "/**
                	 * Encrypt using Mcrypt
                	 *
                	 * @access	public
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "data"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "init_size"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "mcrypt_get_iv_size"
                            args: AST_ARG_LIST
                                0: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "this"
                                    method: "_get_cipher"
                                    args: AST_ARG_LIST
                                1: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "this"
                                    method: "_get_mode"
                                    args: AST_ARG_LIST
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "init_vect"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "mcrypt_create_iv"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "init_size"
                                1: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "MCRYPT_RAND"
                    2: AST_RETURN
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_add_cipher_noise"
                            args: AST_ARG_LIST
                                0: AST_BINARY_OP
                                    flags: BINARY_CONCAT (8)
                                    left: AST_VAR
                                        name: "init_vect"
                                    right: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "mcrypt_encrypt"
                                        args: AST_ARG_LIST
                                            0: AST_METHOD_CALL
                                                expr: AST_VAR
                                                    name: "this"
                                                method: "_get_cipher"
                                                args: AST_ARG_LIST
                                            1: AST_VAR
                                                name: "key"
                                            2: AST_VAR
                                                name: "data"
                                            3: AST_METHOD_CALL
                                                expr: AST_VAR
                                                    name: "this"
                                                method: "_get_mode"
                                                args: AST_ARG_LIST
                                            4: AST_VAR
                                                name: "init_vect"
                                1: AST_VAR
                                    name: "key"
                returnType: null
                __declId: 8
            15: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "mcrypt_decode"
                docComment: "/**
                	 * Decrypt using Mcrypt
                	 *
                	 * @access	public
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "data"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "data"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "_remove_cipher_noise"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "data"
                                1: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "init_size"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "mcrypt_get_iv_size"
                            args: AST_ARG_LIST
                                0: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "this"
                                    method: "_get_cipher"
                                    args: AST_ARG_LIST
                                1: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "this"
                                    method: "_get_mode"
                                    args: AST_ARG_LIST
                    2: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_GREATER (256)
                                left: AST_VAR
                                    name: "init_size"
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "data"
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    3: AST_ASSIGN
                        var: AST_VAR
                            name: "init_vect"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "substr"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "data"
                                1: 0
                                2: AST_VAR
                                    name: "init_size"
                    4: AST_ASSIGN
                        var: AST_VAR
                            name: "data"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "substr"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "data"
                                1: AST_VAR
                                    name: "init_size"
                    5: AST_RETURN
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "rtrim"
                            args: AST_ARG_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "mcrypt_decrypt"
                                    args: AST_ARG_LIST
                                        0: AST_METHOD_CALL
                                            expr: AST_VAR
                                                name: "this"
                                            method: "_get_cipher"
                                            args: AST_ARG_LIST
                                        1: AST_VAR
                                            name: "key"
                                        2: AST_VAR
                                            name: "data"
                                        3: AST_METHOD_CALL
                                            expr: AST_VAR
                                                name: "this"
                                            method: "_get_mode"
                                            args: AST_ARG_LIST
                                        4: AST_VAR
                                            name: "init_vect"
                                1: " "
                returnType: null
                __declId: 9
            16: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_add_cipher_noise"
                docComment: "/**
                	 * Adds permuted noise to the IV + encrypted data to protect
                	 * against Man-in-the-middle attacks on CBC mode ciphers
                	 * http://www.ciphersbyritter.com/GLOSSARY.HTM#IV
                	 *
                	 * Function description
                	 *
                	 * @access	private
                	 * @param	string
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "data"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "keyhash"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "hash"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "keylen"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "strlen"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "keyhash"
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "str"
                        expr: ""
                    3: AST_FOR
                        init: AST_EXPR_LIST
                            0: AST_ASSIGN
                                var: AST_VAR
                                    name: "i"
                                expr: 0
                            1: AST_ASSIGN
                                var: AST_VAR
                                    name: "j"
                                expr: 0
                            2: AST_ASSIGN
                                var: AST_VAR
                                    name: "len"
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "data"
                        cond: AST_EXPR_LIST
                            0: AST_BINARY_OP
                                flags: BINARY_IS_SMALLER (19)
                                left: AST_VAR
                                    name: "i"
                                right: AST_VAR
                                    name: "len"
                        loop: AST_EXPR_LIST
                            0: AST_PRE_INC
                                var: AST_VAR
                                    name: "i"
                            1: AST_PRE_INC
                                var: AST_VAR
                                    name: "j"
                        stmts: AST_STMT_LIST
                            0: AST_IF
                                0: AST_IF_ELEM
                                    cond: AST_BINARY_OP
                                        flags: BINARY_IS_GREATER_OR_EQUAL (257)
                                        left: AST_VAR
                                            name: "j"
                                        right: AST_VAR
                                            name: "keylen"
                                    stmts: AST_STMT_LIST
                                        0: AST_ASSIGN
                                            var: AST_VAR
                                                name: "j"
                                            expr: 0
                            1: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "str"
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "chr"
                                    args: AST_ARG_LIST
                                        0: AST_BINARY_OP
                                            flags: BINARY_MOD (5)
                                            left: AST_BINARY_OP
                                                flags: BINARY_ADD (1)
                                                left: AST_CALL
                                                    expr: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "ord"
                                                    args: AST_ARG_LIST
                                                        0: AST_DIM
                                                            expr: AST_VAR
                                                                name: "data"
                                                            dim: AST_VAR
                                                                name: "i"
                                                right: AST_CALL
                                                    expr: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "ord"
                                                    args: AST_ARG_LIST
                                                        0: AST_DIM
                                                            expr: AST_VAR
                                                                name: "keyhash"
                                                            dim: AST_VAR
                                                                name: "j"
                                            right: 256
                    4: AST_RETURN
                        expr: AST_VAR
                            name: "str"
                returnType: null
                __declId: 10
            17: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_remove_cipher_noise"
                docComment: "/**
                	 * Removes permuted noise from the IV + encrypted data, reversing
                	 * _add_cipher_noise()
                	 *
                	 * Function description
                	 *
                	 * @access	public
                	 * @param	type
                	 * @return	type
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "data"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "key"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "keyhash"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "this"
                            method: "hash"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "key"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "keylen"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "strlen"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "keyhash"
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "str"
                        expr: ""
                    3: AST_FOR
                        init: AST_EXPR_LIST
                            0: AST_ASSIGN
                                var: AST_VAR
                                    name: "i"
                                expr: 0
                            1: AST_ASSIGN
                                var: AST_VAR
                                    name: "j"
                                expr: 0
                            2: AST_ASSIGN
                                var: AST_VAR
                                    name: "len"
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strlen"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "data"
                        cond: AST_EXPR_LIST
                            0: AST_BINARY_OP
                                flags: BINARY_IS_SMALLER (19)
                                left: AST_VAR
                                    name: "i"
                                right: AST_VAR
                                    name: "len"
                        loop: AST_EXPR_LIST
                            0: AST_PRE_INC
                                var: AST_VAR
                                    name: "i"
                            1: AST_PRE_INC
                                var: AST_VAR
                                    name: "j"
                        stmts: AST_STMT_LIST
                            0: AST_IF
                                0: AST_IF_ELEM
                                    cond: AST_BINARY_OP
                                        flags: BINARY_IS_GREATER_OR_EQUAL (257)
                                        left: AST_VAR
                                            name: "j"
                                        right: AST_VAR
                                            name: "keylen"
                                    stmts: AST_STMT_LIST
                                        0: AST_ASSIGN
                                            var: AST_VAR
                                                name: "j"
                                            expr: 0
                            1: AST_ASSIGN
                                var: AST_VAR
                                    name: "temp"
                                expr: AST_BINARY_OP
                                    flags: BINARY_SUB (2)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "ord"
                                        args: AST_ARG_LIST
                                            0: AST_DIM
                                                expr: AST_VAR
                                                    name: "data"
                                                dim: AST_VAR
                                                    name: "i"
                                    right: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "ord"
                                        args: AST_ARG_LIST
                                            0: AST_DIM
                                                expr: AST_VAR
                                                    name: "keyhash"
                                                dim: AST_VAR
                                                    name: "j"
                            2: AST_IF
                                0: AST_IF_ELEM
                                    cond: AST_BINARY_OP
                                        flags: BINARY_IS_SMALLER (19)
                                        left: AST_VAR
                                            name: "temp"
                                        right: 0
                                    stmts: AST_STMT_LIST
                                        0: AST_ASSIGN
                                            var: AST_VAR
                                                name: "temp"
                                            expr: AST_BINARY_OP
                                                flags: BINARY_ADD (1)
                                                left: AST_VAR
                                                    name: "temp"
                                                right: 256
                            3: AST_ASSIGN_OP
                                flags: BINARY_CONCAT (8)
                                var: AST_VAR
                                    name: "str"
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "chr"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "temp"
                    4: AST_RETURN
                        expr: AST_VAR
                            name: "str"
                returnType: null
                __declId: 11
            18: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_cipher"
                docComment: "/**
                	 * Set the Mcrypt Cipher
                	 *
                	 * @access	public
                	 * @param	constant
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "cipher"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_mcrypt_cipher"
                        expr: AST_VAR
                            name: "cipher"
                returnType: null
                __declId: 12
            19: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_mode"
                docComment: "/**
                	 * Set the Mcrypt Mode
                	 *
                	 * @access	public
                	 * @param	constant
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "mode"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_mcrypt_mode"
                        expr: AST_VAR
                            name: "mode"
                returnType: null
                __declId: 13
            20: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_get_cipher"
                docComment: "/**
                	 * Get Mcrypt cipher Value
                	 *
                	 * @access	private
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_mcrypt_cipher"
                                right: ""
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "_mcrypt_cipher"
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "MCRYPT_RIJNDAEL_256"
                    1: AST_RETURN
                        expr: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_mcrypt_cipher"
                returnType: null
                __declId: 14
            21: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_get_mode"
                docComment: "/**
                	 * Get Mcrypt Mode Value
                	 *
                	 * @access	private
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_mcrypt_mode"
                                right: ""
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "_mcrypt_mode"
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "MCRYPT_MODE_ECB"
                    1: AST_RETURN
                        expr: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_mcrypt_mode"
                returnType: null
                __declId: 15
            22: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_hash"
                docComment: "/**
                	 * Set the Hash type
                	 *
                	 * @access	public
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "type"
                        default: "sha1"
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_hash_type"
                        expr: AST_CONDITIONAL
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_BINARY_OP
                                    flags: BINARY_IS_NOT_EQUAL (18)
                                    left: AST_VAR
                                        name: "type"
                                    right: "sha1"
                                right: AST_BINARY_OP
                                    flags: BINARY_IS_NOT_EQUAL (18)
                                    left: AST_VAR
                                        name: "type"
                                    right: "md5"
                            true: "sha1"
                            false: AST_VAR
                                name: "type"
                returnType: null
                __declId: 16
            23: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "hash"
                docComment: "/**
                	 * Hash encode a string
                	 *
                	 * @access	public
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "str"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_RETURN
                        expr: AST_CONDITIONAL
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_hash_type"
                                right: "sha1"
                            true: AST_METHOD_CALL
                                expr: AST_VAR
                                    name: "this"
                                method: "sha1"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "str"
                            false: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "md5"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "str"
                returnType: null
                __declId: 17
            24: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "sha1"
                docComment: "/**
                	 * Generate an SHA1 Hash
                	 *
                	 * @access	public
                	 * @param	string
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "str"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_UNARY_OP
                                flags: UNARY_BOOL_NOT (13)
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "function_exists"
                                    args: AST_ARG_LIST
                                        0: "sha1"
                            stmts: AST_STMT_LIST
                                0: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_UNARY_OP
                                            flags: UNARY_BOOL_NOT (13)
                                            expr: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "function_exists"
                                                args: AST_ARG_LIST
                                                    0: "mhash"
                                        stmts: AST_STMT_LIST
                                            0: AST_INCLUDE_OR_EVAL
                                                flags: EXEC_REQUIRE_ONCE (16)
                                                expr: AST_BINARY_OP
                                                    flags: BINARY_CONCAT (8)
                                                    left: AST_BINARY_OP
                                                        flags: BINARY_CONCAT (8)
                                                        left: AST_CONST
                                                            name: AST_NAME
                                                                flags: NAME_NOT_FQ (1)
                                                                name: "BASEPATH"
                                                        right: "libraries/Sha1"
                                                    right: AST_CONST
                                                        name: AST_NAME
                                                            flags: NAME_NOT_FQ (1)
                                                            name: "EXT"
                                            1: AST_ASSIGN
                                                var: AST_VAR
                                                    name: "SH"
                                                expr: AST_NEW
                                                    class: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "CI_SHA"
                                                    args: AST_ARG_LIST
                                            2: AST_RETURN
                                                expr: AST_METHOD_CALL
                                                    expr: AST_VAR
                                                        name: "SH"
                                                    method: "generate"
                                                    args: AST_ARG_LIST
                                                        0: AST_VAR
                                                            name: "str"
                                    1: AST_IF_ELEM
                                        cond: null
                                        stmts: AST_STMT_LIST
                                            0: AST_RETURN
                                                expr: AST_CALL
                                                    expr: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "bin2hex"
                                                    args: AST_ARG_LIST
                                                        0: AST_CALL
                                                            expr: AST_NAME
                                                                flags: NAME_NOT_FQ (1)
                                                                name: "mhash"
                                                            args: AST_ARG_LIST
                                                                0: AST_CONST
                                                                    name: AST_NAME
                                                                        flags: NAME_NOT_FQ (1)
                                                                        name: "MHASH_SHA1"
                                                                1: AST_VAR
                                                                    name: "str"
                        1: AST_IF_ELEM
                            cond: null
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "sha1"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "str"
                returnType: null
                __declId: 18
        __declId: 19