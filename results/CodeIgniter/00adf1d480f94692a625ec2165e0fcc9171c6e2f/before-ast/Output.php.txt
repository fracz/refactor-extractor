AST_STMT_LIST
    0: AST_IF
        0: AST_IF_ELEM
            cond: AST_UNARY_OP
                flags: UNARY_BOOL_NOT (13)
                expr: AST_CALL
                    expr: AST_NAME
                        flags: NAME_NOT_FQ (1)
                        name: "defined"
                    args: AST_ARG_LIST
                        0: "BASEPATH"
            stmts: AST_STMT_LIST
                0: AST_EXIT
                    expr: "No direct script access allowed"
    1: AST_CLASS
        flags: 0
        name: "CI_Output"
        docComment: "/**
         * Output Class
         *
         * Responsible for sending final output to browser
         *
         * @package		CodeIgniter
         * @subpackage	Libraries
         * @category	Output
         * @author		EllisLab Dev Team
         * @link		http://codeigniter.com/user_guide/libraries/output.html
         */"
        extends: null
        implements: null
        stmts: AST_STMT_LIST
            0: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "final_output"
                    default: null
                    docComment: "/**
                    	 * Current output string
                    	 *
                    	 * @var string
                    	 */"
            1: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "cache_expiration"
                    default: 0
                    docComment: "/**
                    	 * Cache expiration time
                    	 *
                    	 * @var int
                    	 */"
            2: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "headers"
                    default: AST_ARRAY
                        flags: ARRAY_SYNTAX_LONG (2)
                    docComment: "/**
                    	 * List of server headers
                    	 *
                    	 * @var array
                    	 */"
            3: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "mime_types"
                    default: AST_ARRAY
                        flags: ARRAY_SYNTAX_LONG (2)
                    docComment: "/**
                    	 * List of mime types
                    	 *
                    	 * @var array
                    	 */"
            4: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "enable_profiler"
                    default: AST_CONST
                        name: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "FALSE"
                    docComment: "/**
                    	 * Determines wether profiler is enabled
                    	 *
                    	 * @var book
                    	 */"
            5: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "_zlib_oc"
                    default: AST_CONST
                        name: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "FALSE"
                    docComment: "/**
                    	 * Determines if output compression is enabled
                    	 *
                    	 * @var bool
                    	 */"
            6: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "_profiler_sections"
                    default: AST_ARRAY
                        flags: ARRAY_SYNTAX_LONG (2)
                    docComment: "/**
                    	 * List of profiler sections
                    	 *
                    	 * @var array
                    	 */"
            7: AST_PROP_DECL
                flags: MODIFIER_PROTECTED (512)
                0: AST_PROP_ELEM
                    name: "parse_exec_vars"
                    default: AST_CONST
                        name: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "TRUE"
                    docComment: "/**
                    	 * Whether or not to parse variables like {elapsed_time} and {memory_usage}
                    	 *
                    	 * @var bool
                    	 */"
            8: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "__construct"
                docComment: null
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "_zlib_oc"
                        expr: AST_UNARY_OP
                            flags: UNARY_SILENCE (260)
                            expr: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "ini_get"
                                args: AST_ARG_LIST
                                    0: "zlib.output_compression"
                    1: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "defined"
                                    args: AST_ARG_LIST
                                        0: "ENVIRONMENT"
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "file_exists"
                                    args: AST_ARG_LIST
                                        0: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: AST_BINARY_OP
                                                flags: BINARY_CONCAT (8)
                                                left: AST_BINARY_OP
                                                    flags: BINARY_CONCAT (8)
                                                    left: AST_CONST
                                                        name: AST_NAME
                                                            flags: NAME_NOT_FQ (1)
                                                            name: "APPPATH"
                                                    right: "config/"
                                                right: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "ENVIRONMENT"
                                            right: "/mimes.php"
                            stmts: AST_STMT_LIST
                                0: AST_INCLUDE_OR_EVAL
                                    flags: EXEC_INCLUDE (2)
                                    expr: AST_BINARY_OP
                                        flags: BINARY_CONCAT (8)
                                        left: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: AST_BINARY_OP
                                                flags: BINARY_CONCAT (8)
                                                left: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "APPPATH"
                                                right: "config/"
                                            right: AST_CONST
                                                name: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "ENVIRONMENT"
                                        right: "/mimes.php"
                        1: AST_IF_ELEM
                            cond: null
                            stmts: AST_STMT_LIST
                                0: AST_INCLUDE_OR_EVAL
                                    flags: EXEC_INCLUDE (2)
                                    expr: AST_BINARY_OP
                                        flags: BINARY_CONCAT (8)
                                        left: AST_CONST
                                            name: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "APPPATH"
                                        right: "config/mimes.php"
                    2: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "mime_types"
                        expr: AST_VAR
                            name: "mimes"
                    3: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: "Output Class Initialized"
                returnType: null
                __declId: 0
            9: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "get_output"
                docComment: "/**
                	 * Get Output
                	 *
                	 * Returns the current output string
                	 *
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_RETURN
                        expr: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "final_output"
                returnType: null
                __declId: 1
            10: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_output"
                docComment: "/**
                	 * Set Output
                	 *
                	 * Sets the output string
                	 *
                	 * @param	string
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "output"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "final_output"
                        expr: AST_VAR
                            name: "output"
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 2
            11: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "append_output"
                docComment: "/**
                	 * Append Output
                	 *
                	 * Appends data onto the output string
                	 *
                	 * @param	string
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "output"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "final_output"
                                right: ""
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "final_output"
                                    expr: AST_VAR
                                        name: "output"
                        1: AST_IF_ELEM
                            cond: null
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN_OP
                                    flags: BINARY_CONCAT (8)
                                    var: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "final_output"
                                    expr: AST_VAR
                                        name: "output"
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 3
            12: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_header"
                docComment: "/**
                	 * Set Header
                	 *
                	 * Lets you set a server header which will be outputted with the final display.
                	 *
                	 * Note:  If a file is cached, headers will not be sent.  We need to figure out
                	 * how to permit header data to be saved with the cache data...
                	 *
                	 * @param	string
                	 * @param 	bool
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "header"
                        default: null
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "replace"
                        default: AST_CONST
                            name: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "TRUE"
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "_zlib_oc"
                                right: AST_BINARY_OP
                                    flags: BINARY_IS_EQUAL (17)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "strncasecmp"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "header"
                                            1: "content-length"
                                            2: 14
                                    right: 0
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: null
                    1: AST_ASSIGN
                        var: AST_DIM
                            expr: AST_PROP
                                expr: AST_VAR
                                    name: "this"
                                prop: "headers"
                            dim: null
                        expr: AST_ARRAY
                            flags: ARRAY_SYNTAX_LONG (2)
                            0: AST_ARRAY_ELEM
                                flags: 0
                                value: AST_VAR
                                    name: "header"
                                key: null
                            1: AST_ARRAY_ELEM
                                flags: 0
                                value: AST_VAR
                                    name: "replace"
                                key: null
                    2: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 4
            13: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_content_type"
                docComment: "/**
                	 * Set Content Type Header
                	 *
                	 * @param	string	extension of the file we're outputting
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "mime_type"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_IDENTICAL (15)
                                left: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "strpos"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "mime_type"
                                        1: "/"
                                right: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "FALSE"
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_VAR
                                        name: "extension"
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "ltrim"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "mime_type"
                                            1: "."
                                1: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_ISSET
                                            var: AST_DIM
                                                expr: AST_PROP
                                                    expr: AST_VAR
                                                        name: "this"
                                                    prop: "mime_types"
                                                dim: AST_VAR
                                                    name: "extension"
                                        stmts: AST_STMT_LIST
                                            0: AST_ASSIGN_REF
                                                var: AST_VAR
                                                    name: "mime_type"
                                                expr: AST_DIM
                                                    expr: AST_PROP
                                                        expr: AST_VAR
                                                            name: "this"
                                                        prop: "mime_types"
                                                    dim: AST_VAR
                                                        name: "extension"
                                            1: AST_IF
                                                0: AST_IF_ELEM
                                                    cond: AST_CALL
                                                        expr: AST_NAME
                                                            flags: NAME_NOT_FQ (1)
                                                            name: "is_array"
                                                        args: AST_ARG_LIST
                                                            0: AST_VAR
                                                                name: "mime_type"
                                                    stmts: AST_STMT_LIST
                                                        0: AST_ASSIGN
                                                            var: AST_VAR
                                                                name: "mime_type"
                                                            expr: AST_CALL
                                                                expr: AST_NAME
                                                                    flags: NAME_NOT_FQ (1)
                                                                    name: "current"
                                                                args: AST_ARG_LIST
                                                                    0: AST_VAR
                                                                        name: "mime_type"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "header"
                        expr: AST_BINARY_OP
                            flags: BINARY_CONCAT (8)
                            left: "Content-Type: "
                            right: AST_VAR
                                name: "mime_type"
                    2: AST_ASSIGN
                        var: AST_DIM
                            expr: AST_PROP
                                expr: AST_VAR
                                    name: "this"
                                prop: "headers"
                            dim: null
                        expr: AST_ARRAY
                            flags: ARRAY_SYNTAX_LONG (2)
                            0: AST_ARRAY_ELEM
                                flags: 0
                                value: AST_VAR
                                    name: "header"
                                key: null
                            1: AST_ARRAY_ELEM
                                flags: 0
                                value: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "TRUE"
                                key: null
                    3: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 5
            14: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "get_content_type"
                docComment: "/**
                	 * Get Current Content Type Header
                	 * Return text/html if Content-Type is not set
                	 *
                	 * @return	string
                	 */"
                params: AST_PARAM_LIST
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_FOREACH
                        expr: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "headers"
                        value: AST_VAR
                            name: "header"
                        key: null
                        stmts: AST_STMT_LIST
                            0: AST_IF
                                0: AST_IF_ELEM
                                    cond: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "preg_match"
                                        args: AST_ARG_LIST
                                            0: "/^Content-Type/"
                                            1: AST_DIM
                                                expr: AST_VAR
                                                    name: "header"
                                                dim: 0
                                    stmts: AST_STMT_LIST
                                        0: AST_RETURN
                                            expr: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "str_replace"
                                                args: AST_ARG_LIST
                                                    0: "Content-Type: "
                                                    1: ""
                                                    2: AST_DIM
                                                        expr: AST_VAR
                                                            name: "header"
                                                        dim: 0
                    1: AST_RETURN
                        expr: "text/html"
                returnType: null
                __declId: 6
            15: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_status_header"
                docComment: "/**
                	 * Set HTTP Status Header
                	 * moved to Common procedural functions in 1.7.2
                	 *
                	 * @param	int	the status code
                	 * @param	string
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "code"
                        default: 200
                    1: AST_PARAM
                        flags: 0
                        type: null
                        name: "text"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "set_status_header"
                        args: AST_ARG_LIST
                            0: AST_VAR
                                name: "code"
                            1: AST_VAR
                                name: "text"
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 7
            16: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "enable_profiler"
                docComment: "/**
                	 * Enable/disable Profiler
                	 *
                	 * @param	bool
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "val"
                        default: AST_CONST
                            name: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "TRUE"
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "enable_profiler"
                        expr: AST_CONDITIONAL
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "is_bool"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "val"
                            true: AST_VAR
                                name: "val"
                            false: AST_CONST
                                name: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "TRUE"
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 8
            17: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "set_profiler_sections"
                docComment: "/**
                	 * Set Profiler Sections
                	 *
                	 * Allows override of default / config settings for Profiler section display
                	 *
                	 * @param	array
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "sections"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_FOREACH
                        expr: AST_VAR
                            name: "sections"
                        value: AST_VAR
                            name: "enable"
                        key: AST_VAR
                            name: "section"
                        stmts: AST_STMT_LIST
                            0: AST_ASSIGN
                                var: AST_DIM
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "_profiler_sections"
                                    dim: AST_VAR
                                        name: "section"
                                expr: AST_BINARY_OP
                                    flags: BINARY_IS_NOT_IDENTICAL (16)
                                    left: AST_VAR
                                        name: "enable"
                                    right: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 9
            18: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "cache"
                docComment: "/**
                	 * Set Cache
                	 *
                	 * @param	int
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "time"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_PROP
                            expr: AST_VAR
                                name: "this"
                            prop: "cache_expiration"
                        expr: AST_CONDITIONAL
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "is_numeric"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "time"
                            true: AST_VAR
                                name: "time"
                            false: 0
                    1: AST_RETURN
                        expr: AST_VAR
                            name: "this"
                returnType: null
                __declId: 10
            19: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_display"
                docComment: "/**
                	 * Display Output
                	 *
                	 * All "view" data is automatically put into this variable by the controller class:
                	 *
                	 * $this->final_output
                	 *
                	 * This function sends the finalized output data to the browser along
                	 * with any server headers and profile data. It also stops the
                	 * benchmark timer so the page rendering speed and memory usage can be shown.
                	 *
                	 * @param 	string
                	 * @return	mixed
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "output"
                        default: ""
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_GLOBAL
                        var: AST_VAR
                            name: "BM"
                    1: AST_GLOBAL
                        var: AST_VAR
                            name: "CFG"
                    2: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "class_exists"
                                args: AST_ARG_LIST
                                    0: "CI_Controller"
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN_REF
                                    var: AST_VAR
                                        name: "CI"
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "get_instance"
                                        args: AST_ARG_LIST
                    3: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_VAR
                                    name: "output"
                                right: ""
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN_REF
                                    var: AST_VAR
                                        name: "output"
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "final_output"
                    4: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_BINARY_OP
                                    flags: BINARY_BOOL_AND (259)
                                    left: AST_BINARY_OP
                                        flags: BINARY_IS_GREATER (256)
                                        left: AST_PROP
                                            expr: AST_VAR
                                                name: "this"
                                            prop: "cache_expiration"
                                        right: 0
                                    right: AST_ISSET
                                        var: AST_VAR
                                            name: "CI"
                                right: AST_UNARY_OP
                                    flags: UNARY_BOOL_NOT (13)
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "method_exists"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "CI"
                                            1: "_output"
                            stmts: AST_STMT_LIST
                                0: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "this"
                                    method: "_write_cache"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "output"
                    5: AST_ASSIGN
                        var: AST_VAR
                            name: "elapsed"
                        expr: AST_METHOD_CALL
                            expr: AST_VAR
                                name: "BM"
                            method: "elapsed_time"
                            args: AST_ARG_LIST
                                0: "total_execution_time_start"
                                1: "total_execution_time_end"
                    6: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_IDENTICAL (15)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "parse_exec_vars"
                                right: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "TRUE"
                            stmts: AST_STMT_LIST
                                0: AST_ASSIGN
                                    var: AST_VAR
                                        name: "memory"
                                    expr: AST_CONDITIONAL
                                        cond: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "function_exists"
                                            args: AST_ARG_LIST
                                                0: "memory_get_usage"
                                        true: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "round"
                                                args: AST_ARG_LIST
                                                    0: AST_BINARY_OP
                                                        flags: BINARY_DIV (4)
                                                        left: AST_BINARY_OP
                                                            flags: BINARY_DIV (4)
                                                            left: AST_CALL
                                                                expr: AST_NAME
                                                                    flags: NAME_NOT_FQ (1)
                                                                    name: "memory_get_usage"
                                                                args: AST_ARG_LIST
                                                            right: 1024
                                                        right: 1024
                                                    1: 2
                                            right: "MB"
                                        false: "0"
                                1: AST_ASSIGN
                                    var: AST_VAR
                                        name: "output"
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "str_replace"
                                        args: AST_ARG_LIST
                                            0: AST_ARRAY
                                                flags: ARRAY_SYNTAX_LONG (2)
                                                0: AST_ARRAY_ELEM
                                                    flags: 0
                                                    value: "{elapsed_time}"
                                                    key: null
                                                1: AST_ARRAY_ELEM
                                                    flags: 0
                                                    value: "{memory_usage}"
                                                    key: null
                                            1: AST_ARRAY
                                                flags: ARRAY_SYNTAX_LONG (2)
                                                0: AST_ARRAY_ELEM
                                                    flags: 0
                                                    value: AST_VAR
                                                        name: "elapsed"
                                                    key: null
                                                1: AST_ARRAY_ELEM
                                                    flags: 0
                                                    value: AST_VAR
                                                        name: "memory"
                                                    key: null
                                            2: AST_VAR
                                                name: "output"
                    7: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_BINARY_OP
                                    flags: BINARY_BOOL_AND (259)
                                    left: AST_BINARY_OP
                                        flags: BINARY_BOOL_AND (259)
                                        left: AST_BINARY_OP
                                            flags: BINARY_BOOL_AND (259)
                                            left: AST_BINARY_OP
                                                flags: BINARY_IS_IDENTICAL (15)
                                                left: AST_METHOD_CALL
                                                    expr: AST_VAR
                                                        name: "CFG"
                                                    method: "item"
                                                    args: AST_ARG_LIST
                                                        0: "compress_output"
                                                right: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "TRUE"
                                            right: AST_BINARY_OP
                                                flags: BINARY_IS_EQUAL (17)
                                                left: AST_PROP
                                                    expr: AST_VAR
                                                        name: "this"
                                                    prop: "_zlib_oc"
                                                right: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "FALSE"
                                        right: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "extension_loaded"
                                            args: AST_ARG_LIST
                                                0: "zlib"
                                    right: AST_ISSET
                                        var: AST_DIM
                                            expr: AST_VAR
                                                name: "_SERVER"
                                            dim: "HTTP_ACCEPT_ENCODING"
                                right: AST_BINARY_OP
                                    flags: BINARY_IS_NOT_IDENTICAL (16)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "strpos"
                                        args: AST_ARG_LIST
                                            0: AST_DIM
                                                expr: AST_VAR
                                                    name: "_SERVER"
                                                dim: "HTTP_ACCEPT_ENCODING"
                                            1: "gzip"
                                    right: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                            stmts: AST_STMT_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "ob_start"
                                    args: AST_ARG_LIST
                                        0: "ob_gzhandler"
                    8: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_GREATER (256)
                                left: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "count"
                                    args: AST_ARG_LIST
                                        0: AST_PROP
                                            expr: AST_VAR
                                                name: "this"
                                            prop: "headers"
                                right: 0
                            stmts: AST_STMT_LIST
                                0: AST_FOREACH
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "this"
                                        prop: "headers"
                                    value: AST_VAR
                                        name: "header"
                                    key: null
                                    stmts: AST_STMT_LIST
                                        0: AST_UNARY_OP
                                            flags: UNARY_SILENCE (260)
                                            expr: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "header"
                                                args: AST_ARG_LIST
                                                    0: AST_DIM
                                                        expr: AST_VAR
                                                            name: "header"
                                                        dim: 0
                                                    1: AST_DIM
                                                        expr: AST_VAR
                                                            name: "header"
                                                        dim: 1
                    9: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_UNARY_OP
                                flags: UNARY_BOOL_NOT (13)
                                expr: AST_ISSET
                                    var: AST_VAR
                                        name: "CI"
                            stmts: AST_STMT_LIST
                                0: AST_ECHO
                                    expr: AST_VAR
                                        name: "output"
                                1: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "debug"
                                        1: "Final output sent to browser"
                                2: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "debug"
                                        1: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: "Total execution time: "
                                            right: AST_VAR
                                                name: "elapsed"
                                3: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "TRUE"
                    10: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "enable_profiler"
                                right: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "TRUE"
                            stmts: AST_STMT_LIST
                                0: AST_METHOD_CALL
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "CI"
                                        prop: "load"
                                    method: "library"
                                    args: AST_ARG_LIST
                                        0: "profiler"
                                1: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_UNARY_OP
                                            flags: UNARY_BOOL_NOT (13)
                                            expr: AST_EMPTY
                                                expr: AST_PROP
                                                    expr: AST_VAR
                                                        name: "this"
                                                    prop: "_profiler_sections"
                                        stmts: AST_STMT_LIST
                                            0: AST_METHOD_CALL
                                                expr: AST_PROP
                                                    expr: AST_VAR
                                                        name: "CI"
                                                    prop: "profiler"
                                                method: "set_sections"
                                                args: AST_ARG_LIST
                                                    0: AST_PROP
                                                        expr: AST_VAR
                                                            name: "this"
                                                        prop: "_profiler_sections"
                                2: AST_ASSIGN
                                    var: AST_VAR
                                        name: "output"
                                    expr: AST_BINARY_OP
                                        flags: BINARY_CONCAT (8)
                                        left: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "preg_replace"
                                            args: AST_ARG_LIST
                                                0: "|</body>.*?</html>|is"
                                                1: ""
                                                2: AST_VAR
                                                    name: "output"
                                                3: AST_UNARY_OP
                                                    flags: UNARY_MINUS (262)
                                                    expr: 1
                                                4: AST_VAR
                                                    name: "count"
                                        right: AST_METHOD_CALL
                                            expr: AST_PROP
                                                expr: AST_VAR
                                                    name: "CI"
                                                prop: "profiler"
                                            method: "run"
                                            args: AST_ARG_LIST
                                3: AST_IF
                                    0: AST_IF_ELEM
                                        cond: AST_BINARY_OP
                                            flags: BINARY_IS_GREATER (256)
                                            left: AST_VAR
                                                name: "count"
                                            right: 0
                                        stmts: AST_STMT_LIST
                                            0: AST_ASSIGN_OP
                                                flags: BINARY_CONCAT (8)
                                                var: AST_VAR
                                                    name: "output"
                                                expr: "</body></html>"
                    11: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "method_exists"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "CI"
                                    1: "_output"
                            stmts: AST_STMT_LIST
                                0: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "CI"
                                    method: "_output"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "output"
                        1: AST_IF_ELEM
                            cond: null
                            stmts: AST_STMT_LIST
                                0: AST_ECHO
                                    expr: AST_VAR
                                        name: "output"
                    12: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: "Final output sent to browser"
                    13: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: "Total execution time: "
                                right: AST_VAR
                                    name: "elapsed"
                returnType: null
                __declId: 11
            20: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_write_cache"
                docComment: "/**
                	 * Write a Cache File
                	 *
                	 * @param 	string
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: 0
                        type: null
                        name: "output"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN_REF
                        var: AST_VAR
                            name: "CI"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "get_instance"
                            args: AST_ARG_LIST
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "path"
                        expr: AST_METHOD_CALL
                            expr: AST_PROP
                                expr: AST_VAR
                                    name: "CI"
                                prop: "config"
                            method: "item"
                            args: AST_ARG_LIST
                                0: "cache_path"
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "cache_path"
                        expr: AST_CONDITIONAL
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_VAR
                                    name: "path"
                                right: ""
                            true: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "APPPATH"
                                right: "cache/"
                            false: AST_VAR
                                name: "path"
                    3: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_OR (258)
                                left: AST_UNARY_OP
                                    flags: UNARY_BOOL_NOT (13)
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "is_dir"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "cache_path"
                                right: AST_UNARY_OP
                                    flags: UNARY_BOOL_NOT (13)
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "is_really_writable"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "cache_path"
                            stmts: AST_STMT_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "error"
                                        1: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: "Unable to write cache file: "
                                            right: AST_VAR
                                                name: "cache_path"
                                1: AST_RETURN
                                    expr: null
                    4: AST_ASSIGN
                        var: AST_VAR
                            name: "uri"
                        expr: AST_BINARY_OP
                            flags: BINARY_CONCAT (8)
                            left: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: AST_METHOD_CALL
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "CI"
                                        prop: "config"
                                    method: "item"
                                    args: AST_ARG_LIST
                                        0: "base_url"
                                right: AST_METHOD_CALL
                                    expr: AST_PROP
                                        expr: AST_VAR
                                            name: "CI"
                                        prop: "config"
                                    method: "item"
                                    args: AST_ARG_LIST
                                        0: "index_page"
                            right: AST_METHOD_CALL
                                expr: AST_PROP
                                    expr: AST_VAR
                                        name: "CI"
                                    prop: "uri"
                                method: "uri_string"
                                args: AST_ARG_LIST
                    5: AST_ASSIGN_OP
                        flags: BINARY_CONCAT (8)
                        var: AST_VAR
                            name: "cache_path"
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "md5"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "uri"
                    6: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_UNARY_OP
                                flags: UNARY_BOOL_NOT (13)
                                expr: AST_ASSIGN
                                    var: AST_VAR
                                        name: "fp"
                                    expr: AST_UNARY_OP
                                        flags: UNARY_SILENCE (260)
                                        expr: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "fopen"
                                            args: AST_ARG_LIST
                                                0: AST_VAR
                                                    name: "cache_path"
                                                1: AST_CONST
                                                    name: AST_NAME
                                                        flags: NAME_NOT_FQ (1)
                                                        name: "FOPEN_WRITE_CREATE_DESTRUCTIVE"
                            stmts: AST_STMT_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "error"
                                        1: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: "Unable to write cache file: "
                                            right: AST_VAR
                                                name: "cache_path"
                                1: AST_RETURN
                                    expr: null
                    7: AST_ASSIGN
                        var: AST_VAR
                            name: "expire"
                        expr: AST_BINARY_OP
                            flags: BINARY_ADD (1)
                            left: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "time"
                                args: AST_ARG_LIST
                            right: AST_BINARY_OP
                                flags: BINARY_MUL (3)
                                left: AST_PROP
                                    expr: AST_VAR
                                        name: "this"
                                    prop: "cache_expiration"
                                right: 60
                    8: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "flock"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "fp"
                                    1: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "LOCK_EX"
                            stmts: AST_STMT_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "fwrite"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "fp"
                                        1: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: AST_BINARY_OP
                                                flags: BINARY_CONCAT (8)
                                                left: AST_VAR
                                                    name: "expire"
                                                right: "TS--->"
                                            right: AST_VAR
                                                name: "output"
                                1: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "flock"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "fp"
                                        1: AST_CONST
                                            name: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "LOCK_UN"
                        1: AST_IF_ELEM
                            cond: null
                            stmts: AST_STMT_LIST
                                0: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "error"
                                        1: AST_BINARY_OP
                                            flags: BINARY_CONCAT (8)
                                            left: "Unable to secure a file lock for file at: "
                                            right: AST_VAR
                                                name: "cache_path"
                                1: AST_RETURN
                                    expr: null
                    9: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "fclose"
                        args: AST_ARG_LIST
                            0: AST_VAR
                                name: "fp"
                    10: AST_UNARY_OP
                        flags: UNARY_SILENCE (260)
                        expr: AST_CALL
                            expr: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "chmod"
                            args: AST_ARG_LIST
                                0: AST_VAR
                                    name: "cache_path"
                                1: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "FILE_WRITE_MODE"
                    11: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: "Cache file written: "
                                right: AST_VAR
                                    name: "cache_path"
                returnType: null
                __declId: 12
            21: AST_METHOD
                flags: MODIFIER_PUBLIC (256)
                name: "_display_cache"
                docComment: "/**
                	 * Update/serve a cached file
                	 *
                	 * @param 	object	config class
                	 * @param 	object	uri class
                	 * @return	void
                	 */"
                params: AST_PARAM_LIST
                    0: AST_PARAM
                        flags: PARAM_REF (1)
                        type: null
                        name: "CFG"
                        default: null
                    1: AST_PARAM
                        flags: PARAM_REF (1)
                        type: null
                        name: "URI"
                        default: null
                uses: null
                stmts: AST_STMT_LIST
                    0: AST_ASSIGN
                        var: AST_VAR
                            name: "cache_path"
                        expr: AST_CONDITIONAL
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_EQUAL (17)
                                left: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "CFG"
                                    method: "item"
                                    args: AST_ARG_LIST
                                        0: "cache_path"
                                right: ""
                            true: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: AST_CONST
                                    name: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "APPPATH"
                                right: "cache/"
                            false: AST_METHOD_CALL
                                expr: AST_VAR
                                    name: "CFG"
                                method: "item"
                                args: AST_ARG_LIST
                                    0: "cache_path"
                    1: AST_ASSIGN
                        var: AST_VAR
                            name: "uri"
                        expr: AST_BINARY_OP
                            flags: BINARY_CONCAT (8)
                            left: AST_BINARY_OP
                                flags: BINARY_CONCAT (8)
                                left: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "CFG"
                                    method: "item"
                                    args: AST_ARG_LIST
                                        0: "base_url"
                                right: AST_METHOD_CALL
                                    expr: AST_VAR
                                        name: "CFG"
                                    method: "item"
                                    args: AST_ARG_LIST
                                        0: "index_page"
                            right: AST_PROP
                                expr: AST_VAR
                                    name: "URI"
                                prop: "uri_string"
                    2: AST_ASSIGN
                        var: AST_VAR
                            name: "filepath"
                        expr: AST_BINARY_OP
                            flags: BINARY_CONCAT (8)
                            left: AST_VAR
                                name: "cache_path"
                            right: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "md5"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "uri"
                    3: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_OR (258)
                                left: AST_UNARY_OP
                                    flags: UNARY_BOOL_NOT (13)
                                    expr: AST_UNARY_OP
                                        flags: UNARY_SILENCE (260)
                                        expr: AST_CALL
                                            expr: AST_NAME
                                                flags: NAME_NOT_FQ (1)
                                                name: "file_exists"
                                            args: AST_ARG_LIST
                                                0: AST_VAR
                                                    name: "filepath"
                                right: AST_UNARY_OP
                                    flags: UNARY_BOOL_NOT (13)
                                    expr: AST_ASSIGN
                                        var: AST_VAR
                                            name: "fp"
                                        expr: AST_UNARY_OP
                                            flags: UNARY_SILENCE (260)
                                            expr: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "fopen"
                                                args: AST_ARG_LIST
                                                    0: AST_VAR
                                                        name: "filepath"
                                                    1: AST_CONST
                                                        name: AST_NAME
                                                            flags: NAME_NOT_FQ (1)
                                                            name: "FOPEN_READ"
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    4: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "flock"
                        args: AST_ARG_LIST
                            0: AST_VAR
                                name: "fp"
                            1: AST_CONST
                                name: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "LOCK_SH"
                    5: AST_ASSIGN
                        var: AST_VAR
                            name: "cache"
                        expr: AST_CONDITIONAL
                            cond: AST_BINARY_OP
                                flags: BINARY_IS_GREATER (256)
                                left: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "filesize"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "filepath"
                                right: 0
                            true: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "fread"
                                args: AST_ARG_LIST
                                    0: AST_VAR
                                        name: "fp"
                                    1: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "filesize"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "filepath"
                            false: ""
                    6: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "flock"
                        args: AST_ARG_LIST
                            0: AST_VAR
                                name: "fp"
                            1: AST_CONST
                                name: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "LOCK_UN"
                    7: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "fclose"
                        args: AST_ARG_LIST
                            0: AST_VAR
                                name: "fp"
                    8: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_UNARY_OP
                                flags: UNARY_BOOL_NOT (13)
                                expr: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "preg_match"
                                    args: AST_ARG_LIST
                                        0: "/(\d+TS--->)/"
                                        1: AST_VAR
                                            name: "cache"
                                        2: AST_VAR
                                            name: "match"
                            stmts: AST_STMT_LIST
                                0: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    9: AST_IF
                        0: AST_IF_ELEM
                            cond: AST_BINARY_OP
                                flags: BINARY_BOOL_AND (259)
                                left: AST_BINARY_OP
                                    flags: BINARY_IS_GREATER_OR_EQUAL (257)
                                    left: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "time"
                                        args: AST_ARG_LIST
                                    right: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "trim"
                                        args: AST_ARG_LIST
                                            0: AST_CALL
                                                expr: AST_NAME
                                                    flags: NAME_NOT_FQ (1)
                                                    name: "str_replace"
                                                args: AST_ARG_LIST
                                                    0: "TS--->"
                                                    1: ""
                                                    2: AST_DIM
                                                        expr: AST_VAR
                                                            name: "match"
                                                        dim: 1
                                right: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "is_really_writable"
                                    args: AST_ARG_LIST
                                        0: AST_VAR
                                            name: "cache_path"
                            stmts: AST_STMT_LIST
                                0: AST_UNARY_OP
                                    flags: UNARY_SILENCE (260)
                                    expr: AST_CALL
                                        expr: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "unlink"
                                        args: AST_ARG_LIST
                                            0: AST_VAR
                                                name: "filepath"
                                1: AST_CALL
                                    expr: AST_NAME
                                        flags: NAME_NOT_FQ (1)
                                        name: "log_message"
                                    args: AST_ARG_LIST
                                        0: "debug"
                                        1: "Cache file has expired. File deleted."
                                2: AST_RETURN
                                    expr: AST_CONST
                                        name: AST_NAME
                                            flags: NAME_NOT_FQ (1)
                                            name: "FALSE"
                    10: AST_METHOD_CALL
                        expr: AST_VAR
                            name: "this"
                        method: "_display"
                        args: AST_ARG_LIST
                            0: AST_CALL
                                expr: AST_NAME
                                    flags: NAME_NOT_FQ (1)
                                    name: "str_replace"
                                args: AST_ARG_LIST
                                    0: AST_DIM
                                        expr: AST_VAR
                                            name: "match"
                                        dim: 0
                                    1: ""
                                    2: AST_VAR
                                        name: "cache"
                    11: AST_CALL
                        expr: AST_NAME
                            flags: NAME_NOT_FQ (1)
                            name: "log_message"
                        args: AST_ARG_LIST
                            0: "debug"
                            1: "Cache file is current. Sending it to browser."
                    12: AST_RETURN
                        expr: AST_CONST
                            name: AST_NAME
                                flags: NAME_NOT_FQ (1)
                                name: "TRUE"
                returnType: null
                __declId: 13
        __declId: 14