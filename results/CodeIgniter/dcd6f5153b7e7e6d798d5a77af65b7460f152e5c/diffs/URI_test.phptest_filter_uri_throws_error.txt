	public function test_filter_uri_throws_error()
	{
		$this->setExpectedException('RuntimeException');

		$this->uri->config->set_item('enable_query_strings', FALSE);
		$this->uri->_set_permitted_uri_chars('a-z 0-9~%.:_\-');
		$segment = '$this()'; // filter_uri() accepts by reference
		$this->uri->filter_uri($segment);
	}

	// --------------------------------------------------------------------

||||||||	public function test_filter_uri_throws_error()
	{
		define('UTF8_ENABLED', FALSE);
		$this->setExpectedException('RuntimeException');

		$this->uri->config->set_item('enable_query_strings', FALSE);
		$this->uri->_set_permitted_uri_chars('a-z 0-9~%.:_\-');
		$segment = '$this()'; // filter_uri() accepts by reference
		$this->uri->filter_uri($segment);
	}

	// --------------------------------------------------------------------

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR))))