||||||||	private function shareNotebook($notebookId,$toUserId,$toUMASK){
		$notebook=User::find(Auth::user()->id)->notebooks()
						->wherePivot('umask','=',PaperworkHelpers::UMASK_OWNER)
						->where('notebooks.id', '=', $notebookId)
						->whereNull('notebooks.deleted_at')
						->first();
		if(is_null($notebook)){
		    return null;
		}
		$toUser=User::find($toUserId);
		if(is_null($toUser))
		    return null; //user with which we want to share the note doesn't exist
		$toUser=$notebook->users()->where('users.id', '=', $toUserId)->first();
		if (!is_null($toUser)){
		    if($toUser->pivot->umask==PaperworkHelpers::UMASK_OWNER)
			return null;
		    if($toUMASK==0){//set UMASK to 0 to stop sharing
			$notebook->users()->detach($toUserId);
			$notebook->save();
			return $notebook;
		    }
		    if($toUser->pivot->umask!=$toUMASK){
			$notebook->users()->updateExistingPivot($toUserId,array('umask' => $toUMASK));
			$notebook->save();
			return $notebook;
		    }
		}
		if (is_null($toUser)) {
		    $notebook->users()->attach($toUserId, array('umask' => $toUMASK)); //add user
		    // return PaperworkHelpers::apiResponse(PaperworkHelpers::STATUS_NOTFOUND, array('item'=>'user'));
		    $notebook->save();
		    return $notebook;
		}
	}
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_STATIC_CALL)))))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))))