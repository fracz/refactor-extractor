    private function destroyNote($notebookId, $noteId)
    {
        $note = User::find(Auth::user()->id)
                    ->notes()
                    ->where('notes.id', '=', $noteId)
                    ->whereNull('notes.deleted_at')
                    ->first();

        if (is_null($note)) {
            // return PaperworkHelpers::apiResponse(PaperworkHelpers::STATUS_NOTFOUND, array('item'=>'note', 'id'=>$noteId));
            return null;
        }

        $deletedNote = $note;
        $note->delete();
        // return PaperworkHelpers::apiResponse(PaperworkHelpers::STATUS_SUCCESS, $deletedNote);
        return $deletedNote;
    }

||||||||    private function destroyNote($notebookId, $noteId)
    {
        //only owner of the note can destroy it
        $note = User::find(Auth::user()->id)
                    ->notes()
                    ->wherePivot('umask','=',PaperworkHelpers::UMASK_OWNER)
                    ->where('notes.id', '=', $noteId)
                    ->whereNull('notes.deleted_at')
                    ->first();

        if (is_null($note)) {
            // return PaperworkHelpers::apiResponse(PaperworkHelpers::STATUS_NOTFOUND, array('item'=>'note', 'id'=>$noteId));
            return null;
        }

        $deletedNote = $note;
        $note->delete();
        // return PaperworkHelpers::apiResponse(PaperworkHelpers::STATUS_SUCCESS, $deletedNote);
        return $deletedNote;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (AST_PROP
                                    (AST_STATIC_CALL)))))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_STATIC_CALL)))))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR)))
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))