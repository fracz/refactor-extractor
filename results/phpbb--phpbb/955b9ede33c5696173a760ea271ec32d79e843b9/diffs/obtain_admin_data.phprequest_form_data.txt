	protected function request_form_data($use_request_data = false)
	{
		if ($use_request_data)
		{
			$admin_username	= $this->io_handler->get_input('admin_name', '', true);
			$admin_email	= $this->io_handler->get_input('board_email', '', true);
		}
		else
		{
			$admin_username	= '';
			$admin_email	= '';
		}

		$admin_form = array(
			'admin_name'	=> array(
				'label'			=> 'ADMIN_USERNAME',
				'description'	=> 'ADMIN_USERNAME_EXPLAIN',
				'type'			=> 'text',
				'default'		=> $admin_username,
			),
			'board_email'	=> array(
				'label'		=> 'CONTACT_EMAIL',
				'type'		=> 'email',
				'default'	=> $admin_email,
			),
			'admin_pass1'	=> array(
				'label'			=> 'ADMIN_PASSWORD',
				'description'	=> 'ADMIN_PASSWORD_EXPLAIN',
				'type'			=> 'password',
			),
			'admin_pass2'	=> array(
				'label'	=> 'ADMIN_PASSWORD_CONFIRM',
				'type'	=> 'password',
			),
			'submit_admin'	=> array(
				'label'	=> 'SUBMIT',
				'type'	=> 'submit',
			),
		);

		$this->io_handler->add_user_form_group('ADMIN_CONFIG', $admin_form);

		// Require user interaction
		$this->io_handler->send_response();
		throw new user_interaction_required_exception();
	}

	/**
	 * Check admin data
	 *
	 * @param string	$username	Admin username
	 * @param string	$pass1		Admin password
	 * @param string	$pass2		Admin password confirmation
	 * @param string	$email		Admin e-mail address
	 *
	 * @return bool	True if data is valid, false otherwise
	 */
||||||||	protected function request_form_data($use_request_data = false)
	{
		if ($use_request_data)
		{
			$admin_username	= $this->io_handler->get_input('admin_name', '', true);
			$admin_email	= $this->io_handler->get_input('board_email', '', true);
		}
		else
		{
			$admin_username	= '';
			$admin_email	= '';
		}

		$admin_form = array(
			'admin_name'	=> array(
				'label'			=> 'ADMIN_USERNAME',
				'description'	=> 'ADMIN_USERNAME_EXPLAIN',
				'type'			=> 'text',
				'default'		=> $admin_username,
			),
			'board_email'	=> array(
				'label'		=> 'CONTACT_EMAIL',
				'type'		=> 'email',
				'default'	=> $admin_email,
			),
			'admin_pass1'	=> array(
				'label'			=> 'ADMIN_PASSWORD',
				'description'	=> 'ADMIN_PASSWORD_EXPLAIN',
				'type'			=> 'password',
			),
			'admin_pass2'	=> array(
				'label'	=> 'ADMIN_PASSWORD_CONFIRM',
				'type'	=> 'password',
			),
			'submit_admin'	=> array(
				'label'	=> 'SUBMIT',
				'type'	=> 'submit',
			),
		);

		$this->io_handler->add_user_form_group('ADMIN_CONFIG', $admin_form);

		// Require user interaction
		throw new user_interaction_required_exception();
	}

	/**
	 * Check admin data
	 *
	 * @param string	$username	Admin username
	 * @param string	$pass1		Admin password
	 * @param string	$pass2		Admin password confirmation
	 * @param string	$email		Admin e-mail address
	 *
	 * @return bool	True if data is valid, false otherwise
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_THROW
        (AST_NEW)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_VAR)))
    (AST_THROW
        (AST_NEW)))