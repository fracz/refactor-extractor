	public function test_groups_manage()
	{
		$values = array();
		$this->login();
		$this->add_lang(array('ucp', 'acp/groups'));

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$form['group_colour']->setValue('#AA0000');
		$crawler = $this->client->submit($form);
		$this->assertContains($this->lang('GROUP_UPDATED'), $crawler->text());

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$values = $form->getValues();
		$this->assertContains('AA0000', $values['group_colour']);
		$form['group_colour']->setValue('AA0000');
		$crawler = $this->client->submit($form);
		$this->assertContains($this->lang('GROUP_UPDATED'), $crawler->text());

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$values = $form->getValues();
		$this->assertContains('AA0000', $values['group_colour']);
		$form['group_colour']->setValue('AA0000v');
		$crawler = $this->client->submit($form);
		$this->assertContains($this->lang('GROUP_UPDATED'), $crawler->text());

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$values = $form->getValues();
		$this->assertContains('AA0000', $values['group_colour']);
		$form['group_colour']->setValue('vAA0000');
		$crawler = $this->client->submit($form);
		$this->assertContains($this->lang('GROUP_UPDATED'), $crawler->text());

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$values = $form->getValues();
		$this->assertContains('vAA000', $values['group_colour']);
	}
}||||||||	public function test_groups_manage($input, $expected)
	{
		$this->login();
		$this->add_lang(array('ucp', 'acp/groups'));

		$crawler = $this->request('GET', 'ucp.php?i=groups&mode=manage&action=edit&g=5&sid=' . $this->sid);
		$this->assert_response_success();
		$form = $crawler->selectButton($this->lang('SUBMIT'))->form();
		$form['group_colour']->setValue($input);
		$crawler = $this->client->submit($form);
		$this->assertContains($this->lang($expected), $crawler->text());
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)))))