||||||||	function lock()
	{
		// For systems that can't have two processes opening
		// one file for writing simultaneously
		if (file_exists($this->cache_file . '.lock'))
		{
			$mode = 'rb';
		}
		else
		{
			$mode = 'wb';
		}
		$lock_fp = @fopen($this->cache_file . '.lock', $mode);
		// Two processes may attempt to create lock file at the same time.
		// Have the losing process try opening the lock file again for reading
		// on the assumption that the winning process created it
		if (!$lock_fp && $mode == 'wb')
		{
			// Assign to $mode for the check in chmod below
			$mode = 'rb';
			$lock_fp = @fopen($this->cache_file . '.lock', $mode);
		}
		if ($lock_fp && $mode == 'wb')
		{
			// Only need to set mode when the lock file is written
			@chmod($this->cache_file . '.lock', 0666);
		}
		if ($lock_fp)
		{
			@flock($lock_fp, LOCK_EX);
		}
		return $lock_fp;
	}

	/**
	* Releases lock on queue cache file, using resource obtained from lock()
	*/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))