	public function test_move_file($tmp_name, $realname, $mime_type, $extension, $error, $expected)
	{
		// Global $phpbb_root_path and $phpEx are required by phpbb_chmod
		global $phpbb_root_path, $phpEx;
		$this->phpbb_root_path = '';

		$upload = new phpbb_mock_fileupload();
		$upload->max_filesize = self::UPLOAD_MAX_FILESIZE;

		$filespec = $this->get_filespec(array(
			'tmp_name' => $this->path . 'copies/' . $tmp_name,
			'name' => $realname,
			'type' => $mime_type,
		));
		$filespec->extension = $extension;
		$filespec->upload = $upload;
		$filespec->local = true;

		$this->assertEquals($expected, $filespec->move_file($this->path . 'copies'));
		$this->assertEquals($filespec->file_moved, file_exists($this->path . 'copies/' . $realname));
		if ($error)
		{
			$this->assertEquals($error, $filespec->error[0]);
		}

		$this->phpbb_root_path = $phpbb_root_path;
	}

	/**
	* @dataProvider clean_filename_variables
	*/
||||||||	public function test_move_file($tmp_name, $realname, $mime_type, $extension, $error, $expected)
	{
		// Global $phpbb_root_path and $phpEx are required by phpbb_chmod
		global $phpbb_root_path, $phpEx;
		$this->phpbb_root_path = '';

		$upload = new phpbb_mock_fileupload();
		$upload->max_filesize = self::UPLOAD_MAX_FILESIZE;

		$filespec = $this->get_filespec(array(
			'tmp_name' => $this->path . 'copies/' . $tmp_name,
			'name' => $realname,
			'type' => $mime_type,
		));
		$filespec->extension = $extension;
		$filespec->set_upload_namespace($upload);
		$filespec->local = true;

		$this->assertEquals($expected, $filespec->move_file($this->path . 'copies'));
		$this->assertEquals($filespec->file_moved, file_exists($this->path . 'copies/' . $realname));
		if ($error)
		{
			$this->assertEquals($error, $filespec->error[0]);
		}

		$this->phpbb_root_path = $phpbb_root_path;
	}

	/**
	* @dataProvider clean_filename_variables
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))