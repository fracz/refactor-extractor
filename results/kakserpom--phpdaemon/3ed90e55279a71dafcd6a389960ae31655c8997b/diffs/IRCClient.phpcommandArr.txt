||||||||	public function commandArr($cmd, $args = array()) {
		if (!is_array($args)) {
			return false;
		}
		if (ctype_digit($cmd)) {
			$cmd = IRC::getCommandByCode((int) $cmd);
		}
		$line = $cmd;
		for ($i = 0, $s = sizeof($args); $i < $s; ++$i) {
			$line .= ($i + 1 === $s ? ' :' : ' ') . $args[$i];
		}
		Daemon::log('commandArr('.json_encode(func_get_args()).') --> '.json_encode($line));
		$this->writeln($line);
		if (!in_array($cmd, array('PONG'))) {
			Daemon::log('->->->-> '.$line);
		}
	}


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CAST
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)
                        (SCALAR))
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_CALL))))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))))))