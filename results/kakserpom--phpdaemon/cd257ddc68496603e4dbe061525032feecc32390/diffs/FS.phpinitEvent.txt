	public static function initEvent() {
		if (!self::$supported) {
			return;
		}
		self::updateConfig();
		self::$fd = eio_get_event_stream();
		self::$ev = new Event(Daemon::$process->eventBase, self::$fd, Event::READ | Event::PERSIST, function ($fd, $events, $arg) {
			while (eio_nreqs()) {
	        	eio_poll();
		    }
		});
		self::$ev->add();
	}

||||||||	public static function initEvent() {
		if (!self::$supported) {
			return;
		}
		self::updateConfig();
		self::$fd = eio_get_event_stream();
		self::$ev = new Event(Daemon::$process->eventBase, self::$fd, Event::READ | Event::PERSIST, function ($fd, $events, $arg) {
			while (eio_nreqs()) {
	        	eio_poll();
		    }
		});
		self::$ev->add();
	}


	/**
	 * Block until all FS events are completed
	 * @return void
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW
            (
                (AST_PROP
                    (AST_STATIC_PROP))
                (AST_STATIC_PROP)
                (AST_BINARY_OP
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_WHILE
                            (AST_CALL)
                            (
                                (AST_CALL))))))))
    (AST_METHOD_CALL
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_NEW
            (
                (AST_PROP
                    (AST_STATIC_PROP))
                (AST_STATIC_PROP)
                (AST_BINARY_OP
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_WHILE
                            (AST_CALL)
                            (
                                (AST_CALL))))))))
    (AST_METHOD_CALL
        (AST_STATIC_PROP)))