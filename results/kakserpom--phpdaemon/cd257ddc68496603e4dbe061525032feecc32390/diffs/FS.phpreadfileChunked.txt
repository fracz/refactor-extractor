	public static function readfileChunked($path, $cb, $chunkcb, $pri = EIO_PRI_DEFAULT) {
		if (!FS::$supported) {
			call_user_func($chunkcb, $path, $r = readfile($path));
			call_user_func($cb, $r !== false);
			return;
		}
		FS::open($path, 'r!', function ($file) use ($path, $cb, $chunkcb, $pri) {
			if (!$file) {
				call_user_func($cb, $path, false);
				return;
			}
			$file->readAllChunked($cb, $chunkcb, $pri);
		}, null, $pri);
	}

||||||||	public static function readfileChunked($path, $cb, $chunkcb, $pri = EIO_PRI_DEFAULT) {
		if (!FS::$supported) {
			call_user_func($chunkcb, $path, $r = readfile($path));
			call_user_func($cb, $r !== false);
			return;
		}
		FS::open($path, 'r!', function ($file) use ($path, $cb, $chunkcb, $pri) {
			if (!$file) {
				call_user_func($cb, $path, false);
				return;
			}
			$file->readAllChunked($cb, $chunkcb, $pri);
		}, null, $pri);
	}


	/**
	 * Returns random temporary file name
	 * @param string Directory
	 * @param string Prefix
	 * @return string Path
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)))
                                (AST_RETURN
                                    (NULL)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_CONST)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)))
                                (AST_RETURN
                                    (NULL)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_CONST)
            (AST_VAR))))