	public function connectTo($host, $port = 0, $class = null) {
		if ($class === null) {
			$class = $this->connectionClass;
		}
		$id = ++Daemon::$process->connCounter;
		$conn = $this->list[$id] = new $class(null, $id, $this);
		if (($port !== 0) && (@inet_pton($host) === false)) { // dirty condition check
			DNSClient::getInstance()->resolve($host, function($ip) use ($conn, $host, $port) {
				if ($ip === false) {
					Daemon::log(get_class($this).'->connectTo: enable to resolve domain: '.$host);
					return;
				}
				$conn->connectTo($ip, $port);
			});
		}
		else {
			$conn->connectTo($host, $port);
		}
		return $id;
	}

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PRE_INC
            (AST_PROP
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_NEW
                (AST_VAR)
                (
                    (AST_CONST)
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_VAR)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR)
                                (AST_CLOSURE_VAR))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))
                                                            (SCALAR))
                                                        (AST_VAR))))
                                            (AST_RETURN
                                                (NULL)))))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||