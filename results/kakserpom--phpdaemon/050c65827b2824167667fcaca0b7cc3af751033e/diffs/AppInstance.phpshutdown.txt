	public function shutdown($graceful = false) {
		if (Daemon::$config->logevents->value) {
			Daemon::log(__METHOD__ . ' invoked. Size of the queue: ' . sizeof($this->queue) . '.');
		}

		foreach ($this->queue as &$r) {
			if ($r instanceof stdClass) {
				continue;
			}

			$r->finish();
		}

		return $this->onShutdown();
	}

	/**
	 * Handle the request
	 * @param object Parent request
	 * @param object Upstream application  @todo is upstream really needed?
	 * @return object Request
	 */
||||||||	public function shutdown($graceful = false) {
		return $this->onShutdown();
	}

	/**
	 * Handle the request
	 * @param object Parent request
	 * @param object Upstream application  @todo is upstream really needed?
	 * @return object Request
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_MAGIC_CONST)
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))