	public function onReadEvent($buf, $arg = NULL) {
		if (Daemon::$config->logevents->value) {
			Daemon::log(__METHOD__ . '()');
		}

		while (($data = $this->read()) !== '') {
			if ($data === FALSE) {
				throw new Exception('read() returned false');
			}

			$this->buf .= $data;

			while (($l = $this->gets()) !== FALSE) {
				$this->onPacket(json_decode($l, TRUE));
			}
		}

		$this->eof();
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR)))))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)))))))
            (AST_ASSIGN_OP
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_WHILE
                (AST_BINARY_OP
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_CONST))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||