	public function onSlaveReady($code) {
		$reply =
			$this->ver // Version
			. chr($code) // Status
			. "\x00"; // Reserved

		if (
			Daemon::$useSockets
			&& socket_getsockname(Daemon::$process->pool[$this->connId], $address, $port)
		) {
			$reply .=
				(strpos($address, ':') === FALSE ? "\x01" : "\x04") // IPv4/IPv6
				. inet_pton($address) // Address
				. "\x00\x00"; //pack('n',$port) // Port
		} else {
			$reply .=
				"\x01"
				. "\x00\x00\x00\x00"
				. "\x00\x00";
		}

		$this->write($reply);
	}

	/**
	 * Event of SocketSession (asyncServer).
	 * @return void
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_STATIC_PROP))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST))
                                (SCALAR)
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||