||||||||    public function onAcceptEvent($stream, $events, $arg)
	{
		if ($events & EV_TIMEOUT)
		{
			$sockId = $arg[0];

			if ($this->timeout_cb !== NULL)
			{
				call_user_func($this->timeout_cb) ;
			}

			event_add($this->socketEvents[$sockId], $this->config->ev_timeout->value) ;
			return ;
		}

		parent::onAcceptEvent($stream, $events, $arg);
	}
/*
	public function onTimeout()
	{

	}
*/
}
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_PROP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR))))