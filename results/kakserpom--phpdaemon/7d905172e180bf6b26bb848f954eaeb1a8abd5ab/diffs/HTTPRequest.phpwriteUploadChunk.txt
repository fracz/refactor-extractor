	protected function writeUploadChunk($chunk, $last = false) {
		if ($this->mpartcurrent['error'] !== UPLOAD_ERR_OK) {
			// just drop the chunk
			return;
		}
		$this->upstream->freezeInput();
		$this->frozenInput = true;
		$this->mpartcurrent['fp']->write($chunk, function ($fp, $result) use ($last) {
			if ($last) {
				unset($this->mpartcurrent['fp']);
			}
			$this->upstream->unfreezeInput();
			$this->frozenInput = false;
			$this->stdin('');
		});
	}

	/**
	 * Parse request body
	 * @return void
	 */
||||||||	protected function writeUploadChunk() {
		$this->onUploadFileChunk();

	}

	/**
	 * Called when chunk of incoming file has arrived.
	 * @param string Chunk data
	 * @param boolean Last?
	 * @return void
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_VAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_UNSET
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)))