||||||||	public static function logFd($fd, $where) {
		$fdNo = @EventUtil::testfd($fd, false);
		$fdOk = EventUtil::testfd($fd, true);
		Daemon::$process->log(microtime(true) .'::' . $where. ' FD #' . $fdNo .' ('.Debug::dump($fd).') -- '.($fdOk ? 'OK' : 'BAD <<<========') . "\n" . Debug::backtrace());
	} // IOStream::logFd($this->fd, get_class($this).'::'.__METHOD__.':'.__LINE__);

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_UNARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_STATIC_PROP)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_CONST)))
                                                    (SCALAR))
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR))))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_STATIC_CALL)))))