	public function close() {
		if ($this->closed) {
			return;
		}
		$this->closed = true;
		if ($this->fdCacheKey !== null) {
			FS::$fdCache->invalidate($this->fdCacheKey);
		}
		if ($this->fd === null) {
			return;
		}

		if (!FS::$supported) {
			fclose($this->fd);
			return;
		}
		$r = eio_close($this->fd, EIO_PRI_MAX);
		$this->fd = null;
		return $r;
	}

||||||||	public function close() {
		if ($this->closed) {
			return;
		}
		$this->closed = true;
		if ($this->fdCacheKey !== null) {
			FS::$fdCache->invalidate($this->fdCacheKey);
		}
		if ($this->fd === null) {
			return;
		}

		if (!FS::$supported) {
			fclose($this->fd);
			return;
		}
		$r = eio_close($this->fd, EIO_PRI_MAX);
		$this->fd = null;
		return $r;
	}

	/**
	 * Destructor
	 * @return void
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_PROP))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))