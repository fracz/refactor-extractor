||||||||	public function setTimeouts($read, $write) {
		parent::setTimeouts($read, $write);
		if ($this->fd !== null) {
			$this->setOption(EventUtil::SOL_SOCKET, EventUtil::SO_SNDTIMEO, ['sec' => $this->timeout, 'usec' => 0]);
			$this->setOption(EventUtil::SOL_SOCKET, EventUtil::SO_RCVTIMEO, ['sec' => $this->timeout, 'usec' => 0]);
		}
	}

	/**
	 * Set socket option
	 * @param integer Level
	 * @param integer Option
	 * @param mixed Value
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))))))