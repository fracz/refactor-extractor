	public function closeSockets() {
		while (sizeof($this->sockets) > 0) {
			if (!$sock = array_pop($this->sockets)) {
				continue;
			}
			if (Daemon::$useSockets) {
				socket_close($sock[0]);
			} else {
				fclose($sock[0]);
			}
		}
	}


||||||||	public function closeSockets() {
		foreach ($this->sockets as $k => $sock) {
			if ($sock[3] != posix_getpid()) {
				continue;
			}
			if (Daemon::$useSockets) {
				socket_close($sock[0]);
			} else {
				fclose($sock[0]);
			}
			unset($this->sockets[$k]);
		}
	}


||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_WHILE
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_PROP)
                    (
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CALL))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_PROP)
                    (
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_UNSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))))