	public static function outputFilter($s) {
		static $n = 0; // recursion counter

		if ($s === '') {
			return '';
		}

		if (
			Daemon::$config->obfilterauto->value
			&& (Daemon::$req !== NULL)
		) {
			++$n;
			Daemon::$obInStack = true;
			Daemon::$req->out($s, false);
			--$n;
			Daemon::$obInStack = $n > 0;
		} else {
			Daemon::log('Unexcepted output (len. ' . strlen($s) . '): \'' . $s . '\'');
		}

		return '';
	}

	/**
	 * Performs initial actions.
	 * @return void
	 */
||||||||	public static function outputFilter($s) {
		static $n = 0; // recursion counter

		if ($s === '') {
			return '';
		}
		++$n;
		Daemon::$obInStack = true;
		if (
			Daemon::$config->obfilterauto->value
			&& (Daemon::$req !== NULL)
		) {
			Daemon::$req->out($s, false);

		} else {
			Daemon::log('Unexcepted output (len. ' . strlen($s) . '): \'' . $s . '\': '.Debug::backtrace());
		}
		--$n;
		Daemon::$obInStack = $n > 0;
		return '';
	}

	/**
	 * Performs initial actions.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST)))
            (
                (AST_PRE_INC
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (AST_PRE_DEC
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_RETURN
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_PRE_INC
        (AST_VAR))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST)))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)
                    (
                        (AST_VAR)
                        (AST_CONST)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (AST_STATIC_CALL)))))))
    (AST_PRE_DEC
        (AST_VAR))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_RETURN
        (SCALAR)))