	private function appInstancesReloadReady() {
		$ready = TRUE;

		foreach (Daemon::$appInstances as $k => $app) {
			foreach ($app as $appInstance) {
				if (!$appInstance->handleStatus($this->currentStatus)) {
					Daemon::log('[WORKER ' . $this->pid . '] ' . __METHOD__ . ': waiting for ' . $k);

					$ready = FALSE;
				}
			}
		}
		return $ready;
	}

	/**
	 * @method shutdown
	 * @param boolean - Hard? If hard, we shouldn't wait for graceful shutdown of the running applications.
	 * @description
	 * @return boolean - Ready?
	 */
||||||||	private function appInstancesReloadReady() {
		$ready = TRUE;

		foreach (Daemon::$appInstances as $k => $app) {
			foreach ($app as $appInstance) {
				if (!$appInstance->handleStatus($this->currentStatus)) {
					$this->log(__METHOD__ . ': waiting for ' . $k);

					$ready = FALSE;
				}
			}
		}
		return $ready;
	}

	/**
	 * @method shutdown
	 * @param boolean - Hard? If hard, we shouldn't wait for graceful shutdown of the running applications.
	 * @description
	 * @return boolean - Ready?
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (
                                (AST_STATIC_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))
                                                        (SCALAR))
                                                    (AST_MAGIC_CONST))
                                                (SCALAR))
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_MAGIC_CONST)
                                                (SCALAR))
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_RETURN
        (AST_VAR)))