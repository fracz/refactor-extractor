||||||||	public static function normalizeEncoding($encodingLabel) {
		$encoding = strtoupper($encodingLabel);
		$enc = preg_replace('/[^a-zA-Z0-9\s]/', '', $encoding);
		$equivalences = array(
				'ISO88591' => 'ISO-8859-1',
			'ISO8859'  => 'ISO-8859-1',
			'ISO'      => 'ISO-8859-1',
			'LATIN1'   => 'ISO-8859-1',
			'LATIN'    => 'ISO-8859-1',
			'UTF8'     => 'UTF-8',
			'UTF'      => 'UTF-8',
			'WIN1252'  => 'ISO-8859-1',
			'WINDOWS1252' => 'ISO-8859-1'
		);

		if (empty($equivalences[$encoding])) {
			return 'UTF-8';
		}
		return $equivalences[$encoding];
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_RETURN
        (AST_DIM
            (AST_VAR)
            (AST_VAR))))