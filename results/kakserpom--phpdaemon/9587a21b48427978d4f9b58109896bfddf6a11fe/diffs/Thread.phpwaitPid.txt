	protected function waitPid() {
		start:
		$pid = pcntl_waitpid(-1, $status, WNOHANG);
		if ($pid > 0) {
			foreach ($this->collections as &$col) {
				foreach ($col->threads as $k => &$t) {
					if ($t->pid === $pid) {
						$t->terminated = true;
						goto start;
					}
				}
			}
		}

		return false;
	}

	/**
	 * Sends arbitrary signal to the process
	 * @param integer Signal's number
	 * @return boolean Success
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_LABEL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_UNARY_OP
                    (SCALAR))
                (AST_VAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_REF
                        (AST_VAR))
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_PROP
                                (AST_VAR))
                            (AST_REF
                                (AST_VAR))
                            (AST_VAR)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (AST_GOTO
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||