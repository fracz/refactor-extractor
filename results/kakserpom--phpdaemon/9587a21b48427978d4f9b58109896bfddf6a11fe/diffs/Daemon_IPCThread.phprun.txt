	protected function run() {
		if (Daemon::$process instanceof Daemon_MasterThread) {
			Daemon::$process->unregisterSignals();
		}
		if (Daemon::$process->eventBase) {
			Daemon::$process->eventBase->reinit();
			$this->eventBase = Daemon::$process->eventBase;
		} else {
			$this->eventBase = new EventBase();
		}
		Daemon::$process = $this;
		if (Daemon::$logpointerAsync) {
			Daemon::$logpointerAsync->fd = null;
			Daemon::$logpointerAsync = null;
		}
		class_exists('Timer');

		if (Daemon::$config->autogc->value > 0) {
			gc_enable();
		} else {
			gc_disable();
		}
		$this->prepareSystemEnv();
		$this->registerEventSignals();
		FS::init(); // re-init
		FS::initEvent();
		Daemon::openLogs();

		$this->fileWatcher = new FileWatcher;
		$this->IPCManager = Daemon::$appResolver->getInstanceByAppName('IPCManager');

		while (!$this->breakMainLoop) {
			if (!$this->eventBase->dispatch()) {
				break;
			}
		}
	}

	/**
	 * Setup settings on start.
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_STATIC_PROP))
            (
                (AST_METHOD_CALL
                    (AST_STATIC_PROP)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_STATIC_PROP)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CONST)))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_CALL)))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_STATIC_PROP)
            (
                (SCALAR))))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_BREAK
                            (NULL))))))))||||||||