||||||||	public function request($type, $data = null, $cb = null) {
		$packet = "\xFF\xFF\xFF\xFF";
		if ($type === 'ping') {
			$packet .= ValveClient::A2A_PING;
		}
		elseif ($type === 'challenge') {
			//$packet .= ValveClient::A2S_SERVERQUERY_GETCHALLENGE;
			$packet .= ValveClient::A2S_PLAYER . "\xFF\xFF\xFF\xFF";
		}
		elseif ($type === 'info') {
			$packet .= ValveClient::A2S_INFO . "Source Engine Query\x00";
			//"\xFF\xFF\xFF\xFFdetails\x00"
		}
		elseif ($type === 'players') {
			if ($data === null) {
				$data = "\xFF\xFF\xFF\xFF";
			}
			$packet .= ValveClient::A2S_PLAYER . $data;
		}
		else {
			return null;
		}
		$this->onResponse->push($cb);
		$this->setFree(false);
		//Daemon::log('packet: '.Debug::exportBytes($packet, true));
		$this->write($packet);
	}

	/**
	 * Called when new data received
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))