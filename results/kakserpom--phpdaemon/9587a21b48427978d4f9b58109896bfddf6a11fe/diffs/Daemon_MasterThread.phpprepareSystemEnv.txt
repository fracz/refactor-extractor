	protected function prepareSystemEnv() {
		register_shutdown_function(function () {
			if ($this->pid != posix_getpid()) {
				return;
			}
			if ($this->shutdown === true) {
				return;
			}
			$this->log('Unexcepted shutdown.');
			$this->shutdown(SIGTERM);
		});

		posix_setsid();
		proc_nice(Daemon::$config->masterpriority->value);
		if (!Daemon::$config->verbosetty->value) {
     		fclose(STDIN);
        	fclose(STDOUT);
        	fclose(STDERR);
        }

		$this->setTitle(
			Daemon::$runName . ': master process'
			. (Daemon::$config->pidfile->value !== Daemon::$config->pidfile->defaultValue ? ' (' . Daemon::$config->pidfile->value . ')' : '')
		);
	}
	/**
	 * Reload worker by internal id
	 * @param integer - Id of worker
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_CLOSURE
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL))
                            (
                                (AST_RETURN
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (
                                (AST_RETURN
                                    (NULL)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))))))
    (AST_CALL)
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP))))
            (
                (AST_CALL
                    (
                        (AST_CONST)))
                (AST_CALL
                    (
                        (AST_CONST)))
                (AST_CALL
                    (
                        (AST_CONST))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_PROP)))
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_PROP))))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_PROP))))
                        (SCALAR))
                    (SCALAR))))))||||||||