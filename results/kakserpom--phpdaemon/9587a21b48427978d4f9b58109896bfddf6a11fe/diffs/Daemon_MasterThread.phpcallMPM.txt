	protected function callMPM() {
		$state = Daemon::getStateOfWorkers($this);
		if (isset(Daemon::$config->mpm->value) && is_callable(Daemon::$config->mpm->value)) {
			return call_user_func(Daemon::$config->mpm->value, $this, $state);
		}

		$upToMinWorkers = Daemon::$config->minworkers->value - $state['alive'];
		$upToMaxWorkers = Daemon::$config->maxworkers->value - $state['alive'];
		$upToMinSpareWorkers = Daemon::$config->minspareworkers->value - $state['idle'];
		if ($upToMinSpareWorkers > $upToMaxWorkers) {
			$upToMinSpareWorkers = $upToMaxWorkers;
		}
		$n = max($upToMinSpareWorkers, $upToMinWorkers);
		if ($n > 0) {
			//Daemon::log('minspareworkers = '.Daemon::$config->minspareworkers->value);
			//Daemon::log('maxworkers = '.Daemon::$config->maxworkers->value);
			//Daemon::log('maxspareworkers = '.Daemon::$config->maxspareworkers->value);
			//Daemon::log(json_encode($state));
			//Daemon::log('upToMinSpareWorkers = ' . $upToMinSpareWorkers . '   upToMinWorkers = ' . $upToMinWorkers);
			Daemon::log('Spawning ' . $n . ' worker(s)');
			$this->spawnWorkers($n);
			return $n;
		}

		$a = ['default' => 0];
		if (Daemon::$config->maxspareworkers->value > 0) {
			// if MaxSpareWorkers enabled, we have to stop idle workers, keeping in mind the MinWorkers
			$a['downToMaxSpareWorkers'] = min(
					$state['idle'] - Daemon::$config->maxspareworkers->value, // downToMaxSpareWorkers
					$state['alive'] - Daemon::$config->minworkers->value //downToMinWorkers
			);
		}
		$a['downToMaxWorkers'] = $state['alive'] - Daemon::$config->maxworkers->value;
		$n = max($a);
		if ($n > 0) {
			//Daemon::log('downToMaxWorkers = '.$downToMaxWorkers);
			//Daemon::log('downToMaxSpareWorkers = '.$downToMaxSpareWorkers);
			//Daemon::log(json_encode($state));
			Daemon::log('Stopping ' . $n . ' worker(s)');
			$this->stopWorkers($n);
			return -$n;
		}
		return 0;
	}

	/**
	 * Setup settings on start.
	 * @return void
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_PROP
                            (AST_STATIC_PROP))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_PROP))))))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_PROP)))
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_STATIC_PROP))))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_PROP
                                    (AST_PROP
                                        (AST_STATIC_PROP))))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_BINARY_OP
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_RETURN
                    (AST_UNARY_OP
                        (AST_VAR))))))
    (AST_RETURN
        (SCALAR)))||||||||