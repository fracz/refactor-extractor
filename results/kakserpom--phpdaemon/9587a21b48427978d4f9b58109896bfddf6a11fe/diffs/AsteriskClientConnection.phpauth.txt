||||||||	protected function auth() {
		if ($this->state !== self::CONN_STATE_GOT_INITIAL_PACKET) {
			return;
		}

		if ($this->pool->config->authtype->value === 'md5') {
			$this->challenge(function ($conn, $challenge) {
				$packet      = "Action: Login\r\n"
						. "AuthType: MD5\r\n"
						. "Username: " . $this->username . "\r\n"
						. "Key: " . md5($challenge . $this->secret) . "\r\n"
						. "Events: on\r\n"
						. "\r\n";
				$this->state = self::CONN_STATE_LOGIN_PACKET_SENT_AFTER_CHALLENGE;
				$conn->write($packet);
			});
		}
		else {
			$this->login();
		}
	}

	/**
	 * Action: Login
	 * Synopsis: Login Manager
	 * Privilege: <none>
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (SCALAR))
                                                                    (SCALAR))
                                                                (AST_PROP
                                                                    (AST_VAR)))
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_PROP
                                                                    (AST_VAR))))))
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))