	protected function prepareSystemEnv() {
		proc_nice(Daemon::$config->workerpriority->value);

		register_shutdown_function(function () {
			$this->shutdown();
		});

		$this->setTitle(
			Daemon::$runName . ': worker process'
			. (Daemon::$config->pidfile->value !== Daemon::$config->defaultpidfile->value
				? ' (' . Daemon::$config->pidfile->value . ')' : '')
		);

		if (isset(Daemon::$config->group->value)) {
			$sg = posix_getgrnam(Daemon::$config->group->value);
		}

		if (isset(Daemon::$config->user->value)) {
			$su = posix_getpwnam(Daemon::$config->user->value);
		}

		if (Daemon::$config->chroot->value !== '/') {
			if (posix_getuid() != 0) {
				Daemon::log('You must have the root privileges to change root.');
				exit(0);
			}
			elseif (!chroot(Daemon::$config->chroot->value)) {
				Daemon::log('Couldn\'t change root to \'' . Daemon::$config->chroot->value . '\'.');
				exit(0);
			}
		}

		if (isset(Daemon::$config->group->value)) {
			if ($sg === FALSE) {
				Daemon::log('Couldn\'t change group to \'' . Daemon::$config->group->value . '\'. You must replace config-variable \'group\' with existing group.');
				exit(0);
			}
			elseif (
				($sg['gid'] != posix_getgid())
				&& (!posix_setgid($sg['gid']))
			) {
				Daemon::log('Couldn\'t change group to \'' . Daemon::$config->group->value . "'. Error (" . ($errno = posix_get_last_error()) . '): ' . posix_strerror($errno));
				exit(0);
			}
		}

		if (isset(Daemon::$config->user->value)) {
			if ($su === FALSE) {
				Daemon::log('Couldn\'t change user to \'' . Daemon::$config->user->value . '\', user not found. You must replace config-variable \'user\' with existing username.');
				exit(0);
			}
			elseif (
				($su['uid'] != posix_getuid())
				&& (!posix_setuid($su['uid']))
			) {
				Daemon::log('Couldn\'t change user to \'' . Daemon::$config->user->value . "'. Error (" . ($errno = posix_get_last_error()) . '): ' . posix_strerror($errno));
				exit(0);
			}
		}

		if (Daemon::$config->cwd->value !== '.') {
			if (!@chdir(Daemon::$config->cwd->value)) {
				Daemon::log('Couldn\'t change directory to \'' . Daemon::$config->cwd->value . '.');
			}
		}
	}

	/**
	 * Log something
	 * @param string - Message.
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_STATIC_PROP)))))
    (AST_CALL
        (
            (AST_CLOSURE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_PROP)))
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_PROP))))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_PROP))))
                        (SCALAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_PROP)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_PROP)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL)
                            (SCALAR))
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)))
                            (AST_EXIT
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_STATIC_PROP))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_STATIC_PROP))))
                                        (SCALAR))))
                            (AST_EXIT
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_STATIC_PROP))))
                                        (SCALAR))))
                            (AST_EXIT
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_STATIC_PROP))))
                                                    (SCALAR))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL)))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_EXIT
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_STATIC_PROP))))
                                        (SCALAR))))
                            (AST_EXIT
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_STATIC_PROP))))
                                                    (SCALAR))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL)))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_EXIT
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_STATIC_PROP)))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_STATIC_PROP)))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_STATIC_PROP))))
                                        (SCALAR)))))))))))||||||||