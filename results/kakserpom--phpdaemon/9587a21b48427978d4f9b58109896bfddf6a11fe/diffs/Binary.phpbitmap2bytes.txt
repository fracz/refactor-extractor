||||||||	public static function bitmap2bytes($bitmap, $check_len = 0) {
		$r      = '';
		$bitmap = str_pad($bitmap, ceil(strlen($bitmap) / 8) * 8, '0', STR_PAD_LEFT);
		for ($i = 0, $n = strlen($bitmap) / 8; $i < $n; ++$i) {
			$r .= chr((int)bindec(binarySubstr($bitmap, $i * 8, 8)));
		}
		if ($check_len && (strlen($r) != $check_len)) {
			echo "Warning! Bitmap incorrect.\n";
		}
		return $r;
	}

	/**
	 * Get bitmap
	 * @param byte
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))))
                    (SCALAR))
                (SCALAR)
                (AST_CONST))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CAST
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_VAR)))
            (
                (AST_ECHO
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))