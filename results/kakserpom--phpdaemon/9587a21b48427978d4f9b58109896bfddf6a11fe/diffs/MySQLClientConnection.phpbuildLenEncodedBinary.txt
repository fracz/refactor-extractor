||||||||	public function buildLenEncodedBinary($s) {
		if ($s === NULL) {
			return "\251";
		}

		$l = strlen($s);

		if ($l <= 250) {
			return chr($l) . $s;
		}

		if ($l <= 0xFFFF) {
			return "\252" . Binary::int2bytes(2, true) . $s;
		}

		if ($l <= 0xFFFFFF) {
			return "\254" . Binary::int2bytes(3, true) . $s;
		}

		return Binary::int2bytes(8, $l, true) . $s;
	}

	/**
	 * Parses length-encoded binary integer
	 * @return integer Result
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST))))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONST))))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_CONST)))
            (AST_VAR))))