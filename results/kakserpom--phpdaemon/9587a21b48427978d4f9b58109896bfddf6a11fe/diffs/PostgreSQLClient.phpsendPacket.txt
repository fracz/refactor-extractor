	public function sendPacket($type = '',  $packet) {
		$header = $type . pack('N', strlen($packet) + 4);

		$this->write($header);
		$this->write($packet);

		if ($this->pool->config->protologging->value) {
			Daemon::log('Client --> Server: ' . Debug::exportBytes($header . $packet) . "\n\n");
		}

		return TRUE;
	}

	/**
	 * Builds length-encoded binary string
	 * @param string String
	 * @return string Resulting binary string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||