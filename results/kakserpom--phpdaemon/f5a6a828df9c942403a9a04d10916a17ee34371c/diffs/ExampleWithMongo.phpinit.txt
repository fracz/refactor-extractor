	public function init() {
		$req = $this;

		$job = $this->job = new ComplexJob(function() use ($req) { // called when job is done

			$req->wakeup(); // wake up the request immediately

		});

		$collection = $this->appInstance->mongo->{'testdb.testcollection'};
		$collection->insert(array('a' => microtime(true))); // just pushing something

		$job('testquery', function($name, $job) use ($collection) { // registering job named 'testquery'

		 	$collection->findOne(function($result) use ($name, $job) { // calling Mongo findOne

				$job->setResult($name, $result);

			}, array('sort' => array('$natural' => -1)));
		});

		$job(); // let the fun begin

		$this->sleep(1, true); // setting timeout
	}

	/**
	 * Called when request iterated.
	 * @return integer Status.
	 */
||||||||	public function init() {
		$req = $this;

		$job = $this->job = new ComplexJob(function() use ($req) { // called when job is done

			$req->wakeup(); // wake up the request immediately

		});

		$collection = $this->appInstance->mongo->{'testdb.testcollection'};
		$collection->insert(array('a' => microtime(true))); // just pushing something

		/*$job('testquery', function($name, $job) use ($collection) { // registering job named 'testquery'

		 	$collection->findOne(function($result) use ($name, $job) { // calling Mongo findOne

				$job->setResult($name, $result);

			}, array('sort' => array('$natural' => -1)));
		});
		*/

		$job('testquery', function($name, $job) use ($collection) { // registering job named 'testquery'

			Daemon::log('run');
			$this->appInstance->mongo->{'WakePHP.blocks'}->find(function ($cursor) use ($name, $job) {
				Daemon::log('cursor finished = '.Debug::dump($cursor->finished));
				$job->setResult($name, 'very true');
			}, array('limit' => -2));

		});


		$job(); // let the fun begin

		$this->sleep(1, true); // setting timeout
	}

	/**
	 * Called when request iterated.
	 * @return integer Status.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_CONST)))
                    (SCALAR)))))
    (AST_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_UNARY_OP
                                                (SCALAR))
                                            (SCALAR)))
                                    (SCALAR)))))))))
    (AST_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_NEW
                (
                    (AST_CLOSURE
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_CONST)))
                    (SCALAR)))))
    (AST_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR)
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR)))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_UNARY_OP
                                        (SCALAR))
                                    (SCALAR)))))))))
    (AST_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST))))