    public function __construct($translatable, array $properties, $class, Collection $coll)
    {
        $this->translatable = $translatable;
        $this->properties   = $properties;
        $this->class        = $class;
        $this->coll         = $coll;

        $translationClass = new \ReflectionClass($class);
        if (!$translationClass->implementsInterface('Gedmo\Translator\TranslationInterface')) {
            throw new \InvalidArgumentException(sprintf(
                'Translation class should implement Gedmo\Translator\TranslationInterface, "%s" given',
                $class
            ));
        }

        $translatableClass = new \ReflectionObject($translatable);
        foreach ($properties as $property) {
            $translatableProperty = $translatableClass->getProperty($property);
            $translatableProperty->setAccessible(true);
            $this->defaultValues[$property] = $translatableProperty->getValue($translatable);
        }
    }

    /**
     * Change translatable properties of translatable entity|document to localized ones
     *
     * @param   string  $locale     locale (null === default)
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))||||||||