    public function onFlush(EventArgs $eventArgs)
    {
        $om = $this->getObjectManager($eventArgs);
        $uow = $om->getUnitOfWork();

        foreach ($this->getScheduledObjectInsertions($uow) as $object) {
            if ($this->isAllowed('create', $object, $om)) {
                $this->createLog('create', $object, $om);
            }
        }
        foreach ($this->getScheduledObjectUpdates($uow) as $object) {
            if ($this->isAllowed('update', $object, $om)) {
                $this->createLog('update', $object, $om);
            }
        }
        foreach ($this->getScheduledObjectDeletions($uow) as $object) {
            if ($this->isAllowed('delete', $object, $om)) {
                $this->createLog('delete', $object, $om);
            }
        }
    }

    /**
     * is the object allowed to be logged for this action ?
     *
     * @param  $action string
     * @param  $om
     * @param  $object
     * @return bool
     */
||||||||    public function onFlush(EventArgs $eventArgs)
    {
        $om = $this->getObjectManager($eventArgs);
        $uow = $om->getUnitOfWork();

        foreach ($this->getScheduledObjectInsertions($uow) as $object) {
            if ($this->isObjectLoggableForAction($om, $object, 'create')) {
                $this->handleObjectLogging($om, $object, 'create', true);
            }
        }

        foreach ($this->getScheduledObjectUpdates($uow) as $object) {
            if ($this->isObjectLoggableForAction($om, $object, 'update')) {
                $this->handleObjectLogging($om, $object, 'update', false);
            }
        }

        foreach ($this->getScheduledObjectDeletions($uow) as $object) {
            if ($this->isObjectLoggableForAction($om, $object, 'delete')) {
                $this->handleObjectLogging($om, $object, 'delete', false);
            }
        }
    }

    /**
     * Checks for inserted object to update their log
     * foreign keys
     *
     * @param EventArgs $args
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_CONST))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_CONST))))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_CONST)))))))))