    function shouldEnsureSolvedIssue234()
    {
        $this->translatableListener->setTranslatableLocale('de');
        $this->translatableListener->setDefaultLocale('en');
        $repo = $this->em->getRepository(self::TRANSLATION);
        $entity = new Article;
        $entity->setTitle('he'); // is translated to de

        $repo
            ->translate($entity, 'title', 'en', 'my article en')
            ->translate($entity, 'title', 'es', 'my article es')
            ->translate($entity, 'title', 'fr', 'my article fr')
            ->translate($entity, 'title', 'de', 'my article de')
        ;

        $this->em->persist($entity);
        $this->em->flush();
    }

    /**
     * @test
     */
||||||||    function shouldEnsureSolvedIssue234()
    {
        $this->translatableListener->setTranslatableLocale('de');
        $this->translatableListener->setDefaultLocale('en');
        $repo = $this->em->getRepository(self::TRANSLATION);
        $entity = new Article;
        $entity->setTitle('he'); // is translated to de

        $repo
            ->translate($entity, 'title', 'en', 'my article en')
            ->translate($entity, 'title', 'es', 'my article es')
            ->translate($entity, 'title', 'fr', 'my article fr')
            ->translate($entity, 'title', 'de', 'my article de')
        ;

        $this->em->persist($entity);
        $this->em->flush();
        $this->em->clear();
        $trans = $repo->findTranslations($this->em->find(self::ARTICLE, $entity->getId()));
        $this->assertEquals(3, count($trans)); // EN is default, and left in original record
        $this->assertSame('my article de', $trans['de']['title']); // overrides "he" which would be used if translate for de not called
        $this->assertSame('my article es', $trans['es']['title']);
        $this->assertSame('my article fr', $trans['fr']['title']);
    }

    /**
     * @test
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)))
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)))
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR)))))