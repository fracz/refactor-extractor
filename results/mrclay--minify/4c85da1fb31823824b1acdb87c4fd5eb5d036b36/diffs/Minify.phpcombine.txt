|||||||| public function combine($minify = true) {
   // Return contents from server cache if possible.
   if (MINIFY_USE_CACHE) {
     if ($cacheResult = $this->serverCache(true)) {
       return $cacheResult;
     }
   }

   // Combine contents.
   $combined = array();

   foreach($this->files as $file) {
     if ($this->type === self::TYPE_CSS && MINIFY_REWRITE_CSS_URLS) {
       // Rewrite relative CSS URLs.
       $combined[] = self::rewriteCSSUrls(file_get_contents($file),
           dirname($file));
     }
     else {
       $combined[] = file_get_contents($file);
     }
   }

   $combined = $minify ? self::min(implode("\n", $combined), $this->type) :
       implode("\n", $combined);

   // Save combined contents to the cache.
   if (MINIFY_USE_CACHE) {
     $cacheFile = MINIFY_CACHE_DIR.'/minify_'.$this->getHash();
     @file_put_contents($cacheFile, $combined, LOCK_EX);
   }

   return $combined;
 }

 /**
  * Gets an array of absolute pathnames of all files that have been added with
  * addFile() or via this class's constructor.
  *
  * @return array array of absolute pathnames
  * @see addFile()
  * @see removeFile()
  */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CONST))))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_STATIC_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CONST)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))