    function setUp() {

        global $CFG;

        // make a dummy event
        $eventhandler -> eventname = 'testevent';
        $eventhandler -> handlermodule = 'unittest';
        $eventhandler -> handlerfile = '/lib/simpletest/testeventslib.php';
        $eventhandler -> handlerfunction = 'plusone';
        $eventhandler -> schedule = 'instant';

        $this -> handler = $eventhandler;
        $this -> handlerid = insert_record('events_handlers', $eventhandler);
        $this -> handler->id = $this->handlerid;

    }

    /**
     * Delete temporary entries from the database
     */
||||||||    function setUp() {
        events_uninstall('unittest');
        sample_function_handler('reset');
        sample_handler_class::static_method('reset');
        events_update_definition('unittest');
    }

    /**
     * Delete temporary entries from the database
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR))))