    public function display() {
        $strquiznavigation = get_string('quiznavigation', 'quiz');
        $content = $this->get_question_buttons() . $this->get_end_bits();
        print_side_block($strquiznavigation, $content, NULL, NULL, '', array('id' => 'quiznavigation'), $strquiznavigation);
    }
}

class quiz_attempt_nav_panel extends quiz_nav_panel_base {
    public function __construct(quiz_attempt $attemptobj, $options, $page) {
        parent::__construct($attemptobj, $options, $page);
    }

    protected function get_question_button($number, $question) {
        $questionsonpage = $this->attemptobj->get_question_ids($question->_page);
        $onclick = '';
        if ($question->id != reset($questionsonpage)) {
            $onclick = ' onclick="form.action = form.action + \'#q' . $question->id .
                '\'; return true;"';
        }
        return '<input type="submit" name="gotopage' . $question->_page .
                '" value="' . $number . '" class="qnbutton ' .
                $this->get_question_state($question) . '"' . $onclick . '/>';
    }

    protected function get_end_bits() {
        return '<input type="submit" name="gotosummary" value="' .
                get_string('endtest', 'quiz') . '" class="endtestlink" />';
    }
}

class quiz_review_nav_panel extends quiz_nav_panel_base {
    public function __construct(quiz_attempt $attemptobj, $options, $page) {
        parent::__construct($attemptobj, $options, $page);
    }

    protected function get_question_button($number, $question) {
        return '<a href="' . $this->attemptobj->review_url($question->id) .
                '" class="qnbutton ' . $this->get_question_state($question) .
                '">' . $number . '</a>';
    }

    protected function get_end_bits() {
        $html = '<a href="' . $this->attemptobj->review_url(0, 0, true) . '">' .
                get_string('showall', 'quiz') . '</a>';
        $html .= '<a href="' . $this->attemptobj->view_url() . '">' .
                get_string('finishreview', 'quiz') . '</a>';
        return $html;
    }
}
?>||||||||    public function display() {
        $strquiznavigation = get_string('quiznavigation', 'quiz');
        $content = $this->get_question_buttons() . '<div class="othernav">' .
                $this->get_end_bits() . '</div>';
        print_side_block($strquiznavigation, $content, NULL, NULL, '', array('id' => 'quiznavigation'), $strquiznavigation);
    }
}

class quiz_attempt_nav_panel extends quiz_nav_panel_base {
    public function __construct(quiz_attempt $attemptobj, $options, $page) {
        parent::__construct($attemptobj, $options, $page);
    }

    protected function get_question_button($number, $question) {
        $questionsonpage = $this->attemptobj->get_question_ids($question->_page);
        $onclick = '';
        if ($question->id != reset($questionsonpage)) {
            $onclick = ' onclick="form.action = form.action + \'#q' . $question->id .
                '\'; return true;"';
        }
        return '<input type="submit" name="gotopage' . $question->_page .
                '" value="' . $number . '" class="qnbutton ' .
                $this->get_question_state($question) . '"' . $onclick . '/>';
    }

    protected function get_end_bits() {
        return '<input type="submit" name="gotosummary" value="' .
                get_string('endtest', 'quiz') . '" class="endtestlink" />';
    }
}

class quiz_review_nav_panel extends quiz_nav_panel_base {
    public function __construct(quiz_attempt $attemptobj, $options, $page) {
        parent::__construct($attemptobj, $options, $page);
    }

    protected function get_question_button($number, $question) {
        return '<a href="' . $this->attemptobj->review_url($question->id) .
                '" class="qnbutton ' . $this->get_question_state($question) .
                '">' . $number . '</a>';
    }

    protected function get_end_bits() {
        $accessmanager = $this->attemptobj->get_access_manager(time());
        $html = '<a href="' . $this->attemptobj->review_url(0, 0, true) . '">' .
                get_string('showall', 'quiz') . '</a>';
        $html .= $accessmanager->print_finish_review_link($this->attemptobj->is_preview_user(), true);
        return $html;
    }
}
?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_VAR))))