    public function check_permissions() {
        return has_capability('mod/data:exportallentries', get_context_instance(CONTEXT_MODULE, $this->cm->id));
    }

    /**
     *  @return string
     */
||||||||    public function check_permissions() {
        if ($this->recordid) {
            if (data_isowner($this->recordid)) {
                return has_capability('mod/data:exportownentry', get_context_instance(CONTEXT_MODULE, $this->cm->id));
            }
            return has_capability('mod/data:exportentry', get_context_instance(CONTEXT_MODULE, $this->cm->id));
        }
        if ($this->has_export_config() && !$this->get_export_config('mineonly')) {
            return has_capability('mod/data:exportallentries', get_context_instance(CONTEXT_MODULE, $this->cm->id));
        }
        return has_capability('mod/data:exportownentry', get_context_instance(CONTEXT_MODULE, $this->cm->id));
    }

    /**
     *  @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CONST)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_CONST)
                                                (AST_PROP
                                                    (AST_PROP
                                                        (AST_VAR)))))))))))
                (AST_RETURN
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CONST)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))))))