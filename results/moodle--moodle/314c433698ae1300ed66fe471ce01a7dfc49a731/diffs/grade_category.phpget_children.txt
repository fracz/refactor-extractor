    function get_children($include_grades=false, $include_category_items=false) {

        // This function must be as fast as possible ;-)
        // fetch all course grade items and categories into memory - we do not expect hundreds of these in course
        // we have to limit the number of queries though, because it will be used often in grade reports

        $cats  = get_records('grade_categories', 'courseid', $this->courseid);
        $items = get_records('grade_items', 'courseid', $this->courseid);

        // init children array first
        foreach ($cats as $catid=>$cat) {
            $cats[$catid]->children = array();
        }

        //first attach items to cats and add category sortorder
        foreach ($items as $item) {
            if ($item->itemtype == 'course' or $item->itemtype == 'category') {
                $cats[$item->iteminstance]->sortorder = $item->sortorder;

                if (!$include_category_items) {
                    continue;
                }
                $categoryid = $item->iteminstance;
            } else {
                $categoryid = $item->categoryid;
            }

            // prevent problems with duplicate sortorders in db
            $sortorder = $item->sortorder;
            while(array_key_exists($sortorder, $cats[$categoryid]->children)) {
                $sortorder++;
            }

            $cats[$categoryid]->children[$sortorder] = $item;

        }

        // now find the requested category and connect categories as children
        $category = false;
        foreach ($cats as $catid=>$cat) {
            if (!empty($cat->parent)) {
                // prevent problems with duplicate sortorders in db
                $sortorder = $cat->sortorder;
                while(array_key_exists($sortorder, $cats[$cat->parent]->children)) {
                    $sortorder++;
                }

                $cats[$cat->parent]->children[$sortorder] = $cat;
            }

            if ($catid == $this->id) {
                $category = &$cats[$catid];
            }
        }

        unset($items); // not needed
        unset($cats); // not needed

        $children_array = grade_category::_get_children_recursion($category, $include_grades);

        ksort($children_array);

        return $children_array;

    }

||||||||    function get_children($include_grades=false, $include_category_items=false) {

        // This function must be as fast as possible ;-)
        // fetch all course grade items and categories into memory - we do not expect hundreds of these in course
        // we have to limit the number of queries though, because it will be used often in grade reports

        $cats  = get_records('grade_categories', 'courseid', $this->courseid);
        $items = get_records('grade_items', 'courseid', $this->courseid);

        // init children array first
        foreach ($cats as $catid=>$cat) {
            $cats[$catid]->children = array();
        }

        //first attach items to cats and add category sortorder
        foreach ($items as $item) {
            if ($item->itemtype == 'course' or $item->itemtype == 'category') {
                $cats[$item->iteminstance]->sortorder = $item->sortorder;

                if (!$include_category_items) {
                    continue;
                }
                $categoryid = $item->iteminstance;
            } else {
                $categoryid = $item->categoryid;
            }

            // prevent problems with duplicate sortorders in db
            $sortorder = $item->sortorder;
            while(array_key_exists($sortorder, $cats[$categoryid]->children)) {
                echo "$sortorder exists in item loop<br>";
                $sortorder++;
            }

            $cats[$categoryid]->children[$sortorder] = $item;

        }

        // now find the requested category and connect categories as children
        $category = false;
        foreach ($cats as $catid=>$cat) {
            if (!empty($cat->parent)) {
                // prevent problems with duplicate sortorders in db
                $sortorder = $cat->sortorder;
                while(array_key_exists($sortorder, $cats[$cat->parent]->children)) {
                    echo "$sortorder exists in cat loop<br>";
                    $sortorder++;
                }

                $cats[$cat->parent]->children[$sortorder] = $cat;
            }

            if ($catid == $this->id) {
                $category = &$cats[$catid];
            }
        }

        unset($items); // not needed
        unset($cats); // not needed

        $children_array = grade_category::_get_children_recursion($category, $include_grades);

        ksort($children_array);

        return $children_array;

    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (
                                    (AST_CONTINUE
                                        (NULL)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (AST_WHILE
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (
                    (AST_POST_INC
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_WHILE
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))))))
                            (
                                (AST_POST_INC
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_VAR))
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_ASSIGN_REF
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ARRAY))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (
                                    (AST_CONTINUE
                                        (NULL)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (AST_WHILE
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))))
                (
                    (AST_ECHO
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (SCALAR)))
                    (AST_POST_INC
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_WHILE
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))))))
                            (
                                (AST_ECHO
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_POST_INC
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))
                                (AST_VAR))
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_ASSIGN_REF
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))