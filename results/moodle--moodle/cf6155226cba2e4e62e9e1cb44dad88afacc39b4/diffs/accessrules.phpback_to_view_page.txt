    public function back_to_view_page($canpreview, $message = '') {
        global $CFG;
        $url = $this->_quizobj->view_url();
        if ($this->securewindow_required($canpreview)) {
            print_header();
            print_box_start();
            if ($message) {
                echo '<p>' . $message . '</p><p>' . get_string('windowclosing', 'quiz') . '</p>';
                $delay = 5;
            } else {
                echo '<p>' . get_string('pleaseclose', 'quiz') . '</p>';
                $delay = 0;
            }
            print_box_end();
            print_js_call('quiz_secure_window.close', array($url, $delay));
            print_footer('empty');
            die();
        } else {
            redirect($url, $message);
        }
    }

    /**
     * Print a control to finish the review. Normally this is just a link, but if we are
     * in a secure window, it needs to be a button that does quiz_secure_window.close.
     *
     * @param boolean $canpreview This affects whether we have to worry about secure window stuff.
     */
||||||||    public function back_to_view_page($canpreview, $message = '') {
        global $CFG;
        $url = $this->_quizobj->view_url();
        if ($this->securewindow_required($canpreview)) {
            print_header();
            print_box_start();
            if ($message) {
                echo '<p>' . $message . '</p><p>' . get_string('windowclosing', 'quiz') . '</p>';
                $delay = 5;
            } else {
                echo '<p>' . get_string('pleaseclose', 'quiz') . '</p>';
                $delay = 0;
            }
            print_box_end();
            $PAGE->requires->js_function_call('quiz_secure_window.close', array($url, $delay));
            print_footer('empty');
            die();
        } else {
            redirect($url, $message);
        }
    }

    /**
     * Print a control to finish the review. Normally this is just a link, but if we are
     * in a secure window, it needs to be a button that does quiz_secure_window.close.
     *
     * @param boolean $canpreview This affects whether we have to worry about secure window stuff.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (
                (AST_CALL)
                (AST_CALL)
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_CALL)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_EXIT
                    (NULL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (
                (AST_CALL)
                (AST_CALL)
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_CALL)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_EXIT
                    (NULL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))