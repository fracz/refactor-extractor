    public function get_submitted_var($name, $type, $postdata = null) {
        switch ($type) {
            case self::PARAM_MARK:
                // Special case to work around PARAM_FLOAT converting '' to 0.
                $mark = $this->get_submitted_var($name, PARAM_RAW_TRIMMED, $postdata);
                if ($mark === '' || is_null($mark)) {
                    return $mark;
                } else {
                    return clean_param(str_replace(',', '.', $mark), PARAM_FLOAT);
                }

            case self::PARAM_FILES:
                return $this->process_response_files($name, $name, $postdata);

            case self::PARAM_CLEANHTML_FILES:
                $var = $this->get_submitted_var($name, PARAM_CLEANHTML, $postdata);
                return $this->process_response_files($name, $name . ':itemid', $postdata, $var);

            default:
                if (is_null($postdata)) {
                    $var = optional_param($name, null, $type);
                } else if (array_key_exists($name, $postdata)) {
                    $var = clean_param($postdata[$name], $type);
                } else {
                    $var = null;
                }

                return $var;
        }
    }

    /**
     * Handle a submitted variable representing uploaded files.
     * @param string $name the field name.
     * @param string $draftidname the field name holding the draft file area id.
     * @param array $postdata (optional, only inteded for testing use) take the
     *      data from this array, instead of from $_POST. At the moment, this
     *      behaves as if there were no files.
     * @param string $text optional reponse text.
     * @return question_file_saver that can be used to save the files later.
     */
||||||||    public function get_submitted_var($name, $type, $postdata = null) {
        switch ($type) {
            case self::PARAM_MARK:
                // Special case to work around PARAM_FLOAT converting '' to 0.
                return question_utils::clean_param_mark($this->get_submitted_var($name, PARAM_RAW_TRIMMED, $postdata));

            case self::PARAM_FILES:
                return $this->process_response_files($name, $name, $postdata);

            case self::PARAM_CLEANHTML_FILES:
                $var = $this->get_submitted_var($name, PARAM_CLEANHTML, $postdata);
                return $this->process_response_files($name, $name . ':itemid', $postdata, $var);

            default:
                if (is_null($postdata)) {
                    $var = optional_param($name, null, $type);
                } else if (array_key_exists($name, $postdata)) {
                    $var = clean_param($postdata[$name], $type);
                } else {
                    $var = null;
                }

                return $var;
        }
    }

    /**
     * Handle a submitted variable representing uploaded files.
     * @param string $name the field name.
     * @param string $draftidname the field name holding the draft file area id.
     * @param array $postdata (optional, only inteded for testing use) take the
     *      data from this array, instead of from $_POST. At the moment, this
     *      behaves as if there were no files.
     * @param string $text optional reponse text.
     * @return question_file_saver that can be used to save the files later.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_RETURN
                                    (AST_VAR))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_CALL
                                        (
                                            (AST_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)
                                                    (AST_VAR)))
                                            (AST_CONST)))))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_CONST)
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST))))))))
                    (AST_RETURN
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_STATIC_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_VAR))))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_CONST)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_CONST)
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CONST))))))))
                    (AST_RETURN
                        (AST_VAR)))))))