    function test_our_tags() {
        $text = '<nolink>xxx<em>xx</em><div>xxx</div></nolink>';
        $this->assertIdentical($text, purify_html($text));

        $text = '<tex>xxxxxx</tex>';
        $this->assertIdentical($text, purify_html($text));

        $text = '<algebra>xxxxxx</algebra>';
        $this->assertIdentical($text, purify_html($text));

        $text = '<span lang="de_DU" class="multilang">asas</span>';
        $this->assertIdentical($text, purify_html($text));

        $text = '<lang lang="de_DU">xxxxxx</lang>';
        $this->assertIdentical($text, purify_html($text));

        $text = "\n\raa\rsss\nsss\r";
        $this->assertIdentical($text, purify_html($text));
    }

}

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (AST_VAR))))))||||||||