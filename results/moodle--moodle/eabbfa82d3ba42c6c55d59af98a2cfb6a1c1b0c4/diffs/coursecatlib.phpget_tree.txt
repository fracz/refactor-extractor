||||||||    protected static function get_tree($id) {
        global $DB;
        $coursecattreecache = cache::make('core', 'coursecattree');
        $rv = $coursecattreecache->get($id);
        if ($rv !== false) {
            return $rv;
        }
        // We did not find the entry in cache but it also can mean that tree is not built.
        // The keys 0 and 'countall' must always be present if tree is built.
        if ($id !== 0 && $id !== 'countall' && $coursecattreecache->has('countall')) {
            // Tree was built, it means the non-existing $id was requested.
            return false;
        }
        // Re-build the tree.
        $sql = "SELECT cc.id, cc.parent, cc.visible
                FROM {course_categories} cc
                ORDER BY cc.sortorder";
        $rs = $DB->get_recordset_sql($sql, array());
        $all = array(0 => array(), '0i' => array());
        $count = 0;
        foreach ($rs as $record) {
            $all[$record->id] = array();
            $all[$record->id. 'i'] = array();
            if (array_key_exists($record->parent, $all)) {
                $all[$record->parent][] = $record->id;
                if (!$record->visible) {
                    $all[$record->parent. 'i'][] = $record->id;
                }
            } else {
                // parent not found. This is data consistency error but next fix_course_sortorder() should fix it
                $all[0][] = $record->id;
            }
            $count++;
        }
        $rs->close();
        if (!$count) {
            // No categories found.
            // This may happen after upgrade from very old moodle version. In new versions the default category is created on install.
            $defcoursecat = self::create(array('name' => get_string('miscellaneous')));
            set_config('defaultrequestcategory', $defcoursecat->id);
            $all[0] = array($defcoursecat->id);
            $all[$defcoursecat->id] = array();
            $count++;
        }
        foreach ($all as $key => $children) {
            $coursecattreecache->set($key, $children);
        }
        $coursecattreecache->set('countall', $count);
        if (array_key_exists($id, $all)) {
            return $all[$id];
        }
        return false;
    }

    /**
     * Returns number of ALL categories in the system regardless if
     * they are visible to current user or not
     *
     * @return int
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_ARRAY))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (NULL))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (NULL))
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (NULL))
                            (AST_PROP
                                (AST_VAR))))))
            (AST_POST_INC
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (SCALAR))))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ARRAY))
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONST)))