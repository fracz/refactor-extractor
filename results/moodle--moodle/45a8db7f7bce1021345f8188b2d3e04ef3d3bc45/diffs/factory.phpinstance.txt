    public static function instance($forcereload = false) {
        global $CFG;
        if ($forcereload || self::$instance === null) {
            // Initialise a new factory to facilitate our needs.
            if (defined('CACHE_DISABLE_ALL') && CACHE_DISABLE_ALL !== false) {
                // The cache has been disabled. Load disabledlib and start using the factory designed to handle this
                // situation. It will use disabled alternatives where available.
                require_once($CFG->dirroot.'/cache/disabledlib.php');
                self::$instance = new cache_factory_disabled();
            } else if (defined('PHPUNIT_TEST') && PHPUNIT_TEST) {
                // We're using the regular factory.
                require_once($CFG->dirroot.'/cache/tests/fixtures/lib.php');
                self::$instance = new cache_phpunit_factory();
                if (defined('CACHE_DISABLE_STORES') && CACHE_DISABLE_STORES !== false) {
                    // The cache stores have been disabled.
                    self::$instance->set_state(self::STATE_STORES_DISABLED);
                }
            } else {
                // We're using the regular factory.
                self::$instance = new cache_factory();
                if (defined('CACHE_DISABLE_STORES') && CACHE_DISABLE_STORES !== false) {
                    // The cache stores have been disabled.
                    self::$instance->set_state(self::STATE_STORES_DISABLED);
                }
            }
        }
        return self::$instance;
    }

    /**
     * Protected constructor, please use the static instance method.
     */
||||||||    public static function instance($forcereload = false) {
        global $CFG;
        if ($forcereload || self::$instance === null) {
            // Initialise a new factory to facilitate our needs.
            if (defined('CACHE_DISABLE_ALL') && CACHE_DISABLE_ALL !== false) {
                // The cache has been disabled. Load disabledlib and start using the factory designed to handle this
                // situation. It will use disabled alternatives where available.
                require_once($CFG->dirroot.'/cache/disabledlib.php');
                self::$instance = new cache_factory_disabled();
            } else if ((defined('PHPUNIT_TEST') && PHPUNIT_TEST) || behat_is_test_site()) {
                // We're using the test factory.
                require_once($CFG->dirroot.'/cache/tests/fixtures/lib.php');
                self::$instance = new cache_phpunit_factory();
                if (defined('CACHE_DISABLE_STORES') && CACHE_DISABLE_STORES !== false) {
                    // The cache stores have been disabled.
                    self::$instance->set_state(self::STATE_STORES_DISABLED);
                }
            } else {
                // We're using the regular factory.
                self::$instance = new cache_factory();
                if (defined('CACHE_DISABLE_STORES') && CACHE_DISABLE_STORES !== false) {
                    // The cache stores have been disabled.
                    self::$instance->set_state(self::STATE_STORES_DISABLED);
                }
            }
        }
        return self::$instance;
    }

    /**
     * Protected constructor, please use the static instance method.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_CONST)))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_NEW))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (AST_CONST))
                                    (
                                        (AST_INCLUDE_OR_EVAL
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_STATIC_PROP)
                                            (AST_NEW))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (AST_CONST)))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_STATIC_PROP)
                                                        (
                                                            (AST_CLASS_CONST
                                                                (SCALAR)))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_STATIC_PROP)
                                            (AST_NEW))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (AST_CONST)))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_STATIC_PROP)
                                                        (
                                                            (AST_CLASS_CONST
                                                                (SCALAR))))))))))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (AST_CONST)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_CONST)))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_STATIC_PROP)
                                (AST_NEW))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (SCALAR)))
                                            (AST_CONST))
                                        (AST_CALL))
                                    (
                                        (AST_INCLUDE_OR_EVAL
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))
                                        (AST_ASSIGN
                                            (AST_STATIC_PROP)
                                            (AST_NEW))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (AST_CONST)))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_STATIC_PROP)
                                                        (
                                                            (AST_CLASS_CONST
                                                                (SCALAR)))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_STATIC_PROP)
                                            (AST_NEW))
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)))
                                                    (AST_BINARY_OP
                                                        (AST_CONST)
                                                        (AST_CONST)))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_STATIC_PROP)
                                                        (
                                                            (AST_CLASS_CONST
                                                                (SCALAR))))))))))))))))
    (AST_RETURN
        (AST_STATIC_PROP)))