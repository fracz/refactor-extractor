    public function get_activities($modinfo=null) {
        global $DB;

        // Obtain those activities which have completion turned on
        $withcompletion = $DB->get_records_select('course_modules', 'course='.$this->course->id.
          ' AND completion<>'.COMPLETION_TRACKING_NONE);
        if (count($withcompletion) == 0) {
            return array();
        }

        // Use modinfo to get section order and also add in names
        if (empty($modinfo)) {
            $modinfo = get_fast_modinfo($this->course);
        }
        $result = array();
        foreach ($modinfo->sections as $sectioncms) {
            foreach ($sectioncms as $cmid) {
                if (array_key_exists($cmid, $withcompletion)) {
                    $result[$cmid] = $withcompletion[$cmid];
                    $result[$cmid]->modname = $modinfo->cms[$cmid]->modname;
                    $result[$cmid]->name    = $modinfo->cms[$cmid]->name;
                }
            }
        }

        return $result;
    }

    /**
     * Gets list of users in a course whose progress is tracked for display on the
     * progress report.
     *
     * @global object
     * @global object
     * @uses CONTEXT_COURSE
     * @param bool $sortfirstname True to sort with firstname
     * @param int $groupid Optionally restrict to groupid
     * @return array Array of user objects containing id, firstname, lastname (empty if none)
     */
||||||||    public function get_activities($modinfo=null) {
        global $DB;

        // Obtain those activities which have completion turned on
        $withcompletion = $DB->get_records_select('course_modules', 'course='.$this->course->id.
          ' AND completion<>'.COMPLETION_TRACKING_NONE);
        if (!$withcompletion) {
            return array();
        }

        // Use modinfo to get section order and also add in names
        if (empty($modinfo)) {
            $modinfo = get_fast_modinfo($this->course);
        }
        $result = array();
        foreach ($modinfo->sections as $sectioncms) {
            foreach ($sectioncms as $cmid) {
                if (array_key_exists($cmid, $withcompletion)) {
                    $result[$cmid] = $withcompletion[$cmid];
                    $result[$cmid]->modname = $modinfo->cms[$cmid]->modname;
                    $result[$cmid]->name    = $modinfo->cms[$cmid]->name;
                }
            }
        }

        return $result;
    }

    /**
     * Gets list of users in a course whose progress is tracked for display on the
     * progress report.
     *
     * @global object
     * @global object
     * @uses CONTEXT_COURSE
     * @param bool $sortfirstname Optional True to sort with firstname
     * @param int $groupid Optionally restrict to groupid
     * @return array Array of user objects containing id, firstname, lastname (empty if none)
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR))))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_VAR)))