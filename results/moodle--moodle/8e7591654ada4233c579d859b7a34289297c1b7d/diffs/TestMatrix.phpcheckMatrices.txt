||||||||  function checkMatrices($X = null, $Y = null) {
    if( $X == null || $Y == null )
      return false;

    $eps = pow(2.0,-52.0);
    if ($X->norm1() == 0. & $Y->norm1() < 10*$eps) return true;
    if ($Y->norm1() == 0. & $X->norm1() < 10*$eps) return true;

    $A = $X->minus($Y);

    if ($A->norm1() > 1000 * $eps * max($X->norm1(),$Y->norm1()))
      die("The norm of (X-Y) is too large: ".$A->norm1());
    else
      return true;
  }

}

$test = new TestMatrix;
?>||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_UNARY_OP
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_EXIT
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONST))))))