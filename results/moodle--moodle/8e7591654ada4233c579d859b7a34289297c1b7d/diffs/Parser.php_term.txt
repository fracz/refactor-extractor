||||||||	function _term()
	{
		$result = $this->_fact();
		while (($this->_current_token == "*") or
			   ($this->_current_token == "/")) {
		/**/
			if ($this->_current_token == "*") {
				$this->_advance();
				$result2 = $this->_fact();
				$result = $this->_createTree('ptgMul', $result, $result2);
			} else {
				$this->_advance();
				$result2 = $this->_fact();
				$result = $this->_createTree('ptgDiv', $result, $result2);
			}
		}
		return $result;
	}

	/**
	 * It parses a factor. It assumes the following rule:
	 * Fact -> ( Expr )
	 *       | CellRef
	 *       | CellRange
	 *       | Number
	 *       | Function
	 *
	 * @access private
	 * @return mixed The parsed ptg'd tree on success
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))