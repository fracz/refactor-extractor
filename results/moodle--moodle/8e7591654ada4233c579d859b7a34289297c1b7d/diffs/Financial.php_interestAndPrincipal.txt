||||||||	private static function _interestAndPrincipal($rate=0, $per=0, $nper=0, $pv=0, $fv=0, $type=0)
	{
		$pmt = self::PMT($rate, $nper, $pv, $fv, $type);
		$capital = $pv;
		for ($i = 1; $i<= $per; ++$i) {
			$interest = ($type && $i == 1) ? 0 : -$capital * $rate;
			$principal = $pmt - $interest;
			$capital += $principal;
		}
		return array($interest, $principal);
	}	//	function _interestAndPrincipal()


	/**
	 * ACCRINT
	 *
	 * Returns the accrued interest for a security that pays periodic interest.
	 *
	 * Excel Function:
	 *		ACCRINT(issue,firstinterest,settlement,rate,par,frequency[,basis])
	 *
	 * @access	public
	 * @category Financial Functions
	 * @param	mixed	$issue			The security's issue date.
	 * @param	mixed	$firstinterest	The security's first interest date.
	 * @param	mixed	$settlement		The security's settlement date.
	 *									The security settlement date is the date after the issue date
	 *									when the security is traded to the buyer.
	 * @param	float	$rate			The security's annual coupon rate.
	 * @param	float	$par			The security's par value.
	 *									If you omit par, ACCRINT uses $1,000.
	 * @param	integer	$frequency		the number of coupon payments per year.
	 *									Valid frequency values are:
	 *										1	Annual
	 *										2	Semi-Annual
	 *										4	Quarterly
	 *									If working in Gnumeric Mode, the following frequency options are
	 *									also available
	 *										6	Bimonthly
	 *										12	Monthly
	 * @param	integer	$basis			The type of day count to use.
	 *										0 or omitted	US (NASD) 30/360
	 *										1				Actual/actual
	 *										2				Actual/360
	 *										3				Actual/365
	 *										4				European 30/360
	 * @return	float
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_VAR))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))))