||||||||	public static function CUMPRINC($rate, $nper, $pv, $start, $end, $type = 0) {
		$rate	= PHPExcel_Calculation_Functions::flattenSingleValue($rate);
		$nper	= (int) PHPExcel_Calculation_Functions::flattenSingleValue($nper);
		$pv		= PHPExcel_Calculation_Functions::flattenSingleValue($pv);
		$start	= (int) PHPExcel_Calculation_Functions::flattenSingleValue($start);
		$end	= (int) PHPExcel_Calculation_Functions::flattenSingleValue($end);
		$type	= (int) PHPExcel_Calculation_Functions::flattenSingleValue($type);

		// Validate parameters
		if ($type != 0 && $type != 1) {
			return PHPExcel_Calculation_Functions::NaN();
		}
		if ($start < 1 || $start > $end) {
			return PHPExcel_Calculation_Functions::VALUE();
		}

		// Calculate
		$principal = 0;
		for ($per = $start; $per <= $end; ++$per) {
			$principal += self::PPMT($rate, $per, $nper, $pv, 0, $type);
		}

		return $principal;
	}	//	function CUMPRINC()


	/**
	 * DB
	 *
	 * Returns the depreciation of an asset for a specified period using the
	 * fixed-declining balance method.
	 * This form of depreciation is used if you want to get a higher depreciation value
	 * at the beginning of the depreciation (as opposed to linear depreciation). The
	 * depreciation value is reduced with every depreciation period by the depreciation
	 * already deducted from the initial cost.
	 *
	 * Excel Function:
	 *		DB(cost,salvage,life,period[,month])
	 *
	 * @access	public
	 * @category Financial Functions
	 * @param	float	cost		Initial cost of the asset.
	 * @param	float	salvage		Value at the end of the depreciation.
	 *								(Sometimes called the salvage value of the asset)
	 * @param	integer	life		Number of periods over which the asset is depreciated.
	 *								(Sometimes called the useful life of the asset)
	 * @param	integer	period		The period for which you want to calculate the
	 *								depreciation. Period must use the same units as life.
	 * @param	integer	month		Number of months in the first year. If month is omitted,
	 *								it defaults to 12.
	 * @return	float
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_STATIC_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))