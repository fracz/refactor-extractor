||||||||	public static function absoluteReference($pCoordinateString = 'A1')
	{
		if (strpos($pCoordinateString,':') === FALSE && strpos($pCoordinateString,',') === FALSE) {
			// Split out any worksheet name from the reference
			$worksheet = '';
			$cellAddress = explode('!',$pCoordinateString);
			if (count($cellAddress) > 1) {
				list($worksheet,$pCoordinateString) = $cellAddress;
			}
			if ($worksheet > '')	$worksheet .= '!';

			// Create absolute coordinate
			if (ctype_digit($pCoordinateString)) {
				return $worksheet . '$' . $pCoordinateString;
			} elseif (ctype_alpha($pCoordinateString)) {
				return $worksheet . '$' . strtoupper($pCoordinateString);
			}
			return $worksheet . self::absoluteCoordinate($pCoordinateString);
		}

		throw new PHPExcel_Exception('Cell coordinate string can not be a range of cells');
	}

	/**
	 *	Make string coordinate absolute
	 *
	 *	@param	string	$pCoordinateString		e.g. 'A1'
	 *	@return	string	Absolute coordinate		e.g. '$A$1'
	 *	@throws	PHPExcel_Exception
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))))
    (AST_THROW
        (AST_NEW
            (
                (SCALAR)))))