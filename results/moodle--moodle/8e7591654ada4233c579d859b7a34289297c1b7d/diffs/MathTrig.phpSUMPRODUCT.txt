||||||||	public static function SUMPRODUCT() {
		$arrayList = func_get_args();

		$wrkArray = PHPExcel_Calculation_Functions::flattenArray(array_shift($arrayList));
		$wrkCellCount = count($wrkArray);

		for ($i=0; $i< $wrkCellCount; ++$i) {
			if ((!is_numeric($wrkArray[$i])) || (is_string($wrkArray[$i]))) {
				$wrkArray[$i] = 0;
			}
		}

		foreach($arrayList as $matrixData) {
			$array2 = PHPExcel_Calculation_Functions::flattenArray($matrixData);
			$count = count($array2);
			if ($wrkCellCount != $count) {
				return PHPExcel_Calculation_Functions::VALUE();
			}

			foreach ($array2 as $i => $val) {
				if ((!is_numeric($val)) || (is_string($val))) {
					$val = 0;
				}
				$wrkArray[$i] *= $val;
			}
		}

		return array_sum($wrkArray);
	}	//	function SUMPRODUCT()


	/**
	 * SUMSQ
	 *
	 * SUMSQ returns the sum of the squares of the arguments
	 *
	 * Excel Function:
	 *		SUMSQ(value1[,value2[, ...]])
	 *
	 * @access	public
	 * @category Mathematical and Trigonometric Functions
	 * @param	mixed		$arg,...		Data values
	 * @return	float
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_RETURN
                            (AST_STATIC_CALL)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN_OP
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))