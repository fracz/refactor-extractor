||||||||	public static function XNPV($rate, $values, $dates) {
		$rate = PHPExcel_Calculation_Functions::flattenSingleValue($rate);
		if (!is_numeric($rate)) return PHPExcel_Calculation_Functions::VALUE();
		if ((!is_array($values)) || (!is_array($dates))) return PHPExcel_Calculation_Functions::VALUE();
		$values	= PHPExcel_Calculation_Functions::flattenArray($values);
		$dates	= PHPExcel_Calculation_Functions::flattenArray($dates);
		$valCount = count($values);
		if ($valCount != count($dates)) return PHPExcel_Calculation_Functions::NaN();
		if ((min($values) > 0) || (max($values) < 0)) return PHPExcel_Calculation_Functions::VALUE();

		$xnpv = 0.0;
		for ($i = 0; $i < $valCount; ++$i) {
			if (!is_numeric($values[$i])) return PHPExcel_Calculation_Functions::VALUE();
			$xnpv += $values[$i] / pow(1 + $rate, PHPExcel_Calculation_DateTime::DATEDIF($dates[0],$dates[$i],'d') / 365);
		}
		return (is_finite($xnpv)) ? $xnpv : PHPExcel_Calculation_Functions::VALUE();
	}	//	function XNPV()


	/**
	 * YIELDDISC
	 *
	 * Returns the annual yield of a security that pays interest at maturity.
	 *
	 * @param	mixed	settlement	The security's settlement date.
	 *								The security's settlement date is the date after the issue date when the security is traded to the buyer.
	 * @param	mixed	maturity	The security's maturity date.
	 *								The maturity date is the date when the security expires.
	 * @param	int		price		The security's price per $100 face value.
	 * @param	int		redemption	The security's redemption value per $100 face value.
	 * @param	int		basis		The type of day count to use.
	 *										0 or omitted	US (NASD) 30/360
	 *										1				Actual/actual
	 *										2				Actual/360
	 *										3				Actual/365
	 *										4				European 30/360
	 * @return	float
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (
                        (AST_RETURN
                            (AST_STATIC_CALL)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (SCALAR)))
                                (SCALAR))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)
            (AST_STATIC_CALL))))