||||||||	public function __construct() {
		$this->stat = new Base();
	}	//	function Benchmark()

}  // class Benchmark		(end MagicSquareExample)


$benchmark = new Benchmark();

switch($_REQUEST['decomposition']) {
	case 'cholesky':
		$m = array();
		for ($i = 2; $i <= 8; $i *= 2) {
			$t = 32 / $i;
			echo "<b>Cholesky decomposition: $t random {$i}x{$i} matrices</b><br />";
			$s = $benchmark->displayStats($benchmark->runCholesky($i, $t));
			$m[$i] = $s['mean'];
			echo "<br />";
		}
		echo '<pre>';
		foreach($m as $x => $y) {
			echo "$x\t" . 1000*$y . "\n";
		}
		echo '</pre>';
		break;
	case 'eigenvalue':
		$m = array();
		for ($i = 2; $i <= 8; $i *= 2) {
			$t = 32 / $i;
			echo "<b>Eigenvalue decomposition: $t random {$i}x{$i} matrices</b><br />";
			$s = $benchmark->displayStats($benchmark->runEig($i, $t));
			$m[$i] = $s['mean'];
			echo "<br />";
		}
		echo '<pre>';
		foreach($m as $x => $y) {
			echo "$x\t" . 1000*$y . "\n";
		}
		echo '</pre>';
		break;
	case 'lu':
		$m = array();
		for ($i = 2; $i <= 8; $i *= 2) {
			$t = 32 / $i;
			echo "<b>LU decomposition: $t random {$i}x{$i} matrices</b><br />";
			$s = $benchmark->displayStats($benchmark->runLU($i, $t));
			$m[$i] = $s['mean'];
			echo "<br />";
		}
		echo '<pre>';
		foreach($m as $x => $y) {
			echo "$x\t" . 1000*$y . "\n";
		}
		echo '</pre>';
		break;
	case 'qr':
		$m = array();
		for ($i = 2; $i <= 8; $i *= 2) {
			$t = 32 / $i;
			echo "<b>QR decomposition: $t random {$i}x{$i} matrices</b><br />";
			$s = $benchmark->displayStats($benchmark->runQR($i, $t));
			$m[$i] = $s['mean'];
			echo "<br />";
		}
		echo '<pre>';
		foreach($m as $x => $y) {
			echo "$x\t" . 1000*$y . "\n";
		}
		echo '</pre>';
		break;
	case 'svd':
		$m = array();
		for($i = 2; $i <= 8; $i *= 2) {
			$t = 32 / $i;
			echo "<b>Singular value decomposition: $t random {$i}x{$i} matrices</b><br />";
			$s = $benchmark->displayStats($benchmark->runSVD($i, $t));
			$m[$i] = $s['mean'];
			echo "<br />";
		}
		echo '<pre>';
		foreach($m as $x => $y) {
			echo "$x\t" . 1000*$y . "\n";
		}
		echo '</pre>';
		break;
	case 'all':
		$s = $benchmark->run();
		print("<br /><b>Total<b>: {$s}s<br />");
		break;
	default:
		?>
		<ul>
			<li><a href="benchmark.php?decomposition=all">Complete Benchmark</a>
				<ul>
					<li><a href="benchmark.php?decomposition=cholesky">Cholesky</a></li>
					<li><a href="benchmark.php?decomposition=eigenvalue">Eigenvalue</a></li>
					<li><a href="benchmark.php?decomposition=lu">LU</a></li>
					<li><a href="benchmark.php?decomposition=qr">QR</a></li>
					<li><a href="benchmark.php?decomposition=svd">Singular Value</a></li>
				</ul>
			</li>
		</ul>
		<?php
		break;
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW)))