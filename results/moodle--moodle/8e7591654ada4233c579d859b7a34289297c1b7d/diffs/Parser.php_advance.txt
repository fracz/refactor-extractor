||||||||	function _advance()
	{
		$i = $this->_current_char;
		$formula_length = strlen($this->_formula);
		// eat up white spaces
		if ($i < $formula_length) {
			while ($this->_formula{$i} == " ") {
				++$i;
			}

			if ($i < ($formula_length - 1)) {
				$this->_lookahead = $this->_formula{$i+1};
			}
			$token = '';
		}

		while ($i < $formula_length) {
			$token .= $this->_formula{$i};

			if ($i < ($formula_length - 1)) {
				$this->_lookahead = $this->_formula{$i+1};
			} else {
				$this->_lookahead = '';
			}

			if ($this->_match($token) != '') {
				//if ($i < strlen($this->_formula) - 1) {
				//    $this->_lookahead = $this->_formula{$i+1};
				//}
				$this->_current_char = $i + 1;
				$this->_current_token = $token;
				return 1;
			}

			if ($i < ($formula_length - 2)) {
				$this->_lookahead = $this->_formula{$i+2};
			} else { // if we run out of characters _lookahead becomes empty
				$this->_lookahead = '';
			}
			++$i;
		}
		//die("Lexical error ".$this->_current_char);
	}

	/**
	 * Checks if it's a valid token.
	 *
	 * @access private
	 * @param mixed $token The token to check.
	 * @return mixed       The checked token or false on failure
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_WHILE
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_PRE_INC
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_VAR))
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_RETURN
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (AST_PRE_INC
                (AST_VAR)))))