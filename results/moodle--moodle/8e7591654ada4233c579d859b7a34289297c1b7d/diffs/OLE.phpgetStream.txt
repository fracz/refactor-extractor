||||||||	public function getStream($blockIdOrPps)
	{
		static $isRegistered = false;
		if (!$isRegistered) {
			stream_wrapper_register('ole-chainedblockstream',
				'PHPExcel_Shared_OLE_ChainedBlockStream');
			$isRegistered = true;
		}

		// Store current instance in global array, so that it can be accessed
		// in OLE_ChainedBlockStream::stream_open().
		// Object is removed from self::$instances in OLE_Stream::close().
		$GLOBALS['_OLE_INSTANCES'][] = $this;
		$instanceId = end(array_keys($GLOBALS['_OLE_INSTANCES']));

		$path = 'ole-chainedblockstream://oleInstanceId=' . $instanceId;
		if ($blockIdOrPps instanceof PHPExcel_Shared_OLE_PPS) {
			$path .= '&blockId=' . $blockIdOrPps->_StartBlock;
			$path .= '&size=' . $blockIdOrPps->Size;
		} else {
			$path .= '&blockId=' . $blockIdOrPps;
		}
		return fopen($path, 'r');
	}

	/**
	 * Reads a signed char.
	 * @param   resource  file handle
	 * @return  int
	 * @access public
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (NULL))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)))))