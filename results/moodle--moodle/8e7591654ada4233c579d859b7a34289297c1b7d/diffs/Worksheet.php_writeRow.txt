||||||||	private function _writeRow($row, $height, $xfIndex, $hidden = false, $level = 0)
	{
		$record	  = 0x0208;			   // Record identifier
		$length	  = 0x0010;			   // Number of bytes to follow

		$colMic	  = 0x0000;			   // First defined column
		$colMac	  = 0x0000;			   // Last defined column
		$irwMac	  = 0x0000;			   // Used by Excel to optimise loading
		$reserved	= 0x0000;			   // Reserved
		$grbit	   = 0x0000;			   // Option flags
		$ixfe		= $xfIndex;

		if ( $height < 0 ){
			$height = null;
		}

		// Use _writeRow($row, null, $XF) to set XF format without setting height
		if ($height != null) {
			$miyRw = $height * 20;  // row height
		} else {
			$miyRw = 0xff;		  // default row height is 256
		}

		// Set the options flags. fUnsynced is used to show that the font and row
		// heights are not compatible. This is usually the case for WriteExcel.
		// The collapsed flag 0x10 doesn't seem to be used to indicate that a row
		// is collapsed. Instead it is used to indicate that the previous row is
		// collapsed. The zero height flag, 0x20, is used to collapse a row.

		$grbit |= $level;
		if ($hidden) {
			$grbit |= 0x0020;
		}
		if ($height !== null) {
			$grbit |= 0x0040; // fUnsynced
		}
		if ($xfIndex !== 0xF) {
			$grbit |= 0x0080;
		}
		$grbit |= 0x0100;

		$header   = pack("vv",	   $record, $length);
		$data	 = pack("vvvvvvvv", $row, $colMic, $colMac, $miyRw,
									 $irwMac,$reserved, $grbit, $ixfe);
		$this->_append($header.$data);
	}

	/**
	 * Writes Excel DIMENSIONS to define the area in which there is data.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))))