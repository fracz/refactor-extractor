||||||||	public static function OCTTOHEX($x, $places=null) {
		$x	= PHPExcel_Calculation_Functions::flattenSingleValue($x);
		$places	= PHPExcel_Calculation_Functions::flattenSingleValue($places);

		if (is_bool($x)) {
			return PHPExcel_Calculation_Functions::VALUE();
		}
		$x = (string) $x;
		if (preg_match_all('/[01234567]/',$x,$out) != strlen($x)) {
			return PHPExcel_Calculation_Functions::NaN();
		}
		$hexVal = strtoupper(dechex(octdec($x)));

		return self::_nbrConversionFormat($hexVal,$places);
	}	//	function OCTTOHEX()


	/**
	 * COMPLEX
	 *
	 * Converts real and imaginary coefficients into a complex number of the form x + yi or x + yj.
	 *
	 * Excel Function:
	 *		COMPLEX(realNumber,imaginary[,places])
	 *
	 * @access	public
	 * @category Engineering Functions
	 * @param	float		$realNumber		The real coefficient of the complex number.
	 * @param	float		$imaginary		The imaginary coefficient of the complex number.
	 * @param	string		$suffix			The suffix for the imaginary component of the complex number.
	 *										If omitted, the suffix is assumed to be "i".
	 * @return	string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)))))