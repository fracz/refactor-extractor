||||||||	private static function _incompleteBeta($x, $p, $q) {
		if ($x <= 0.0) {
			return 0.0;
		} elseif ($x >= 1.0) {
			return 1.0;
		} elseif (($p <= 0.0) || ($q <= 0.0) || (($p + $q) > LOG_GAMMA_X_MAX_VALUE)) {
			return 0.0;
		}
		$beta_gam = exp((0 - self::_logBeta($p, $q)) + $p * log($x) + $q * log(1.0 - $x));
		if ($x < ($p + 1.0) / ($p + $q + 2.0)) {
			return $beta_gam * self::_betaFraction($x, $p, $q) / $p;
		} else {
			return 1.0 - ($beta_gam * self::_betaFraction(1 - $x, $q, $p) / $q);
		}
	}	//	function _incompleteBeta()


	// Function cache for _logBeta function
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (AST_CONST)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_VAR))))))))