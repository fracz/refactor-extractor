||||||||	public static function changeBrightness($hex, $adjustPercentage) {
		$rgba = (strlen($hex) == 8);

		$red	= self::getRed($hex, FALSE);
		$green	= self::getGreen($hex, FALSE);
		$blue	= self::getBlue($hex, FALSE);
		if ($adjustPercentage > 0) {
			$red	+= (255 - $red) * $adjustPercentage;
			$green	+= (255 - $green) * $adjustPercentage;
			$blue	+= (255 - $blue) * $adjustPercentage;
		} else {
			$red	+= $red * $adjustPercentage;
			$green	+= $green * $adjustPercentage;
			$blue	+= $blue * $adjustPercentage;
		}

		if ($red < 0) $red = 0;
		elseif ($red > 255) $red = 255;
		if ($green < 0) $green = 0;
		elseif ($green > 255) $green = 255;
		if ($blue < 0) $blue = 0;
		elseif ($blue > 255) $blue = 255;

		$rgb = strtoupper(	str_pad(dechex($red), 2, '0', 0) .
							str_pad(dechex($green), 2, '0', 0) .
							str_pad(dechex($blue), 2, '0', 0)
						 );
		return (($rgba) ? 'FF' : '') . $rgb;
	}

	/**
	 * Get indexed color
	 *
	 * @param	int			$pIndex			Index entry point into the colour array
	 * @param	boolean		$background		Flag to indicate whether default background or foreground colour
	 *											should be returned if the indexed colour doesn't exist
	 * @return	PHPExcel_Style_Color
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)
                                (SCALAR)
                                (SCALAR)))
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)
                                (SCALAR)
                                (SCALAR))))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))
            (AST_VAR))))