||||||||	private function _writeCatAx($objWriter, PHPExcel_Chart_PlotArea $plotArea, $xAxisLabel, $groupType, $id1, $id2, $isMultiLevelSeries)
	{
		$objWriter->startElement('c:catAx');

			if ($id1 > 0) {
				$objWriter->startElement('c:axId');
					$objWriter->writeAttribute('val', $id1);
				$objWriter->endElement();
			}

			$objWriter->startElement('c:scaling');
				$objWriter->startElement('c:orientation');
					$objWriter->writeAttribute('val', "minMax");
				$objWriter->endElement();
			$objWriter->endElement();

			$objWriter->startElement('c:delete');
				$objWriter->writeAttribute('val', 0);
			$objWriter->endElement();

			$objWriter->startElement('c:axPos');
				$objWriter->writeAttribute('val', "b");
			$objWriter->endElement();

			if (!is_null($xAxisLabel)) {
				$objWriter->startElement('c:title');
					$objWriter->startElement('c:tx');
						$objWriter->startElement('c:rich');

							$objWriter->startElement('a:bodyPr');
							$objWriter->endElement();

							$objWriter->startElement('a:lstStyle');
							$objWriter->endElement();

							$objWriter->startElement('a:p');
								$objWriter->startElement('a:r');

									$caption = $xAxisLabel->getCaption();
									if (is_array($caption))
										$caption = $caption[0];
									$objWriter->startElement('a:t');
//										$objWriter->writeAttribute('xml:space', 'preserve');
										$objWriter->writeRawData(PHPExcel_Shared_String::ControlCharacterPHP2OOXML( $caption ));
									$objWriter->endElement();

								$objWriter->endElement();
							$objWriter->endElement();
						$objWriter->endElement();
					$objWriter->endElement();

					$objWriter->startElement('c:overlay');
						$objWriter->writeAttribute('val', 0);
					$objWriter->endElement();

					$layout = $xAxisLabel->getLayout();
					$this->_writeLayout($layout, $objWriter);

				$objWriter->endElement();

			}

			$objWriter->startElement('c:numFmt');
				$objWriter->writeAttribute('formatCode', "General");
				$objWriter->writeAttribute('sourceLinked', 1);
			$objWriter->endElement();

			$objWriter->startElement('c:majorTickMark');
				$objWriter->writeAttribute('val', "out");
			$objWriter->endElement();

			$objWriter->startElement('c:minorTickMark');
				$objWriter->writeAttribute('val', "none");
			$objWriter->endElement();

			$objWriter->startElement('c:tickLblPos');
				$objWriter->writeAttribute('val', "nextTo");
			$objWriter->endElement();

			if ($id2 > 0) {
					$objWriter->startElement('c:crossAx');
						$objWriter->writeAttribute('val', $id2);
					$objWriter->endElement();

					$objWriter->startElement('c:crosses');
						$objWriter->writeAttribute('val', "autoZero");
					$objWriter->endElement();
			}

			$objWriter->startElement('c:auto');
				$objWriter->writeAttribute('val', 1);
			$objWriter->endElement();

			$objWriter->startElement('c:lblAlgn');
				$objWriter->writeAttribute('val', "ctr");
			$objWriter->endElement();

			$objWriter->startElement('c:lblOffset');
				$objWriter->writeAttribute('val', 100);
			$objWriter->endElement();

			if ($isMultiLevelSeries) {
				$objWriter->startElement('c:noMultiLvlLbl');
					$objWriter->writeAttribute('val', 0);
				$objWriter->endElement();
			}
		$objWriter->endElement();

	}


	/**
	 * Write Value Axis
	 *
	 * @param 	PHPExcel_Shared_XMLWriter 	$objWriter 		XML Writer
	 * @param 	PHPExcel_Chart_PlotArea		$plotArea
	 * @param 	PHPExcel_Chart_Title		$yAxisLabel
	 * @param 	string						$groupType		Chart type
	 * @param 	string						$id1
	 * @param 	string						$id2
	 * @param 	boolean						$isMultiLevelSeries
	 * @throws 	Exception
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)))