||||||||	public static function DEVSQ() {
		$aArgs = PHPExcel_Calculation_Functions::flattenArrayIndexed(func_get_args());

		// Return value
		$returnValue = null;

		$aMean = self::AVERAGE($aArgs);
		if ($aMean != PHPExcel_Calculation_Functions::DIV0()) {
			$aCount = -1;
			foreach ($aArgs as $k => $arg) {
				// Is it a numeric value?
				if ((is_bool($arg)) &&
					((!PHPExcel_Calculation_Functions::isCellValue($k)) || (PHPExcel_Calculation_Functions::getCompatibilityMode() == PHPExcel_Calculation_Functions::COMPATIBILITY_OPENOFFICE))) {
					$arg = (integer) $arg;
				}
				if ((is_numeric($arg)) && (!is_string($arg))) {
					if (is_null($returnValue)) {
						$returnValue = pow(($arg - $aMean),2);
					} else {
						$returnValue += pow(($arg - $aMean),2);
					}
					++$aCount;
				}
			}

			// Return
			if (is_null($returnValue)) {
				return PHPExcel_Calculation_Functions::NaN();
			} else {
				return $returnValue;
			}
		}
		return self::NA();
	}	//	function DEVSQ()


	/**
	 * EXPONDIST
	 *
	 *	Returns the exponential distribution. Use EXPONDIST to model the time between events,
	 *		such as how long an automated bank teller takes to deliver cash. For example, you can
	 *		use EXPONDIST to determine the probability that the process takes at most 1 minute.
	 *
	 * @param	float		$value			Value of the function
	 * @param	float		$lambda			The parameter value
	 * @param	boolean		$cumulative
	 * @return	float
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CALL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_STATIC_CALL))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (SCALAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_BINARY_OP
                                        (AST_UNARY_OP
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR))))
                                        (AST_BINARY_OP
                                            (AST_STATIC_CALL)
                                            (AST_CLASS_CONST
                                                (SCALAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CAST
                                            (AST_VAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR))))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ASSIGN_OP
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (AST_VAR))
                                                            (SCALAR)))))))
                                    (AST_PRE_INC
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_STATIC_CALL))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_STATIC_CALL)))