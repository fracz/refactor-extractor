||||||||	function _expression()
	{
		// If it's a string return a string node
		if (preg_match("/\"([^\"]|\"\"){0,255}\"/", $this->_current_token)) {
			$tmp = str_replace('""', '"', $this->_current_token);
			if (($tmp == '"') || ($tmp == '')) $tmp = '""';	//	Trap for "" that has been used for an empty string
			$result = $this->_createTree($tmp, '', '');
			$this->_advance();
			return $result;
        // If it's an error code
        } elseif (preg_match("/^#[A-Z0\/]{3,5}[!?]{1}$/", $this->_current_token) or $this->_current_token == '#N/A'){
		    $result = $this->_createTree($this->_current_token, 'ptgErr', '');
		    $this->_advance();
		    return $result;
		// If it's a negative value
        } elseif ($this->_current_token == "-") {
			// catch "-" Term
			$this->_advance();
			$result2 = $this->_expression();
			$result = $this->_createTree('ptgUminus', $result2, '');
			return $result;
        // If it's a positive value
		} elseif ($this->_current_token == "+") {
			// catch "+" Term
			$this->_advance();
			$result2 = $this->_expression();
			$result = $this->_createTree('ptgUplus', $result2, '');
			return $result;
		}
		$result = $this->_term();
		while (($this->_current_token == "+") or
			   ($this->_current_token == "-") or
			   ($this->_current_token == "^")) {
		/**/
			if ($this->_current_token == "+") {
				$this->_advance();
				$result2 = $this->_term();
				$result = $this->_createTree('ptgAdd', $result, $result2);
			} elseif ($this->_current_token == "-") {
				$this->_advance();
				$result2 = $this->_term();
				$result = $this->_createTree('ptgSub', $result, $result2);
			} else {
				$this->_advance();
				$result2 = $this->_term();
				$result = $this->_createTree('ptgPower', $result, $result2);
			}
		}
		return $result;
	}

	/**
	 * This function just introduces a ptgParen element in the tree, so that Excel
	 * doesn't get confused when working with a parenthesized formula afterwards.
	 *
	 * @access private
	 * @see _fact()
	 * @return array The parsed ptg'd tree
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))