||||||||	function _packExtRef($ext_ref)
	{
		$ext_ref = preg_replace("/^'/", '', $ext_ref); // Remove leading  ' if any.
		$ext_ref = preg_replace("/'$/", '', $ext_ref); // Remove trailing ' if any.

		// Check if there is a sheet range eg., Sheet1:Sheet2.
		if (preg_match("/:/", $ext_ref)) {
			list($sheet_name1, $sheet_name2) = explode(':', $ext_ref);

			$sheet1 = $this->_getSheetIndex($sheet_name1);
			if ($sheet1 == -1) {
				throw new Exception("Unknown sheet name $sheet_name1 in formula");
			}
			$sheet2 = $this->_getSheetIndex($sheet_name2);
			if ($sheet2 == -1) {
				throw new Exception("Unknown sheet name $sheet_name2 in formula");
			}

			// Reverse max and min sheet numbers if necessary
			if ($sheet1 > $sheet2) {
				list($sheet1, $sheet2) = array($sheet2, $sheet1);
			}
		} else { // Single sheet name only.
			$sheet1 = $this->_getSheetIndex($ext_ref);
			if ($sheet1 == -1) {
				throw new Exception("Unknown sheet name $ext_ref in formula");
			}
			$sheet2 = $sheet1;
		}

		// References are stored relative to 0xFFFF.
		$offset = -1 - $sheet1;

		return pack('vdvv', $offset, 0x00, $sheet1, $sheet2);
	}

	/**
	 * Look up the REF index that corresponds to an external sheet name
	 * (or range). If it doesn't exist yet add it to the workbook's references
	 * array. It assumes all sheet names given must exist.
	 *
	 * @access private
	 * @param string $ext_ref The name of the external reference
	 * @return mixed The reference index in packed() format on success
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_UNARY_OP
                (SCALAR))
            (AST_VAR)))
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (AST_VAR)))))