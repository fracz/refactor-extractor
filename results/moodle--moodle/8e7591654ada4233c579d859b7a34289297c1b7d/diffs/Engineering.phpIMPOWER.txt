||||||||	public static function IMPOWER($complexNumber,$realNumber) {
		$complexNumber	= PHPExcel_Calculation_Functions::flattenSingleValue($complexNumber);
		$realNumber		= PHPExcel_Calculation_Functions::flattenSingleValue($realNumber);

		if (!is_numeric($realNumber)) {
			return PHPExcel_Calculation_Functions::VALUE();
		}

		$parsedComplex = self::_parseComplex($complexNumber);

		$r = sqrt(($parsedComplex['real'] * $parsedComplex['real']) + ($parsedComplex['imaginary'] * $parsedComplex['imaginary']));
		$rPower = pow($r,$realNumber);
		$theta = self::IMARGUMENT($complexNumber) * $realNumber;
		if ($theta == 0) {
			return 1;
		} elseif ($parsedComplex['imaginary'] == 0.0) {
			return self::COMPLEX($rPower * cos($theta),$rPower * sin($theta),$parsedComplex['suffix']);
		} else {
			return self::COMPLEX($rPower * cos($theta),$rPower * sin($theta),$parsedComplex['suffix']);
		}
	}	//	function IMPOWER()


	/**
	 * IMDIV
	 *
	 * Returns the quotient of two complex numbers in x + yi or x + yj text format.
	 *
	 * Excel Function:
	 *		IMDIV(complexDividend,complexDivisor)
	 *
	 * @param	string		$complexDividend	The complex numerator or dividend.
	 * @param	string		$complexDivisor		The complex denominator or divisor.
	 * @return	string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))))))