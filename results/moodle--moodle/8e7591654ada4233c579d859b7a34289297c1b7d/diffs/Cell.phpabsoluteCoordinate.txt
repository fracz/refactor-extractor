||||||||	public static function absoluteCoordinate($pCoordinateString = 'A1')
	{
		if (strpos($pCoordinateString,':') === FALSE && strpos($pCoordinateString,',') === FALSE) {
			// Split out any worksheet name from the coordinate
			$worksheet = '';
			$cellAddress = explode('!',$pCoordinateString);
			if (count($cellAddress) > 1) {
				list($worksheet,$pCoordinateString) = $cellAddress;
			}
			if ($worksheet > '')	$worksheet .= '!';

			// Create absolute coordinate
			list($column, $row) = self::coordinateFromString($pCoordinateString);
			$column = ltrim($column,'$');
			$row = ltrim($row,'$');
			return $worksheet . '$' . $column . '$' . $row;
		}

		throw new PHPExcel_Exception('Cell coordinate string can not be a range of cells');
	}

	/**
	 *	Split range into coordinate strings
	 *
	 *	@param	string	$pRange		e.g. 'B4:D9' or 'B4:D9,H2:O11' or 'B4'
	 *	@return	array	Array containg one or more arrays containing one or two coordinate strings
	 *								e.g. array('B4','D9') or array(array('B4','D9'),array('H2','O11'))
	 *										or array('B4')
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (SCALAR))
                        (AST_VAR))))))
    (AST_THROW
        (AST_NEW
            (
                (SCALAR)))))