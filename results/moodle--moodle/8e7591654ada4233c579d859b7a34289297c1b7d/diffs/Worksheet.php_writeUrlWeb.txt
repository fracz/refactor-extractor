||||||||	function _writeUrlWeb($row1, $col1, $row2, $col2, $url)
	{
		$record	  = 0x01B8;					   // Record identifier
		$length	  = 0x00000;					  // Bytes to follow

		// Pack the undocumented parts of the hyperlink stream
		$unknown1	= pack("H*", "D0C9EA79F9BACE118C8200AA004BA90B02000000");
		$unknown2	= pack("H*", "E0C9EA79F9BACE118C8200AA004BA90B");

		// Pack the option flags
		$options	 = pack("V", 0x03);

		// Convert URL to a null terminated wchar string
		$url		 = join("\0", preg_split("''", $url, -1, PREG_SPLIT_NO_EMPTY));
		$url		 = $url . "\0\0\0";

		// Pack the length of the URL
		$url_len	 = pack("V", strlen($url));

		// Calculate the data length
		$length	  = 0x34 + strlen($url);

		// Pack the header data
		$header	  = pack("vv",   $record, $length);
		$data		= pack("vvvv", $row1, $row2, $col1, $col2);

		// Write the packed data
		$this->_append($header . $data .
					   $unknown1 . $options .
					   $unknown2 . $url_len . $url);
		return 0;
	}

	/**
	 * Used to write internal reference hyperlinks such as "Sheet1!A1".
	 *
	 * @access private
	 * @see _writeUrl()
	 * @param integer $row1   Start row
	 * @param integer $col1   Start column
	 * @param integer $row2   End row
	 * @param integer $col2   End column
	 * @param string  $url	URL string
	 * @return integer
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_UNARY_OP
                            (SCALAR))
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR))
                    (AST_VAR))
                (AST_VAR))))
    (AST_RETURN
        (SCALAR)))