    function _get_color($name_color = '') {
        if (strpos($name_color, '#') === 0) {
            return $name_color; // no conversion needed
        }

        $colors = array('aqua'    => '#00FFFF',
                        'cyan'    => '#00FFFF',
                        'black'   => '#FFFFFF',
                        'blue'    => '#0000FF',
                        'brown'   => '#A52A2A',
                        'magenta' => '#FF00FF',
                        'fuchsia' => '#FF00FF',
                        'gray'    => '#A0A0A0',
                        'grey'    => '#A0A0A0',
                        'green'   => '#00FF00',
                        'lime'    => '#00FF00',
                        'navy'    => '#000080',
                        'orange'  => '#FF8000',
                        'purple'  => '#800080',
                        'red'     => '#FF0000',
                        'silver'  => '#DCDCDC',
                        'white'   => '#FFFFFF',
                        'yellow'  => '#FFFF00');

        if(array_key_exists($name_color, $colors)) {
            return $colors[$name_color];
        } else {
            return false;
        }
    }
}


//=============================
// OpenDocument XML functions
//=============================
function get_ods_content(&$worksheets) {


    // find out the size of worksheets and used styles
    $formats = array();
    $formatstyles = '';
    $rowstyles = '';
    $colstyles = '';

    foreach($worksheets as $wsnum=>$ws) {
        $worksheets[$wsnum]->maxr = 0;
        $worksheets[$wsnum]->maxc = 0;
        foreach($ws->data as $rnum=>$row) {
            if ($rnum > $worksheets[$wsnum]->maxr) {
                $worksheets[$wsnum]->maxr = $rnum;
            }
            foreach($row as $cnum=>$cell) {
                if ($cnum > $worksheets[$wsnum]->maxc) {
                    $worksheets[$wsnum]->maxc = $cnum;
                }
                if (!empty($cell->format)) {
                    if (!array_key_exists($cell->format->id, $formats)) {
                        $formats[$cell->format->id] = $cell->format;
                    }
                }
            }
        }

        foreach($ws->rows as $rnum=>$row) {
            if (!empty($row->format)) {
                if (!array_key_exists($row->format->id, $formats)) {
                    $formats[$row->format->id] = $row->format;
                }
            }
            if ($rnum > $worksheets[$wsnum]->maxr) {
                $worksheets[$wsnum]->maxr = $rnum;
            }
            //define all column styles
            if (!empty($ws->rows[$rnum])) {
                $rowstyles .= '
  <style:style style:name="ws'.$wsnum.'ro'.$rnum.'" style:family="table-row">
   <style:table-row-properties style:row-height="'.$row->height.'pt"/>
  </style:style>';
            }
        }

        foreach($ws->columns as $cnum=>$col) {
            if (!empty($col->format)) {
                if (!array_key_exists($col->format->id, $formats)) {
                    $formats[$col->format->id] = $col->format;
                }
            }
            if ($cnum > $worksheets[$wsnum]->maxc) {
                $worksheets[$wsnum]->maxc = $cnum;
            }
            //define all column styles
            if (!empty($ws->columns[$cnum])) {
                $colstyles .= '
  <style:style style:name="ws'.$wsnum.'co'.$cnum.'" style:family="table-column">
   <style:table-column-properties style:column-width="'.$col->width.'pt"/>
  </style:style>';
            }
        }
    }

    foreach($formats as $format) {
        $textprop = '';
        $cellprop = '';
        $parprop  = '';
        foreach($format->properties as $pname=>$pvalue) {
            switch ($pname) {
                case 'bold':
                    if (!empty($pvalue)) {
                        $textprop .= ' fo:font-weight="bold"';
                    }
                    break;
                case 'italic':
                    if (!empty($pvalue)) {
                        $textprop .= ' fo:font-style="italic"';
                    }
                    break;
                case 'underline':
                    if (!empty($pvalue)) {
                        $textprop .= ' style:text-underline-color="font-color" style:text-underline-style="solid" style:text-underline-width="auto"';
                    }
                    break;
                case 'strikeout':
                    if (!empty($pvalue)) {
                        $textprop .= ' style:text-line-through-style="solid"';
                    }
                    break;
                case 'color':
                    if ($pvalue !== false) {
                        $textprop .= ' fo:color="'.$pvalue.'"';
                    }
                    break;
                case 'bg_color':
                    if ($pvalue !== false) {
                        $cellprop .= ' fo:background-color="'.$pvalue.'"';
                    }
                    break;
                case 'align':
                    $parprop .= ' fo:text-align="'.$pvalue.'"';
                    break;
                case 'v_align':
                    $cellprop .= ' style:vertical-align="'.$pvalue.'"';
                    break;
            }
        }
        if (!empty($textprop)) {
            $textprop = '
   <style:text-properties'.$textprop.'/>';
        }

        if (!empty($cellprop)) {
            $cellprop = '
   <style:table-cell-properties'.$cellprop.'/>';
        }

        if (!empty($parprop)) {
            $parprop = '
   <style:paragraph-properties'.$parprop.'/>';
        }

        $formatstyles .= '
  <style:style style:name="format'.$format->id.'" style:family="table-cell">'.$textprop.$cellprop.$parprop.'
  </style:style>';
    }

/// header
    $buffer =
'<?xml version="1.0" encoding="UTF-8"?>
<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink">
 <office:automatic-styles>
  <style:style style:name="ta1" style:family="table" style:master-page-name="Standard1">
   <style:table-properties table:display="true"/>
  </style:style>
  <style:style style:name="date0" style:family="table-cell"/>';

$buffer .= $formatstyles;
$buffer .= $rowstyles;
$buffer .= $colstyles;

 $buffer .= '
 </office:automatic-styles>
 <office:body>
  <office:spreadsheet>
';

    foreach($worksheets as $wsnum=>$ws) {

    /// worksheet header
        $buffer .= '<table:table table:name="' . htmlspecialchars($ws->name) . '" table:style-name="ta1">'."\n";

        // define column properties
        for($c=0; $c<=$ws->maxc; $c++) {
            if (array_key_exists($c, $ws->columns)) {
                $extra = '';
                if (!empty($ws->columns[$c]->format)) {
                    $extra .= ' table:default-cell-style-name="format'.$ws->columns[$c]->format->id.'"';
                }
                if ($ws->columns[$c]->hidden) {
                    $extra .= ' table:visibility="collapse"';
                }
                $buffer .= '<table:table-column table:style-name="ws'.$wsnum.'co'.$c.'"'.$extra.'/>'."\n";
            } else {
                $buffer .= '<table:table-column/>'."\n";
            }
        }

        // print all rows
        for($r=0; $r<=$ws->maxr; $r++) {
            if (array_key_exists($r, $ws->rows)) {
                $extra = '';
                if (!empty($ws->rows[$r]->format)) {
                    $extra .= ' table:default-cell-style-name="format'.$ws->rows[$r]->format->id.'"';
                }
                if ($ws->rows[$r]->hidden) {
                    $extra .= ' table:visibility="collapse"';
                }
                $buffer .= '<table:table-row table:style-name="ws'.$wsnum.'ro'.$r.'"'.$extra.'>'."\n";
            } else {
                $buffer .= '<table:table-row>'."\n";
            }
            for($c=0; $c<=$ws->maxc; $c++) {
                if (isset($ws->data[$r][$c])) {
                    $cell = $ws->data[$r][$c];
                    $extra = ' ';
                    if (!empty($cell->format)) {
                        $extra = ' table:style-name="format'.$cell->format->id.'"';
                    }
                    if ($cell->type == 'date') {
                        $buffer .= '<table:table-cell office:value-type="date" table:style-name="date0" office:date-value="' . strftime('%Y-%m-%dT%H:%M:%S', $cell->value) . '"'.$extra.'>'
                                 . '<text:p>' . strftime('%Y-%m-%dT%H:%M:%S', $cell->value) . '</text:p>'
                                 . '</table:table-cell>'."\n";
                    } else if ($cell->type == 'float') {
                        $buffer .= '<table:table-cell office:value-type="float" office:value="' . htmlspecialchars($cell->value) . '"'.$extra.'>'
                                 . '<text:p>' . htmlspecialchars($cell->value) . '</text:p>'
                                 . '</table:table-cell>'."\n";
                    } else if ($cell->type == 'string') {
                        $buffer .= '<table:table-cell office:value-type="string" office:string-value="' . htmlspecialchars($cell->value) . '"'.$extra.'>'
                                 . '<text:p>' . htmlspecialchars($cell->value) . '</text:p>'
                                 . '</table:table-cell>'."\n";
                    } else {
                        $buffer .= '<table:table-cell office:value-type="string"'.$extra.'>'
                                 . '<text:p>!!Error - unknown type!!</text:p>'
                                 . '</table:table-cell>'."\n";
                    }
                } else {
                    $buffer .= '<table:table-cell/>'."\n";
                }
            }
            $buffer .= '</table:table-row>'."\n";
        }
    /// worksheet footer
        $buffer .= '</table:table>'."\n";

    }

/// footer
    $buffer .=
'  </office:spreadsheet>
 </office:body>
</office:document-content>';

    return $buffer;
}

function get_ods_mimetype() {
    return 'application/vnd.oasis.opendocument.spreadsheet';
}

function get_ods_meta() {
    global $CFG, $USER;

    return
'<?xml version="1.0" encoding="UTF-8"?>
<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink">
 <office:meta>
  <meta:generator>Moodle '.$CFG->version.'</meta:generator>
  <meta:initial-creator>'.fullname($USER, true).'</meta:initial-creator>
  <meta:editing-cycles>1</meta:editing-cycles>
  <meta:creation-date>'.strftime('%Y-%m-%dT%H:%M:%S').'</meta:creation-date>
  <dc:date>'.strftime('%Y-%m-%dT%H:%M:%S').'</dc:date>
  <dc:creator>'.fullname($USER, true).'</dc:creator>
 </office:meta>
</office:document-meta>';
}

function get_ods_styles() {
    return
'<?xml version="1.0" encoding="UTF-8"?>
<office:document-styles xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink">
 <office:styles>
  <style:default-style style:family="table-column">
   <style:table-column-properties style:column-width="75pt"/>
  </style:default-style>
  <style:default-style style:family="table-row">
   <style:table-row-properties style:row-height="15pt"/>
  </style:default-style>
  <style:default-style style:family="table-cell">
   <style:table-cell-properties fo:background-color="#ffffff" style:cell-protect="protected" style:vertical-align="middle"/>
   <style:text-properties fo:color="#000000" fo:font-family="Arial" fo:font-size="12pt"/>
  </style:default-style>
 </office:styles>
 <office:automatic-styles>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties fo:margin-bottom="56.6930116pt" fo:margin-left="56.6930116pt" fo:margin-right="56.6930116pt" fo:margin-top="56.6930116pt" fo:page-height="841.89122226pt" fo:page-width="595.2766218pt" style:print="objects charts drawings zero-values" style:print-orientation="portrait"/>
  </style:page-layout>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Standard1" style:page-layout-name="pm1">
   <style:header>
 <text:p>
  <text:sheet-name>???</text:sheet-name>
 </text:p>
</style:header><style:footer>
 <text:p>
  <text:sheet-name>Page </text:sheet-name>
  <text:page-number>1</text:page-number>
 </text:p>
</style:footer>
  </style:master-page>
 </office:master-styles>
</office:document-styles>
';
}

function get_ods_manifest() {
    return
'<?xml version="1.0" encoding="UTF-8"?>
<manifest:manifest xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0">
 <manifest:file-entry manifest:media-type="application/vnd.oasis.opendocument.spreadsheet" manifest:full-path="/"/>
 <manifest:file-entry manifest:media-type="text/xml" manifest:full-path="content.xml"/>
 <manifest:file-entry manifest:media-type="text/xml" manifest:full-path="styles.xml"/>
 <manifest:file-entry manifest:media-type="text/xml" manifest:full-path="meta.xml"/>
</manifest:manifest>';
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONST))))))||||||||