||||||||	private function _writeDataLbls($objWriter, $chartLayout)
	{
		$objWriter->startElement('c:dLbls');

			$objWriter->startElement('c:showLegendKey');
				$showLegendKey = (empty($chartLayout)) ? 0 : $chartLayout->getShowLegendKey();
				$objWriter->writeAttribute('val', ((empty($showLegendKey)) ? 0 : 1) );
			$objWriter->endElement();


			$objWriter->startElement('c:showVal');
				$showVal = (empty($chartLayout)) ? 0 : $chartLayout->getShowVal();
				$objWriter->writeAttribute('val', ((empty($showVal)) ? 0 : 1) );
			$objWriter->endElement();

			$objWriter->startElement('c:showCatName');
				$showCatName = (empty($chartLayout)) ? 0 : $chartLayout->getShowCatName();
				$objWriter->writeAttribute('val', ((empty($showCatName)) ? 0 : 1) );
			$objWriter->endElement();

			$objWriter->startElement('c:showSerName');
				$showSerName = (empty($chartLayout)) ? 0 : $chartLayout->getShowSerName();
				$objWriter->writeAttribute('val', ((empty($showSerName)) ? 0 : 1) );
			$objWriter->endElement();

			$objWriter->startElement('c:showPercent');
				$showPercent = (empty($chartLayout)) ? 0 : $chartLayout->getShowPercent();
				$objWriter->writeAttribute('val', ((empty($showPercent)) ? 0 : 1) );
			$objWriter->endElement();

			$objWriter->startElement('c:showBubbleSize');
				$showBubbleSize = (empty($chartLayout)) ? 0 : $chartLayout->getShowBubbleSize();
				$objWriter->writeAttribute('val', ((empty($showBubbleSize)) ? 0 : 1) );
			$objWriter->endElement();

			$objWriter->startElement('c:showLeaderLines');
				$showLeaderLines = (empty($chartLayout)) ? 1 : $chartLayout->getShowLeaderLines();
				$objWriter->writeAttribute('val', ((empty($showLeaderLines)) ? 0 : 1) );
			$objWriter->endElement();

		$objWriter->endElement();
	}

	/**
	 * Write Category Axis
	 *
	 * @param 	PHPExcel_Shared_XMLWriter 	$objWriter 		XML Writer
	 * @param 	PHPExcel_Chart_PlotArea		$plotArea
	 * @param 	PHPExcel_Chart_Title		$xAxisLabel
	 * @param 	string						$groupType		Chart type
	 * @param 	string						$id1
	 * @param 	string						$id2
	 * @param 	boolean						$isMultiLevelSeries
	 * @throws 	Exception
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_VAR))
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))