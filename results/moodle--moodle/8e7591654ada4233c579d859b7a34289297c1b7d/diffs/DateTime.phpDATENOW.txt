||||||||	public static function DATENOW() {
		$saveTimeZone = date_default_timezone_get();
		date_default_timezone_set('UTC');
		$retValue = False;
		$excelDateTime = floor(PHPExcel_Shared_Date::PHPToExcel(time()));
		switch (PHPExcel_Calculation_Functions::getReturnDateType()) {
			case PHPExcel_Calculation_Functions::RETURNDATE_EXCEL :
					$retValue = (float) $excelDateTime;
					break;
			case PHPExcel_Calculation_Functions::RETURNDATE_PHP_NUMERIC :
					$retValue = (integer) PHPExcel_Shared_Date::ExcelToPHP($excelDateTime);
					break;
			case PHPExcel_Calculation_Functions::RETURNDATE_PHP_OBJECT :
					$retValue = PHPExcel_Shared_Date::ExcelToPHPObject($excelDateTime);
					break;
		}
		date_default_timezone_set($saveTimeZone);

		return $retValue;
	}	//	function DATENOW()


	/**
	 * DATE
	 *
	 * The DATE function returns a value that represents a particular date.
	 *
	 * NOTE: When used in a Cell Formula, MS Excel changes the cell format so that it matches the date
	 * format of your regional settings. PHPExcel does not change cell formatting in this way.
	 *
	 * Excel Function:
	 *		DATE(year,month,day)
	 *
	 * @access	public
	 * @category Date/Time Functions
	 * @param	integer		$year	The value of the year argument can include one to four digits.
	 *								Excel interprets the year argument according to the configured
	 *								date system: 1900 or 1904.
	 *								If year is between 0 (zero) and 1899 (inclusive), Excel adds that
	 *								value to 1900 to calculate the year. For example, DATE(108,1,2)
	 *								returns January 2, 2008 (1900+108).
	 *								If year is between 1900 and 9999 (inclusive), Excel uses that
	 *								value as the year. For example, DATE(2008,1,2) returns January 2,
	 *								2008.
	 *								If year is less than 0 or is 10000 or greater, Excel returns the
	 *								#NUM! error value.
	 * @param	integer		$month	A positive or negative integer representing the month of the year
	 *								from 1 to 12 (January to December).
	 *								If month is greater than 12, month adds that number of months to
	 *								the first month in the year specified. For example, DATE(2008,14,2)
	 *								returns the serial number representing February 2, 2009.
	 *								If month is less than 1, month subtracts the magnitude of that
	 *								number of months, plus 1, from the first month in the year
	 *								specified. For example, DATE(2008,-3,2) returns the serial number
	 *								representing September 2, 2007.
	 * @param	integer		$day	A positive or negative integer representing the day of the month
	 *								from 1 to 31.
	 *								If day is greater than the number of days in the month specified,
	 *								day adds that number of days to the first day in the month. For
	 *								example, DATE(2008,1,35) returns the serial number representing
	 *								February 4, 2008.
	 *								If day is less than 1, day subtracts the magnitude that number of
	 *								days, plus one, from the first day of the month specified. For
	 *								example, DATE(2008,1,-15) returns the serial number representing
	 *								December 16, 2007.
	 * @return	mixed	Excel date/time serial value, PHP date/time serial value or PHP date/time object,
	 *						depending on the value of the ReturnDateType flag
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL))))))
    (AST_SWITCH
        (AST_STATIC_CALL)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CAST
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CAST
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))