||||||||	function _convertRef2d($cell)
	{
//		$class = 2; // as far as I know, this is magick.

		// Convert the cell reference
		$cell_array = $this->_cellToPackedRowcol($cell);
		list($row, $col) = $cell_array;

		// The ptg value depends on the class of the ptg.
//		if ($class == 0) {
//			$ptgRef = pack("C", $this->ptg['ptgRef']);
//		} elseif ($class == 1) {
//			$ptgRef = pack("C", $this->ptg['ptgRefV']);
//		} elseif ($class == 2) {
			$ptgRef = pack("C", $this->ptg['ptgRefA']);
//		} else {
//			// TODO: use real error codes
//			throw new Exception("Unknown class $class");
//		}
		return $ptgRef.$row.$col;
	}

	/**
	 * Convert an Excel 3d reference such as "Sheet1!A1" or "Sheet1:Sheet2!A1" to a
	 * ptgRef3d.
	 *
	 * @access private
	 * @param string $cell An Excel cell reference
	 * @return mixed The packed ptgRef3d token on success.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (AST_VAR))))