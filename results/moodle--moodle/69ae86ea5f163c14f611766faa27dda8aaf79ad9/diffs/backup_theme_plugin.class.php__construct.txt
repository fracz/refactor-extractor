||||||||    public function __construct($plugintype, $pluginname, $optigroup, $step) {

        parent::__construct($plugintype, $pluginname, $optigroup, $step);

        $this->coursetheme = backup_plan_dbops::get_theme_from_courseid(
                    $this->task->get_courseid());

    }

    /**
     * Return condition for whether this theme should be backed up (= if it
     * is the same theme as the one used in this course). This condition has
     * the theme used in the course. It will be compared against the name
     * of the theme, by use of third parameter in get_plugin_element; in
     * subclass, you should do:
     * $plugin = $this->get_plugin_element(null, $this->get_theme_condition(), 'mytheme');
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))))))