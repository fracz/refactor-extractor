    protected function definition_inner(&$mform) {

        $plugindefaults     = get_config('workshopform_numerrors');
        $nodimensions       = $this->_customdata['nodimensions'];       // number of currently filled dimensions
        $norepeats          = $this->_customdata['norepeats'];          // number of dimensions to display
        $descriptionopts    = $this->_customdata['descriptionopts'];    // wysiwyg fields options
        $current            = $this->_customdata['current'];            // current data to be set

        $mform->addElement('hidden', 'norepeats', $norepeats);
        // value not to be overridden by submitted value
        $mform->setConstants(array('norepeats' => $norepeats));

        $weights = workshop_get_dimension_weights();

        for ($i = 0; $i < $norepeats; $i++) {
            $mform->addElement('header', 'dimension'.$i, get_string('dimensionnumber', 'workshopform_numerrors', $i+1));
            $mform->addElement('hidden', 'dimensionid__idx_'.$i);   // the id in workshop_forms
            $mform->addElement('editor', 'description__idx_'.$i.'_editor',
                                get_string('dimensiondescription', 'workshopform_numerrors'), '', $descriptionopts);
            $mform->addElement('text', 'grade0__idx_'.$i, get_string('grade0', 'workshopform_numerrors'), array('size'=>'15'));
            $mform->setDefault('grade0__idx_'.$i, $plugindefaults->grade0);
            $mform->setType('grade0__idx_'.$i, PARAM_TEXT);
            $mform->addElement('text', 'grade1__idx_'.$i, get_string('grade1', 'workshopform_numerrors'), array('size'=>'15'));
            $mform->setDefault('grade1__idx_'.$i, $plugindefaults->grade1);
            $mform->setType('grade1__idx_'.$i, PARAM_TEXT);
            $mform->addElement('select', 'weight__idx_'.$i, get_string('dimensionweight', 'workshopform_numerrors'), $weights);
            $mform->setDefault('weight__idx_'.$i, 1);
        }

        $mform->addElement('header', 'mappingheader', get_string('grademapping', 'workshopform_numerrors'));
        $mform->addElement('static', 'mappinginfo', get_string('maperror', 'workshopform_numerrors'),
                                                            get_string('mapgrade', 'workshopform_numerrors'));

        // get the total weight of all items == maximum weighted number of errors
        $totalweight = 0;
        for ($i = 0; $i < $norepeats; $i++) {
            if (!empty($current->{'weight__idx_'.$i})) {
                $totalweight += $current->{'weight__idx_'.$i};
            }
        }
        $totalweight = max($totalweight, $nodimensions);

        $percents = array();
        $percents[''] = '';
        for ($i = 100; $i >= 0; $i--) {
            $percents[$i] = get_string('percents', 'workshopform_numerrors', $i);
        }
        $mform->addElement('static', 'mappingzero', 0, get_string('percents', 'workshopform_numerrors', 100));
        for ($i = 1; $i <= $totalweight; $i++) {
            $selects = array();
            $selects[] = $mform->createElement('select', 'map__idx_'.$i, $i, $percents);
            $selects[] = $mform->createElement('static', 'mapdefault__idx_'.$i, '',
                                        get_string('percents', 'workshopform_numerrors', floor(100 - $i * 100 / $totalweight)));
            $mform->addGroup($selects, 'grademapping'.$i, $i, array(' '), false);
            $mform->setDefault('map__idx_'.$i, '');
        }

        $mform->registerNoSubmitButton('noadddims');
        $mform->addElement('submit', 'noadddims', get_string('addmoredimensions', 'workshopform_numerrors',
                                                                    WORKSHOP_STRATEGY_ADDDIMS));
        $mform->closeHeaderBefore('noadddims');
        $this->set_data($current);

    }

}||||||||    protected function definition_inner(&$mform) {

        $plugindefaults     = get_config('workshopform_numerrors');
        $nodimensions       = $this->_customdata['nodimensions'];       // number of currently filled dimensions
        $norepeats          = $this->_customdata['norepeats'];          // number of dimensions to display
        $descriptionopts    = $this->_customdata['descriptionopts'];    // wysiwyg fields options
        $current            = $this->_customdata['current'];            // current data to be set

        $mform->addElement('hidden', 'norepeats', $norepeats);
        // value not to be overridden by submitted value
        $mform->setConstants(array('norepeats' => $norepeats));

        $weights = workshop_get_dimension_weights();

        for ($i = 0; $i < $norepeats; $i++) {
            $mform->addElement('header', 'dimension'.$i, get_string('dimensionnumber', 'workshopform_numerrors', $i+1));
            $mform->addElement('hidden', 'dimensionid__idx_'.$i);   // the id in workshop_forms
            $mform->addElement('editor', 'description__idx_'.$i.'_editor',
                                get_string('dimensiondescription', 'workshopform_numerrors'), '', $descriptionopts);
            $mform->addElement('text', 'grade0__idx_'.$i, get_string('grade0', 'workshopform_numerrors'), array('size'=>'15'));
            $mform->setDefault('grade0__idx_'.$i, $plugindefaults->grade0);
            $mform->setType('grade0__idx_'.$i, PARAM_TEXT);
            $mform->addElement('text', 'grade1__idx_'.$i, get_string('grade1', 'workshopform_numerrors'), array('size'=>'15'));
            $mform->setDefault('grade1__idx_'.$i, $plugindefaults->grade1);
            $mform->setType('grade1__idx_'.$i, PARAM_TEXT);
            $mform->addElement('select', 'weight__idx_'.$i, get_string('dimensionweight', 'workshopform_numerrors'), $weights);
            $mform->setDefault('weight__idx_'.$i, 1);
        }

        $mform->addElement('header', 'mappingheader', get_string('grademapping', 'workshopform_numerrors'));
        $mform->addElement('static', 'mappinginfo', get_string('maperror', 'workshopform_numerrors'),
                                                            get_string('mapgrade', 'workshopform_numerrors'));

        // get the total weight of all items == maximum weighted number of errors
        $totalweight = 0;
        for ($i = 0; $i < $norepeats; $i++) {
            if (!empty($current->{'weight__idx_'.$i})) {
                $totalweight += $current->{'weight__idx_'.$i};
            }
        }
        $totalweight = max($totalweight, $nodimensions);

        $percents = array();
        $percents[''] = '';
        for ($i = 100; $i >= 0; $i--) {
            $percents[$i] = get_string('percents', 'workshopform_numerrors', $i);
        }
        $mform->addElement('static', 'mappingzero', 0, get_string('percents', 'workshopform_numerrors', 100));
        for ($i = 1; $i <= $totalweight; $i++) {
            $selects = array();
            $selects[] = $mform->createElement('select', 'map__idx_'.$i, $i, $percents);
            $selects[] = $mform->createElement('static', 'mapdefault__idx_'.$i, '',
                                        get_string('percents', 'workshopform_numerrors', floor(100 - $i * 100 / $totalweight)));
            $mform->addGroup($selects, 'grademapping'.$i, $i, array(' '), false);
            $mform->setDefault('map__idx_'.$i, '');
        }

        $mform->registerNoSubmitButton('noadddims');
        $mform->addElement('submit', 'noadddims', get_string('addmoredimensions', 'workshopform_numerrors',
                workshop_numerrors_strategy::ADDDIMS));
        $mform->closeHeaderBefore('noadddims');
        $this->set_data($current);

    }

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_DEC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_VAR))))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_DEC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (SCALAR)))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_VAR))))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_CONST)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))