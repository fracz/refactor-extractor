    protected function render_single_button(single_button $button) {
        $attributes = array('type'     => 'submit',
                            'value'    => $button->label,
                            'disabled' => $button->disabled,
                            'title'    => $button->tooltip);

        if ($button->actions) {
            $id = html_writer::random_id('single_button');
            $attributes['id'] = $id;
            foreach ($button->actions as $action) {
                $this->add_action_handler($id, $action);
            }
        }

        // first the input element
        $output = html_writer::empty_tag('input', $attributes);

        // then hidden fields
        $params = $button->url->params();
        if ($button->method === 'post') {
            $params['sesskey'] = sesskey();
        }
        foreach ($params as $var => $val) {
            $output .= html_writer::empty_tag('input', array('type' => 'hidden', 'name' => $var, 'value' => $val));
        }

        // then div wrapper for xhtml strictness
        $output = html_writer::tag('div', array(), $output);

        // now the form itself around it
        $attributes = array('method' => $button->method,
                            'action' => $button->url->out(true), // url without params
                            'id'     => $button->formid);
        $output = html_writer::tag('form', $attributes, $output);

        // and finally one more wrapper with class
        return html_writer::tag('div', array('class' => $button->class), $output);
    }

    /**
     * Given a html_form component and an optional rendered submit button,
     * outputs a HTML form with correct divs and inputs and a single submit button.
     * This doesn't render any other visible inputs. Use moodleforms for these.
     * @param html_form $form A html_form instance
     * @param string $contents HTML fragment to put inside the form. If given, must contain at least the submit button.
     * @return string HTML fragment
     */
||||||||    protected function render_single_button(single_button $button) {
        $attributes = array('type'     => 'submit',
                            'value'    => $button->label,
                            'disabled' => $button->disabled,
                            'title'    => $button->tooltip);

        if ($button->actions) {
            $id = html_writer::random_id('single_button');
            $attributes['id'] = $id;
            foreach ($button->actions as $action) {
                $this->add_action_handler($id, $action);
            }
        }

        // first the input element
        $output = html_writer::empty_tag('input', $attributes);

        // then hidden fields
        $params = $button->url->params();
        if ($button->method === 'post') {
            $params['sesskey'] = sesskey();
        }
        foreach ($params as $var => $val) {
            $output .= html_writer::empty_tag('input', array('type' => 'hidden', 'name' => $var, 'value' => $val));
        }

        // then div wrapper for xhtml strictness
        $output = html_writer::tag('div', array(), $output);

        // now the form itself around it
        $url = $button->url->out(true); // url without params
        if ($url === '') {
            $url = '#'; // there has to be always some action
        }
        $attributes = array('method' => $button->method,
                            'action' => $url,
                            'id'     => $button->formid);
        $output = html_writer::tag('form', $attributes, $output);

        // and finally one more wrapper with class
        return html_writer::tag('div', array('class' => $button->class), $output);
    }

    /**
     * Given a html_form component and an optional rendered submit button,
     * outputs a HTML form with correct divs and inputs and a single submit button.
     * This doesn't render any other visible inputs. Use moodleforms for these.
     * @param html_form $form A html_form instance
     * @param string $contents HTML fragment to put inside the form. If given, must contain at least the submit button.
     * @return string HTML fragment
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CONST)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_VAR)))))