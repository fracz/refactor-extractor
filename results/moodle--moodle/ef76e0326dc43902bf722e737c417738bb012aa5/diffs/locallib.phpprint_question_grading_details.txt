    function print_question_grading_details(&$question, &$state, $quiz, $options) {
        /* The default implementation prints the number of marks if no attempt
        has been made. Otherwise it displays the grade obtained out of the
        maximum grade available and a warning if a penalty was applied for the
        attempt and displays the overall grade obtained counting all previous
        responses (and penalties) */

        if (!empty($question->maxgrade)) {
            echo '<div class="grading_details">';
            if (!('' === $state->last_graded->grade)) {
                // Display the grading details from the last graded state
                $grade->cur = format_float($state->last_graded->grade, $quiz->decimalpoints);
                $grade->max = $question->maxgrade;
                $grade->raw = format_float($state->last_graded->raw_grade, $quiz->decimalpoints);
                if (QUIZ_EVENTCLOSE == $state->event) {
                    /* No further attempts are possible so don't bother
                    displaying the penalty */
                    print_string('gradingdetailsnopenalty', 'quiz', $grade);
                } else if ('' !== $state->last_graded->penalty && ((float)
                 $state->last_graded->penalty) > 0.0) {
                    // A penalty was applied so display it
                    $grade->penalty = $state->last_graded->penalty;
                    print_string('gradingdetailspenalty', 'quiz', $grade);
                } else if ($state->last_graded->raw_grade >=
                 $question->maxgrade) {
                    /* No penalty was applied because the response was
                    correct so don't bother noting that no penalty was
                    applied for the attempt */
                    print_string('gradingdetailsnopenalty', 'quiz', $grade);
                } else {
                    /* No penalty was applied even though the answer was
                    not correct (eg. a syntax error) so tell the student
                    that they were not penalised for the attempt */
                    print_string('gradingdetailszeropenalty', 'quiz', $grade);
                }
            }
            echo '</div>';
        }
    }

    /**
    * Prints the main content of the question including any interactions
    *
    * This function should print the main content of the question including the
    * interactions for the question in the state given (unless the readonly
    * option is set). The last graded responses should be printed or indicated
    * and (except when the readonly option is set) the current responses should
    * be selected or filled in. Any names (eg. for any form elements) should be
    * prefixed with the unique prefix for the question in
    * $question->name_prefix. This method is called from the print_question
    * method by default; the question type may override print_question so that
    * this method is not used.
    * @param object $question The question to be rendered. Question type
    *                         specific information is included. The name
    *                         prefix for any named elements is in ->name_prefix.
    * @param object $state    The state to render the question in. The grading
    *                         information is in ->grade, ->raw_grade and
    *                         ->penalty. The current responses are in
    *                         ->responses. This will be an associative array
    *                         (except in the case of no responses submitted when
    *                         this will be an empty string rather than an empty
    *                         array; this might occur when radio buttons are the
    *                         only interactions for a question and none are
    *                         selected for example). The last graded state is in
    *                         ->last_graded (hence the most recently graded
    *                         responses are in ->last_graded->responses). The
    *                         question type specific information is in $state->options.
    * @param object $quiz     The quiz to which the question belongs. The
    *                         question will likely be rendered differently
    *                         depending on the quiz settings.
    * @param object $options  An object describing the rendering options.
    *                         The fields are:
    *                         ->readonly          Review / interactive mode
    *                         ->feedback          Show feedback for the graded
    *                                             responses
    *                         ->validation        Show how the current responses
    *                                             responses were interpreted
    *                         ->correct_responses Show solutions
    *                         These are all boolean values.
    */
||||||||    function print_question_grading_details(&$question, &$state, $quiz, $options) {
        /* The default implementation prints the number of marks if no attempt
        has been made. Otherwise it displays the grade obtained out of the
        maximum grade available and a warning if a penalty was applied for the
        attempt and displays the overall grade obtained counting all previous
        responses (and penalties) */

        if (!empty($question->maxgrade)) {
            if (!('' === $state->last_graded->grade)) {
                // Display the grading details from the last graded state
                $grade->cur = format_float($state->last_graded->grade, $quiz->decimalpoints);
                $grade->max = $question->maxgrade;
                $grade->raw = format_float($state->last_graded->raw_grade, $quiz->decimalpoints);

                // let student know wether the answer was correct
                echo '<div class="correctness">';
                if ($state->last_graded->raw_grade >= $question->maxgrade) {
                    print_string('correct', 'quiz');
                } else if ($state->last_graded->raw_grade > 0) {
                    print_string('partiallycorrect', 'quiz');
                } else {
                    print_string('incorrect', 'quiz');
                }
                echo '</div>';


                echo '<div class="gradingdetails">';
                // print grade for this submission
                print_string('gradingdetails', 'quiz', $grade);
                // print details of grade adjustment due to penalties
                if ($state->last_graded->raw_grade > $state->last_graded->grade){
                    print_string('gradingdetailsadjustment', 'quiz', $grade);
                }
                // print info about new penalty
                // penalty is relevant only if the answer is not correct and further attempts are possible
                if (($state->last_graded->raw_grade < $question->maxgrade) and (QUIZ_EVENTCLOSE !== $state->event)) {
                    if ('' !== $state->last_graded->penalty && ((float)$state->last_graded->penalty) > 0.0) {
                        // A penalty was applied so display it
                        print_string('gradingdetailspenalty', 'quiz', $state->last_graded->penalty);
                    } else {
                        /* No penalty was applied even though the answer was
                        not correct (eg. a syntax error) so tell the student
                        that they were not penalised for the attempt */
                        print_string('gradingdetailszeropenalty', 'quiz');
                    }
                }
                echo '</div>';
            }
        }
    }

    /**
    * Prints the main content of the question including any interactions
    *
    * This function should print the main content of the question including the
    * interactions for the question in the state given (unless the readonly
    * option is set). The last graded responses should be printed or indicated
    * and (except when the readonly option is set) the current responses should
    * be selected or filled in. Any names (eg. for any form elements) should be
    * prefixed with the unique prefix for the question in
    * $question->name_prefix. This method is called from the print_question
    * method by default; the question type may override print_question so that
    * this method is not used.
    * @param object $question The question to be rendered. Question type
    *                         specific information is included. The name
    *                         prefix for any named elements is in ->name_prefix.
    * @param object $state    The state to render the question in. The grading
    *                         information is in ->grade, ->raw_grade and
    *                         ->penalty. The current responses are in
    *                         ->responses. This will be an associative array
    *                         (except in the case of no responses submitted when
    *                         this will be an empty string rather than an empty
    *                         array; this might occur when radio buttons are the
    *                         only interactions for a question and none are
    *                         selected for example). The last graded state is in
    *                         ->last_graded (hence the most recently graded
    *                         responses are in ->last_graded->responses). The
    *                         question type specific information is in $state->options.
    * @param object $quiz     The quiz to which the question belongs. The
    *                         question will likely be rendered differently
    *                         depending on the quiz settings.
    * @param object $options  An object describing the rendering options.
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_BINARY_OP
                                                        (AST_CAST
                                                            (AST_PROP
                                                                (AST_PROP
                                                                    (AST_VAR))))
                                                        (SCALAR)))
                                                (
                                                    (AST_ASSIGN
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_VAR)))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_BINARY_OP
                                                                (AST_PROP
                                                                    (AST_PROP
                                                                        (AST_VAR)))
                                                                (AST_PROP
                                                                    (AST_VAR)))
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (SCALAR)
                                                                        (AST_VAR)))))
                                                        (AST_IF_ELEM
                                                            (NULL)
                                                            (
                                                                (AST_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (SCALAR)
                                                                        (AST_VAR)))))))))))))))
                (AST_ECHO
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_ECHO
                                (SCALAR))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_PROP
                                                            (AST_VAR)))
                                                    (SCALAR))
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)))))))))
                            (AST_ECHO
                                (SCALAR))
                            (AST_ECHO
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_VAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (AST_PROP
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_BINARY_OP
                                                        (AST_CAST
                                                            (AST_PROP
                                                                (AST_PROP
                                                                    (AST_VAR))))
                                                        (SCALAR)))
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_PROP
                                                                    (AST_VAR)))))))
                                            (AST_IF_ELEM
                                                (NULL)
                                                (
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)))))))))
                            (AST_ECHO
                                (SCALAR)))))))))