    public function setUp() {
        global $DB, $CFG;

        // Set up test database and appropriate tables.
        parent::setUp();
        $this->create_test_tables(array('data', 'data_fields', 'data_records', 'data_content'), 'mod/data');
        $this->create_test_table('user', 'lib');
        $this->switch_to_test_db();

        // Set up data for the test database.
        $tablename = array('0' => 'user',
                           '1' => 'data_fields',
                           '2' => 'data_records',
                           '3' => 'data_content');

        for ($i = 0; $i < 4; $i++) {
            $filename = $CFG->dirroot . '/mod/data/simpletest/test_' . $tablename[$i] . '.csv';
            if (file_exists($filename)) {
                $file = file_get_contents($filename);
            }
            $this->insert_data_from_csv($file, $tablename[$i]);
        }

        // Set up a data record.
        $datarecord = new stdClass();
        $datarecord->course = '99999';
        $datarecord->name = 'test database';
        $datarecord->intro = 'Test Database for unit testing';
        $datarecord->introformat = '1';
        $DB->insert_record('data', $datarecord, false);
        $dataid = $DB->get_field('data', 'id', array('course' => '99999'));
        $this->recorddataid = $dataid;

        // Create the search array which contains our advanced search criteria.

        // Latitude and Longitude
        $search_array = array();
        $search_array['1'] = new stdClass();
        $search_array['1']->params = array();
        $search_array['1']->params['df_latlong1_1'] = '3.721';
        $search_array['1']->params['df_latlong2_1'] = '46.6126';
        $search_array['1']->sql = '(c1.fieldid = 1 AND c1.content = :df_latlong1_1 AND c1.content1 = :df_latlong2_1) ';
        $search_array['1']->data = '3.721,46.6126';

        // Mulitmenu
        $search_array['2'] = new stdClass();
        $search_array['2']->params = array();
        $search_array['2']->params['df_multimenu_1_1a'] = 'Hahn Premium';
        $search_array['2']->params['df_multimenu_1_1b'] = 'Hahn Premium##%';
        $search_array['2']->params['df_multimenu_1_1c'] = '%##Hahn Premium';
        $search_array['2']->params['df_multimenu_1_1d'] = '%##Hahn Premium##%';
        $search_array['2']->sql = '((c2.fieldid = 2 AND (c2.content = :df_multimenu_1_1a
                                                        OR c2.content LIKE :df_multimenu_1_1b
                                                        OR c2.content LIKE :df_multimenu_1_1c
                                                        OR c2.content LIKE :df_multimenu_1_1d)))';
        $search_array['2']->data = array();
        $search_array['2']->data['selected'] = array();
        $search_array['2']->data['selected']['0'] = 'Hahn Premium';
        $search_array['2']->data['allrequired'] = '0';

        // Radiobutton
        $search_array['5'] = new stdClass();
        $search_array['5']->params = array();
        $search_array['5']->params['df_radiobutton_1'] = 'Female';
        $search_array['5']->sql = '(c5.fieldid = 5 AND c5.content = :df_radiobutton_1)';
        $search_array['5']->data = 'Female';

        // Textbox
        $search_array['7'] = new stdClass();
        $search_array['7']->params = array();
        $search_array['7']->params['df_text_1'] = '%kel%';
        $search_array['7']->sql = ' (c7.fieldid = 7 AND LOWER(c7.content) LIKE LOWER(:df_text_1) COLLATE utf8_bin ESCAPE \'\\\\\') ';
        $search_array['7']->data = 'kel';

        // Menu
        $search_array['9'] = new stdClass();
        $search_array['9']->params = array();
        $search_array['9']->params['df_menu_1'] = 'VIC';
        $search_array['9']->sql = '(c9.fieldid = 9 AND c9.content = :df_menu_1)';
        $search_array['9']->data = 'VIC';
        $this->recordsearcharray = $search_array;

        // Normally data_get_advanced_search_sql takes a data module variable
        // which contains a large amount of information, but all that we
        // need is the data ID in a certain format.
        $this->recorddata = new stdClass();
        $this->recorddata->id = $this->recorddataid;

        // Setting up the comparison stdClass for the last test.
        $this->finalrecord[6] = new stdClass();
        $this->finalrecord[6]->id = 6;
        $this->finalrecord[6]->approved = 1;
        $this->finalrecord[6]->timecreated = 1234567891;
        $this->finalrecord[6]->timemodified = 1234567892;
        $this->finalrecord[6]->userid = 6;
        $this->finalrecord[6]->firstname = 'Benedict';
        $this->finalrecord[6]->lastname = 'Horn';
        $this->finalrecord[6]->_order = 3.721;
    }

    /**
     * Tear Down function. Here we remove all the database entries that we created
     * for testing the unit tests.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))
        (SCALAR)))||||||||