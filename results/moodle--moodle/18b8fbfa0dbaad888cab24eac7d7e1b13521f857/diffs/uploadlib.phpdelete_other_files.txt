||||||||    function delete_other_files($destination,$exceptions=null) {
        if ($filestodel = get_directory_list($destination)) {
            foreach ($filestodel as $file) {
                if (!is_array($exceptions) || !in_array($file,$exceptions)) {
                    unlink("$destination/$file");
                    $deletedsomething = true;
                }
            }
        }
        if ($deletedsomething) {
            notify(get_string('uploadoldfilesdeleted'));
        }
    }

    /**
     * Handles filename collisions - if the desired filename exists it will rename it according to the pattern in $format
     * @param $destination - destination directory (to check existing files against)
     * @param $file - the current file from $files we're processing.
     * @param $format - the printf style format to rename the file to (defaults to filename_number.extn)
     * @return new filename.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (
                                    (AST_CALL
                                        (
                                            (AST_ENCAPS_LIST
                                                (AST_VAR)
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)))))))))