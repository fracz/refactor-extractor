||||||||    public function user_info($id=null) {
        global $USER, $DB;

        if (is_null($id) || ($id == $USER->id)) {
            return $USER;
        } else {
            return $DB->get_record('user', array('id' => $id), 'id,lastname,firstname,picture,imagealt', MUST_EXIST);
        }
    }

}

/**
 * Class for workshop exceptions. Just saves a couple of arguments of the
 * constructor for a moodle_exception.
 *
 * @param object $workshop Should be workshop or its subclass
 * @param string $errorcode
 * @param mixed $a Object/variable to pass to get_string
 * @param string $link URL to continue after the error notice
 * @param $debuginfo
 */
class moodle_workshop_exception extends moodle_exception {

    function __construct($workshop, $errorcode, $a = NULL, $link = '', $debuginfo = null) {
        global $CFG;

        if (!$link) {
            $link = $CFG->wwwroot . '/mod/workshop/view.php?a=' . $workshop->id;
        }
        if ('confirmsesskeybad' == $errorcode) {
            $module = '';
        } else {
            $module = 'workshop';
        }
        parent::__construct($errorcode, $module, $link, $a, $debuginfo);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR)
                            (AST_CONST))))))))