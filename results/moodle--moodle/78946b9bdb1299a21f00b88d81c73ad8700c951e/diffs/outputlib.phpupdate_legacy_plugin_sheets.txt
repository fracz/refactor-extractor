    protected function update_legacy_plugin_sheets($plugintype, $property) {
        // In Moodle 1.9, modsheets etc. were ignored if standardsheets was false.
        if (!empty($this->standardsheets) && property_exists($this, $property)) {
            debugging('$THEME->' . $property . ' is deprecated. Please use the new $THEME->pluginsheets instead.', DEBUG_DEVELOPER);
            if (!empty($this->$property) && !in_array($plugintype, $this->pluginsheets)) {
                $this->pluginsheets[] = $plugintype;
            } else if (empty($this->$property) && in_array($plugintype, $this->pluginsheets)) {
                unset($this->pluginsheets[array_search($plugintype, $this->pluginsheets)]);
            }
        }
    }

    /**
     * This method looks a the settings that have been loaded, to see whether
     * any legacy things are being used, and outputs warning and tries to update
     * things to use equivalent newer settings.
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))
                        (AST_CONST)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_VAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (
                                        (AST_UNSET
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_PROP
                                                            (AST_VAR))))))))))))))))||||||||