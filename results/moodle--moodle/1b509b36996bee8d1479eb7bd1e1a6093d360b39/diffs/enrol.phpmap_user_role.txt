||||||||    function map_user_role ($userid, $relevantroles, $relevantcontexts, $peerrolemappings) {
        global $DB;
        if (!empty($relevantroles)) {
            list($contextfragment, $contextids) = $DB->get_in_or_equal($relevantcontexts);
            list($rolefragment, $roleids) = $DB->get_in_or_equal($relevantroles);
            $roletoassignsql =
                    'SELECT ra.roleid, ra.roleid as roleid2 ' .
                    'FROM {role_assignments} ra ' .
                    ' INNER JOIN {context} con ON con.id=ra.contextid ' .
                    'WHERE con.id ' . $contextfragment .
                    '  AND ra.roleid ' . $rolefragment .
                    '  AND ra.userid = ? ' .
                    'ORDER BY con.contextlevel desc, ra.timemodified desc ' .
                    'LIMIT 1';
            $params = array_merge($contextids, $roleids);
            $params[] = $userid;
            $localrolestoassign = $DB->get_records_sql($roletoassignsql, $params);
            if (!empty($localrolestoassign)) {
                $localroletoassign = array_shift($localrolestoassign);
            } else {
                $localroletoassign = NULL;
            }
        } else {
            $localroletoassign = NULL;
        }

        // Determine the role to be assigned on the remote peer based on the user's role in
        // the local course, and the role mappings for the relevant peer
        if (empty($localroletoassign)) {
            // No local role means that this is an unenrolment
            return FALSE;
        } elseif (!isset($peerrolemappings[$localroletoassign->roleid])) {
            // User has local role, but this is not mapped to anything on the remote peer
            // - this is also an unenrolment
            return FALSE;
        } else {
            return $peerrolemappings[$localroletoassign->roleid];
        }
    }

    /**
    * Unenrol user from course on mnet peer
    * @param minimalistuser object user object with only basic properties
    * @param remotecourseid integer courseid on the remote peer
    * @param mnetcp object basic peer info
    * @return bool true on successful unenrolment
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (SCALAR))
                                                    (SCALAR))
                                                (SCALAR))
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_VAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))))