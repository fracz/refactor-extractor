||||||||    function process_role_updates() {
        global $CFG, $MNET, $DB;
        echo "Processing mnet role management queue\n";
        $course2contexts = $this->get_queue_relevant_contexts();
        if (empty($course2contexts)) {
            //no courses of interest, nothing for us to do
            return true;
        }

        //Get current mnet cp course (if any) for courses of interest
        $cpdetails = $this->map_courses_to_cp(array_keys($course2contexts));
        //Get current local roles that are relevant in relation to each mnet peer
        $peersrolemappings = $this->get_mnet_role_mappings($cpdetails);
        foreach ($peersrolemappings as $peerid => $peerrolemappings) {
            if (is_array($peerrolemappings)) {
                $rolesmapped[$peerid] = array_keys($peerrolemappings);
            }
        }

        //Allow the role update process to run for an arbitary amount of time.
        $starttime = time();
        $timelimit = $starttime + 100;
        $queueitemssql = 'SELECT * FROM {mnet_role_management_queue} ORDER BY id ASC ';
        $queueitems = $DB->get_records_sql($queueitemssql);
        echo count($queueitems) . " items found ";
        $updatecount = 0;
        $rowcount = 0;
        while (time() < $timelimit) {
            if (empty($queueitems)) {
                break;
            }
            $queueitem = array_shift($queueitems);
            if (empty($queueitem->mnetpeer) || empty($queueitem->remotecourseid)) {
                // If peer & remote course are not defined, this is a basic create/update request
                // determine mnetpeer and remotecourseid based on record in course table
                $queueitem->mnetpeer = $cpdetails[$queueitem->localcourse]->mnetpeer;
                $queueitem->remotecourseid = $cpdetails[$queueitem->localcourse]->remotecourseid;
            }
            if (!empty($rolesmapped[$queueitem->mnetpeer])) {
                $remoteroleid = $this->map_user_role($queueitem->userid, $rolesmapped[$queueitem->mnetpeer],
                        $course2contexts[$queueitem->localcourse], $peersrolemappings[$queueitem->mnetpeer]);

                // Enrol the user on the remote peer
                $updateresult = $this->update_role_remote_course($queueitem->userid, $queueitem->mnetpeer, $queueitem->remotecourseid, $remoteroleid);
            } else {
                // No local roles map to anything on this peer - nothing to do:
                $updateresult = true;
            }
            if ($updateresult) {
                $deleteresult = $DB->delete_records('mnet_role_management_queue', array('id' => $queueitem->id));
                if (!empty($deleteresult)) {
                    ++$updatecount;
                    if (++$rowcount > 40) {
                        echo "\n";
                        $rowcount = 1;
                    }
                    echo ".";
                } else {
                    echo "\nWarning - unable to remove role update from queue this is an unsustainable problem";
                }
            } else {
                echo "Problem encountered - if this problem persists contact your mnet administrator\n";
                return false;
            }
        }
        echo "\n";
        return true;
    }

    /**
    * Update a local user's role in a remote course
    * @param userid integer id of the user who we want the role assigned to
    * @param mnethostid integer id of the mnet host the course is hosted on
    * @param remotecourseid the id number of the course on the remote moodle
    * @return bool true on success, false on failure
    */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_CALL)
            (AST_VAR))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_VAR)))
                                (
                                    (AST_PRE_INC
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PRE_INC
                                                    (AST_VAR))
                                                (SCALAR))
                                            (
                                                (AST_ECHO
                                                    (SCALAR))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (AST_ECHO
                                        (SCALAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ECHO
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ECHO
                            (SCALAR))
                        (AST_RETURN
                            (AST_CONST)))))))
    (AST_ECHO
        (SCALAR))
    (AST_RETURN
        (AST_CONST)))