||||||||    function update_role_remote_course($userid, $mnethostid, $remotecourseid, $remoteroleid) {
        global $DB, $CFG, $MNET;

        require_once $CFG->dirroot . '/mnet/xmlrpc/client.php';
        // Create content-provider object
        $mnet_cp = new mnet_peer();
        $mnet_cp->set_id($mnethostid);

        // Set up a minimilist user record for passing to remote function
        $user = $DB->get_record('user',array('id' => $userid));
        if ($user->mnethostid != $CFG->mnet_localhost_id) {
            // If user is not local, force unenrolment
            $remoteroleid = FALSE;
        }

        $minimalistuser = new stdclass;
        $minimalistuser->id = $user->id;
        $minimalistuser->username = $user->username;
        $minimalistuser->firstname = $user->firstname;
        $minimalistuser->lastname = $user->lastname;
        $minimalistuser->email = $user->email;

        if ($remoteroleid === FALSE) {
            return $this->unenrol_user_remote($minimalistuser, $remotecourseid, $mnet_cp);
        } elseif (empty($remoteroleid)) {
            //Talking to an older system - can only enrol course's default role.
            return $this->enrol_user_remote($minimalistuser, $remotecourseid, $mnet_cp);
        } else {
            return $this->full_enrol_user_remote($user, $remotecourseid, $mnet_cp, $remoteroleid);
        }
    }

    /*
    * Retreive information about contexts relevant to courses listed in the mnet_role_management_queue
    * @return array keyed by localcourseid, containging array of contexts (course and its parents)
    */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))))