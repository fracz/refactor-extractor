    public function connect($dbhost, $dbuser, $dbpass, $dbname, $dbpersist, $prefix, array $dboptions=null) {
        $this->dbhost    = $dbhost;
        $this->dbuser    = $dbuser;
        $this->dbpass    = $dbpass;
        $this->dbname    = $dbname;
        $this->dbpersist = $dbpersist;
        $this->prefix    = $prefix;
        $this->dboptions = (array)$dboptions;

        global $CFG;

        $this->preconfigure_dbconnection();

        require_once($CFG->libdir.'/adodb/adodb.inc.php');

        $this->adodb = ADONewConnection($this->get_dbtype());

        // See MDL-6760 for why this is necessary. In Moodle 1.8, once we start using NULLs properly,
        // we probably want to change this value to ''.
        $this->adodb->null2null = 'A long random string that will never, ever match something we want to insert into the database, I hope. \'';

        if (!isset($this->dbpersist) or !empty($this->dbpersist)) {    // Use persistent connection (default)
            if (!$this->adodb->PConnect($this->dbhost, $this->dbuser, $this->dbpass, $this->dbname)) {
                return false;
            }
        } else {                                                     // Use single connection
            if (!$this->adodb->Connect($this->dbhost, $this->dbuser, $this->dbpass, $this->dbname)) {
                return false;
            }
        }
        $this->configure_dbconnection();
        return true;
    }

    /**
     * Adodb post connection routines, usually sets up encoding,e tc.
     */
||||||||    public function connect($dbhost, $dbuser, $dbpass, $dbname, $dbpersist, $prefix, array $dboptions=null) {
        global $CFG;

        $this->store_settings($dbhost, $dbuser, $dbpass, $dbname, $dbpersist, $prefix, $dboptions);

        $this->preconfigure_dbconnection();

        require_once($CFG->libdir.'/adodb/adodb.inc.php');

        $this->adodb = ADONewConnection($this->get_dbtype());

        // See MDL-6760 for why this is necessary. In Moodle 1.8, once we start using NULLs properly,
        // we probably want to change this value to ''.
        $this->adodb->null2null = 'A long random string that will never, ever match something we want to insert into the database, I hope. \'';

        if (!isset($this->dbpersist) or !empty($this->dbpersist)) {    // Use persistent connection (default)
            if (!$this->adodb->PConnect($this->dbhost, $this->dbuser, $this->dbpass, $this->dbname)) {
                return false;
            }
        } else {                                                     // Use single connection
            if (!$this->adodb->Connect($this->dbhost, $this->dbuser, $this->dbpass, $this->dbname)) {
                return false;
            }
        }
        $this->configure_dbconnection();
        return true;
    }

    /**
     * Adodb post connection routines, usually sets up encoding,e tc.
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CAST
            (AST_VAR)))
    (AST_GLOBAL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_CONST)))