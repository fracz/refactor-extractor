||||||||    public function delete() {
        if (!$this->lf or !$this->is_writable()) {
            return false;
        }

        if ($this->is_directory()) {
            $filepath = $this->lf->get_filepath();
            $fs = get_file_storage();
            $localfiles = $fs->get_area_files($this->context->id, $this->lf->get_filearea(), $this->lf->get_itemid(), "");
            foreach ($localfiles as $file) {
                if (strpos($file->get_filepath(), $filepath) === 0) {
                    $file->delete();
                }
            }
        }

        return $this->lf->delete();
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR)))
                                    (SCALAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))))