    function load_final($generatefakenullgrades=false) {
        global $CFG;

        $grade_final_array = get_records('grade_grades_final', 'itemid', $this->id);

        if (empty($grade_final_array)) {
            $this->generate_final();
            $grade_final_array = get_records('grade_grades_final', 'itemid', $this->id);
        }

        if (empty($grade_final_array)) {
            debugging("No final grades recorded for this grade_item");
            return false;
        }

        foreach ($grade_final_array as $f) {
            $this->grade_grades_final[$f->userid] = new grade_grades_final($f);
        }

        $returnarray = fullclone($this->grade_grades_final);

        // If we are generating fake null grades, we have to get a list of users
        if ($generatefakenullgrades && $CFG->usenullgrades) {
            $users = get_records_sql_menu('SELECT userid AS "user", userid FROM ' . $CFG->prefix . 'grade_grades_final GROUP BY userid ORDER BY userid');
            if (!empty($users) && is_array($users)) {
                foreach ($users as $userid) {
                    if (!isset($returnarray[$userid])) {
                        $fakefinal = new grade_grades_final();
                        $fakefinal->itemid = $this->id;
                        $fakefinal->userid = $userid;
                        $fakefinal->gradevalue = $this->grademin;
                        $returnarray[$userid] = $fakefinal;
                    }
                }
            }
        }

        return $returnarray;
    }

    /**
     * Returns an array of values (NOT objects) standardised from the final grades of this grade_item. They are indexed by userid.
     * @return array integers
     */
||||||||    function load_final() {
        global $CFG;

        $this->grade_grades_final = array();

        $grade_final_array = get_records('grade_grades_final', 'itemid', $this->id);

        if (empty($grade_final_array)) {
            return array();
        }

        foreach ($grade_final_array as $f) {
            $this->grade_grades_final[$f->userid] = new grade_grades_final($f);
        }

        return fullclone($this->grade_grades_final);
    }

    /**
     * Returns an array of values (NOT objects) standardised from the final grades of this grade_item. They are indexed by userid.
     * @return array integers
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_NEW
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_NEW))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_VAR))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_NEW
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))))))