    function update_final_grade($userid=NULL) {
        if (empty($this->grade_grades_final)) {
            $this->load_final();
        }
        if (empty($this->grade_grades_raw)) {
            $this->load_raw();
        }

        $count = 0;

        $grade_final_array = array();
        $grade_raw_array   = array();

        if (!empty($userid)) {
            $grade_final_array[$userid] = $this->grade_grades_final[$userid];
            $grade_raw_array[$userid] = $this->grade_grades_raw[$userid];
        } else {
            $grade_final_array = $this->grade_grades_final;
            $grade_raw_array = $this->grade_grades_raw;
        }

        // The following code assumes that there is a grade_final object in DB for every
        // grade_raw object. This assumption depends on the correct creation of grade_final entries.
        // This also assumes that the two arrays $this->grade_grades_raw and its final counterpart are
        // indexed by userid, not sequentially or by grade_id
        if (count($this->grade_grades_final) != count($this->grade_grades_raw)) {
            $this->generate_final();
        }

        foreach ($grade_raw_array as $userid => $raw) {
            $newgradevalue = $raw->gradevalue;

            if (!empty($this->calculation)) {
                $this->upgrade_calculation_to_object();
                $newgradevalue = $this->calculation->compute($raw->gradevalue);
            }

            $final = $this->grade_grades_final[$userid];

            $final->gradevalue = $this->adjust_grade($raw, $newgradevalue);

            if ($final->update()) {
                $count++;
            } else {
                debugging("Could not update a final grade in this grade_item.");
                return false;
            }
        }

        return $count;
    }

    /**
     * Use this when the calculation object is a stdClass (rare) and you need it to have full
     * object status (with methods and all).
     */
||||||||    function update_final_grade() {
        global $CFG;

        $errors = array();

        if ($this->get_calculation()) {
            // this is calculated grade
            $this->upgrade_calculation_to_object();
            if ($this->calculation->compute()) {
                $this->needsupdate = false;
                $this->update();
                return true;
            } else {
                $errors[] = "Could not calculate grades for grade item id:".$this->id; // TODO: improve and localize
            }

        } else if ($this->itemtype == 'category') {
            // aggregate category grade item
            $category = $this->get_category();
            if (!$category->generate_grades()) {
                $errors[] = "Could not calculate category grade item id:".$this->id; // TODO: improve and localize
            }
        }

        $sql = "SELECT r.*, f.userid AS fuserid, f.id AS fid, f.itemid AS fitemid, f.gradevalue AS fgradevalue
                  FROM {$CFG->prefix}grade_grades_raw r
                       LEFT JOIN {$CFG->prefix}grade_grades_final f ON f.itemid=r.itemid AND f.userid=r.userid
                 WHERE r.itemid={$this->id}";

        if ($rs = get_recordset_sql($sql)) {
            if ($rs->RecordCount() > 0) {
                while ($grade = rs_fetch_next_record($rs)) {
                    if (!empty($errors) or is_null($grade->gradevalue)) {
                        // unset existing final grade when no raw present or error
                        $final = grade_grades_final::fetch('id', $grade->fid);
                        $final->gradevalue = NULL;
                        $final->update();
                        continue;
                    }

                    $finalvalue = $this->adjust_grade($grade);

                    if (is_null($grade->fid)) {
                        // final grade does not exist yet
                        $final = new grade_grades_final(array('itemid'=>$grade->itemid, 'userid'=>$grade->userid, 'gradevalue'=>$finalvalue, false));
                        $final->insert();

                    } else if ($finalvalue != $grade->fgradevalue) {
                        // let's update the final grade
                        $final = grade_grades_final::fetch('id', $grade->fid);
                        $final->gradevalue = $finalvalue;
                        $final->update();
                    }
                }
            }
        }

        //TODO: set grade to null for final grades that do not have corresponding raw grade
        //      using left join SQL update only

        if (!empty($errors)) {
            $this->flag_for_update();
            return $errors;

        } else {
            $this->needsupdate = false;
            $this->update();
            return true;
        }
    }

    /**
     * Use this when the calculation object is a stdClass (rare) and you need it to have full
     * object status (with methods and all).
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (AST_POST_INC
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_RETURN
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_PROP
                                                    (AST_VAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_WHILE
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_VAR)))
                                                (AST_CALL
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR)))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_STATIC_CALL
                                                        (
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_NEW
                                                        (
                                                            (AST_ARRAY
                                                                (AST_ARRAY_ELEM
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (SCALAR))
                                                                (AST_ARRAY_ELEM
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (SCALAR))
                                                                (AST_ARRAY_ELEM
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (AST_ARRAY_ELEM
                                                                    (AST_CONST)
                                                                    (NULL))))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_PROP
                                                                (AST_VAR)))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_STATIC_CALL
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_PROP
                                                                            (AST_VAR)))))
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_VAR))
                                                            (AST_METHOD_CALL
                                                                (AST_VAR))))))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_CONST))))))