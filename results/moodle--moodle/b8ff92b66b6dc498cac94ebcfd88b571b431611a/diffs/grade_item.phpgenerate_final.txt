    function generate_final() {
        if (empty($this->grade_grades_raw)) {
            $this->load_raw();
        }

        $success = true;

        foreach ($this->grade_grades_raw as $raw_grade) {
            $final_grade = new grade_grades_final();
            $final_grade->gradevalue = $this->adjust_grade($raw_grade);
            $final_grade->itemid = $this->id;
            $final_grade->userid = $raw_grade->userid;

            if ($final_grade->gradevalue > $this->grademax) {
                debugging("FINAL GRADE EXCEEDED grademax FIRST");
                return false;
            }
            $success = $success & $final_grade->insert();
            $this->grade_grades_final[$final_grade->userid] = $final_grade;
        }

        return $success;
    }

    /**
     * Returns the locked state of this grade_item (if the grade_item is locked OR no specific
     * $userid is given) or the locked state of a specific grade within this item if a specific
     * $userid is given and the grade_item is unlocked.
     *
     * @param int $userid
     * @return boolean Locked state
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||