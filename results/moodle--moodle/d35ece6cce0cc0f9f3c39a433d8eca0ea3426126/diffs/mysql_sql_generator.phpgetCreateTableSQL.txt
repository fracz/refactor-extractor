||||||||    public function getCreateTableSQL($xmldb_table) {
        // first find out if want some special db engine
        $engine = null;
        if (method_exists($this->mdb, 'get_dbengine')) {
            $engine = $this->mdb->get_dbengine();
        }

        $sqlarr = parent::getCreateTableSQL($xmldb_table);

        if (!$engine) {
            // we rely on database defaults
            return $sqlarr;
        }

        // let's inject the engine into SQL
        foreach ($sqlarr as $i=>$sql) {
            if (strpos($sql, 'CREATE TABLE ') === 0) {
                $sqlarr[$i] .= " ENGINE = $engine";
            }
        }

        return $sqlarr;
    }

    /**
     * Given one correct xmldb_table, returns the SQL statements
     * to create temporary table (inside one array)
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))