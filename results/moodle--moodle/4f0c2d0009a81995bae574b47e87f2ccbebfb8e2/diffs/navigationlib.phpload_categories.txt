    protected function load_categories($categoryid=0) {
        global $CFG, $DB, $USER;

        if ($categoryid === 0 && $this->allcategoriesloaded) {
            return 0;
        }

        $systemcontext = get_context_instance(CONTEXT_SYSTEM);

        // Cache capability moodle/site:config we use this in the next bit of code
        if (!$this->cache->cached('hassiteconfig')) {
            $this->cache->hassiteconfig = has_capability('moodle/site:config', $systemcontext);
        }

        // If the user is logged in (but not as a guest), doesnt have the site config capability,
        // and my courses havn't been disabled then we will show the user's courses in the
        // global navigation, otherwise we will show up to FRONTPAGECOURSELIMIT available courses
        if (isloggedin() && !$this->cache->hassiteconfig && !isguestuser() && empty($CFG->disablemycourses)) {
            if (!$this->cache->cached('mycourses')) {
                $this->cache->mycourses = get_my_courses($USER->id);
            }
            $courses = $this->cache->mycourses;
        } else {
            // Check whether we have already cached the available courses
            if (!$this->cache->cached('availablecourses')) {
                // Non-cached - get accessinfo
                if (isset($USER->access)) {
                    $accessinfo = $USER->access;
                } else {
                    $accessinfo = get_user_access_sitewide($USER->id);
                }
                // Get the available courses using get_user_courses_bycap
                $this->cache->availablecourses = get_user_courses_bycap($USER->id, 'moodle/course:view',
                                                                        $accessinfo, true, 'c.sortorder ASC',
                                                                        array('fullname','visible', 'category'),
                                                                        FRONTPAGECOURSELIMIT);
            }
            // Cache the available courses for a refresh
            $courses = $this->cache->availablecourses;
        }

        // Iterate through all courses, and explode thier course category paths so that
        // we can retrieve all of the individual category id's that are required
        // to display the list of courses in the tree
        $categoryids = array();
        foreach ($courses as $course) {
            // If a category id has been specified and the current course is not within
            // that category or one of its children then skip this course
            if ($categoryid!==0 && !preg_match('#/('.$categoryid.')(/|$)#', $course->categorypath)) {
                continue;
            }
            $categorypathids = explode('/',trim($course->categorypath,' /'));
            // If no category has been specified limit the depth we display immediatly to
            // that of the nav var depthforwards
            if ($categoryid===0 && count($categorypathids)>($this->depthforward+1) && empty($CFG->navshowallcourses)) {
                $categorypathids = array_slice($categorypathids, 0, ($this->depthforward+1));
            }
            $categoryids = array_merge($categoryids, $categorypathids);
        }
        // Remove duplicate categories (and there will be a few)
        $categoryids = array_unique($categoryids);

        // Check whether we have some category ids to display and make sure that either
        // no category has been specified ($categoryid===0) or that the category that
        // has been specified is in the list.
        if (count($categoryids)>0 && ($categoryid===0 || in_array($categoryid, $categoryids))) {
            $catcachestr = 'categories'.join($categoryids);
            if (!$this->cache->cached($catcachestr)) {
                $this->cache->{$catcachestr} = $DB->get_records_select('course_categories', 'id IN ('.join(',', $categoryids).')', array(), 'path ASC, sortorder ASC');
            }
            $categories = $this->cache->{$catcachestr};
            // Retrieve the nessecary categories and then proceed to add them to the tree
            foreach ($categories as $category) {
                $this->add_category_by_path($category);
            }
            // Add the courses that were retrieved earlier to the
            $this->add_courses($courses);
        } else if ($categoryid === 0) {
            $keys = array();
            $categories = $DB->get_records('course_categories', array('parent' => $categoryid), 'sortorder ASC');
            $this->add_categories($keys, $categories);
            $this->add_courses($courses, $categoryid);
        }
        $this->allcategoriesloaded = true;
        return 0;
    }

    /**
     * This function marks the cache as volatile so it is cleared during shutdown
     */
||||||||    protected function load_categories($categoryid=0) {
        global $CFG, $DB, $USER;

        if ($categoryid === 0 && $this->allcategoriesloaded) {
            return 0;
        }

        $systemcontext = get_context_instance(CONTEXT_SYSTEM);

        // If the user is logged in (but not as a guest), doesnt have the site config capability,
        // and my courses havn't been disabled then we will show the user's courses in the
        // global navigation, otherwise we will show up to FRONTPAGECOURSELIMIT available courses
        if (isloggedin() && !is_siteadmin() && !isguestuser() && empty($CFG->disablemycourses)) {
            if (!$this->cache->cached('mycourses')) {
                $this->cache->mycourses = get_my_courses($USER->id);
            }
            $courses = $this->cache->mycourses;
        } else {
            // Check whether we have already cached the available courses
            if (!$this->cache->cached('availablecourses')) {
                // Non-cached - get accessinfo
                if (isset($USER->access)) {
                    $accessinfo = $USER->access;
                } else {
                    $accessinfo = get_user_access_sitewide($USER->id);
                }
                // Get the available courses using get_user_courses_bycap
                $this->cache->availablecourses = get_user_courses_bycap($USER->id, 'moodle/course:participate',
                                                                        $accessinfo, true, 'c.sortorder ASC',
                                                                        array('fullname','visible', 'category'),
                                                                        FRONTPAGECOURSELIMIT);
            }
            // Cache the available courses for a refresh
            $courses = $this->cache->availablecourses;
        }

        // Iterate through all courses, and explode thier course category paths so that
        // we can retrieve all of the individual category id's that are required
        // to display the list of courses in the tree
        $categoryids = array();
        foreach ($courses as $course) {
            // If a category id has been specified and the current course is not within
            // that category or one of its children then skip this course
            if ($categoryid!==0 && !preg_match('#/('.$categoryid.')(/|$)#', $course->categorypath)) {
                continue;
            }
            $categorypathids = explode('/',trim($course->categorypath,' /'));
            // If no category has been specified limit the depth we display immediatly to
            // that of the nav var depthforwards
            if ($categoryid===0 && count($categorypathids)>($this->depthforward+1) && empty($CFG->navshowallcourses)) {
                $categorypathids = array_slice($categorypathids, 0, ($this->depthforward+1));
            }
            $categoryids = array_merge($categoryids, $categorypathids);
        }
        // Remove duplicate categories (and there will be a few)
        $categoryids = array_unique($categoryids);

        // Check whether we have some category ids to display and make sure that either
        // no category has been specified ($categoryid===0) or that the category that
        // has been specified is in the list.
        if (count($categoryids)>0 && ($categoryid===0 || in_array($categoryid, $categoryids))) {
            $catcachestr = 'categories'.join($categoryids);
            if (!$this->cache->cached($catcachestr)) {
                $this->cache->{$catcachestr} = $DB->get_records_select('course_categories', 'id IN ('.join(',', $categoryids).')', array(), 'path ASC, sortorder ASC');
            }
            $categories = $this->cache->{$catcachestr};
            // Retrieve the nessecary categories and then proceed to add them to the tree
            foreach ($categories as $category) {
                $this->add_category_by_path($category);
            }
            // Add the courses that were retrieved earlier to the
            $this->add_courses($courses);
        } else if ($categoryid === 0) {
            $keys = array();
            $categories = $DB->get_records('course_categories', array('parent' => $categoryid), 'sortorder ASC');
            $this->add_categories($keys, $categories);
            $this->add_courses($courses, $categoryid);
        }
        $this->allcategoriesloaded = true;
        return 0;
    }

    /**
     * This function marks the cache as volatile so it is cleared during shutdown
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_UNARY_OP
                        (AST_CALL)))
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL)))
                                        (AST_CONST)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR))))
                                            (SCALAR))
                                        (AST_ARRAY)
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (SCALAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_UNARY_OP
                            (AST_CALL)))
                    (AST_UNARY_OP
                        (AST_CALL)))
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))))))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL)))
                                        (AST_CONST)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))))
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR))))
                                            (SCALAR))
                                        (AST_ARRAY)
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (SCALAR)))
                                        (SCALAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (SCALAR)))