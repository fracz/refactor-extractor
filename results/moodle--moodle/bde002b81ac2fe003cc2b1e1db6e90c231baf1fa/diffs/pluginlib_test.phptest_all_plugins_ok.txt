    public function test_all_plugins_ok() {
        $pluginman = testable_plugin_manager::instance();
        $failedplugins = array();
        $this->assertFalse($pluginman->all_plugins_ok(2013010100, $failedplugins));
        $this->assertContains('mod_foo', $failedplugins); // Requires mod_missing.
        $this->assertNotContains('mod_bar', $failedplugins);
        $this->assertNotContains('foolish_frog', $failedplugins);
        $this->assertNotContains('foolish_hippo', $failedplugins);

        $failedplugins = array();
        $this->assertFalse($pluginman->all_plugins_ok(2012010100, $failedplugins));
        $this->assertContains('mod_foo', $failedplugins); // Requires mod_missing.
        $this->assertNotContains('mod_bar', $failedplugins);
        $this->assertContains('foolish_frog', $failedplugins); // Requires Moodle 2013010100.
        $this->assertNotContains('foolish_hippo', $failedplugins);

        $failedplugins = array();
        $this->assertFalse($pluginman->all_plugins_ok(2011010100, $failedplugins));
        $this->assertContains('mod_foo', $failedplugins); // Requires mod_missing and Moodle 2012010100.
        $this->assertContains('mod_bar', $failedplugins); // Requires Moodle 2012010100.
        $this->assertContains('foolish_frog', $failedplugins); // Requires Moodle 2013010100.
        $this->assertContains('foolish_hippo', $failedplugins); // Requires Moodle 2012010100.
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||