    public function set_cm($cm, $course = null, $module = null) {
        if (!isset($cm->name) || !isset($cm->modname) || !isset($cm->id)) {
            throw new coding_exception('The $cm you set on $PAGE must have been obtained with get_coursemodule_from_id or get_coursemodule_from_instance. That is, the ->name and -> modname fields must be present and correct.');
        }
        $this->_cm = $cm;
        $this->_cm->context = get_context_instance(CONTEXT_MODULE, $cm->id); // hacky shortcut
        if (!$this->_context) {
            $this->set_context($this->_cm->context);
        }
        if (!$this->_course || $this->_course->id != $cm->course) {
            if (!$course) {
                global $DB;
                $course = $DB->get_record('course', array('id' => $cm->course));
            }
            if ($course->id != $cm->course) {
                throw new coding_exception('The course you passed to $PAGE->set_cm does not seem to correspond to the $cm.');
            }
            $this->set_course($course);
        }
        if ($module) {
            $this->set_activity_record($module);
        }
    }

    /**
     * @param $module a row from the main database table for the module that this
     * page belongs to. For example, if ->cm is a forum, then you can pass the
     * corresponding row from the forum table here if you have it (saves a database
     * query sometimes).
     */
||||||||    public function set_cm($cm, $course = null, $module = null) {
        global $DB;

        if (!isset($cm->name) || !isset($cm->modname) || !isset($cm->id)) {
            throw new coding_exception('The $cm you set on $PAGE must have been obtained with get_coursemodule_from_id or get_coursemodule_from_instance. That is, the ->name and -> modname fields must be present and correct.');
        }
        $this->_cm = $cm;
        $this->_cm->context = get_context_instance(CONTEXT_MODULE, $cm->id); // hacky shortcut
        if (!$this->_context) {
            $this->set_context($this->_cm->context);
        }
        if (!$this->_course || $this->_course->id != $cm->course) {
            if (!$course) {
                $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);
            }
            if ($course->id != $cm->course) {
                throw new coding_exception('The course you passed to $PAGE->set_cm does not seem to correspond to the $cm.');
            }
            $this->set_course($course);
        }
        if ($module) {
            $this->set_activity_record($module);
        }
    }

    /**
     * @param $module a row from the main database table for the module that this
     * page belongs to. For example, if ->cm is a forum, then you can pass the
     * corresponding row from the forum table here if you have it (saves a database
     * query sometimes).
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR))))
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL
            (
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_GLOBAL
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR))))
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))))
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL
            (
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR)))
                                        (SCALAR)
                                        (AST_CONST)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))