    protected function analyse_responses_for_all_questions_and_subquestions($qubaids, $questions, $subquestionstats,
                                                                            $progress = null) {

        if ($progress === null) {
            $progress = new \core\progress\null();
        }

        // Starting response analysis tasks.
        $progress->start_progress('', count($questions) + count($subquestionstats));

        // Starting response analysis of main questions.
        $progress->start_progress('', count($questions), count($questions));

        $done = array();
        $donecount = 1;
        foreach ($questions as $question) {
            $progress->progress($donecount);
            $donecount++;
            if (!question_bank::get_qtype($question->qtype, false)->can_analyse_responses()) {
                continue;
            }
            $done[$question->id] = 1;

            $responesstats = new \core_question\statistics\responses\analyser($question);
            $responesstats->calculate($qubaids);
        }
        $progress->end_progress();

        // Starting response analysis of sub-questions.
        $countsubquestions = count($subquestionstats);
        $progress->start_progress('', $countsubquestions, $countsubquestions);
        $donecount = 1;
        foreach ($subquestionstats as $subquestionstat) {
            $progress->progress($donecount);
            $donecount++;
            if (!question_bank::get_qtype($subquestionstat->question->qtype, false)->can_analyse_responses() ||
                    isset($done[$subquestionstat->question->id])) {
                continue;
            }
            $done[$subquestionstat->question->id] = 1;

            $responesstats = new \core_question\statistics\responses\analyser($subquestionstat->question);
            $responesstats->calculate($qubaids);
        }
        // Finished sub-question tasks.
        $progress->end_progress();

        // Finished all response analysis tasks.
        $progress->end_progress();
    }

    /**
     * @return string HTML snipped for the Download full report as UI.
     */
||||||||    protected function analyse_responses_for_all_questions_and_subquestions($qubaids, $questions, $subquestions,
                                                                            $progress = null) {

        if ($progress === null) {
            $progress = new \core\progress\null();
        }

        // Starting response analysis tasks.
        $progress->start_progress('', count($questions) + count($subquestions));

        // Starting response analysis of main questions.
        $progress->start_progress('', count($questions), count($questions));

        $done = array();
        $donecount = 1;
        foreach ($questions as $question) {
            $progress->progress($donecount);
            $donecount++;
            if (!question_bank::get_qtype($question->qtype, false)->can_analyse_responses()) {
                continue;
            }
            $done[$question->id] = 1;

            $responesstats = new \core_question\statistics\responses\analyser($question);
            $responesstats->calculate($qubaids);
        }
        $progress->end_progress();

        // Starting response analysis of sub-questions.
        $countsubquestions = count($subquestions);
        $progress->start_progress('', $countsubquestions, $countsubquestions);
        $donecount = 1;
        foreach ($subquestions as $subquestion) {
            $progress->progress($donecount);
            $donecount++;
            if (!question_bank::get_qtype($subquestion->qtype, false)->can_analyse_responses() ||
                    isset($done[$subquestion->id])) {
                continue;
            }
            $done[$subquestion->id] = 1;

            $responesstats = new \core_question\statistics\responses\analyser($subquestion);
            $responesstats->calculate($qubaids);
        }
        // Finished sub-question tasks.
        $progress->end_progress();

        // Finished all response analysis tasks.
        $progress->end_progress();
    }

    /**
     * @return string HTML snipped for the Download full report as UI.
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_CONST)))))
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR))))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONST)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONST)))))
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))