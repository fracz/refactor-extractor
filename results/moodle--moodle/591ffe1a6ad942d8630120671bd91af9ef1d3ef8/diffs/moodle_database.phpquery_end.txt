    protected function query_end($result) {
        if ($result !== false) {
            return;
        }

        switch ($this->last_type) {
            case SQL_QUERY_SELECT:
            case SQL_QUERY_AUX:
                throw new dml_read_exception($this->get_last_error(), $this->last_sql, $this->last_params);
            case SQL_QUERY_INSERT:
            case SQL_QUERY_UPDATE:
            case SQL_QUERY_STRUCTURE:
                throw new dml_write_exception($this->get_last_error(), $this->last_sql, $this->last_params);
        }
    }

    /**
     * Returns database server info array
     * @return array
     */
||||||||    protected function query_end($result) {
        if ($result !== false) {
            return;
        }

        switch ($this->last_type) {
            case SQL_QUERY_SELECT:
            case SQL_QUERY_AUX:
                throw new dml_read_exception($this->get_last_error(), $this->last_sql, $this->last_params);
            case SQL_QUERY_INSERT:
            case SQL_QUERY_UPDATE:
                throw new dml_write_exception($this->get_last_error(), $this->last_sql, $this->last_params);
            case SQL_QUERY_STRUCTURE:
                $this->get_manager(); // includes ddl exceptions classes ;-)
                throw new ddl_change_structure_exception($this->get_last_error(), $this->last_sql);
        }
    }

    /**
     * Returns database server info array
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))))