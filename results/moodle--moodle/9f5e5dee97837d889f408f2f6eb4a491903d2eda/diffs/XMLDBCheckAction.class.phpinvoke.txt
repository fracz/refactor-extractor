||||||||    function invoke() {
        parent::invoke();

        $result = true;

    /// Set own core attributes
        $this->does_generate = ACTION_GENERATE_HTML;

    /// These are always here
        global $CFG, $XMLDB, $DB;

    /// And we nedd some ddl suff
        $dbman = $DB->get_manager();

    /// Here we'll acummulate all the wrong fields found
        $problemsfound = array();

    /// Do the job, setting $result as needed

    /// Get the confirmed to decide what to do
        $confirmed = optional_param('confirmed', false, PARAM_BOOL);

    /// If  not confirmed, show confirmation box
        if (!$confirmed) {
            $o = '<table class="generalbox" border="0" cellpadding="5" cellspacing="0" id="notice">';
            $o.= '  <tr><td class="generalboxcontent">';
            $o.= '    <p class="centerpara">' . $this->str[$this->introstr] . '</p>';
            $o.= '    <table class="boxaligncenter" cellpadding="20"><tr><td>';
            $o.= '      <div class="singlebutton">';
            $o.= '        <form action="index.php?action=' . $this->title . '&amp;confirmed=yes" method="post"><fieldset class="invisiblefieldset">';
            $o.= '          <input type="submit" value="'. $this->str['yes'] .'" /></fieldset></form></div>';
            $o.= '      </td><td>';
            $o.= '      <div class="singlebutton">';
            $o.= '        <form action="index.php?action=main_view" method="post"><fieldset class="invisiblefieldset">';
            $o.= '          <input type="submit" value="'. $this->str['no'] .'" /></fieldset></form></div>';
            $o.= '      </td></tr>';
            $o.= '    </table>';
            $o.= '  </td></tr>';
            $o.= '</table>';

            $this->output = $o;
        } else {
        /// The back to edit table button
            $b = ' <p class="centerpara buttons">';
            $b .= '<a href="index.php">[' . $this->str['back'] . ']</a>';
            $b .= '</p>';

        /// Iterate over $XMLDB->dbdirs, loading their XML data to memory
            if ($XMLDB->dbdirs) {
                $dbdirs =& $XMLDB->dbdirs;
                $o='<ul>';
                foreach ($dbdirs as $dbdir) {
                /// Only if the directory exists
                    if (!$dbdir->path_exists) {
                        continue;
                    }
                /// Load the XML file
                    $xmldb_file = new xmldb_file($dbdir->path . '/install.xml');

                /// Only if the file exists
                    if (!$xmldb_file->fileExists()) {
                        continue;
                    }
                /// Load the XML contents to structure
                    $loaded = $xmldb_file->loadXMLStructure();
                    if (!$loaded || !$xmldb_file->isLoaded()) {
                        notify('Errors found in XMLDB file: '. $dbdir->path . '/install.xml');
                        continue;
                    }
                /// Arriving here, everything is ok, get the XMLDB structure
                    $structure = $xmldb_file->getStructure();

                    $o.='    <li>' . str_replace($CFG->dirroot . '/', '', $dbdir->path . '/install.xml');
                /// Getting tables
                    if ($xmldb_tables = $structure->getTables()) {
                        $o.='        <ul>';
                    /// Foreach table, process its fields
                        foreach ($xmldb_tables as $xmldb_table) {
                        /// Skip table if not exists
                            if (!$dbman->table_exists($xmldb_table)) {
                                continue;
                            }
                        /// Fetch metadata from phisical DB. All the columns info.
                            if (!$metacolumns = $DB->get_columns($xmldb_table->getName())) {
                            //// Skip table if no metacolumns is available for it
                                continue;
                            }
                        /// Table processing starts here
                            $o.='            <li>' . $xmldb_table->getName();
                        /// Do the specific check.
                            list($output, $newproblems) = $this->check_table($xmldb_table, $metacolumns);
                            $o.=$output;
                            $problemsfound = array_merge($problemsfound, $newproblems);
                            $o.='    </li>';
                        }
                        $o.='        </ul>';
                    }
                    $o.='    </li>';
                }
                $o.='</ul>';
            }

        /// Create a report of the problems found.
            $r = $this->display_results($problemsfound);

        /// Combine the various bits of output.
            $this->output = $b . $r . $o;
        }

    /// Launch postaction if exists (leave this here!)
        if ($this->getPostAction() && $result) {
            return $this->launch($this->getPostAction());
        }

    /// Return ok if arrived here
        return $result;
    }

    /**
     * Do the checks necessary on one particular table.
     *
     * @param xmldb_table $xmldb_table the table definition from the install.xml file.
     * @param array $metacolumns the column information read from the database.
     * @return array an array with two elements: First, some additional progress output,
     *      for example a list (<ul>) of the things check each with an one work ok/not ok summary.
     *      Second, an array giving the details of any problems found. These arrays
     *      for all tables will be aggregated, and then passed to
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR)))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ASSIGN_REF
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_PROP
                                                    (AST_VAR)))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_VAR))
                                                (AST_UNARY_OP
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_PROP
                                                                    (AST_VAR)))
                                                            (SCALAR))))
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (SCALAR)
                                                    (AST_BINARY_OP
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_FOREACH
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (NULL)
                                                    (
                                                        (AST_IF
                                                            (AST_IF_ELEM
                                                                (AST_UNARY_OP
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)
                                                                        (
                                                                            (AST_VAR))))
                                                                (
                                                                    (AST_CONTINUE
                                                                        (NULL)))))
                                                        (AST_IF
                                                            (AST_IF_ELEM
                                                                (AST_UNARY_OP
                                                                    (AST_ASSIGN
                                                                        (AST_VAR)
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR)
                                                                            (
                                                                                (AST_METHOD_CALL
                                                                                    (AST_VAR))))))
                                                                (
                                                                    (AST_CONTINUE
                                                                        (NULL)))))
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_BINARY_OP
                                                                (SCALAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))))
                                                        (AST_ASSIGN
                                                            (AST_ARRAY
                                                                (AST_ARRAY_ELEM
                                                                    (AST_VAR)
                                                                    (NULL))
                                                                (AST_ARRAY_ELEM
                                                                    (AST_VAR)
                                                                    (NULL)))
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR)
                                                                    (AST_VAR))))
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (AST_VAR))
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)
                                                                    (AST_VAR))))
                                                        (AST_ASSIGN_OP
                                                            (AST_VAR)
                                                            (SCALAR))))
                                                (AST_ASSIGN_OP
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))