    public static function get_users($params) {
        $context = get_context_instance(CONTEXT_SYSTEM);
        require_capability('moodle/user:viewdetails', $context);
        self::validate_context($context);

        $search = validate_param($params['search'], PARAM_RAW);

        //TODO: this search is probably useless for external systems because it is not exact
        //      1/ we should specify multiple search parameters including the mnet host id
        //      2/ custom profile fileds not inlcuded

        return get_users(true, $search, false, null, 'firstname ASC','', '', '', 1000, 'id, mnethostid, auth, confirmed, username, idnumber, firstname, lastname, email, emailstop, lang, theme, timezone, mailformat, city, description, country');
    }

}||||||||    public static function get_users($params) {
        $context = get_context_instance(CONTEXT_SYSTEM);
        require_capability('moodle/user:viewdetails', $context);
        self::validate_context($context);

        $params = self::validate_prameters(self::get_users_parameters(), $params);

        //TODO: this search is probably useless for external systems because it is not exact
        //      1/ we should specify multiple search parameters including the mnet host id
        //      2/ custom profile fileds not included

        $result = array();

        $users = get_users(true, $params['search'], false, null, 'firstname ASC','', '', '', 1000, 'id, mnethostid, auth, confirmed, username, idnumber, firstname, lastname, email, emailstop, lang, theme, timezone, mailformat, city, description, country');
        foreach ($users as $user) {
            $result[] = (array)$user;
        }
    }
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CONST)
                (AST_VAR)
                (AST_CONST)
                (AST_CONST)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST)
                (AST_CONST)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_CAST
                    (AST_VAR))))))