||||||||    protected function setup_user_hidden_docs($user) {
        // These results will come first, and will not be visible by the user.
        $record = new \stdClass();
        $record->denyuserids = array($user->id);
        $record->content = 'Something1 Something2 Something3 Something4';
        for ($i = 0; $i < 10; $i++) {
            $this->generator->create_record($record);
        }

        // These results will come second, and will  be visible by the user.
        unset($record->denyuserids);
        $record->content = 'Something1 Something2 Something3';
        for ($i = 0; $i < 10; $i++) {
            $this->generator->create_record($record);
        }

        // These results will come third, and will not be visible by the user.
        $record->denyuserids = array($user->id);
        $record->content = 'Something1 Something2';
        for ($i = 0; $i < 10; $i++) {
            $this->generator->create_record($record);
        }

        // These results will come fourth, and will be visible by the user.
        unset($record->denyuserids);
        $record->content = 'Something1 ';
        for ($i = 0; $i < 10; $i++) {
            $this->generator->create_record($record);
        }
    }

    /**
     * Test that counts are what we expect.
     *
     * @dataProvider file_indexing_provider
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR))))))