    function is_locked($userid=NULL) {
        // TODO: rewrite the item check

        if ($this->locked || empty($userid)) {
            return $this->locked; // This could be true or false (false only if no $userid given)
        } else {
            $final = $this->get_final($userid);
            return $final->locked;
        }
    }

    /**
     * Locks or unlocks this grade_item and (optionally) all its associated final grades.
     * @param boolean $update_final Whether to update final grades too
     * @param boolean $new_state Optional new state. Will use inverse of current state otherwise.
     * @return int Number of final grades changed, or false if error occurred during update.
     */
||||||||    function is_locked($userid=NULL) {
         if (!empty($this->locked)) {
            return true;
         }

         if (!empty($userid)) {

            $grade = new grade_grades(array('itemid'=>$this->id, 'userid'=>$userid));
            $grade->grade_item =& $this; // prevent db fetching of cached grade_item

            if (!empty($grade->id) and $grade->is_locked()) {
                return true;
            }
        }

        return false;
    }

    /**
     * Locks or unlocks this grade_item and (optionally) all its associated final grades.
     * @param boolean $update_final Whether to update final grades too
     * @param boolean $new_state Optional new state. Will use inverse of current state otherwise.
     * @return boolean true if grade_item all grades updated, false if at least one update fails
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN_REF
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))