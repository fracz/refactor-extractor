    function test_grade_item_toggle_locking() {
/*        $grade_item = new grade_item($this->grade_items[0]);
        $this->assertTrue(method_exists($grade_item, 'toggle_locking'));

        $this->assertFalse($grade_item->locked);
        $this->assertEqual(0, $grade_item->toggle_locking());
        $this->assertTrue($grade_item->locked);
        $grade_item->load_final();
        $this->assertFalse($grade_item->grade_grades[1]->locked);

        $grade_item->locked = false;
        $this->assertEqual(3, $grade_item->toggle_locking(true));
        $this->assertTrue($grade_item->locked);
        $this->assertTrue($grade_item->grade_grades[1]->locked);
        $this->assertTrue($grade_item->grade_grades[2]->locked);
        $this->assertTrue($grade_item->grade_grades[3]->locked);
    }

    function test_grade_item_toggle_hiding() {
        $grade_item = new grade_item($this->grade_items[0]);
        $this->assertTrue(method_exists($grade_item, 'toggle_hiding'));

        $this->assertFalse($grade_item->hidden);
        $this->assertEqual(0, $grade_item->toggle_hiding());
        $this->assertTrue($grade_item->hidden);
        $grade_item->load_final();
        $this->assertFalse($grade_item->grade_grades[1]->hidden);

        $grade_item->hidden = false;
        $this->assertEqual(3, $grade_item->toggle_hiding(true));
        $this->assertTrue($grade_item->hidden);
        $this->assertTrue($grade_item->grade_grades[1]->hidden);
        $this->assertTrue($grade_item->grade_grades[2]->hidden);
        $this->assertTrue($grade_item->grade_grades[3]->hidden);
*/    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE||||||||