    function set_locked($locked) {
        $this->locked = $locked;
        return $this->update();
    }

    /**
     * Returns the hidden state/date of this grade_item. This method is also available in
     * grade_category, for cases where the object type is not known.
     * @return int 0, 1 or timestamp int(10)
     */
||||||||    function set_locked($lockedstate) {
        if ($lockedstate) {
        /// setting lock
            if (!empty($this->locked)) {
                return true; // already locked
            }

            if ($this->needsupdate) {
                return false; // can not lock grade without first calculating final grade
            }

            $this->locked = time();
            $this->update();

            // this could be improved with direct SQL update
            $result = true;
            $grades = $this->get_final();
            foreach($grades as $g) {
                $grade = new grade_grades($g, false);
                $grade->grade_item =& $this;
                if (!$grade->set_locked(true)) {
                    $result = false;
                }
            }

            return $result;

        } else {
        /// removing lock
            if (empty($this->locked)) {
                return true; // not locked
            }

            if (!empty($this->locktime) and $this->locktime < time()) {
                return false; // can not unlock grade item that should be already locked
            }

            $this->locked = 0;
            $this->update();

            // this could be improved with direct SQL update
            $result = true;
            $grades = $this->get_final();
            foreach($grades as $g) {
                $grade = new grade_grades($g, false);
                $grade->grade_item =& $this;

                if (!empty($grade->locktime) and $grade->locktime < time()) {
                    $result = false; // can not unlock grade that should be already locked
                }

                if (!$grade->set_locked(false)) {
                    $result = false;
                }
            }

            return $result;

        }
    }

    /**
     * Locks or unlocks this grade_item and (optionally) all its associated final grades.
     * @param boolean $update_final Whether to update final grades too
     * @param boolean $new_state Optional new state. Will use inverse of current state otherwise.
     * @return int Number of final grades changed, or false if error occurred during update.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_CONST))))
                        (AST_ASSIGN_REF
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CONST))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST)))))))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_CONST))))
                        (AST_ASSIGN_REF
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_CONST))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST)))))))
                (AST_RETURN
                    (AST_VAR))))))