||||||||    public static function conflicts($format) { // TODO revisit the conflict with file, since we zip here
        return ($format == PORTFOLIO_FORMAT_PLAINHTML || $format == PORTFOLIO_FORMAT_FILE);
    }

}

class portfolio_format_leap2a extends portfolio_format_rich {

    public static function get_file_directory() {
        return 'files/';
    }

    /**
     * return the link to a file
     *
     * @param stored_file $file
     * @param boolean $entry whether the file is a LEAP2A entry or just a bundled file (default false)
     */
    public static function file_output($file, $entry=false) {
        $id = '';
        if ($entry) {
            $id = 'portfolio:file' . $file->get_id;
        } else {
            $id = self::get_file_directory() . '/' . $file->get_filename();
        }
        return '<a rel="enclosure" href="' . $id . '">' . $file->get_filename() . '</a>';
    }

    public static function leap2a_writer(stdclass $user=null) {
        global $CFG;
        if (empty($user)) {
            global $USER;
            $user = $USER;
        }
        require_once($CFG->libdir . '/portfolio/formats/leap2a/lib.php');
        return new portfolio_format_leap2a_writer($user);
    }

    public static function manifest_name() {
        return 'leap2a.xml';
    }
}


/**
* later.... a moodle plugin might support this.
* it's commented out in portfolio_supported_formats so cannot currently be used.
*/
//class portfolio_format_mbkp extends portfolio_format_rich {}

/**
* 'PDF format', subtype of file.
*
* for portfolio plugins that support PDFs specifically
*/
class portfolio_format_pdf extends portfolio_format_file {
    public static function mimetypes() {
        return array('application/pdf');
    }
}

/**
* 'Document format', subtype of file.
*
* for portfolio plugins that support documents specifically
*/
class portfolio_format_document extends portfolio_format_file {
    public static function mimetypes() {
        return array_merge(
            array('text/plain', 'text/rtf'),
            mimeinfo_from_icon('type', 'word.gif', true),
            mimeinfo_from_icon('type', 'docx.gif', true),
            mimeinfo_from_icon('type', 'odt.gif', true)
        );
    }
}

/**
* 'Spreadsheet format', subtype of file.
*
* for portfolio plugins that support spreadsheets specifically
*/
class portfolio_format_spreadsheet extends portfolio_format_file {
    public static function mimetypes() {
        return array_merge(
            mimeinfo_from_icon('type', 'excel.gif', true),
            mimeinfo_from_icon('type', 'xlsm.gif', true),
            mimeinfo_from_icon('type', 'ods.gif', true)
        );
    }
}

/**
* 'Presentation format', subtype of file.
*
* for portfolio plugins that support presentation specifically
*/
class portfolio_format_presentation extends portfolio_format_file {
    public static function mimetypes() {
        return mimeinfo_from_icon('type', 'powerpoint.gif', true);
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST)))))