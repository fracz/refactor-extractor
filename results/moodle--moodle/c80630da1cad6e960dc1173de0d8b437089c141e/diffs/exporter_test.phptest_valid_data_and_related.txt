||||||||    public function test_valid_data_and_related() {
        global $PAGE;
        $exporter = new tool_lp_testable_exporter($this->validdata, $this->validrelated);

        $output = $PAGE->get_renderer('tool_lp');

        $result = $exporter->export($output);
    }
}

/**
 * Example persistent class.
 *
 * @package    tool_lp
 * @copyright  2015 Frédéric Massart - FMCorz.net
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
class tool_lp_testable_exporter extends \tool_lp\external\exporter {

    protected static function define_related() {
        // We cache the context so it does not need to be retrieved from the course.
        return array('simplestdClass' => 'stdClass', 'arrayofstdClass' => 'stdClass[]');
    }

    protected function get_other_values(renderer_base $output) {
        return array(
            'otherstring' => 'An other string',
            'otherstrings' => array('String a', 'String b')
        );
    }

    public static function define_properties() {
        return array(
            'stringA' => array(
                'type' => PARAM_TEXT,
            ),
            'stringAformat' => array(
                'type' => PARAM_INT,
            ),
            'intB' => array(
                'type' => PARAM_INT,
            )
        );
    }

    public static function define_other_properties() {
        return array(
            'otherstring' => array(
                'type' => PARAM_TEXT,
            ),
            'otherstrings' => array(
                'type' => PARAM_TEXT,
                'multiple' => true
            )
        );
    }


}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))