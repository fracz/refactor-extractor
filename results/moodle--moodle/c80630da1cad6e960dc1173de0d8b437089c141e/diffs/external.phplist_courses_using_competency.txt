    public static function list_courses_using_competency($competencyid) {
        $params = self::validate_parameters(self::list_courses_using_competency_parameters(),
                                            array(
                                                'id' => $competencyid,
                                            ));

        $competency = api::read_competency($params['id']);
        self::validate_context($competency->get_context());

        return api::list_courses_using_competency($params['id']);
    }

    /**
     * Returns description of list_courses_using_competency() result value.
     *
     * @return \external_description
     */
||||||||    public static function list_courses_using_competency($competencyid) {
        global $PAGE;

        $params = self::validate_parameters(self::list_courses_using_competency_parameters(),
                                            array(
                                                'id' => $competencyid,
                                            ));

        $competency = api::read_competency($params['id']);
        self::validate_context($competency->get_context());
        $output = $PAGE->get_renderer('tool_lp');

        $results = array();
        $courses = api::list_courses_using_competency($params['id']);
        foreach ($courses as $course) {
            $context = context_course::instance($course->id);
            $exporter = new course_summary_exporter($course, array('context' => $context));
            $result = $exporter->export($output);
            array_push($results, $result);
        }
        return $results;
    }

    /**
     * Returns description of list_courses_using_competency() result value.
     *
     * @return \external_description
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))