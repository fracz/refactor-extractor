    protected function cache_stats($qubaids) {
        global $DB;
        $cachetime = time();
        foreach ($this->questions as $question) {
            $question->_stats->hashcode = $qubaids->get_hash_code();
            $question->_stats->timemodified = $cachetime;
            $DB->insert_record('question_statistics', $question->_stats, false);
        }

        foreach ($this->subquestions as $subquestion) {
            $subquestion->_stats->hashcode = $qubaids->get_hash_code();
            $subquestion->_stats->timemodified = $cachetime;
            $DB->insert_record('question_statistics', $subquestion->_stats, false);
        }

    }

    /**
     * Update $stats->totalmarks, $stats->markarray, $stats->totalothermarks
     * and $stats->othermarksarray to include another state.
     *
     * @param object $step the state to add to the statistics.
     * @param object $stats the question statistics we are accumulating.
     * @param array  $summarks of the sum of marks for each question usage, indexed by question usage id
     * @param bool $positionstat whether this is a statistic of position of question.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))))))||||||||