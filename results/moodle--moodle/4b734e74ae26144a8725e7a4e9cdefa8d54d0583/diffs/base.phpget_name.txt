    public function get_name() {
        return $this->data['eventname'];
    }

    /**
     * Returns event context.
     * @return \context
     */
||||||||    public static function get_name() {
        // Override in subclass with real lang string.
        $parts = explode('\\', __CLASS__);
        if (count($parts) !== 3) {
            return 'unknown event';
        }
        return $parts[0].': '.str_replace('_', ' ', $parts[2]);
    }

    /**
     * Returns localised description of what happened.
     *
     * @return string|\lang_string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_MAGIC_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))))