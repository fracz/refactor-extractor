||||||||    public function test_update_page_break() {
        // Create a test quiz with 8 questions.
        list($quiz, $cm, $course) = $this->prepare_quiz_data();
        $this->add_eight_questions_to_the_quiz($quiz);
        $quizobj = new quiz($quiz, $cm, $course);
        $structure = \mod_quiz\structure::create_for_quiz($quizobj);

        // Store the original order of slots, so we can assert what has changed.
        $originalslotids = array();
        foreach ($structure->get_slots() as $slot) {
            $originalslotids[$slot->slot] = $slot->id;
        }

        // Test removing a page break.
        $slotid = $structure->get_question_in_slot(2)->slotid;
        $type = \mod_quiz\repaginate::LINK;
        $slots = $structure->update_page_break($quiz, $slotid, $type);

        // Having called update page break, we need to reload $structure.
        $structure = \mod_quiz\structure::create_for_quiz($quizobj);
        $this->assert_quiz_layout(array(
                    $originalslotids[1] => 1,
                    $originalslotids[2] => 1,
                    $originalslotids[3] => 1,
                    $originalslotids[4] => 1,
                    $originalslotids[5] => 1,
                    $originalslotids[6] => 1,
                    $originalslotids[7] => 2,
                    $originalslotids[8] => 3,
                ), $structure);

        // Test adding a page break.
        $slotid = $structure->get_question_in_slot(2)->slotid;
        $type = \mod_quiz\repaginate::UNLINK;
        $slots = $structure->update_page_break($quiz, $slotid, $type);

        // Having called update page break, we need to reload $structure.
        $structure = \mod_quiz\structure::create_for_quiz($quizobj);
        $this->assert_quiz_layout(array(
                    $originalslotids[1] => 1,
                    $originalslotids[2] => 2,
                    $originalslotids[3] => 2,
                    $originalslotids[4] => 2,
                    $originalslotids[5] => 2,
                    $originalslotids[6] => 2,
                    $originalslotids[7] => 3,
                    $originalslotids[8] => 4,
                ), $structure);
    }

    /**
     * Populate quiz with eight questions.
     * @param stdClass $quiz the quiz to add to.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_VAR))))