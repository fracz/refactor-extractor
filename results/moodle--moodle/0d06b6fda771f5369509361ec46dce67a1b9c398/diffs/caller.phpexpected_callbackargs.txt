||||||||    public static abstract function expected_callbackargs();

}

/**
* base class for module callers
* this just implements a few of the abstract functions
* from portfolio_caller_base so that caller authors
* don't need to.
*
* See http://docs.moodle.org/en/Development:Adding_a_Portfolio_Button_to_a_page
* {@see also portfolio_caller_base}
*/
abstract class portfolio_module_caller_base extends portfolio_caller_base {

    /**
    * coursemodule object
    * set this in the constructor like
    * $this->cm = get_coursemodule_from_instance('forum', $this->forum->id);
    */
    protected $cm;

    /**
    *
    * int cmid
    */
    protected $id;

    /**
    * stdclass course object
    */
    protected $course;

    /**
    * navigation passed to print_header
    * override this to do something more specific than the module view page
    */
    public function get_navigation() {
        $extranav = array('name' => $this->cm->name, 'link' => $this->get_return_url());
        return array($extranav, $this->cm);
    }

    /**
    * the url to return to after export or on cancel
    * defaults to the module 'view' page
    * override this if it's deeper inside the module
    */
    public function get_return_url() {
        global $CFG;
        return $CFG->wwwroot . '/mod/' . $this->cm->modname . '/view.php?id=' . $this->cm->id;
    }

    /**
    * override the parent get function
    * to make sure when we're asked for a course
    * we retrieve the object from the database as needed
    */
    public function get($key) {
        if ($key != 'course') {
            return parent::get($key);
        }
        global $DB;
        if (empty($this->course)) {
            $this->course = $DB->get_record('course', array('id' => $this->cm->course));
        }
        return $this->course;
    }

    /**
    * return a string to put at the header summarising this export
    * by default, just hte display name and the module instance name
    * override this to do something more specific
    */
    public function heading_summary() {
        return get_string('exportingcontentfrom', 'portfolio', $this->display_name() . ': ' . $this->cm->name);
    }
}

?>||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NULL)