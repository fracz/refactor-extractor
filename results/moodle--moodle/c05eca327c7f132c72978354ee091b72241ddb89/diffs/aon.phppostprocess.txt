||||||||    function postprocess($category, $questionids) {
    /// Goes through the questionids, looking for shortanswer questions
    /// and converting random groups of 4 into matching questions.

    /// Doesn't handle shortanswer questions with more than one answer

        global $db, $CFG;

        $questionids = implode(',', $questionids);

        if (!$shortanswers = get_records_select("quiz_questions",
                                                "id IN ($questionids) AND qtype = ".SHORTANSWER,
                                                "", "id,qtype")) {
            return true;
        }


        $shortanswerids = array();
        foreach ($shortanswers as $key => $shortanswer) {
            $shortanswerids[] = $key;
        }

        $strmatch = "$category->name - ".get_string("match", "quiz");

        $shortanswerids = swapshuffle($shortanswerids);
        $count = count($shortanswerids);
        $i = 1;

        $question->category = $category->id;
        $question->qtype    = MATCH;
        $question->questiontext = get_string("randomsamatchintro", "quiz");
        $question->image  = "";

        while ($count > 4) {
             $question->name         = "$strmatch $i";
             $question->subquestions = array();
             $question->subanswers   = array();

             $extractids = implode(',', array_splice($shortanswerids, -4));
             $count = count($shortanswerids);

             $extracts = get_records_sql("SELECT q.questiontext, a.answer
                                            FROM {$CFG->prefix}quiz_questions q,
                                                 {$CFG->prefix}quiz_shortanswer sa,
                                                 {$CFG->prefix}quiz_answers a
                                           WHERE q.id in ($extractids)
                                             AND sa.question = q.id
                                             AND a.id = sa.answers");

             if (count($extracts) != 4) {
                 print_object($extracts);
                 notify("Could not find exactly four shortanswer questions with ids: $extractids");
                 continue;
             }

             if (!$question->id = insert_record("quiz_questions", $question)) {
                 error("Could not insert new question!");
             }

             foreach ($extracts as $shortanswer) {
                 $question->subquestions[] = addslashes($shortanswer->questiontext);
                 $question->subanswers[] = addslashes($shortanswer->answer);
             }

             $result = quiz_save_question_options($question);

             if (!empty($result->error)) {
                 notify("Error: $result->error");
             }

             if (!empty($result->notice)) {
                 notify($result->notice);
             }

             /// Delete the old short-answer questions

             execute_sql("DELETE FROM {$CFG->prefix}quiz_questions WHERE id IN ($extractids)");
             execute_sql("DELETE FROM {$CFG->prefix}quiz_shortanswer WHERE question IN ($extractids)");
             execute_sql("DELETE FROM {$CFG->prefix}quiz_answers WHERE question IN ($extractids)");

        }

        if ($count) {    /// Delete the remaining ones
            foreach ($shortanswerids as $shortanswerid) {
                delete_records("quiz_questions", "id", $shortanswerid);
                delete_records("quiz_shortanswer", "question", $shortanswerid);
                delete_records("quiz_answers", "question", $shortanswerid);
            }
        }


        return true;
    }

}

?>||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONST))
                            (SCALAR)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_ENCAPS_LIST
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_ENCAPS_LIST
                    (AST_VAR)
                    (SCALAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (NULL))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_CALL
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CONST)))