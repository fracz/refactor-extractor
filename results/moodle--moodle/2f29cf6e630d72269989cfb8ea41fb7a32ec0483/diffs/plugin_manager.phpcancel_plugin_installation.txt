||||||||    public function cancel_plugin_installation($component) {

        $plugin = $this->get_plugin_info($component);

        if (empty($plugin) or $plugin->is_standard() or $plugin->get_status() !== self::PLUGIN_STATUS_NEW
                or !$this->is_plugin_folder_removable($plugin->component)) {
            return false;
        }

        return remove_dir($plugin->rootdir);
    }

    /**
     * Cancels installation of all new additional plugins.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_EMPTY
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))))))