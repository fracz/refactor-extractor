    function print_options_form($quiz, $cm, $attempts, $lowlimit=0, $pagesize=QUIZ_REPORT_DEFAULT_PAGE_SIZE) {
        global $CFG, $USER;
        echo '<div class="controls">';
        echo '<form id="options" action="report.php" method="post">';
        echo '<fieldset class="invisiblefieldset">';
        echo '<p class="quiz-report-options">'.get_string('analysisoptions', 'quiz').': </p>';
        echo '<input type="hidden" name="id" value="'.$cm->id.'" />';
        echo '<input type="hidden" name="q" value="'.$quiz->id.'" />';
        echo '<input type="hidden" name="mode" value="analysis" />';
        echo '<p><label for="menuattemptselection">'.get_string('attemptselection', 'quiz_analysis').'</label> ';
        $options = array ( QUIZ_ALLATTEMPTS     => get_string("attemptsall", 'quiz_analysis'),
                           QUIZ_HIGHESTATTEMPT => get_string("attemptshighest", 'quiz_analysis'),
                           QUIZ_FIRSTATTEMPT => get_string("attemptsfirst", 'quiz_analysis'),
                           QUIZ_LASTATTEMPT  => get_string("attemptslast", 'quiz_analysis'));
        choose_from_menu($options, "attemptselection", "$attempts", "");
        echo '</p>';
        echo '<p><label for="lowmarklimit">'.get_string('lowmarkslimit', 'quiz_analysis').'</label> ';
        echo '<input type="text" id="lowmarklimit" name="lowmarklimit" size="1" value="'.$lowlimit.'" /> % </p>';
        echo '<p><label for="pagesize">'.get_string('pagesize', 'quiz_analysis').'</label> ';
        echo '<input type="text" id="pagesize" name="pagesize" size="1" value="'.$pagesize.'" /></p>';
        echo '<p><input type="submit" value="'.get_string('go').'" />';
        helpbutton("analysisoptions", get_string("analysisoptions",'quiz_analysis'), 'quiz');
        echo '</p>';
        echo '</fieldset>';
        echo '</form>';
        echo '</div>';
        echo "\n";

        echo '<table class="boxaligncenter"><tr>';
        $options = array();
        $options["id"] = "$cm->id";
        $options["q"] = "$quiz->id";
        $options["mode"] = "analysis";
        $options['sesskey'] = $USER->sesskey;
        $options["noheader"] = "yes";
        if (file_exists("$CFG->libdir/phpdocwriter/lib/include.php")) {
            echo '<td colspan="5" align="center">';
        }else {
            echo '<td colspan="4"  align="center">';
        }
        $options["download"] = "HTML";
        print_single_button('report.php', $options, get_string("downloadhtml", "quiz_analysis"));
        echo "</td></tr>\n";
        echo '<tr><td>';
        $options["download"] = "ODS";
        print_single_button("report.php", $options, get_string("downloadods"));
        echo "</td>\n";
        echo '<td>';
        $options["download"] = "Excel";
        print_single_button("report.php", $options, get_string("downloadexcel"));
        echo "</td>\n";

        if (file_exists("$CFG->libdir/phpdocwriter/lib/include.php")) {
            echo '<td>';
            $options["download"] = "OOo";
            print_single_button("report.php", $options, get_string("downloadooo", "quiz_analysis"));
            echo "</td>\n";
        }
        echo '<td>';
        $options["download"] = "CSV";
        print_single_button('report.php', $options, get_string("downloadtext"));
        echo "</td>\n";
        echo "<td>";
        helpbutton('analysisdownload', get_string('analysisdownload', 'quiz_analysis'), 'quiz');
        echo "</td>\n";
        echo '</tr></table>';
}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_CONST))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)
            (AST_ENCAPS_LIST
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_ENCAPS_LIST
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_ECHO
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ECHO
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_ENCAPS_LIST
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_ECHO
                    (SCALAR))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))||||||||