    function getquestions($filename, $category, $mdapath="", $hostname="") {
        if (($category == "allcategories") or ($category == "")) {
            $sql = "SELECT * FROM TBQuestions";
        } else {
            $sql = "SELECT * FROM TBQuestions where module = '".$category."'";
        }
        if (PHP_OS == "WINNT") {
            $ldb =& $this->connect_win($filename);
            $qset = $ldb->Execute("$sql");
            if ( $qset->RecordCount() > 0 ) {
                $records = $qset->GetAssoc(true);
            } else {
                $this->err("There were no records in the database.",$dsn);
                $ldb->Close();
                return false;
            }
            $ldb->Close();
        } else  { // if PHP_OS == WINNT
            // we have a linux installation
            $result = $this->query_linux($sql,$filename, $mdapath,$hostname);
            if ( count($result) > 0 ) {
                // get rid of the ID field in the first column.
                for($i=0;$i<count($result);$i++) {
                    foreach (array_keys($result[$i]) as $j) {
                        $records[$i][$j-1] = $result[$i][$j];
                    }
                }
            } else {
                $this->err("There were no records in the database.",$dsn);
                $ldb->Close();
                return false;
            }
                // xml test and connect
        }  // PHP_OS TEST
            return $records;
    }

||||||||    function getquestions($filename, $category, $mdapath="", $hostname="") {
        if (($category == "allcategories") or ($category == "")) {
            $sql = "SELECT * FROM TBQuestions";
        } else {
            $sql = "SELECT * FROM TBQuestions where module = '".$category."'";
        }
        if (PHP_OS == "WINNT") {
            $ldb =& $this->connect_win($filename);
            $qset = $ldb->Execute("$sql");
            if ( !$qset->EOF ) {
                $records = $qset->GetAssoc(true);
            } else {
                $this->err("There were no records in the database.",$dsn);
                $ldb->Close();
                return false;
            }
            $ldb->Close();
        } else  { // if PHP_OS == WINNT
            // we have a linux installation
            $result = $this->query_linux($sql,$filename, $mdapath,$hostname);
            if ( count($result) > 0 ) {
                // get rid of the ID field in the first column.
                for($i=0;$i<count($result);$i++) {
                    foreach (array_keys($result[$i]) as $j) {
                        $records[$i][$j-1] = $result[$i][$j];
                    }
                }
            } else {
                $this->err("There were no records in the database.",$dsn);
                $ldb->Close();
                return false;
            }
                // xml test and connect
        }  // PHP_OS TEST
            return $records;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ENCAPS_LIST
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_FOR
                                (AST_EXPR_LIST
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_EXPR_LIST
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))
                                (AST_EXPR_LIST
                                    (AST_POST_INC
                                        (AST_VAR)))
                                (
                                    (AST_FOREACH
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_VAR)
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR)))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ENCAPS_LIST
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_FOR
                                (AST_EXPR_LIST
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_EXPR_LIST
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)))))
                                (AST_EXPR_LIST
                                    (AST_POST_INC
                                        (AST_VAR)))
                                (
                                    (AST_FOREACH
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))
                                        (AST_VAR)
                                        (NULL)
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR)))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_VAR)))