    public function output_html($data, $query='') {
        global $CFG, $OUTPUT, $DB, $USER;

        // display strings
        $stroperation = get_string('operation', 'webservice');
        $strtoken = get_string('token', 'webservice');
        $strservice = get_string('service', 'webservice');
        $struser = get_string('user');
        $strcontext = get_string('context', 'webservice');
        $strvaliduntil = get_string('validuntil', 'webservice');
        $striprestriction = get_string('iprestriction', 'webservice');

        $return = $OUTPUT->box_start('generalbox webservicestokenui');

        $table = new html_table();
        $table->head  = array($strtoken, $struser, $strservice, $strcontext, $striprestriction, $strvaliduntil, $stroperation);
        $table->align = array('left', 'left', 'left', 'center', 'center', 'center', 'center');
        $table->width = '100%';
        $table->data  = array();

        $tokenpageurl = "$CFG->wwwroot/$CFG->admin/webservice/tokens.php?sesskey=" . sesskey();

        //TODO: in order to let the administrator delete obsolete token, split this request in multiple request or use LEFT JOIN

        //here retrieve token list (including linked users firstname/lastname and linked services name)
        $sql = "SELECT t.id, t.token, u.id AS userid, u.firstname, u.lastname, s.name, t.validuntil
                  FROM {external_tokens} t, {user} u, {external_services} s
                 WHERE t.creatorid=? AND t.tokentype = ? AND s.id = t.externalserviceid AND t.userid = u.id";
        $tokens = $DB->get_records_sql($sql, array($USER->id, EXTERNAL_TOKEN_PERMANENT));
        if (!empty($tokens)) {
            foreach ($tokens as $token) {
                //TODO: retrieve context

                $delete = "<a href=\"".$tokenpageurl."&amp;action=delete&amp;tokenid=".$token->id."\">";
                $delete .= get_string('delete')."</a>";

                if (empty($_SERVER['HTTPS'])) {
                    $token->token = get_string('activatehttps', 'webservice');
                }

                $validuntil = '';
                if (!empty($token->validuntil)) {
                    $validuntil = date("F j, Y"); //TODO: language support (look for moodle function)
                }

                $iprestriction = '';
                if (!empty($token->iprestriction)) {
                    $iprestriction = $token->iprestriction;
                }

                $userprofilurl = new moodle_url('/user/view.php?id='.$token->userid);
                $useratag = html_writer::start_tag('a', array('href' => $userprofilurl));
                $useratag .= $token->firstname." ".$token->lastname;
                $useratag .= html_writer::end_tag('a');
                $table->data[] = array($token->token, $useratag, $token->name, '', $iprestriction, $validuntil, $delete);
            }

            $return .= $OUTPUT->table($table);
            $return .= get_string('httpswarning', 'webservice');
        } else {
            $return .= get_string('notoken', 'webservice');
        }

        $return .= $OUTPUT->box_end();
        // add a token to the table
        $return .= "<a href=\"".$tokenpageurl."&amp;action=create\">";
        $return .= get_string('add')."</a>";

        return highlight($query, $return);
    }
}||||||||    public function output_html($data, $query='') {
        global $CFG, $OUTPUT, $DB, $USER;

        // display strings
        $stroperation = get_string('operation', 'webservice');
        $strtoken = get_string('token', 'webservice');
        $strservice = get_string('service', 'webservice');
        $struser = get_string('user');
        $strcontext = get_string('context', 'webservice');
        $strvaliduntil = get_string('validuntil', 'webservice');
        $striprestriction = get_string('iprestriction', 'webservice');

        $return = $OUTPUT->box_start('generalbox webservicestokenui');

        $table = new html_table();
        $table->head  = array($strtoken, $struser, $strservice, $strcontext, $striprestriction, $strvaliduntil, $stroperation);
        $table->align = array('left', 'left', 'left', 'center', 'center', 'center', 'center');
        $table->width = '100%';
        $table->data  = array();

        $tokenpageurl = "$CFG->wwwroot/$CFG->admin/webservice/tokens.php?sesskey=" . sesskey();

        //TODO: in order to let the administrator delete obsolete token, split this request in multiple request or use LEFT JOIN

        //here retrieve token list (including linked users firstname/lastname and linked services name)
        $sql = "SELECT t.id, t.token, u.id AS userid, u.firstname, u.lastname, s.name, t.validuntil
                  FROM {external_tokens} t, {user} u, {external_services} s
                 WHERE t.creatorid=? AND t.tokentype = ? AND s.id = t.externalserviceid AND t.userid = u.id";
        $tokens = $DB->get_records_sql($sql, array($USER->id, EXTERNAL_TOKEN_PERMANENT));
        if (!empty($tokens)) {
            foreach ($tokens as $token) {
                //TODO: retrieve context

                $delete = "<a href=\"".$tokenpageurl."&amp;action=delete&amp;tokenid=".$token->id."\">";
                $delete .= get_string('delete')."</a>";

                if (empty($_SERVER['HTTPS'])) {
                    $token->token = get_string('activatehttps', 'webservice');
                }

                $validuntil = '';
                if (!empty($token->validuntil)) {
                    $validuntil = date("F j, Y"); //TODO: language support (look for moodle function)
                }

                $iprestriction = '';
                if (!empty($token->iprestriction)) {
                    $iprestriction = $token->iprestriction;
                }

                $userprofilurl = new moodle_url('/user/view.php?id='.$token->userid);
                $useratag = html_writer::start_tag('a', array('href' => $userprofilurl));
                $useratag .= $token->firstname." ".$token->lastname;
                $useratag .= html_writer::end_tag('a');
                $table->data[] = array($token->token, $useratag, $token->name, '', $iprestriction, $validuntil, $delete);
            }

            $return .= html_writer::table($table);
            $return .= get_string('httpswarning', 'webservice');
        } else {
            $return .= get_string('notoken', 'webservice');
        }

        $return .= $OUTPUT->box_end();
        // add a token to the table
        $return .= "<a href=\"".$tokenpageurl."&amp;action=create\">";
        $return .= get_string('add')."</a>";

        return highlight($query, $return);
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_ENCAPS_LIST
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_ENCAPS_LIST
                (AST_PROP
                    (AST_VAR))
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (NULL))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)))
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)))))