||||||||    public function __construct(moodle1_converter $converter, $plugintype, $pluginname) {

        parent::__construct($converter);
        $this->plugintype = $plugintype;
        $this->pluginname = $pluginname;
    }
}


/**
 * Base class for activity module handlers
 */
abstract class moodle1_mod_handler extends moodle1_plugin_handler {

    /** @var int module id */
    protected $moduleid;

    /**
     * Return the relative path to the XML file that
     * this step writes out to.  Example: course/course.xml
     *
     * @return string
     */
    public function get_xml_filename() {
        return "activities/{$this->pluginname}_{$this->moduleid}/module.xml";
    }
}


/**
 * Base class for activity module handlers
 */
abstract class moodle1_block_handler extends moodle1_handler {

}


/**
 * Process the root element of the backup file
 */
class moodle1_root_handler extends moodle1_handler {

    public function get_paths() {
        return array(new convert_path('root_element', '/MOODLE_BACKUP'));
    }

    public function process_root_element($data) {
        // no data available - nothing to do
    }

    /**
     * This is executed at the very start of the moodle.xml parsing
     */
    public function on_root_element_start() {

        // create ids temp table
        backup_controller_dbops::create_backup_ids_temp_table($this->converter->get_id());
    }

    /**
     * This is executed at the end of the moodle.xml parsing
     */
    public function on_root_element_end() {

        // drop the ids temp table
        backup_controller_dbops::drop_backup_ids_temp_table($this->converter->get_id());
    }

    /**
     * This handler does not actually produces any output
     */
    protected function get_xml_filename() {
        return null;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))