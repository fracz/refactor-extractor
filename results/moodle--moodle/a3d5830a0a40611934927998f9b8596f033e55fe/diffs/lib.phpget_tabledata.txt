    protected static function get_tabledata() {
        global $CFG;

        if (!isset(self::$tabledata)) {
            $data = file_get_contents("$CFG->dataroot/phpunit/tabledata.ser");
            self::$tabledata = unserialize($data);
        }

        if (!is_array(self::$tabledata)) {
            phpunit_bootstrap_error('Can not read dataroot/phpunit/tabledata.ser or invalid format!');
        }

        return self::$tabledata;
    }

    /**
     * Initialise CFG using data from fresh new install.
     * @static
     */
||||||||    protected static function get_tabledata() {
        global $CFG;

        if (!file_exists("$CFG->dataroot/phpunit/tabledata.ser")) {
            // not initialised yet
            return array();
        }

        if (!isset(self::$tabledata)) {
            $data = file_get_contents("$CFG->dataroot/phpunit/tabledata.ser");
            self::$tabledata = unserialize($data);
        }

        if (!is_array(self::$tabledata)) {
            phpunit_bootstrap_error('Can not read dataroot/phpunit/tabledata.ser or invalid format!');
        }

        return self::$tabledata;
    }

    /**
     * Reset all database tables to default values.
     * @static
     * @param bool $logchanges
     * @param null|PHPUnit_Framework_TestCase $caller
     * @return bool true if reset done, false if skipped
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ENCAPS_LIST
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_STATIC_PROP))))
            (
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_STATIC_PROP)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_ENCAPS_LIST
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_STATIC_PROP)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_ENCAPS_LIST
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_STATIC_PROP))))
            (
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_STATIC_PROP)))