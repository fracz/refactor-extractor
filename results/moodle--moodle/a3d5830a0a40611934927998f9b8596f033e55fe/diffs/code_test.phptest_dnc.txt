||||||||    public function test_dnc() {
        global $CFG;
        $regexp = '/\.(' . implode('|', $this->extensions_to_ignore) . ')$/';
        $this->badstrings = array();
        $this->badstrings['DONOT' . 'COMMIT'] = 'DONOT' . 'COMMIT'; // If we put the literal string here, it fails the test!
        $this->badstrings['trailing whitespace'] = "[\t ][\r\n]";
        foreach ($this->badstrings as $description => $ignored) {
            $this->allok[$description] = true;
        }
        $this->recurseFolders($CFG->dirroot, 'search_file_for_dnc', $regexp, true);
        $this->assertTrue(true); // executed only if no file failed the test
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR)))
        (AST_BINARY_OP
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_VAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST))))