    protected function generate_id() {
        // Generate an id that is not already used.
        do {
            $newid = get_class($this) . '-' . substr(sha1(microtime() * rand(0, 500)), 0, 6);
        } while (in_array($this->id, moodle_html_component::$generated_ids));
        $this->id = $newid;
        moodle_html_component::$generated_ids[] = $newid;
    }

    /**
     * Returns the array of component_actions.
     * @return array Component actions
     */
||||||||    protected function generate_id() {
        $this->id = uniqid(get_class($this));
    }

    /**
     * Returns the array of component_actions.
     * @return array Component actions
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR))))))
                            (SCALAR)
                            (SCALAR))))))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (NULL))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))))))