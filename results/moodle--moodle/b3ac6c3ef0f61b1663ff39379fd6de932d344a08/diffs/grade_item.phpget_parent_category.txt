||||||||    function get_parent_category() {

        if ($this->is_course_item()) {
            return false;

        } else if ($this->is_category_item()) {

            $category = $this->get_category();
            return $category->get_parent_category();

        } else {
            $category = grade_category::fetch(array('id'=>$this->categoryid));
            return $category;
        }
    }

    /**
    * Returns the grade_category object of associated category for category and course items
    * (referenced by iteminstance).
    *
    * @return mixed grade_category object if applicable, false otherwise
    */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (AST_RETURN
                                (AST_VAR)))))))))