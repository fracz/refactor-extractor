    function build_tree_filled() {
        if (empty($this->tree_array)) {
            debugging("You cannot build the tree_filled array until the tree_array is filled.");
            return false;
        }

        $this->tree_filled = array();

        // Detect any category that is now child-less and delete it
        foreach ($this->tree_array as $level1order => $level1) {
            if ($this->get_element_type($level1) == 'item' || $this->get_element_type($level1) == 'subcat') {
                $this->tree_filled[$level1order] = $this->get_filler($level1['object']);
            } else {
                $this->tree_filled[$level1order] = $level1;
            }
        }

        reset($this->tree_array);

        return true;
    }

    /**
     * Performs any delete, insert or update queries required, depending on the objects
     * stored in $this->need_update, need_insert and need_delete.
     * @return boolean Success or Failure
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_RETURN
        (AST_CONST)))||||||||