    function delete() {
        $result = parent::delete();
        if ($result) {
            $category = $this->get_category();
            if (!empty($category)) {
                return $category->force_regrading();
            }
        }
        return $result;
    }

    /**
     * In addition to perform parent::insert(), this calls the grade_item's category's (if applicable) force_regrading() method.
     * @return int ID of the new grade_item record.
     */
||||||||    function delete() {
        if ($category = $this->get_parent_category()) {
            $category->force_regrading();
        }

        return parent::delete();;
    }

    /**
     * In addition to perform parent::insert(), this calls the grade_item's category's (if applicable) force_regrading() method.
     * @return int ID of the new grade_item record.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_STATIC_CALL)))