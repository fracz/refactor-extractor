    function reset_first_sortorder() {
        if (count($this->tree_array) < 1) {
            debugging("Cannot reset the grade_tree's first_sortorder because the tree_array hasn't been loaded or is empty.");
            return false;
        }
        reset($this->tree_array);
        $this->first_sortorder = key($this->tree_array);

        return $this->first_sortorder;
    }

    /**
     * One at a time, re-assigns new sort orders for every element in the tree, recursively moving
     * down and across the tree.
     * @param int $starting_sortorder Used by recursion to "seed" the first element in each sub-tree
     * @param array $element A sub-tree given to each layer of recursion. If null, level 0 of recursion is assumed.
     * @param int $parentid The id of the element within which this iteration of the method is running. Used to reassign element parentage.
     * @return array A debugging array which shows the progression of variables throughout this method. This is very useful
     * to identify problems and implement new functionality.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))
            (
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||