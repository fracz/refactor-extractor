	function &getSuggestions($lang, $word) {
		$cmd = $this->_getCMD($lang);

        if (function_exists("mb_convert_encoding"))
            $word = mb_convert_encoding($word, "ISO-8859-1", mb_detect_encoding($word, "UTF-8"));
        else
            $word = utf8_encode($word);

		if ($fh = fopen($this->_tmpfile, "w")) {
			fwrite($fh, "!\n");
			fwrite($fh, "^$word\n");
			fclose($fh);
		} else
			$this->throwError("Error opening tmp file.");

		$data = shell_exec($cmd);
		@unlink($this->_tmpfile);

		$returnData = array();
		$dataArr = preg_split("/\n/", $data, -1, PREG_SPLIT_NO_EMPTY);

		foreach($dataArr as $dstr) {
			$matches = array();

			// Skip this line.
			if (strpos($dstr, "@") === 0)
				continue;

			preg_match("/\&[^:]+:(.*)/i", $dstr, $matches);

			if (!empty($matches[1])) {
				$words = array_slice(explode(',', $matches[1]), 0, 10);

				for ($i=0; $i<count($words); $i++)
					$words[$i] = trim($words[$i]);

				return $words;
			}
		}

		return array();
	}

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)
                (AST_UNARY_OP
                    (SCALAR))
                (AST_CONST))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (SCALAR)
                                    (SCALAR))))
                        (AST_FOR
                            (AST_EXPR_LIST
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_EXPR_LIST
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)))))
                            (AST_EXPR_LIST
                                (AST_POST_INC
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR)))))))
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_ARRAY)))||||||||