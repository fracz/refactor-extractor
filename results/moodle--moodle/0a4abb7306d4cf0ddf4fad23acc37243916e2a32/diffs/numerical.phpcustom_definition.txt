||||||||    public function custom_definition() {
        for ($i = 0; $i < $this->_customdata['lesson']->maxanswers; $i++) {
            $this->_form->addElement('header', 'answertitle'.$i, get_string('answer').' '.($i+1));
            $this->add_answer($i);
            $this->add_response($i);
            $this->add_jumpto($i);
            $this->add_score($i, null, ($i===0)?1:0);
        }
    }
}

class lesson_display_answer_form_numerical extends moodleform {

    public function definition() {
        global $USER, $OUTPUT;
        $mform = $this->_form;
        $contents = $this->_customdata['contents'];

        $mform->addElement('header', 'pageheader', $OUTPUT->box($contents, 'contents'));

        $options = new stdClass;
        $options->para = false;
        $options->noclean = true;

        $mform->addElement('hidden', 'id');
        $mform->setType('id', PARAM_INT);

        $mform->addElement('hidden', 'pageid');
        $mform->setType('pageid', PARAM_INT);

        $mform->addElement('text', 'answer', get_string('youranswer', 'lesson'), array('size'=>'50', 'maxlength'=>'200'));
        $mform->setType('answer', PARAM_FLOAT);

        $this->add_action_buttons(null, get_string("pleaseenteryouranswerinthebox", "lesson"));
    }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_CONST)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR)
                        (SCALAR)))))))