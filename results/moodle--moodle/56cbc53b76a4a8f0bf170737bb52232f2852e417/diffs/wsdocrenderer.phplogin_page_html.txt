    public function login_page_html($errormessage) {
        global $CFG, $OUTPUT;

        $htmlloginpage = "";
        $htmlloginpage .= "<table style=\"margin-left:auto; margin-right:auto;\"><tr><td>";
        $htmlloginpage .= get_string('wsdocumentationlogin', 'webservice');
        $htmlloginpage .= "<br/><br/><br/>";

//        echo get_string('error','webservice',$errormessage);
//        echo "<br/><br/>";

        //login form - we cannot use moodle form as we don't have sessionkey
        $form = new html_form();
        $form->url = new moodle_url($CFG->wwwroot.'/webservice/wsdoc.php', array()); // Required
        $form->button = new html_button();
        $form->button->text = get_string('wsdocumentation','webservice'); // Required
        $form->button->disabled = false;
        $form->button->title = get_string('wsdocumentation','webservice');
        $form->method = 'post';

        $field = new html_field();
        $field->name = 'wsusername';
        $field->value = get_string('wsusername', 'webservice');
        $field->style = 'width: 30em;';
        $contents = $OUTPUT->textfield($field);
        $contents .= "<br/><br/>";
        $field = new html_field();
        $field->name = 'wspassword';
        $field->value = get_string('wspassword', 'webservice');
        $field->style = 'width: 30em;';
        $contents .= $OUTPUT->textfield($field);
        $contents .= "<br/><br/>";

        $htmlloginpage .= $OUTPUT->form($form, $contents);


        $htmlloginpage .= "</td></tr></table>";
        return $htmlloginpage;

    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))||||||||