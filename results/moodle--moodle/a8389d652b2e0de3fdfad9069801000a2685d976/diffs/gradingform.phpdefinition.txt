    public function definition() {
        global $CFG;

        $mform = $this->_form;
        $this->strategy         = $this->_customdata['strategy'];
        $this->nocurrentdims    = $this->_customdata['nocurrentdims'];

        $mform->addElement('hidden', 'strategyname', $this->strategy->name);

        $this->definition_inner($mform);

        if (!empty($CFG->usetags)) {
            $mform->addElement('header', 'tagsheader', get_string('tags'));
            $mform->addElement('tags', 'tags', get_string('tags'));
        }

        $buttonarray = array();
        $buttonarray[] = &$mform->createElement('submit', 'saveandclose', get_string('saveandclose', 'workshop'));
        $buttonarray[] = &$mform->createElement('submit', 'saveandcontinue', get_string('saveandcontinue', 'workshop'));
        $buttonarray[] = &$mform->createElement('cancel');
        $mform->addGroup($buttonarray, 'buttonar', '', array(' '), false);
        $mform->closeHeaderBefore('buttonar');
    }


    /**
     * Add any strategy specific form fields.
     *
     * @param object $mform the form being built.
     */
||||||||    public function definition() {
        global $CFG;

        $mform = $this->_form;
        $this->strategy = $this->_customdata['strategy'];

        $mform->addElement('hidden', 'strategyname', $this->strategy->name);

        $this->definition_inner($mform);

        if (!empty($CFG->usetags)) {
            $mform->addElement('header', 'tagsheader', get_string('tags'));
            $mform->addElement('tags', 'tags', get_string('tags'));
        }

        $buttonarray = array();
        $buttonarray[] = &$mform->createElement('submit', 'saveandclose', get_string('saveandclose', 'workshop'));
        $buttonarray[] = &$mform->createElement('submit', 'saveandcontinue', get_string('saveandcontinue', 'workshop'));
        $buttonarray[] = &$mform->createElement('cancel');
        $mform->addGroup($buttonarray, 'buttonar', '', array(' '), false);
        $mform->closeHeaderBefore('buttonar');
    }


    /**
     * Add any strategy specific form fields.
     *
     * @param object $mform the form being built.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN_REF
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))