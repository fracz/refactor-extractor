    public function save_dimensions($data) {
        global $DB;

        if (!isset($data->strategyname) || ($data->strategyname != $this->name)) {
            // the workshop strategy has changed since the form was opened for editing
            throw new moodle_exception('strategyhaschanged', 'workshop');
        }

        $data = $this->cook_form_data($data);

        foreach ($data as $record) {
            if (empty($record->description)) {
                continue;
            }
            if (empty($record->id)) {
                // new field
                $record->id = $DB->insert_record('workshop_forms_' . $this->name, $record);
            } else {
                // exiting field
                $DB->update_record('workshop_forms_' . $this->name, $record);
            }
        }
    }


    /**
     * The default implementation transposes the returned structure
     *
     * It automatically adds some columns into every record.
     * The sorting is done by the order of the returned array and starts with 1.
     *
     * @param object $raw
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_VAR)))))))))||||||||