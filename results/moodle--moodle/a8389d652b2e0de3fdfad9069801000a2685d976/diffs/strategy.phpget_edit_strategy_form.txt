    public function get_edit_strategy_form($actionurl, $nocurrentdims=0) {
        global $CFG;    // needed because the included files use it

        $strategyform = dirname(__FILE__) . '/' . $this->name . '/gradingform.php';
        if (file_exists($strategyform)) {
            require_once($strategyform);
        } else {
            throw new moodle_exception('errloadingstrategyform', 'workshop');
        }
        $classname = 'workshop_edit_' . $this->name . '_strategy_form';

        $customdata = new stdClass;
        $customdata = array(
                        'strategy'      => $this,
                        'nocurrentdims' => $nocurrentdims,

                        );
        $attributes = array('class' => 'editstrategyform');

        return new $classname($actionurl, $customdata, 'post', '', $attributes);

    }


    /**
     * Load the assessment dimensions from database
     *
     * This base method just fetches all relevant records from the main strategy form table.
     *
     * @uses $DB
     * @access public
     * @return void
     */
||||||||    public function get_edit_strategy_form($actionurl=null) {
        global $CFG;    // needed because the included files use it

        $strategyform = dirname(__FILE__) . '/' . $this->name . '/gradingform.php';
        if (file_exists($strategyform)) {
            require_once($strategyform);
        } else {
            throw new moodle_exception('errloadingstrategyform', 'workshop');
        }
        $classname = 'workshop_edit_' . $this->name . '_strategy_form';

        $customdata = new stdClass;
        $customdata = array(
                        'strategy'      => $this,
                        );
        $attributes = array('class' => 'editstrategyform');

        return new $classname($actionurl, $customdata, 'post', '', $attributes);

    }


    /**
     * By default, the number of loaded dimensions is set by load_grading_form()
     *
     * @access public
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_MAGIC_CONST)))
                    (SCALAR))
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (AST_VAR)))))