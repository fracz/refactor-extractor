    public function set_data($formdata) {

        if (is_array($formdata->dimensions) && !empty($formdata->dimensions)) {
            // $formdata->dimensions must be array of dimension records loaded from database
            $key = 0;
            $default_values = array();
            foreach ($formdata->dimensions as $dimension) {
                foreach ($this->strategy->map_dimension_fieldnames() as $fielddbname => $fieldformname) {
                    $default_values[$fieldformname . '[' . $key . ']'] = $dimension->$fielddbname;
                }
                $key++;
            }
            $formdata = (object)((array)$formdata + $default_values);
        }
        parent::set_data($formdata);
    }


}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_VAR))
                                            (SCALAR)))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (AST_POST_INC
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_BINARY_OP
                            (AST_CAST
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_STATIC_CALL
        (
            (AST_VAR))))||||||||