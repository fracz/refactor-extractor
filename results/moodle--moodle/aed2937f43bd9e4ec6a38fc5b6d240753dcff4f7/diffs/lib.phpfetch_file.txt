    public static function fetch_file($token) {
        global $DB, $MNET_REMOTE_CLIENT;;
        try {
            $transferid = $DB->get_field('portfolio_mahara_queue', 'transferid', array('token' => $token));
            $exporter = portfolio_exporter::rewaken_object($transferid);
        } catch (portfolio_exception $e) {
            exit(mnet_server_fault(8010, 'invalid transfer id'));
        }
        if ($exporter->get('instance')->get_config('mnethostid') != $MNET_REMOTE_CLIENT->id) {
            exit(mnet_server_fault(8011, "remote host didn't match saved host"));
        }
        global $CFG;
        try {
            $i = $exporter->get('instance');
            $f = $i->get('file');
            if (empty($f)) {
                exit(mnet_server_fault(8012, 'could not find file in transfer object - weird error'));
            }
            $c = $f->get_content();
            $contents = base64_encode($c);
        } catch (Exception $e) {
            exit(mnet_server_fault(8013, 'could not get file to send'));
        }
        $exporter->process_stage_cleanup(true);
        return $contents;
    }

||||||||    public static function fetch_file($token) {
        global $DB, $MNET_REMOTE_CLIENT;;
        try {
            if (!$transferid = $DB->get_field('portfolio_mahara_queue', 'transferid', array('token' => $token))) {
                exit(mnet_server_fault(8009, 'could not find token'));
            }
            $exporter = portfolio_exporter::rewaken_object($transferid);
        } catch (portfolio_exception $e) {
            exit(mnet_server_fault(8010, 'invalid transfer id'));
        }
        if ($exporter->get('instance')->get_config('mnethostid') != $MNET_REMOTE_CLIENT->id) {
            exit(mnet_server_fault(8011, "remote host didn't match saved host"));
        }
        global $CFG;
        try {
            $i = $exporter->get('instance');
            $f = $i->get('file');
            if (empty($f)) {
                exit(mnet_server_fault(8012, 'could not find file in transfer object - weird error'));
            }
            $c = $f->get_content();
            $contents = base64_encode($c);
        } catch (Exception $e) {
            exit(mnet_server_fault(8013, 'could not get file to send'));
        }
        $exporter->process_stage_cleanup(true);
        return $contents;
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_EXIT
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_EXIT
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_GLOBAL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_EXIT
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_EXIT
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (
                        (AST_EXIT
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_EXIT
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_EXIT
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))))))
    (AST_GLOBAL
        (AST_VAR))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_EXIT
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_EXIT
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_RETURN
        (AST_VAR)))