||||||||    public function test_read_table() {
        global $DB, $CFG;

        $this->resetAfterTest();

        set_config('dbencoding', 'utf-8', 'enrol_database');

        set_config('dbhost', $CFG->dbhost, 'enrol_database');
        set_config('dbuser', $CFG->dbuser, 'enrol_database');
        set_config('dbpass', $CFG->dbpass, 'enrol_database');
        set_config('dbname', $CFG->dbname, 'enrol_database');

        if (!empty($CFG->dboptions['dbport'])) {
            set_config('dbhost', $CFG->dbhost.':'.$CFG->dboptions['dbport'], 'enrol_database');
        }

        switch (get_class($DB)) {
            case 'mssql_native_moodle_database':
                set_config('dbtype', 'mssql_n', 'enrol_database');
                set_config('dbsybasequoting', '1', 'enrol_database');
                break;

            case 'mysqli_native_moodle_database':
                set_config('dbtype', 'mysqli', 'enrol_database');
                set_config('dbsetupsql', 'SET NAMES \'UTF-8\'', 'enrol_database');
                set_config('dbsybasequoting', '0', 'enrol_database');
                if (!empty($CFG->dboptions['dbsocket'])) {
                    set_config('dbtype', 'mysqli://'.rawurlencode($CFG->dbuser).':'.rawurlencode($CFG->dbpass).'@'.rawurlencode($CFG->dbhost).'/'.rawurlencode($CFG->dbname).'?socket='.rawurlencode($CFG->dboptions['dbsocket']), 'enrol_database');
                }
                break;

            case 'oci_native_moodle_database':
                set_config('dbtype', 'oci8po', 'enrol_database');
                set_config('dbsybasequoting', '1', 'enrol_database');
                break;

            case 'pgsql_native_moodle_database':
                set_config('dbtype', 'postgres7', 'enrol_database');
                set_config('dbsetupsql', 'SET NAMES \'UTF-8\'', 'enrol_database');
                set_config('dbsybasequoting', '0', 'enrol_database');
                if (!empty($CFG->dboptions['dbsocket']) and ($CFG->dbhost === 'localhost' or $CFG->dbhost === '127.0.0.1')) {
                    set_config('dbhost', $CFG->dboptions['dbsocket'], 'enrol_database');
                }
                break;

            case 'sqlsrv_native_moodle_database':
                set_config('dbtype', 'sqlsrv', 'enrol_database');
                set_config('dbsybasequoting', '1', 'enrol_database');
                break;

            default:
                $this->markTestSkipped('Unknown database driver.');
                return;
        }

        $plugin = new enrol_database_tester();

        // can we connect?
        $extdb = $plugin->test_get_db_init();
        $this->assertNotEmpty($extdb);

        // let's fetch one row
        $sql = $plugin->test_db_get_sql($CFG->prefix.'user', array('id'=>2), array('id', 'username'));
        $rs = $extdb->Execute($sql);
        $this->assertEmpty($rs->EOF);
        $row = $rs->FetchRow();
        $this->assertEquals('2', $row['id']);
        $this->assertEquals('admin', $row['username']);
        $this->assertEmpty($rs->FetchRow());
        $rs->Close();

        $extdb->Close();
    }
}


class enrol_database_tester extends enrol_database_plugin {
    public function test_get_db_init() {
        return self::db_init();
    }

    public function test_db_get_sql($table, array $conditions, array $fields, $distinct = false, $sort = "") {
        return self::db_get_sql($table, $conditions, $fields, $distinct, $sort);
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR))))))
    (AST_SWITCH
        (AST_CALL
            (
                (AST_VAR)))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (SCALAR)
                                                                            (AST_CALL
                                                                                (
                                                                                    (AST_PROP
                                                                                        (AST_VAR)))))
                                                                        (SCALAR))
                                                                    (AST_CALL
                                                                        (
                                                                            (AST_PROP
                                                                                (AST_VAR)))))
                                                                (SCALAR))
                                                            (AST_CALL
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR)))))
                                                        (SCALAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR)))))
                                                (SCALAR))
                                            (AST_CALL
                                                (
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_EMPTY
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_RETURN
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)))