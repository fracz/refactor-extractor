||||||||    function addAdvancedStatusElement($headerName, $showmore=false){
        // Add extra hidden element to store advanced items state for each section
        if ($this->getElementType('mform_showmore_' . $headerName) === false) {
            // see if we the form has been submitted already
            $formshowmore = optional_param('mform_showmore_' . $headerName, -1, PARAM_INT);
            if (!$showmore && $formshowmore != -1) {
                // override showmore state with the form variable
                $showmore = $formshowmore;
            }
            // create the form element for storing advanced items state
            $this->addElement('hidden', 'mform_showmore_' . $headerName);
            $this->setType('mform_showmore_' . $headerName, PARAM_INT);
            $this->setConstant('mform_showmore_' . $headerName, (int)$showmore);
        }
    }

    /**
     * Use this method to indicate that the form will not be using shortforms.
     *
     * @param boolean $disable default true, controls if the shortforms are disabled.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (AST_UNARY_OP
                                (SCALAR))
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (SCALAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_CAST
                            (AST_VAR))))))))