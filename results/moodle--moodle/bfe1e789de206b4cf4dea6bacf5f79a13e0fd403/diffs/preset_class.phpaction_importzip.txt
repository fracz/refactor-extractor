||||||||    function action_importzip($params)
    {
        global $CFG, $USER;
        $course = $params['course'];
        if (!data_submitted() or !confirm_sesskey()) {
            print_error('invalid_request');
        }

        if (!make_upload_directory('temp/data/'.$USER->id)) {
            print_error('errorcreatingdirectory', null, null, 'temp/data/' . $USER->id);
        }

        $this->file = $CFG->dataroot.'/temp/data/'.$USER->id;
        $this->directory = $this->file;
        $this->user_id = $USER->id;
        $this->clean_files($this->file);

        if (!unzip_file($CFG->dataroot."/$USER->id/$file", $this->file, false)) {
        }

        $html .= $this->get_import_html();
        $html .= print_footer($course, null, true);
        echo $html;
        exit();
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL))
                (AST_UNARY_OP
                    (AST_CALL)))
            (
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_CONST)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR)
                                (AST_VAR)))
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST)
                (AST_CONST))))
    (AST_ECHO
        (AST_VAR))
    (AST_EXIT
        (NULL)))