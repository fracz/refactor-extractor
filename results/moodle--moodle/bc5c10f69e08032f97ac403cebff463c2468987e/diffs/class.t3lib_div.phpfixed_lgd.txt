	public static function fixed_lgd($string, $origChars, $preStr = '...') {
		self::logDeprecatedFunction();

		$chars = abs($origChars);
		if ($chars >= 4) {
			if (strlen($string) > $chars) {
				return $origChars < 0 ?
						$preStr . trim(substr($string, -($chars - 3))) :
						trim(substr($string, 0, $chars - 3)) . $preStr;
			}
		}
		return $string;
	}

	/**
	 * Truncates string.
	 * Returns a new string of max. $chars length.
	 * If the string is longer, it will be truncated and prepended with '...'.
	 * This works like fixed_lgd(), but is truncated in the start of the string instead of the end
	 * Usage: 6
	 *
	 * @param	string		string to truncate
	 * @param	integer		must be an integer of at least 4
	 * @return	string		new string
	 * @deprecated since TYPO3 4.1, will be removed in TYPO3 4.6 - Use t3lib_div::fixed_lgd_cs() instead (with negative input value for $chars)
	 * @see fixed_lgd()
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_UNARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_VAR)
                                                                (SCALAR))))))))
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))))))
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_VAR)))||||||||