||||||||	protected static function generateRandomBytesFallback($bytesToReturn) {
		$bytes = '';
			// We initialize with somewhat random.
		$randomState = $GLOBALS['TYPO3_CONF_VARS']['SYS']['encryptionKey'] . base_convert(memory_get_usage() % pow(10, 6), 10, 2) . microtime() . uniqid('') . getmypid();
		while (!isset($bytes{$bytesToReturn - 1})) {
			$randomState = sha1(microtime() . mt_rand() . $randomState);
			$bytes .= sha1(mt_rand() . $randomState, TRUE);
		}
		return $bytes;
	}

	/**
	 * Returns a hex representation of a random byte string.
	 *
	 * @param integer $count Number of hex characters to return
	 * @return string Random Bytes
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_CALL)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR))))
                                (SCALAR)
                                (SCALAR))))
                    (AST_CALL))
                (AST_CALL
                    (
                        (SCALAR))))
            (AST_CALL)))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL)
                                (AST_CALL))
                            (AST_VAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_VAR))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))