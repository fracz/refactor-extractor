	public static function deprecationLog($msg) {
		if (!$GLOBALS['TYPO3_CONF_VARS']['SYS']['enableDeprecationLog']) {
			return;
		}

		$log = $GLOBALS['TYPO3_CONF_VARS']['SYS']['enableDeprecationLog'];
		$date = date($GLOBALS['TYPO3_CONF_VARS']['SYS']['ddmmyy'] . ' ' . $GLOBALS['TYPO3_CONF_VARS']['SYS']['hhmm'] . ': ');

			// legacy values (no strict comparison, $log can be boolean, string or int)
		if ($log === TRUE || $log == '1') {
			$log = 'file';
		}

		if (stripos($log, 'file') !== FALSE) {
				// write a longer message to the deprecation log
			$destination = self::getDeprecationLogFileName();
			$file = @fopen($destination, 'a');
			if ($file) {
				flock($file, LOCK_EX); // try locking, but ignore if not available (eg. on NFS and FAT)
				@fwrite($file, $date . $msg . LF);
				flock($file, LOCK_UN); // release the lock
				@fclose($file);
				self::fixPermissions($destination);
			}
		}

		if (stripos($log, 'devlog') !== FALSE) {
				// copy message also to the developer log
			self::devLog($msg, 'Core', self::SYSLOG_SEVERITY_WARNING);
		}

			// do not use console in login screen
		if (stripos($log, 'console') !== FALSE && isset($GLOBALS['BE_USER']->user['uid'])) {
			t3lib_utility_Debug::debug($msg, $date, 'Deprecation Log');
		}
	}

	/**
	 * Gets the absolute path to the deprecation log file.
	 *
	 * @return	string	absolute path to the deprecation log file
	 */
||||||||	public static function deprecationLog($msg) {
		if (!$GLOBALS['TYPO3_CONF_VARS']['SYS']['enableDeprecationLog']) {
			return;
		}

		$log = $GLOBALS['TYPO3_CONF_VARS']['SYS']['enableDeprecationLog'];
		$date = date($GLOBALS['TYPO3_CONF_VARS']['SYS']['ddmmyy'] . ' ' . $GLOBALS['TYPO3_CONF_VARS']['SYS']['hhmm'] . ': ');

			// legacy values (no strict comparison, $log can be boolean, string or int)
		if ($log === TRUE || $log == '1') {
			$log = 'file';
		}

		if (stripos($log, 'file') !== FALSE) {
				// In case lock is acquired before autoloader was defined:
			if (class_exists('t3lib_lock') === FALSE) {
				require_once PATH_t3lib . 'class.t3lib_lock.php';
			}
				// write a longer message to the deprecation log
			$destination = self::getDeprecationLogFileName();
			$lockObject = t3lib_div::makeInstance('t3lib_lock', $destination, $GLOBALS['TYPO3_CONF_VARS']['SYS']['lockingMode']);
			/** @var t3lib_lock $lockObject */
			$lockObject->setEnableLogging(FALSE);
			$lockObject->acquire();
			$file = @fopen($destination, 'a');
			if ($file) {
				@fwrite($file, $date . $msg . LF);
				@fclose($file);
				self::fixPermissions($destination);
			}
			$lockObject->release();
		}

		if (stripos($log, 'devlog') !== FALSE) {
				// copy message also to the developer log
			self::devLog($msg, 'Core', self::SYSLOG_SEVERITY_WARNING);
		}

			// do not use console in login screen
		if (stripos($log, 'console') !== FALSE && isset($GLOBALS['BE_USER']->user['uid'])) {
			t3lib_utility_Debug::debug($msg, $date, 'Deprecation Log');
		}
	}

	/**
	 * Gets the absolute path to the deprecation log file.
	 *
	 * @return string absolute path to the deprecation log file
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_DIM
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_CONST)))))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST))
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (AST_DIM
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_CONST))
                        (
                            (AST_INCLUDE_OR_EVAL
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_CONST)))))
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (AST_CONST))
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (SCALAR)))))))