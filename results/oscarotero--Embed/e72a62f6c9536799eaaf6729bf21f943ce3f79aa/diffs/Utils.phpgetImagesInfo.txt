    public static function getImagesInfo(array $images)
    {
        $finfo = finfo_open(FILEINFO_MIME_TYPE);
        $connections = curl_multi_init();
        $imageData = array();

        foreach ($images as $url) {
            $imageData[$url] = new ImageData($url, $finfo);

            curl_multi_add_handle($connections, $imageData[$url]->getConnection());
        }

        do {
            $return = curl_multi_exec($connections, $active);
        } while ($return === CURLM_CALL_MULTI_PERFORM);

        while ($active && $return === CURLM_OK) {
            if (curl_multi_select($connections) !== -1) {
                do {
                    $return = curl_multi_exec($connections, $active);
                } while ($return === CURLM_CALL_MULTI_PERFORM);
            } else {
                break;
            }
        }

        $info = array();

        foreach ($imageData as $url => $image) {
            curl_multi_remove_handle($connections, $image->getConnection());

            if (($data = $image->getData())) {
                $info[$url] = $data;
            }
        }

        finfo_close($finfo);
        curl_multi_close($connections);

        return $info;
    }

    /**
     * Creates an html element
     *
     * @param string $name  Element name
     * @param array  $attrs Element attributes
     *
     * @return string
     */
||||||||    public static function getImagesInfo(array $images)
    {
        $finfo = finfo_open(FILEINFO_MIME_TYPE);
        $imageData = array();
        $connections = curl_multi_init();

        foreach ($images as $url) {
            $imageData[$url] = new ImageInfo($url, $finfo);

            curl_multi_add_handle($connections, $imageData[$url]->getConnection());
        }

        do {
            $return = curl_multi_exec($connections, $active);
        } while ($return === CURLM_CALL_MULTI_PERFORM);

        while ($active && $return === CURLM_OK) {
            if (curl_multi_select($connections) === -1) {
                usleep(100);
            }

            do {
                $return = curl_multi_exec($connections, $active);
            } while ($return === CURLM_CALL_MULTI_PERFORM);
        }

        $info = array();

        foreach ($imageData as $url => $image) {
            curl_multi_remove_handle($connections, $image->getConnection());

            if (($data = $image->getData())) {
                $info[$url] = $data;
            }
        }

        finfo_close($finfo);
        curl_multi_close($connections);

        return $info;
    }

    /**
     * Creates an html element
     *
     * @param string $name  Element name
     * @param array  $attrs Element attributes
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_NEW
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CONST)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_UNARY_OP
                            (SCALAR)))
                    (
                        (AST_DO_WHILE
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_BREAK
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_NEW
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_DO_WHILE
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_BINARY_OP
            (AST_VAR)
            (AST_CONST)))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_UNARY_OP
                            (SCALAR)))
                    (
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_DO_WHILE
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))