||||||||    protected static function getEndPointFromDom(\DOMDocument $html)
    {
        foreach (Utils::getLinks($html) as $link) {
            list($rel, $href, $element) = $link;

            if (empty($href)) {
                continue;
            }

            if ($rel === 'alternate') {
                switch (strtolower($element->getAttribute('type'))) {
                    case 'application/json+oembed':
                    case 'application/xml+oembed':
                    case 'text/json+oembed':
                    case 'text/xml+oembed':
                        return $href;
                }
            }
        }
    }

    /**
     * Returns the oembed link from the request
     *
     * @param Request $request
     * @param array   $options
     *
     * @return array|null
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_EMPTY
                        (AST_VAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_SWITCH
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))
                            (AST_SWITCH_LIST
                                (AST_SWITCH_CASE
                                    (SCALAR))
                                (AST_SWITCH_CASE
                                    (SCALAR))
                                (AST_SWITCH_CASE
                                    (SCALAR))
                                (AST_SWITCH_CASE
                                    (SCALAR)
                                    (
                                        (AST_RETURN
                                            (AST_VAR))))))))))))