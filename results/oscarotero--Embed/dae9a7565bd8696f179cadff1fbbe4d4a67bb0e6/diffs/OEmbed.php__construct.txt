    public function __construct(Request $request)
    {
        $format = (($request->url->getExtension() === 'xml') || ($request->url->getParameter('format') === 'xml')) ? 'xml' : 'json';

        switch ($format) {
            case 'json':
                if (($parameters = $request->getJsonContent()) && empty($parameters['Error'])) {
                    $this->set($parameters);
                }
                break;

            case 'xml':
                if ($parameters = $request->getXmlContent()) {
                    foreach ($parameters as $element) {
                        $this->set($element->getName(), (string) $element);
                    }
                }
                break;

            default:
                throw new \Exception("No valid format specified");
        }
    }

    /**
     * Gets the title
     *
     * @return string|null
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_FOREACH
                                    (AST_VAR)
                                    (AST_VAR)
                                    (NULL)
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (AST_CAST
                                                    (AST_VAR)))))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (SCALAR)))))))))||||||||