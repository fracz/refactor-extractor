    public function testShouldSendForgotPassword()
    {
        // Should send an email once
        ConfideUser::$app['mailer'] = m::mock( 'Mail' );
        ConfideUser::$app['mailer']->shouldReceive('send')
            ->andReturn( null )
            ->atLeast(1);

        $this->populateUser();

        $old_password = $this->confide_user->password;

        $this->assertTrue( $this->confide_user->forgotPassword() );
    }

||||||||    public function testShouldSendForgotPassword()
    {
        // Should call forgotPassword of the repository
        ConfideUser::$app['confide.repository'] = m::mock( 'ConfideRepository' );
        ConfideUser::$app['confide.repository']->shouldReceive('forgotPassword')
            ->with( $this->confide_user )
            ->andReturn( true )
            ->once();

        // Should send an email once
        ConfideUser::$app['mailer'] = m::mock( 'Mail' );
        ConfideUser::$app['mailer']->shouldReceive('send')
            ->andReturn( null )
            ->atLeast(1);

        $this->populateUser();

        $old_password = $this->confide_user->password;

        $this->assertTrue( $this->confide_user->forgotPassword() );
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (
                    (SCALAR)))
            (
                (AST_CONST)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))
                    (
                        (SCALAR)))
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR))
                (
                    (SCALAR)))
            (
                (AST_CONST)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))