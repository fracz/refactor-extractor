||||||||    public static function getHeader($header, $key)
    {
        if (preg_match('/^' . preg_quote($key, '/') . ': (\V*)/mi', $header, $match)) {
            return $match[1];
        }
        return null;
    }
}

class CurlRequest
{
    public $url;
    public $etag;
    public $callback;

    public function __construct($url, $etag, $callback)
    {
        $this->url = $url;
        $this->etag = $etag;
        $this->callback = $callback;
    }
}

class CurlResponse
{
    /** @var CurlRequest */
    public $request;
    public $status;
    public $contentType;
    public $etag;
    public $link;
    public $content;
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))