||||||||    private static function addSystemCommands()
    {
        $cmds = array(
            'delete cache' => 'Delete GitHub Cache',
            'logout' => 'Log out this workflow',
            'update' => 'Update this Alfred workflow'
        );
        if (Workflow::getConfig('autoupdate', true)) {
            $cmds['deactivate autoupdate'] = 'Deactivate auto updating this Alfred Workflow';
        } else {
            $cmds['activate autoupdate'] = 'Activate auto updating this Alfred Workflow';
        }
        foreach ($cmds as $cmd => $desc) {
            Workflow::addItem(Item::create()
                ->prefix('gh ')
                ->title('> ' . $cmd)
                ->subtitle($desc)
                ->icon($cmd)
                ->arg('> ' . str_replace(' ', '-', $cmd))
            );
        }
    }
}

print Search::run(ltrim($argv[1]));||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_CONST)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))))
                                (
                                    (AST_VAR)))
                            (
                                (AST_VAR)))
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_VAR)))))))))))