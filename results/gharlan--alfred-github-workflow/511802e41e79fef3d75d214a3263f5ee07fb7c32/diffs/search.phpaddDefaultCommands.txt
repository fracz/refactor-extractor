||||||||    private static function addDefaultCommands($isUser, $isRepo, $queryUser)
    {
        $users = array();
        $repos = array();

        $curl = new Curl();
        if (!$isUser) {
            $getRepos = function ($url, $prio) use ($curl, &$repos) {
                Workflow::requestGithubApi($url, $curl, function ($urlRepos) use (&$repos, $prio) {
                    foreach ($urlRepos as $repo) {
                        $repo->prio = $prio;
                        $repos[$repo->id] = $repo;
                    }
                });
            };
            if ($isRepo) {
                $urls = array('/users/' . $queryUser . '/repos', '/orgs/' . $queryUser . '/repos');
            } else {
                Workflow::requestGithubApi('/user/orgs', $curl, function ($orgs) use ($getRepos) {
                    foreach ($orgs as $org) {
                        $getRepos('/orgs/' . $org->login . '/repos', 0);
                    }
                });
                $urls = array('/user/starred', '/user/subscriptions', '/user/repos');
            }
            foreach ($urls as $prio => $url) {
                $getRepos($url, $prio + 1);
            }
        }
        if (!$isRepo) {
            Workflow::requestGithubApi('/user/following', $curl, function ($urlUsers) use (&$users) {
                $users = $urlUsers;
            });
        }
        $curl->execute();

        foreach ($repos as $repo) {
            $icon = 'repo';
            if ($repo->fork) {
                $icon = 'fork';
            } elseif ($repo->mirror_url) {
                $icon = 'mirror';
            }
            if ($repo->private) {
                $icon = 'private-' . $icon;
            }
            Workflow::addItem(Item::create()
                ->title($repo->full_name . ' ')
                ->subtitle($repo->description)
                ->icon($icon)
                ->arg('https://github.com/' . $repo->full_name)
                ->prio(30 + $repo->prio)
            );
        }

        foreach ($users as $user) {
            Workflow::addItem(Item::create()
                ->prefix('@', false)
                ->title($user->login . ' ')
                ->subtitle($user->type)
                ->arg($user->html_url)
                ->icon(lcfirst($user->type))
                ->prio(20)
            );
        }
        Workflow::addItem(Item::create()
            ->title('my ')
            ->subtitle('Dashboard, settings, and more')
            ->prio(10)
            ->valid(false)
        );
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_CLOSURE
                                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR)
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_FOREACH
                                                (AST_VAR)
                                                (AST_VAR)
                                                (NULL)
                                                (
                                                    (AST_ASSIGN
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR))
                                                    (AST_ASSIGN
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (AST_PROP
                                                                (AST_VAR)))
                                                        (AST_VAR)))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_CLOSURE
                                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_FOREACH
                                                (AST_VAR)
                                                (AST_VAR)
                                                (NULL)
                                                (
                                                    (AST_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (SCALAR)
                                                                    (AST_PROP
                                                                        (AST_VAR)))
                                                                (SCALAR))
                                                            (SCALAR)))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (NULL)))))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))))
            (AST_STATIC_CALL
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_VAR)))
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_STATIC_CALL
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_STATIC_CALL)
                                            (
                                                (SCALAR)
                                                (AST_CONST)))
                                        (
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (
                    (AST_CONST))))))