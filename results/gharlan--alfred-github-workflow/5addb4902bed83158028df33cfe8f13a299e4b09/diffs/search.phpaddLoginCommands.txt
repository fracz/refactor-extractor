    private static function addLoginCommands()
    {
        Workflow::removeAccessToken();
        $token = null;
        if (count(self::$parts) > 1 && self::$parts[0] == '>' && self::$parts[1] == 'login' && isset(self::$parts[2])) {
            $token = self::$parts[2];
        }
        if (!$token) {
            Workflow::addItem(Item::create()
                ->title('> login')
                ->subtitle('Generate OAuth access token')
                ->arg('> login')
                ->randomUid()
            , false);
        }
        Workflow::addItem(Item::create()
            ->title('> login ' . $token)
            ->subtitle('Save OAuth access token')
            ->arg('> login ' . $token)
            ->valid((bool) $token, '<access_token>')
            ->randomUid()
        , false);
        if (!$token) {
            Workflow::addItem(Item::create()
                ->title('> enterprise reset')
                ->subtitle('Reset the GitHub Enterprise URL')
                ->arg('> enterprise-reset')
                ->randomUid()
            , false);
        }
    }

||||||||    private static function addLoginCommands()
    {
        Workflow::removeAccessToken();
        $token = null;
        if (count(self::$parts) > 1 && self::$parts[0] == '>' && self::$parts[1] == 'login' && isset(self::$parts[2])) {
            $token = self::$parts[2];
        }
        if (!$token && !self::$enterprise) {
            Workflow::addItem(Item::create()
                ->title('> login')
                ->subtitle('Generate OAuth access token')
                ->arg('> login')
                ->randomUid()
            , false);
        }
        Workflow::addItem(Item::create()
            ->title('> login ' . $token)
            ->subtitle('Save access token')
            ->arg('> login ' . $token)
            ->valid((bool) $token, '<access_token>')
            ->randomUid()
        , false);
        if (!$token && self::$enterprise) {
            Workflow::addItem(Item::create()
                ->title('> generate token')
                ->subtitle('Generate a new access token')
                ->arg('/settings/applications')
                ->randomUid()
            , false);
            Workflow::addItem(Item::create()
                ->title('> enterprise reset')
                ->subtitle('Reset the GitHub Enterprise URL')
                ->arg('> enterprise-reset')
                ->randomUid()
            , false);
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (SCALAR)))
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR))))
                        (AST_CONST))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (SCALAR)))
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))
                    (
                        (AST_CAST
                            (AST_VAR))
                        (SCALAR))))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR))))
                        (AST_CONST)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_STATIC_PROP)
                                (SCALAR))
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (SCALAR)))
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_STATIC_PROP)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR))))
                        (AST_CONST))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (SCALAR)))
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))
                    (
                        (AST_CAST
                            (AST_VAR))
                        (SCALAR))))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_STATIC_PROP))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR))))
                        (AST_CONST)))
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR))))
                        (AST_CONST)))))))