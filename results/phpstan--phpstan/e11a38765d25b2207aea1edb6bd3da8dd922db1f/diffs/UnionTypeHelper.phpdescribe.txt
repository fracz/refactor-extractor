	public static function describe(array $types, bool $isNullable): string
	{
		$description = implode('|', array_map(function (Type $type): string {
			return $type->describe();
		}, $types));

		if ($isNullable) {
			$description .= '|null';
		}

		return $description;
	}

	/**
	 * @param \PHPStan\Type\Type[] $types
	 * @return bool
	 */
||||||||	public static function describe(array $types): string
	{
		return implode('|', array_map(function (Type $type): string {
			return $type->describe();
		}, $types));
	}

	/**
	 * @param \PHPStan\Type\Type[] $types
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (AST_VAR)))))))