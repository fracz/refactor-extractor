    public function setLimit($limit = -1)
    {
        if (false === filter_var($limit, FILTER_VALIDATE_INT, ['options' => ['min_range' => -1]])) {
            throw new InvalidArgumentException('the limit must an integer greater or equals to -1');
        }
        $this->iterator_limit = $limit;

        return $this;
    }

    /**
     * Set an Iterator sorting callable function
     *
     * @param callable $callable
     *
     * @return $this
     */
||||||||    public function setLimit($limit = -1)
    {
        $this->iterator_limit = $this->filterInteger($limit, -1, 'the limit must an integer greater or equals to -1');

        return $this;
    }

    /**
     * Set an Iterator sorting callable function
     *
     * @param callable $callable
     *
     * @return $this
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_UNARY_OP
                                            (SCALAR))
                                        (SCALAR)))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))