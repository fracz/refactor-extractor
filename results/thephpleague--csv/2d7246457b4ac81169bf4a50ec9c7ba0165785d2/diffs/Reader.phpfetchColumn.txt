    public function fetchColumn($column_index = 0, callable $callable = null)
    {
        if (false === filter_var($column_index, FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]])) {
            throw new InvalidArgumentException(
                'the column index must be a positive integer or 0'
            );
        }

        $iterator = $this->query($callable);
        $iterator = new Iterators\MapIterator($iterator, function ($row) use ($column_index) {
            if (! array_key_exists($column_index, $row)) {
                return null;
            }

            return $row[$column_index];
        });

        return iterator_to_array($iterator, false);
    }

    /**
     * Return a single row from the CSV
     *
     * @param int $offset
     *
     * @throws \InvalidArgumentException If the $offset is not a valid Integer
     *
     * @return array
     */
||||||||    public function fetchColumn($column_index = 0, callable $callable = null)
    {
        if (false === filter_var($column_index, FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]])) {
            throw new InvalidArgumentException(
                'the column index must be a positive integer or 0'
            );
        }

        $iterator = $this->query($callable);
        $iterator = new CallbackFilterIterator($iterator, function ($row) use ($column_index) {
            return array_key_exists($column_index, $row);
        });
        $iterator = new Iterators\MapIterator($iterator, function ($row) use ($column_index) {
            return $row[$column_index];
        });

        return iterator_to_array($iterator, false);
    }

    /**
     * Return a single row from the CSV
     *
     * @param int $offset
     *
     * @throws \InvalidArgumentException If the $offset is not a valid Integer
     *
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))
                                (
                                    (AST_RETURN
                                        (AST_CONST)))))
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST)))))