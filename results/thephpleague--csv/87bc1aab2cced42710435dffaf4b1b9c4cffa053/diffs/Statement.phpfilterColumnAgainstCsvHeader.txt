||||||||    protected function filterColumnAgainstCsvHeader(array $headers)
    {
        if (empty($headers)) {
            $filter = function ($key) {
                return !is_int($key) || $key < 0;
            };

            if (empty(array_filter($this->columns, $filter, ARRAY_FILTER_USE_KEY))) {
                return $this->columns;
            }

            throw new RuntimeException('If no header is specified the columns keys must contain only integer');
        }

        $columns = $this->formatColumns($this->columns);
        foreach ($columns as $key => $alias) {
            if (false === array_search($key, $headers, true)) {
                throw new RuntimeException(sprintf('The `%s` column does not exist in the Csv document', $key));
            }
        }

        return $columns;
    }

    /**
     * Format the column array
     *
     * @param array $columns
     *
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLOSURE
                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_CONST))))
                        (
                            (AST_RETURN
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONST))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (AST_VAR)))