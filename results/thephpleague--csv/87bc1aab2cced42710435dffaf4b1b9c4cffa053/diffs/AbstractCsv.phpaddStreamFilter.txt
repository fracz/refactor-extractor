||||||||    public function addStreamFilter(string $filtername): self
    {
        if (!$this->document instanceof StreamIterator) {
            throw new LogicException('The stream filter API can not be used');
        }

        $this->stream_filters[$filtername][] = $this->document->appendFilter($filtername, $this->stream_filter_mode);
        $this->resetDynamicProperties();
        $this->input_bom = null;

        return $this;
    }

    /**
     * Remove all registered stream filter
     */
||||||||||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (NULL))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_VAR)))