||||||||	public function getUsedMagicMethods()
	{
		$usedMethods = array();

		foreach ($this->getMagicMethods() as $method) {
			if (null === $method->getDeclaringTraitName() || $this->getName() === $method->getDeclaringTraitName()) {
				continue;
			}

			$usedMethods[$method->getDeclaringTraitName()][$method->getName()]['method'] = $method;
		}

		// Sort
		array_walk($usedMethods, function(&$methods) {
			ksort($methods);
			array_walk($methods, function(&$aliasedMethods) {
				if (!isset($aliasedMethods['aliases'])) {
					$aliasedMethods['aliases'] = array();
				}
				ksort($aliasedMethods['aliases']);
			});
		});

		return $usedMethods;
	}

	/**
	 * Returns an array of inherited constants from parent classes grouped by the declaring class name.
	 *
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_ARRAY)))))
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_VAR)))