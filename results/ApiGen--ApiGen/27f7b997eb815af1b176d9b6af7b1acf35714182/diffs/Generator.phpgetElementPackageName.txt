	private function getElementPackageName($element)
	{
		if ($element->isInternal()) {
			$packageName = 'PHP';
		} elseif ($package = $element->getAnnotation('package')) {
			$packageName = preg_replace('~\s+.*~s', '', $package[0]);
			if ($subpackage = $element->getAnnotation('subpackage')) {
				$packageName .= '\\' . preg_replace('~\s+.*~s', '', $subpackage[0]);
			}
		} else {
			$packageName = 'None';
		}

		return $packageName;
	}

	/**
	 * Returns element namespace name.
	 *
	 * For internal elements returns "PHP", for elements in global space returns "None".
	 *
	 * @param \Apigen\Reflection|\TokenReflection\IReflection $element
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||