	public function getTypes($element, $position = NULL, $annotationName = '')
	{
		$annotation = array();
		if ($element instanceof ReflectionProperty || $element instanceof ReflectionConstant) {
			$annotation = $element->getAnnotation('var');
			if (null === $annotation && !$element->isTokenized()) {
				$value = $element->getDefaultValue();
				if (null !== $value) {
					$annotation = gettype($value);
				}
			}
		} elseif ($element instanceof ReflectionFunction && !empty($annotationName)) {
			$annotation = $element->getAnnotation($annotationName);
		} elseif ($element instanceof ReflectionMethod || $element instanceof ReflectionFunction) {
			$annotation = $position === null ? $element->getAnnotation('return') : @$element->annotations['param'][$position];
		}

		if ($element instanceof ReflectionFunction) {
			$namespace = $element->getNamespaceName();
		} elseif ($element instanceof ReflectionParameter) {
			$namespace = $element->getDeclaringFunction()->getNamespaceName();
		} else {
			$namespace = $element->getDeclaringClass()->getNamespaceName();
		}

		$types = array();
		foreach (preg_replace('#\s.*#', '', (array) $annotation) as $s) {
			foreach (explode('|', $s) as $name) {
				$class = $this->resolveClass($name, $namespace);
				$types[] = (object) array('name' => $class ?: $this->resolveName($name), 'class' => $class);
			}
		}
		return $types;
	}

	/**
	 * Resolves a parameter value definition (class name or parameter data type).
	 *
	 * @param string $name Parameter definition
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CONST)
                                (AST_VAR))
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_DIM
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_CAST
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_CAST
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_CONDITIONAL
                                        (AST_VAR)
                                        (NULL)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR))))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||