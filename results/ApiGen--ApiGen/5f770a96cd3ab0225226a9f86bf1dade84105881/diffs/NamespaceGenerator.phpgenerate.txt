    public function generate(): void
    {
        $reflectionsCategorizedToNamespaces = $this->namespaceStorage->getReflectionsCategorizedToNamespaces();
        foreach ($reflectionsCategorizedToNamespaces as $namespace => $reflectionsInNamespace) {
            $this->generateForNamespace($namespace, $reflectionsInNamespace);
        }
    }

    /**
     * @param mixed[] $elementsInNamespace
     */
||||||||    public function generate(): void
    {
        foreach ($this->namespaceStorage->getNamespaces() as $namespace) {
            $singleNamespaceStorage = $this->namespaceStorage->findInNamespace($namespace);
            $this->generateForNamespace($singleNamespaceStorage);
        }
    }

    /**
     * @param mixed[] $elementsInNamespace
     */
||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))))