	public function testProtectedPrivate()
	{
		$this->setConfigurationAccessLevelOption(['protected', 'private']);
		$accessLevelsClassReflection = $this->getAccessLevelsClassReflection();

		$this->assertFalse($accessLevelsClassReflection->hasMethod('publicMethod'));
		$this->assertTrue($accessLevelsClassReflection->hasMethod('protectedMethod'));
		$this->assertTrue($accessLevelsClassReflection->hasMethod('privateMethod'));
	}


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||