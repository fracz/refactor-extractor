||||||||	public function getTypeHint()
	{
		if ($this->isArray()) {
			return 'array';
		} elseif ($this->isCallable()) {
			return 'callable';
		} elseif ($className = $this->getClassName()) {
			return $className;
		} elseif ($annotations = $this->getDeclaringFunction()->getAnnotation('param')) {
			if (!empty($annotations[$this->getPosition()])) {
				list($types) = preg_split('~\s+|$~', $annotations[$this->getPosition()], 2);
				if (!empty($types) && '$' !== $types[0]) {
					return $types;
				}
			}
		}

		return 'mixed';
	}

	/**
	 * Returns reflection of the required class of the parameter.
	 *
	 * @return \ApiGen\ReflectionClass|null
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (
                        (SCALAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_VAR)))
                                        (SCALAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_VAR)))
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_RETURN
                                            (AST_VAR)))))))))))
    (AST_RETURN
        (SCALAR)))