    public function __construct(TaskInterface $task, $exitCode, $message = '', $data = [])
    {
        $this->task = $task;
        $this->exitCode = $exitCode;
        $this->message = $message;
        $this->data = $data;

        if (!$this->wasSuccessful()) {
            $lines = explode("\n", $this->message);
            foreach ($lines as $msg) {
                if ($msg) $this->printTaskInfo("<error>Error</error> $msg", $this->task);
            }
            if (!$this->message) {
                $this->printTaskInfo("<error> Error</error> Exit code ".$this->exitCode, $this->task);
            }
        }

        if (self::$stopOnFail) {
            $this->stopOnFail();
        }
    }

||||||||    public function __construct(TaskInterface $task, $exitCode, $message = '', $data = [])
    {
        $this->task = $task;
        $this->exitCode = $exitCode;
        $this->message = $message;
        $this->data = $data;

        if (!$this->wasSuccessful()) {
            $lines = explode("\n", $this->message);

            $printOutput = true;

            if ($task instanceof PrintedInterface) {
                $printOutput = !$task->getPrinted();
            }
            if ($printOutput) {
                foreach ($lines as $msg) {
                    if ($msg) $this->printTaskInfo("<error> Error </error> $msg", $this->task);
                }
            }

            $this->printTaskInfo("<error> Error </error> Exit code ".$this->exitCode, $this->task);
        }

        if (self::$stopOnFail) {
            $this->stopOnFail();
        }
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (AST_PROP
                                                            (AST_VAR))))))))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_METHOD_CALL
                    (AST_VAR))))))