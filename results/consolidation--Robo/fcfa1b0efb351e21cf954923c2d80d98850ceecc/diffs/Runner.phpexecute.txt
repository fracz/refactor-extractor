    public function execute()
    {
        register_shutdown_function(array($this, 'shutdown'));
        $app = new Application('Robo', self::VERSION);

        $loaded = $this->loadRoboFile();
        if (!$loaded) {
            $app->add(new Init('init'));
            $app->run();
            return;
        }
        $input = $this->prepareInput();

        $className = self::ROBOCLASS;
        $roboTasks = new $className;
        $taskNames = array_filter(get_class_methods(self::ROBOCLASS), function($m) {
            return !in_array($m, ['__construct']);
        });
        $passThrough = $this->passThroughArgs;
        foreach ($taskNames as $taskName) {
            $command = $this->createCommand($taskName);
            $command->setCode(function(InputInterface $input) use ($roboTasks, $taskName, $passThrough) {
                // get passthru args
                $args = $input->getArguments();
                array_shift($args);
                if ($passThrough) {
                    $args[key(array_slice($args, -1, 1, TRUE))] = $passThrough;
                }
                $args[] = $input->getOptions();
                $res = call_user_func_array([$roboTasks, $taskName], $args);
                if (is_int($res)) exit($res);
                if (is_bool($res)) exit($res ? 0 : 1);
                if ($res instanceof Result) exit($res->getExitCode());
            });
            $app->add($command);
        }
        $app->run($input);
    }

||||||||    public function execute()
    {
        register_shutdown_function(array($this, 'shutdown'));
        $app = new Application('Robo', self::VERSION);

        $loaded = $this->loadRoboFile();
        if (!$loaded) {
            $app->add(new Init('init'));
            $app->run();
            return;
        }
        Config::setOutput(new ConsoleOutput());

        $className = self::ROBOCLASS;
        $roboTasks = new $className;
        $taskNames = array_filter(get_class_methods(self::ROBOCLASS), function($m) {
            return !in_array($m, ['__construct']);
        });
        $input = $this->prepareInput();
        $passThrough = $this->passThroughArgs;
        foreach ($taskNames as $taskName) {
            $command = $this->createCommand($taskName);
            $command->setCode(function(InputInterface $input) use ($roboTasks, $taskName, $passThrough) {
                // get passthru args
                $args = $input->getArguments();
                array_shift($args);
                if ($passThrough) {
                    $args[key(array_slice($args, -1, 1, TRUE))] = $passThrough;
                }
                $args[] = $input->getOptions();

                $res = call_user_func_array([$roboTasks, $taskName], $args);
                if (is_int($res)) exit($res);
                if (is_bool($res)) exit($res ? 0 : 1);
                if ($res instanceof Result) exit($res->getExitCode());
            });
            $app->add($command);
        }
        $app->run($input);
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_UNARY_OP
                                                                    (SCALAR))
                                                                (SCALAR)
                                                                (AST_CONST))))))
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_EXIT
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_EXIT
                                            (AST_CONDITIONAL
                                                (AST_VAR)
                                                (SCALAR)
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (
                                        (AST_EXIT
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW
                            (
                                (SCALAR)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_NEW)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_RETURN
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CLOSURE
                        (PARAM_TYPENO_PARAM_DEFAULT)
                        (AST_CLOSURE_USES
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR)
                            (AST_CLOSURE_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_CALL
                                                            (
                                                                (AST_VAR)
                                                                (AST_UNARY_OP
                                                                    (SCALAR))
                                                                (SCALAR)
                                                                (AST_CONST))))))
                                            (AST_VAR)))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_VAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_EXIT
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_EXIT
                                            (AST_CONDITIONAL
                                                (AST_VAR)
                                                (SCALAR)
                                                (SCALAR))))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (
                                        (AST_EXIT
                                            (AST_METHOD_CALL
                                                (AST_VAR))))))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))