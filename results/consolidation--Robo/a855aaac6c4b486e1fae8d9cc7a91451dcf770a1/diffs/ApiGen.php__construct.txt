||||||||    public function __construct($pathToApiGen = null)
    {
        if ($pathToApiGen) {
            $this->command = $pathToApiGen;
        } elseif (file_exists('vendor/bin/apigen')) {
            $this->command = 'vendor/bin/apigen';
        } elseif (file_exists('apigen.phar')) {
            $this->command = 'php apigen.phar';
        } elseif (file_exists('/usr/bin/apigen')) {
            $this->command = '/usr/bin/apigen';
        } elseif (file_exists('~/.composer/vendor/bin/apigen')) {
            $this->command = '~/.composer/vendor/bin/apigen';
        } else {
            throw new \Robo\Task\Shared\TaskException(__CLASS__, "No apigen installation found");
        }
    }

    /**
     * @param array|Traversable|string $arg a single object or something traversable
     * @return array|Traversable the provided argument if it was already traversable, or the given
     *                           argument returned as a one-element array
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_MAGIC_CONST)
                            (SCALAR))))))))