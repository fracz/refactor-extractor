    public function onRequestBeforeSend(Event $event)
    {
        $request = $event['request'];
        // We need to make special handling for content wiring and
        // non-repeatable streams.
        if ($this->settings & self::LOG_BODY) {
            if ($request instanceof EntityEnclosingRequestInterface) {
                if ($request->getBody() && (!$request->getBody()->isSeekable() || !$request->getBody()->isReadable())) {
                    // The body of the request cannot be recalled so
                    // logging the content of the request will need to
                    // be streamed using updates
                    $request->getParams()->set('request_wire', EntityBody::factory());
                }
            }
            if (!$request->isResponseBodyRepeatable()) {
                // The body of the response cannot be recalled so
                // logging the content of the response will need to
                // be streamed using updates
                $request->getParams()->set('response_wire', EntityBody::factory());
            }
        }
    }

    /**
     * Triggers the actual log write when a request completes
     *
     * @param Event $event
     */
||||||||    public function onRequestBeforeSend(Event $event)
    {
        $request = $event['request'];
        // Ensure that curl IO events are emitted
        $request->getParams()->set('curl.emit_io', true);
        // We need to make special handling for content wiring and
        // non-repeatable streams.
        if ($this->settings & self::LOG_BODY) {
            if ($request instanceof EntityEnclosingRequestInterface) {
                if ($request->getBody() && (!$request->getBody()->isSeekable() || !$request->getBody()->isReadable())) {
                    // The body of the request cannot be recalled so
                    // logging the content of the request will need to
                    // be streamed using updates
                    $request->getParams()->set('request_wire', EntityBody::factory());
                }
            }
            if (!$request->isResponseBodyRepeatable()) {
                // The body of the response cannot be recalled so
                // logging the content of the response will need to
                // be streamed using updates
                $request->getParams()->set('response_wire', EntityBody::factory());
            }
        }
    }

    /**
     * Triggers the actual log write when a request completes
     *
     * @param Event $event
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (
                                                (SCALAR)
                                                (AST_STATIC_CALL)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_STATIC_CALL))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))
                                            (AST_UNARY_OP
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (
                                                (SCALAR)
                                                (AST_STATIC_CALL)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (AST_STATIC_CALL))))))))))