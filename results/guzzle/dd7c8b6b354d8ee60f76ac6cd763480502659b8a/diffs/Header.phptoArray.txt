    public function toArray()
    {
        return $this->getIterator()->getArrayCopy();
    }

    /**
     * Get the raw data array of the headers.  This array is represented as an
     * associative array of the various cases that might be stored in the
     * header and an array of values associated with each case variation.
     *
     * @return array
     */
||||||||    public function toArray()
    {
        $result = array();
        foreach ($this->values as $values) {
            foreach ($values as $value) {
                $result[] = $value;
            }
        }

        return $result;
    }

    /**
     * Get the raw data array of the headers.  This array is represented as an
     * associative array of the various cases that might be stored in the
     * header and an array of values associated with each case variation.
     *
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))