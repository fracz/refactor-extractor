||||||||    private function executeHandles($select = false, $timeout = 1)
    {
        $active = 0;
        $selectResult = 0;

        do {

            if ($select) {
                $selectResult = curl_multi_select($this->multiHandle, $timeout);
            }

            if ($selectResult == 0) {
                while ($mrc = curl_multi_exec($this->multiHandle, $active) == CURLM_CALL_MULTI_PERFORM);
                // Check the return value to ensure an error did not occur
                $this->checkCurlResult($mrc);
            }

        // Poll once if not selecing, or poll until there are no handles with activity
        } while ($select && $active && $selectResult == 0);

        return $active;
    }

    /**
     * Remove a request that encountered an exception
     *
     * @param RequestInterface $request Request to remove
     * @param Exception $e Exception encountered
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_DO_WHILE
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_WHILE
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))
                                    (AST_CONST))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))