    public function __construct($parameters = null, ApiCommand $apiCommand = null)
    {
        parent::__construct($parameters);

        // Add arguments and validate the command
        if ($apiCommand) {
            $this->apiCommand = $apiCommand;
            Inspector::getInstance()->validateConfig($apiCommand->getParams(), $this, false);
        } else {
            Inspector::getInstance()->validateClass(get_class($this), $this, false);
        }

        if (!$this->get('headers') instanceof Collection) {
            $this->set('headers', new Collection((array) $this->get('headers')));
        }

        $this->init();
    }

    /**
     * Enables magic methods for setting parameters.
     *
     * @param string $method Name of the parameter to set
     * @param array  $args   (optional) Arguments to pass to the command
     *
     * @return AbstractCommand
     * @throws BadMethodCallException when a parameter doesn't exist
     */
||||||||    public function __construct($parameters = null, ApiCommand $apiCommand = null)
    {
        parent::__construct($parameters);

        // Add arguments and defaults to the command
        if ($apiCommand) {
            $this->apiCommand = $apiCommand;
            Inspector::getInstance()->validateConfig($apiCommand->getParams(), $this, false, false);
        } else {
            Inspector::getInstance()->validateClass(get_class($this), $this, false, false);
        }

        if (!$this->get('headers') instanceof Collection) {
            $this->set('headers', new Collection((array) $this->get('headers')));
        }

        $this->init();
    }

    /**
     * Enables magic methods for setting parameters.
     *
     * @param string $method Name of the parameter to set
     * @param array  $args   (optional) Arguments to pass to the command
     *
     * @return AbstractCommand
     * @throws BadMethodCallException when a parameter doesn't exist
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)
                        (AST_CONST)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_NEW
                            (
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)
                        (AST_CONST)
                        (AST_CONST)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_VAR)
                        (AST_CONST)
                        (AST_CONST))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_NEW
                            (
                                (AST_CAST
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)))