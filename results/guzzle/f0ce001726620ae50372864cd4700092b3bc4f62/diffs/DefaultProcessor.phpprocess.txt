    public function process(Parameter $param, &$value)
    {
        return $this->recursiveProcess($param, $value);
    }

    /**
     * Recursively validate a parameter
     *
     * @param Parameter $param API parameter being validated
     * @param mixed     $value Value to validate and process. The value may change during this process.
     * @param string    $path  Current validation path (used for error reporting)
     * @param int       $depth Current depth in the validation process
     *
     * @return bool|array Returns true if valid, or an array of error messages if invalid
     */
||||||||    public function process(Parameter $param, &$value)
    {
        $errors = array();
        $this->recursiveProcess($param, $value, $errors);

        if (empty($errors)) {
            return true;
        } else {
            sort($errors);
            return $errors;
        }
    }

    /**
     * Recursively validate a parameter
     *
     * @param Parameter $param  API parameter being validated
     * @param mixed     $value  Value to validate and process. The value may change during this process.
     * @param array     $errors Validation errors encountered
     * @param string    $path   Current validation path (used for error reporting)
     * @param int       $depth  Current depth in the validation process
     *
     * @return bool Returns true if valid, or false if invalid
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_RETURN
                    (AST_VAR))))))