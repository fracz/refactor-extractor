||||||||    private function checkDecode(array $options, array $headers, $stream)
    {
        // Automatically decode responses when instructed.
        if (!empty($options['decode_content'])) {
            foreach ($headers as $key => $value) {
                if (strtolower($key) == 'content-encoding') {
                    if ($value == 'gzip' || $value == 'deflate') {
                        return new InflateStream(Stream::factory($stream));
                    }
                }
            }
        }

        return $stream;
    }

    /**
     * Drains the stream into the "sink" client option.
     *
     * @param resource                            $stream
     * @param string|resource|StreamableInterface $dest
     *
     * @return StreamableInterface
     * @throws \RuntimeException when the sink option is invalid.
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (
                                                (AST_RETURN
                                                    (AST_NEW
                                                        (
                                                            (AST_STATIC_CALL
                                                                (
                                                                    (AST_VAR)))))))))))))))))
    (AST_RETURN
        (AST_VAR)))