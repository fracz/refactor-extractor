    public function testContentLengthIntegrationTest()
    {
        Server::flush();
        Server::enqueue([new Response(200)]);
        $client = new Client(['base_url' => Server::$url]);
        $this->assertEquals(200, $client->put('/', [
            'body' => 'test'
        ])->getStatusCode());
        $request = Server::received(true)[0];
        $this->assertEquals('PUT', $request->getMethod());
        $this->assertEquals('4', $request->getHeader('Content-Length'));
        $this->assertEquals('test', (string) $request->getBody());
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_STATIC_PROP)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_CALL
                (
                    (AST_CONST)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR))))))||||||||