    public function removeHeader($header)
    {
        $name = strtolower($header);
        unset($this->headers[$name], $this->headerNames[$name]);
    }

    /**
     * Parse an array of header values containing ";" separated data into an
     * array of associative arrays representing the header key value pair
     * data of the header. When a parameter does not contain a value, but just
     * contains a key, this function will inject a key with a '' string value.
     *
     * @param MessageInterface $message That contains the header
     * @param string           $header  Header to retrieve from the message
     *
     * @return array Returns the parsed header values.
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||