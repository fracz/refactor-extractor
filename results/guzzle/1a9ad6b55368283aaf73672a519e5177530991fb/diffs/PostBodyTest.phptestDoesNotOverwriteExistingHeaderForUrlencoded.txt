    public function testDoesNotOverwriteExistingHeaderForUrlencoded()
    {
        $m = new Request('POST', 'http://foo.com', [
            'content-type' => 'application/x-www-form-urlencoded; charset=utf-8'
        ]);
        $b = new PostBody();
        $b->setField('foo', 'bar');
        $b->applyRequestHeaders($m);
        $this->assertEquals(
            'application/x-www-form-urlencoded; charset=utf-8',
            $m->getHeader('Content-Type')
        );
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||