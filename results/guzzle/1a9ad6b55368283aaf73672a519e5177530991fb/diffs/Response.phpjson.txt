    public function json(array $config = [])
    {
        try {
            return Utils::jsonDecode(
                (string) $this->getBody(),
                isset($config['object']) ? !$config['object'] : true,
                512,
                isset($config['big_int_strings']) ? JSON_BIGINT_AS_STRING : 0
            );
        } catch (\InvalidArgumentException $e) {
            throw new ParseException(
                $e->getMessage(),
                $this
            );
        }
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_RETURN
                (AST_STATIC_CALL
                    (
                        (AST_CAST
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_UNARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST))
                        (SCALAR)
                        (AST_CONDITIONAL
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_CONST)
                            (SCALAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR)))))))
        (NULL)))||||||||