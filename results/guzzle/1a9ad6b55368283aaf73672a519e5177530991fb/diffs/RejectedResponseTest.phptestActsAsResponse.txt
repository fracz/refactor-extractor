||||||||    public function testActsAsResponse()
    {
        $p = new RejectedResponse(new \UnexpectedValueException('test'));
        $this->assertEquals('rejected', $p->getState());
        /** @var callable $f */
        $f = [$this, 'check'];
        $f($p, 'getStatusCode');
        $f($p, 'getReasonPhrase');
        $f($p, 'getHeaders');
        $f($p, 'getHeaderLines', ['foo']);
        $f($p, 'hasHeader', ['foo']);
        $f($p, 'getHeader', ['foo']);
        $f($p, 'withAddedHeader', ['foo', 'bar']);
        $f($p, 'withHeader', ['foo', 'bar']);
        $f($p, 'withoutHeader', ['foo']);
        $f($p, 'getBody');
        $f($p, 'withBody', [Stream::factory('test')]);
        $f($p, 'getProtocolVersion');
        $f($p, 'withProtocolVersion', ['2']);
        $f($p, 'withStatus', ['202']);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_NEW
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))