    public function testDefersParsingAndEncodingQueryUntilNecessary()
    {
        $url = Url::fromString('http://www.test.com');
        // Note that invalid characters are encoded.
        $url->setQuery('foo#bar/', true);
        $this->assertEquals('http://www.test.com?foo%23bar/', (string) $url);
        $this->assertInternalType('string', $this->readAttribute($url, 'query'));
        $this->assertEquals('foo%23bar%2F', (string) $url->getQuery());
        $this->assertInstanceOf('GuzzleHttp\Query', $this->readAttribute($url, 'query'));
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CAST
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CAST
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (SCALAR))))))||||||||