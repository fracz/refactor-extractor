    protected function showAuthToken()
    {
        $webAuth = $this->getWebAuth();
        $authurl = $webAuth->start();
        echo "<br />Go to <strong><a href='" . $authurl . "' target='_blank'>" . $authurl . "</a></strong> to generate the authorization code, then enter it bellow.<br />";
        echo "<form action='" . get_current_path() . "' method='post' enctype='multipart/form-data'>";
        if ($_REQUEST['action']) {
            echo "<input type='hidden' name='action' value='" . scrub_in($_REQUEST['action']) . "' />";
            echo "<input type='hidden' name='catalogs[]' value='". $this->id ."' />";
        }
        echo "<input type='hidden' name='perform_ready' value='true' />";
        echo "<input type='text' name='authcode' />";
        echo "<input type='submit' value='Ok' />";
        echo "</form>";
        echo "<br />";
    }

||||||||    protected function showAuthToken()
    {
        $webAuth = $this->getWebAuth();
        $authurl = $webAuth->start();
        printf('<br />' . T_('Go to %s to generate the authorization code, then enter it bellow.') . '<br />', '<strong><a href="' . $authurl . '"target="_blank">' . $authurl . '</a></strong>');
        echo "<form action='" . get_current_path() . "' method='post' enctype='multipart/form-data'>";
        if ($_REQUEST['action']) {
            echo "<input type='hidden' name='action' value='" . scrub_in($_REQUEST['action']) . "' />";
            echo "<input type='hidden' name='catalogs[]' value='". $this->id ."' />";
        }
        echo "<input type='hidden' name='perform_ready' value='true' />";
        echo "<input type='text' name='authcode' />&nbsp;";
        echo "<input type='submit' value='Ok' />";
        echo "</form>";
        echo "<br />";
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (SCALAR)))
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (SCALAR))
                    (AST_VAR))
                (SCALAR))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))))
                        (SCALAR)))
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR)))
                        (SCALAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))