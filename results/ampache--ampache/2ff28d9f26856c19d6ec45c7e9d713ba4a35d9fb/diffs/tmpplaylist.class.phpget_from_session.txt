	public static function get_from_session($session_id) {

		$session_id = Dba::escape($session_id);

		$sql = "SELECT `id` FROM `tmp_playlist` WHERE `session`='$session_id'";
		$db_results = Dba::query($sql);

		$results = Dba::fetch_row($db_results);

		if (!$results['0']) {
			$results['0'] = tmpPlaylist::create($session_id,'user','song','0');
		}

		$playlist = new tmpPlaylist($results['0']);

		return $playlist;

	} // get_from_session

	/**
	 * get_from_userid
	 * This returns a tmp playlist object based on a userid passed
	 * this is used for the user profiles page
	 */
||||||||	public static function get_from_session($session_id) {

		$session_id = Dba::escape($session_id);

		$sql = "SELECT `id` FROM `tmp_playlist` WHERE `session`='$session_id'";
		$db_results = Dba::query($sql);

		$results = Dba::fetch_row($db_results);

		if (!$results['0']) {
			$results['0'] = tmpPlaylist::create($session_id,'user','song');
		}

		$playlist = new tmpPlaylist($results['0']);

		return $playlist;

	} // get_from_session

	/**
	 * get_from_userid
	 * This returns a tmp playlist object based on a userid passed
	 * this is used for the user profiles page
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))