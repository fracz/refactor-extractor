        function merge($newid) {

		$catalog = new Catalog();

		/* Make sure this is a valid ID */
                if (!is_numeric($newid)) {
			$GLOBALS['error']->add_error('general',"Error: Invalid Artist ID");
                        return false;
		}

                // First check newid exists
                $check_exists_qstring = "SELECT name FROM artist WHERE id='" . sql_escape($newid) . "'";
                $check_exists_query = mysql_query($check_exists_qstring, dbh());

                if ($check_exists_results = mysql_fetch_assoc($check_exists_query)) {

                        $NewName = $check_exists_result['name'];

                        // Now the query
                        $sql = "UPDATE song SET artist='" . sql_escape($newid) . "' " .
				"WHERE artist='" . sql_escape($this->id) . "'";
                        $db_results = mysql_query($sql, dbh());

                        $num_stats_changed = $catalog->merge_stats('artist',$this->id,$newid);

			/* If we've done the merege we need to clean up */
			$catalog->clean_artists();
			$catalog->clean_albums();
                }
		else {
			$GLOBALS['error']->add_error('general',"Error: Invalid Artist ID");
                        return false;
                }
        } // merge


	/*!
		@function show_albums
		@discussion displays the show albums by artist page
	*/
||||||||        function merge($newid) {

		$catalog = new Catalog();

		/* Make sure this is a valid ID */
                if (!is_numeric($newid)) {
			$GLOBALS['error']->add_error('general',"Error: Invalid Artist ID");
                        return false;
		}

                // First check newid exists
                $check_exists_qstring = "SELECT name FROM artist WHERE id='" . $newid . "'"; //no need to escape newid, it's numeric
                $check_exists_query = mysql_query($check_exists_qstring, dbh());

                if ($check_exists_result = mysql_fetch_assoc($check_exists_query)) {
                        $NewName = $check_exists_result['name'];

                        // Now the query
                        $sql = "UPDATE song SET artist='" . $newid . "' " .
				"WHERE artist='" . sql_escape($this->id) . "'";
                        $db_results = mysql_query($sql, dbh());

                        $num_stats_changed = $catalog->merge_stats('artist',$this->id,$newid);

			/* If we've done the merege we need to clean up */
			$catalog->clean_artists();
			$catalog->clean_albums();

			return $NewName;
                }
		else {
			$GLOBALS['error']->add_error('general',"Error: No such artist to merge with");
                        return false;
                }
        } // merge


	/*!
		@function show_albums
		@discussion displays the show albums by artist page
	*/
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CALL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CALL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CALL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST))))))