	public function add($objects) {

		foreach ($songs as $song_id) {
			$song = new Song($song_id);
			$url = $song->get_url(0,1);
			if (is_null($this->_httpq->add($song->title,$url))) {
				debug_event('httpq_add',"Error: Unable to add $url to Httpq",'1');
			}

		} // end foreach

		return true;

	} // add

	/**
	 * delete_track
	 * This must take an array of ID's (as passed by get function) from Ampache
	 * and delete them from Httpq
	 */
||||||||	public function add($object) {

		$url = $this->get_url($object);

		// Try to pass a title (if we can)
		if (is_object($object)) {
			$title = $object->title;
		}

		if (is_null($this->_httpq->add($title,$url))) {
			debug_event('httpq_add',"Error: Unable to add $url to Httpq",'1');
		}

		return true;

	} // add

	/**
	 * delete_track
	 * This must take an array of ID's (as passed by get function) from Ampache
	 * and delete them from Httpq
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))