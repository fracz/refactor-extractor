	public function delete_track($object_id) {

		/* Default to true */
		$return = true;

		/* This should be an array of UID's as returned by
		 * the get function so that we can just call the class based
		 * functions to remove them or if there isn't a uid for
		 * the songs, then however ya'll have stored them
		 * in this controller
		 */
		foreach ($songs as $uid) {

			if (is_null($this->_httpq->delete_pos($uid))) { $return = false; }

		} // foreach of songs

		return $return;

	} // delete_track

	/**
	 * clear_playlist
	 * This deletes the entire Httpq playlist... nuff said
	 */
||||||||	public function delete_track($object_id) {

		if (is_null($this->_httpq->delete_pos($object_id))) {
			debug_event('httpq_del','ERROR Unable to delete ' . $object_id . ' from Httpq','1');
			return false;
		}

		return true;

	} // delete_track

	/**
	 * clear_playlist
	 * This deletes the entire Httpq playlist... nuff said
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))
                        (SCALAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))