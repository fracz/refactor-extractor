||||||||    protected function processFilterColumn($method, $parameters, $column)
    {
        if (method_exists($this->getBuilder(), $method)
            && count($parameters) <= with(new \ReflectionMethod($this->getBuilder(),
                $method))->getNumberOfParameters()
        ) {
            if (Str::contains(Str::lower($method), 'raw')
                || Str::contains(Str::lower($method), 'exists')
            ) {
                call_user_func_array([$this->getBuilder(), $method],
                    $this->parameterize($parameters));
            } else {
                call_user_func_array([$this->getBuilder(), $method],
                    $this->parameterize($column, $parameters));
            }
        }
    }

    /**
     * Check if a column is searchable
     *
     * @param array $columns
     * @param $i
     * @return bool
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_VAR)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_NEW
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_VAR))))))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_STATIC_CALL
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR))))
                        (
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR))))))))))))