    public function onRelationManageCreate()
    {
        $this->beforeAjax();
        $saveData = $this->manageWidget->getSaveData();

        if ($this->viewMode == 'multi') {
            $newModel = $this->relationObject->create($saveData, $this->relationGetSessionKey(true));
            $newModel->commitDeferred($this->manageWidget->getSessionKey());
        }
        elseif ($this->viewMode == 'single') {
            $this->viewWidget->setFormValues($saveData);
            $this->viewWidget->model->save();
        }

        return $this->relationRefresh();
    }

    /**
     * Updated an existing related model's fields
     */
||||||||    public function onRelationManageCreate()
    {
        $this->manageMode = 'form';
        $this->beforeAjax();
        $saveData = $this->manageWidget->getSaveData();

        if ($this->viewMode == 'multi') {
            if ($this->relationType == 'hasMany') {
                $newModel = $this->relationObject->create($saveData, $this->relationGetSessionKey(true));
            }
            elseif ($this->relationType == 'belongsToMany') {
                $newModel = $this->relationObject->create($saveData, [], $this->relationGetSessionKey(true));
            }

            $newModel->commitDeferred($this->manageWidget->getSessionKey());
        }
        elseif ($this->viewMode == 'single') {
            $newModel = $this->viewModel;
            $this->viewWidget->setFormValues($saveData);

            if ($this->relationType == 'belongsTo') {
                $newModel->save();
                $this->relationObject->associate($newModel);
                $this->relationObject->getParent()->save();
            }
            elseif ($this->relationType == 'hasOne') {
                $this->relationObject->add($newModel);
            }
        }

        return $this->relationRefresh();
    }

    /**
     * Updated an existing related model's fields
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CONST))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CONST))))))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (AST_VAR)
                                        (AST_ARRAY)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_CONST)))))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))