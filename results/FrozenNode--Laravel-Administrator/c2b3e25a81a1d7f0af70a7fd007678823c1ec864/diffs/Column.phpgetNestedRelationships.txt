	private static function getNestedRelationships($top_model, $name)
	{
		$pieces = explode('.', $name);
		$models = array();
		$num_pieces = sizeof($pieces);

		//iterate over the relationships to see if they're all valid
		foreach ($pieces as $i => $rel)
		{
			//if this is the first item, then the model is the config's model
			if ($i === 0)
			{
				$models[] = $top_model;
			}

			//if the model method doesn't exist for any of the pieces along the way, exit out
			if (!method_exists($models[$i], $rel) || !is_a($models[$i]->{$rel}(), static::$belongsToClass))
			{
				return false;
			}

			//we don't need the model of the last item
			$models[] = $models[$i]->{$rel}()->getRelated();
		}

		return array('models' => $models, 'pieces' => $pieces);
	}

	/**
	 * Adds selects to a query
	 *
	 * @param Query 	$query
	 * @param array 	$selects
	 * @param Eloquent 	$model
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_VAR))))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_STATIC_PROP)))))
                    (
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR)))))||||||||