	public function __construct($config)
	{
		//set the class properties for the items which we know to exist
		$this->originalConfig = $config;
		$this->title = array_get($config, 'title');
		$this->single = array_get($config, 'single');
		$this->model = array_get($config, 'model');
		$this->columns = array_get($config, 'columns');
		$this->edit = array_get($config, 'edit_fields');
		$this->filters = array_get($config, 'filters', array());
		$this->name = array_get($config, 'model_name');

		//fetch the meaningful information for columns
		$this->columns = Column::getColumns($this);

		//copy $this->model because of php syntax issues
		$model = $this->model;

		//now set the properties for other items

		//form width option
		$formWidth = array_get($config, 'form_width', $this->formWidth);

		if (!is_int($formWidth) || $formWidth < $this->formWidth)
		{
			$formWidth = $this->formWidth;
		}

		$this->formWidth = $formWidth;

		//sort options
		$this->sort = array_get($config, 'sort', array());
		$this->setSort();

		//get the rows per page
		$this->setRowsPerPage();

		//grab the model link callback
		$linkCallback = array_get($config, 'link');
		$this->linkCallback = is_callable($linkCallback) ? $linkCallback : null;

		//get the action permissions
		$this->updateActions();
	}

	/**
	 * Takes a model menu name and returns a ModelConfig instance if it can be found, or false otherwise
	 *
	 * @param string|int	$modelName 		//the model config/uri name
	 *
	 * @return false|ModelConfig object
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_ARRAY))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||