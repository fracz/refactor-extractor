	public static function get($modelName)
	{
		//first we need to find the model's config (if it exists)
		if (!$config = static::find($modelName))
		{
			return false;
		}

		//now that we have the config, we can begin to check if all of the required fields are provided

		//but first we have to check if the user has permission to access this model
		$permission = array_get($config, 'permission');

		if (is_callable($permission))
		{
			$response = $permission();

			//if it's falsey, or a response/redirect return the value
			if (!$response || is_a($response, 'Laravel\\Response') || is_a($response, 'Laravel\\Redirect'))
			{
				return $response;
			}
		}

		//if the title or single names are provided, throw an exception
		if (!is_string(array_get($config, 'title')) || !is_string(array_get($config, 'single')))
		{
			throw new Exception("Administrator: " .  trans('administrator::administrator.valid_title'));
		}

		//get an instance of the model
		$modelName = array_get($config, 'model');

		if (!is_string($modelName))
		{
			throw new Exception("Administrator: " .  trans('administrator::administrator.valid_model'));
		}

		//grab an instance of the Eloquent model
		$config['model'] = ModelHelper::getModelInstance($modelName);

		//check if the required columns array was provided
		if (!is_array(array_get($config, 'columns')))
		{
			throw new Exception("Administrator: " .  trans('administrator::administrator.valid_columns'));
		}

		//check if the edit fields array was provided
		if (!is_array(array_get($config, 'edit_fields')))
		{
			throw new Exception("Administrator: " .  trans('administrator::administrator.valid_edit'));
		}

		//now we can instantiate the object
		return new static($config);
	}

	/**
	 * Finds a model given a name from the menu option in the main config
	 *
	 * @param string		$modelName
	 *
	 * @return false|array	//If found, an array of (unvalidated) config options will returned
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)))))||||||||