||||||||  protected function mockValidator()
  {
    $messageBag = $this->mockMessageBag(array(
      'required' => 'The required field is required.'
    ));

    return $this->mock('validator', 'Illuminate\Validation\Validator', function ($mock) use ($messageBag) {
      return $mock->shouldReceive('getMessageBag')->andReturn($messageBag);
    });
  }

  /**
   * Mock the current Session store
   *
   * @param array $errors
   *
   * @return Mockery
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (SCALAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_VAR))))))))))