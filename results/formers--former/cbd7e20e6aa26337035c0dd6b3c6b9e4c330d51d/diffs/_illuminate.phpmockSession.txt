  protected function mockSession($errors = null)
  {
    $session = Mockery::mock('Illuminate\Session\Store');
    $session->shouldReceive('getToken')->andReturn('csrf_token');

    if ($errors) {
      $messageBag = $this->mockMessageBag($errors);
      $session->shouldReceive('has')->with('errors')->andReturn(true);
      $session->shouldReceive('get')->with('errors')->andReturn($messageBag);
    } else {
      $session->shouldReceive('has')->with('errors')->andReturn(false);
      $session->shouldReceive('get')->with('errors')->andReturn(null);
    }

    return $session;
  }

  /**
   * Mock a MessageBag instance
   *
   * @param  array $errors
   *
   * @return Mockery
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||