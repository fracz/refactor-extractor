	public static function ul($items, $options = array())
	{
		if (empty($items)) {
			return '';
		}
		$tag = isset($options['tag']) ? $options['tag'] : 'ul';
		$encode = !isset($options['encode']) || $options['encode'];
		$formatter = isset($options['item']) ? $options['item'] : null;
		$itemOptions = isset($options['itemOptions']) ? $options['itemOptions'] : array();
		unset($options['tag'], $options['encode'], $options['item'], $options['itemOptions']);
		$results = array();
		foreach ($items as $index => $item) {
			if ($formatter !== null) {
				$results[] = call_user_func($formatter, $item, $index);
			} else {
				$results[] = static::tag('li', $encode ? static::encode($item) : $item, $itemOptions);
			}
		}
		return static::tag($tag, "\n" . implode("\n", $results) . "\n", $options);
	}

	/**
	 * Generates an ordered list.
	 * @param array|\Traversable $items the items for generating the list. Each item generates a single list item.
	 * Note that items will be automatically HTML encoded if `$options['encode']` is not set or true.
	 * @param array $options options (name => config) for the radio button list. The following options are supported:
	 *
	 * - encode: boolean, whether to HTML-encode the items. Defaults to true.
	 *   This option is ignored if the `item` option is specified.
	 * - itemOptions: array, the HTML attributes for the `li` tags. This option is ignored if the `item` option is specified.
	 * - item: callable, a callback that is used to generate each individual list item.
	 *   The signature of this callback must be:
	 *
	 * ~~~
	 * function ($item, $index)
	 * ~~~
	 *
	 * where $index is the array key corresponding to `$item` in `$items`. The callback should return
	 * the whole list item tag.
	 *
	 * @return string the generated ordered list. An empty string is returned if `$items` is empty.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_CONDITIONAL
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR)))
                                        (AST_VAR))
                                    (AST_VAR)))))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (SCALAR))
                (AST_VAR)))))||||||||