	public static function filterPath($path, $options)
	{
		if (isset($options['filter'])) {
			$result = call_user_func($options['filter'], $path);
			if (is_bool($result)) {
				return $result;
			}
		}
		$path = str_replace('\\', '/', $path);
		if ($isDir = is_dir($path)) {
			$path .= '/';
		}
		$n = StringHelper2::strlen($path);

		if (!empty($options['except'])) {
			foreach ($options['except'] as $name) {
				if (StringHelper2::substr($path, -StringHelper2::strlen($name), $n) === $name) {
					return false;
				}
			}
		}

		if (!$isDir && !empty($options['only'])) {
			foreach ($options['only'] as $name) {
				if (StringHelper2::substr($path, -StringHelper2::strlen($name), $n) === $name) {
					return true;
				}
			}
			return false;
		}
		return true;
	}

	/**
	 * Makes directory.
	 *
	 * This method is similar to the PHP `mkdir()` function except that
	 * it uses `chmod()` to set the permission of the created directory
	 * in order to avoid the impact of the `umask` setting.
	 *
	 * @param string $path path to be created.
	 * @param integer $mode the permission to be set for created directory.
	 * @param boolean $recursive whether to create parent directories if they do not exist.
	 * @return boolean whether the directory is created successfully
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_UNARY_OP
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR))))
                                            (AST_VAR)))
                                    (AST_VAR))
                                (
                                    (AST_RETURN
                                        (AST_CONST))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR)
                                            (AST_UNARY_OP
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR))))
                                            (AST_VAR)))
                                    (AST_VAR))
                                (
                                    (AST_RETURN
                                        (AST_CONST)))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||