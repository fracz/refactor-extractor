    protected function findConstraints($table)
    {
        $sql = <<<EOD
        SELECT D.constraint_type as CONSTRAINT_TYPE, C.COLUMN_NAME, C.position, D.r_constraint_name,
                E.table_name as table_ref, f.column_name as column_ref,
                C.table_name
        FROM ALL_CONS_COLUMNS C
        inner join ALL_constraints D on D.OWNER = C.OWNER and D.constraint_name = C.constraint_name
        left join ALL_constraints E on E.OWNER = D.r_OWNER and E.constraint_name = D.r_constraint_name
        left join ALL_cons_columns F on F.OWNER = E.OWNER and F.constraint_name = E.constraint_name and F.position = c.position
        WHERE C.OWNER = '{$table->schemaName}'
           and C.table_name = '{$table->name}'
           and D.constraint_type <> 'P'
        order by d.constraint_name, c.position
EOD;
        $command = $this->db->createCommand($sql);
        foreach ($command->queryAll() as $row) {
            if ($row['CONSTRAINT_TYPE'] === 'R') {
                $name = $row["COLUMN_NAME"];
                $table->foreignKeys[$name] = [$row["TABLE_REF"], $row["COLUMN_REF"]];
            }
        }
    }

    /**
     * @inheritdoc
     */
||||||||    protected function findConstraints($table)
    {
        $sql = <<<EOD
        SELECT D.constraint_type as CONSTRAINT_TYPE, C.COLUMN_NAME, C.position, D.constraint_name, D.r_constraint_name,
                E.table_name as table_ref, f.column_name as column_ref,
                C.table_name
        FROM ALL_CONS_COLUMNS C
        inner join ALL_constraints D on D.OWNER = C.OWNER and D.constraint_name = C.constraint_name
        left join ALL_constraints E on E.OWNER = D.r_OWNER and E.constraint_name = D.r_constraint_name
        left join ALL_cons_columns F on F.OWNER = E.OWNER and F.constraint_name = E.constraint_name and F.position = c.position
        WHERE C.OWNER = '{$table->schemaName}'
           and C.table_name = '{$table->name}'
           and D.constraint_type <> 'P'
        order by d.constraint_name, c.position
EOD;
        $command = $this->db->createCommand($sql);
        $constraints = [];
        foreach ($command->queryAll() as $row) {
            if ($this->db->slavePdo->getAttribute(\PDO::ATTR_CASE) === \PDO::CASE_LOWER) {
                $row = array_change_key_case($row, CASE_UPPER);
            }
            if ($row['CONSTRAINT_TYPE'] === 'R') {
                $name = $row['CONSTRAINT_NAME'];
                if (!isset($constraints[$name])) {
                    $constraints[$name] = [
                        'tableName' => $row["TABLE_REF"],
                        'columns' => [],
                    ];
                }
                $constraints[$name]['columns'][$row["COLUMN_NAME"]] = $row["COLUMN_REF"];
            }
        }
        foreach ($constraints as $constraint) {
            $table->foreignKeys[] = array_merge([$constraint['tableName']], $constraint['columns']);
        }
    }

    /**
     * @inheritdoc
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (NULL))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (AST_ARRAY)
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (NULL))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (NULL)))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))))))