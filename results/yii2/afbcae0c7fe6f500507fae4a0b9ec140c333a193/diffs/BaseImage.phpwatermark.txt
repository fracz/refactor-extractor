	public static function watermark($filename, $watermarkFilename, $start = [0, 0])
	{
		if (is_array($start)) {
			if (isset($start[0], $start[1])) {
				$start = new Point($start[0], $start[1]);
			} else {
				throw new InvalidParamException('$start must be an array of two elements.');
			}
		}

		if ($start instanceof Point) {
			$img = static::getImagine()->open(Yii::getAlias($filename));
			$watermark = static::getImagine()->open(Yii::getAlias($watermarkFilename));
			return $img->paste($watermark, $start);
		} else {
			throw new InvalidParamException('$start must be either an array or an "Imagine\\Image\\Point" object.');
		}
	}

	/**
	 * Draws a text string on an existing image.
	 * @param string $filename the image file path or path alias.
	 * @param string $text the text to write to the image
	 * @param array $fontOptions the font options. The following options may be specified:
	 *
	 * - font: The path to the font file to use to style the text. This option is required.
	 * - color: The font color. Defaults to "fff".
	 * - size: The font size. Defaults to 12.
	 * - x: The X position to write the text. Defaults to 5.
	 * - y: The Y position to write the text. Defaults to 5.
	 * - angle: The angle to use to write the text. Defaults to 0.
	 *
	 * @return ImageInterface
	 * @throws InvalidParamException if `$fontOptions` is invalid
	 */
||||||||	public static function watermark($filename, $watermarkFilename, array $start = [0, 0])
	{
		if (!isset($start[0], $start[1])) {
			throw new InvalidParamException('$start must be an array of two elements.');
		}

		$img = static::getImagine()->open(Yii::getAlias($filename));
		$watermark = static::getImagine()->open(Yii::getAlias($watermarkFilename));
		return $img->paste($watermark, new Point($start[0], $start[1]));
	}

	/**
	 * Draws a text string on an existing image.
	 * @param string $filename the image file path or path alias.
	 * @param string $text the text to write to the image
	 * @param string $fontFile the file path or path alias
	 * @param array $start the starting position of the text. This must be an array with two elements representing `x` and `y` coordinates.
	 * @param array $fontOptions the font options. The following options may be specified:
	 *
	 * - color: The font color. Defaults to "fff".
	 * - size: The font size. Defaults to 12.
	 * - angle: The angle to use to write the text. Defaults to 0.
	 *
	 * @return ImageInterface
	 * @throws InvalidParamException if `$fontOptions` is invalid
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))))))