	public static function text($filename, $text, array $fontOptions)
	{
		$font = ArrayHelper::getValue($fontOptions, 'font');
		if ($font === null) {
			throw new InvalidParamException('$fontOptions must contain a "font" key specifying which font file to use.');
		}

		$fontSize = ArrayHelper::getValue($fontOptions, 'size', 12);
		$fontColor = ArrayHelper::getValue($fontOptions, 'color', 'fff');
		$fontPosX = ArrayHelper::getValue($fontOptions, 'x', 5);
		$fontPosY = ArrayHelper::getValue($fontOptions, 'y', 5);
		$fontAngle = ArrayHelper::getValue($fontOptions, 'angle', 0);

		$img = static::getImagine()->open(Yii::getAlias($filename));
		$font = static::getImagine()->font(Yii::getAlias($font), $fontSize, new Color($fontColor));

		return $img->draw()->text($text, $font, new Point($fontPosX, $fontPosY), $fontAngle);
	}

	/**
	 * Adds a frame around of the image. Please note that the image size will increase by `$margin` x 2.
	 * @param string $filename the full path to the image file
	 * @param integer $margin the frame size to add around the image
	 * @param string $color the frame color
	 * @param integer $alpha the alpha value of the frame.
	 * @return ImageInterface
	 */
||||||||	public static function text($filename, $text, $fontFile, array $start = [0, 0], array $fontOptions = [])
	{
		if (!isset($start[0], $start[1])) {
			throw new InvalidParamException('$start must be an array of two elements.');
		}

		$fontSize = ArrayHelper::getValue($fontOptions, 'size', 12);
		$fontColor = ArrayHelper::getValue($fontOptions, 'color', 'fff');
		$fontAngle = ArrayHelper::getValue($fontOptions, 'angle', 0);

		$img = static::getImagine()->open(Yii::getAlias($filename));
		$font = static::getImagine()->font(Yii::getAlias($fontFile), $fontSize, new Color($fontColor));

		return $img->draw()->text($text, $font, new Point($start[0], $start[1]), $fontAngle);
	}

	/**
	 * Adds a frame around of the image. Please note that the image size will increase by `$margin` x 2.
	 * @param string $filename the full path to the image file
	 * @param integer $margin the frame size to add around the image
	 * @param string $color the frame color
	 * @param integer $alpha the alpha value of the frame.
	 * @return ImageInterface
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))
                (AST_VAR)))))