	public function actionMark($version)
	{
		$originalVersion = $version;
		if (preg_match('/^m?(\d{6}_\d{6})(_.*?)?$/', $version, $matches)) {
			$version = 'm' . $matches[1];
		} else {
			throw new Exception("The version argument must be either a timestamp (e.g. 101129_185401)\nor the full name of a migration (e.g. m101129_185401_create_user_table).");
		}

		// try mark up
		$migrations = $this->getNewMigrations();
		foreach ($migrations as $i => $migration) {
			if (strpos($migration, $version . '_') === 0) {
				if ($this->confirm("Set migration history at $originalVersion?")) {
					$command = $this->db->createCommand();
					for ($j = 0; $j <= $i; ++$j) {
						$command->insert($this->migrationTable, array(
							'version' => $migrations[$j],
							'apply_time' => time(),
						))->execute();
					}
					echo "The migration history is set at $originalVersion.\nNo actual migration was performed.\n";
				}
				return;
			}
		}

		// try mark down
		$migrations = array_keys($this->getMigrationHistory(-1));
		foreach ($migrations as $i => $migration) {
			if (strpos($migration, $version . '_') === 0) {
				if ($i === 0) {
					echo "Already at '$originalVersion'. Nothing needs to be done.\n";
				} else {
					if ($this->confirm("Set migration history at $originalVersion?")) {
						$command = $this->db->createCommand();
						for ($j = 0; $j < $i; ++$j) {
							$command->delete($this->migrationTable, array(
								'version' => $migrations[$j],
							))->execute();
						}
						echo "The migration history is set at $originalVersion.\nNo actual migration was performed.\n";
					}
				}
				return;
			}
		}

		throw new Exception("Unable to find the version '$originalVersion'.");
	}

	/**
	 * Displays the migration history.
	 *
	 * This command will show the list of migrations that have been applied
	 * so far. For example,
	 *
	 * ~~~
	 * yii migrate/history     # showing the last 10 migrations
	 * yii migrate/history 5   # showing the last 5 migrations
	 * yii migrate/history 0   # showing the whole history
	 * ~~~
	 *
	 * @param integer $limit the maximum number of migrations to be displayed.
	 * If it is 0, the whole migration history will be displayed.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_FOR
                                        (AST_EXPR_LIST
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_EXPR_LIST
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (AST_EXPR_LIST
                                            (AST_PRE_INC
                                                (AST_VAR)))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (AST_VAR))
                                                                (SCALAR))
                                                            (AST_ARRAY_ELEM
                                                                (AST_CALL)
                                                                (SCALAR))))))))
                                    (AST_ECHO
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_RETURN
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_UNARY_OP
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ECHO
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (AST_FOR
                                                    (AST_EXPR_LIST
                                                        (AST_ASSIGN
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (AST_EXPR_LIST
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (AST_VAR)))
                                                    (AST_EXPR_LIST
                                                        (AST_PRE_INC
                                                            (AST_VAR)))
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_ARRAY
                                                                        (AST_ARRAY_ELEM
                                                                            (AST_DIM
                                                                                (AST_VAR)
                                                                                (AST_VAR))
                                                                            (SCALAR))))))))
                                                (AST_ECHO
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR)
                                                        (SCALAR)))))))))
                        (AST_RETURN
                            (NULL)))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))))))||||||||