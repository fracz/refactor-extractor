	protected function renderBodyEndHtml()
	{
		$lines = array();
		if (!empty($this->jsFiles[self::POS_END])) {
			$lines[] = implode("\n", $this->jsFiles[self::POS_END]);
		}
		if (!empty($this->js[self::POS_END])) {
			$lines[] = Html::script(implode("\n", $this->js[self::POS_END]), array('type' => 'text/javascript'));
		}
		if (!empty($this->js[self::POS_READY])) {
			$js = "jQuery(document).ready(function(){\n" . implode("\n", $this->js[self::POS_READY]) . "\n});";
			$lines[] = Html::script($js, array('type' => 'text/javascript'));
		}
		return empty($lines) ? '' : implode("\n", $lines) . "\n";
	}
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_DIM
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR))))))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_VAR))
            (SCALAR)
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)))
                (SCALAR)))))||||||||