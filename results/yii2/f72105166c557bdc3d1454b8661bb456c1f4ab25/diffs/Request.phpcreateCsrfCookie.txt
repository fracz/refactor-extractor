	protected function createCsrfCookie()
	{
		$options = $this->csrfCookie;
		$options['name'] = $this->csrfTokenName;
		$options['value'] = sha1(uniqid(mt_rand(), true));
		return new Cookie($options);
	}

	/**
	 * Performs the CSRF validation.
	 * The method will compare the CSRF token obtained from a cookie and from a POST field.
	 * If they are different, a CSRF attack is detected and a 400 HTTP exception will be raised.
	 * @throws HttpException if the validation fails
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CALL)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)))))||||||||