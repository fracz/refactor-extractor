	public function validate($attributes = null, $clearErrors = true)
	{
		if ($clearErrors) {
			$this->clearErrors();
		}
		if ($attributes === null) {
			$attributes = $this->activeAttributes();
		}
		if ($this->beforeValidate()) {
			foreach ($this->getActiveValidators() as $validator) {
				$validator->validate($this, $attributes);
			}
			$this->afterValidate();
			return !$this->hasErrors();
		}
		return false;
	}

	/**
	 * This method is invoked before validation starts.
	 * The default implementation raises a `beforeValidate` event.
	 * You may override this method to do preliminary checks before validation.
	 * Make sure the parent implementation is invoked so that the event can be raised.
	 * @return boolean whether the validation should be executed. Defaults to true.
	 * If false is returned, the validation will stop and the model is considered invalid.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_RETURN
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||