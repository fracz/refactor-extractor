	public function init()
	{
		parent::init();
		if ($this->keyPrefix === null) {
			$this->keyPrefix = \Yii::$app->id;
		}
	}

	/**
	 * Builds a normalized cache key from a given key.
	 *
	 * The generated key contains letters and digits only, and its length is no more than 32.
	 *
	 * If the given key is a string containing alphanumeric characters only and no more than 32 characters,
	 * then the key will be returned back without change. Otherwise, a normalized key
	 * is generated by serializing the given key and applying MD5 hashing.
	 *
	 * The following example builds a cache key using three parameters:
	 *
	 * ~~~
	 * $key = $cache->buildKey($className, $method, $id);
	 * ~~~
	 *
	 * @param array|string $key the key to be normalized
	 * @return string the generated cache key
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_STATIC_PROP)))))))||||||||