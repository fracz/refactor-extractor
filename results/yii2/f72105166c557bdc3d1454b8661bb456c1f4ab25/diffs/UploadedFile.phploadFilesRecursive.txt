	private static function loadFilesRecursive($key, $names, $tempNames, $types, $sizes, $errors)
	{
		if (is_array($names)) {
			foreach ($names as $i => $name) {
				self::loadFilesRecursive($key . '[' . $i . ']', $name, $tempNames[$i], $types[$i], $sizes[$i], $errors[$i]);
			}
		} else {
			self::$_files[$key] = new self($names, $tempNames, $types, $sizes, $errors);
		}
	}
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))))||||||||