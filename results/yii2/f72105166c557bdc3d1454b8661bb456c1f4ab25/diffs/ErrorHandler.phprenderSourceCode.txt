	public function renderSourceCode($file, $errorLine, $maxLines)
	{
		$errorLine--; // adjust line number to 0-based from 1-based
		if ($errorLine < 0 || ($lines = @file($file)) === false || ($lineCount = count($lines)) <= $errorLine) {
			return;
		}

		$halfLines = (int)($maxLines / 2);
		$beginLine = $errorLine - $halfLines > 0 ? $errorLine - $halfLines : 0;
		$endLine = $errorLine + $halfLines < $lineCount ? $errorLine + $halfLines : $lineCount - 1;
		$lineNumberWidth = strlen($endLine + 1);

		$output = '';
		for ($i = $beginLine; $i <= $endLine; ++$i) {
			$isErrorLine = $i === $errorLine;
			$code = sprintf("<span class=\"ln" . ($isErrorLine ? ' error-ln' : '') . "\">%0{$lineNumberWidth}d</span> %s", $i + 1, $this->htmlEncode(str_replace("\t", '    ', $lines[$i])));
			if (!$isErrorLine) {
				$output .= $code;
			} else {
				$output .= '<span class="error">' . $code . '</span>';
			}
		}
		echo '<div class="code"><pre>' . $output . '</pre></div>';
	}

	/**
	 * Renders calls stack trace
	 * @param array $trace
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_POST_DEC
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))))
                        (AST_CONST)))
                (AST_BINARY_OP
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (SCALAR))
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR))
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CONDITIONAL
                                    (AST_VAR)
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_ECHO
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR))))||||||||