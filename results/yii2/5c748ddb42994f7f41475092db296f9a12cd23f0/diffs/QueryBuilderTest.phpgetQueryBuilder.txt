    protected function getQueryBuilder()
    {
        switch ($this->driverName) {
            case 'mysql':
                return new MysqlQueryBuilder($this->getConnection());
            case 'sqlite':
                return new SqliteQueryBuilder($this->getConnection());
            case 'mssql':
                return new MssqlQueryBuilder($this->getConnection());
            case 'pgsql':
                return new PgsqlQueryBuilder($this->getConnection());
            case 'cubrid':
                return new CubridQueryBuilder($this->getConnection());
        }
        throw new \Exception('Test is not implemented for ' . $this->driverName);
    }

    /**
     * this is not used as a dataprovider for testGetColumnType to speed up the test
     * when used as dataprovider every single line will cause a reconnect with the database which is not needed here
     */
||||||||    protected function getQueryBuilder()
    {
        switch ($this->driverName) {
            case 'mysql':
                return new MysqlQueryBuilder($this->getConnection(true, false));
            case 'sqlite':
                return new SqliteQueryBuilder($this->getConnection(true, false));
            case 'mssql':
                return new MssqlQueryBuilder($this->getConnection(true, false));
            case 'pgsql':
                return new PgsqlQueryBuilder($this->getConnection(true, false));
            case 'cubrid':
                return new CubridQueryBuilder($this->getConnection(true, false));
        }
        throw new \Exception('Test is not implemented for ' . $this->driverName);
    }

    /**
     * this is not used as a dataprovider for testGetColumnType to speed up the test
     * when used as dataprovider every single line will cause a reconnect with the database which is not needed here
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)
                                        (AST_CONST))))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)
                                        (AST_CONST))))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)
                                        (AST_CONST))))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)
                                        (AST_CONST))))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_CONST)
                                        (AST_CONST))))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR)))))))