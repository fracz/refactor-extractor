	public function __unset($name)
	{
		if ($this->hasAttribute($name)) {
			unset($this->_attributes[$name]);
		} else {
			if (isset($this->_related[$name])) {
				unset($this->_related[$name]);
			} else {
				parent::__unset($name);
			}
		}
	}

	/**
	 * Declares a `has-one` relation.
	 * The declaration is returned in terms of an [[ActiveRelation]] instance
	 * through which the related record can be queried and retrieved back.
	 *
	 * A `has-one` relation means that there is at most one related record matching
	 * the criteria set by this relation, e.g., a particular index has one source.
	 *
	 * For example, to declare the `source` relation for `ArticleIndex` class, we can write
	 * the following code in the `ArticleIndex` class:
	 *
	 * ~~~
	 * public function getSource()
	 * {
	 *     return $this->hasOne('db', ArticleContent::className(), ['article_id' => 'id']);
	 * }
	 * ~~~
	 *
	 * Note that in the above, the 'article_id' key in the `$link` parameter refers to an attribute name
	 * in the related class `ArticleContent`, while the 'id' value refers to an attribute name
	 * in the current AR class.
	 *
	 * Call methods declared in [[ActiveRelation]] to further customize the relation.
	 *
	 * @param string $class the class name of the related record
	 * @param array $link the primary-foreign key constraint. The keys of the array refer to
	 * the attributes in the `$class` model, while the values of the array refer to the corresponding
	 * attributes in the index associated with this AR class.
	 * @return ActiveRelationInterface the relation object.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (
                            (AST_UNSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))))))||||||||