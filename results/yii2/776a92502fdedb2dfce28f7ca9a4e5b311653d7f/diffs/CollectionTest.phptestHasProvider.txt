	public function testHasProvider()
	{
		$collection = new Collection();

		$providerName = 'testProviderName';
		$providers = [
			$providerName => [
				'class' => 'TestProvider1'
			],
		];
		$collection->setProviders($providers);

		$this->assertTrue($collection->hasProvider($providerName), 'Existing provider check fails!');
		$this->assertFalse($collection->hasProvider('unExistingProviderName'), 'Not existing provider check fails!');
	}
}

class TestProvider extends Object implements ProviderInterface
{
	use ProviderTrait;

	public function authenticate() {}
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR))))||||||||