	public static function run($event)
	{
		$options = array_merge(array(
			'run' => array(),
			'config' => null,
		), $event->getComposer()->getPackage()->getExtra());

		// resolve and include config file
		if (($options['config'] === null)) {
			throw new console\Exception('Config file not specified in composer.json extra.config');
		} else {
			if (!is_file(getcwd() . '/' . $options['config'])) {
				throw new console\Exception("Config file '{$options['config']}' specified in composer.json extra.config not found");
			} else {
				$config = require($options['config']);
			}
		}

		require(__DIR__ . '/../../../yii2/yii/Yii.php');

		foreach ((array)$options['run'] as $rawParams) {
			// TODO: we're doing about the same here like console\Request::resolve()
			$command = $rawParams[0];
			unset($rawParams[0]);
			$params[\yii\console\Request::ANONYMOUS_PARAMS] = $rawParams;
			// TODO end

			echo "Running command: {$command}\n";
			$application = new \yii\console\Application($config);
			$application->runAction($command, $params);
		}
	}
}||||||||	public static function run($event)
	{
		$options = array_merge(array(
			'run' => array(),
			'config' => null,
		), $event->getComposer()->getPackage()->getExtra());

		// resolve and include config file
		if (($options['config'] === null)) {
			throw new console\Exception('Config file not specified in composer.json extra.config');
		} else {
			if (!is_file(getcwd() . '/' . $options['config'])) {
				throw new console\Exception("Config file '{$options['config']}' specified in composer.json extra.config not found");
			} else {
				$config = require($options['config']);
			}
		}

		// prepare console application
		require(__DIR__ . '/../../../yii2/yii/Yii.php');
		$application = new \yii\console\Application($config);
		$request = $application->getRequest();

		// run commands from extra.run
		foreach ((array)$options['run'] as $rawCommand) {
			$opts = str_getcsv($rawCommand, ' '); // see http://stackoverflow.com/a/6609509/291573
			$request->setParams($opts);
			list($command, $params) = $request->resolve();
			echo "Running command: {$command}\n";
			$application->runAction($command, $params);
		}
	}
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CALL)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_INCLUDE_OR_EVAL
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_FOREACH
        (AST_CAST
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_UNSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_VAR))
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CALL)
                                            (SCALAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_INCLUDE_OR_EVAL
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_MAGIC_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_CAST
            (AST_DIM
                (AST_VAR)
                (SCALAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ECHO
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))