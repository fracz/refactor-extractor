    public function validateAttribute($object, $attribute)
    {
        $targetAttribute = $this->targetAttribute === null ? $attribute : $this->targetAttribute;

        if (is_array($targetAttribute)) {
            if ($this->allowArray) {
                throw new InvalidConfigException('The "targetAttribute" property must be configured as a string.');
            }
            $params = [];
            foreach ($targetAttribute as $k => $v) {
                $params[$v] = is_integer($k) ? $object->$v : $object->$k;
            }
        } else {
            $params = [$targetAttribute => $object->$attribute];
        }

        if (!$this->allowArray) {
            foreach ($params as $value) {
                if (is_array($value)) {
                    $this->addError($object, $attribute, Yii::t('yii', '{attribute} is invalid.'));

                    return;
                }
            }
        }

        $targetClass = $this->targetClass === null ? get_class($object) : $this->targetClass;
        $query = $this->createQuery($targetClass, $params);

        if (is_array($object->$attribute)) {
            if ($query->count("DISTINCT [[$targetAttribute]]") == count($object->$attribute)) {
                return;
            }
        } elseif ($query->exists()) {
            return;
        }

        $this->addError($object, $attribute, $this->message);
    }

    /**
     * @inheritdoc
     */
||||||||    public function validateAttribute($object, $attribute)
    {
        $targetAttribute = $this->targetAttribute === null ? $attribute : $this->targetAttribute;

        if (is_array($targetAttribute)) {
            if ($this->allowArray) {
                throw new InvalidConfigException('The "targetAttribute" property must be configured as a string.');
            }
            $params = [];
            foreach ($targetAttribute as $k => $v) {
                $params[$v] = is_integer($k) ? $object->$v : $object->$k;
            }
        } else {
            $params = [$targetAttribute => $object->$attribute];
        }

        if (!$this->allowArray) {
            foreach ($params as $value) {
                if (is_array($value)) {
                    $this->addError($object, $attribute, Yii::t('yii', '{attribute} is invalid.'));

                    return;
                }
            }
        }

        $targetClass = $this->targetClass === null ? get_class($object) : $this->targetClass;
        $query = $this->createQuery($targetClass, $params);

        if (is_array($object->$attribute)) {
            if ($query->count("DISTINCT [[$targetAttribute]]") != count($object->$attribute)) {
                $this->addError($object, $attribute, $this->message);
            }
        } elseif (!$query->exists()) {
            $this->addError($object, $attribute, $this->message);
        }
    }

    /**
     * @inheritdoc
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)))))
                                    (AST_RETURN
                                        (NULL))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_RETURN
                                (NULL)))))))
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR)))))
                                    (AST_RETURN
                                        (NULL))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))))