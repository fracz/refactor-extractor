	protected function mockApplication()
	{
		$baseConfig = is_array(static::$applicationConfig) ? static::$applicationConfig : require(Yii::getAlias(static::$applicationConfig));
		$config = is_array($this->config)? $this->config : require(Yii::getAlias($this->config));
		new $this->applicationClass(ArrayHelper::merge($baseConfig,$config));
	}

	/**
	 * Destroys an application created via [[mockApplication]].
	 */
||||||||	protected function mockApplication($config = null)
	{
		return new static::$appClass($config === null ? static::$appConfig : $config);
	}

	/**
	 * Destroys the application instance created by [[mockApplication]].
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_STATIC_PROP)))
            (AST_STATIC_PROP)
            (AST_INCLUDE_OR_EVAL
                (AST_STATIC_CALL
                    (
                        (AST_STATIC_PROP))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_PROP
                (AST_VAR))
            (AST_INCLUDE_OR_EVAL
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_NEW
        (AST_PROP
            (AST_VAR))
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_NEW
            (AST_STATIC_PROP)
            (
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_STATIC_PROP)
                    (AST_VAR))))))