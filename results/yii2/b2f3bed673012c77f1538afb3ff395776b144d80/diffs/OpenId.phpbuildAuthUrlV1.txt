||||||||	protected function buildAuthUrlV1()
	{
		$returnUrl = $this->returnUrl;
		/* If we have an openid.delegate that is different from our claimed id,
		we need to somehow preserve the claimed id between requests.
		The simplest way is to just send it along with the return_to url.*/
		if ($this->identity != $this->claimed_id) {
			$returnUrl .= (strpos($returnUrl, '?') ? '&' : '?') . 'openid.claimed_id=' . $this->claimed_id;
		}

		$params = array_merge(
			$this->sregParams(),
			[
				'openid.return_to' => $returnUrl,
				'openid.mode' => 'checkid_setup',
				'openid.identity' => $this->identity,
				'openid.trust_root' => $this->trustRoot,
			]
		);

		return $this->buildUrl(parse_url($this->server), ['query' => http_build_query($params, '', '&')]);
	}

	/**
	 * Builds authentication URL for the protocol version 2.
	 * @param boolean $identifierSelect whether to request OP to select identity for an user.
	 * @return string authentication URL.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CONDITIONAL
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (SCALAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR)))))))