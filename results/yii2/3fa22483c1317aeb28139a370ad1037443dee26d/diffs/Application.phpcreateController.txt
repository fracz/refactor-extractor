	public function createController($id, $module)
	{
		if (isset($module->controllerMap[$id])) {
			return Yii::createObject($module->controllerMap[$id], $id, $module);
		} elseif (preg_match('/^[a-z0-9\\-_]+$/', $id)) {
			$className = StringHelper::id2camel($id) . 'Controller';
			$classFile = $module->controllerPath . DIRECTORY_SEPARATOR . $className . '.php';
			if (is_file($classFile)) {
				$className = $module->controllerNamespace . '\\' . $className;
				if (!class_exists($className, false)) {
					require($classFile);
				}
				if (class_exists($className, false) && is_subclass_of($className, '\yii\base\Controller')) {
					return new $className($id, $module);
				}
			}
		}
		return null;
	}

	/**
	 * Creates an action based on the given action ID.
	 * The action is created within the given controller. The method first attempts to
	 * create the action based on [[Controller::actions()]]. If not available,
	 * it will look for the inline action method within the controller.
	 * @param string $id the action ID
	 * @param Controller $controller the controller that owns the action
	 * @return Action the newly created action instance
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_VAR))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST))))
                                    (
                                        (AST_INCLUDE_OR_EVAL
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_RETURN
                                            (AST_NEW
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))))
    (AST_RETURN
        (AST_CONST)))||||||||