||||||||	public function runAction($id, $params = array())
	{
		if ($id === '') {
			$id = $this->defaultAction;
		}

		$action = $this->createAction($id);
		if ($action !== null) {
			$oldAction = $this->action;
			$this->action = $action;

			if ($this->authorize($action) && $this->beforeAction($action)) {
				$status = $action->runWithParams($params);
				$this->afterAction($action);
			} else {
				$status = 1;
			}

			$this->action = $oldAction;

			return $status;
		} else {
			throw new InvalidRouteException('Unable to resolve the request: ' . $this->getUniqueId() . '/' . $id);
		}
	}

	/**
	 * Runs a request specified in terms of a route.
	 * The route can be either an ID of an action within this controller or a complete route consisting
	 * of module IDs, controller ID and action ID. If the route starts with a slash '/', the parsing of
	 * the route will start from the application; otherwise, it will start from the parent module of this controller.
	 * @param string $route the route to be handled, e.g., 'view', 'comment/view', '/admin/comment/view'.
	 * @param array $params the parameters to be passed to the action.
	 * @return integer the status code returned by the action execution. 0 means normal, and other values mean abnormal.
	 * @see runAction
	 * @see forward
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))
                                (AST_VAR)))))))))