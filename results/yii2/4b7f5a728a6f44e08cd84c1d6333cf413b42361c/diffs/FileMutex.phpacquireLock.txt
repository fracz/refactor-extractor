	protected function acquireLock($name, $timeout = 0)
	{
		$file = fopen($this->mutexPath . '/' . md5($name) . '.lock', 'w+');
		if ($file === false) {
			return false;
		}
		$waitTime = 0;
		while (!flock($file, LOCK_EX | LOCK_NB)) {
			$waitTime++;
			if ($waitTime > $timeout) {
				fclose($file);
				return false;
			}
			sleep(1);
		}
		$this->_files[$name] = $file;
		return true;
	}

	/**
	 * Releases lock by given name.
	 * @param string $name of the lock to be released.
	 * @return boolean release result.
	 */
||||||||	protected function acquireLock($name, $timeout = 0)
	{
		$fileName = $this->mutexPath . '/' . md5($name) . '.lock';
		$file = fopen($fileName, 'w+');
		if ($file === false) {
			return false;
		}
		if ($this->fileMode !== null) {
			@chmod($fileName, $this->fileMode);
		}
		$waitTime = 0;
		while (!flock($file, LOCK_EX | LOCK_NB)) {
			$waitTime++;
			if ($waitTime > $timeout) {
				fclose($file);
				return false;
			}
			sleep(1);
		}
		$this->_files[$name] = $file;
		return true;
	}

	/**
	 * Releases lock by given name.
	 * @param string $name of the lock to be released.
	 * @return boolean release result.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (SCALAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_CONST)))))
        (
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_UNARY_OP
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_CONST)))))
        (
            (AST_POST_INC
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_CONST)))