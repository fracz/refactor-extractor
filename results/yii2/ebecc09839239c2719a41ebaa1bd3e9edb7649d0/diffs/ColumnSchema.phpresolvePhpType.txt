	public function resolvePhpType()
	{
		static $typeMap = array( // logical type => php type
			'smallint' => 'integer',
			'integer' => 'integer',
			'bigint' => 'integer',
			'boolean' => 'boolean',
			'float' => 'double',
		);
		if (isset($typeMap[$this->type])) {
			if ($this->type === 'bigint') {
				$this->phpType = PHP_INT_SIZE == 8 && !$this->unsigned ? 'integer' : 'string';
			} elseif ($this->type === 'integer') {
				$this->phpType = PHP_INT_SIZE == 4 && $this->unsigned ? 'string' : 'integer';
			} else {
				$this->phpType = $typeMap[$this->type];
			}
		} else {
			$this->phpType = 'string';
		}
	}

	/**
	 * Converts the input value according to [[phpType]].
	 * If the value is null or an [[Expression]], it will not be converted.
	 * @param mixed $value input value
	 * @return mixed converted value
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_UNARY_OP
                                            (AST_PROP
                                                (AST_VAR))))
                                    (SCALAR)
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONDITIONAL
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (SCALAR)
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))))||||||||