	public function clientValidateAttribute($object, $attribute)
	{
		$captcha = $this->getCaptchaAction();
		$message = $this->message !== null ? $this->message : \Yii::t('yii', 'The verification code is incorrect.');
		$message = strtr($message, array(
			'{attribute}' => $object->getAttributeLabel($attribute),
			'{value}' => $object->$attribute,
		));
		$code = $captcha->getVerifyCode(false);
		$hash = $captcha->generateValidationHash($this->caseSensitive ? $code : strtolower($code));
		$js = "
var hash = $('body').data(' {$this->captchaAction}.hash');
if (hash == null)
	hash = $hash;
else
	hash = hash[" . ($this->caseSensitive ? 0 : 1) . "];
for(var i=value.length-1, h=0; i >= 0; --i) h+=value." . ($this->caseSensitive ? '' : 'toLowerCase().') . "charCodeAt(i);
if(h != hash) {
	messages.push(" . json_encode($message) . ");
}
";

		if ($this->allowEmpty) {
			$js = "
if($.trim(value)!='') {
	$js
}
";
		}

		return $js;
	}
}
||||||||	public function clientValidateAttribute($object, $attribute)
	{
		$captcha = $this->getCaptchaAction();
		$message = $this->message !== null ? $this->message : \Yii::t('yii:The verification code is incorrect.');
		$message = strtr($message, array(
			'{attribute}' => $object->getAttributeLabel($attribute),
			'{value}' => $object->$attribute,
		));
		$code = $captcha->getVerifyCode(false);
		$hash = $captcha->generateValidationHash($this->caseSensitive ? $code : strtolower($code));
		$js = "
var hash = $('body').data(' {$this->captchaAction}.hash');
if (hash == null)
	hash = $hash;
else
	hash = hash[" . ($this->caseSensitive ? 0 : 1) . "];
for(var i=value.length-1, h=0; i >= 0; --i) h+=value." . ($this->caseSensitive ? '' : 'toLowerCase().') . "charCodeAt(i);
if(h != hash) {
	messages.push(" . json_encode($message) . ");
}
";

		if ($this->allowEmpty) {
			$js = "
if($.trim(value)!='') {
	$js
}
";
		}

		return $js;
	}
}
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_PROP
                (AST_VAR))
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONDITIONAL
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONDITIONAL
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (AST_PROP
                (AST_VAR))
            (AST_STATIC_CALL
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CONDITIONAL
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_CONDITIONAL
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR)
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))