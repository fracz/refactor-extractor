	public function run()
	{
		$this->beforeRun();
		$response = $this->getResponse();
		$response->begin();
		$status = $this->processRequest();
		$response->end();
		$this->afterRun();
		return $status;
	}

	/**
	 * Raises the [[EVENT_BEFORE_RUN]] event right BEFORE the application processes the request.
	 */
||||||||	public function run()
	{
		$this->beforeRun();
		$response = $this->getResponse();
		$response->begin();
		register_shutdown_function(array($this, 'end'), 0, false);
		$status = $this->processRequest();
		$response->end();
		$this->afterRun();
		return $status;
	}

	/**
	 * Raises the [[EVENT_BEFORE_RUN]] event right BEFORE the application processes the request.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))