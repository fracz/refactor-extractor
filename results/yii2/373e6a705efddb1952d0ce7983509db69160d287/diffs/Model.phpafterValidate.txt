	public function afterValidate()
	{
		$this->trigger('afterValidate');
	}

	/**
	 * Returns all the validators declared in [[rules()]].
	 *
	 * This method differs from [[getActiveValidators()]] in that the latter
	 * only returns the validators applicable to the current [[scenario]].
	 *
	 * Because this method returns a [[Vector]] object, you may
	 * manipulate it by inserting or removing validators (useful in model behaviors).
	 * For example,
	 *
	 * ~~~
	 * $model->validators->add($newValidator);
	 * ~~~
	 *
	 * @return Vector all the validators declared in the model.
	 */
||||||||	public function afterValidate()
	{
		$this->trigger(self::EVENT_AFTER_VALIDATE);
	}

	/**
	 * Returns all the validators declared in [[rules()]].
	 *
	 * This method differs from [[getActiveValidators()]] in that the latter
	 * only returns the validators applicable to the current [[scenario]].
	 *
	 * Because this method returns a [[Vector]] object, you may
	 * manipulate it by inserting or removing validators (useful in model behaviors).
	 * For example,
	 *
	 * ~~~
	 * $model->validators->add($newValidator);
	 * ~~~
	 *
	 * @return Vector all the validators declared in the model.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLASS_CONST
                (SCALAR)))))