    public function ufDate($value, $targetFormat = 'db', $inputFormat = null, $formatType = 'php'){
        if ($targetFormat === 'db'){
            return asDate($value, 'db', $inputFormat, $formatType);
        } elseif ($targetFormat === 'timestamp'){
            return asTimestamp($value, $inputFormat, $formatType);
        } else {
            throw new InvalidParamException('targetFormat must be "db" or "timestamp". Your value is ' . $value );
        }
    }

    /**
     * Formats the value as a time.
     * @param integer|string|DateTime $value the value to be formatted. The following
     * types of value are supported:
     *
     * - an integer representing a UNIX timestamp
     * - a string that can be parsed into a UNIX timestamp via `strtotime()`
     * - a PHP DateTime object
     *
     * @param string $format the format used to convert the value into a date string.
     * If null, [[timeFormat]] will be used. The format string should be one
     * that can be recognized by the PHP `date()` function.
     * @return string the formatted result
     * @see timeFormat
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))))))))||||||||