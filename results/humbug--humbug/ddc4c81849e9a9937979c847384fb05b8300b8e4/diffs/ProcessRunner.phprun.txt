    public function run(
        PhpProcess $process,
        AdapterAbstract $testFrameworkAdapter,
        \Closure $onProgressCallback = null
    ) {
        $hasFailure = false;

        $process->start();
        usleep(1000);
        while ($process->isRunning()) {
            usleep(2500);
            if (($count = $testFrameworkAdapter->hasOks($process->getOutput()))) {
                if ($onProgressCallback) {
                    $onProgressCallback($count);
                }
                $process->clearOutput();
            } elseif (!$testFrameworkAdapter->ok($process->getOutput())) {
                sleep(1);
                $hasFailure = true;
                break;
            }
        }
        $process->stop();

        return $hasFailure;
    }
}||||||||    public function run(
        PhpProcess $process,
        AdapterAbstract $testFrameworkAdapter,
        \Closure $onProgressCallback = null
    ) {
        $hasFailure = false;

        $process->run(function($out, $data)
            use (
                $process,
                $testFrameworkAdapter,
                $onProgressCallback,
                &$hasFailure
        ) {
            if ($out == Process::ERR) {
                $hasFailure= true;
                $process->stop();
                return;
            }

            if ($hasFailure) {
                return;
            }

            if (!$testFrameworkAdapter->ok($data)) {
                $hasFailure = true;
                $process->stop();
                return;
            }

            $oksCount = $testFrameworkAdapter->hasOks($data);

            if ($oksCount && $onProgressCallback) {
                $onProgressCallback($oksCount);
            }
        });

        $process->stop();

        return $hasFailure;
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_CALL
        (
            (SCALAR)))
    (AST_WHILE
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))
                        (AST_BREAK
                            (NULL)))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_RETURN
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_RETURN
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST))
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_RETURN
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))