    public static function assembleConfiguration(Container $container, array $cases = [], $junitLog = null, $addMissingTests = false)
    {
        $conf = null;
        $dir = null;
        $testDir = $container->getTestRunDirectory();
        if (!empty($testDir)) {
            $dir = $testDir;
            $conf = $dir . '/phpunit.xml';
        } elseif (!file_exists($conf)) {
            $dir = $container->getBaseDirectory();
            $conf = $dir . '/phpunit.xml';
        }
        if (file_exists($conf)) {
            $conf = realpath($conf);
        } elseif (file_exists($conf . '.dist')) {
            $conf = realpath($conf . '.dist');
        } else {
            throw new RuntimeException('Unable to locate phpunit.xml(.dist) file. This is required by Humbug.');
        }
        if (!empty($dir)) {
            $dir .= '/';
        }
        $oldValue = libxml_disable_entity_loader(true);
        $dom = new \DOMDocument;
        $dom->preserveWhitespace = false;
        $dom->formatOutput = true;
        $dom->loadXML(file_get_contents($conf));
        libxml_disable_entity_loader($oldValue);

        $root = $dom->documentElement;
        $hasBootstrap = false;
        if ($root->hasAttribute('bootstrap')) {
            $hasBootstrap = true;
            $bootstrap = $root->getAttribute('bootstrap');
            $path = static::makeAbsolutePath($bootstrap, dirname($conf));
            //$root->setAttribute('bootstrap', $path);
            //$root->removeAttribute('bootstrap');
            $container->setBootstrap($path);
        }
        $root->setAttribute('bootstrap', sys_get_temp_dir() . '/humbug.phpunit.bootstrap.php');
        $root->setAttribute('cacheTokens', 'false');

        $xpath = new \DOMXPath($dom);

        /**
         * On first runs collect a test log and also generate code coverage
         */
        if (!is_null($junitLog)) {
            $logging = $dom->createElement('logging');
            $root->appendChild($logging);
            $log = $dom->createElement('log');
            $log->setAttribute('type', 'junit');
            $log->setAttribute('target', $junitLog);
            $log->setAttribute('logIncompleteSkipped', 'true');
            $logging->appendChild($log);

            /**
             * While we're here, reset code coverage filter to meet the known source
             * code constraints.
             */
            $filters = $xpath->query('/phpunit/filter');
            foreach ($filters as $filter) {
                $root->removeChild($filter);
            }
            $filter = $dom->createElement('filter');
            $whitelist = $dom->createElement('whitelist');
            $root->appendChild($filter);
            $filter->appendChild($whitelist);
            $source = $container->getSourceList();
            if (isset($source->directories)) {
                foreach ($source->directories as $d) {
                    $directory = $dom->createElement('directory', realpath($d));
                    $directory->setAttribute('suffix', '.php');
                    $whitelist->appendChild($directory);
                }
            }
            if (isset($source->excludes)) {
                $exclude = $dom->createElement('exclude');
                foreach ($source->excludes as $d) {
                    $directory = $dom->createElement('directory', realpath($d));
                    $exclude->appendChild($directory);
                }
                $whitelist->appendChild($exclude);
            }
        }


        $suites = $xpath->query('/phpunit/testsuites/testsuite');
        foreach ($suites as $suite) {
            foreach ($suite->childNodes as $node) {
                if ($node instanceof \DOMElement
                && ($node->tagName == 'directory'
                || $node->tagName == 'exclude'
                || $node->tagName == 'file')) {
                    if (0 === count(glob($node->nodeValue))) {
                        throw new RuntimeException('Unable to locate file specified in testsuites: ' . $node->nodeValue);
                    }

                    $node->nodeValue = static::makeAbsolutePath($node->nodeValue, dirname($conf));
                }
            }
        }

        $xpath = new \DOMXPath($dom);

        /**
         * Set any remaining file & directory references to realpaths
         */
        $directories = $xpath->query('//directory');
        foreach ($directories as $directory) {
            $directory->nodeValue = static::makeAbsolutePath($directory->nodeValue, dirname($conf));
        }
        $files = $xpath->query('//file');
        foreach ($files as $file) {
            $file->nodeValue = static::makeAbsolutePath($file->nodeValue, dirname($conf));
        }

        if (!empty($cases)) {

            // TODO: Handle >1 test suites
            $suite1 = $xpath->query('/phpunit/testsuites/testsuite')->item(0);
            if (is_a($suite1, 'DOMElement')) {
                foreach ($suite1->childNodes as $child) {
                    // phpunit.xml may omit bootstrap location but grab it automatically - include explicitly
                    if ($child instanceof \DOMElement && $child->tagName == 'directory' && $hasBootstrap === false) {
                        $bootstrapDir = static::makeAbsolutePath($child->nodeValue, dirname($conf));
                        if (file_exists($bootstrapDir . '/bootstrap.php')) {
                            $root->setAttribute('bootstrap', $bootstrapDir . '/bootstrap.php');
                        }
                    }
                    // we only want file references in specific order + excludes (for now, we retain these)
                    if ($child instanceof \DOMElement && $child->tagName !== 'exclude') {
                        $suite1->removeChild($child);
                    }
                }

                /**
                 * Add test files explicitly in order given
                 */
                $files = [];
                foreach ($cases as $case) {
                    $files[] = $case['file'];
                    $file = $dom->createElement('file', $case['file']);
                    $suite1->appendChild($file);
                }
                /**
                 * JUnit logging excludes some immeasurable tests so we'll add those back.
                 */
                if ($addMissingTests) {
                    $finder = new Finder;
                    $finder->name('*Test.php');
                    // TODO: Make sure this only ever includes tests!
                    foreach ($finder->in($container->getBaseDirectory())->exclude('vendor') as $file) {
                        if (!in_array($file->getRealpath(), $files)) {
                            $file = $dom->createElement('file', $file->getRealpath());
                            $suite1->appendChild($file);
                        }
                    }
                }
            }
        } else {
            // TODO: Handle >1 test suites
            $suite1 = $xpath->query('/phpunit/testsuites/testsuite')->item(0);
            if (is_a($suite1, 'DOMElement')) {
                foreach ($suite1->childNodes as $child) {
                    // phpunit.xml may omit bootstrap location but grab it if we can
                    if ($child instanceof \DOMElement && $child->tagName == 'directory' && $hasBootstrap === false) {
                        $bootstrapDir = static::makeAbsolutePath($child->nodeValue, dirname($conf));
                        if (file_exists($bootstrapDir . '/bootstrap.php')) {
                            $container->setBootstrap($bootstrapDir . '/bootstrap.php');
                            $hasBootstrap = true;
                        }
                    }
                }
            }
        }

        /**
         * Include any listeners
         */
        /*$listeners = $dom->createElement('listeners');
        $root->appendChild($listeners);
        $listener = $dom->createElement('listener');
        $listeners->appendChild($listener);
        $listener->setAttribute('class', '\\MyBuilder\\PhpunitAccelerator\\TestListener');
        $arguments = $dom->createElement('arguments');
        $listener->appendChild($arguments);
        $boolean = $dom->createElement('boolean');
        $arguments->appendChild($boolean);
        $boolean->nodeValue = 'true';*/


        $saveFile = $container->getCacheDirectory() . '/phpunit.humbug.xml';
        $dom->save($saveFile);
        return $saveFile;
    }


||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_INSTANCEOF
                                    (AST_VAR))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR)))))))
                                        (
                                            (AST_THROW
                                                (AST_NEW
                                                    (
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))))))))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_STATIC_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_INSTANCEOF
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))))
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_CALL
                                                            (
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))))
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (SCALAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_VAR)
                                                                        (SCALAR))))))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_INSTANCEOF
                                                    (AST_VAR))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_NEW))
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (AST_FOREACH
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR))))
                                                (
                                                    (SCALAR)))
                                            (AST_VAR)
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_CALL
                                                                (
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR))
                                                                    (AST_VAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR)
                                                                    (
                                                                        (SCALAR)
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR)))))
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_VAR))))))))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_FOREACH
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_INSTANCEOF
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_STATIC_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR))))))
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_CALL
                                                            (
                                                                (AST_BINARY_OP
                                                                    (AST_VAR)
                                                                    (SCALAR))))
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_BINARY_OP
                                                                        (AST_VAR)
                                                                        (SCALAR))))
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_CONST))))))))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||