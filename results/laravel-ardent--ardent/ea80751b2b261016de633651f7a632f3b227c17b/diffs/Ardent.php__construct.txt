    public function __construct( array $attributes = array() ) {

        parent::__construct( $attributes );
        $this->validationErrors = new MessageBag;

        $this->purgeFilters[] = function ( $attributeKey ) {
            $len = strlen( '_confirmation' );

            if ( strlen( $attributeKey ) > $len && strcmp( substr( $attributeKey, -$len ), '_confirmation' ) == 0 ) {
                return false;
            }

            return true;
        };
    }

    /**
     * Determine if a given string ends with a given needle.
     *
     * @param string  $haystack
     * @param string  $needle
     * @return bool
     */
||||||||    public function __construct( array $attributes = array() ) {

        parent::__construct( $attributes );
        $this->validationErrors = new MessageBag;

        $this->purgeFilters[] = function ( $attributeKey ) {
            // disallow password confirmation fields
            if ( $this->endsWith( $attributeKey, '_confirmation' ) )
                return false;

            // "_method" is used by Illuminate\Routing\Router to simulate custom HTTP verbs
            if ( strcmp( $attributeKey, '_method' ) === 0 )
                return false;

            return true;
        };
    }

    /**
     * Determine if a given string ends with a given needle.
     *
     * @param string  $haystack
     * @param string  $needle
     * @return bool
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_UNARY_OP
                                                    (AST_VAR))))
                                        (SCALAR)))
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_RETURN
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULT)
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR)))
                            (SCALAR))
                        (
                            (AST_RETURN
                                (AST_CONST)))))
                (AST_RETURN
                    (AST_CONST))))))