	private function __frameIndicator($mapping, $uuid, $value, $extraIndent = false) {
		$padding = 6;
		if ($extraIndent) {
			$padding = 8;
		}
		$this->final[] = str_repeat(' ', $padding) . '<IndicatorItem id="' . h($uuid) . '" condition="is">';
		$this->final[] = str_repeat(' ', ($padding + 2)) . '<Context document="' . $mapping[0] . '" search="' . $mapping[1] . '" type="mir" />';
		$this->final[] = str_repeat(' ', ($padding + 2)) . '<Content type="' . $mapping[2] . '">' . h($value) . '</Content>';
		$this->final[] = str_repeat(' ', $padding) . '</IndicatorItem>';
	}

	// This method will turn each eligible attribute into an indicator
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))))
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (SCALAR))))||||||||