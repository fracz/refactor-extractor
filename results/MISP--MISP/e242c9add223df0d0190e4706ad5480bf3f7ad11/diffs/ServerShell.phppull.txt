	public function pull() {
		//$user, $id = null, $technique=false, $server
		$userId = $this->args[0];
		$serverId = $this->args[1];
		$technique = $this->args[2];
		$jobId = $this->args[3];
		$this->Job->read(null, $jobId);
		$this->Server->id = $serverId;
		$user = $this->User->getAuthUser($userId);
		$server = $this->Server->read(null, $serverId);
		$result = $this->Server->pull($user['User'], $serverId, $technique, $server, $jobId);
		$this->Job->id = $jobId;
		$this->Job->save(array(
				'id' => $jobId,
				'message' => 'Job done.',
				'progress' => 100,
				'status' => 4
		));
		if (is_numeric($result[0])) {
			switch ($result[0]) {
				case '1' :
					$this->Job->saveField('message', 'Not authorised. This is either due to an invalid auth key, or due to the sync user not having authentication permissions enabled on the remote server.');
					return;
					break;
				case '2' :
					$this->Job->saveField('message', $result[1]);
					return;
					break;
				case '3' :
					$this->Job->saveField('message', 'Sorry, incremental pushes are not yet implemented.');
					return;
					break;
				case '4' :
					$this->Job->saveField('message', 'Invalid technique chosen.');
					return;
					break;

			}
		}
	}

||||||||	public function pull() {
		//$user, $id = null, $technique=false, $server
		$userId = $this->args[0];
		$serverId = $this->args[1];
		$technique = $this->args[2];
		$jobId = $this->args[3];
		$this->Job->read(null, $jobId);
		$this->Server->id = $serverId;
		$user = $this->User->getAuthUser($userId);
		$server = $this->Server->read(null, $serverId);
		$result = $this->Server->pull($user, $serverId, $technique, $server, $jobId);
		$this->Job->id = $jobId;
		$this->Job->save(array(
				'id' => $jobId,
				'message' => 'Job done.',
				'progress' => 100,
				'status' => 4
		));
		if (is_numeric($result[0])) {
			switch ($result[0]) {
				case '1' :
					$this->Job->saveField('message', 'Not authorised. This is either due to an invalid auth key, or due to the sync user not having authentication permissions enabled on the remote server.');
					return;
					break;
				case '2' :
					$this->Job->saveField('message', $result[1]);
					return;
					break;
				case '3' :
					$this->Job->saveField('message', 'Sorry, incremental pushes are not yet implemented.');
					return;
					break;
				case '4' :
					$this->Job->saveField('message', 'Invalid technique chosen.');
					return;
					break;

			}
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CONST)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CONST)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_SWITCH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CONST)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_CONST)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_SWITCH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (NULL))
                                (AST_BREAK
                                    (NULL))))))))))