	 public function sendAlertEmail($id, $senderUser, $processId = null) {
	 	$event = $this->fetchEvent($senderUser, array('eventid' => $id, 'includeAllTags' => true));
	 	$userConditions = array('autoalert' => 1);
	 	$this->User = ClassRegistry::init('User');
	 	$users = $this->User->getUsersWithAccess(
			$owners = array(
				$event[0]['Event']['orgc_id'],
				$event[0]['Event']['org_id']
 			),
			$event[0]['Event']['distribution'],
			$event[0]['Event']['sharing_group_id'],
			$userConditions
	 	);
	 	if (Configure::read('MISP.extended_alert_subject')) {
	 		$subject = preg_replace( "/\r|\n/", "", $event['Event']['info']);
	 		if (strlen($subject) > 58) {
	 			$subject = substr($subject, 0, 55) . '... - ';
	 		} else {
	 			$subject .= " - ";
	 		}
	 	} else {
	 		$subject = '';
	 	}

	 	// Initialise the Job class if we have a background process ID
	 	// This will keep updating the process's progress bar
	 	if ($processId) {
	 		$this->Job = ClassRegistry::init('Job');
	 	}
	 	$sgModel = ClassRegistry::init('SharingGroup');
	 	$log = ClassRegistry::init('Log');

	 	$userCount = count($users);
	 	foreach ($users as $k => $user) {
	 		$this->User->sendEmail($senderUser, $body, false, $subject);
		 		if ($processId) {
		 			$this->Job->id = $processId;
		 			$this->Job->saveField('progress', $k / $userCount * 100);
		 		}
	 	}

	 	if ($processId) {
	 		$this->Job->saveField('message', 'Mails sent.');
	 	}
	 	return true;
	 }

||||||||	 public function sendAlertEmail($id, $senderUser, $processId = null) {
	 	$event = $this->fetchEvent($senderUser, array('eventid' => $id, 'includeAllTags' => true));
	 	if (empty($event)) throw new MethodNotFoundException('Invalid Event.');
	 	$userConditions = array('autoalert' => 1);
	 	$this->User = ClassRegistry::init('User');
	 	$users = $this->User->getUsersWithAccess(
			$owners = array(
				$event[0]['Event']['orgc_id'],
				$event[0]['Event']['org_id']
 			),
			$event[0]['Event']['distribution'],
			$event[0]['Event']['sharing_group_id'],
			$userConditions
	 	);
	 	if (Configure::read('MISP.extended_alert_subject')) {
	 		$subject = preg_replace( "/\r|\n/", "", $event[0]['Event']['info']);
	 		if (strlen($subject) > 58) {
	 			$subject = substr($subject, 0, 55) . '... - ';
	 		} else {
	 			$subject .= " - ";
	 		}
	 	} else {
	 		$subject = '';
	 	}

	 	// Initialise the Job class if we have a background process ID
	 	// This will keep updating the process's progress bar
	 	if ($processId) {
	 		$this->Job = ClassRegistry::init('Job');
	 	}
	 	$sgModel = ClassRegistry::init('SharingGroup');
	 	$log = ClassRegistry::init('Log');

	 	$userCount = count($users);
	 	foreach ($users as $k => $user) {
	 		$this->User->sendEmail($senderUser, $body, false, $subject);
		 		if ($processId) {
		 			$this->Job->id = $processId;
		 			$this->Job->saveField('progress', $k / $userCount * 100);
		 		}
	 	}

	 	if ($processId) {
	 		$this->Job->saveField('message', 'Mails sent.');
	 	}
	 	return true;
	 }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (NULL))))
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_CONST)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (NULL))))
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (AST_DIM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_DIM
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)
                                            (SCALAR)))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_CONST)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_CONST)))