||||||||    function hostnameRule($rule_format, $attribute, &$sid) {
        $content = 'content:"'.$this->dnsNameToRawFormat($attribute['value'], 'hostname').'"; nocase;';
        $this->rules[] = sprintf($rule_format,
                'udp',                          // proto
                'any',                          // src_ip
                'any',                          // src_port
                '->',                           // direction
                'any',                          // dst_ip
                '53',                           // dst_port
                'Hostname: '.$attribute['value'],         // msg
                $content,                       // rule_content
                '',                             // tag
                $sid,                           // sid
                1                               // rev
        );
        $sid++;
        $this->rules[] = sprintf($rule_format,
                'tcp',                          // proto
                'any',                          // src_ip
                'any',                          // src_port
                '->',                           // direction
                'any',                          // dst_ip
                '53',                           // dst_port
                'Hostname: '.$attribute['value'],         // msg
                $content,                       // rule_content
                '',                             // tag
                $sid,                           // sid
                1                               // rev
        );
        $sid++;
        // also do http requests
        // warning: only suricata compatible
        $content = 'flow:to_server,established; content: "Host: '.$attribute['value'].'"; nocase; http_header; ';
        $this->rules[] = sprintf($rule_format,
                'http',                         // proto
                '$HOME_NET',                    // src_ip
                'any',                          // src_port
                '->',                           // direction
                '$EXTERNAL_NET',                // dst_ip
                'any',                          // dst_port
                'Outgoing HTTP Hostname: '.$attribute['value'],        // msg
                $content,                       // rule_content
                'tag:session,600,seconds;',     // tag
                $sid,                           // sid
                1                               // rev
        );
    }
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_POST_INC
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_POST_INC
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)))))