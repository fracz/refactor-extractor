||||||||	public function restfulAttributeToServer($attribute, $server, $urlPath, $HttpSocket=null) {
		// do not keep attributes that are private
		if (0 == $attribute['distribution']) { // never upload private events
			return "Attribute is private and non-exportable";
		}

		$url = $server['Server']['url'];
		$authkey = $server['Server']['authkey'];
		if (null == $HttpSocket) {
			App::uses('SyncTool', 'Tools');
			$syncTool = new SyncTool();
			$HttpSocket = $syncTool->setupHttpSocket($server);
		}
		$request = array(
				'header' => array(
						'Authorization' => $authkey,
						'Accept' => 'application/xml',
						'Content-Type' => 'application/xml',
						//'Connection' => 'keep-alive' // LATER followup cakephp issue about this problem: https://github.com/cakephp/cakephp/issues/1961
				)
		);
		$uri = isset($urlPath) ? $urlPath : $url . '/attributes';

		// LATER try to do this using a separate EventsController and renderAs() function
		$xmlArray = array();

		// cleanup the array from things we do not want to expose
		//unset($event['Event']['org']);
		// remove value1 and value2 from the output
		unset($attribute['value1']);
		unset($attribute['value2']);
		// also add the encoded attachment
		if ($this->typeIsAttachment($attribute['type'])) {
			$encodedFile = $this->base64EncodeAttachment($attribute);
			$attribute['data'] = $encodedFile;
		}

		// display the XML to the user
		$xmlArray['Attribute'] = $attribute;
		$xmlObject = Xml::fromArray($xmlArray, array('format' => 'tags'));
		$attributesXml = $xmlObject->asXML();
		// do a REST POST request with the server
		$data = $attributesXml;
		// LATER validate HTTPS SSL certificate
		$this->Dns = ClassRegistry::init('Dns');
		if ($this->Dns->testipaddress(parse_url($uri, PHP_URL_HOST))) {
			// TODO NETWORK for now do not know how to catch the following..
			// TODO NETWORK No route to host
			$response = $HttpSocket->post($uri, $data, $request);
			switch ($response->code) {
				case '200':	// 200 (OK) + entity-action-result
					if ($response->isOk()) {
						return isset($urlPath) ? $response->body() : true;
					} else {
						try {
							// parse the XML response and keep the reason why it failed
							$xmlArray = Xml::toArray(Xml::build($response->body));
						} catch (XmlException $e) {
							return true;
						}
						if (strpos($xmlArray['response']['name'], "Attribute already exists")) {	// strpos, so i can piggyback some value if needed.
							return true;
						} else {
							return $xmlArray['response']['name'];
						}
					}
					break;
				case '302': // Found
				case '404': // Not Found
					return isset($urlPath) ? $response->body() : $response->headers['Location'];
					break;
			}
		}
	}

/**
 * Deletes the attribute from another Server
 * TODO move this to a component
 *
 * @return bool true if success, error message if failed
 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_VAR))
            (AST_VAR)
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_SWITCH
                    (AST_PROP
                        (AST_VAR))
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_RETURN
                                                (AST_CONDITIONAL
                                                    (AST_ISSET
                                                        (AST_VAR))
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (AST_CONST)))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_TRY
                                                (
                                                    (AST_ASSIGN
                                                        (AST_VAR)
                                                        (AST_STATIC_CALL
                                                            (
                                                                (AST_STATIC_CALL
                                                                    (
                                                                        (AST_PROP
                                                                            (AST_VAR))))))))
                                                (AST_CATCH_LIST
                                                    (AST_CATCH
                                                        (AST_NAME_LIST)
                                                        (AST_VAR)
                                                        (
                                                            (AST_RETURN
                                                                (AST_CONST)))))
                                                (NULL))
                                            (AST_IF
                                                (AST_IF_ELEM
                                                    (AST_CALL
                                                        (
                                                            (AST_DIM
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (SCALAR))
                                                            (SCALAR)))
                                                    (
                                                        (AST_RETURN
                                                            (AST_CONST))))
                                                (AST_IF_ELEM
                                                    (NULL)
                                                    (
                                                        (AST_RETURN
                                                            (AST_DIM
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (SCALAR)))))))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (SCALAR))
                        (AST_SWITCH_CASE
                            (SCALAR)
                            (
                                (AST_RETURN
                                    (AST_CONDITIONAL
                                        (AST_ISSET
                                            (AST_VAR))
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_BREAK
                                    (NULL))))))))))