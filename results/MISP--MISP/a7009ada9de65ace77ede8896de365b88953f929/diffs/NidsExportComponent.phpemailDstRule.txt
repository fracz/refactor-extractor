	public function emailDstRule($ruleFormat, $attribute, &$sid) {
		$overruled = $this->checkWhitelist($attribute['value']);
		$content = 'flow:established,to_server; content:"RCPT TO|3a|"; nocase; content:"' . $attribute['value'] . '"; fast_pattern; nocase; content:"|0D 0A 0D 0A|"; within:8192;';
		$this->rules[] = sprintf($ruleFormat,
				($overruled) ? '#OVERRULED BY WHITELIST# ' : '',
				'tcp',							// proto
				'$EXTERNAL_NET',				// src_ip
				'any',							// src_port
				'->',							// direction
				'$SMTP_SERVERS',				// dst_ip
				'25',							// dst_port
				'Destination Email Address: ' . $attribute['value'],	// msg
				$content,						// rule_content
				'tag:session,600,seconds;',	// tag
				$sid,							// sid
				1								// rev
				);
	}

||||||||	public function emailDstRule($ruleFormat, $attribute, &$sid) {
		$overruled = $this->checkWhitelist($attribute['value']);
		$attribute['value'] = replaceIllegalChars($attribute['value']);  // substitute chars not allowed in rule
		$content = 'flow:established,to_server; content:"RCPT TO|3a|"; nocase; content:"' . $attribute['value'] . '"; fast_pattern; nocase; content:"|0D 0A 0D 0A|"; within:8192;';
		$this->rules[] = sprintf($ruleFormat,
				($overruled) ? '#OVERRULED BY WHITELIST# ' : '',
				'tcp',							// proto
				'$EXTERNAL_NET',				// src_ip
				'any',							// src_port
				'->',							// direction
				'$SMTP_SERVERS',				// dst_ip
				'25',							// dst_port
				'Destination Email Address: ' . $attribute['value'],	// msg
				$content,						// rule_content
				'tag:session,600,seconds;',	// tag
				$sid,							// sid
				1								// rev
				);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR))
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_VAR)
                    (SCALAR)
                    (SCALAR))
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)))))