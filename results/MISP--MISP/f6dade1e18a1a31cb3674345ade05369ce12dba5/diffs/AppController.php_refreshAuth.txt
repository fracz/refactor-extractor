	protected function _refreshAuth() {
		if (isset($this->User)) {
			$user = $this->User->read(false, $this->Auth->user('id'));
		} else {
			$user = ClassRegistry::init('User')->findById($this->Auth->user('id'));
		}
		$this->Auth->login($user['User']);
	}

/**
 * Updates the missing fields from v0.1 to v0.2 of CyDefSIG
 * First you will need to manually update the database to the new schema.
 * Log in as admin user and
 * Then run this function by setting debug = 1 (or more) and call /events/migrate01to02
 *
 * @throws NotFoundException // TODO Exception
 */
||||||||	protected function _refreshAuth() {
		if (isset($this->User)) {
			$user = $this->User->read(false, $this->Auth->user('id'));
		} else {
			$this->loadModel('User');
			$this->User->recursive = -1;
			$user = $this->User->findById($this->Auth->user('id'));
		}
		$this->Auth->login($user['User']);
	}

/**
 * Updates the missing fields from v0.1 to v0.2 of CyDefSIG
 * First you will need to manually update the database to the new schema.
 * Log in as admin user and
 * Then run this function by setting debug = 1 (or more) and call /events/migrate01to02
 *
 * @throws NotFoundException // TODO Exception
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CONST)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CONST)
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_UNARY_OP
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))