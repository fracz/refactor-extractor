    private function _mergeAsyncJs()
    {
        $blockResQueue = [];
        foreach($this->blockResQueue as $block => $jsList) {
            $blockResQueue = array_merge($blockResQueue, $jsList);
        }
        return array_unique(array_merge($blockResQueue, $this->noBlockResQueue));
    }
}||||||||    private function _mergeAsyncJs()
    {
        $blockResQueue = [];
        foreach($this->blockResQueue as $block => $jsList) {
            $blockResQueue = array_merge($blockResQueue, $jsList);
        }
        return array_values(array_unique(array_merge($blockResQueue, $this->noBlockResQueue)));
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR))))))))))