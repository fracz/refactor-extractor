    public function readHandle(){
        // swoole_async_readfile 废弃
        // swoole_async_readfile($this->filename, $this->callback);
        $this->content = "";
        $r = swoole_async_read($this->filename, function($filename, $content) {
            if ($content === self::EOF) {
                $cb = $this->callback;
                $cb($filename, $this->content);
                $this->content = "";
            } else {
                $this->content .= $content;
            }
        });

        if ($r === false) {
            $cb = $this->callback;
            $cb($this->filename, $this->content);
            $this->content = "";
        }
    }

||||||||        public function readHandle(){

            swoole_async_readfile($this->filename,$this->callback);
        }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))))