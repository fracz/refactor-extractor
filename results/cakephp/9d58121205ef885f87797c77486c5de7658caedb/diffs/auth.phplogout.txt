	function logout() {
		$this->__setDefaults();
		$this->Session->del($this->sessionKey);
		$this->Session->del('Auth.redirect');
		$this->_loggedIn = false;
		return $this->_normalizeURL($this->logoutRedirect);
	}
/**
 * Get the current user from the session.
 *
 * @return array User record, or null if no user is logged in.
 * @access public
 */
||||||||	function logout() {
		$this->__setDefaults();
		$this->Session->del($this->sessionKey);
		$this->Session->del('Auth.redirect');
		$this->_loggedIn = false;
		return Router::normalize($this->logoutRedirect);
	}
/**
 * Get the current user from the session.
 *
 * @return array User record, or null if no user is logged in.
 * @access public
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))))))