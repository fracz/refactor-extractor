||||||||    public function testReadOrFailThrowingException()
    {
        try {
            $void = Configure::readOrFail('This.Key.Does.Not.exist');
            $this->fail('Expected exception to be thrown.');
        } catch (\Exception $e) {
            $this->assertTrue($e instanceof \RuntimeException);
            $this->assertEquals('Expected "This.Key.Does.Not.exist" configuration.', $e->getMessage());
        }
    }

    /**
     * testRead method
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_INSTANCEOF
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL)))