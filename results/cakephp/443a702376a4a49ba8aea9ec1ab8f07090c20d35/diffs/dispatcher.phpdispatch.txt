	function dispatch ($url) {
		global $_POST, $_GET, $_FILES, $_SESSION;

		$params = $this->parseParams($url);

		// die if no controller set
		if (empty($params['controller']))
			$this->errorNoController($url);

		$ctrl_name = Inflector::camelize($params['controller']);
		$ctrl_class = $ctrl_name.'Controller';

		// if specified controller class doesn't exist
		if (!loadController($ctrl_name) || !class_exists($ctrl_class))
			$this->errorUnknownController($url, $ctrl_name);

		$controller = new $ctrl_class ($this);
		$controller->cache = &$Cache;
		$controller->base = $this->base;

		// if action is not set, and the default Controller::index() method doesn't exist
		if (empty($params['action'])) {
			if (method_exists($controller, 'index'))
				$params['action'] = 'index';
			else
				$this->errorNoAction($url);
		}

		// if the requested action doesn't exist
		if (!method_exists($controller, $params['action']))
			$this->errorUnknownAction($url, $ctrl_class, $params['action']);

		$controller->params = $params;
		$controller->action = $params['action'];
		$controller->data = empty($params['data'])? null: $params['data'];
		$controller->passed_args = empty($params['pass'])? null: $params['pass'];

		// EXECUTE THE REQUESTED ACTION
		call_user_func_array(array(&$controller, $params['action']), empty($params['pass'])? null: $params['pass']);

		if ($controller->autoRender)
			$controller->render();

		return $params;
	}

/**
  * Returns array of GET and POST parameters. GET parameters are taken from given URL.
  *
  * @param string $from_url
  * @return array Parameters found in POST and GET.
  */
||||||||	function dispatch ($url) {
		global $_POST, $_GET, $_FILES, $_SESSION;

		/* @var $params array */
		$params = $this->parseParams($url);

		// die if no controller set
		if (empty($params['controller']))
			$this->errorNoController($url);

		$ctrl_name = Inflector::camelize($params['controller']);
		$ctrl_class = $ctrl_name.'Controller';

		/**
		 * Find out if the specified controller exists, and die if not.
		 */
		if (!loadController($ctrl_name) || !class_exists($ctrl_class))
			$this->errorUnknownController($url, $ctrl_name);

		$ctrl_methods = get_class_methods($ctrl_class);
		$ctrl_vars = get_class_vars($ctrl_class);

		/**
		 * If _no_action_is set, check if the default action, index() exists. If it doesn't, die.
		 */
		if (empty($params['action']) && in_array('index', $ctrl_methods))
		{
			$params['action'] = 'index';
		}
		else {
			$this->errorNoAction($url);
		}

		/**
		 * Check if the specified action really exists.
		 */
		if (!in_array($params['action'], $ctrl_methods))
		{
			$this->errorUnknownAction($url, $ctrl_class, $params['action']);
		}

		$controller->params = $params;
		$controller->action = $params['action'];
		$controller->data = empty($params['data'])? null: $params['data'];
		$controller->passed_args = empty($params['pass'])? null: $params['pass'];

		// EXECUTE THE REQUESTED ACTION
		call_user_func_array(array(&$controller, $params['action']), empty($params['pass'])? null: $params['pass']);

		if ($controller->autoRender)
			$controller->render();

		return $params;
	}

/**
  * Returns array of GET and POST parameters. GET parameters are taken from given URL.
  *
  * @param string $from_url
  * @return array Parameters found in POST and GET.
  */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (NULL)))
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (NULL)))
            (AST_CONDITIONAL
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))