    public function testIsWithinNext()
    {
        $this->assertFalse((new Time('-1 day'))->isWithinNext('1 day'));
        $this->assertFalse((new Time('-1 week'))->isWithinNext('1 week'));
        $this->assertFalse((new Time('-1 year'))->isWithinNext('1 year'));
        $this->assertFalse((new Time('-1 second'))->isWithinNext('1 second'));
        $this->assertFalse((new Time('-1 day'))->isWithinNext('1 week'));
        $this->assertFalse((new Time('-1 week'))->isWithinNext('2 week'));
        $this->assertFalse((new Time('-1 second'))->isWithinNext('10 minutes'));
        $this->assertFalse((new Time('-1 month'))->isWithinNext('13 month'));
        $this->assertFalse((new Time('-1 seconds'))->isWithinNext('1 hour'));

        $this->assertTrue((new Time('+1 day'))->isWithinNext('1 day'));
        $this->assertTrue((new Time('+1 week'))->isWithinNext('7 day'));
        $this->assertTrue((new Time('+1 second'))->isWithinNext('1 minute'));
        $this->assertTrue((new Time('+1 month'))->isWithinNext('1 month'));
    }

    /**
     * test formatting dates taking in account preferred i18n locale file
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_NEW
                    (
                        (SCALAR)))
                (
                    (SCALAR))))))||||||||