	public function build($name = null) {
		$schema = $this->_getSchema();
		if (!$schema) {
			return false;
		}
		if (!$schema->cacheMetadata()) {
			$this->_io->verbose('Metadata cache was disabled in config. Enabling to write cache.');
			$schema->cacheMetadata(true);
		}
		$tables = [$name];
		if (empty($name)) {
			$tables = $schema->listTables();
		}
		foreach ($tables as $table) {
			$this->_io->verbose('Building metadata cache for ' . $table);
			$schema->describe($table, ['forceRefresh' => true]);
		}
		$this->out('<success>Cache build complete</success>');
		return true;
	}

/**
 * Clear metadata.
 *
 * @param string $name The name of the table to clear cache data for.
 * @return bool
 */
||||||||	public function build($name = null) {
		$schema = $this->_getSchema();
		if (!$schema) {
			return false;
		}
		$tables = [$name];
		if (empty($name)) {
			$tables = $schema->listTables();
		}
		foreach ($tables as $table) {
			$this->_io->verbose('Building metadata cache for ' . $table);
			$schema->describe($table, ['forceRefresh' => true]);
		}
		$this->out('<success>Cache build complete</success>');
		return true;
	}

/**
 * Clear metadata.
 *
 * @param string $name The name of the table to clear cache data for.
 * @return bool
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_RETURN
        (AST_CONST)))