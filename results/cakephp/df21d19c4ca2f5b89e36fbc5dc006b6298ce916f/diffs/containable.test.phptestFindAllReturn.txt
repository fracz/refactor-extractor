	function testFindAllReturn() {
		$result = $this->Article->find('all', array(
			'conditions' => array('Article.id' => 999999999)
		));
		$this->assertEqual($result, array(), 'Should be empty.');
	}

/**
 * containments method
 *
 * @param mixed $Model
 * @param array $contain
 * @access private
 * @return void
 */
||||||||	function testFindAllReturn() {
		$result = $this->Article->find('all', array(
			'conditions' => array('Article.id' => 999999999)
		));
		$this->assertEmpty($result, 'Should be empty.');
	}

/**
 * containments method
 *
 * @param mixed $Model
 * @param array $contain
 * @access private
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_ARRAY)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR))))