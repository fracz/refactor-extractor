||||||||	protected static function _getEngine($class) {
		$class = App::className($class, 'Network/Session');
		if (!class_exists($class)) {
			throw new Error\Exception(sprintf('Could not load %s to handle the session.', $class));
		}
		$handler = new $class();
		if ($handler instanceof SessionHandlerInterface) {
			return $handler;
		}
		throw new Error\Exception('Chosen SessionHandler does not implement SessionHandlerInterface, it cannot be used with an engine key.');
	}

/**
 * Get one of the prebaked default session configurations.
 *
 * @param string $name
 * @return bool|array
 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_THROW
        (AST_NEW
            (
                (SCALAR)))))