	public function testUrlGenerationPlugins() {
		$request = new Request();
		Router::setRequestInfo(
			$request->addParams(array(
				'plugin' => 'test', 'controller' => 'controller', 'action' => 'index'
			))->addPaths(array(
				'base' => '/base', 'here' => '/clients/sage/portal/donations', 'webroot' => '/base/'
			))
		);

		$this->assertEquals(Router::url('read/1'), '/base/test/controller/read/1');

		Router::reload();
		Router::connect('/:lang/:plugin/:controller/*', array('action' => 'index'));

		$request = new Request();
		Router::setRequestInfo(
			$request->addParams(array(
				'lang' => 'en',
				'plugin' => 'shows', 'controller' => 'shows', 'action' => 'index',
				'url' => array('url' => 'en/shows/'),
			))->addPaths(array(
				'base' => '', 'here' => '/en/shows', 'webroot' => '/'
			))
		);
	}

/**
 * test that you can leave active plugin routes with plugin = null
 *
 * @return void
 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR)))
                                (SCALAR)))))
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))))))))||||||||