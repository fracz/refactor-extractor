||||||||	function testOfHtmlDiffReport() {
		$manager = CodeCoverageManager::getInstance();
		$code = <<<PHP
		class Set extends Object {
		/**
		 * Value of the Set object.
		 *
		 * @var array
		 * @access public
		 */
			var \$value = array();
		/**
		 * Constructor. Defaults to an empty array.
		 *
		 * @access public
		 */
			function __construct() {
				if (func_num_args() == 1 && is_array(func_get_arg(0))) {
					\$this->value = func_get_arg(0);
				} else {
					\$this->value = func_get_args();
				}
			}
		/**
		 * Returns the contents of the Set object
		 *
		 * @return array
		 * @access public
		 */
			function &get() {
				return \$this->value;
			}
		/**
		 * This function can be thought of as a hybrid between PHP's array_merge and array_merge_recursive. The difference
		 * to the two is that if an array key contains another array then the function behaves recursive (unlike array_merge)
		 * but does not do if for keys containing strings (unlike array_merge_recursive). See the unit test for more information.
		 *
		 * Note: This function will work with an unlimited amount of arguments and typecasts non-array parameters into arrays.
		 *
		 * @param array \$arr1 Array to be merged
		 * @param array \$arr2 Array to merge with
		 * @return array Merged array
		 * @access public
		 */
			function merge(\$arr1, \$arr2 = null) {
				\$args = func_get_args();

				if (isset(\$this) && is_a(\$this, 'set')) {
					\$backtrace = debug_backtrace();
					\$previousCall = strtolower(\$backtrace[1]['class'].'::'.\$backtrace[1]['function']);
					if (\$previousCall != 'set::merge') {
						\$r =& \$this->value;
						array_unshift(\$args, null);
					}
				}
				if (!isset(\$r)) {
					\$r = (array)current(\$args);
				}

				while ((\$arg = next(\$args)) !== false) {
					if (is_a(\$arg, 'set')) {
						\$arg = \$arg->get();
					}

					foreach ((array)\$arg as \$key => \$val)	 {
						if (is_array(\$val) && isset(\$r[\$key]) && is_array(\$r[\$key])) {
							\$r[\$key] = Set::merge(\$r[\$key], \$val);
						} elseif (is_int(\$key)) {

						} else {
							\$r[\$key] = \$val;
						}
					}
				}
				return \$r;
			}
PHP;

		$testObjectFile = explode("\n", $code);
		$coverageData = array(
			0 => 1,
			1 => 1,
			2 => -2,
			3 => -2,
			4 => -2,
			5 => -2,
			6 => -2,
			7 => -2,
			8 => -1,
			9 => -2,
			10 => -2,
			11 => -2,
			12 => -2,
			13 => -2,
			14 => 1,
			15 => 1,
			16 => -1,
			17 => 1,
			18 => 1,
			19 => -1,
			20 => 1,
			21 => -2,
			22 => -2,
			23 => -2,
			24 => -2,
			25 => -2,
			26 => -2,
			27 => 1,
			28 => -1,
			29 => 1,
			30 => 1,
			31 => -2,
			32 => -2,
			33 => -2,
			34 => -2,
			35 => -2,
			36 => -2,
		 	37=> -2,
			38 => -2,
			39 => -2,
			40 => -2,
			41 => -2,
			42 => -2,
			43 => -1,
			44 => -2,
			45 => -2,
			46 => -2,
			47 => -2,
			48 => 1,
			49 => 1,
		 	50 => -1,
			51 => 1,
			52 => 1,
			53 => -2,
			54 => -2,
			55 => 1,
			56 => 1,
			57 => 1,
			58 => 1,
			59 => -1,
			60 => 1,
			61 => 1,
			62 => -2,
		 	63 => -2,
			64 => 1,
			65 => -2,
			66 => 1,
			67 => -1,
			68 => -2,
			69 => -1,
			70 => -1,
			71 => 1,
			72 => -2,
		);
		$expected = array(
			0 => 'ignored',
			1 => 'ignored',
			2 => 'ignored',
			3 => 'ignored',
			4 => 'ignored',
			5 => 'ignored show start realstart',
			6 => 'ignored show',
			7 => 'ignored show',
			8 => 'uncovered show',
			9 => 'ignored show',
			10 => 'ignored show',
			11 => 'ignored show end',
			12 => 'ignored',
			13 => 'ignored show start',
			14 => 'covered show',
			15 => 'covered show',
			16 => 'uncovered show',
			17 => 'covered show show',
			18 => 'covered show show',
			19 => 'uncovered show',
			20 => 'covered show',
			21 => 'ignored show',
			22 => 'ignored show end',
			23 => 'ignored',
			24 => 'ignored',
			25 => 'ignored show start',
			26 => 'ignored show',
			27 => 'covered show',
			28 => 'uncovered show',
			29 => 'covered show',
			30 => 'covered show',
			31 => 'ignored show end',
			32 => 'ignored',
			33 => 'ignored',
			34 => 'ignored',
			35 => 'ignored',
			36 => 'ignored',
		 	37 => 'ignored',
			38 => 'ignored',
			39 => 'ignored',
			40 => 'ignored show start',
			41 => 'ignored show',
			42 => 'ignored show',
			43 => 'uncovered show',
			41 => 'ignored show',
			42 => 'ignored show',
			43 => 'uncovered show',
			44 => 'ignored show',
			45 => 'ignored show',
			46 => 'ignored show',
			47 => 'ignored show',
			48 => 'covered show',
			49 => 'covered show',
		 	50 => 'uncovered show',
			51 => 'covered show',
			52 => 'covered show',
			53 => 'ignored show end',
			54 => 'ignored',
			55 => 'covered',
			56 => 'covered show start',
			57 => 'covered show',
			58 => 'covered show',
			59 => 'uncovered show',
			60 => 'covered show',
			61 => 'covered show',
			62 => 'ignored show end',
		 	63 => 'ignored',
			64 => 'covered show start',
			65 => 'ignored show',
			66 => 'covered show show',
			67 => 'uncovered show',
			68 => 'ignored show',
			69 => 'uncovered show',
			70 => 'uncovered show',
			71 => 'covered show',
			72 => 'ignored show end',
		);
		$execCodeLines = range(0, 72);
		$result = explode("</div>", $report = $manager->reportHtmlDiff($testObjectFile, $coverageData, $execCodeLines, 3));

		foreach ($result as $line) {
			preg_match('/<span class="line-num">(.*?)<\/span>/', $line, $matches);
			if (!isset($matches[1])) {
				continue;
			}

			$num = $matches[1];
			$class = $expected[$num];
			$pattern = '/<div class="code-line '.$class.'">/';
			$this->assertTrue(preg_match($pattern, $line), $num.': '.$line." fails");
		}
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_UNARY_OP
                    (SCALAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)))))))