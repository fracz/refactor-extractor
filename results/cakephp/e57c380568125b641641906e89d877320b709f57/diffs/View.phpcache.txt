||||||||	public function cache(callable $block, array $options = []) {
		$options += ['key' => '', 'config' => $this->elementCache];
		if (empty($options['key'])) {
			throw new \RuntimeException('Cannot cache content with an empty key');
		}
		$result = Cache::read($options['key'], $options['config']);
		if ($result) {
			return $result;
		}
		ob_start();
		$block();
		$result = ob_get_clean();

		Cache::write($options['key'], $result, $options['config']);
		return $result;
	}

/**
 * Checks if an element exists
 *
 * @param string $name Name of template file in the /app/Template/Element/ folder,
 *   or `MyPlugin.template` to check the template element from MyPlugin. If the element
 *   is not found in the plugin, the normal view path cascade will be searched.
 * @return bool Success
 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_CALL)
    (AST_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_STATIC_CALL
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_VAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_VAR)))