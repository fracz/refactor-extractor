	public function __construct(StringTemplate $templates, View $view, $widgets = []) {
		$this->_templates = $templates;
		if (!empty($widgets)) {
			$this->add($widgets);
		}
		$this->_widgets['_view'] = $view;
	}

/**
 * Load a config file containing widgets.
 *
 * Widget files should define a `$config` variable containing
 * all the widgets to load. Loaded widgets will be merged with existing
 * widgets.
 *
 * @param string $file The file to load
 * @return void
 */
||||||||	public function __construct(StringTemplate $templates, View $view, $widgets = []) {
		$this->_templates = $templates;
		if (!empty($widgets)) {
			$this->add($widgets);
		}
		$this->_widgets['_view'] = $view;
		debug($this->_widgets);
		exit();

	}

/**
 * Load a config file containing widgets.
 *
 * Widget files should define a `$config` variable containing
 * all the widgets to load. Loaded widgets will be merged with existing
 * widgets.
 *
 * @param string $file The file to load
 * @return void
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_EXIT
        (NULL)))