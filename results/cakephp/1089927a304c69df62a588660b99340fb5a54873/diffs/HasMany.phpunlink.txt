||||||||    public function unlink(EntityInterface $sourceEntity, array $targetEntities, $cleanProperty = true)
    {
        $foreignKey = (array)$this->foreignKey();
        $target = $this->target();
        $targetPrimaryKey = array_merge((array)$target->primaryKey(), (array)$foreignKey);
        $property = $this->property();

        $conditions = [
        'OR' => (new Collection($targetEntities) )
            ->map(function ($entity) use ($targetPrimaryKey) {
                return $entity->extract($targetPrimaryKey);
            })
            ->toList()
        ];

        $this->_unlink($foreignKey, $target, $conditions);

        if ($cleanProperty) {
            $sourceEntity->set(
                $property,
                (new Collection($sourceEntity->get($property)))
                ->reject(
                    function ($assoc) use ($targetEntities) {
                        return in_array($assoc, $targetEntities);
                    }
                )
                ->toList()
            );
        }
    }

    /**
     * Deletes/sets null the related objects according to the dependency between source and targets and foreign key nullability
     * Skips deleting records present in $remainingEntities
     *
     * @param array $properties array of foreignKey properties
     * @param EntityInterface $entity the entity which should have its associated entities unassigned
     * @param Table $target The associated table
     * @param array $remainingEntities Entities that should not be deleted
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CAST
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_CAST
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_NEW
                            (
                                (AST_VAR)))
                        (
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_RETURN
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))))))))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_NEW
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)))))
                                (
                                    (AST_CLOSURE
                                        (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                        (AST_CLOSURE_USES
                                            (AST_CLOSURE_VAR))
                                        (
                                            (AST_RETURN
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))))))))))))