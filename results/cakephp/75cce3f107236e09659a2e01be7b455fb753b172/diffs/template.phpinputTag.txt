	function inputTag($tag_name, $size=20, $html_options=null)
	{
		$html_options['size'] = $size;
		$html_options['value'] = isset($html_options['value'])? $html_options['value']: $this->tagValue($tag_name);
		$this->tagIsInvalid($tag_name)? $html_options['class'] = 'form_error': null;
		return sprintf(TAG_INPUT, $tag_name, $this->parseHtmlOptions($html_options, null, '', ' '));
	}

	/**
	 * Returns an INPUT element with type="password".
	 *
	 * @param string $tag_name
	 * @param int $size
	 * @param array $html_options
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_CONDITIONAL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_ASSIGN
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR))
        (AST_CONST))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CONST)
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (SCALAR)
                        (SCALAR)))))))||||||||