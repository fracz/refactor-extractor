	function renderLayout($content_for_layout)
	{
		$layout_fn = $this->_getLayoutFn();

		$data_for_layout = array_merge($this->_viewVars, array(
		'title_for_layout'=>$this->pageTitle !== false? $this->pageTitle: Inflector::humanize($this->viewpath),
		'content_for_layout'=>$content_for_layout));

		if (is_file($layout_fn)) {
			$out = $this->_render($layout_fn, $data_for_layout);

			if ($out === false) {
				$out = $this->_render($layout_fn, $data_for_layout, false);
				trigger_error(sprintf(ERROR_IN_LAYOUT, $layout_fn, $out), E_USER_ERROR);
				return false;
			}
			else {
				return $out;
			}
		}
		else {
			trigger_error(sprintf(ERROR_NO_LAYOUT, $this->layout, $layout_fn), E_USER_ERROR);
			return false;
		}
	}

	/**
	 * Renders a piece of PHP with provided parameters and returns HTML, XML, or any other string.
	 *
	 * @param string $name Name of template file
	 * @param array $params Array of data for rendered view
	 * @return string Rendered output
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CONST))
                            (AST_PROP
                                (AST_VAR))
                            (AST_STATIC_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_CONST)
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_CONST)))
                            (AST_RETURN
                                (AST_CONST))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CONST)
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_CONST)))
                (AST_RETURN
                    (AST_CONST))))))||||||||