	function _render($___viewFn, $___data_for_view, $___play_safe = true)
	{
		/**
		 * Fetching helpers
		 */
		if ($this->helpers !== false)
		{
			foreach ($this->helpers as $helper)
			{
				$helperFn = LIBS.'helpers'.DS.Inflector::underscore($helper).'.php';
				$helperCn = ucfirst($helper).'Helper';
				if (is_file($helperFn))
				{
					require_once $helperFn;
					if(class_exists($helperCn)===true);
					{
						${$helper} = new $helperCn;
						${$helper}->base   = $this->base;
						${$helper}->here   = $this->here;
						${$helper}->params = $this->params;
						${$helper}->action = $this->action;
						${$helper}->data   = $this->data;
					}
				}
			}
		}

		extract($___data_for_view, EXTR_SKIP); # load all view variables
		/**
		 * Local template variables.
		 */
		$BASE = $this->base;
		$params = &$this->params;
		$page_title = $this->pageTitle;

		/**
		 * Start caching output (eval outputs directly so we need to cache).
		 */
		ob_start();

		/**
		 * Include the template.
		 */
		$___play_safe? @include($___viewFn): include($___viewFn);

		$out = ob_get_clean();

		return $out;
	}


	///////////////////////////////////////////////////////////////////////////

	/**
	 * Returns an URL for a combination of controller and action.
	 *
	 * @param string $url
	 * @return string Full constructed URL as a string.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (AST_CONST))
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_INCLUDE_OR_EVAL
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (AST_CONST))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_CALL)
    (AST_CONDITIONAL
        (AST_VAR)
        (AST_UNARY_OP
            (AST_INCLUDE_OR_EVAL
                (AST_VAR)))
        (AST_INCLUDE_OR_EVAL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_RETURN
        (AST_VAR)))||||||||