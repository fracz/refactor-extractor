	function periodicallyCallRemote($options=null)
	{
		$frequency = (isset($options['frequency']))? $options['frequency'] : 10;
		$code = "new PeriodicalExecuter(function() {" . $this->remote_function($options) . "}, $frequency)";
		return $this->javascriptTag($code);
	}

	/**
	 * Returns form tag that will submit using Ajax.
	 *
	 * Returns a form tag that will submit using XMLHttpRequest in the background instead of the regular
	 * reloading POST arrangement. Even though it's using Javascript to serialize the form elements, the form submission
	 * will work just like a regular submission as viewed by the receiving side (all elements available in params).
	 * The options for specifying the target with :url and defining callbacks is the same as link_to_remote.
	 *
	 * @param array $options callback options
	 * @return string javascript code
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))))||||||||