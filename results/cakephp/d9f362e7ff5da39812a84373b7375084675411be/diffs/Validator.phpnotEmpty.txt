    public function notEmpty($field, $message = null, $when = false)
    {
        if (!is_array($field)) {
            $field = $this->_convertValidatorToArray(
                $field,
                ['when', 'message'],
                [$when, $message]
            );
        }

        foreach ($field as $fieldName => $setting) {
            $settings = $this->_convertValidatorToArray(
                $fieldName,
                ['when', 'message'],
                [$when, $message],
                $setting
            );
            $fieldName = current(array_keys($settings));
            $whenSetting = $settings[$fieldName]['when'];

            if ($whenSetting === 'create' || $whenSetting === 'update') {
                $whenSetting = $whenSetting === 'create' ? 'update' : 'create';
            } elseif (is_callable($whenSetting)) {
                $whenSetting = function ($context) use ($whenSetting) {
                    return !$whenSetting($context);
                };
            }

            $this->field($fieldName)->isEmptyAllowed($whenSetting);
            if ($settings[$fieldName]['message']) {
                $this->_allowEmptyMessages[$fieldName] = $settings[$fieldName]['message'];
            }
        }
        return $this;
    }

    /**
     * Add a notBlank rule to a field.
     *
     * @param string $field The field you want to apply the rule to.
     * @param string|null $message The error message when the rule fails.
     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns
     *   true when the validation rule should be applied.
     * @see \Cake\Validation\Validation::notBlank()
     * @return $this
     */
||||||||    public function notEmpty($field, $message = null, $when = false)
    {
        $settingsDefault = [
            'when' => $when,
            'message' => $message
        ];

        if (!is_array($field)) {
            $field = $this->_convertValidatorToArray($field, $settingsDefault);
        }

        foreach ($field as $fieldName => $setting) {
            $settings = $this->_convertValidatorToArray($fieldName, $settingsDefault, $setting);
            $fieldName = current(array_keys($settings));
            $whenSetting = $settings[$fieldName]['when'];

            if ($whenSetting === 'create' || $whenSetting === 'update') {
                $whenSetting = $whenSetting === 'create' ? 'update' : 'create';
            } elseif (is_callable($whenSetting)) {
                $whenSetting = function ($context) use ($whenSetting) {
                    return !$whenSetting($context);
                };
            }

            $this->field($fieldName)->isEmptyAllowed($whenSetting);
            if ($settings[$fieldName]['message']) {
                $this->_allowEmptyMessages[$fieldName] = $settings[$fieldName]['message'];
            }
        }
        return $this;
    }

    /**
     * Add a notBlank rule to a field.
     *
     * @param string $field The field you want to apply the rule to.
     * @param string|null $message The error message when the rule fails.
     * @param string|callable|null $when Either 'create' or 'update' or a callable that returns
     *   true when the validation rule should be applied.
     * @see \Cake\Validation\Validation::notBlank()
     * @return $this
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)))))
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_RETURN
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)))))
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (AST_CLOSURE_USES
                                    (AST_CLOSURE_VAR))
                                (
                                    (AST_RETURN
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)))))))))))
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))