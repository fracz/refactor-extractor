    function __writeFile($file, $timestamp)
    {
        $now = time();
        if (is_numeric($timestamp))
        {
            $cacheTime = $now + $timestamp;
        }
        else
        {
            $cacheTime = $now + strtotime($timestamp);
        }
        $result = preg_replace('/\/\//', '/', $this->here);
        $cache = str_replace('/', '_', $result.'.php');
        $cache = str_replace('favicon.ico', '', $cache);
        $file = '<!--cachetime:'.$cacheTime.'-->'.
                '<?php loadController(\''.$this->view->name.'\'); ?>'.
                '<?php $this->controller = new '.$this->view->name.'Controller(); ?>'.
                '<?php $this->helpers = unserialize(\''. serialize($this->view->helpers).'\'); ?>'.
                '<?php $this->webroot = \''. $this->view->webroot.'\'; ?>'.
                '<?php $this->data  = unserialize(\''. serialize($this->view->data).'\'); ?>'.
                '<?php $loaded = array(); ?>'.
                '<?php $this->_loadHelpers($loaded, $this->helpers); ?>'.$file;
        return cache('views'.DS.$cache, $file, $timestamp);
    }
}
?>||||||||    function __writeFile($file, $timestamp)
    {
        $now = time();
        if (is_numeric($timestamp))
        {
            $cacheTime = $now + $timestamp;
        }
        else
        {
            $cacheTime = $now + strtotime($timestamp);
        }
        $cache = convertSlash($this->here).'.php';
        $file = '<!--cachetime:'.$cacheTime.'-->
                 <?php
                    loadController(\''.$this->view->name.'\');
                    $this->controller = new '.$this->view->name.'Controller();
                    $this->helpers = unserialize(\''. serialize($this->view->helpers).'\');
                    $this->webroot = \''. $this->view->webroot.'\';
                    $this->data  = unserialize(\''. serialize($this->view->data).'\');
                    $loadedHelpers =  array();
                    $loadedHelpers = $this->_loadHelpers($loadedHelpers, $this->helpers);
                    foreach(array_keys($loadedHelpers) as $helper)
                    {
                        $replace = strtolower(substr($helper, 0, 1));
                        $camelBackedHelper = preg_replace(\'/\\w/\', $replace, $helper, 1);
                        ${$camelBackedHelper} =& $loadedHelpers[$helper];

                        if(isset(${$camelBackedHelper}->helpers) && is_array(${$camelBackedHelper}->helpers))
                        {
                            foreach(${$camelBackedHelper}->helpers as $subHelper)
                            {
                                ${$camelBackedHelper}->{$subHelper} =& $loadedHelpers[$subHelper];
                            }
                        }
                        $this->loaded[$camelBackedHelper] = (${$camelBackedHelper});
                    }
                    ?>
                    '.$file;
        return cache('views'.DS.$cache, $file, $timestamp);
    }
}
?>||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_BINARY_OP
                                                                                (AST_BINARY_OP
                                                                                    (AST_BINARY_OP
                                                                                        (SCALAR)
                                                                                        (AST_VAR))
                                                                                    (SCALAR))
                                                                                (SCALAR))
                                                                            (AST_PROP
                                                                                (AST_PROP
                                                                                    (AST_VAR))))
                                                                        (SCALAR))
                                                                    (SCALAR))
                                                                (AST_PROP
                                                                    (AST_PROP
                                                                        (AST_VAR))))
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (AST_CALL
                                                        (
                                                            (AST_PROP
                                                                (AST_PROP
                                                                    (AST_VAR))))))
                                                (SCALAR))
                                            (SCALAR))
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR))))
                                    (SCALAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR))))))
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (AST_VAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CONST))
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_PROP
                                                        (AST_PROP
                                                            (AST_VAR))))
                                                (SCALAR))
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (SCALAR))
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (SCALAR))
            (AST_VAR)))
    (AST_RETURN
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CONST))
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)))))