	public function loadHelpers() {
		$helpers = HelperCollection::normalizeObjectArray($this->helpers);
		foreach ($helpers as $properties) {
			list($plugin, $class) = pluginSplit($properties['class']);
			$this->{$class} = $this->Helpers->load($properties['class'], $properties['settings']);
		}
		$this->_helpersLoaded = true;
	}

/**
 * Renders and returns output for given view filename with its
 * array of data. Handles parent/extended views.
 *
 * @param string $viewFile Filename of the view
 * @param array $data Data to include in rendered view. If empty the current View::$viewVars will be used.
 * @return string Rendered output
 * @throws CakeException when a block is left open.
 */
||||||||	public function loadHelpers() {
		$helpers = HelperCollection::normalizeObjectArray($this->helpers);
		foreach ($helpers as $properties) {
			list(, $class) = pluginSplit($properties['class']);
			$this->{$class} = $this->Helpers->load($properties['class'], $properties['settings']);
		}
		$this->_helpersLoaded = true;
	}

/**
 * Renders and returns output for given view filename with its
 * array of data. Handles parent/extended views.
 *
 * @param string $viewFile Filename of the view
 * @param array $data Data to include in rendered view. If empty the current View::$viewVars will be used.
 * @return string Rendered output
 * @throws CakeException when a block is left open.
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (NULL)
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST)))