	function _checkPHPUnit() {
		$found = $path = null;

		if (@include 'PHPUnit' . DS . 'Framework.php') {
			$found = true;
		}

		if (!$found) {
			foreach (App::path('vendors') as $vendor) {
				if (is_dir($vendor . 'PHPUnit')) {
					$path = $vendor;
				}
			}

			if ($path && ini_set('include_path', $path . PATH_SEPARATOR . ini_get('include_path'))) {
				$found = include 'PHPUnit' . DS . 'Framework.php';
			}
		}

		if (!$found) {
			$baseDir = $this->_baseDir;
			include CAKE_TESTS_LIB . 'templates/phpunit.php';
			exit();
		}

		PHPUnit_Util_Filter::addFileToFilter(__FILE__, 'DEFAULT');
	}

/**
 * Checks for the xdebug extension required to do code coverage. Displays an error
 * if xdebug isn't installed.
 *
 * @return void
 */
||||||||	protected function _checkPHPUnit() {
		$found = $this->loadTestFramework();
		if (!$found) {
			$baseDir = $this->_baseDir;
			include CAKE_TESTS_LIB . 'templates/phpunit.php';
			exit();
		}
	}

/**
 * Checks for the existence of the test framework files
 *
 * @return boolean true if found, false otherwise
 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ASSIGN
            (AST_VAR)
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CONST))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_CONST))
                                        (AST_CALL
                                            (
                                                (SCALAR)))))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_INCLUDE_OR_EVAL
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CONST))
                                        (SCALAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_EXIT
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_MAGIC_CONST)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_INCLUDE_OR_EVAL
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_EXIT
                    (NULL))))))