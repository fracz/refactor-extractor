    private function getStatusCodeFromParameters()
    {
        if (false !== $this->formKey) {
            $parameters = $this->getParameters();
            $this->determineFormKey($parameters);
            if (is_array($parameters)
                && isset($parameters[$this->formKey])
                && $parameters[$this->formKey] instanceof FormInterface
            ) {
                $form = $parameters[$this->formKey];
            }
        }

        // Check if the form is valid, return an appropriate response code
        if (isset($form) && $form->isBound() && !$form->isValid()) {
            $this->setFailedValidationStatusCode();
        } else {
            $this->setStatusCode(Codes::HTTP_OK);
        }

        return $this->getStatusCode();
    }

    /**
     * Looks for the form in the $parameters. If no formKey is set
     * but a form is found the formKey is set to the index of the found
     * form.
     *
     * @param FormInterface $parameters
     * @return FormInterface
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_PROP
                                            (AST_VAR)))))
                            (AST_INSTANCEOF
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||