    public static function getHttpGetRequest($origin, $url, IO\IOInterface $io, CConfig $config, array $pluginConfig)
    {
        if (substr($origin, -10) === 'github.com') {
            $origin = 'github.com';
            $requestClass = 'GitHub';
        } elseif (in_array($origin, $config->get('github-domains') ?: array())) {
            $requestClass = 'GitHub';
        } elseif (in_array($origin, $config->get('gitlab-domains') ?: array())) {
            $requestClass = 'GitLab';
        } else {
            $requestClass = 'HttpGet';
        }
        $requestClass = __NAMESPACE__ . '\Aspects\\' . $requestClass . 'Request';
        $request = new $requestClass($origin, $url, $io);
        $request->verbose = $pluginConfig['verbose'];
        if ($pluginConfig['insecure']) {
            $request->curlOpts[CURLOPT_SSL_VERIFYPEER] = false;
        }
        if (!empty($pluginConfig['cainfo'])) {
            $request->curlOpts[CURLOPT_CAINFO] = $pluginConfig['cainfo'];
        }
        if (!empty($pluginConfig['userAgent'])) {
            $request->curlOpts[CURLOPT_USERAGENT] = $pluginConfig['userAgent'];
        }
        return $request;
    }

    /**
     * @return Aspects\JoinPoint
     */
||||||||    public static function getHttpGetRequest($origin, $url, IO\IOInterface $io, CConfig $config, array $pluginConfig)
    {
        if (substr($origin, -10) === 'github.com') {
            $origin = 'github.com';
        }
        $requestClass = __NAMESPACE__ . '\Aspects\\' . self::getRequestClass($origin, $config) . 'Request';
        $request = new $requestClass($origin, $url, $io);
        $request->verbose = $pluginConfig['verbose'];
        if ($pluginConfig['insecure']) {
            $request->curlOpts[CURLOPT_SSL_VERIFYPEER] = false;
        }
        if (!empty($pluginConfig['cainfo'])) {
            $request->curlOpts[CURLOPT_CAINFO] = $pluginConfig['cainfo'];
        }
        if (!empty($pluginConfig['userAgent'])) {
            $request->curlOpts[CURLOPT_USERAGENT] = $pluginConfig['userAgent'];
        }
        return $request;
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_UNARY_OP
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (NULL)
                        (AST_ARRAY))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (NULL)
                        (AST_ARRAY))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_UNARY_OP
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))