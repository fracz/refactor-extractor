	public function clean()
	{
		$this->removedTags = array();
		$elem = $this->dom->getElementsByTagName('body')->item(0);
		if (is_null($elem)) {
			return array();
		}
		$this->cleanNodes($elem, true);
		return $this->removedTags;
	}
}||||||||	public function clean()
	{
		$this->removedTags = array();
		$elem = $this->getRealElement();
		if (is_null($elem)) {
			return array();
		}
		$this->cleanNodes($elem, true);
		return $this->removedTags;
	}

	/**
	 * Get Element without doc type.
	 * @return DOMElement
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_ARRAY)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CONST)))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))