||||||||    protected function initializeSnippetsAppender()
    {
        $contextRefl = new \ReflectionClass(
            $this->container->get('behat.context.dispatcher')->getContextClass()
        );

        if ($contextRefl->implementsInterface('Behat\Behat\Context\ClosuredContextInterface')) {
            throw new \RuntimeException(
                '--append-snippets doesn\'t support closured contexts'
            );
        }

        $formatManager = $this->container->get('behat.formatter.manager');
        $formatManager->setFormattersParameter('snippets', false);

        $formatter = $formatManager->initFormatter('snippets');
        $formatter->setParameter('decorated', false);
        $formatter->setParameter('output_decorate', false);
        $formatter->setParameter('output', $snippets = fopen('php://memory', 'rw'));

        $this->container->get('behat.event_dispatcher')
            ->addListener('afterSuite', function() use($contextRefl, $snippets) {
                rewind($snippets);
                $snippets = stream_get_contents($snippets);

                if (trim($snippets)) {
                    $snippets = strtr($snippets, array('\\' => '\\\\', '$' => '\\$'));
                    $context  = file_get_contents($contextRefl->getFileName());
                    $context  = preg_replace('/}[ \n]*$/', rtrim($snippets)."\n}\n", $context);

                    file_put_contents($contextRefl->getFileName(), $context);
                }
            }, -5);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)))
        (
            (SCALAR)
            (AST_CLOSURE
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR)
                    (AST_CLOSURE_VAR))
                (
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (SCALAR))
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_VAR))))))))
            (AST_UNARY_OP
                (SCALAR)))))