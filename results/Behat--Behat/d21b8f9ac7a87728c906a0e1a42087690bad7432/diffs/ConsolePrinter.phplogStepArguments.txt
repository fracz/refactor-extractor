    public function logStepArguments($code, array $args)
    {
        foreach ($args as $argument) {
            if ($argument instanceof PyString) {
                $this->output->writeln(sprintf("<%s>%s</%s>",
                    $code, $this->getPyString($argument, 6), $code
                ));
            } elseif ($argument instanceof Table) {
                $this->output->writeln(sprintf("<%s>%s</%s>",
                    $code, $this->getTable($argument, 6), $code
                ));
            }
        }
    }

    /**
     * Returns formatted tag string, prepared for console output
     *
     * @param   Section $section    section instance
     *
     * @return  string
     */
||||||||    public function logStepArguments($code, array $args)
    {
        foreach ($args as $argument) {
            if ($argument instanceof PyString) {
                $this->output->writeln(sprintf("<%s>%s</%s>",
                    $code, $this->getPyString($argument, 6 + $this->baseIndent), $code
                ));
            } elseif ($argument instanceof Table) {
                $this->output->writeln(sprintf("<%s>%s</%s>",
                    $code, $this->getTable($argument, 6 + $this->baseIndent), $code
                ));
            }
        }
    }

    /**
     * Calculates max step description size for scenario/background
     *
     * @param   Section $scenario   scenario for calculations
     *
     * @return  integer             description length
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR)))))
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_VAR)
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_PROP
                                                        (AST_VAR)))))
                                        (AST_VAR)))))))))))