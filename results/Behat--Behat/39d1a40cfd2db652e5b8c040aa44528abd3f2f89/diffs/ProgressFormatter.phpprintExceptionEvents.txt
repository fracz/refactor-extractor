    protected function printExceptionEvents(array $events)
    {
        foreach ($events as $number => $event) {
            $exception = $event->get('exception');

            if (null !== $exception) {
                $color = $exception instanceof Pending ? 'pending' : 'failed';

                if ($this->parameters->get('verbose')) {
                    $error = (string) $exception;
                } else {
                    $error = $exception->getMessage();
                }
                $error = sprintf("%s. %s",
                    str_pad((string) ($number + 1), 2, '0', STR_PAD_LEFT),
                    strtr($error, array("\n" => "\n    "))
                );
                $error = $this->relativizePathsInString($error);

                $this->writeln("{+$color}$error{-$color}");
            }

            $this->printStepPath($event->getSubject(), $event->get('definition'), $exception);
        }
    }

||||||||    protected function printExceptionEvents(array $events)
    {
        foreach ($events as $number => $event) {
            $exception = $event->get('exception');

            if (null !== $exception) {
                $color = $exception instanceof Pending ? 'pending' : 'failed';

                if ($this->parameters->get('verbose')) {
                    $error = (string) $exception;
                } else {
                    $error = $exception->getMessage();
                }
                $error = sprintf("%s. %s",
                    str_pad((string) ($number + 1), 2, '0', STR_PAD_LEFT),
                    strtr($error, array("\n" => "\n    "))
                );
                $error = $this->relativizePathsInString($error);

                $this->writeln("{+$color}$error{-$color}");
            }

            $this->printStepPath($event->getSubject(), $event->get('definition'), $exception);
        }
    }

    /**
     * Print path to step information.
     *
     * @param   StepNode    $step           step node
     * @param   Definition  $definition     definition (if step defined)
     * @param   Exception   $exception      exception (if step failed)
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_INSTANCEOF
                                    (AST_VAR))
                                (SCALAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CAST
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_CAST
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CONST)))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_INSTANCEOF
                                    (AST_VAR))
                                (SCALAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CAST
                                            (AST_VAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_CAST
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR)
                                            (SCALAR)
                                            (AST_CONST)))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (SCALAR)
                                                    (SCALAR))))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_VAR))))))