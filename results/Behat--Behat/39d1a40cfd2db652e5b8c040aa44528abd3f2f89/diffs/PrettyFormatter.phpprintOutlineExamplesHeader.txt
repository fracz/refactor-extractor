    protected function printOutlineExamplesHeader(TableNode $examples)
    {
        $keyword = $examples->getKeyword();
        $this->writeln("    $keyword:");
        $header  = preg_replace(
            '/|([^|]*)|/',
            '{+skipped}$1{-skipped}',
            '      ' . $examples->getRowAsString(0)
        );

        $this->writeln($header);
    }

||||||||    protected function printOutlineExamplesHeader(TableNode $examples)
    {
        $keyword = $examples->getKeyword();
        $this->writeln("    $keyword:");
        $header  = preg_replace(
            '/|([^|]*)|/',
            '{+skipped}$1{-skipped}',
            '      ' . $examples->getRowAsString(0)
        );

        $this->writeln($header);
    }

    /**
     * Print outline example result.
     *
     * @param   TableNode   $examples   examples table
     * @param   integer     $iteration  example row
     * @param   integer     $result     result code
     * @param   boolean     $isSkipped  is outline example skipped
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))