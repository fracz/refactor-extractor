    protected function getFeatureOrScenarioName(AbstractNode $node, $haveBaseIndent = true)
    {
        $keyword    = $node->getKeyword();
        $baseIndent = ($node instanceof FeatureNode) || !$haveBaseIndent ? '' : '  ';

        if (!$node instanceof BackgroundNode) {
            $lines = explode("\n", $node->getTitle());
            $title = array_shift($lines);

            if (count($lines)) {
                $indent = $baseIndent . str_repeat(' ', mb_strlen("$keyword: "));
                foreach ($lines as $line) {
                    $title .= "\n" . $indent . $line;
                }
            }

            return "$baseIndent$keyword:" . ($title ? ' ' . $title : '');
        }

        return "$baseIndent$keyword:";
    }

    /**
     * Recalculate max descriptions size for section elements.
     *
     * @param   BackgroundNode $scenario   element for calculations
     *
     * @return  integer                 description length
     */
||||||||    protected function getFeatureOrScenarioName(AbstractNode $node, $haveBaseIndent = true)
    {
        $keyword    = $node->getKeyword();
        $baseIndent = ($node instanceof FeatureNode) || !$haveBaseIndent ? '' : '  ';

        if (!$node instanceof BackgroundNode) {
            $lines = explode("\n", $node->getTitle());
            $title = array_shift($lines);

            if (count($lines)) {
                $indent = $baseIndent . str_repeat(' ', mb_strlen("$keyword: "));
                foreach ($lines as $line) {
                    $title .= "\n" . $indent . $line;
                }
            }

            return "$baseIndent$keyword:" . ($title ? ' ' . $title : '');
        }

        return "$baseIndent$keyword:";
    }

    /**
     * Recalculate max descriptions size for section elements.
     *
     * @param   BackgroundNode $scenario   element for calculations
     *
     * @return  integer
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_ENCAPS_LIST
                                                        (AST_VAR)
                                                        (SCALAR))))))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ENCAPS_LIST
            (AST_VAR)
            (AST_VAR)
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_VAR)))
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (AST_ENCAPS_LIST
                                                        (AST_VAR)
                                                        (SCALAR))))))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (AST_VAR))))))))
                (AST_RETURN
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (AST_VAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ENCAPS_LIST
            (AST_VAR)
            (AST_VAR)
            (SCALAR))))