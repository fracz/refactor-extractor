    public function __construct(Finder $featureFiles, Container $container)
    {
        $this->position     = 0;
        $this->dispatcher   = $container->getEventDispatcherService();

        foreach ($featureFiles as $file) {
            $this->featureRunners[] = new FeatureRunner(
                $container->getParserService()->parseFile($file)
              , $container
            );
        }
    }

||||||||    public function __construct(Finder $featureFiles, Container $container)
    {
        foreach ($featureFiles as $file) {
            $this->addChildRunner(new FeatureRunner(
                $container->getParserService()->parseFile($file)
              , $container
              , $this
            ));
        }

        parent::__construct('suite', $container->getEventDispatcherService());
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (NULL))
                (AST_NEW
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_VAR)))
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_VAR)))
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)))))