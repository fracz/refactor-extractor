||||||||    private function validateArguments(Definition $definition, array $parameters, array $arguments)
    {
        foreach ($parameters as $num => $parameter) {
            $name = $parameter->getName();

            if (isset($arguments[$num]) || isset($arguments[$name])) {
                continue;
            }

            throw new UnknownParameterValueException(sprintf(
                'Can not find a matching value for an argument `%s` of the method `%s`.',
                $name,
                $definition->getPath()
            ));
        }
    }

    /**
     * Splits matches into two separate arrays - numbered and named.
     *
     * `preg_match` matches named arguments with named indexes and also
     * represents all arguments with numbered indexes. This method splits
     * that one array into two independent ones.
     *
     * @param array $match
     * @param array $parameterNames
     *
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_THROW
                (AST_NEW
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))))