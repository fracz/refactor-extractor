    protected function preparePath($path)
    {
        $pathTokens = $this->pathTokens;
        $path = preg_replace_callback('/%([^%]+)%/', function($matches) use($pathTokens) {
            $name = $matches[1];
            if (defined($name)) {
                return constant($name);
            } elseif (isset($pathTokens[$name])) {
                return $pathTokens[$name];
            }
            return $matches[0];
        }, $path);

        $path = str_replace('/', DIRECTORY_SEPARATOR, str_replace('\\', '/', $path));

        if (!file_exists($path)) {
            foreach (explode(':', get_include_path()) as $libPath) {
                if (file_exists($libPath . DIRECTORY_SEPARATOR . $path)) {
                    $path = $libPath . DIRECTORY_SEPARATOR . $path;
                    break;
                }
            }
        }

        if (!file_exists($path) && file_exists(getcwd() . DIRECTORY_SEPARATOR . $path)) {
            $path = getcwd() . DIRECTORY_SEPARATOR . $path;
        }

        return $path;
    }

    /**
     * Merges two arrays into one with overwrite. It works the same as array_merge_recursive, but
     * overwrites non-array values instead of turning them into arrays.
     *
     * @param   array  $array1  to
     * @param   array  $array2  from
     *
     * @return  array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_RETURN
                                        (AST_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_RETURN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))))))
                        (AST_RETURN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CALL)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_CONST))
                                            (AST_VAR))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_CONST))
                                            (AST_VAR)))
                                    (AST_BREAK
                                        (NULL))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL)
                                (AST_CONST))
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_CONST))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||