    public function printSnippets(Event $event)
    {
        $statistics = $event->getSubject()->get('behat.statistics_collector');

        if (count($statistics->getDefinitionsSnippets())) {
            $this->write("\n" .
                $this->getTranslator()->trans(
                    "You can implement step definitions for undefined steps with these snippets:",
                    array(),
                    'messages'
                ) .
            "\n", 'undefined');

            foreach ($statistics->getDefinitionsSnippets() as $key => $snippet) {
                $this->write($snippet, 'undefined');
                $this->write();
            }
        }
    }

    /**
     * Return Event Dispatcher.
     *
     * @return  EventDispatcher
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ARRAY)
                                        (SCALAR))))
                            (SCALAR))
                        (SCALAR)))
                (AST_FOREACH
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR))))))))||||||||