    public function printStep(Event $event)
    {
        $step = $event->getSubject();

        switch ($event->get('result')) {
            case StepTester::PASSED:
                $this->write('.', 'passed', false);
                break;
            case StepTester::SKIPPED:
                $this->write('-', 'skipped', false);
                break;
            case StepTester::PENDING:
                $this->write('P', 'pending', false);
                break;
            case StepTester::UNDEFINED:
                $this->write('U', 'undefined', false);
                break;
            case StepTester::FAILED:
                $this->write('F', 'failed', false);
                break;
        }
    }

    /**
      * Listen to `suite.run.after` event & print empty line.
      *
      * @param   Event   $event  notified event
      */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CONST)))
                    (AST_BREAK
                        (NULL)))))))||||||||