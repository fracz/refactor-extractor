    protected function collectScenarioResult($result)
    {
        ++$this->scenariosCount;
        ++$this->scenariosStatuses[$this->statuses[$result]];
        if (0 !== $result) {
            $this->isPassed = false;
        }
    }

    /**
     * Collects step statistics.
     *
     * @param   Symfony\Component\EventDispatcher\Event $event  step.after event
     */
||||||||    protected function collectScenarioResult($result)
    {
        ++$this->scenariosCount;
        ++$this->scenariosStatuses[$this->statuses[$result]];
    }

    /**
     * Collects step statistics.
     *
     * @param   Symfony\Component\EventDispatcher\Event $event  step.after event
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_PRE_INC
        (AST_PROP
            (AST_VAR)))
    (AST_PRE_INC
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_PRE_INC
        (AST_PROP
            (AST_VAR)))
    (AST_PRE_INC
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))))