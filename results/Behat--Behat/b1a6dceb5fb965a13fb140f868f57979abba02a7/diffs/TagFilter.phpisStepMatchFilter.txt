||||||||    public function isStepMatchFilter(StepNode $step, $filter = null)
    {
        $scenario   = $step->getParent();
        $feature    = $scenario->getFeature();

        return $this->isClosuresMatchFilter(
            function($tag) use ($feature, $scenario) {
                return $scenario->hasTag($tag) || $feature->hasTag($tag);
            }
          , function($tag) use ($feature, $scenario) {
                return !$scenario->hasTag($tag) && !$feature->hasTag($tag);
            }
          , null !== $filter ? $filter : $this->filterString
        );
    }

    /**
     * Check If Passed Has/Hasnt Closures Passes With Filter.
     *
     * @param   Closure $hasTagCheck    closure to check that something has got tag
     * @param   Closure $hasntTagCheck  closure to check that something hasn't got tag
     * @param   string  $filter         filter string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))
                (AST_CONDITIONAL
                    (AST_BINARY_OP
                        (AST_CONST)
                        (AST_VAR))
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))))))