||||||||    public function run(EnvironmentInterface $environment, $tokens = array())
    {
        $oldHandler = set_error_handler(array($this, 'errorHandler'), E_ALL ^ E_WARNING);
        $values     = $this->values;

        if (count($tokens)) {
            foreach ($values as $i => $value) {
                if ($value instanceof TableNode || $value instanceof PyStringNode) {
                    $values[$i] = clone $value;
                    $values[$i]->replaceTokens($tokens);
                }
            }
        }

        array_unshift($values, $environment);
        call_user_func_array($this->callback, $values);

        if (null !== $oldHandler) {
            set_error_handler($oldHandler);
        }
    }
}
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_BINARY_OP
                    (AST_CONST)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (AST_INSTANCEOF
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_CLONE
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (
                                            (AST_VAR)))))))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (AST_VAR)))))))