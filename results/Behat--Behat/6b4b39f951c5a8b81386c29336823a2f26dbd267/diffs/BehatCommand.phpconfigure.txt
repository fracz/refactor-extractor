||||||||    protected function configure()
    {
        $this->setName('behat');

        // Set commands default parameters from container loaded ones
        $this->setDefinition(array(
            new InputArgument('features'
              , InputArgument::OPTIONAL
              , 'Features path'
            ),
            new InputOption('--configuration',  '-c'
              , InputOption::PARAMETER_REQUIRED
              , 'Specify external configuration file to load (*.xml or *.yml).'
            ),
            new InputOption('--format',         '-f'
              , InputOption::PARAMETER_REQUIRED
              , 'How to format features (Default: pretty). Available formats is pretty & progress.'
            ),
            new InputOption('--name',           '-n'
              , InputOption::PARAMETER_REQUIRED
              , 'Only execute the feature elements (features or scenarios) which match part of the given name.'
            ),
            new InputOption('--tags',           '-t'
              , InputOption::PARAMETER_REQUIRED
              , 'Only execute the features or scenarios with tags matching expression.'
            ),
            new InputOption('--i18n',           '-i'
              , InputOption::PARAMETER_REQUIRED
              , 'Print formatters output in particular language.'
            ),
            new InputOption('--verbose',        '-v'
              , InputOption::PARAMETER_NONE
              , 'Increase verbosity of fail messages.'
            ),
            new InputOption('--no-colors',      '-C'
              , InputOption::PARAMETER_NONE
              , 'Do not use ANSI color in the output.'
            ),
            new InputOption('--no-time',        '-T'
              , InputOption::PARAMETER_NONE
              , 'Hide time statistics in output.'
            ),
            new InputOption('--help',           '-h'
              , InputOption::PARAMETER_NONE
              , 'Display this help message.'
            ),
            new InputOption('--version',        '-V'
              , InputOption::PARAMETER_NONE
              , 'Display this program version.'
            ),
        ));
    }

    /**
     * @see     Symfony\Component\Console\Command\Command
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))))))