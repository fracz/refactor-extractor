    public function fireSuiteHooks(Event $event)
    {
        switch ($event->getName()) {
            case 'suite.before':
                $hookName = 'suite.before';
                break;
            case 'suite.after':
                $hookName = 'suite.after';
                break;
        }

        $this->fireHooks($event, $hookName, function($hook) {return true;}, function($hook) {return true;});
    }

    /**
     * Handle Feature Events & Fire Associated Hooks.
     *
     * @param   Event   $event  event
     */
||||||||    protected function fireSuiteHooks($name, Event $event)
    {
        if (!count($this->hooks)) {
            $this->loadHooks();
        }

        $hooks = isset($this->hooks[$name]) ? $this->hooks[$name] : array();

        foreach ($hooks as $hook) {
            if (is_callable($hook)) {
                $hook($event);
            } else {
                $hook[1]($event);
            }
        }
    }

    /**
     * Fire feature hooks with specified name.
     *
     * @param   string  $name       hooks name
     * @param   Event   $event      event to which hooks glued
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST))))
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (AST_ARRAY)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_CALL
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (
                                (AST_VAR)))))))))