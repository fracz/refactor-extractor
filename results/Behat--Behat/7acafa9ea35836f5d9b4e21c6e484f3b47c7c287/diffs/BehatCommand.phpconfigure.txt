    protected function configure()
    {
        $this->setName('behat');
        $this->setDefinition(array(
            new InputArgument('features',
                InputArgument::OPTIONAL,
                'Features path'
            ),
            new InputOption('--config',         '-c',
                InputOption::VALUE_REQUIRED,
                'Specify external configuration file to load (*.xml or *.yml).'
            ),
            new InputOption('--format',         '-f',
                InputOption::VALUE_REQUIRED,
                'How to format features (Default: pretty). Available formats is pretty, progress, html.'
            ),
            new InputOption('--out',            null,
                InputOption::VALUE_REQUIRED,
                'Write output to a file/directory instead of STDOUT.'
            ),
            new InputOption('--name',           '-n',
                InputOption::VALUE_REQUIRED,
                'Only execute the feature elements (features or scenarios) which match part of the given name.'
            ),
            new InputOption('--tags',           '-t',
                InputOption::VALUE_REQUIRED,
                'Only execute the features or scenarios with tags matching expression.'
            ),
            new InputOption('--lang',           null,
                InputOption::VALUE_REQUIRED,
                'Print formatters output in particular language.'
            ),
            new InputOption('--verbose',        '-v',
                InputOption::VALUE_NONE,
                'Increase verbosity of fail messages.'
            ),
            new InputOption('--no-colors',      '-C',
                InputOption::VALUE_NONE,
                'Do not use ANSI color in the output.'
            ),
            new InputOption('--no-time',        '-T',
                InputOption::VALUE_NONE,
                'Hide time in output.'
            ),
            new InputOption('--help',           '-h',
                InputOption::VALUE_NONE,
                'Display this help message.'
            ),
            new InputOption('--version',        '-V',
                InputOption::VALUE_NONE,
                'Display this program version.'
            ),
            new InputOption('--example',        null,
                InputOption::VALUE_NONE,
                'Print Gherkin example in specified language (--lang).'
            ),
            new InputOption('--steps',          null,
                InputOption::VALUE_NONE,
                'Print available steps in specified language (--lang).'
            ),
            new InputOption('--no-multiline',   null,
                InputOption::VALUE_NONE,
                'No multiline arguments in output.'
            ),
            new InputOption('--strict',         null,
                InputOption::VALUE_NONE,
                'Fail if there are any undefined or pending steps.'
            ),
        ));
    }

    /**
     * {@inheritdoc}
     *
     * @uses    configureContainer()
     * @uses    printUsageExample()
     * @uses    locateFeaturesPaths()
     * @uses    loadBootstraps()
     * @uses    configureFormatter()
     * @uses    configureGherkinParser()
     * @uses    configureDefinitionDispatcher()
     * @uses    configureHookDispatcher()
     * @uses    configureEnvironmentBuilder()
     * @uses    configureEventDispathcer()
     * @uses    runFeatures()
     */
||||||||    protected function configure()
    {
        $this->setName('behat');
        $this->setDefinition(array(
            new InputArgument('features',
                InputArgument::OPTIONAL,
                'Features path'
            ),
            new InputOption('--config',         '-c',
                InputOption::VALUE_REQUIRED,
                'Specify external configuration file to load (behat.yml & config/behat.yml will be used in other way).'
            ),
            new InputOption('--out',            null,
                InputOption::VALUE_REQUIRED,
                'Write formatter output to a file/directory instead of STDOUT.'
            ),
            new InputOption('--name',           '-n',
                InputOption::VALUE_REQUIRED,
                'Only execute the feature elements (features or scenarios) which match part of the given name.'
            ),
            new InputOption('--tags',           '-t',
                InputOption::VALUE_REQUIRED,
                'Only execute the features or scenarios with tags matching expression.'
            ),
            new InputOption('--verbose',        '-v',
                InputOption::VALUE_NONE,
                'Increase verbosity of fail messages.'
            ),
            new InputOption('--strict',         null,
                InputOption::VALUE_NONE,
                'Fail if there are any undefined or pending steps.'
            ),


            new InputOption('--usage',          null,
                InputOption::VALUE_NONE,
                'Print *.feature example in specified language (--lang).'
            ),
            new InputOption('--steps',          null,
                InputOption::VALUE_NONE,
                'Print available steps in specified language (--lang).'
            ),


            new InputOption('--format',         '-f',
                InputOption::VALUE_REQUIRED,
                'How to format features (Default: pretty). Available formats is pretty, progress, html.'
            ),
            new InputOption('--colors',         null,
                InputOption::VALUE_NONE,
                'Force Behat to use ANSI color in the output.'
            ),
            new InputOption('--no-colors',      '-C',
                InputOption::VALUE_NONE,
                'Do not use ANSI color in the output.'
            ),
            new InputOption('--no-time',        '-T',
                InputOption::VALUE_NONE,
                'Hide time in output.'
            ),
            new InputOption('--lang',           null,
                InputOption::VALUE_REQUIRED,
                'Print formatters output in particular language.'
            ),
            new InputOption('--no-multiline',   null,
                InputOption::VALUE_NONE,
                'No multiline arguments in output.'
            ),


            new InputOption('--help',           '-h',
                InputOption::VALUE_NONE,
                'Display this help message.'
            ),
            new InputOption('--version',        '-V',
                InputOption::VALUE_NONE,
                'Display this program version.'
            ),
        ));
    }

    /**
     * {@inheritdoc}
     *
     * @uses    configureContainer()
     * @uses    printUsageExample()
     * @uses    locateFeaturesPaths()
     * @uses    loadBootstraps()
     * @uses    configureFormatter()
     * @uses    configureGherkinParser()
     * @uses    configureDefinitionDispatcher()
     * @uses    configureHookDispatcher()
     * @uses    configureEnvironmentBuilder()
     * @uses    configureEventDispathcer()
     * @uses    runFeatures()
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_NEW
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR)))
                    (NULL))))))