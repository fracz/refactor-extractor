    private function getFeaturesPaths()
    {
        $rerun = $this->getContainer()->get('behat.rerun_data_collector');
        if ($rerun->hasFailedScenarios()) {
            return $return->getFailedScenariosPaths();
        }

        return $this->getContainer()->get('behat.path_locator')->locateFeaturesPaths();
    }
}||||||||    private function getFeaturesPaths()
    {
        $rerun = $this->getContainer()->get('behat.rerun_data_collector');
        if ($rerun->hasFailedScenarios()) {
            return $return->getFailedScenariosPaths();
        }

        return $this->getContainer()->get('behat.path_locator')->locateFeaturesPaths();
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR))
                (
                    (SCALAR))))))