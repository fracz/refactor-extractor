    public function __construct(ScenarioElement $scenario, BackgroundElement $background = null,
                                Container $container, RunnerInterface $parent)
    {
        $this->scenario     = $scenario;
        $this->environment  = $container->getEnvironmentService();
        $this->definitions  = $container->getStepsLoaderService();

        if (null !== $background) {
            $this->backgroundRunner = new BackgroundRunner(
                $background
              , $this->environment
              , $container
              , $this
            );
        }

        foreach ($scenario->getSteps() as $step) {
            $this->addChildRunner(new StepRunner($step, $this->environment, $container, $this));
        }

        parent::__construct('scenario', $container->getEventDispatcherService(), $parent);
    }

    /**
     * Sets example tokens for steps (from Outline)
     *
     * @param   array   $tokens associative array of tokens
     */
||||||||    public function __construct(ScenarioElement $scenario, BackgroundElement $background = null,
                                Container $container, RunnerInterface $parent)
    {
        $this->scenario     = $scenario;
        $this->definitions  = $container->getStepsLoaderService();
        $environment        = $container->getEnvironmentService();

        if (null !== $background) {
            $this->backgroundRunner = new BackgroundRunner(
                $background, $environment, $container, $this
            );
        }

        foreach ($scenario->getSteps() as $step) {
            $this->addChildRunner(new StepRunner($step, $environment, $container, $this));
        }

        parent::__construct('scenario', $container->getEventDispatcherService(), $parent);
    }

    /**
     * Sets example tokens for steps (from Outline)
     *
     * @param   array   $tokens associative array of tokens
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_VAR))))