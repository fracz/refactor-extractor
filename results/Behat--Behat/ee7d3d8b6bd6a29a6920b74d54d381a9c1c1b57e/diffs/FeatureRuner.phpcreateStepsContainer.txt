||||||||    protected function createStepsContainer()
    {
        $class = $this->worldClass;
        $world = new $class;
        try {
            $steps = new StepsContainer($this->stepDefinitions, $world);
        } catch (Redundant $e) {
            $this->printer->logStatus('failed', $e->getMessage());
        }

        return $steps;
    }

    /**
     * Runs feature tests
     *
     * @param   Feature $feature                    feature instance
     *
     * @return  \Everzet\Behat\Stats\FeatureStats   feature test run statuses
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))