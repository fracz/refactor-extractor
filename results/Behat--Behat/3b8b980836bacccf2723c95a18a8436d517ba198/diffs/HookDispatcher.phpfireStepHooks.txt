||||||||    public function fireStepHooks(Event $event)
    {
        switch ($event->getName()) {
            case 'step.before':
                $hookName = 'step.before';
                break;
            case 'step.after':
                $hookName = 'step.after';
                break;
        }

        $step = $event->getSubject();

        $this->fireHooks($event, $hookName
            , function($hook) use($step) {
                $tagsFilter = new TagFilter($hook[0]);

                return $tagsFilter->isScenarioMatch($step->getParent());
            }
            , function($hook) use($step) {
                $nameFilter = new NameFilter($hook[0]);

                return $nameFilter->isScenarioMatch($step->getParent());
            }
        );
    }

    /**
     * Fire Hooks With Specified Name & Filter.
     *
     * @param   Event   $event      event to which hooks glued
     * @param   string  $name       hooks name
     * @param   Closure $tagsFilter tags filtering closure
     * @param   Closure $nameFilter name filtering closure
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))))