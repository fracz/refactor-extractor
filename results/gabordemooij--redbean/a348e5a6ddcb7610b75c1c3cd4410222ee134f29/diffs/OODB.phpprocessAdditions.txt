||||||||	private function processAdditions($bean,$ownAdditions) {
		$myFieldLink = $bean->getMeta('type').'_id';
		foreach($ownAdditions as $addition) {
			if ($addition instanceof RedBean_OODBBean) {
				$addition->$myFieldLink = $bean->id;
				$addition->setMeta('cast.'.$myFieldLink,'id');
				$this->store($addition);
				if (!$this->isFrozen) {
					$this->writer->addIndex($addition->getMeta('type'),
						'index_foreignkey_'.$bean->getMeta('type'),
						 $myFieldLink);
					$isDep = $this->isDependentOn($addition->getMeta('type'),$bean->getMeta('type'));
					$this->writer->addFK($addition->getMeta('type'),$bean->getMeta('type'),$myFieldLink,'id',$isDep);
				}
			}
			else {
				throw new RedBean_Exception_Security('Array may only contain RedBean_OODBBeans');
			}
		}

	}

	/**
	 * Checks whether reference type has been marked as dependent on target type.
	 * This is the result of setting reference type as a key in R::dependencies() and
	 * putting target type in its array.
	 *
	 * @param string $refType   reference type
	 * @param string $otherType other type / target type
	 *
	 * @return boolean
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR)))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR))))))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (SCALAR)))
                                            (AST_VAR)
                                            (SCALAR)
                                            (AST_VAR))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR))))))))))