	public function run() {

		$candy = R::dispense('CandyBar');
		$s = strval($candy);
		asrt($s,'candy!');

		$obj = new stdClass;
		$bean = R::dispense('bean');
		$bean->property1 = 'property1';
		$bean->exportToObj($obj);
		asrt($obj->property1,'property1');

		R::debug(1);
		flush();
		ob_flush();
		ob_clean();
		ob_start();
		R::exec('SELECT 123');
		$out = ob_get_contents();
		ob_end_clean();
		flush();
		pass();
		asrt((strpos($out,'SELECT 123')!==false),true);
		R::debug(0);
		flush();
		ob_flush();
		ob_clean();
		ob_start();
		R::exec('SELECT 123');
		$out = ob_get_contents();
		ob_end_clean();
		flush();
		pass();
		asrt($out,'');
		R::debug(0);
		pass();
	}

}||||||||	public function run() {

		$candy = R::dispense('CandyBar');
		$s = strval($candy);
		asrt($s,'candy!');

		$obj = new stdClass;
		$bean = R::dispense('bean');
		$bean->property1 = 'property1';
		$bean->exportToObj($obj);
		asrt($obj->property1,'property1');

		R::debug(1);
		flush();
		ob_flush();
		ob_clean();
		ob_start();
		R::exec('SELECT 123');
		$out = ob_get_contents();
		ob_end_clean();
		flush();
		pass();
		asrt((strpos($out,'SELECT 123')!==false),true);
		R::debug(0);
		flush();
		ob_flush();
		ob_clean();
		ob_start();
		R::exec('SELECT 123');
		$out = ob_get_contents();
		ob_end_clean();
		flush();
		pass();
		asrt($out,'');
		R::debug(0);
		pass();

		testpack('test to string override');
		$band = R::dispense('band');
		$str = strval($band);
		asrt($str,'bigband');

		testpack('test whether we can use isset/set in model');
		$band->setProperty('property1',123);
		asrt($band->property1,123);
		asrt($band->checkProperty('property1'),true);
		asrt($band->checkProperty('property2'),false);
		$band = new Model_Band;
		$bean = R::dispense('band');
		$bean->property3 = 123;
		$band->loadBean($bean);
		$bean->property4 = 345;
		$band->setProperty('property1',123);
		asrt($band->property1,123);
		asrt($band->checkProperty('property1'),true);
		asrt($band->checkProperty('property2'),false);
		asrt($band->property3,123);
		asrt($band->property4,345);


	}

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (AST_CONST)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (AST_CONST)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_CALL)
    (AST_CALL)
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)))
    (AST_CALL)
    (AST_CALL
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))
            (SCALAR))))