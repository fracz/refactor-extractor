class RedBean_OODB { public $pkey = false; private $rollback = false; private static $me = null; private $engine = "myisam"; private $frozen = false; private $toolbox = null; public function initWithToolBox( RedBean_ToolBox_ModHub $toolbox ) { $this->toolbox = $toolbox; $db = $this->toolbox->getDatabase(); $writer = $this->toolbox->getWriter(); if ($this->engine === "innodb") { $db->exec($writer->getQuery("prepare_innodb")); $db->exec($writer->getQuery("starttransaction")); } else if ($this->engine === "myisam") { $db->exec($writer->getQuery("prepare_myisam")); } if (!$this->frozen) { $db->exec($writer->getQuery("clear_dtyp")); $db->exec($writer->getQuery("setup_dtyp")); $db->exec($writer->getQuery("setup_locking")); $db->exec($writer->getQuery("setup_tables")); } return true; } public function __destruct() { $this->getToolBox()->getLockManager()->unlockAll(); $this->toolbox->getDatabase()->exec( $this->toolbox->getWriter()->getQuery("destruct", array("engine"=>$this->engine,"rollback"=>$this->rollback)) ); } public function isFrozen() { return (boolean) $this->frozen; } public static function getInstance( RedBean_ToolBox_ModHub $toolbox = NULL ) { if (self::$me === null) { self::$me = new RedBean_OODB; } if ($toolbox) self::$me->initWithToolBox( $toolbox ); return self::$me; } public function getToolBox() { return $this->toolbox; } public function getEngine() { return $this->engine; } public function setEngine( $engine ) { if ($engine=="myisam" || $engine=="innodb") { $this->engine = $engine; } else { throw new Exception("Unsupported database engine"); } return $this->engine; } public static function rollback() { $this->rollback = true; } public function freeze() { $this->frozen = true; } public function unfreeze() { $this->frozen = false; } public function generate( $classes, $prefix = false, $suffix = false ) { return $this->toolbox->getClassGenerator()->generate($classes,$prefix,$suffix); } public static function gen($arg, $prefix = false, $suffix = false) { return self::getInstance()->generate($arg, $prefix, $suffix); } public static function keepInShape($gc = false ,$stdTable=false, $stdCol=false) { return self::getInstance()->getToolBox()->getOptimizer()->run($gc, $stdTable, $stdCol); } public static function kickstartDev( $gen, $dsn, $username="root", $password="", $debug=false ) { return RedBean_Setup::kickstartDev( $gen, $dsn, $username, $password, $debug ); } public static function kickstartFrozen( $gen, $dsn, $username="root", $password="" ) { return RedBean_Setip::kickstartFrozen( $gen, $dsn, $username, $password); } }
class RedBean_OODBBean { }
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||