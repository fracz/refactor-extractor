||||||||    public function check( RedBean_OODBBean $bean ) {

    //Bean should contain a hidden information section
        if (!isset($bean->__info)) {
            throw new RedBean_Exception_Security("Bean has no Meta Information");
        }

        //Is all meta information present?
        if (!isset($bean->id) || !isset($bean->__info["type"])) {
            throw new RedBean_Exception_Security("Bean has incomplete Meta Information");
        }

        //Pattern of allowed characters
        $pattern = '/[^abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_]/';

        //Does the type contain invalid characters?
        if (preg_match($pattern,$bean->__info["type"])) {
            throw new RedBean_Exception_Security("Bean Type is invalid");
        }

        //Are the properties and values valid?
        foreach($bean as $prop=>$value) {
            if (
            ($prop != "__info") &&
                (
                is_array($value) ||
                is_object($value) ||
                strlen($prop)<1 ||
                preg_match($pattern,$prop)
            )
            ) {
                throw new RedBean_Exception_Security("Invalid Bean: property $prop OR value $value ");
            }
        }
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (AST_CALL
                                        (
                                            (AST_VAR))))
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)))))))))))