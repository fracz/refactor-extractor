||||||||           public function deleteRecord( $table, $id ) {
               $this->adapter->exec("DELETE FROM `$table` WHERE id = $id ");
           }



}
class RedBean_ToolBox_ModHub extends RedBean_ToolBox {

    private $facade;



    public function getDatabase() {
        return $this->give("database");
    }

    public function getWriter() {
        return $this->give("writer");
    }

    public function getFilter() {
        return $this->give("filter");
    }

    public function setFacade( $facade ) {
        $this->facade = $facade;
    }

    public function getFacade() {
        return $this->facade;
    }

    public function __call( $who, $args=array() ) {

        $tool = strtolower(substr($who,3));
        if ($this->has($tool)) {
            return $this->give( $tool );
        }
        else {
           throw new Exception(" $tool not available ");
        }

    }

    public function __get($v) {
      throw new Exception("getter not allowed"); // return $this->facade->$v;
    }

    public function __set($v,$i) {
      throw new Exception("setter not allowed");
    }


}
/**
 * RedBean Validator Alphanumeric
 * @package 		RedBean/Validator/AlphaNumeric.php
 * @description		Checks whether a value is alpha numeric
 * @author			Gabor de Mooij
 * @license			BSD
 */
class RedBean_Validator_AlphaNumeric implements RedBean_Validator {
	/**
	 * (non-PHPdoc)
	 * @see RedBean/RedBean_Validator#check()
	 */
	public function check( $v ) {
		return (bool) preg_match('/^[A-Za-z0-9]+$/', $v);
	}
}
class RedBean_Mod_Filter_NullFilter extends RedBean_Mod implements RedBean_Mod_Filter {

    public function __construct(){}

    public function property( $name, $forReading = false ) {
        return $name;
    }

    public function table( $name ) {
          return $name;
    }

}
class RedBean_Mod_Filter_Strict extends RedBean_Mod implements RedBean_Mod_Filter {

    public function __construct(){}

    public function property( $name, $forReading = false ) {
        $name = strtolower($name);
          if (!$forReading) {
            if ($name=="type") {
                    throw new RedBean_Exception_Security("type is a reserved property to identify the table, pleae use another name for this property.");
            }
            if ($name=="id") {
                    throw new RedBean_Exception_Security("id is a reserved property to identify the record, pleae use another name for this property.");
            }
        }
        $name =  trim(preg_replace("/[^abcdefghijklmnopqrstuvwxyz0123456789]/","",$name));
        if (strlen($name)===0) {
            throw new RedBean_Exception_Security("Empty property is not allowed");
        }
        return $name;
    }

    public function table( $name ) {
          $name =  strtolower(trim(preg_replace("/[^abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]/","",$name)));
          if (strlen($name)===0) {
            throw new RedBean_Exception_Security("Empty property is not allowed");
          }
          return $name;

    }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (SCALAR)))))