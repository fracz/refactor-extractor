    public function generate( $classes, $prefix = false, $suffix = false ) {
        return $this->toolbox->getClassGenerator()->generate($classes,$prefix,$suffix);
    }


/*
    public function clean() {
        return $this->toolbox->getGC()->clean();
    }

    public function removeUnused( ) {
        return $this->toolbox->getGC()->removeUnused( $this, $this->toolbox->getDatabase(), $this->toolbox->getWriter() );
    }

    public function dropColumn( $table, $property ) {
        return $this->toolbox->getGC()->dropColumn($table,$property);
    }

    public function trashAll($type) {
        $this->toolbox->getDatabase()->exec( $this->toolbox->getWriter()->getQuery("drop_type",array("type"=>$this->toolbox->getFilter()->table($type))));
    }
*/


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))||||||||