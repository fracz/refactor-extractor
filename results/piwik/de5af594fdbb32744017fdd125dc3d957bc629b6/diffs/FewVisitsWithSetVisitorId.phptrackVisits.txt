||||||||    private function trackVisits()
    {
        $dateTime = $this->dateTime;
        $idSite   = $this->idSite;

        $t = self::getTracker($idSite, $dateTime, $defaultInit = true);

        // First, some basic tests
        self::settingInvalidVisitorIdShouldThrow($t);

        // We create VISITOR A
        $t->setUrl('http://example.org/index.htm');
        $t->setVisitorId(Piwik_Tracker_Visit::generateUniqueVisitorId());
        self::checkResponse($t->doTrackPageView('incredible title!'));

        // VISITOR B: few minutes later, we trigger the same tracker but with a custom visitor ID,
        // => this will create a new visit B
        $t->setForceVisitDateTime(Piwik_Date::factory($dateTime)->addHour(0.05)->getDatetime());
        $t->setUrl('http://example.org/index2.htm');
        $t->setVisitorId(Piwik_Tracker_Visit::generateUniqueVisitorId());
        self::checkResponse($t->doTrackPageView('incredible title!'));

        // This new visit B will have 2 page views
        $t->setForceVisitDateTime(Piwik_Date::factory($dateTime)->addHour(0.1)->getDatetime());
        $t->setUrl('http://example.org/index3.htm');
        self::checkResponse($t->doTrackPageView('incredible title!'));

        // total = 2 visitors, 3 page views

    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))