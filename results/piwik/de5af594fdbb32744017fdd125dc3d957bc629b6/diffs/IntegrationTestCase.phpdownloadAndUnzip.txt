	public static function downloadAndUnzip( $url, $outputDir, $filename )
	{
		$bufferSize = 1024 * 1024;

		try
		{
			if (!is_dir($outputDir))
			{
				mkdir($outputDir);
			}

			$deflatedOut = $outputDir.'/'.$filename;
			$outfileName = $deflatedOut.'.gz';

			if (file_exists($deflatedOut))
			{
				return;
			}

			$dump = fopen($url, 'rb');
			$outfile = fopen($outfileName, 'wb');
			$bytesRead = 0;
			while (!feof($dump))
			{
				fwrite($outfile, fread($dump, $bufferSize), $bufferSize);
				$bytesRead += $bufferSize;
			}
			fclose($dump);
			fclose($outfile);

			// unzip the dump
			exec("gunzip -c \"".$outfileName."\" > \"$deflatedOut\"", $output, $return);
			if ($return !== 0)
			{
				throw new Exception("gunzip failed($return): ".implode("\n", $output));
			}
		}
		catch (Exception $ex)
		{
			self::markTestSkipped(
				"Cannot download GeoIp DBs, skipping: ".$ex->getMessage()."\n".$ex->getTraceAsString());
		}
	}
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (SCALAR)))
    (AST_TRY
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_RETURN
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR))
            (AST_WHILE
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_VAR)))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_VAR))))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)))))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (NULL)))||||||||