||||||||	private function trackVisits( $visitorCount, $setIp = false, $useLocal = true, $doBulk = false )
	{
		$dateTime = $this->dateTime;
		$idSite   = $this->idSite;

		// use local tracker so mock location provider can be used
		$t = self::getTracker($idSite, $dateTime, $defaultInit = true, $useLocal);
		if ($doBulk)
		{
			$t->enableBulkTracking();
			$t->setTokenAuth(self::getTokenAuth());
		}
		for ($i = 0; $i != $visitorCount; ++$i)
		{
			$t->setNewVisitorId();
			if ($setIp)
			{
				$t->setIp(current($this->ips));
				next($this->ips);
			}
			else
			{
				$t->setIp("1.2.4.$i");
			}

			// first visit
			$date = Piwik_Date::factory($dateTime)->addDay($i);
			$t->setForceVisitDateTime($date->getDatetime());
			$t->setUrl("http://piwik.net/grue/lair");
			$r = $t->doTrackPageView('It\'s pitch black...');
			if (!$doBulk)
			{
				self::checkResponse($r);
			}

			// second visit
			$date = $date->addHour(1);
			$t->setForceVisitDateTime($date->getDatetime());
			$t->setUrl("http://piwik.net/space/quest/iv");
			$r = $t->doTrackPageView("Space Quest XII");
			if (!$doBulk)
			{
				self::checkResponse($r);
			}
		}
		if ($doBulk)
		{
			self::checkResponse($t->doBulkTrack());
		}
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_STATIC_CALL))))))
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_VAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))))))