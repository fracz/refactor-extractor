	public function testDeleteSuccess()
	{
		Piwik_Annotations_API::getInstance()->delete(self::$idSite1, 1);

		try
		{
			Piwik_Annotations_API::getInstance()->get(self::$idSite1, 1);
			$this->fail("failed to delete annotation");
		}
		catch (Exception $ex)
		{
			// pass
		}
	}

||||||||	public function testDeleteSuccess()
	{
		Piwik_Annotations_API::getInstance()->delete(self::$fixture->idSite1, 1);

		try
		{
			Piwik_Annotations_API::getInstance()->get(self::$fixture->idSite1, 1);
			$this->fail("failed to delete annotation");
		}
		catch (Exception $ex)
		{
			// pass
		}
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_STATIC_PROP)
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_PROP
                (AST_STATIC_PROP))
            (SCALAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL)))