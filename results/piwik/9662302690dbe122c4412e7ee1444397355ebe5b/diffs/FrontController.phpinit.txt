	function init()
	{
		static $initialized = false;
		if($initialized)
		{
			return;
		}
		$initialized = true;

		// If we are in no dispatch mode, eg. a script reusing Piwik libs,
		// then we should return the exception directly, rather than trigger the event "bad config file"
		// which load the HTML page of the installer with the error.
		// This is at least required for misc/cron/archive.php and useful to all other scripts
		$shouldThrowExceptionWhenErrorNoDispatch =
				(defined('PIWIK_ENABLE_DISPATCH') && !PIWIK_ENABLE_DISPATCH)
				|| Piwik_Common::isPhpCliMode();

		try {
			Zend_Registry::set('timer', new Piwik_Timer);

			$directoriesToCheck = array(
					'/tmp/',
					'/tmp/templates_c/',
					'/tmp/cache/',
					'/tmp/assets/'
			);

			Piwik::checkDirectoriesWritableOrDie($directoriesToCheck);
			Piwik_Common::assignCliParametersToRequest();

			Piwik_Translate::getInstance()->loadEnglishTranslation();

			$exceptionToThrow = false;

			try {
				Piwik::createConfigObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.NoConfigurationFile', $e, $info = array(), $pending = true);
				$exceptionToThrow = $e;
			}

			if(Piwik_Session::isFileBasedSessions())
			{
				Piwik_Session::start();
			}

			if(Zend_Registry::get('config')->General->maintenance_mode == 1
				&& !Piwik_Common::isPhpCliMode())
			{
				throw new Exception("Piwik is in scheduled maintenance. Please come back later.");
			}

			$pluginsManager = Piwik_PluginsManager::getInstance();
			$pluginsManager->loadPlugins( Zend_Registry::get('config')->Plugins->Plugins->toArray() );

			if($exceptionToThrow)
			{
				throw $exceptionToThrow;
			}

			try {
				Piwik::createDatabaseObject();
			} catch(Exception $e) {
				if($shouldThrowExceptionWhenErrorNoDispatch)
				{
					throw $e;
				}
				Piwik_PostEvent('FrontController.badConfigurationFile', $e, $info = array(), $pending = true);
				throw $e;
			}

			Piwik::createLogObject();

			// creating the access object, so that core/Updates/* can enforce Super User and use some APIs
			Piwik::createAccessObject();
			Piwik_PostEvent('FrontController.dispatchCoreAndPluginUpdatesScreen');

			Piwik_PluginsManager::getInstance()->installLoadedPlugins();
			Piwik::install();

			// ensure the current Piwik URL is known for later use
			if(method_exists('Piwik', 'getPiwikUrl'))
			{
				$host = Piwik::getPiwikUrl();
			}

			Piwik_PostEvent('FrontController.initAuthenticationObject');
			try {
				$authAdapter = Zend_Registry::get('auth');
			} catch(Exception $e){
				throw new Exception("Authentication object cannot be found in the Registry. Maybe the Login plugin is not activated?
									<br />You can activate the plugin by adding:<br />
									<code>Plugins[] = Login</code><br />
									under the <code>[Plugins]</code> section in your config/config.inc.php");
			}

			Zend_Registry::get('access')->reloadAccess($authAdapter);

			Piwik_Translate::getInstance()->reloadLanguage();

			Piwik::raiseMemoryLimitIfNecessary();

			$pluginsManager->postLoadPlugins();

			Piwik_PostEvent('FrontController.checkForUpdates');
		} catch(Exception $e) {

			if($shouldThrowExceptionWhenErrorNoDispatch)
			{
				throw $e;
			}

			Piwik_ExitWithMessage($e->getMessage(), false, true);
		}

//		Piwik::log('End FrontController->init() - Request: '. var_export($_REQUEST, true));
	}
}

/**
 * Exception thrown when the requested plugin is not activated in the config file
 *
 * @package Piwik
 * @subpackage Piwik_FrontController
 */
class Piwik_FrontController_PluginDeactivatedException extends Exception
{
	function __construct($module)
	{
		parent::__construct("The plugin '$module' is not activated. You can activate the plugin on the 'Plugins admin' page.");
	}
}
||||||||	function init()
	{
		static $initialized = false;
		if($initialized)
		{
			return;
		}
		$initialized = true;


		try {
			Zend_Registry::set('timer', new Piwik_Timer);

			$directoriesToCheck = array(
					'/tmp/',
					'/tmp/templates_c/',
					'/tmp/cache/',
					'/tmp/assets/'
			);

			Piwik::checkDirectoriesWritableOrDie($directoriesToCheck);
			Piwik_Common::assignCliParametersToRequest();

			Piwik_Translate::getInstance()->loadEnglishTranslation();

			$exceptionToThrow = false;

			try {
				Piwik::createConfigObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.NoConfigurationFile', $e, $info = array(), $pending = true);
				$exceptionToThrow = $e;
			}

			if(Piwik_Session::isFileBasedSessions())
			{
				Piwik_Session::start();
			}

			if(Zend_Registry::get('config')->General->maintenance_mode == 1
				&& !Piwik_Common::isPhpCliMode())
			{
				throw new Exception("Piwik is in scheduled maintenance. Please come back later.");
			}

			$pluginsManager = Piwik_PluginsManager::getInstance();
			$pluginsManager->loadPlugins( Zend_Registry::get('config')->Plugins->Plugins->toArray() );

			if($exceptionToThrow)
			{
				throw $exceptionToThrow;
			}

			try {
				Piwik::createDatabaseObject();
			} catch(Exception $e) {
				if(self::shouldRethrowException())
				{
					throw $e;
				}
				Piwik_PostEvent('FrontController.badConfigurationFile', $e, $info = array(), $pending = true);
				throw $e;
			}

			Piwik::createLogObject();

			// creating the access object, so that core/Updates/* can enforce Super User and use some APIs
			Piwik::createAccessObject();
			Piwik_PostEvent('FrontController.dispatchCoreAndPluginUpdatesScreen');

			Piwik_PluginsManager::getInstance()->installLoadedPlugins();
			Piwik::install();

			// ensure the current Piwik URL is known for later use
			if(method_exists('Piwik', 'getPiwikUrl'))
			{
				$host = Piwik::getPiwikUrl();
			}

			Piwik_PostEvent('FrontController.initAuthenticationObject');
			try {
				$authAdapter = Zend_Registry::get('auth');
			} catch(Exception $e){
				throw new Exception("Authentication object cannot be found in the Registry. Maybe the Login plugin is not activated?
									<br />You can activate the plugin by adding:<br />
									<code>Plugins[] = Login</code><br />
									under the <code>[Plugins]</code> section in your config/config.inc.php");
			}

			Zend_Registry::get('access')->reloadAccess($authAdapter);

			Piwik_Translate::getInstance()->reloadLanguage();

			Piwik::raiseMemoryLimitIfNecessary();

			$pluginsManager->postLoadPlugins();

			Piwik_PostEvent('FrontController.checkForUpdates');
		} catch(Exception $e) {

			if(self::shouldRethrowException())
			{
				throw $e;
			}

			Piwik_ExitWithMessage($e->getMessage(), false, true);
		}

//		Piwik::log('End FrontController->init() - Request: '. var_export($_REQUEST, true));
	}
}

/**
 * Exception thrown when the requested plugin is not activated in the config file
 *
 * @package Piwik
 * @subpackage Piwik_FrontController
 */
class Piwik_FrontController_PluginDeactivatedException extends Exception
{
	function __construct($module)
	{
		parent::__construct("The plugin '$module' is not activated. You can activate the plugin on the 'Plugins admin' page.");
	}
}
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_CONST)))
            (AST_STATIC_CALL)))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_NEW)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL)
                    (
                        (AST_STATIC_CALL))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_UNARY_OP
                            (AST_STATIC_CALL)))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_THROW
                            (AST_VAR)))))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_VAR)
                                    (
                                        (AST_THROW
                                            (AST_VAR)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_THROW
                                (AST_VAR)))))
                (NULL))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL)))))
            (AST_CALL
                (
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CALL
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_VAR)
                            (
                                (AST_THROW
                                    (AST_VAR)))))
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CONST)
                            (AST_CONST))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_NEW)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL)
                    (
                        (AST_STATIC_CALL))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))))
                            (SCALAR))
                        (AST_UNARY_OP
                            (AST_STATIC_CALL)))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (SCALAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_THROW
                            (AST_VAR)))))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_STATIC_CALL)
                                    (
                                        (AST_THROW
                                            (AST_VAR)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_ARRAY))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_THROW
                                (AST_VAR)))))
                (NULL))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL)))))
            (AST_CALL
                (
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CALL
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_STATIC_CALL)
                            (
                                (AST_THROW
                                    (AST_VAR)))))
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CONST)
                            (AST_CONST))))))
        (NULL)))