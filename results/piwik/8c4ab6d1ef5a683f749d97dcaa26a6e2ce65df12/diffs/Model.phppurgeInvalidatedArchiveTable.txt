    public function purgeInvalidatedArchiveTable($archiveTable)
    {
        // prevent error 'The SELECT would examine more than MAX_JOIN_SIZE rows'
        Db::get()->query('SET SQL_BIG_SELECTS=1');

        /**
         * Select the archives that have already been invalidated and have been since re-processed.
         * It purges records for each distinct { archive name (includes segment hash) , idsite, date, period } tuple.
         */
        $query = 'SELECT t1.idarchive FROM `' . $archiveTable . '` t1
                  INNER JOIN `' . $archiveTable . '` t2
                      ON t1.name = t2.name AND t1.idsite=t2.idsite
                      AND t1.date1=t2.date1 AND t1.date2=t2.date2 AND t1.period=t2.period
                  WHERE t1.value = ' . ArchiveWriter::DONE_INVALIDATED . '
                  AND t2.value IN(' . ArchiveWriter::DONE_OK . ', ' . ArchiveWriter::DONE_OK_TEMPORARY . ')
                  AND t1.ts_archived < t2.ts_archived AND t1.name LIKE \'done%\'';

        $result = Db::fetchAll($query);

        return $result;
    }

    /**
     * @param $archiveTable
     * @param $idSites
     * @param $periodId
     * @param $datesToDelete
     * @throws Exception
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||