||||||||	static public function remove($widgetCategory, $widgetName = false)
	{
		if(empty($widgetName)) {
			unset(self::$widgets[$widgetCategory]);
			return;
		}
		foreach(self::$widgets[$widgetCategory] as $id => $widget) {
			if($widget['name'] == $widgetName) {
				unset(self::$widgets[$widgetCategory][$id]);
				return;
			}
		}
	}

	/**
	 * Checks if the widget with the given parameters exists in der widget list
	 *
	 * @param string  $controllerName
	 * @param string  $controllerAction
	 * @return bool
	 */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_FOREACH
        (AST_DIM
            (AST_STATIC_PROP)
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_VAR))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_RETURN
                            (NULL))))))))