	static public function updateSite( $idSite, $siteName, $urls = null)
	{
		Piwik::checkUserHasAdminAccess($idSite);

		self::checkName($siteName);

		// SQL fields to update
		$bind = array();

		if(!is_null($urls))
		{
			$urls = self::cleanParameterUrls($urls);
			self::checkUrls($urls);
			self::checkAtLeastOneUrl($urls);
			$url = $urls[0];

			$bind['main_url'] = $url;
		}

		$bind['name'] = $siteName;

		$db = Zend_Registry::get('db');
		$db->update(Piwik::prefixTable("site"),
							$bind,
							"idsite = $idSite"
								);
		// if there are more than 1 url for this website we need to set also the alias URLs
		// we use the replaceSiteUrls function ; it is not great because it will update the
		// same row we have just updated... but it is better than duplicating the logic
		if(count($urls) > 1)
		{
			self::replaceSiteUrls($idSite, $urls);
		}

	}

	/**
	 * Insert the list of alias URLs for the website.
	 * The URLs must not exist already for this website!
	 */
||||||||	static public function updateSite( $idSite, $siteName, $urls = null)
	{
		Piwik::checkUserHasAdminAccess($idSite);

		self::checkName($siteName);

		// SQL fields to update
		$bind = array();

		if(!is_null($urls))
		{
			$urls = self::cleanParameterUrls($urls);
			self::checkUrls($urls);
			self::checkAtLeastOneUrl($urls);
			$url = $urls[0];

			$bind['main_url'] = $url;
		}

		$bind['name'] = $siteName;

		$db = Zend_Registry::get('db');
		$db->update(Piwik::prefixTable("site"),
							$bind,
							"idsite = $idSite"
								);

		// we now update the main + alias URLs
		self::deleteSiteAliasUrls($idSite);
		if(count($urls) > 1)
		{
			$insertedUrls = self::addSiteAliasUrls($idSite, array_slice($urls,1));
		}
	}

	/**
	 * Insert the list of alias URLs for the website.
	 * The URLs must not exist already for this website!
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_VAR)
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_VAR)
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (SCALAR))))))))))