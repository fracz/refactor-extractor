	public function archiveDay( $notification )
	{
		/* @var $archiveProcessing Piwik_ArchiveProcessing_Day */
		$archiveProcessing = $notification->getNotificationObject();

		if(!$archiveProcessing->shouldProcessReportsForPlugin($this->getPluginName())) return;

		$this->actionsTablesByType = array(
			Piwik_Tracker_Action::TYPE_ACTION_URL => array(),
			Piwik_Tracker_Action::TYPE_DOWNLOAD => array(),
			Piwik_Tracker_Action::TYPE_OUTLINK => array(),
			Piwik_Tracker_Action::TYPE_ACTION_NAME => array(),
		);

		// This row is used in the case where an action is know as an exit_action
		// but this action was not properly recorded when it was hit in the first place
		// so we add this fake row information to make sure there is a nb_hits, etc. column for every action
		$this->defaultRow = new Piwik_DataTable_Row(array(
							Piwik_DataTable_Row::COLUMNS => array(
											Piwik_Archive::INDEX_NB_VISITS => 1,
											Piwik_Archive::INDEX_NB_UNIQ_VISITORS => 1,
											Piwik_Archive::INDEX_PAGE_NB_HITS => 1,
										)));

		$rankingQuery = false;

		/*
		 * Page URLs and Page names, general stats
		 */

		$select = "log_action.name,
				log_action.type,
				log_action.idaction,
				log_action.url_prefix,
				count(distinct log_link_visit_action.idvisit) as `". Piwik_Archive::INDEX_NB_VISITS ."`,
				count(distinct log_link_visit_action.idvisitor) as `". Piwik_Archive::INDEX_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_NB_HITS ."`";

		$from = array(
			"log_link_visit_action",
			array(
				"table" => "log_action",
				"joinOn" => "log_link_visit_action.%s = log_action.idaction"
			)
		);

		$where = "log_link_visit_action.server_time >= ?
				AND log_link_visit_action.server_time <= ?
				AND log_link_visit_action.idsite = ?
				AND log_link_visit_action.%s IS NOT NULL";

		$groupBy = "log_action.idaction";
		$orderBy = "`". Piwik_Archive::INDEX_PAGE_NB_HITS ."` DESC, name ASC";

		if ($this->rankingQueryRowLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($this->rankingQueryRowLimit);
			$rankingQuery->setOthersLabel('-1');
			$rankingQuery->addLabelColumn(array('idaction', 'name'));
			$rankingQuery->addColumn(array('url_prefix', Piwik_Archive::INDEX_NB_UNIQ_VISITORS));
			$rankingQuery->addColumn(array(Piwik_Archive::INDEX_PAGE_NB_HITS, Piwik_Archive::INDEX_NB_VISITS), 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));
		}

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Entry actions for Page URLs and Page names
		 */
		if ($this->rankingQueryRowLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($this->rankingQueryRowLimit);
			$rankingQuery->setOthersLabel('-1');
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_ENTRY_NB_UNIQ_VISITORS);
			$rankingQuery->addColumn(array(Piwik_Archive::INDEX_PAGE_ENTRY_NB_VISITS,
										   Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS,
										   Piwik_Archive::INDEX_PAGE_ENTRY_SUM_VISIT_LENGTH,
										   Piwik_Archive::INDEX_PAGE_ENTRY_BOUNCE_COUNT), 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = 'log_action.type, log_action.name,';
			$from = array(
				"log_visit",
				array(
					"table" => "log_action",
					"joinOn" => "log_visit.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_visit";
			$orderBy = false;
		}

		$select = "log_visit.%s as idaction, $extraSelects
				count(distinct log_visit.idvisitor) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_VISITS ."`,
				sum(log_visit.visit_total_actions) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS ."`,
				sum(log_visit.visit_total_time) as `". Piwik_Archive::INDEX_PAGE_ENTRY_SUM_VISIT_LENGTH ."`,
				sum(case log_visit.visit_total_actions when 1 then 1 when 0 then 1 else 0 end) as `". Piwik_Archive::INDEX_PAGE_ENTRY_BOUNCE_COUNT ."`";

		$where = "log_visit.visit_last_action_time >= ?
				AND log_visit.visit_last_action_time <= ?
				AND log_visit.idsite = ?
		 		AND log_visit.%s > 0";

		$groupBy = "log_visit.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_entry_idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_entry_idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Exit actions
		 */
		if ($this->rankingQueryRowLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($this->rankingQueryRowLimit);
			$rankingQuery->setOthersLabel('-1');
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_EXIT_NB_UNIQ_VISITORS);
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS, 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = 'log_action.type, log_action.name,';
			$from = array(
				"log_visit",
				array(
					"table" => "log_action",
					"joinOn" => "log_visit.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_visit";
			$orderBy = false;
		}

		$select = "log_visit.%s as idaction, $extraSelects
				count(distinct log_visit.idvisitor) as `". Piwik_Archive::INDEX_PAGE_EXIT_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS ."`";

		$where = "log_visit.visit_last_action_time >= ?
				AND log_visit.visit_last_action_time <= ?
		 		AND log_visit.idsite = ?
		 		AND log_visit.%s > 0";

		$groupBy = "log_visit.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_exit_idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_exit_idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Time per action
		 */
		if ($this->rankingQueryRowLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($this->rankingQueryRowLimit);
			$rankingQuery->setOthersLabel('-1');
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_SUM_TIME_SPENT, 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = "log_action.type, log_action.name, count(*) as `".Piwik_Archive::INDEX_PAGE_NB_HITS."`,";
			$from = array(
				"log_link_visit_action",
				array(
					"table" => "log_action",
					"joinOn" => "log_link_visit_action.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_NB_HITS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_link_visit_action";
			$orderBy = false;
		}

		$select = "log_link_visit_action.%s as idaction, $extraSelects
				sum(log_link_visit_action.time_spent_ref_action) as `".Piwik_Archive::INDEX_PAGE_SUM_TIME_SPENT."`";

		$where = "log_link_visit_action.server_time >= ?
				AND log_link_visit_action.server_time <= ?
		 		AND log_link_visit_action.idsite = ?
		 		AND log_link_visit_action.time_spent_ref_action > 0
		 		AND log_link_visit_action.%s > 0";

		$groupBy = "log_link_visit_action.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_url_ref", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_name_ref", $archiveProcessing, $rankingQuery);

		// Empty static cache
		self::$cacheParsedAction = array();

		// Record the final datasets
		$this->archiveDayRecordInDatabase($archiveProcessing);
	}

	/**
	 * @param $select
	 * @param $from
	 * @param $where
	 * @param $orderBy
	 * @param $groupBy
	 * @param $sprintfField
	 * @param Piwik_ArchiveProcessing $archiveProcessing
	 * @param Piwik_RankingQuery|false $rankingQuery
	 * @return int
	 */
||||||||	public function archiveDay( $notification )
	{
		/* @var $archiveProcessing Piwik_ArchiveProcessing_Day */
		$archiveProcessing = $notification->getNotificationObject();

		if(!$archiveProcessing->shouldProcessReportsForPlugin($this->getPluginName())) return;

		$this->actionsTablesByType = array(
			Piwik_Tracker_Action::TYPE_ACTION_URL => array(),
			Piwik_Tracker_Action::TYPE_DOWNLOAD => array(),
			Piwik_Tracker_Action::TYPE_OUTLINK => array(),
			Piwik_Tracker_Action::TYPE_ACTION_NAME => array(),
		);

		// This row is used in the case where an action is know as an exit_action
		// but this action was not properly recorded when it was hit in the first place
		// so we add this fake row information to make sure there is a nb_hits, etc. column for every action
		$this->defaultRow = new Piwik_DataTable_Row(array(
							Piwik_DataTable_Row::COLUMNS => array(
											Piwik_Archive::INDEX_NB_VISITS => 1,
											Piwik_Archive::INDEX_NB_UNIQ_VISITORS => 1,
											Piwik_Archive::INDEX_PAGE_NB_HITS => 1,
										)));

		$rankingQueryLimit = self::getRankingQueryLimit();
		$rankingQuery = false;

		/*
		 * Page URLs and Page names, general stats
		 */

		$select = "log_action.name,
				log_action.type,
				log_action.idaction,
				log_action.url_prefix,
				count(distinct log_link_visit_action.idvisit) as `". Piwik_Archive::INDEX_NB_VISITS ."`,
				count(distinct log_link_visit_action.idvisitor) as `". Piwik_Archive::INDEX_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_NB_HITS ."`";

		$from = array(
			"log_link_visit_action",
			array(
				"table" => "log_action",
				"joinOn" => "log_link_visit_action.%s = log_action.idaction"
			)
		);

		$where = "log_link_visit_action.server_time >= ?
				AND log_link_visit_action.server_time <= ?
				AND log_link_visit_action.idsite = ?
				AND log_link_visit_action.%s IS NOT NULL";

		$groupBy = "log_action.idaction";
		$orderBy = "`". Piwik_Archive::INDEX_PAGE_NB_HITS ."` DESC, name ASC";

		if ($rankingQueryLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($rankingQueryLimit);
			$rankingQuery->setOthersLabel(Piwik_DataTable::LABEL_SUMMARY_ROW);
			$rankingQuery->addLabelColumn(array('idaction', 'name'));
			$rankingQuery->addColumn(array('url_prefix', Piwik_Archive::INDEX_NB_UNIQ_VISITORS));
			$rankingQuery->addColumn(array(Piwik_Archive::INDEX_PAGE_NB_HITS, Piwik_Archive::INDEX_NB_VISITS), 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));
		}

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Entry actions for Page URLs and Page names
		 */
		if ($rankingQueryLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($rankingQueryLimit);
			$rankingQuery->setOthersLabel(Piwik_DataTable::LABEL_SUMMARY_ROW);
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_ENTRY_NB_UNIQ_VISITORS);
			$rankingQuery->addColumn(array(Piwik_Archive::INDEX_PAGE_ENTRY_NB_VISITS,
										   Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS,
										   Piwik_Archive::INDEX_PAGE_ENTRY_SUM_VISIT_LENGTH,
										   Piwik_Archive::INDEX_PAGE_ENTRY_BOUNCE_COUNT), 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = 'log_action.type, log_action.name,';
			$from = array(
				"log_visit",
				array(
					"table" => "log_action",
					"joinOn" => "log_visit.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_visit";
			$orderBy = false;
		}

		$select = "log_visit.%s as idaction, $extraSelects
				count(distinct log_visit.idvisitor) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_VISITS ."`,
				sum(log_visit.visit_total_actions) as `". Piwik_Archive::INDEX_PAGE_ENTRY_NB_ACTIONS ."`,
				sum(log_visit.visit_total_time) as `". Piwik_Archive::INDEX_PAGE_ENTRY_SUM_VISIT_LENGTH ."`,
				sum(case log_visit.visit_total_actions when 1 then 1 when 0 then 1 else 0 end) as `". Piwik_Archive::INDEX_PAGE_ENTRY_BOUNCE_COUNT ."`";

		$where = "log_visit.visit_last_action_time >= ?
				AND log_visit.visit_last_action_time <= ?
				AND log_visit.idsite = ?
		 		AND log_visit.%s > 0";

		$groupBy = "log_visit.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_entry_idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_entry_idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Exit actions
		 */
		if ($rankingQueryLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($rankingQueryLimit);
			$rankingQuery->setOthersLabel(Piwik_DataTable::LABEL_SUMMARY_ROW);
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_EXIT_NB_UNIQ_VISITORS);
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS, 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = 'log_action.type, log_action.name,';
			$from = array(
				"log_visit",
				array(
					"table" => "log_action",
					"joinOn" => "log_visit.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_visit";
			$orderBy = false;
		}

		$select = "log_visit.%s as idaction, $extraSelects
				count(distinct log_visit.idvisitor) as `". Piwik_Archive::INDEX_PAGE_EXIT_NB_UNIQ_VISITORS ."`,
				count(*) as `". Piwik_Archive::INDEX_PAGE_EXIT_NB_VISITS ."`";

		$where = "log_visit.visit_last_action_time >= ?
				AND log_visit.visit_last_action_time <= ?
		 		AND log_visit.idsite = ?
		 		AND log_visit.%s > 0";

		$groupBy = "log_visit.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_exit_idaction_url", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"visit_exit_idaction_name", $archiveProcessing, $rankingQuery);

		/*
		 * Time per action
		 */
		if ($rankingQueryLimit > 0)
		{
			$rankingQuery = new Piwik_RankingQuery($rankingQueryLimit);
			$rankingQuery->setOthersLabel(Piwik_DataTable::LABEL_SUMMARY_ROW);
			$rankingQuery->addLabelColumn('idaction');
			$rankingQuery->addColumn(Piwik_Archive::INDEX_PAGE_SUM_TIME_SPENT, 'sum');
			$rankingQuery->partitionResultIntoMultipleGroups('type', array_keys($this->actionsTablesByType));

			$extraSelects = "log_action.type, log_action.name, count(*) as `".Piwik_Archive::INDEX_PAGE_NB_HITS."`,";
			$from = array(
				"log_link_visit_action",
				array(
					"table" => "log_action",
					"joinOn" => "log_link_visit_action.%s = log_action.idaction"
				)
			);
			$orderBy = "`".Piwik_Archive::INDEX_PAGE_NB_HITS."` DESC, log_action.name ASC";
		}
		else
		{
			$extraSelects = false;
			$from = "log_link_visit_action";
			$orderBy = false;
		}

		$select = "log_link_visit_action.%s as idaction, $extraSelects
				sum(log_link_visit_action.time_spent_ref_action) as `".Piwik_Archive::INDEX_PAGE_SUM_TIME_SPENT."`";

		$where = "log_link_visit_action.server_time >= ?
				AND log_link_visit_action.server_time <= ?
		 		AND log_link_visit_action.idsite = ?
		 		AND log_link_visit_action.time_spent_ref_action > 0
		 		AND log_link_visit_action.%s > 0";

		$groupBy = "log_link_visit_action.%s, idaction";

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_url_ref", $archiveProcessing, $rankingQuery);

		$this->archiveDayQueryProcess($select, $from, $where, $orderBy, $groupBy,
				"idaction_name_ref", $archiveProcessing, $rankingQuery);

		// Empty static cache
		self::$cacheParsedAction = array();

		// Record the final datasets
		$this->archiveDayRecordInDatabase($archiveProcessing);
	}

	/**
	 * @param $select
	 * @param $from
	 * @param $where
	 * @param $orderBy
	 * @param $groupBy
	 * @param $sprintfField
	 * @param Piwik_ArchiveProcessing $archiveProcessing
	 * @param Piwik_RankingQuery|false $rankingQuery
	 * @return int
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_CLASS_CONST
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_ENCAPS_LIST
                                                    (SCALAR)
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_CLASS_CONST
                                                    (SCALAR)))
                                            (SCALAR))
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (SCALAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (SCALAR)
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_ARRAY))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))