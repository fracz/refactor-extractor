    private function initPiwikHost()
    {
        // If core:archive command run as a web cron, we use the current hostname+path
        if (!Common::isPhpCliMode()) {
            if (!empty(self::$url)) {
                $piwikUrl = self::$url;
            } else {
                // example.org/piwik/
                $piwikUrl = SettingsPiwik::getPiwikUrl();
            }
        } else {
            // If core:archive command run as CLI/shell we require the piwik url to be set
            $piwikUrl = $this->getParameterFromCli("url", true);

            if (!$piwikUrl) {
                $this->logFatalErrorUrlExpected();
            }

            if(!\Piwik\UrlHelper::isLookLikeUrl($piwikUrl)) {
                // try adding http:// in case it's missing
                $piwikUrl = "http://" . $piwikUrl;
            }
            if(!\Piwik\UrlHelper::isLookLikeUrl($piwikUrl)) {
                $this->logFatalErrorUrlExpected();
            }

            // ensure there is a trailing slash
            if ($piwikUrl[strlen($piwikUrl) - 1] != '/' && !Common::stringEndsWith($piwikUrl, 'index.php')) {
                $piwikUrl .= '/';
            }
        }

        $this->initConfigObject($piwikUrl);

        if (Config::getInstance()->General['force_ssl'] == 1) {
            $piwikUrl = str_replace('http://', 'https://', $piwikUrl);
        }

        if (!Common::stringEndsWith($piwikUrl, 'index.php')) {
            $piwikUrl .= 'index.php';
        }

        $this->piwikUrl = $piwikUrl;
    }

    /**
     * Returns if the requested parameter is defined in the command line arguments.
     * If $valuePossible is true, then a value is possibly set for this parameter,
     * ie. --force-timeout-for-periods=3600 would return 3600
     *
     * @param $parameter
     * @param bool $valuePossible
     * @return true or the value (int,string) if set, false otherwise
     */
||||||||    private function initPiwikHost($piwikUrl = false)
    {
        // If core:archive command run as a web cron, we use the current hostname+path
        if (empty($piwikUrl)) {
            if (!empty(self::$url)) {
                $piwikUrl = self::$url;
            } else {
                // example.org/piwik/
                $piwikUrl = SettingsPiwik::getPiwikUrl();
            }
        }

        if (!$piwikUrl) {
            $this->logFatalErrorUrlExpected();
        }

        if(!\Piwik\UrlHelper::isLookLikeUrl($piwikUrl)) {
            // try adding http:// in case it's missing
            $piwikUrl = "http://" . $piwikUrl;
        }

        if(!\Piwik\UrlHelper::isLookLikeUrl($piwikUrl)) {
            $this->logFatalErrorUrlExpected();
        }

        // ensure there is a trailing slash
        if ($piwikUrl[strlen($piwikUrl) - 1] != '/' && !Common::stringEndsWith($piwikUrl, 'index.php')) {
            $piwikUrl .= '/';
        }

        $this->initConfigObject($piwikUrl);

        if (Config::getInstance()->General['force_ssl'] == 1) {
            $piwikUrl = str_replace('http://', 'https://', $piwikUrl);
        }

        if (!Common::stringEndsWith($piwikUrl, 'index.php')) {
            $piwikUrl .= 'index.php';
        }

        $this->piwikUrl = $piwikUrl;
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_STATIC_PROP)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_PROP))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR)))
                                (SCALAR))
                            (AST_UNARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_STATIC_PROP)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_PROP))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)))
                    (SCALAR))
                (AST_UNARY_OP
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_STATIC_CALL))
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))