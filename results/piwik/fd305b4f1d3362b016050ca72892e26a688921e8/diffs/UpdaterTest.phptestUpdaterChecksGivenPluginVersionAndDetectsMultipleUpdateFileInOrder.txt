    public function testUpdaterChecksGivenPluginVersionAndDetectsMultipleUpdateFileInOrder()
    {
        $updater = new Updater();
        $updater->pathUpdateFilePlugins = PIWIK_INCLUDE_PATH . '/tests/resources/Updater/%s/';
        $updater->recordComponentSuccessfullyUpdated('testpluginUpdates', '0.1beta');
        $updater->addComponentToCheck('testpluginUpdates', '0.1');
        $componentsWithUpdateFile = $updater->getComponentsWithUpdateFile();

        $this->assertEquals(1, count($componentsWithUpdateFile));
        $updateFiles = $componentsWithUpdateFile['testpluginUpdates'];
        $this->assertEquals(2, count($updateFiles));

        $path = PIWIK_INCLUDE_PATH . '/tests/resources/Updater/testpluginUpdates/';
        $expectedInOrder = array(
            $path . '0.1beta2.php' => '0.1beta2',
            $path . '0.1.php'      => '0.1'
        );
        $this->assertEquals($expectedInOrder, array_map("basename", $updateFiles));
    }

||||||||    public function testUpdaterChecksGivenPluginVersionAndDetectsMultipleUpdateFileInOrder()
    {
        $updater = new Updater($pathToCoreUpdates = null, PIWIK_INCLUDE_PATH . '/tests/resources/Updater/%s/');
        $updater->recordComponentSuccessfullyUpdated('testpluginUpdates', '0.1beta');
        $componentsWithUpdateFile = $updater->getComponentsWithUpdateFile(array('testpluginUpdates' => '0.1'));

        $this->assertEquals(1, count($componentsWithUpdateFile));
        $updateFiles = $componentsWithUpdateFile['testpluginUpdates'];
        $this->assertEquals(2, count($updateFiles));

        $path = PIWIK_INCLUDE_PATH . '/tests/resources/Updater/testpluginUpdates/';
        $expectedInOrder = array(
            $path . '0.1beta2.php' => '0.1beta2',
            $path . '0.1.php'      => '0.1'
        );
        $this->assertEquals($expectedInOrder, array_map("basename", $updateFiles));
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_ARRAY_ELEM
                (SCALAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR))))))