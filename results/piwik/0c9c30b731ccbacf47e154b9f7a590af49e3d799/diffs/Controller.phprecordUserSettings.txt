    public function recordUserSettings()
    {
        $response = new ResponseBuilder(Common::getRequestVar('format'));
        try {
            $this->checkTokenInUrl();

            $defaultReport = Common::getRequestVar('defaultReport');
            $defaultDate = Common::getRequestVar('defaultDate');
            $language = Common::getRequestVar('language');
            $timeFormat = Common::getRequestVar('timeformat');
            $userLogin = Piwik::getCurrentUserLogin();

            $this->processPasswordChange($userLogin);

            LanguagesManager::setLanguageForSession($language);
            APILanguagesManager::getInstance()->setLanguageForUser($userLogin, $language);
            APILanguagesManager::getInstance()->set12HourClockForUser($userLogin, $timeFormat);

            APIUsersManager::getInstance()->setUserPreference($userLogin,
                APIUsersManager::PREFERENCE_DEFAULT_REPORT,
                $defaultReport);
            APIUsersManager::getInstance()->setUserPreference($userLogin,
                APIUsersManager::PREFERENCE_DEFAULT_REPORT_DATE,
                $defaultDate);
            $toReturn = $response->getResponse();
        } catch (Exception $e) {
            $toReturn = $response->getResponseException($e);
        }

        return $toReturn;
    }

||||||||    public function recordUserSettings()
    {
        $response = new ResponseBuilder(Common::getRequestVar('format'));
        try {
            $this->checkTokenInUrl();

            $defaultReport = Common::getRequestVar('defaultReport');
            $defaultDate = Common::getRequestVar('defaultDate');
            $language = Common::getRequestVar('language');
            $timeFormat = Common::getRequestVar('timeformat');
            $userLogin = Piwik::getCurrentUserLogin();

            Piwik::checkUserHasSuperUserAccessOrIsTheUser($userLogin);

            $this->processPasswordChange($userLogin);

            LanguagesManager::setLanguageForSession($language);
            APILanguagesManager::getInstance()->setLanguageForUser($userLogin, $language);
            APILanguagesManager::getInstance()->set12HourClockForUser($userLogin, $timeFormat);

            APIUsersManager::getInstance()->setUserPreference($userLogin,
                APIUsersManager::PREFERENCE_DEFAULT_REPORT,
                $defaultReport);
            APIUsersManager::getInstance()->setUserPreference($userLogin,
                APIUsersManager::PREFERENCE_DEFAULT_REPORT_DATE,
                $defaultDate);
            $toReturn = $response->getResponse();
        } catch (Exception $e) {
            $toReturn = $response->getResponseException($e);
        }

        return $toReturn;
    }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL)
                (
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))
        (NULL))
    (AST_RETURN
        (AST_VAR)))