||||||||    public function test_canBeCloned_ShouldRemoveASetSubtable()
    {
        $testRow = $this->getTestRowWithNoSubDataTable();
        $testRow->setColumn('label', 'test');

        $testRow2 = clone $testRow;

        $this->assertNotSame($testRow2, $testRow);
        $this->assertEquals('test', $testRow2->getColumn('label'));
        $this->assertEquals('test', $testRow->getColumn('label'));

        $testRow->setColumn('label', 'different');

        // only row 2 changes
        $this->assertEquals('test', $testRow2->getColumn('label'));
        $this->assertEquals('different', $testRow->getColumn('label'));
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))