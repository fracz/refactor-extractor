||||||||    public function test_checkArchiveRecords_shouldMergeSubtablesIntoOneRow()
    {
        $chunk = new Chunk();
        $chunkBlobId = $chunk->getBlobIdForTable(0);

        $tests = array(
            'archive_blob_2010_01' => array(
                'CustomVariables_valueByName_' . $chunkBlobId => 6,
                'Referrers_keywordBySearchEngine_' . $chunkBlobId => 1,
                'Referrers_searchEngineByKeyword_' . $chunkBlobId => 1,
            ),
            'archive_blob_2009_12' => array(
                'CustomVariables_valueByName_' . $chunkBlobId => 6,
                'Referrers_keywordBySearchEngine_' . $chunkBlobId => 1,
                'Referrers_searchEngineByKeyword_' . $chunkBlobId => 1,
            )
        );
        $numTests = 0;
        foreach ($tests as $table => $expectedSubtables) {
            foreach ($expectedSubtables as $name => $expectedNumSubtables) {
                $sql = "SELECT `value` FROM " . Common::prefixTable($table) . " WHERE `name` ='$name'";
                $blobs = Db::get()->fetchAll($sql);

                foreach ($blobs as $blob) {
                    $numTests++;
                    $blob = $blob['value'];
                    $blob = gzuncompress($blob);
                    $blob = unserialize($blob);

                    $countSubtables = count($blob);

                    $this->assertEquals($expectedNumSubtables, $countSubtables, "$name in $table expected to contain $expectedNumSubtables subtables, got $countSubtables");
                }
            }
        }

        // 6 _subtables entries + 6 _subtables entries for the segment
        $this->assertEquals(12, $numTests, "$numTests were executed but expected 12");
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_STATIC_CALL)
                            (
                                (AST_VAR))))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_POST_INC
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)
            (AST_ENCAPS_LIST
                (AST_VAR)
                (SCALAR)))))