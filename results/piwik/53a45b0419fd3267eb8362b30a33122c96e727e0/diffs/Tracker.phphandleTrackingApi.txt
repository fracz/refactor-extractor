||||||||	protected function handleTrackingApi()
	{
		if(!$this->authenticateSuperUser())
		{
			return;
		}

		// Custom IP to use for this visitor
		$customIp = Piwik_Common::getRequestVar('cip', false);

		if(!empty($customIp))
		{
			$this->setForceIp($customIp);
		}

		// Custom server date time to use
		$customDatetime = Piwik_Common::getRequestVar('cdt', false);

		if(!empty($customDatetime))
		{
			$this->setForceDateTime($customDatetime);
		}
	}
}

if(!function_exists('printDebug'))
{
    function printDebug( $info = '' )
    {
    	if(isset($GLOBALS['PIWIK_TRACKER_DEBUG']) && $GLOBALS['PIWIK_TRACKER_DEBUG'])
    	{
    		if(is_array($info))
    		{
    			print("<pre>");
    			print(htmlspecialchars(var_export($info,true), ENT_QUOTES));
    			print("</pre>");
    		}
    		else
    		{
    			print(htmlspecialchars($info, ENT_QUOTES) . "<br />\n");
    		}
    	}
    }
}

/**
 * Displays exception in a friendly UI and exits.
 *
 * @param Exception $e
 */
function Piwik_Tracker_ExitWithException($e)
{
	header('Content-Type: text/html; charset=utf-8');
	if(isset($GLOBALS['PIWIK_TRACKER_DEBUG']) && $GLOBALS['PIWIK_TRACKER_DEBUG'])
	{
		$trailer = '<font color="#888888">Backtrace:<br /><pre>'.$e->getTraceAsString().'</pre></font>';
	}
	else
	{
		$trailer = '<p>Edit the following line in piwik.php to enable tracker debugging and display a backtrace:</p>
					<blockquote><pre>$GLOBALS[\'PIWIK_TRACKER_DEBUG\'] = true;</pre></blockquote>';
	}

	$headerPage = file_get_contents(PIWIK_INCLUDE_PATH . '/themes/default/simple_structure_header.tpl');
	$footerPage = file_get_contents(PIWIK_INCLUDE_PATH . '/themes/default/simple_structure_footer.tpl');
	$headerPage = str_replace('{$HTML_TITLE}', 'Piwik &rsaquo; Error', $headerPage);

	echo $headerPage . '<p>' . $e->getMessage() . '</p>' . $trailer . $footerPage;

	exit;
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))))))