    private function findMenuInPlugin($pluginName)
    {
        $menuFile = PIWIK_INCLUDE_PATH . '/plugins/' . $pluginName . '/Menu.php';

        if (!file_exists($menuFile)) {
            return;
        }

        $klassName = sprintf('Piwik\\Plugins\\%s\\Menu', $pluginName);

        if (!class_exists($klassName) || !is_subclass_of($klassName, 'Piwik\\Plugin\\Menu')) {
            return;
        }

        return new $klassName;
    }

    /**
     * Adds a new entry to the menu.
     *
     * @param string $menuName The menu's category name. Can be a translation token.
     * @param string $subMenuName The menu item's name. Can be a translation token.
     * @param string|array $url The URL the admin menu entry should link to, or an array of query parameters
     *                          that can be used to build the URL.
     * @param boolean $displayedForCurrentUser Whether this menu entry should be displayed for the
     *                                         current user. If false, the entry will not be added.
     * @param int $order The order hint.
     * @param false|string $tooltip An optional tooltip to display.
     * @api
     */
||||||||    private function findMenuInPlugin($pluginName)
    {
        $menuFile = PIWIK_INCLUDE_PATH . '/plugins/' . $pluginName . '/Menu.php';

        if (!file_exists($menuFile)) {
            return;
        }

        $klassName = sprintf('Piwik\\Plugins\\%s\\Menu', $pluginName);

        if (!class_exists($klassName)) {
            return;
        }

        if (!is_subclass_of($klassName, 'Piwik\\Plugin\\Menu')) {
            Log::warning(sprintf('Cannot use menu for plugin %s, class %s does not extend Piwik\Plugin\Menu', $pluginName, $klassName));
            return;
        }

        return new $klassName;
    }

    /**
     * Adds a new entry to the menu.
     *
     * @param string $menuName The menu's category name. Can be a translation token.
     * @param string $subMenuName The menu item's name. Can be a translation token.
     * @param string|array $url The URL the admin menu entry should link to, or an array of query parameters
     *                          that can be used to build the URL.
     * @param boolean $displayedForCurrentUser Whether this menu entry should be displayed for the
     *                                         current user. If false, the entry will not be added.
     * @param int $order The order hint.
     * @param false|string $tooltip An optional tooltip to display.
     * @api
     */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_RETURN
                    (NULL)))))
    (AST_RETURN
        (AST_NEW
            (AST_VAR))))