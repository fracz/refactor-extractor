||||||||	static public function getNonce($id, $ttl = 300)
	{
		// save session-dependent nonce
		$ns = new Zend_Session_Namespace($id);
		$nonce = $ns->nonce;

		// re-use an unexpired nonce (a small deviation from the "used only once" principle, so long as we do not reset the expiration)
		// to handle browser pre-fetch or double fetch caused by some browser add-ons/extensions
		if(empty($nonce))
		{
			// generate a new nonce
			$nonce = md5(Piwik_Common::getSalt() . time() . Piwik_Common::generateUniqId());
			$ns->nonce = $nonce;
			$ns->setExpirationSeconds($ttl, 'nonce');
		}

		return $nonce;
	}

	/**
	 * Verify nonce and check referrer (if present, i.e., it may be suppressed by the browser or a proxy/network).
	 *
	 * @param string $id Unique id
	 * @param string $cnonce Nonce sent to client
	 * @return bool true if valid; false otherwise
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL)
                                    (AST_CALL))
                                (AST_STATIC_CALL)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (SCALAR))))))
    (AST_RETURN
        (AST_VAR)))