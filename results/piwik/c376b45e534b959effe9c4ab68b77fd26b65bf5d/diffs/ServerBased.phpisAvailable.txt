	public function isAvailable()
	{
		// check if apache module is installed
		if (function_exists('apache_get_modules'))
		{
			foreach (apache_get_modules() as $name)
			{
				if (strpos($name, 'geoip') !== false)
				{
					return true;
				}
			}
		}

		return !empty($_SERVER[self::TEST_SERVER_VAR])
			 || !empty($_SERVER[self::TEST_SERVER_VAR_ALT]);
	}

	/**
	 * Returns true if the GEOIP_ADDR server variable is defined.
	 *
	 * @return bool
	 */
||||||||	public function isAvailable()
	{
		// check if apache module is installed
		if (function_exists('apache_get_modules'))
		{
			foreach (apache_get_modules() as $name)
			{
				if (strpos($name, 'geoip') !== false)
				{
					return true;
				}
			}
		}

		$available = !empty($_SERVER[self::TEST_SERVER_VAR])
				  || !empty($_SERVER[self::TEST_SERVER_VAR_ALT]);

		if ($available)
		{
			return true;
		}
		else // if not available return message w/ extra info
		{
			if (!function_exists('apache_get_modules'))
			{
				return Piwik_Translate('General_Note').':&nbsp;'.Piwik_Translate('UserCountry_AssumingNonApache');
			}

			$message = "<strong><em>".Piwik_Translate('General_Note').':&nbsp;'
				. Piwik_Translate('UserCountry_FoundApacheModules')
				. "</em></strong>:<br/><br/>\n<ul style=\"list-style:disc;margin-left:24px\">\n";
			foreach (apache_get_modules() as $name)
			{
				$message .= "<li>$name</li>\n";
			}
			$message .= "</ul>";
			return $message;
		}
	}

	/**
	 * Returns true if the GEOIP_ADDR server variable is defined.
	 *
	 * @return bool
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_CALL)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST))
                                (
                                    (AST_RETURN
                                        (AST_CONST))))))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_FOREACH
                    (AST_CALL)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (AST_CONST))
                                (
                                    (AST_RETURN
                                        (AST_CONST))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (AST_CONST))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (
                            (AST_RETURN
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (SCALAR)))
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (SCALAR))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (SCALAR))))
                        (SCALAR)))
                (AST_FOREACH
                    (AST_CALL)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_RETURN
                    (AST_VAR))))))