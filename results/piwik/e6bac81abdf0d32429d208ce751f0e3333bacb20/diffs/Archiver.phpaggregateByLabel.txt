    private function aggregateByLabel($labelSQL, $recordName)
    {
        $metrics = $this->getLogAggregator()->getMetricsFromVisitByDimension($labelSQL);

        if (in_array($recordName, array(self::DEVICE_TYPE_RECORD_NAME, self::DEVICE_BRAND_RECORD_NAME, self::DEVICE_MODEL_RECORD_NAME))) {

            $labelSQL = str_replace('log_visit.', 'log_conversion.', $labelSQL);

            $query = $this->getLogAggregator()->queryConversionsByDimension(array($labelSQL));

            if ($query === false) {
                return;
            }

            while ($conversionRow = $query->fetch()) {
                if (isset($conversionRow[$labelSQL])) {
                    $metrics->sumMetricsGoals($conversionRow[$labelSQL], $conversionRow);
                }
            }
            $metrics->enrichMetricsWithConversions();
        }

        $table = $metrics->asDataTable();
        $report = $table->getSerialized($this->maximumRows, null, Metrics::INDEX_NB_VISITS);
        Common::destroy($table);
        $this->getProcessor()->insertBlobRecord($recordName, $report);
        unset($table, $report);
    }

}||||||||    private function aggregateByLabel($labelSQL, $recordName)
    {
        $metrics = $this->getLogAggregator()->getMetricsFromVisitByDimension($labelSQL);

        if (in_array($recordName, array(self::DEVICE_TYPE_RECORD_NAME, self::DEVICE_BRAND_RECORD_NAME, self::DEVICE_MODEL_RECORD_NAME))) {

            $labelSQL = str_replace('log_visit.', 'log_conversion.', $labelSQL);

            $query = $this->getLogAggregator()->queryConversionsByDimension(array($labelSQL));

            if ($query === false) {
                return;
            }

            while ($conversionRow = $query->fetch()) {
                $metrics->sumMetricsGoals(isset($conversionRow[$labelSQL]) ? $conversionRow[$labelSQL] : null, $conversionRow);
            }
            $metrics->enrichMetricsWithConversions();
        }

        $table = $metrics->asDataTable();
        $report = $table->getSerialized($this->maximumRows, null, Metrics::INDEX_NB_VISITS);
        Common::destroy($table);
        $this->getProcessor()->insertBlobRecord($recordName, $report);
        unset($table, $report);
    }

}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (NULL)))))
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (AST_VAR))))))))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_RETURN
                                (NULL)))))
                (AST_WHILE
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CONDITIONAL
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_CONST))
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_PROP
                    (AST_VAR))
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR)))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_UNSET
        (AST_VAR))
    (AST_UNSET
        (AST_VAR)))