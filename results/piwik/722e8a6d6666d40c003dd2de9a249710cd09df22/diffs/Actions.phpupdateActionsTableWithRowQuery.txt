	protected function updateActionsTableWithRowQuery($query)
	{
		$rowsProcessed = 0;
		while( $row = $query->fetch() )
		{
			$actionExplodedNames = $this->getActionExplodedNames($row['name'], $row['type']);

			// we work on the root table of the given TYPE (either ACTION or DOWNLOAD or OUTLINK etc.)
			$currentTable =& $this->actionsTablesByType[$row['type']];

			// go to the level of the subcategory
			$end = count($actionExplodedNames)-1;
			for($level = 0 ; $level < $end; $level++)
			{
				$actionCategory = $actionExplodedNames[$level];
				$currentTable =& $currentTable[$actionCategory];
			}
			$actionName = $actionExplodedNames[$end];

			// we are careful to prefix the pageName with some value
			// so that if a page has the same name as a category
			// we don't merge both entries
			if($row['type'] == Piwik_Tracker_Action::TYPE_ACTION)
			{
				$actionName = '/' . $actionName;
			}

			// currentTable is now the array element corresponding the the action
			// at this point we may be for example at the 4th level of depth in the hierarchy
			$currentTable =& $currentTable[$actionName];

			// add the row to the matching sub category subtable
			if(!($currentTable instanceof Piwik_DataTable_Row))
			{
				$currentTable = new Piwik_DataTable_Row(array(
							Piwik_DataTable_Row::COLUMNS => array('label' => (string)$actionName),
							Piwik_DataTable_Row::METADATA => array('url' => (string)$row['name']),
						));
			}

			foreach($row as $name => $value)
			{
				// we don't add this information as itnot pertinent
				// name is already set as the label // and it has been cleaned from the categories and extracted from the initial string
				// type is used to partition the different actions type in different table. Adding the info to the row would be a duplicate.
				if($name != 'name'
					&& $name != 'type')
				{
					// in some edge cases, we have twice the same action name with 2 different idaction
					// this happens when 2 visitors visit the same new page at the same time, there is a SELECT and an INSERT for each new page,
					// and in between the two the other visitor comes.
					// here we handle the case where there is already a row for this action name, if this is the case we add the value
					if(($alreadyValue = $currentTable->getColumn($name)) !== false)
					{
						$currentTable->setColumn($name, $alreadyValue+$value);
					}
					else
					{
						$currentTable->addColumn($name, $value);
					}
				}
			}

			// if the exit_action was not recorded properly in the log_link_visit_action
			// there would be an error message when getting the nb_hits column
			// we must fake the record and add the columns
			if($currentTable->getColumn('nb_hits') === false)
			{
				// to test this code: delete the entries in log_link_action_visit for
				//  a given exit_idaction
				foreach($this->defaultRow->getColumns() as $name => $value)
				{
					$currentTable->addColumn($name, $value);
				}
			}
			// simple count
			$rowsProcessed++;
		}

		// just to make sure php copies the last $currentTable in the $parentTable array
		$currentTable =& $this->actionsTablesByType;
		return $rowsProcessed;
	}
}
||||||||	protected function updateActionsTableWithRowQuery($query)
	{
		$rowsProcessed = 0;
		while( $row = $query->fetch() )
		{
			$actionExplodedNames = $this->getActionExplodedNames($row['name'], $row['type']);

			// we work on the root table of the given TYPE (either ACTION or DOWNLOAD or OUTLINK etc.)
			$currentTable =& $this->actionsTablesByType[$row['type']];

			// go to the level of the subcategory
			$end = count($actionExplodedNames)-1;
			for($level = 0 ; $level < $end; $level++)
			{
				$actionCategory = $actionExplodedNames[$level];
				$currentTable =& $currentTable[$actionCategory];
			}
			$actionName = $actionExplodedNames[$end];

			// we are careful to prefix the page URL / name with some value
			// so that if a page has the same name as a category
			// we don't merge both entries
			if($row['type'] == Piwik_Tracker_Action::TYPE_ACTION_URL )
			{
				$actionName = '/' . $actionName;
			}
			else if( $row['type'] == Piwik_Tracker_Action::TYPE_ACTION_NAME )
			{
				$actionName = ' ' . $actionName;
			}

			// currentTable is now the array element corresponding the the action
			// at this point we may be for example at the 4th level of depth in the hierarchy
			$currentTable =& $currentTable[$actionName];

			// add the row to the matching sub category subtable
			if(!($currentTable instanceof Piwik_DataTable_Row))
			{
				if( $row['type'] == Piwik_Tracker_Action::TYPE_ACTION_NAME )
				{
					$currentTable = new Piwik_DataTable_Row(array(
							Piwik_DataTable_Row::COLUMNS => array('label' => (string)$actionName),
						));
				}
				else
				{
					$currentTable = new Piwik_DataTable_Row(array(
							Piwik_DataTable_Row::COLUMNS => array('label' => (string)$actionName),
							Piwik_DataTable_Row::METADATA => array('url' => (string)$row['name']),
						));
				}
			}

			foreach($row as $name => $value)
			{
				// we don't add this information as itnot pertinent
				// name is already set as the label // and it has been cleaned from the categories and extracted from the initial string
				// type is used to partition the different actions type in different table. Adding the info to the row would be a duplicate.
				if($name != 'name'
					&& $name != 'type')
				{
					// in some edge cases, we have twice the same action name with 2 different idaction
					// this happens when 2 visitors visit the same new page at the same time, there is a SELECT and an INSERT for each new page,
					// and in between the two the other visitor comes.
					// here we handle the case where there is already a row for this action name, if this is the case we add the value
					if(($alreadyValue = $currentTable->getColumn($name)) !== false)
					{
						$currentTable->setColumn($name, $alreadyValue+$value);
					}
					else
					{
						$currentTable->addColumn($name, $value);
					}
				}
			}

			// if the exit_action was not recorded properly in the log_link_visit_action
			// there would be an error message when getting the nb_hits column
			// we must fake the record and add the columns
			if($currentTable->getColumn('nb_hits') === false)
			{
				// to test this code: delete the entries in log_link_action_visit for
				//  a given exit_idaction_url
				foreach($this->defaultRow->getColumns() as $name => $value)
				{
					$currentTable->addColumn($name, $value);
				}
			}
			// simple count
			$rowsProcessed++;
		}

		// just to make sure php copies the last $currentTable in the $parentTable array
		$currentTable =& $this->actionsTablesByType;
		return $rowsProcessed;
	}
}
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (AST_FOR
                (AST_EXPR_LIST
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR)))
                (AST_EXPR_LIST
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_EXPR_LIST
                    (AST_POST_INC
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ASSIGN_REF
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))))
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_CAST
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (AST_CLASS_CONST
                                                (SCALAR)))
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_CAST
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (SCALAR)))
                                            (AST_CLASS_CONST
                                                (SCALAR))))))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))
                                            (AST_CONST))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))))
            (AST_POST_INC
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_WHILE
        (AST_ASSIGN
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)))
            (AST_FOR
                (AST_EXPR_LIST
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR)))
                (AST_EXPR_LIST
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_VAR)))
                (AST_EXPR_LIST
                    (AST_POST_INC
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (AST_ASSIGN_REF
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))))))))
            (AST_ASSIGN_REF
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CAST
                                                                    (AST_VAR))
                                                                (SCALAR)))
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CAST
                                                                    (AST_VAR))
                                                                (SCALAR)))
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))
                                                    (AST_ARRAY_ELEM
                                                        (AST_ARRAY
                                                            (AST_ARRAY_ELEM
                                                                (AST_CAST
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR)))
                                                                (SCALAR)))
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))))))))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_BINARY_OP
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))
                                            (AST_CONST))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_VAR))))))
                                    (AST_IF_ELEM
                                        (NULL)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_VAR)
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (AST_CONST))
                    (
                        (AST_FOREACH
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_VAR)
                            (AST_VAR)
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))))
            (AST_POST_INC
                (AST_VAR))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))