||||||||    protected function setUserType( $userType )
    {
        if ($userType == 'superuser')
        {
            $code = Piwik_Auth_Result::SUCCESS_SUPERUSER_AUTH_CODE;
            $login = 'superUserLogin';
        }
        else
        {
            $code = 0;

            $login = $userType;
            if ($login != 'anonymous')
            {
                $login = 'test_' . $login;
            }
        }

        $authResultObj = new Piwik_Auth_Result($code, $login, 'dummyTokenAuth');
        $authObj = new MockPiwik_Auth();
        $authObj->setReturnValue('getName', 'Login');
        $authObj->setReturnValue('authenticate', $authResultObj);

        Zend_Registry::get('access')->reloadAccess($authObj);
    }

    /**
     * Set of messages for errors that occurred during the invocation of a
     * controller action. If not empty, there was an error in the controller.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR)))
        (
            (AST_VAR))))