	function test_php_compat_inet_pton()
	{
		$adds = array(
			'127.0.0.1'                => '7f000001',
			'192.232.131.222'          => 'c0e883de',
			'255.0.0.0'                => 'ff000000',
			'255.255.255.255'          => 'ffffffff',
			'::'                       => '00000000000000000000000000000000',
			'::0'                      => '00000000000000000000000000000000',
			'0::'                      => '00000000000000000000000000000000',
			'0::0'                     => '00000000000000000000000000000000',
			'::1'                      => '00000000000000000000000000000001',
			'2001:260:0:10::1'         => '20010260000000100000000000000001',
			'2001:5c0:1000:b::90f8'    => '200105c01000000b00000000000090f8',
			'fe80::200:4cff:fe43:172f' => 'fe8000000000000002004cfffe43172f',
			'::ffff:127.0.0.1'         => '00000000000000000000ffff7f000001',
			'::127.0.0.1'              => '0000000000000000000000007f000001',

			// relaxed rules
			'00000::'                  => '00000000000000000000000000000000',
			'1:2:3:4:5:ffff:127.0.0.1' => '00010002000300040005ffff7f000001',

			// invalid input
			null => false,
			false => false,
			true => false,
			'' => false,
			'0' => false,
			'07.07.07.07' => false,
			'1.' => false,
			'.1' => false,
			'1.1' => false,
			'.1.1.' => false,
			'1.1.1.' => false,
			'.1.1.1' => false,
			'1.2.3.4.' => false,
			'.1.2.3.4' => false,
			'1.2.3.256' => false,
			'a.b.c.d' => false,
			'::1::' => false,
			'1:2:3:4:::5:6' => false,
			'1:2:3:4:5:6:' => false,
			':1:2:3:4:5:6' => false,
			'1:2:3:4:5:6:7:' => false,
			':1:2:3:4:5:6:7' => false,
			'::11111:0' => false,
			'::g' => false,
			'::ffff:127.00.0.1' => false,
			'::ffff:127.0.0.01' => false,
			'::ffff:256.0.0.1' => false,
			'::ffff:1.256.0.1' => false,
			'::ffff:65536.0.0.1' => false,
			'::ffff:256.65536.0.1' => false,
			'::ffff:65536.65536.0.1' => false,
			'::ffff:7f01:0.1' => false,
			'ffff:127.0.0.1:ffff::' => false,
		);

		foreach ($adds as $k => $v) {
			$this->assertEqual( bin2hex(php_compat_inet_pton($k)), $v, $k );
			if(!Piwik_Common::isWindows())
				$this->assertEqual( bin2hex(@inet_pton($k)), $v, $k );
		}
	}
}||||||||	function test_php_compat_inet_pton()
	{
		$adds = array(
			'127.0.0.1'                => '7f000001',
			'192.232.131.222'          => 'c0e883de',
			'255.0.0.0'                => 'ff000000',
			'255.255.255.255'          => 'ffffffff',
			'::'                       => '00000000000000000000000000000000',
			'::0'                      => '00000000000000000000000000000000',
			'0::'                      => '00000000000000000000000000000000',
			'0::0'                     => '00000000000000000000000000000000',
			'::1'                      => '00000000000000000000000000000001',
			'2001:260:0:10::1'         => '20010260000000100000000000000001',
			'2001:5c0:1000:b::90f8'    => '200105c01000000b00000000000090f8',
			'fe80::200:4cff:fe43:172f' => 'fe8000000000000002004cfffe43172f',
			'::ffff:127.0.0.1'         => '00000000000000000000ffff7f000001',
			'::127.0.0.1'              => '0000000000000000000000007f000001',

			// relaxed rules
			'00000::'                  => '00000000000000000000000000000000',
			'1:2:3:4:5:ffff:127.0.0.1' => '00010002000300040005ffff7f000001',

			// invalid input
			null => false,
			false => false,
			true => false,
			'' => false,
			'0' => false,
			'07.07.07.07' => false,
			'1.' => false,
			'.1' => false,
			'1.1' => false,
			'.1.1.' => false,
			'1.1.1.' => false,
			'.1.1.1' => false,
			'1.2.3.4.' => false,
			'.1.2.3.4' => false,
			'1.2.3.256' => false,
			'a.b.c.d' => false,
			'::1::' => false,
			'1:2:3:4:::5:6' => false,
			'1:2:3:4:5:6:' => false,
			':1:2:3:4:5:6' => false,
			'1:2:3:4:5:6:7:' => false,
			':1:2:3:4:5:6:7' => false,
			'::11111:0' => false,
			'::g' => false,
			'::ffff:127.00.0.1' => false,
			'::ffff:127.0.0.01' => false,
			'::ffff:256.0.0.1' => false,
			'::ffff:1.256.0.1' => false,
			'::ffff:65536.0.0.1' => false,
			'::ffff:256.65536.0.1' => false,
			'::ffff:65536.65536.0.1' => false,
			'::ffff:7f01:0.1' => false,
			'ffff:127.0.0.1:ffff::' => false,
		);

		foreach ($adds as $k => $v) {
			$this->assertEqual( bin2hex(php_compat_inet_pton($k)), $v, $k );
			if(!Piwik_Common::isWindows() && !Piwik_Common::isMacOS())
			{
				$this->assertEqual( bin2hex(@inet_pton($k)), $v, $k );
			}
		}
	}
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_STATIC_CALL))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (AST_VAR)
                                (AST_VAR)))))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (AST_CONST))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_UNARY_OP
                            (AST_STATIC_CALL))
                        (AST_UNARY_OP
                            (AST_STATIC_CALL)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_CALL
                                    (
                                        (AST_UNARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR))))))
                                (AST_VAR)
                                (AST_VAR)))))))))