	function test_P2N_invalidInput()
	{
		$tests = array(
			// not a series of dotted numbers
			null,
			'',
			'alpha',
			'...',

			// missing an octet
			'.0.0.0',
			'0..0.0',
			'0.0..0',
			'0.0.0.',

			// octets must be 0-255
			'-1.0.0.0',
			'1.1.1.256',

			// leading zeros not supported (i.e., can be ambiguous, e.g., octal)
			'07.07.07.07',
		);
		foreach($tests as $P)
		{
			$this->assertEqual( Piwik_IP::P2N($P), "\x00\x00\x00\x00", "$P" );
		}
	}

||||||||	function test_P2N_invalidInput()
	{
		$tests = array(
			// not a series of dotted numbers
			null,
			'',
			'alpha',
			'...',

			// missing an octet
			'.0.0.0',
			'0..0.0',
			'0.0..0',
			'0.0.0.',

			// octets must be 0-255
			'-1.0.0.0',
			'1.1.1.256',
		);

		if (!Piwik_Common::isMacOS())
		{
			// leading zeros not supported (i.e., can be ambiguous, e.g., octal)
			$tests[] = '07.07.07.07';
		}

		foreach($tests as $P)
		{
			$this->assertEqual( Piwik_IP::P2N($P), "\x00\x00\x00\x00", "$P" );
		}
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)
                    (AST_ENCAPS_LIST
                        (AST_VAR)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)
                    (AST_ENCAPS_LIST
                        (AST_VAR)))))))