    public function logEvent($className, $methodName, $parameterNames, $parameterValues, $executionTime, $returnedValue)
    {
        $event = array();
        $event['class_name'] = $className;
        $event['method_name'] = $methodName;
        $event['parameter_names_default_values'] = serialize($parameterNames);
        $event['parameter_values'] = serialize($parameterValues);
        $event['execution_time'] = $executionTime;
        $event['returned_value'] = is_array($returnedValue) ? serialize($returnedValue) : $returnedValue;
        parent::log($event, Log::INFO, null);
    }
}
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_CLASS_CONST
                (SCALAR))
            (AST_CONST))))||||||||