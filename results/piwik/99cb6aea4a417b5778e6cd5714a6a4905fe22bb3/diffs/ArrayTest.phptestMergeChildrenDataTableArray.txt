||||||||    public function testMergeChildrenDataTableArray()
    {
        $dataTable = $this->createInstanceWithDataTableArrays();

        $result = $dataTable->mergeChildren();

        // check that the result is a DataTable_Array w/ two DataTable children
        $this->assertInstanceOf('Piwik_DataTable_Array', $result);
        $this->assertEquals(2, $result->getRowsCount());

        // check that the result has one metadata, 'metadataKey1' => 'metadataValue1'
        $this->assertEquals(1, count($result->metadata));
        $this->assertEquals('metadataValue1', $result->metadata['metadataKey1']);

        // check that the first sub-DataTable is a DataTable with 4 rows
        $subDataTable1 = $result->getTable('subDataTable1');
        $this->assertTrue($subDataTable1 instanceof Piwik_DataTable);
        $this->assertEquals(4, $subDataTable1->getRowsCount());

        // check that the first two rows of the first sub-table have 'subArray1' as the label
        $this->mergeChildren_checkRow($subDataTable1->getRowFromId(0), 'subArray1', 1);
        $this->mergeChildren_checkRow($subDataTable1->getRowFromId(1), 'subArray1', 2);

        // check that the last two rows of the first sub-table have 'subArray2' as the label
        $this->mergeChildren_checkRow($subDataTable1->getRowFromId(2), 'subArray2', 1);
        $this->mergeChildren_checkRow($subDataTable1->getRowFromId(3), 'subArray2', 2);

        // check that the second sub-DataTable is a DataTable with 4 rows
        $subDataTable2 = $result->getTable('subDataTable2');
        $this->assertTrue($subDataTable2 instanceof Piwik_DataTable);
        $this->assertEquals(4, $subDataTable2->getRowsCount());

        // check that the first two rows of the second sub-table have 'subArray1' as the label
        $this->mergeChildren_checkRow($subDataTable2->getRowFromId(0), 'subArray1', 1);
        $this->mergeChildren_checkRow($subDataTable2->getRowFromId(1), 'subArray1', 2);

        // check that the last two rows of the second sub-table have 'subArray2' as the label
        $this->mergeChildren_checkRow($subDataTable2->getRowFromId(2), 'subArray2', 1);
        $this->mergeChildren_checkRow($subDataTable2->getRowFromId(3), 'subArray2', 2);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_INSTANCEOF
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (SCALAR)
            (SCALAR))))