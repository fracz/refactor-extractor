    public function updateGeoIPLinks()
    {
        $this->dieIfGeolocationAdminIsDisabled();
        Piwik::checkUserIsSuperUser();
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            Json::sendHeaderJSON();
            try {
                $this->checkTokenInUrl();

                GeoIPAutoUpdater::setUpdaterOptionsFromUrl();

                // if there is a updater URL for a database, but its missing from the misc dir, tell
                // the browser so it can download it next
                $info = $this->getNextMissingDbUrlInfo();
                if ($info !== false) {
                    return Common::json_encode($info);
                } else {
                    return 1;
                }
            } catch (Exception $ex) {
                return Common::json_encode(array('error' => $ex->getMessage()));
            }
        }
    }

    /**
     * Starts or continues a download for a missing GeoIP database. A database is missing if
     * it has an update URL configured, but the actual database is not available in the misc
     * directory.
     *
     * Input:
     *   'url' - The URL to download the database from.
     *   'continue' - 1 if we're continuing a download, 0 if we're starting one.
     *
     * Output:
     *   'error' - If an error occurs this describes the error.
     *   'to_download' - The URL of a missing database that should be downloaded next (if any).
     *   'to_download_label' - The label to use w/ the progress bar that describes what we're
     *                         downloading.
     *   'current_size' - Size of the current file on disk.
     *   'expected_file_size' - Size of the completely downloaded file.
     */
||||||||    public function updateGeoIPLinks()
    {
        $this->dieIfGeolocationAdminIsDisabled();
        Piwik::checkUserIsSuperUser();
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            Json::sendHeaderJSON();
            try {
                $this->checkTokenInUrl();

                GeoIPAutoUpdater::setUpdaterOptionsFromUrl();

                // if there is a updater URL for a database, but its missing from the misc dir, tell
                // the browser so it can download it next
                $info = $this->getNextMissingDbUrlInfo();
                if ($info !== false) {
                    return Common::json_encode($info);
                } else {
                    return Common::json_encode(array('nextRunTime' => GeoIPAutoUpdater::getNextRunTime()->toString()));
                }
            } catch (Exception $ex) {
                return Common::json_encode(array('error' => $ex->getMessage()));
            }
        }
    }

    /**
     * Starts or continues a download for a missing GeoIP database. A database is missing if
     * it has an update URL configured, but the actual database is not available in the misc
     * directory.
     *
     * Input:
     *   'url' - The URL to download the database from.
     *   'continue' - 1 if we're continuing a download, 0 if we're starting one.
     *
     * Output:
     *   'error' - If an error occurs this describes the error.
     *   'to_download' - The URL of a missing database that should be downloaded next (if any).
     *   'to_download_label' - The label to use w/ the progress bar that describes what we're
     *                         downloading.
     *   'current_size' - Size of the current file on disk.
     *   'expected_file_size' - Size of the completely downloaded file.
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_STATIC_CALL)
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_STATIC_CALL)
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_RETURN
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_RETURN
                                        (SCALAR))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_RETURN
                                    (AST_STATIC_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (SCALAR)))))))))
                    (NULL))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_STATIC_CALL)
                (AST_TRY
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_STATIC_CALL)
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_RETURN
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_RETURN
                                        (AST_STATIC_CALL
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_METHOD_CALL
                                                            (AST_STATIC_CALL))
                                                        (SCALAR))))))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_RETURN
                                    (AST_STATIC_CALL
                                        (
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))
                                                    (SCALAR)))))))))
                    (NULL))))))