    public static function rewriteTmpPathWithHostname($path)
    {
        try {
            $configByHost = Config::getInstance()->getConfigHostnameIfSet();
        } catch (Exception $e) {
            // Config file not found
        }
        if (empty($configByHost)) {
            return $path;
        }

        $tmp = '/tmp/';
        if (($posTmp = strrpos($path, $tmp)) === false) {
            throw new Exception("The path $path was expected to contain the string /tmp/ ");
        }

        $tmpToReplace = $tmp . $configByHost . '/';

        // replace only the latest occurrence (in case path contains twice /tmp)
        $path = substr_replace($path, $tmpToReplace, $posTmp, strlen($tmp));

        return $path;
    }

    /**
     * Returns true if the Piwik server appears to be working.
     *
     * @param $piwikServerUrl
     * @return bool
     */
||||||||    public static function rewriteTmpPathWithHostname($path)
    {
        $tmp = '/tmp/';
        $path = self::rewritePathAppendHostname($path, $tmp);
        return $path;
    }

    /**
     * If Piwik uses per-domain config file, make sure CustomLogo is unique
     * @param $path
     * @return mixed
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_STATIC_CALL))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))