    public function generalSettings()
    {
        Piwik::checkUserHasSomeAdminAccess();
        $view = new View('@CoreAdminHome/generalSettings');

        if (Piwik::isUserIsSuperUser()) {
            $this->handleGeneralSettingsAdmin($view);

            $trustedHosts = array();
            if (isset(Config::getInstance()->General['trusted_hosts'])) {
                $trustedHosts = Config::getInstance()->General['trusted_hosts'];
            }
            $view->trustedHosts = $trustedHosts;

            $view->branding = Config::getInstance()->branding;
            $directoryWritable = is_writable(PIWIK_DOCUMENT_ROOT . '/misc/user/');
            $logoFilesWriteable = is_writeable(PIWIK_DOCUMENT_ROOT . '/misc/user/logo.png')
                && is_writeable(PIWIK_DOCUMENT_ROOT . '/misc/user/logo.svg')
                && is_writeable(PIWIK_DOCUMENT_ROOT . '/misc/user/logo-header.png');;
            $view->logosWriteable = ($logoFilesWriteable || $directoryWritable) && ini_get('file_uploads') == 1;

        }

        $view->language = LanguagesManager::getLanguageCodeForCurrentUser();
        $this->setBasicVariablesView($view);
        return $view->render();
    }

||||||||    public function generalSettings()
    {
        Piwik::checkUserHasSomeAdminAccess();
        $view = new View('@CoreAdminHome/generalSettings');

        if (Piwik::isUserIsSuperUser()) {
            $this->handleGeneralSettingsAdmin($view);

            $trustedHosts = array();
            if (isset(Config::getInstance()->General['trusted_hosts'])) {
                $trustedHosts = Config::getInstance()->General['trusted_hosts'];
            }
            $view->trustedHosts = $trustedHosts;

            $view->branding = Config::getInstance()->branding;

            $logo = new CustomLogo();
            $view->logosWriteable = $logo->isCustomLogoWritable();
            $view->pathUserLogo = CustomLogo::getPathUserLogo();
            $view->pathUserLogoSmall = CustomLogo::getPathUserLogoSmall();
            $view->pathUserLogoSVG = CustomLogo::getPathUserSvgLogo();
            $view->pathUserLogoDirectory = dirname($view->pathUserLogo) . '/';
        }

        $view->language = LanguagesManager::getLanguageCodeForCurrentUser();
        $this->setBasicVariablesView($view);
        return $view->render();
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_STATIC_CALL))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_STATIC_CALL))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_STATIC_CALL)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_CONST)
                                (SCALAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))))
                            (AST_CALL
                                (
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR)))))
                        (AST_CALL
                            (
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ISSET
                            (AST_DIM
                                (AST_PROP
                                    (AST_STATIC_CALL))
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_STATIC_CALL))
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_STATIC_CALL)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_STATIC_CALL))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))