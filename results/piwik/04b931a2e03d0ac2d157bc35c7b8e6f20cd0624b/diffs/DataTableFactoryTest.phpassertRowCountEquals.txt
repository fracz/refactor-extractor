||||||||    private function assertRowCountEquals($expectedCount, $tableOrMap)
    {
        if ($tableOrMap instanceof DataTable\Map) {
            $this->assertSame($expectedCount, $tableOrMap->getRowsCount());
        } elseif ($tableOrMap instanceof DataTable) {
            $this->assertSame($expectedCount, $tableOrMap->getRowsCountRecursive());
        } else {
            throw new \Exception('wrong argument passed to assertRowCountEquals()');
        }
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))))))