||||||||    public function test_getAllWithGroups()
    {
        $sites = $this->requestGetAllWithGroups(array('filter_limit' => 20));
        $this->assertTrue(is_string($sites));

        $sites = json_decode($sites, true);

        // as limit is 20 make sure it returns all 15 sites but we do not check for all the detailed sites info,
        // this is tested in other tests. We only check for first site.
        $this->assertSame(15, count($sites['sites']));
        $this->assertEquals(array(
            'label' => 'Site 1',
            'nb_visits' => 2,
            'nb_pageviews' => 3,
            'revenue' => '$ 2541',
            'visits_evolution' => '100%',
            'pageviews_evolution' => '100%',
            'revenue_evolution' => '100%',
            'idsite' => 1,
            'group' => '',
            'main_url' => 'http://piwik.net',
        ), $sites['sites'][0]);

        unset($sites['sites']);
        $expected = array(
            'numSites' => 15,
            'totals' => array(
                'nb_pageviews' => 8,
                'nb_visits' => 5,
                'revenue' => 5082,
                'nb_visits_lastdate' => 0,
            ),
            'lastDate' => '2013-01-22'
        );

        $this->assertEquals($expected, $sites);
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (SCALAR)))
            (AST_DIM
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))))
    (AST_UNSET
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))