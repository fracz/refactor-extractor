	public function getLanguageToLoad()
	{
		static $language = null;
		if(!is_null($language))
		{
			return $language;
		}

		Piwik_PostEvent('Translate.getLanguageToLoad', $language);

		$language = Piwik_Common::getRequestVar('language', is_null($language) ? '' : $language, 'string');
		if(empty($language))
		{
			$language = $this->getLanguageDefault();
		}
		if( Piwik_Common::isValidFilename($language))
		{
			return $language;
		}
		else
		{
			throw new Exception("The language selected ('$language') is not a valid language file ");
		}
	}

||||||||	public function getLanguageToLoad()
	{
		if(!is_null(self::$languageToLoad))
		{
			return self::$languageToLoad;
		}

		Piwik_PostEvent('Translate.getLanguageToLoad', self::$languageToLoad);

		self::$languageToLoad = Piwik_Common::getRequestVar('language', is_null(self::$languageToLoad) ? '' : self::$languageToLoad, 'string');
		if(empty(self::$languageToLoad))
		{
			echo self::$languageToLoad = $this->getLanguageDefault();
		}
		if( Piwik_Common::isValidFilename(self::$languageToLoad))
		{
			return self::$languageToLoad;
		}
		else
		{
			throw new Exception("The language selected ('".self::$languageToLoad."') is not a valid language file ");
		}
	}

	/** Reset the cached language to load. Used in tests. */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (SCALAR)
                    (AST_VAR))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_STATIC_PROP))))
            (
                (AST_RETURN
                    (AST_STATIC_PROP)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_STATIC_PROP)))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_STATIC_PROP)))
                    (SCALAR)
                    (AST_STATIC_PROP))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_STATIC_PROP))
            (
                (AST_ECHO
                    (AST_ASSIGN
                        (AST_STATIC_PROP)
                        (AST_METHOD_CALL
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_STATIC_PROP))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_STATIC_PROP))
                                (SCALAR)))))))))