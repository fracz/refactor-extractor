||||||||    private function assertMoversAndShakers(DataTable $report, $movers, $nonMovers)
    {
        foreach ($movers as $mover) {
            $row = $report->getRowFromLabel($mover);
            if (!$row) {
                $this->fail("$mover is not a valid label");
                continue;
            }
            $this->assertTrue($row->getColumn('isMoverAndShaker'), "$mover is not a mover but should be");
        }

        foreach ($nonMovers as $nonMover) {
            $row = $report->getRowFromLabel($nonMover);
            if (!$row) {
                $this->fail("$nonMover is not a valid label");
                continue;
            }
            $this->assertFalse($row->getColumn('isMoverAndShaker'), "$nonMover is a mover but should be not");
        }
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ENCAPS_LIST
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_ENCAPS_LIST
                        (AST_VAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_ENCAPS_LIST
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_ENCAPS_LIST
                        (AST_VAR)
                        (SCALAR)))))))