||||||||	private static function validateRequestedReports($idSite, $reportType, $requestedReports)
	{
		if(!self::allowMultipleReports($reportType))
		{
			//@review sms can only contain one report, we currently silently discard all reports except the first one, is this ok or should we raise an exception?
			$requestedReports = array_slice($requestedReports, 0, 1);
		}

		// retrieve available reports
		$availableReportMetadata = self::getReportMetadata($idSite, $reportType);

		$availableReportIds = array();
		foreach($availableReportMetadata as $reportMetadata)
		{
			$availableReportIds[] = $reportMetadata['uniqueId'];
		}

		foreach($requestedReports as $report)
		{
			if(!in_array($report, $availableReportIds))
			{
				throw new Exception("Report $report is unknown or not available for report type '$reportType'.");
			}
		}

		return json_encode($requestedReports);
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))