||||||||	public function renderReport($processedReport)
	{
		$isGoalPluginEnabled = Piwik_Common::isGoalPluginEnabled();
		$prettyDate = $processedReport['prettyDate'];
		$reportData = $processedReport['reportData'];

		$evolutionMetrics = array();
		$multiSitesAPIMetrics = Piwik_MultiSites_API::getApiMetrics($enhanced = true);
		foreach($multiSitesAPIMetrics as $metricSettings)
		{
			$evolutionMetrics[] = $metricSettings[Piwik_MultiSites_API::METRIC_EVOLUTION_COL_NAME_KEY];
		}

		// no decimal for all metrics to shorten SMS content (keeps the monetary sign for revenue metrics)
		$reportData->filter(
			'ColumnCallbackReplace',
			array(
				array_merge(array_keys($multiSitesAPIMetrics),$evolutionMetrics),
				create_function (
					'$value',
					'
					return preg_replace_callback (
						FLOAT_REGEXP,
						create_function (
							\'$matches\',
							\'return round($matches[0]);\'
						),
						$value
					);
					'
				)
			)
		);

		// evolution metrics formatting :
		//  - remove monetary, percentage and white spaces to shorten SMS content
		//    (this is also needed to be able to test $value != 0 and see if there is an evolution at all in SMSReport.tpl)
		//  - adds a plus sign
		$reportData->filter(
			'ColumnCallbackReplace',
			array(
				$evolutionMetrics,
				create_function (
					'$value',
					'
					$matched = preg_match(FLOAT_REGEXP, $value, $matches);
					return $matched ? sprintf("%+d",$matches[0]) : $value;
					'
				)
			)
		);

		$dataRows = $reportData->getRows();
		$reportMetadata = $processedReport['reportMetadata'];
		$reportRowsMetadata = $reportMetadata->getRows();

		$siteHasECommerce = array();
		foreach($reportRowsMetadata as $rowMetadata)
		{
			$idSite = $rowMetadata->getColumn('idsite');
			$siteHasECommerce[$idSite] = Piwik_Site::isEcommerceEnabledFor($idSite);
		}

		$smarty = new Piwik_Smarty();
		$smarty->assign("isGoalPluginEnabled", $isGoalPluginEnabled);
		$smarty->assign("reportRows", $dataRows);
		$smarty->assign("reportRowsMetadata", $reportRowsMetadata);
		$smarty->assign("prettyDate", $prettyDate);
		$smarty->assign("siteHasECommerce", $siteHasECommerce);

		$this->rendering .= $smarty->fetch(PIWIK_USER_PATH . '/plugins/MobileMessaging/templates/SMSReport.tpl');
	}
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_VAR)))
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN_OP
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))))))