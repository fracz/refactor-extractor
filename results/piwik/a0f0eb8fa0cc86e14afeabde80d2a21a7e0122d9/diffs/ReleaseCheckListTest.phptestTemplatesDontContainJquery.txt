    public function testTemplatesDontContainJquery($extension)
    {
        $patternFailIfFound = 'jquery';

        // known files that will for sure not contain a "buggy" $patternFailIfFound
        $whiteListedFiles = array(
            PIWIK_INCLUDE_PATH . '/plugins/TestRunner/templates/travis.yml.twig',
            PIWIK_INCLUDE_PATH . '/plugins/CoreUpdater/templates/layout.twig',
            PIWIK_INCLUDE_PATH . '/plugins/Installation/templates/layout.twig',
            PIWIK_INCLUDE_PATH . '/plugins/Login/templates/login.twig',
            PIWIK_INCLUDE_PATH . '/tests/UI/screenshot-diffs/singlediff.html',

            // Note: entries below are paths and any file within these paths will be automatically whitelisted
            PIWIK_INCLUDE_PATH . '/tests/resources/overlay-test-site-real/',
            PIWIK_INCLUDE_PATH . '/tests/resources/overlay-test-site/',
            PIWIK_INCLUDE_PATH . '/vendor/facebook/xhprof/xhprof_html/docs/',
        );

        $files = Filesystem::globr(PIWIK_INCLUDE_PATH, '*.' . $extension);
        $this->assertFilesDoNotContain($files, $patternFailIfFound, $whiteListedFiles);
    }

    /**
     * @param $files
     * @param $patternFailIfFound
     * @param $whiteListedFiles
     */
||||||||    public function testTemplatesDontContainJquery($extension)
    {
        $patternFailIfFound = 'jquery';

        // known files that will for sure not contain a "buggy" $patternFailIfFound
        $whiteListedFiles = array(
            PIWIK_INCLUDE_PATH . '/plugins/TestRunner/templates/travis.yml.twig',
            PIWIK_INCLUDE_PATH . '/plugins/CoreUpdater/templates/layout.twig',
            PIWIK_INCLUDE_PATH . '/plugins/Installation/templates/layout.twig',
            PIWIK_INCLUDE_PATH . '/plugins/Login/templates/login.twig',
            PIWIK_INCLUDE_PATH . '/tests/UI/screenshot-diffs/singlediff.html',

            // Note: entries below are paths and any file within these paths will be automatically whitelisted
            PIWIK_INCLUDE_PATH . '/tests/resources/overlay-test-site-real/',
            PIWIK_INCLUDE_PATH . '/tests/resources/overlay-test-site/',
            PIWIK_INCLUDE_PATH . '/vendor/facebook/xhprof/xhprof_html/docs/',
            PIWIK_INCLUDE_PATH . '/plugins/Morpheus/icons/',
        );

        $files = Filesystem::globr(PIWIK_INCLUDE_PATH, '*.' . $extension);
        $this->assertFilesDoNotContain($files, $patternFailIfFound, $whiteListedFiles);
    }

    /**
     * @param $files
     * @param $patternFailIfFound
     * @param $whiteListedFiles
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CONST)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR))
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CONST)
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR))))