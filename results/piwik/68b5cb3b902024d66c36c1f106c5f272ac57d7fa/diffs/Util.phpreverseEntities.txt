||||||||    static function reverseEntities($string, $replaceEntities = XML_UTIL_ENTITIES_XML)
    {
        switch ($replaceEntities) {
            case XML_UTIL_ENTITIES_XML:
                return strtr($string,array(
                                          '&amp;'  => '&',
                                          '&gt;'   => '>',
                                          '&lt;'   => '<',
                                          '&quot;' => '"',
                                          '&apos;' => '\'' ));
                break;
            case XML_UTIL_ENTITIES_XML_REQUIRED:
                return strtr($string,array(
                                          '&amp;'  => '&',
                                          '&lt;'   => '<',
                                          '&quot;' => '"' ));
                break;
            case XML_UTIL_ENTITIES_HTML:
                $arr = array_flip(get_html_translation_table(HTML_ENTITIES));
                return strtr($string, $arr);
                break;
        }
        return $string;
    }

   /**
    * build an xml declaration
    *
    * <code>
    * require_once 'XML/Util.php';
    *
    * // get an XML declaration:
    * $xmlDecl = XML_Util::getXMLDeclaration("1.0", "UTF-8", true);
    * </code>
    *
    * @access   public
    * @static
    * @param    string  $version     xml version
    * @param    string  $encoding    character encoding
    * @param    boolean $standAlone  document is standalone (or not)
    * @return   string  $decl xml declaration
    * @uses     XML_Util::attributesToString() to serialize the attributes of the XML declaration
    */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_ARRAY_ELEM
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_CONST))))))
                    (AST_RETURN
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))))
    (AST_RETURN
        (AST_VAR)))