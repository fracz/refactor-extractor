	public function getFilteredTableFromLabel($label)
	{
		$newTableArray = new Piwik_DataTable_Array;
		$newTableArray->setKeyName($this->getKeyName());

		foreach ($this->array as $subTableLabel => $subTable)
		{
			$subTable = $subTable->getFilteredTableFromLabel($label);
			$newTableArray->addTable($subTable, $subTableLabel);
		}

		return $newTableArray;
	}

	/**
	 * Merges the rows of every child DataTable into a new DataTable and
	 * returns it. This function will also set the label of the merged rows
	 * to the label of the DataTable they were originally from.
	 *
	 * The result of this function is determined by the type of DataTable
	 * this instance holds. If this DataTable_Array instance holds an array
	 * of DataTables, this function will transform it from:
	 * <code>
	 * Label 0:
	 *   DataTable(row1)
	 * Label 1:
	 *   DataTable(row2)
	 * </code>
	 * to:
	 * <code>
	 * DataTable(row1[label = 'Label 0'], row2[label = 'Label 1'])
	 * </code>
	 *
	 * If this instance holds an array of DataTable_Arrays, this function will
	 * transform it from:
	 * <code>
	 * Outer Label 0:			// the outer DataTable_Array
	 *   Inner Label 0:			// one of the inner DataTable_Arrays
	 *     DataTable(row1)
	 *   Inner Label 1:
	 *     DataTable(row2)
	 * Outer Label 1:
	 *   Inner Label 0:
	 *     DataTable(row3)
	 *   Inner Label 1:
	 *     DataTable(row4)
	 * </code>
	 * to:
	 * <code>
	 * Inner Label 0:
	 *   DataTable(row1[label = 'Outer Label 0'], row3[label = 'Outer Label 1'])
	 * Inner Label 1:
	 *   DataTable(row2[label = 'Outer Label 0'], row4[label = 'Outer Label 1'])
	 * </code>
	 *
	 * In addition, if this instance holds an array of DataTable_Arrays, the
	 * metadata of the first child is used as the metadata of the result.
	 *
	 * This function can be used, for example, to smoosh IndexedBySite archive
	 * query results into one DataTable w/ different rows differentiated by site ID.
	 *
	 * @return Piwik_DataTable|Piwik_DataTable_Array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||