	public function __construct( $templateFile, $smConf = array(), $filter = true )
	{
		$this->template = $templateFile;
		$this->smarty = new Piwik_Smarty();

		if(count($smConf) == 0)
		{
			$smConf = Zend_Registry::get('config')->smarty;
		}
		foreach($smConf as $key => $value)
		{
			$this->smarty->$key = $value;
		}

		$this->smarty->template_dir = $smConf->template_dir->toArray();
		array_walk($this->smarty->template_dir, array("Piwik_View","addPiwikPath"), PIWIK_INCLUDE_PATH);

		$this->smarty->plugins_dir = $smConf->plugins_dir->toArray();
		array_walk($this->smarty->plugins_dir, array("Piwik_View","addPiwikPath"), PIWIK_INCLUDE_PATH);

		$this->smarty->compile_dir = $smConf->compile_dir;
		Piwik_View::addPiwikPath($this->smarty->compile_dir, null, PIWIK_USER_PATH);

		$this->smarty->cache_dir = $smConf->cache_dir;
		Piwik_View::addPiwikPath($this->smarty->cache_dir, null, PIWIK_USER_PATH);

		$error_reporting = $smConf->error_reporting;
		if($error_reporting != (string)(int)$error_reporting)
		{
			$error_reporting = self::bitwise_eval($error_reporting);
		}
		$this->smarty->error_reporting = $error_reporting;

		if($filter)
		{
			$this->smarty->load_filter('output', 'cachebuster');

			$use_ajax_cdn = Zend_Registry::get('config')->General->use_ajax_cdn;
			if($use_ajax_cdn)
			{
				$this->smarty->load_filter('output', 'ajaxcdn');
			}

			$this->smarty->load_filter('output', 'trimwhitespace');
		}

		// global value accessible to all templates: the piwik base URL for the current request
		$this->piwikUrl = Piwik_Url::getCurrentUrlWithoutFileName();

		$this->piwik_version = Piwik_Version::VERSION;
	}

	/**
	 * Directly assigns a variable to the view script.
	 * VAR names may not be prefixed with '_'.
	 *
	 *	@param string $key The variable name.
	 *	@param mixed $val The variable value.
	 */
||||||||	public function __construct( $templateFile, $smConf = array(), $filter = true )
	{
		$this->template = $templateFile;
		$this->smarty = new Piwik_Smarty();

		if(count($smConf) == 0)
		{
			$smConf = Zend_Registry::get('config')->smarty;
		}
		foreach($smConf as $key => $value)
		{
			$this->smarty->$key = $value;
		}

		$this->smarty->template_dir = $smConf->template_dir->toArray();
		array_walk($this->smarty->template_dir, array("Piwik_View","addPiwikPath"), PIWIK_INCLUDE_PATH);

		$this->smarty->plugins_dir = $smConf->plugins_dir->toArray();
		array_walk($this->smarty->plugins_dir, array("Piwik_View","addPiwikPath"), PIWIK_INCLUDE_PATH);

		$this->smarty->compile_dir = $smConf->compile_dir;
		Piwik_View::addPiwikPath($this->smarty->compile_dir, null, PIWIK_USER_PATH);

		$this->smarty->cache_dir = $smConf->cache_dir;
		Piwik_View::addPiwikPath($this->smarty->cache_dir, null, PIWIK_USER_PATH);

		$error_reporting = $smConf->error_reporting;
		if($error_reporting != (string)(int)$error_reporting)
		{
			$error_reporting = self::bitwise_eval($error_reporting);
		}
		$this->smarty->error_reporting = $error_reporting;

		if($filter)
		{
			$this->smarty->load_filter('output', 'cachebuster');

			$use_ajax_cdn = Zend_Registry::get('config')->General->use_ajax_cdn;
			if($use_ajax_cdn)
			{
				$this->smarty->load_filter('output', 'ajaxcdn');
			}

			$this->smarty->load_filter('output', 'trimwhitespace');
		}

		// global value accessible to all templates: the piwik base URL for the current request
		$this->piwikUrl = Piwik_Common::sanitizeInputValue(Piwik_Url::getCurrentUrlWithoutFileName());
		$this->currentUrlWithoutFilename = Piwik_Common::sanitizeInputValue(Piwik_Url::getCurrentUrlWithoutFileName());
		$this->piwik_version = Piwik_Version::VERSION;
	}

	/**
	 * Directly assigns a variable to the view script.
	 * VAR names may not be prefixed with '_'.
	 *
	 *	@param string $key The variable name.
	 *	@param mixed $val The variable value.
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CAST
                    (AST_CAST
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_STATIC_CALL
                            (
                                (SCALAR))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_PROP
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CAST
                    (AST_CAST
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_PROP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CLASS_CONST
            (SCALAR))))