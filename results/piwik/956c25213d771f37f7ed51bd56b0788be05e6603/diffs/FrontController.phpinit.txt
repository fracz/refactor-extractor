	function init()
	{
		try {
			Zend_Registry::set('timer', new Piwik_Timer);

			$directoriesToCheck = array(
					'/tmp/',
					'/tmp/templates_c/',
					'/tmp/cache/',
					'/tmp/assets/'
			);

			Piwik::checkDirectoriesWritableOrDie($directoriesToCheck);
			self::assignCliParametersToRequest();

			Piwik_Translate::getInstance()->loadEnglishTranslation();

			$exceptionToThrow = false;

			try {
				Piwik::createConfigObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.NoConfigurationFile', $e);
				$exceptionToThrow = $e;
			}

			$pluginsManager = Piwik_PluginsManager::getInstance();
			$pluginsManager->loadPlugins( Zend_Registry::get('config')->Plugins->Plugins->toArray() );

			if($exceptionToThrow)
			{
				throw $exceptionToThrow;
			}


			try {
				Piwik::createDatabaseObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.badConfigurationFile', $e);
				throw $e;
			}

			Piwik::createLogObject();

			// creating the access object, so that core/Updates/* can enforce Super User and use some APIs
			Piwik::createAccessObject();
			Piwik_PostEvent('FrontController.dispatchCoreAndPluginUpdatesScreen');

			Piwik_PluginsManager::getInstance()->installLoadedPlugins();
			Piwik::install();

			Piwik_PostEvent('FrontController.initAuthenticationObject');
			try {
				$authAdapter = Zend_Registry::get('auth');
			} catch(Exception $e){
				throw new Exception("Authentication object cannot be found in the Registry. Maybe the Login plugin is not activated?
									<br />You can activate the plugin by adding:<br />
									<code>Plugins[] = Login</code><br />
									under the <code>[Plugins]</code> section in your config/config.inc.php");
			}

			Zend_Registry::get('access')->reloadAccess($authAdapter);

			Piwik_Translate::getInstance()->reloadLanguage();

			Piwik::raiseMemoryLimitIfNecessary();
			$pluginsManager->postLoadPlugins();


			Piwik_PostEvent('FrontController.checkForUpdates');
		} catch(Exception $e) {
			Piwik_ExitWithMessage($e->getMessage(), $e->getTraceAsString(), true);
		}
	}

	/**
	 * Assign CLI parameters as if they were REQUEST or GET parameters.
	 * You can trigger Piwik from the command line by
	 * # /usr/bin/php5 /path/to/piwik/index.php -- "module=API&method=Actions.getActions&idSite=1&period=day&date=previous8&format=php"
	 */
||||||||	function init()
	{
		try {
			Zend_Registry::set('timer', new Piwik_Timer);

			$directoriesToCheck = array(
					'/tmp/',
					'/tmp/templates_c/',
					'/tmp/cache/',
					'/tmp/assets/'
			);

			Piwik::checkDirectoriesWritableOrDie($directoriesToCheck);
			self::assignCliParametersToRequest();

			Piwik_Translate::getInstance()->loadEnglishTranslation();

			$exceptionToThrow = false;

			try {
				Piwik::createConfigObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.NoConfigurationFile', $e);
				$exceptionToThrow = $e;
			}

			$pluginsManager = Piwik_PluginsManager::getInstance();
			$pluginsManager->loadPlugins( Zend_Registry::get('config')->Plugins->Plugins->toArray() );

			if($exceptionToThrow)
			{
				throw $exceptionToThrow;
			}


			try {
				Piwik::createDatabaseObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.badConfigurationFile', $e);
				throw $e;
			}

			Piwik::createLogObject();

			// creating the access object, so that core/Updates/* can enforce Super User and use some APIs
			Piwik::createAccessObject();
			Piwik_PostEvent('FrontController.dispatchCoreAndPluginUpdatesScreen');

			Piwik_PluginsManager::getInstance()->installLoadedPlugins();
			Piwik::install();

			Piwik_PostEvent('FrontController.initAuthenticationObject');
			try {
				$authAdapter = Zend_Registry::get('auth');
			} catch(Exception $e){
				throw new Exception("Authentication object cannot be found in the Registry. Maybe the Login plugin is not activated?
									<br />You can activate the plugin by adding:<br />
									<code>Plugins[] = Login</code><br />
									under the <code>[Plugins]</code> section in your config/config.inc.php");
			}

			Zend_Registry::get('access')->reloadAccess($authAdapter);

			Piwik_Translate::getInstance()->reloadLanguage();

			Piwik::raiseMemoryLimitIfNecessary();
			$pluginsManager->postLoadPlugins();


			Piwik_PostEvent('FrontController.checkForUpdates');
		} catch(Exception $e) {
			Piwik_ExitWithMessage($e->getMessage(), false, true);
		}
	}

	/**
	 * Assign CLI parameters as if they were REQUEST or GET parameters.
	 * You can trigger Piwik from the command line by
	 * # /usr/bin/php5 /path/to/piwik/index.php -- "module=API&method=Actions.getActions&idSite=1&period=day&date=previous8&format=php"
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_NEW)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_THROW
                            (AST_VAR)))))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_THROW
                                (AST_VAR)))))
                (NULL))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CALL
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CONST))))))
        (NULL)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_NEW)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_THROW
                            (AST_VAR)))))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_THROW
                                (AST_VAR)))))
                (NULL))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (NULL))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL))
            (AST_STATIC_CALL)
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CALL
                (
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (AST_CONST)
                            (AST_CONST))))))
        (NULL)))