    private function archiveNumericValuesGeneral($aNames, $operationToApply)
    {
        $this->loadSubPeriods();
        if (!is_array($aNames)) {
            $aNames = array($aNames);
        }

        // remove nb_uniq_visitors if present
        foreach ($aNames as $i => $name) {
            if ($name == 'nb_uniq_visitors') {
                $results['nb_uniq_visitors'] = 0;
                unset($aNames[$i]);

                break;
            }
        }

        // data will be array mapping each period w/ result row for period
        $data = $this->archive->getNumeric($aNames);
        foreach ($data as $dateRange => $row) {
            foreach ($row as $name => $value) {
                switch ($operationToApply) {
                    case 'sum':
                        if (!isset($results[$name])) {
                            $results[$name] = 0;
                        }

                        $results[$name] += $value;
                        break;
                    case 'max':
                        if (!isset($results[$name])) {
                            $results[$name] = 0;
                        }

                        $results[$name] = max($results[$name], $value);
                        break;
                    case 'min':
                        if (!isset($results[$name])) {
                            $results[$name] = $value;
                        }

                        $results[$name] = min($results[$name], $value);
                        break;
                    default:
                        throw new Exception("Operation not applicable.");
                        break;
                }
            }
        }

        // set default for metrics that weren't found
        foreach ($aNames as $name) {
            if (!isset($results[$name])) {
                $results[$name] = 0;
            }
        }

        if (!Piwik::isUniqueVisitorsEnabled($this->getPeriod()->getLabel())) {
            unset($results['nb_uniq_visitors']);
        }

        foreach($results as $name => $value) {
            if ($name == 'nb_uniq_visitors') {
                $value = (float) $this->computeNbUniqVisitors();
            }
            $this->insertRecord($name, $value);
        }

        // if asked for only one field to sum
        if (count($results) == 1) {
            return reset($results);
        }

        // returns the array of records once summed
        return $results;
    }

    /**
     * This method will compute the sum of DataTables over the period for the given fields $aRecordName.
     * The resulting DataTable will be then added to queue of data to be recorded in the database.
     * It will usually be called in a plugin that listens to the hook 'ArchiveProcessing_Period.compute'
     *
     * For example if $aRecordName = 'UserCountry_country' the method will select all UserCountry_country DataTable for the period
     * (eg. the 31 dataTable of the last month), sum them, then record it in the DB
     *
     *
     * This method works on recursive dataTable. For example for the 'Actions' it will select all subtables of all dataTable of all the sub periods
     *  and get the sum.
     *
     * It returns an array that gives information about the "final" DataTable. The array gives for every field name, the number of rows in the
     *  final DataTable (ie. the number of distinct LABEL over the period) (eg. the number of distinct keywords over the last month)
     *
     * @param string|array $aRecordName                           Field name(s) of DataTable to select so we can get the sum
     * @param array $invalidSummedColumnNameToRenamedName  (current_column_name => new_column_name) for columns that must change names when summed
     *                                                             (eg. unique visitors go from nb_uniq_visitors to sum_daily_nb_uniq_visitors)
     * @param int $maximumRowsInDataTableLevelZero       Max row count of parent datatable to archive
     * @param int $maximumRowsInSubDataTable             Max row count of children datatable(s) to archive
     * @param string $columnToSortByBeforeTruncation     Column name to sort by, before truncating rows (ie. if there are more rows than the specified max row count)
     * @param array $columnAggregationOperations         Operations for aggregating columns, @see Piwik_DataTable_Row::sumRow()
     *
     * @return array  array (
     *                    nameTable1 => number of rows,
     *                nameTable2 => number of rows,
     *                )
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_BREAK
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_SWITCH
                        (AST_VAR)
                        (AST_SWITCH_LIST
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (SCALAR)))))
                                    (AST_ASSIGN_OP
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (SCALAR)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR))))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_ISSET
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR)))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (AST_VAR))))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (NULL)
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (SCALAR))))
                                    (AST_BREAK
                                        (NULL))))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))))
            (
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CAST
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||