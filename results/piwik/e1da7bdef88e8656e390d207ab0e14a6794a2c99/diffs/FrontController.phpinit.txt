	function init()
	{
		Zend_Registry::set('timer', new Piwik_Timer);

		$directoriesToCheck = array(
				'/tmp',
				'/tmp/templates_c',
				'/tmp/cache',
		);

		self::checkDirectoriesWritableOrDie($directoriesToCheck);
		self::assignCliParametersToRequest();

		$exceptionToThrow = false;

		try {
			Piwik::createConfigObject();
		} catch(Exception $e) {
			Piwik_PostEvent('FrontController.NoConfigurationFile', $e);
			$exceptionToThrow = $e;
		}

		Piwik::loadPlugins();
		if($exceptionToThrow)
		{
			throw $exceptionToThrow;
		}
		Piwik::createDatabaseObject();
		Piwik::createLogObject();
		Piwik::installLoadedPlugins();
		Piwik::install();

		Piwik_PostEvent('FrontController.initAuthenticationObject');
		try {
			$authAdapter = Zend_Registry::get('auth');
		} catch(Exception $e){
			throw new Exception("Object 'auth' cannot be found in the Registry. Maybe the Login plugin is not enabled?
								<br>You can enable the plugin by adding:<br>
								<code>Plugins[] = Login</code><br>
								under the <code>[Plugins]</code> section in your config/config.inc.php");
		}

		$access = new Piwik_Access($authAdapter);
		Zend_Registry::set('access', $access);
		Zend_Registry::get('access')->loadAccess();

		Piwik::raiseMemoryLimitIfNecessary();
	}

	/**
	 * Assign CLI parameters as if they were REQUEST or GET parameters.
	 * You can trigger Piwik from the command line by
	 * # /usr/bin/php5 /path/to/piwik/index.php -- "module=API&method=Actions.getActions&idSite=1&period=day&date=previous8&format=php"
	 *
	 * @return void
	 */
||||||||	function init()
	{
		try {
			Zend_Registry::set('timer', new Piwik_Timer);

			$directoriesToCheck = array(
					'/tmp',
					'/tmp/templates_c',
					'/tmp/cache',
			);

			self::checkDirectoriesWritableOrDie($directoriesToCheck);
			self::assignCliParametersToRequest();

			$exceptionToThrow = false;

			try {
				Piwik::createConfigObject();
			} catch(Exception $e) {
				Piwik_PostEvent('FrontController.NoConfigurationFile', $e);
				$exceptionToThrow = $e;
			}

			Piwik::loadPlugins();
			if($exceptionToThrow)
			{
				throw $exceptionToThrow;
			}
			Piwik::createDatabaseObject();
			Piwik::createLogObject();
			Piwik::installLoadedPlugins();
			Piwik::install();

			Piwik_PostEvent('FrontController.initAuthenticationObject');
			try {
				$authAdapter = Zend_Registry::get('auth');
			} catch(Exception $e){
				throw new Exception("Object 'auth' cannot be found in the Registry. Maybe the Login plugin is not enabled?
									<br>You can enable the plugin by adding:<br>
									<code>Plugins[] = Login</code><br>
									under the <code>[Plugins]</code> section in your config/config.inc.php");
			}

			$access = new Piwik_Access($authAdapter);
			Zend_Registry::set('access', $access);
			Zend_Registry::get('access')->loadAccess();

			Piwik::raiseMemoryLimitIfNecessary();
		} catch(Exception $e) {
			Piwik_ExitWithMessage($e->getMessage());
		}
	}

	/**
	 * Assign CLI parameters as if they were REQUEST or GET parameters.
	 * You can trigger Piwik from the command line by
	 * # /usr/bin/php5 /path/to/piwik/index.php -- "module=API&method=Actions.getActions&idSite=1&period=day&date=previous8&format=php"
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_NEW)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_TRY
        (
            (AST_STATIC_CALL))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_VAR)))))
        (NULL))
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_THROW
                    (AST_VAR)))))
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_STATIC_CALL)
    (AST_CALL
        (
            (SCALAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR)))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (SCALAR)))))))
        (NULL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_NEW)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (AST_STATIC_CALL)
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONST))
            (AST_TRY
                (
                    (AST_STATIC_CALL))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))
                (NULL))
            (AST_STATIC_CALL)
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_THROW
                            (AST_VAR)))))
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_STATIC_CALL)
            (AST_CALL
                (
                    (SCALAR)))
            (AST_TRY
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (SCALAR)))))
                (AST_CATCH_LIST
                    (AST_CATCH
                        (AST_NAME_LIST)
                        (AST_VAR)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (SCALAR)))))))
                (NULL))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_VAR))))
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_STATIC_CALL))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_CALL
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL)))