	private function generateInfo()
	{
		$actionName = '';
		if(!empty($this->downloadUrl))
		{
			$this->actionType = self::TYPE_DOWNLOAD;
			$url = $this->downloadUrl;
			//$actionName = $this->nameDownloadOutlink;
			$actionName = $url;
		}
		elseif(!empty($this->outlinkUrl))
		{
			$this->actionType = self::TYPE_OUTLINK;
			$url = $this->outlinkUrl;
			//remove the last '/' character if it's present
			if(substr($url,-1) == '/')
			{
				$url = substr($url,0,-1);
			}
			$actionName = $this->nameDownloadOutlink;
			if( empty($actionName) )
			{
				$actionName = $url;
			}
		}
		else
		{
			$this->actionType = self::TYPE_ACTION;
			$url = $this->url;
			$actionName = $this->actionName;
		}

		// the ActionName wasn't specified
		if( empty($actionName) )
		{
			$actionName = trim(Piwik_Common::getPathAndQueryFromUrl($url));

			// in case the $actionName is ending with a slash,
			// which means that it is the index page of a category
			// we append the defaultActionName
			// toto/tata/ becomes toto/tata/index
			if(strlen($actionName) > 0
				&& $actionName[strlen($actionName)-1] == '/'
			)
			{
				$actionName.=$this->defaultActionName;
			}
		}

		/*
		 * Clean the action name
		 */

		// get the delimiter, by default '/'
		$actionCategoryDelimiter = Piwik_Tracker_Config::getInstance()->General['action_category_delimiter'];

		// case the name is an URL we dont clean the name the same way
		if(Piwik_Common::isLookLikeUrl($actionName))
		{
			$actionName = trim($actionName);
		}
		else
		{
			// create an array of the categories delimited by the delimiter
			$split = explode($actionCategoryDelimiter, $actionName);

			// trim every category
			$split = array_map('trim', $split);

			// remove empty categories
			$split = array_filter($split);

			// rebuild the name from the array of cleaned categories
			$actionName = implode($actionCategoryDelimiter, $split);
		}

		// remove the extra bad characters if any (shouldn't be any at this point...)
		$actionName = str_replace(array("\n", "\r"), '', $actionName);

		if(empty($actionName))
		{
			$actionName = $this->defaultActionName;
		}

		$this->finalActionName = $actionName;
	}

	/**
	 * Sets the attribute $idAction based on $finalActionName and $actionType.
	 *
	 * @see getActionId()
	 */
||||||||	private function generateInfo()
	{
		$actionName = '';

		$downloadVariableName = Piwik_Tracker_Config::getInstance()->Tracker['download_url_var_name'];
		$downloadUrl = Piwik_Common::getRequestVar( $downloadVariableName, '', 'string');

		if(!empty($downloadUrl))
		{
			$this->actionType = self::TYPE_DOWNLOAD;
			$url = $downloadUrl;
			$actionName = $url;
		}
		else
		{
			$outlinkVariableName = Piwik_Tracker_Config::getInstance()->Tracker['outlink_url_var_name'];
			$outlinkUrl = Piwik_Common::getRequestVar( $outlinkVariableName, '', 'string');
			if(!empty($outlinkUrl))
			{
				$this->actionType = self::TYPE_OUTLINK;
				$url = $outlinkUrl;
				//remove the last '/' character if it's present
				if(substr($url,-1) == '/')
				{
					$url = substr($url,0,-1);
				}
				$nameVariableName = Piwik_Tracker_Config::getInstance()->Tracker['download_outlink_name_var'];
				$actionName = Piwik_Common::getRequestVar( $nameVariableName, '', 'string');
				if( empty($actionName) )
				{
					$actionName = $url;
				}
			}
			else
			{
				$this->actionType = self::TYPE_ACTION;
				$url = Piwik_Common::getRequestVar( 'url', '', 'string');
				$actionName = Piwik_Common::getRequestVar( 'action_name', '', 'string');
			}
		}
		$this->url = $url;

		// the ActionName wasn't specified
		if( empty($actionName) )
		{
			$actionName = trim(Piwik_Common::getPathAndQueryFromUrl($url));

			// in case the $actionName is ending with a slash,
			// which means that it is the index page of a category
			// we append the defaultActionName
			// toto/tata/ becomes toto/tata/index
			if(strlen($actionName) > 0
				&& $actionName[strlen($actionName)-1] == '/'
			)
			{
				$actionName .= $this->getDefaultActionName();
			}
		}

		/*
		 * Clean the action name
		 */

		// get the delimiter, by default '/'
		$actionCategoryDelimiter = Piwik_Tracker_Config::getInstance()->General['action_category_delimiter'];

		// case the name is an URL we dont clean the name the same way
		if(Piwik_Common::isLookLikeUrl($actionName))
		{
			$actionName = trim($actionName);
		}
		else
		{
			// create an array of the categories delimited by the delimiter
			$split = explode($actionCategoryDelimiter, $actionName);

			// trim every category
			$split = array_map('trim', $split);

			// remove empty categories
			$split = array_filter($split);

			// rebuild the name from the array of cleaned categories
			$actionName = implode($actionCategoryDelimiter, $split);
		}

		// remove the extra bad characters if any (shouldn't be any at this point...)
		$actionName = str_replace(array("\n", "\r"), '', $actionName);

		if(empty($actionName))
		{
			$actionName = $this->getDefaultActionName();
		}

		$this->finalActionName = $actionName;
	}

	/**
	 * Sets the attribute $idAction based on $finalActionName and $actionType.
	 *
	 * @see getIdAction()
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (SCALAR))))
                            (SCALAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_UNARY_OP
                                            (SCALAR))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR)))
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_PROP
                            (AST_STATIC_CALL))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_VAR))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_UNARY_OP
                                                    (SCALAR))))
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR)
                                                    (AST_UNARY_OP
                                                        (SCALAR))))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_STATIC_CALL))
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_EMPTY
                                        (AST_VAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR)))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (SCALAR))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)))
                                        (SCALAR)))
                                (SCALAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_STATIC_CALL))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))