	static public function factory( $defaultType = null, $force = false)
	{
		if(is_null($defaultType))
		{
			$defaultType = 'table';
		}

		if($force === true)
		{
			$type = $defaultType;
		}
		else
		{
			$type = Piwik_Common::getRequestVar('viewDataTable', $defaultType, 'string');
		}

		switch($type)
		{
			case 'cloud':
				require_once "ViewDataTable/Cloud.php";
				return new Piwik_ViewDataTable_Cloud();
			break;

			case 'graphPie':
				require_once "ViewDataTable/GenerateGraphHTML/ChartPie.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartPie();
			break;

			case 'graphVerticalBar':
				require_once "ViewDataTable/GenerateGraphHTML/ChartVerticalBar.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartVerticalBar();
			break;

			case 'graphEvolution':
				require_once "ViewDataTable/GenerateGraphHTML/ChartEvolution.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartEvolution();
			break;

			case 'sparkline':
				require_once "ViewDataTable/Sparkline.php";
				return new Piwik_ViewDataTable_Sparkline();
			break;

			case 'generateDataChartVerticalBar':
				require_once "ViewDataTable/GenerateGraphData/ChartVerticalBar.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartVerticalBar();
			break;

			case 'generateDataChartPie':
				require_once "ViewDataTable/GenerateGraphData/ChartPie.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartPie();
			break;

			case 'generateDataChartEvolution':
				require_once "ViewDataTable/GenerateGraphData/ChartEvolution.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartEvolution();

			break;

			case 'tableAllColumns':
				require_once "ViewDataTable/HtmlTable/AllColumns.php";
				return new Piwik_ViewDataTable_HtmlTable_AllColumns();
			break;

			case 'table':
			default:
				require_once "ViewDataTable/HtmlTable.php";
				return new Piwik_ViewDataTable_HtmlTable();
			break;
		}
	}

	/**
	 * Inits the object given the $currentControllerName, $currentControllerAction of
	 * the calling controller action, eg. 'Referers' 'getLongListOfKeywords'.
	 * The initialization also requires the $moduleNameAndMethod of the API method
	 * to call in order to get the DataTable, eg. 'Referers.getKeywords'.
	 * The optional $actionToLoadTheSubTable defines the method name of the API to call when there is a idSubtable.
	 * This value would be used by the javascript code building the GET request to the API.
	 *
	 * Example:
	 * 	For the keywords listing, a click on the row loads the subTable of the Search Engines for this row.
	 *  In this case $actionToLoadTheSubTable = 'getSearchEnginesFromKeywordId'.
	 *  The GET request will hit 'Referers.getSearchEnginesFromKeywordId'.
	 *
	 * @param string $currentControllerName eg. 'Referers'
	 * @param string $currentControllerAction eg. 'getKeywords'
	 * @param string $moduleNameAndMethod eg. 'Referers.getKeywords'
	 * @param string $actionToLoadTheSubTable eg. 'getSearchEnginesFromKeywordId'
	 * @return void
	 */
||||||||	static public function factory( $defaultType = null, $force = false)
	{
		if(is_null($defaultType))
		{
			$defaultType = 'table';
		}

		if($force === true)
		{
			$type = $defaultType;
		}
		else
		{
			$type = Piwik_Common::getRequestVar('viewDataTable', $defaultType, 'string');
		}

		switch($type)
		{
			case 'cloud':
				require_once "ViewDataTable/Cloud.php";
				return new Piwik_ViewDataTable_Cloud();
			break;

			case 'graphPie':
				require_once "ViewDataTable/GenerateGraphHTML/ChartPie.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartPie();
			break;

			case 'graphVerticalBar':
				require_once "ViewDataTable/GenerateGraphHTML/ChartVerticalBar.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartVerticalBar();
			break;

			case 'graphEvolution':
				require_once "ViewDataTable/GenerateGraphHTML/ChartEvolution.php";
				return new Piwik_ViewDataTable_GenerateGraphHTML_ChartEvolution();
			break;

			case 'sparkline':
				require_once "ViewDataTable/Sparkline.php";
				return new Piwik_ViewDataTable_Sparkline();
			break;

			case 'generateDataChartVerticalBar':
				require_once "ViewDataTable/GenerateGraphData/ChartVerticalBar.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartVerticalBar();
			break;

			case 'generateDataChartPie':
				require_once "ViewDataTable/GenerateGraphData/ChartPie.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartPie();
			break;

			case 'generateDataChartEvolution':
				require_once "ViewDataTable/GenerateGraphData/ChartEvolution.php";
				return new Piwik_ViewDataTable_GenerateGraphData_ChartEvolution();

			break;

			case 'tableAllColumns':
				require_once "ViewDataTable/HtmlTable/AllColumns.php";
				return new Piwik_ViewDataTable_HtmlTable_AllColumns();
			break;

			case 'tableGoals':
				require_once "ViewDataTable/HtmlTable/Goals.php";
				return new Piwik_ViewDataTable_HtmlTable_Goals();
			break;

			case 'table':
			default:
				require_once "ViewDataTable/HtmlTable.php";
				return new Piwik_ViewDataTable_HtmlTable();
			break;
		}
	}

	/**
	 * Inits the object given the $currentControllerName, $currentControllerAction of
	 * the calling controller action, eg. 'Referers' 'getLongListOfKeywords'.
	 * The initialization also requires the $apiMethodToRequestDataTable of the API method
	 * to call in order to get the DataTable, eg. 'Referers.getKeywords'.
	 * The optional $controllerActionCalledWhenRequestSubTable defines the method name of the API to call when there is a idSubtable.
	 * This value would be used by the javascript code building the GET request to the API.
	 *
	 * Example:
	 * 	For the keywords listing, a click on the row loads the subTable of the Search Engines for this row.
	 *  In this case $controllerActionCalledWhenRequestSubTable = 'getSearchEnginesFromKeywordId'.
	 *  The GET request will hit 'Referers.getSearchEnginesFromKeywordId'.
	 *
	 * @param string $currentControllerName eg. 'Referers'
	 * @param string $currentControllerAction eg. 'getKeywords'
	 * @param string $apiMethodToRequestDataTable eg. 'Referers.getKeywords'
	 * @param string $controllerActionCalledWhenRequestSubTable eg. 'getSearchEnginesFromKeywordId'
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_INCLUDE_OR_EVAL
                        (SCALAR))
                    (AST_RETURN
                        (AST_NEW))
                    (AST_BREAK
                        (NULL)))))))