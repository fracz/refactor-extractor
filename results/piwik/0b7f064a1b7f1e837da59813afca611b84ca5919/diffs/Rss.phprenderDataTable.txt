||||||||	protected function renderDataTable($table)
	{

		if($table->getRowsCount() == 0)
		{
			return "<b><i>Empty table</i></b> <br>\n";
		}
		if($table instanceof Piwik_DataTable_Simple
			&& $table->getRowsCount() ==1)
		{
			$table->deleteColumn('label');
		}

		$i = 1;
		$tableStructure = array();

		/*
		 * table = array
		 * ROW1 = col1 | col2 | col3 | details | idSubTable
		 * ROW2 = col1 | col2 (no value but appears) | col3 | details | idSubTable
		 * 		subtable here
		 */
		$allColumns = array();
//		echo $table;
		foreach($table->getRows() as $row)
		{
			foreach($row->getColumns() as $column => $value)
			{
				$allColumns[$column] = true;
				$tableStructure[$i][$column] = $value;
			}
			$i++;
		}

		/*
		// to keep the same columns order as the columns labelled with strings
		ksort($allColumns);
		//replace the label first
		if(isset($allColumns['label']))
		{
			$allColumns = array_merge(array('label'=>true),$allColumns);
		}
		*/
		$html = "\n";
		$html .= "<table border=1 width=70%>";
		$html .= "\n<tr>";
		foreach($allColumns as $name => $toDisplay)
		{
			if($toDisplay !== false)
			{
				$html .= "\n\t<td><b>$name</b></td>";
			}
		}
		$html .= "\n</tr>";
		$colspan = count($allColumns);

		foreach($tableStructure as $row)
		{
			$html .= "\n\n<tr>";
			foreach($allColumns as $name => $toDisplay)
			{
				if($toDisplay !== false)
				{
					$value = "-";
					if(isset($row[$name]))
					{
						$value = $row[$name];
					}

					$html .= "\n\t<td>$value</td>";
				}
			}
			$html .= "</tr>";

		}
		$html .= "\n\n</table>";

		return $html;
	}
}


||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (AST_VAR))
                        (AST_VAR))))
            (AST_POST_INC
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (SCALAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR)))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))))))
                                (AST_ASSIGN_OP
                                    (AST_VAR)
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))