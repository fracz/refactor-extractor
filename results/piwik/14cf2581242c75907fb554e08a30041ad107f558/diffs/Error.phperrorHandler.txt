    public static function errorHandler($errno, $errstr, $errfile, $errline)
    {
        // if the error has been suppressed by the @ we don't handle the error
        if (error_reporting() == 0) {
            return;
        }

        $backtrace = '';
        if (empty(self::$debugBacktraceForTests)) {
            $bt = @debug_backtrace();
            if ($bt !== null && isset($bt[0])) {
                foreach ($bt as $i => $debug) {
                    $backtrace .= "#$i  "
                        . (isset($debug['class']) ? $debug['class'] : '')
                        . (isset($debug['type']) ? $debug['type'] : '')
                        . (isset($debug['function']) ? $debug['function'] : '')
                        . '(...) called at ['
                        . (isset($debug['file']) ? $debug['file'] : '') . ':'
                        . (isset($debug['line']) ? $debug['line'] : '') . ']' . "\n";
                }
            }
        } else {
            $backtrace = self::$debugBacktraceForTests;
        }

        $error = new Error($errno, $errstr, $errfile, $errline, $backtrace);
        Log::error($error);

        switch ($errno) {
            case E_ERROR:
            case E_PARSE:
            case E_CORE_ERROR:
            case E_CORE_WARNING:
            case E_COMPILE_ERROR:
            case E_COMPILE_WARNING:
            case E_USER_ERROR:
                exit;
                break;

            case E_WARNING:
            case E_NOTICE:
            case E_USER_WARNING:
            case E_USER_NOTICE:
            case E_STRICT:
            case E_RECOVERABLE_ERROR:
            case E_DEPRECATED:
            case E_USER_DEPRECATED:
            default:
                // do not exit
                break;
        }
    }
}||||||||    public static function errorHandler($errno, $errstr, $errfile, $errline)
    {
        // if the error has been suppressed by the @ we don't handle the error
        if (error_reporting() == 0) {
            return;
        }

        $error = new \ErrorException($errstr, 0, $errno, $errfile, $errline);
        Log::error($error);

        switch ($errno) {
            case E_ERROR:
            case E_PARSE:
            case E_CORE_ERROR:
            case E_CORE_WARNING:
            case E_COMPILE_ERROR:
            case E_COMPILE_WARNING:
            case E_USER_ERROR:
                exit;
                break;

            case E_WARNING:
            case E_NOTICE:
            case E_USER_WARNING:
            case E_USER_NOTICE:
            case E_STRICT:
            case E_RECOVERABLE_ERROR:
            case E_DEPRECATED:
            case E_USER_DEPRECATED:
            default:
                // do not exit
                break;
        }
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_UNARY_OP
                        (AST_CALL)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_ENCAPS_LIST
                                                                                (SCALAR)
                                                                                (AST_VAR)
                                                                                (SCALAR))
                                                                            (AST_CONDITIONAL
                                                                                (AST_ISSET
                                                                                    (AST_DIM
                                                                                        (AST_VAR)
                                                                                        (SCALAR)))
                                                                                (AST_DIM
                                                                                    (AST_VAR)
                                                                                    (SCALAR))
                                                                                (SCALAR)))
                                                                        (AST_CONDITIONAL
                                                                            (AST_ISSET
                                                                                (AST_DIM
                                                                                    (AST_VAR)
                                                                                    (SCALAR)))
                                                                            (AST_DIM
                                                                                (AST_VAR)
                                                                                (SCALAR))
                                                                            (SCALAR)))
                                                                    (AST_CONDITIONAL
                                                                        (AST_ISSET
                                                                            (AST_DIM
                                                                                (AST_VAR)
                                                                                (SCALAR)))
                                                                        (AST_DIM
                                                                            (AST_VAR)
                                                                            (SCALAR))
                                                                        (SCALAR)))
                                                                (SCALAR))
                                                            (AST_CONDITIONAL
                                                                (AST_ISSET
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR)))
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))
                                                                (SCALAR)))
                                                        (SCALAR))
                                                    (AST_CONDITIONAL
                                                        (AST_ISSET
                                                            (AST_DIM
                                                                (AST_VAR)
                                                                (SCALAR)))
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR)))
                                                (SCALAR))
                                            (SCALAR))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_PROP)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_EXIT
                        (NULL))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL)))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL)
                (SCALAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST)
                (
                    (AST_EXIT
                        (NULL))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (AST_CONST))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_BREAK
                        (NULL)))))))