	protected static function recordVisitorsSite1()
	{
		// -
		// Visitor site1
		$visitor = self::getTracker(self::$idSite1, self::$dateTime, $defaultInit = true);

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.2)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?q=Search 1  ');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// Normal page view
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.22)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm');
		self::checkResponse($visitor->doTrackPageView('Im just a page'));

		// IS_FOLLOWING_SEARCH: Not this time
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.23)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=PAGEVIEW, NOT SEARCH&mykwd=&IS_FOLLOWING_SEARCH ONCE');
		self::checkResponse($visitor->doTrackPageView('This is a pageview, not a Search - IS_FOLLOWING_SEARCH ONCE'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.25)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?standard=query&but=also#hash&q='.urlencode('Search 1'));
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.26)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm#q=Search 1&search_count=10');
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		// &search_count=0 so it's a "No Result" keyword, but it will not appear in the report, because it also has other seraches with results
		// and the archiving does a MAX()
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.27)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?hello=world#q=Search 1&search_count=0');
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		// Testing with non urlencoded values
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.3)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=param&mykwd=Search 2&test&cats= Search Category &search_count=INCORRECT!');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// Testing with urlencoded values
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.32)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=param&mykwd=Search 1&test&cats='.urlencode(' Search Category '). ' &search_count=0');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// IS_FOLLOWING_SEARCH: Yes
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.35)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=PAGEVIEW, NOT SEARCH&mykwd=&IS_FOLLOWING_SEARCH ONCE');
		self::checkResponse($visitor->doTrackPageView('This is a pageview, not a Search - IS_FOLLOWING_SEARCH ONCE'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.4)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?gkwd=SHOULD be a PageView, NOT a search');
		self::checkResponse($visitor->doTrackPageView('Pageview, not search'));

		$visitor->setUrl('http://example.org/hello?THIS IS A SITE SEARCH TRACKING API, NOT PAGEVIEW!');

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.41)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("Keyword - Tracking API"));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.42)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("Keyword - Tracking API", "Category", $count = 5));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.43)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("No Result Keyword!", "Bad No Result Category :(", $count = 0));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.5)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("Final Keyword Searched for now.", false, $count = 10));

		// -
		// Visitor BIS
		$visitorB = self::getTracker(self::$idSite1, self::$dateTime, $defaultInit = true);
		$visitorB->setIp('156.66.6.66');
		$visitorB->setResolution(1600, 1000);

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.26)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm#q=' . urlencode('No Result Keyword!') . '&search_count=0');
		self::checkResponse($visitorB->doTrackPageView('Site Search results - URL Fragment'));

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.27)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm?hello=world#q=Search 1&search_count=10');
		self::checkResponse($visitorB->doTrackPageView('Site Search results - URL Fragment'));

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.3)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm?random=param&mykwd=Search 2&test&cats= Search Category &search_count=10');
		self::checkResponse($visitorB->doTrackPageView('Site Search results'));
	}

||||||||	protected static function recordVisitorsSite1()
	{
		// -
		// Visitor site1
		$visitor = self::getTracker(self::$idSite1, self::$dateTime, $defaultInit = true);

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.2)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?q=Search 1  ');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// Normal page view
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.22)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm');
		self::checkResponse($visitor->doTrackPageView('Im just a page'));

		// IS_FOLLOWING_SEARCH: Not this time
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.23)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=PAGEVIEW, NOT SEARCH&mykwd=&IS_FOLLOWING_SEARCH ONCE');
		self::checkResponse($visitor->doTrackPageView('This is a pageview, not a Search - IS_FOLLOWING_SEARCH ONCE'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.25)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?standard=query&but=also#hash&q='.urlencode('Search 1'));
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.26)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm#q=Search 1&search_count=10');
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		// &search_count=0 so it's a "No Result" keyword, but it will not appear in the report, because it also has other seraches with results
		// and the archiving does a MAX()
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.27)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?hello=world#q=Search 1&search_count=0');
		self::checkResponse($visitor->doTrackPageView('Site Search results - URL Fragment'));

		// Testing with non urlencoded values
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.3)->getDatetime());
		// ALso testing that array[] notation is detected
		$visitor->setUrl('http://example.org/index.htm?random=param&mykwd[]=Search 2&test&cats= Search Category &search_count=INCORRECT!');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// Testing with urlencoded values
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.32)->getDatetime());
		// Also testing with random case 'myKwd'
		$visitor->setUrl('http://example.org/index.htm?random=param&myKwd=Search 1&test&cats='.urlencode(' Search Category '). ' &search_count=0');
		self::checkResponse($visitor->doTrackPageView('Site Search results'));

		// IS_FOLLOWING_SEARCH: Yes
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.35)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?random=PAGEVIEW, NOT SEARCH&mykwd=&IS_FOLLOWING_SEARCH ONCE');
		self::checkResponse($visitor->doTrackPageView('This is a pageview, not a Search - IS_FOLLOWING_SEARCH ONCE'));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(0.4)->getDatetime());
		$visitor->setUrl('http://example.org/index.htm?gkwd=SHOULD be a PageView, NOT a search');
		self::checkResponse($visitor->doTrackPageView('Pageview, not search'));

		$visitor->setUrl('http://example.org/hello?THIS IS A SITE SEARCH TRACKING API, NOT PAGEVIEW!');

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.41)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("Keyword - Tracking API"));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.42)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("Keyword - Tracking API", "Category", $count = 5));

		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.43)->getDatetime());
		self::checkResponse($visitor->doTrackSiteSearch("No Result Keyword!", "Bad No Result Category :(", $count = 0));

		// Keyword in iso-8859-15 charset with funny character
		$visitor->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(24.5)->getDatetime());
		$visitor->setPageCharset('iso-8859-15');
		$visitor->setUrl('http://example.org/index.htm?q=Final%20t%FCte%20Keyword%20Searched%20for%20now&search_count=10');
		self::checkResponse($visitor->doTrackPageView(false));

		// -
		// Visitor BIS
		$visitorB = self::getTracker(self::$idSite1, self::$dateTime, $defaultInit = true);
		$visitorB->setIp('156.66.6.66');
		$visitorB->setResolution(1600, 1000);

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.26)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm#q=' . urlencode('No Result Keyword!') . '&search_count=0');
		self::checkResponse($visitorB->doTrackPageView('Site Search results - URL Fragment'));

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.27)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm?hello=world#q=Search 1&search_count=10');
		self::checkResponse($visitorB->doTrackPageView('Site Search results - URL Fragment'));

		$visitorB->setForceVisitDateTime(Piwik_Date::factory(self::$dateTime)->addHour(2.3)->getDatetime());
		$visitorB->setUrl('http://example.org/index.htm?random=param&mykwd=Search 2&test&cats= Search Category &search_count=10');
		self::checkResponse($visitorB->doTrackPageView('Site Search results'));
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_STATIC_PROP)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (AST_CONST)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_STATIC_PROP)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_STATIC_PROP)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (SCALAR)
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_STATIC_PROP)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (AST_STATIC_PROP)))
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_STATIC_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))