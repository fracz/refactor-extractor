	public function privacySettings()
	{
		Piwik::checkUserHasSomeAdminAccess();
		$view = Piwik_View::factory('privacySettings');

		if (Piwik::isUserIsSuperUser())
		{
			$deleteLogs = array();

			$view->deleteLogs = $this->getDeleteLogsInfo();
			$view->anonymizeIP = $this->getAnonymizeIPInfo();
		}
		$view->language = Piwik_LanguagesManager::getLanguageCodeForCurrentUser();

		if (!Piwik_Config::getInstance()->isFileWritable())
		{
			$view->configFileNotWritable = true;
		}

		$this->setBasicVariablesView($view);
		$view->menu = Piwik_GetAdminMenu();

		echo $view->render();
	}

||||||||	public function privacySettings()
	{
		Piwik::checkUserHasSomeAdminAccess();
		$view = Piwik_View::factory('privacySettings');

		if (Piwik::isUserIsSuperUser())
		{
			$deleteLogs = array();

			$view->deleteData = $this->getDeleteDataInfo();
			$view->deleteDbStats = $this->getDeleteDBSizeEstimate();
			$view->anonymizeIP = $this->getAnonymizeIPInfo();
		}
		$view->language = Piwik_LanguagesManager::getLanguageCodeForCurrentUser();

		if (!Piwik_Config::getInstance()->isFileWritable())
		{
			$view->configFileNotWritable = true;
		}

		$this->setBasicVariablesView($view);
		$view->menu = Piwik_GetAdminMenu();

		echo $view->render();
	}

	/**
	 * Executes a data purge, deleting log data and report data using the current config
	 * options. Echo's the result of getDatabaseSize after purging.
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_STATIC_CALL)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_ECHO
        (AST_METHOD_CALL
            (AST_VAR))))