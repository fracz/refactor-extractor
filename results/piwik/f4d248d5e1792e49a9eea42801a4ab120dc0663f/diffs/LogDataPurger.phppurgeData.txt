||||||||	public function purgeData()
	{
		$maxIdVisit = $this->getDeleteIdVisitOffset();

		// break if no ID was found (nothing to delete for given period)
		if (empty($maxIdVisit))
		{
			return;
		}

		$logTables = self::getDeleteTableLogTables();

		// delete data from log tables
		$where = "WHERE idvisit <= ?";
		foreach ($logTables as $logTable)
		{
			Piwik_DeleteAllRows($logTable, $where, $this->maxRowsToDeletePerQuery, array($maxIdVisit));
		}

		// optimize table overhead after deletion
		Piwik_OptimizeTables($logTables);
	}

	/**
	 * Returns an array describing what data would be purged if purging were invoked.
	 *
	 * This function returns an array that maps table names with the number of rows
	 * that will be deleted.
	 *
	 * @return array
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_CALL
        (
            (AST_VAR))))