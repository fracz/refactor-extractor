||||||||	public function get()
	{
		// We trigger the Event only once!
		if(!$this->menu) {
			Piwik_PostEvent('Menu.add');
		}
		return parent::get();
	}

}

/**
 * Checks if an entry uses the URL $url.
 *
 * @param string $url
 * @return boolean
 */
function Piwik_IsMenuUrlFound($url)
{
	return Piwik_Menu_Main::getInstance()->isUrlFound($url);
}

/**
 * Returns the MainMenu as array.
 *
 * @return array
 */
function Piwik_GetMenu()
{
	return Piwik_Menu_Main::getInstance()->get();
}

/**
 * Adds a new entry to the MainMenu.
 *
 * @param string $mainMenuName
 * @param string $subMenuName
 * @param string $url
 * @param boolean $displayedForCurrentUser
 * @param int $order
 */
function Piwik_AddMenu( $mainMenuName, $subMenuName, $url, $displayedForCurrentUser = true, $order = 10)
{
	Piwik_Menu_Main::getInstance()->add($mainMenuName, $subMenuName, $url, $displayedForCurrentUser, $order);
}

/**
 * Renames a menu entry.
 *
 * @param string $mainMenuOriginal
 * @param string $subMenuOriginal
 * @param string $mainMenuRenamed
 * @param string $subMenuRenamed
 */
function Piwik_RenameMenuEntry($mainMenuOriginal, $subMenuOriginal,
								$mainMenuRenamed, $subMenuRenamed)
{
	Piwik_Menu_Main::getInstance()->rename($mainMenuOriginal, $subMenuOriginal, $mainMenuRenamed, $subMenuRenamed);
}

/**
 * Edits the URL of a menu entry.
 *
 * @param string $mainMenuToEdit
 * @param string $subMenuToEdit
 * @param string $newUrl
 */
function Piwik_EditMenuUrl( $mainMenuToEdit, $subMenuToEdit, $newUrl )
{
	Piwik_Menu_Main::getInstance()->editUrl($mainMenuToEdit, $subMenuToEdit, $newUrl);
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_STATIC_CALL)))