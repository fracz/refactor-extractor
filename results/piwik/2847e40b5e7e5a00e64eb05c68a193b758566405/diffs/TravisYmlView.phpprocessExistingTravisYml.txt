    public function processExistingTravisYml($existingYmlPath)
    {
        $existingYamlText = file_get_contents($existingYmlPath);
        foreach ($this->getRootSectionsFromYaml($existingYamlText) as $sectionName => $offset) {
            $section = $this->getRootSectionText($existingYamlText, $offset);
            if ($sectionName == 'env') {
                $this->existingEnv = $section;
            } else if ($sectionName == 'matrix') {
                $this->existingMatrix = $section;
            } else if (!in_array($sectionName, self::$travisYmlSectionNames)) {
                $this->extraSections .= "\n\n$sectionName:" . $section;
            }
        }
    }

    /**
     * Sets the name of plugin the generated .travis.yml file is for.
     *
     * @param string $pluginName ie, ExamplePlugin, UserSettings, etc.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_VAR))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_STATIC_PROP))))
                                            (
                                                (AST_ASSIGN_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_BINARY_OP
                                                        (AST_ENCAPS_LIST
                                                            (SCALAR)
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_VAR)))))))))))))))||||||||