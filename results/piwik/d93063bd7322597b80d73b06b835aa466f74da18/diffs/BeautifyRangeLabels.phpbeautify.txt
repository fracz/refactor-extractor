||||||||	public function beautify( $value )
	{
		// if there's more than one element, handle as a range w/ an upper bound
		if (strpos($value, "-") !== false)
		{
			// get the range
			sscanf($value, "%d - %d", $lowerBound, $upperBound);

			// if the lower bound is the same as the upper bound make sure the singular label
			// is used
			if ($lowerBound == $upperBound)
			{
				return $this->getSingleUnitLabel($value, $lowerBound);
			}
			else
			{
				return $this->getRangeLabel($value, $lowerBound, $upperBound);
			}
		}
		// if there's one element, handle as a range w/ no upper bound
		else
		{
			// get the lower bound
			sscanf($value, "%d", $lowerBound);

			$plusEncoded = urlencode('+');
			$plusLen = strlen($plusEncoded);
			$len = strlen($value);

			// if the label doesn't end with a '+', append it
			if ($len < $plusLen || substr($value, $len - $plusLen) != $plusEncoded)
			{
				$value .= $plusEncoded;
			}

			return $this->getUnboundedLabel($value, $lowerBound);
		}
	}

	/**
	 * Beautifies and returns a range label whose range spans over one unit, ie
	 * 1-1, 2-2 or 3-3.
	 *
	 * This function can be overridden in derived types to customize beautifcation
	 * behavior based on the range values.
	 *
	 * @param string $oldLabel The original label value.
	 * @param int $lowerBound The lower bound of the range.
	 * @return string The pretty range label.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_VAR)))
                        (
                            (AST_ASSIGN_OP
                                (AST_VAR)
                                (AST_VAR)))))
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR))))))))