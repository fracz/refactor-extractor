||||||||	public function getUnboundedLabel( $oldLabel, $lowerBound )
	{
		if ($lowerBound < 60)
		{
			return sprintf($this->labelSecondsPlural, $lowerBound);
		}
		else
		{
			return sprintf($this->labelPlural, "".ceil($lowerBound / 60).urlencode('+'));
		}
	}
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR)))))
                                (AST_CALL
                                    (
                                        (SCALAR)))))))))))