||||||||    public function getMigrations(Updater $updater)
    {
        $errorCodeDbNotExists = Updater\Migration\Db::ERROR_CODE_TABLE_NOT_EXISTS;

        return array(
            $this->migration->db->sql("SET sql_mode=''"),
            // this converts the 32-bit UNSIGNED INT column to a 16 byte VARBINARY;
            // _but_ MySQL does string conversion! (e.g., integer 1 is converted to 49 -- the ASCII code for "1")
            $this->migration->db->sql('ALTER TABLE ' . Common::prefixTable('log_visit') . ' MODIFY location_ip VARBINARY(16) NOT NULL'),
            $this->migration->db->sql('ALTER TABLE ' . Common::prefixTable('logger_api_call') . ' MODIFY caller_ip VARBINARY(16) NOT NULL', $errorCodeDbNotExists),

            // fortunately, 2^32 is 10 digits long and fits in the VARBINARY(16) without truncation;
            // to fix this, we cast to an integer, convert to hex, pad out leading zeros, and unhex it
            $this->migration->db->sql('UPDATE ' . Common::prefixTable('log_visit') . "
                SET location_ip = UNHEX(LPAD(HEX(CONVERT(location_ip, UNSIGNED)), 8, '0'))"),
            $this->migration->db->sql('UPDATE ' . Common::prefixTable('logger_api_call') . "
                SET caller_ip = UNHEX(LPAD(HEX(CONVERT(caller_ip, UNSIGNED)), 8, '0'))", $errorCodeDbNotExists),
        );
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLASS_CONST
            (SCALAR)))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_VAR)))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))
                            (SCALAR))
                        (AST_VAR)))
                (NULL)))))