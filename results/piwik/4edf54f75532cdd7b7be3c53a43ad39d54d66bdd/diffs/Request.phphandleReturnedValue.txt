	protected function handleReturnedValue( $returnedValue )
	{
		$toReturn = $returnedValue;

		// If the returned value is an object DataTable we
		// apply the set of generic filters if asked in the URL
		// and we render the DataTable according to the format specified in the URL
		if($returnedValue instanceof Piwik_DataTable
			|| $returnedValue instanceof Piwik_DataTable_Array)
		{
			if($returnedValue instanceof Piwik_DataTable)
			{
				$this->applyDataTableGenericFilters($returnedValue);
			}
			elseif($returnedValue instanceof Piwik_DataTable_Array)
			{
				$tables = $returnedValue->getArray();
				foreach($tables as $table)
				{
					$this->applyDataTableGenericFilters($table);
				}
			}

			// if the flag disable_queued_filters is defined we skip the filters that were queued
			// useful in some very rare cases but better to use this than a bad hack on the data returned...
			if(Piwik_Common::getRequestVar('disable_queued_filters', 'false', 'string', $this->requestToUse) == 'false')
			{
				$returnedValue->applyQueuedFilters();
			}

			$toReturn = $this->getRenderedDataTable($returnedValue);
		}

		// Case nothing returned (really nothing was 'return'ed),
		// => the operation was successful
		elseif(!isset($toReturn))
		{
			$toReturn = $this->getStandardSuccessOutput($this->outputFormatRequested);
		}

		// Case an array is returned from the API call, we convert it to the requested format
		// - if calling from inside the application (format = original)
		//    => the data stays unchanged (ie. a standard php array or whatever data structure)
		// - if any other format is requested, we have to convert this data structure (which we assume
		//   to be an array) to a DataTable in order to apply the requested DataTable_Renderer (for example XML)
		elseif(is_array($toReturn))
		{
			if($this->outputFormatRequested == 'original')
			{
				// we handle the serialization. Because some php array have a very special structure that
				// couldn't be converted with the automatic DataTable->loadFromSimpleArray
				// the user may want to request the original PHP data structure serialized by the API
				// in case he has to setup serialize=1 in the URL
				if($this->caseRendererPHPSerialize( $defaultSerialize = 0))
				{
					$toReturn = serialize($toReturn);
				}
			}
			else
			{
				$dataTable = new Piwik_DataTable();
				$dataTable->loadFromSimpleArray($toReturn);
				$toReturn = $this->getRenderedDataTable($dataTable);
			}
		}
		// bool // integer // float // object is serialized
		// NB: null value is already handled by the isset() test above
		else
		{
			// original data structure requested, we return without process
			if( $this->outputFormatRequested == 'original' )
			{
				return $toReturn;
			}

			if( $toReturn === true )
			{
				$toReturn = 'true';
			}
			elseif( $toReturn === false )
			{
				$toReturn = 'false';
			}
			elseif( is_object($toReturn)
					|| is_resource($toReturn))
			{
				return $this->getExceptionOutput('The API cannot handle this data structure.', $this->outputFormatRequested);
			}

			require_once "DataTable/Simple.php";
			$dataTable = new Piwik_DataTable_Simple();
			$dataTable->loadFromArray( array($toReturn) );
			$toReturn = $this->getRenderedDataTable($dataTable);
		}
		return $toReturn;
	}

	/**
	 * Returns a success $message in the requested $format
	 *
	 * @param string $format xml/json/php/csv
	 * @param string $message
	 * @return string
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_INSTANCEOF
                    (AST_VAR))
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_VAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (SCALAR))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))))
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_CALL
                                                (
                                                    (AST_VAR)))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (
                            (AST_RETURN
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (SCALAR))))
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR))))))))
                (AST_INCLUDE_OR_EVAL
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||