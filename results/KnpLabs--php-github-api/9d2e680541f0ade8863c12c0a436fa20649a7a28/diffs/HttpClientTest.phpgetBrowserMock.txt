    protected function getBrowserMock()
    {
        $browser = $this->getMock('Buzz\Browser');
        $browser
            ->expects($this->any())
            ->method('getClient')
            ->will($this->returnValue($this->getMock('Buzz\Client\AbstractClient')));

        return $browser;
    }
}

class TestHttpClient extends HttpClient
{
    public function getOption($name, $default = null)
    {
        return isset($this->options[$name]) ? $this->options[$name] : $default;
    }
}||||||||    protected function getBrowserMock()
    {
        return $this->getMock('Buzz\Client\ClientInterface');
    }
}

class TestHttpClient extends HttpClient
{
    public $fakeResponse;

    public function setFakeResponse($response)
    {
        $this->fakeResponse = $response;
    }

    public function getOption($name, $default = null)
    {
        return isset($this->options[$name]) ? $this->options[$name] : $default;
    }

    public function clearHeaders()
    {
    }

    public function request($path, array $parameters = array(), $httpMethod = 'GET', array $headers = array())
    {
        $request  = new Request($httpMethod);
        $response = $this->fakeResponse ? $this->fakeResponse : new Response();
        if (0 < count($this->listeners)) {
            foreach ($this->listeners as $listener) {
                $listener->postSend($request, $response);
            }
        }

        return $response;
    }
}||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))))