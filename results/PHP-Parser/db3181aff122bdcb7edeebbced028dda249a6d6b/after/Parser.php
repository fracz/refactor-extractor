<?php

/* Prototype file of an object oriented PHP parser.
 * Written by Moriyoshi Koizumi, based on the work by Masato Bito.
 * This file is PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 149;
    const YYMAXLEX     = 384;
    const YYTERMS      = 149;
    const YYNONTERMS   = 102;
    const YYLAST       = 913;
    const YY2TBLSTATE  = 331;
    const YYGLAST      = 397;
    const YYSTATES     = 789;
    const YYNLSTATES   = 548;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_BOOLEAN_OR = 277;
    const T_BOOLEAN_AND = 278;
    const T_IS_EQUAL = 279;
    const T_IS_NOT_EQUAL = 280;
    const T_IS_IDENTICAL = 281;
    const T_IS_NOT_IDENTICAL = 282;
    const T_IS_SMALLER_OR_EQUAL = 283;
    const T_IS_GREATER_OR_EQUAL = 284;
    const T_SL = 285;
    const T_SR = 286;
    const T_INSTANCEOF = 287;
    const T_INC = 288;
    const T_DEC = 289;
    const T_INT_CAST = 290;
    const T_DOUBLE_CAST = 291;
    const T_STRING_CAST = 292;
    const T_ARRAY_CAST = 293;
    const T_OBJECT_CAST = 294;
    const T_BOOL_CAST = 295;
    const T_UNSET_CAST = 296;
    const T_NEW = 297;
    const T_CLONE = 298;
    const T_EXIT = 299;
    const T_IF = 300;
    const T_ELSEIF = 301;
    const T_ELSE = 302;
    const T_ENDIF = 303;
    const T_LNUMBER = 304;
    const T_DNUMBER = 305;
    const T_STRING = 306;
    const T_STRING_VARNAME = 307;
    const T_VARIABLE = 308;
    const T_NUM_STRING = 309;
    const T_INLINE_HTML = 310;
    const T_CHARACTER = 311;
    const T_BAD_CHARACTER = 312;
    const T_ENCAPSED_AND_WHITESPACE = 313;
    const T_CONSTANT_ENCAPSED_STRING = 314;
    const T_ECHO = 315;
    const T_DO = 316;
    const T_WHILE = 317;
    const T_ENDWHILE = 318;
    const T_FOR = 319;
    const T_ENDFOR = 320;
    const T_FOREACH = 321;
    const T_ENDFOREACH = 322;
    const T_DECLARE = 323;
    const T_ENDDECLARE = 324;
    const T_AS = 325;
    const T_SWITCH = 326;
    const T_ENDSWITCH = 327;
    const T_CASE = 328;
    const T_DEFAULT = 329;
    const T_BREAK = 330;
    const T_CONTINUE = 331;
    const T_GOTO = 332;
    const T_FUNCTION = 333;
    const T_CONST = 334;
    const T_RETURN = 335;
    const T_TRY = 336;
    const T_CATCH = 337;
    const T_THROW = 338;
    const T_USE = 339;
    const T_INSTEADOF = 340;
    const T_GLOBAL = 341;
    const T_STATIC = 342;
    const T_ABSTRACT = 343;
    const T_FINAL = 344;
    const T_PRIVATE = 345;
    const T_PROTECTED = 346;
    const T_PUBLIC = 347;
    const T_VAR = 348;
    const T_UNSET = 349;
    const T_ISSET = 350;
    const T_EMPTY = 351;
    const T_HALT_COMPILER = 352;
    const T_CLASS = 353;
    const T_TRAIT = 354;
    const T_INTERFACE = 355;
    const T_EXTENDS = 356;
    const T_IMPLEMENTS = 357;
    const T_OBJECT_OPERATOR = 358;
    const T_DOUBLE_ARROW = 359;
    const T_LIST = 360;
    const T_ARRAY = 361;
    const T_CALLABLE = 362;
    const T_CLASS_C = 363;
    const T_TRAIT_C = 364;
    const T_METHOD_C = 365;
    const T_FUNC_C = 366;
    const T_LINE = 367;
    const T_FILE = 368;
    const T_COMMENT = 369;
    const T_DOC_COMMENT = 370;
    const T_OPEN_TAG = 371;
    const T_OPEN_TAG_WITH_ECHO = 372;
    const T_CLOSE_TAG = 373;
    const T_WHITESPACE = 374;
    const T_START_HEREDOC = 375;
    const T_END_HEREDOC = 376;
    const T_DOLLAR_OPEN_CURLY_BRACES = 377;
    const T_CURLY_OPEN = 378;
    const T_PAAMAYIM_NEKUDOTAYIM = 379;
    const T_NAMESPACE = 380;
    const T_NS_C = 381;
    const T_DIR = 382;
    const T_NS_SEPARATOR = 383;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,   47,  148,  149,  145,   46,   30,  149,
          143,  144,   44,   41,    7,   42,   43,   45,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,   25,  140,
           35,   12,   37,   24,   59,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,   60,  149,  146,   29,  149,  147,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  141,   28,  142,   49,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
          149,  149,  149,  149,  149,  149,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   26,   27,   31,
           32,   33,   34,   36,   38,   39,   40,   48,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   61,   62,   63,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,  149,  149,   75,   76,   77,   78,   79,   80,   81,
           82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
           92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
          122,  123,  124,  125,  126,  127,  128,  129,  130,  149,
          149,  149,  149,  149,  149,  131,  132,  133,  134,  135,
          136,  137,  138,  139
    );

    protected static $yyaction = array(
           61,   62,  365,   63,   64,-32766,-32766,-32766,  512,   65,
          708,  709,  710,  707,  706,  705,-32766,-32766,-32766,-32766,
        -32766,-32766,  133,-32766,-32766,-32766,-32766,-32766,-32767,-32767,
        -32767,-32767,-32766,  363,-32766,-32766,-32766,-32766,-32766,   66,
           67,  450,  663,  664,  255,   68,  552,   69,  235,  236,
           70,   71,   72,   73,   74,   75,   76,   77,   30,  249,
           78,  337,  366, -108,    0,  472,  832,  833,  367,  643,
          889,  438,  594,  278,  834,   53,   27,  368,  298,  369,
          687,  370,  920,  371,  922,  921,  372,-32766,-32766,-32766,
           42,   43,  373,  340,  201,   44,  374,  338,   79,  351,
          362,  295,  296,-32766,  917,-32766,-32766,  375,  376,  377,
          378,  379,  392,   41,  297,  339,  577,  617,  380,  381,
          382,  383,  844,  838,  839,  840,  841,  835,  836,  256,
        -32766,   87,   88,   89,  392,  842,  837,  339,  601,  523,
          129,   80,  130,  276,  698,  260,  264,   47,  210,   90,
           91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
          101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
          798,  250,  673,  108,  109,  110,  241,  250,   21,-32766,
          314,-32766,-32766,-32766,  644,  552,-32766,-32766,-32766,-32766,
           56,  354,-32766,-32766,-32766,   58,-32766,-32766,-32766,-32766,
        -32766,   55,-32766,-32766,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,  591,-32766,-32766,  522,-32766,  552,  889,-32766,  391,
        -32766,   54,   40,-32766,-32766,-32766,-32766,-32766,  230,-32766,
          237,-32766,  592,  682,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,   46,  239,-32766,-32766,  231,-32766,  561,  350,-32766,
          391,-32766,  242,  334,  883,-32766,-32766,-32766,  274,  910,
          910,  240,  893,  265,-32766,  447,   59,  700,  359,  209,
          552,  124,  136,   35,-32766,  334,  125,-32766,-32766,-32766,
          274,-32766,  123,-32766,  692,-32766,-32766,-32766,-32766,  700,
          276,   22,-32766,-32766,-32766,-32766,  127,-32766,-32766,  614,
        -32766,  552,  122,-32766,  391,-32766,  202,  355,-32766,-32766,
        -32766,-32766,-32766,  203,-32766,  229,-32766,  855,  135,-32766,
          844,  615,  464,-32766,-32766,-32766,  262,  284,-32766,-32766,
          204,-32766,  854,  131,-32766,  391,  130,  348,  334,  525,
        -32766,-32766,-32766,  274,-32766,-32766,-32766,  126,  529,-32766,
          207,  283,  700,  501,  502,  552,  105,  106,  107,-32766,
          492,   28,-32766,-32766,-32766,  605,-32766,  542,-32766,  546,
        -32766,-32766,-32766,-32766,  137,  302,  531,-32766,-32766,-32766,
        -32766,  543,-32766,-32766,  616,-32766,  552,  536,-32766,  391,
        -32766,  663,  664,-32766,-32766,-32766,-32766,-32766,  532,-32766,
          134,-32766,  686,  539,-32766,  558,  527,  612,-32766,-32766,
        -32766,  428,  243,-32766,-32766,  250,-32766,  697,  547,-32766,
          391,   60,  509,   57,  568,-32766,-32766,-32766,  915,  249,
          566,  405,  282,  419,-32766,  553,  847,  232,  496,  694,
          552,  322,  552,  488,-32766,  275,  521,-32766,-32766,-32766,
          508,-32766,  474,-32766,  467,-32766,-32766,-32766,-32766,  418,
          825,  417,-32766,-32766,-32766,-32766,  406,-32766,-32766,  404,
        -32766,  552,  490,-32766,  391,-32766,  403,  349,-32766,-32766,
        -32766,-32766,-32766,  347,-32766,  910,-32766,  507,  495,-32766,
         -151,  799,  800,-32766,-32766,-32766,  281,  338,-32766,-32766,
          505,-32766,  414, -148,-32766,  391,  486,  375,  376,  246,
        -32766,-32766,-32766,  456,  273,-32766,  577,  617,  380,  381,
          361,  552,  346,  619,  618,-32766,  425,  268,-32766,-32766,
        -32766,  541,-32766,   49,-32766,  277,-32766,  345, -261,-32766,
           36,  587,-32766,-32766,-32766,-32766,-32766,  272,-32766,-32766,
          261,-32766,  552,  263,-32766,  391,-32766, -327,  773,-32766,
        -32766,-32766,-32766,-32766,  208,-32766,  843,-32766,  690,    0,
        -32766,  517,  588,  473,-32766,-32766,-32766,  267,  338,-32766,
        -32766,  316,-32766, -270, -269,-32766,  391,  683,  375,  376,
          586,-32766,-32766,-32766,  410,  348,-32766,  577,  617,  380,
          381,  595,  552,   52,  534,  590,-32766,  604,  596,-32766,
        -32766,-32766,  582,-32766,  562,-32766,  646,-32766,  205,  206,
        -32766,  633,  585,-32766,-32766,-32766,-32766,  603,  638,-32766,
        -32766,  639,-32766,  535,  691,-32766,  391,  199,  693,  580,
          631,  629,  593,-32766,   51,  832,  833,   86,  526,-32766,
          128,  545,  538,  834,   48,  111,  112,  113,  114,  115,
          116,  117,  118,  119,  120,  121,  537,  533,  528,  338,
          332,  524,  589,-32766,   34,  294,  338,  332,  884,  375,
          376,  894,  294,  675,  823,  919,  375,  376,  557,  617,
          380,  381,  737,  739,  918,  557,  617,  380,  381,  636,
          453,  637,  838,  839,  840,  841,  835,  836,  323,  886,
          280,  874,  888,  807,  842,  837,  560,  280,  338,  332,
        -32766,  890,-32766,  559,  294,  481,  916,  792,  375,  376,
           33,   32,   31,  344,  138,  336,  139,  557,  617,  380,
          381,-32767,-32767,-32767,-32767,  103,  104,  105,  106,  107,
          338,  279,  254,  253,  338,  252,  251,  238,  234,  280,
          375,  376, -327,-32766,  375,  376,  457,  338,  132,  577,
          617,  380,  381,  577,  617,  380,  381,  375,  376,   85,
           84,   83,  200,  338,   82,    0,  577,  617,  380,  381,
           37,  227,  228,  375,  376,   38,  338,  795,  493,   81,
          338,  794,  577,  617,  380,  381,  375,  376,   50,   45,
          375,  376,  233,  338,  613,  577,  617,  380,  381,  577,
          617,  380,  381,  375,  376,  520,   39,  885,  899,  459,
          578,  510,  577,  617,  380,  381,  826,  552,  338,  889,
          777,  770,  338,  333,  519,  822,  483,  608,  375,  376,
          914,  803,  375,  376,-32766,-32766,-32766,  577,  617,  380,
          381,  577,  617,  380,  381,  850,  871,  802,  831,  872,
        -32766,  808,-32766,-32766,-32766,-32766,  805,  804,  801,  790,
          774,  511,  485,  431,  360,  356,  303,    0,   25,   24,
           23,    0,   20,   26,   29,  299,    0,    0,  851,  868,
          491,  869,  873,  392,  887,  806,  339,  791,    0,    0,
          341,    0,  276
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,   70,   11,
          104,  105,  106,  107,  108,  109,    8,    9,   10,    8,
            9,   24,   60,   26,   27,   28,   29,   30,   31,   32,
           33,   34,   24,    7,   26,   27,   28,   29,   30,   41,
           42,    7,  123,  124,    7,   47,   70,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,  144,    0,   75,   68,   69,   70,   25,
           72,   70,   74,    7,   76,   77,   78,   79,    7,   81,
          142,   83,   70,   85,   72,   73,   88,    8,    9,   10,
           92,   93,   94,   95,    7,   97,   98,   95,  100,    7,
            7,  103,  104,   24,  142,   26,   27,  105,  106,  111,
          112,  113,  136,    7,    7,  139,  114,  115,  116,  117,
          122,  123,  132,  125,  126,  127,  128,  129,  130,  131,
            8,    8,    9,   10,  136,  137,  138,  139,  140,  141,
           25,  143,  141,  145,  142,  147,  148,   24,   12,   26,
           27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
           37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
          144,   48,   72,   44,   45,   46,   30,   48,  144,   64,
           72,    8,    9,   10,  140,   70,    8,    9,   10,   74,
           60,   25,   77,   78,   79,   60,   81,   24,   83,   26,
           85,   60,   24,   88,   26,   27,   28,   92,   93,   94,
           64,  140,   97,   98,   70,  100,   70,   72,  103,  104,
           74,   60,    7,   77,   78,   79,  111,   81,    7,   83,
           30,   85,  140,  140,   88,    8,    9,   10,   92,   93,
           94,  133,  134,   97,   98,  145,  100,  140,    7,  103,
          104,   24,    7,   96,   72,  140,  141,  111,  101,   75,
           75,   30,   70,   75,   64,   70,   60,  110,  121,   12,
           70,  141,   12,  143,   74,   96,  141,   77,   78,   79,
          101,   81,  141,   83,  140,   85,  140,  141,   88,  110,
          145,  144,   92,   93,   94,   64,    7,   97,   98,  142,
          100,   70,  141,  103,  104,   74,   12,  141,   77,   78,
           79,  111,   81,   12,   83,   30,   85,  132,  141,   88,
          132,  142,  145,   92,   93,   94,  120,  145,   97,   98,
           12,  100,  148,  141,  103,  104,  141,  139,   96,  141,
          140,  141,  111,  101,    8,    9,   10,  141,   25,   64,
           12,   60,  110,   65,   66,   70,   41,   42,   43,   74,
           65,   66,   77,   78,   79,   25,   81,   25,   83,   25,
           85,  140,  141,   88,   90,   91,   25,   92,   93,   94,
           64,   25,   97,   98,  142,  100,   70,   25,  103,  104,
           74,  123,  124,   77,   78,   79,  111,   81,   25,   83,
           25,   85,  140,  141,   88,  140,  141,   30,   92,   93,
           94,  120,   30,   97,   98,   48,  100,  140,  141,  103,
          104,   60,   67,   60,   70,  140,  141,  111,   70,   61,
           70,   72,   75,   87,   64,   70,   70,   87,   89,   70,
           70,   71,   70,   72,   74,  102,   70,   77,   78,   79,
           70,   81,   99,   83,   70,   85,  140,  141,   88,   70,
          144,   70,   92,   93,   94,   64,   70,   97,   98,   70,
          100,   70,   72,  103,  104,   74,   70,   70,   77,   78,
           79,  111,   81,   70,   83,   75,   85,   72,   86,   88,
           72,   72,   72,   92,   93,   94,   75,   95,   97,   98,
           89,  100,   79,   87,  103,  104,  101,  105,  106,   87,
          140,  141,  111,   87,  119,   64,  114,  115,  116,  117,
           95,   70,   95,  115,  115,   74,  122,  135,   77,   78,
           79,  141,   81,  121,   83,  118,   85,  139,  135,   88,
          143,  140,  141,   92,   93,   94,   64,  118,   97,   98,
          120,  100,   70,  120,  103,  104,   74,  120,  144,   77,
           78,   79,  111,   81,  121,   83,  132,   85,  140,   -1,
           88,  135,  140,  135,   92,   93,   94,  135,   95,   97,
           98,  135,  100,  135,  135,  103,  104,  140,  105,  106,
          140,  140,  141,  111,  139,  139,   64,  114,  115,  116,
          117,  140,   70,  140,  140,  140,   74,  140,  140,   77,
           78,   79,  140,   81,  140,   83,  140,   85,   41,   42,
           88,  140,  140,  141,   92,   93,   94,  140,  140,   97,
           98,  140,  100,  140,  140,  103,  104,   60,  140,  140,
          140,  140,  140,  111,  140,   68,   69,  141,  141,   72,
          141,  141,  141,   76,   12,   13,   14,   15,   16,   17,
           18,   19,   20,   21,   22,   23,  141,  141,  141,   95,
           96,  141,  140,  141,  143,  101,   95,   96,  142,  105,
          106,  142,  101,  142,  142,  142,  105,  106,  114,  115,
          116,  117,   50,   51,  142,  114,  115,  116,  117,  142,
          123,  142,  125,  126,  127,  128,  129,  130,  131,  142,
          136,  142,  142,  142,  137,  138,  142,  136,   95,   96,
          143,  142,  145,  142,  101,  142,  142,  147,  105,  106,
          143,  143,  143,  143,  143,  143,  143,  114,  115,  116,
          117,   35,   36,   37,   38,   39,   40,   41,   42,   43,
           95,  143,  143,  143,   95,  143,  143,  143,  143,  136,
          105,  106,  120,  143,  105,  106,  144,   95,  143,  114,
          115,  116,  117,  114,  115,  116,  117,  105,  106,  143,
          143,  143,  143,   95,  143,   -1,  114,  115,  116,  117,
          143,  143,  143,  105,  106,  143,   95,  142,   80,  143,
           95,  142,  114,  115,  116,  117,  105,  106,  143,  143,
          105,  106,  143,   95,  142,  114,  115,  116,  117,  114,
          115,  116,  117,  105,  106,   82,  143,  146,  144,  144,
          142,   84,  114,  115,  116,  117,  144,   70,   95,   72,
          144,  144,   95,  142,  144,  146,  144,  142,  105,  106,
          146,  144,  105,  106,    8,    9,   10,  114,  115,  116,
          117,  114,  115,  116,  117,  144,  144,  144,  144,  144,
           24,  104,   26,   27,   28,   29,  144,  144,  144,  144,
          144,  144,  144,  144,  144,  144,  144,   -1,  144,  144,
          144,   -1,  144,  144,  144,  144,   -1,   -1,  146,  146,
          146,  146,  146,  136,  146,  146,  139,  146,   -1,   -1,
          143,   -1,  145
    );

    protected static $yybase = array(
            0,  574,  581,  623,  688,  701,  718,  402,  747,  672,
          659,  655,  743,  705,    2,  483,  483,  483,  483,  483,
          351,  373,  362,  362,  356,  362,  323,   -2,   -2,   -2,
          200,  200,  231,  231,  231,  231,  231,  231,  231,  231,
          200,  231,  482,  401,  532,  316,  370,  115,  285,  146,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
          451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
           44,  461,  412,  450,  432,  465,  487,  697,  696,  692,
          749,  748,  350,  751,  584,  579,  375,  571,  570,  569,
          567,  542,  541,  583,  539,  702,  754,  536,  750,  700,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  122,
           11,  336,  336,  336,  336,  336,  336,  336,  336,  336,
          336,  336,  336,  336,  336,  336,  227,  227,  173,  577,
          577,  577,  577,  577,  577,  577,  577,  577,  577,  577,
          577,   79,  178,  846,    8,   -3,   -3,   -3,   -3,  642,
          706,  706,  706,  706,  242,  179,  157,  404,  404,  368,
          404,  509,  382,  767,  767,  767,  767,  767,  767,  767,
          767,  767,  767,  767,  767,  418,  376,  315,  315,  620,
          620,  -81,  -81,  -81,  -81,  268,  188,  185,  184,  -62,
          421,  192,  192,  192,  357,  434,  410,    1,  195,  129,
          129,  129,  -24,  -24,  -24,  -24,  506,  -24,  -24,  -24,
          198,  108,  108,   12,  177,  262,  448,  130,  206,  265,
          349,  557,  411,  559,  398,  100,  427,  398,  100,  166,
          295,  288,   44,  277,  403,  161,  135,  502,  389,  474,
          346,  107,   71,   92,  291,  141,  182,   34,  426,  622,
          414,  685,  -38,  -10,  141,  147,  684,  447,   93,   26,
          428,  144,  399,  353,  399,  400,  377,  666,  377,  372,
          377,  368,  215,  397,  391,  372,  377,  429,  372,  417,
          399,  359,  395,  377,  464,  493,  405,   87,  353,  377,
          405,  377,  400,  377,   64,  656,  641,  340,  638,  665,
          637,  590,  636,  406,  530,  409,  408,  669,  615,  614,
          396,  413,  648,  589,  455,  407,  442,  587,  531,  363,
          430,  427,  456,  367,  437,  588,  392,  437,  761,  446,
          449,  433,  423,  467,  294,  301,  507,  455,  739,  580,
          365,  613,  739,  437,  625,  504,  289,  318,  612,  360,
          437,  610,  437,  736,  527,  649,  437,  735,  358,  543,
          455,  361,  367,  367,  367,  734,  106,  759,  647,  733,
          732,  758,  756,  725,  755,  652,  681,  647,  724,  699,
          384,  741,   37,  639,  403,  438,  354,  468,   66,  260,
          704,  437,  437,  526,  506,  437,  463,  338,  738,  371,
          443,  752,  434,  366,  608,  740,  437,  425,  753,   66,
          723,  683,  722,  472,  746,  525,  592,  511,  257,  721,
          136,  552,  591,  476,  745,  481,  488,  415,  390,  380,
          707,  593,  342,  355,  744,  491,  420,  737,  609,  499,
          500,  510,  416,  436,  343,  422,  419,  369,  742,  344,
          501,  498,  494,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,    0,    0,    0,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,    0,    0,
            0,    0,    0,    0,    0,    0,    0,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
          123,  123,  123,  123,  123,  123,  123,  767,  767,  767,
          767,  767,  767,  767,  767,  767,  767,  767,  767,  123,
          123,  123,  123,  123,  123,  123,  123,    0,  129,  129,
          129,  129,  -94,  -94,  -94,  767,  767,  767,  767,  767,
          767,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  -94,  -94,  129,  129,  767,  767,  -24,
          -24,  -24,  -24,  -24,  108,  108,  108,  -24,  108,  145,
          145,  145,  108,  108,  108,  182,  182,    0,    0,    0,
            0,    0,    0,    0,  145,    0,    0,    0,  372,    0,
            0,    0,  145,   66,  141,    0,    0,  455,  284,  284,
          284,  284,  372,    0,  359,  372,    0,    0,    0,    0,
            0,    0,  588,    0,    0,  289,  613,  241,  455,    0,
            0,    0,    0,    0,    0,    0,  455,  245,  245,  221,
            0,    0,    0,    0,  221,  241,    0,    0,   66
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  101,   94,  106,   93,  102,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          353,  353,  118,  118,  118,  118,  118,  118,  118,  118,
          311,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          169,  169,  169,32767,  343,  343,  343,  343,  343,  343,
          343,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  358,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          227,  228,  230,  231,  168,  121,  344,  357,  167,  195,
          197,  245,  196,  173,  178,  179,  180,  181,  182,  183,
          184,  185,  186,  187,  188,  172,  224,  223,  193,  308,
          308,  311,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  194,  198,  200,  199,  215,  216,  213,  214,  171,
          217,  218,  219,  220,  153,  153,  153,  352,  352,32767,
          352,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  154,32767,  207,  208,  271,
          271,  113,  113,  113,  113,  113,32767,32767,32767,32767,
          279,32767,32767,32767,32767,32767,  281,32767,32767,  202,
          203,  201,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  280,32767,32767,32767,32767,  329,  316,  267,32767,
        32767,32767,32767,32767,32767,32767,  260,32767,32767,32767,
          103,  105,32767,32767,  297,  318,  334,32767,32767,32767,
           17,32767,32767,32767,  365,  329,32767,32767,   19,32767,
        32767,32767,32767,32767,  333,  327,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,   63,  276,   63,32767,
           63,32767,  310,  282,32767,32767,   63,   74,32767,   72,
        32767,32767,   76,   63,   92,   92,  249,  310,   54,   63,
          249,   63,32767,   63,32767,32767,32767,    4,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  262,32767,32767,  332,  331,  319,
        32767,  260,32767,  211,  190,  261,32767,  192,32767,32767,
          265,  268,32767,32767,32767,  130,32767,  263,  176,32767,
        32767,32767,32767,  360,32767,32767,  170,32767,32767,32767,
          126,32767,   61,  327,32767,32767,  350,32767,32767,  327,
          264,  328,  204,  205,  206,32767,  117,32767,  305,32767,
        32767,32767,32767,32767,32767,  322,32767,32767,32767,32767,
        32767,32767,  107,32767,  297,32767,32767,32767,   75,32767,
        32767,  174,  122,32767,32767,  359,32767,32767,32767,32767,
          315,32767,32767,32767,32767,32767,   62,32767,32767,   77,
        32767,32767,32767,32767,  327,32767,32767,32767,  111,32767,
          165,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  327,32767,32767,32767,32767,32767,
        32767,32767,    4,32767,  147,32767,32767,32767,32767,32767,
        32767,32767,32767,   25,   25,    3,  133,    3,  133,   25,
           99,   25,   25,  133,   92,   92,   25,   25,   25,  140,
           25,   25,   25,   25,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          142,  142,  175,  175,  175,  175,  175,  175,  175,  175,
          142,  175,  143,  144,  145,  149,  154,  156,  183,  177,
          174,  174,  174,  174,  176,  176,  176,  176,  176,  176,
          176,  170,  171,  172,  173,  181,  757,  758,  393,  760,
          780,  781,  782,  783,  784,  785,  786,  788,  725,  146,
          147,  148,  150,  151,  152,  153,  155,  179,  180,  182,
          198,  211,  212,  213,  214,  215,  216,  217,  218,  220,
          221,  222,  223,  247,  248,  269,  270,  271,  432,  433,
          434,  184,  185,  186,  187,  188,  189,  190,  191,  192,
          193,  194,  157,  158,  159,  160,  161,  178,  162,  196,
          163,  164,  165,  166,  197,  167,  195,  140,  168,  169,
          454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
          454,  454,  455,  455,  455,  455,  455,  455,  455,  455,
          455,  455,  455,  455,  598,  408,  599,  427,  395,  395,
          395,  395,  395,  395,  395,  395,  395,  395,  395,  395,
          395,  395,  395,  395,  395,  395,  291,  556,  556,  556,
          809,  809,  662,  662,  662,  662,  662,  555,  555,  555,
          513,  903,  400,  400,  571,  679,  634,  848,  849,  635,
          862,  660,  714,  626,  626,  626,  626,  668,  621,  627,
          497,  396,  396,  396,  396,  396,  396,  396,  396,  396,
          396,  396,  396,  396,  396,  396,  396,  396,  396,  468,
          475,  518,  307,  399,  399,  426,  426,  461,  426,  420,
          325,  422,  422,  394,  397,  413,  423,  429,  462,  465,
          476,  484,  504,    5,  479,  285,  330,    1,   15,    2,
            6,    7,  554,  554,  554,    8,    9,   10,  489,   16,
           11,   17,   12,   18,   13,   19,   14,  466,  494,  704,
          331,  645,  632,  630,  630,  628,  630,  530,  402,  652,
          648,  846,  846,  846,  846,  846,  846,  846,  846,  846,
          846,  846,  846,  308,  723,  411,  289,  880,  880,  401,
          401,  421,  441,  442,  444,  446,  449,  478,  469,  860,
          310,  266,  225,  310,  244,  258,  499,  226,  516,  439,
          440,  443,  448,  480,  482,  500,  879,  879,  315,  315,
          315,  821,  820,  909,  909,  326,  896,  320,  895,  895,
          895,  912,  909,  315,  769,  292,  293,  658,  540,  563,
          569,  324,  671,  878,  327,  407,  676,  912,  912,  857,
            0,  318,  607,  498,  430,    0,    0,    0,  712,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,  412
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   81,   81,   81,   81,   81,   81,   81,   81,
           81,   81,   81,   81,   29,   67,   29,   71,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   43,    7,    7,    7,
           35,   35,   35,   35,   35,   35,   35,    6,    6,    6,
           35,   99,   81,   81,   12,   12,   12,   12,   12,   12,
           12,   12,   12,   35,   35,   35,   35,   50,   35,   35,
           35,   77,   77,   77,   77,   77,   77,   77,   77,   77,
           77,   77,   77,   77,   77,   77,   77,   77,   77,   36,
           36,   36,   26,   77,   77,   28,   28,   28,   28,   28,
           28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
           28,   28,   28,   13,   42,   42,   42,    2,   13,    2,
           13,   13,    5,    5,    5,   13,   13,   13,   89,   13,
           13,   13,   13,   13,   13,   13,   13,   21,   21,   63,
           63,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,   88,   88,   88,   88,   88,   88,   88,   88,   88,
           88,   88,   88,   30,   67,   30,    4,   78,   78,   84,
           84,   30,   80,   80,   80,   80,   80,   80,   30,   92,
            4,   87,   40,    4,   30,   87,   30,   40,   30,   48,
           48,   48,   48,   48,   48,   48,   79,   79,   85,   85,
           85,   86,   86,  100,  100,   66,   97,   27,   79,   79,
           79,  100,  100,   85,   68,   43,   43,   46,   44,   10,
           11,   85,   51,   79,    9,    4,   52,  100,  100,   91,
           -1,    4,   34,   73,    4,   -1,   -1,   -1,   65,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   67
    );

    protected static $yygbase = array(
            0,    0, -288,    0,    6,  241,  166,  156,    0,   10,
           42,  -10,  -28, -291,    0,  -30,    0,    0,    0,    0,
            0,  206,    0,    0,    0,    0,  159,   93,  -12,  111,
          -55,    0,    0,    0,   -6,  -89,  -43,    0,    0,    0,
         -226,    0,  -39, -199,   36,    0,   82,    0,  276,    0,
          146,   44,   -5,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,   14,    0,   -4,   97,   55,   84,    0,
            0,  106,    0,   -7,    0,    0,    0,  -36,   38,   67,
          237,  -77,    0,    0,   40,   57,   59,   41,   72,   48,
            0,   -8,   98,    0,    0,    0,    0,   96,    0,  131,
           66,    0
    );

    protected static $yygdefault = array(
        -32768,  364,    3,  550,  384,  574,  575,  576,  311,  309,
          564,  570,  470,    4,  572,  141,  300,  579,  301,  503,
          581,  415,  583,  584,  312,  313,  416,  319,  219,  597,
          506,  317,  600,  358,  606,  304,  451,  385,  352,  463,
          224,  424,  458,  290,  544,  452,  657,  353,  435,  436,
          667,  672,  677,  680,  335,  328,  477,  684,  685,  259,
          689,  514,  515,  703,  245,  711,  321,  724,  343,  787,
          789,  398,  409,  487,  796,  329,  305,  386,  387,  388,
          437,  817,  814,  288,  865,  286,  445,  257,  852,  471,
          357,  902,  861,  287,  389,  390,  306,  897,  342,  904,
          911,  460
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,   33,   33,
           34,   27,   27,   30,   30,    6,    7,    7,    7,   37,
           37,   37,   38,   38,   41,   41,   39,   39,   42,   42,
           22,   22,   29,   29,   32,   32,   31,   31,   23,   23,
           23,   23,   43,   43,   43,   44,   44,   20,   20,   16,
           16,   18,   18,   17,   17,   19,   19,   36,   36,   45,
           45,   46,   46,   47,   47,   47,   47,   48,   48,   49,
           49,   50,   50,   24,   24,   51,   51,   51,   25,   25,
           52,   52,   40,   40,   53,   53,   53,   53,   58,   58,
           59,   59,   60,   60,   60,   60,   61,   62,   62,   57,
           57,   54,   54,   56,   56,   64,   64,   63,   63,   63,
           63,   63,   63,   55,   55,   65,   65,   26,   26,   21,
           21,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   67,   73,
           73,   75,   75,   76,   76,   76,   76,   76,   76,   76,
           81,   81,   35,   35,   35,   68,   68,   82,   82,   77,
           77,   83,   83,   83,   83,   83,   69,   69,   69,   72,
           72,   72,   74,   74,   88,   88,   88,   88,   88,   88,
           88,   88,   88,   88,   88,   88,   88,   88,   12,   12,
           12,   12,   12,   12,   70,   70,   70,   70,   89,   89,
           91,   91,   90,   90,   92,   92,   28,   28,   28,   28,
           94,   94,   93,   93,   93,   93,   93,   95,   95,   79,
           79,   84,   84,   78,   78,   96,   96,   96,   96,   85,
           85,   85,   85,   80,   80,   86,   86,   86,   66,   66,
           97,   97,   97,   71,   71,   98,   98,   99,   99,   99,
           99,   87,   87,   87,   87,  100,  100,  100,  100,  100,
          100,  100,  101,  101,  101
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,   10,    5,    7,    9,    5,    2,    3,    2,
            3,    2,    3,    3,    3,    3,    1,    2,    5,    7,
            8,   10,    5,    1,    5,    3,    3,    2,    1,    2,
            8,    1,    3,    0,    1,    9,    7,    6,    5,    1,
            2,    2,    0,    2,    0,    2,    0,    2,    1,    3,
            1,    4,    1,    4,    1,    4,    3,    5,    3,    4,
            4,    5,    0,    5,    4,    1,    1,    1,    4,    0,
            6,    0,    7,    0,    2,    0,    3,    1,    0,    1,
            3,    3,    5,    0,    1,    1,    1,    1,    0,    1,
            3,    1,    2,    3,    1,    1,    2,    4,    3,    1,
            1,    3,    2,    0,    3,    3,    8,    3,    1,    3,
            0,    2,    4,    5,    4,    4,    3,    1,    1,    1,
            3,    1,    1,    0,    1,    1,    2,    1,    1,    1,
            1,    1,    1,    1,    3,    1,    3,    3,    1,    0,
            1,    1,    6,    3,    4,    4,    1,    2,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    5,    4,    4,    4,    2,    2,    4,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            2,    1,    4,    3,    3,    2,    9,   10,    3,    0,
            4,    4,    2,    4,    6,    8,    4,    4,    4,    4,
            1,    1,    1,    2,    3,    1,    1,    1,    1,    1,
            1,    0,    3,    3,    4,    4,    0,    2,    3,    0,
            1,    1,    0,    3,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    3,    2,    1,    1,    3,
            2,    2,    4,    3,    1,    3,    3,    3,    0,    2,
            0,    1,    3,    1,    3,    1,    1,    1,    1,    1,
            6,    4,    3,    6,    4,    4,    4,    1,    3,    1,
            2,    1,    1,    4,    1,    3,    6,    4,    4,    4,
            4,    1,    4,    0,    1,    1,    3,    1,    3,    1,
            1,    4,    0,    0,    2,    3,    1,    3,    1,    4,
            2,    2,    2,    1,    2,    1,    4,    3,    3,    3,
            6,    3,    1,    1,    1
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        if (-1 === $e->getRawLine()) {
                            $e->setRawLine($yyline);
                        }

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment);
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope');
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(7-3)], array('stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifs' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment);
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If($this->yyastk[$this->yysp-(10-3)], array('stmts' => $this->yyastk[$this->yysp-(10-6)], 'elseifs' => $this->yyastk[$this->yysp-(10-7)], 'else' => $this->yyastk[$this->yysp-(10-8)]), $line, $docComment);
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Do($this->yyastk[$this->yysp-(7-5)], is_array($this->yyastk[$this->yysp-(7-2)]) ? $this->yyastk[$this->yysp-(7-2)] : array($this->yyastk[$this->yysp-(7-2)]), $line, $docComment);
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_For(array('init' => $this->yyastk[$this->yysp-(9-3)], 'cond' => $this->yyastk[$this->yysp-(9-5)], 'loop' => $this->yyastk[$this->yysp-(9-7)], 'stmts' => $this->yyastk[$this->yysp-(9-9)]), $line, $docComment);
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment);
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment);
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment);
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment);
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-5)], array('keyVar' => null, 'byRef' => false, 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment);
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(8-3)], $this->yyastk[$this->yysp-(8-6)], array('keyVar' => null, 'byRef' => true, 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment);
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach($this->yyastk[$this->yysp-(10-3)], $this->yyastk[$this->yysp-(10-8)], array('keyVar' => $this->yyastk[$this->yysp-(10-5)], 'byRef' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-10)]), $line, $docComment);
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = array(); /* means: no statement */
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn59($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment);
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn62($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = false;
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = true;
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Function($this->yyastk[$this->yysp-(9-3)], array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment);
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class($this->yyastk[$this->yysp-(7-2)], array('type' => $this->yyastk[$this->yysp-(7-1)], 'extends' => $this->yyastk[$this->yysp-(7-3)], 'implements' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-6)]), $line, $docComment);
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface($this->yyastk[$this->yysp-(6-2)], array('extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment);
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Trait($this->yyastk[$this->yysp-(5-2)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = 0;
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn78($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn79($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn86($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment));
    }

    protected function yyn87($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_DeclareDeclare($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(5-3)];
    }

    protected function yyn92($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn93($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn94($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Stmt_Case(null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)];
    }

    protected function yyn95() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn96() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn97($line, $docComment) {
         $this->yyval = is_array($this->yyastk[$this->yysp-(1-1)]) ? $this->yyastk[$this->yysp-(1-1)] : array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn99($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn100($line, $docComment) {
         $this->yyastk[$this->yysp-(6-1)][] = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(6-4)], is_array($this->yyastk[$this->yysp-(6-6)]) ? $this->yyastk[$this->yysp-(6-6)] : array($this->yyastk[$this->yysp-(6-6)]), $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(6-1)];
    }

    protected function yyn101($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn102($line, $docComment) {
         $this->yyastk[$this->yysp-(7-1)][] = new PHPParser_Node_Stmt_ElseIf($this->yyastk[$this->yysp-(7-4)], $this->yyastk[$this->yysp-(7-7)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(7-1)];
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)]), $line, $docComment);
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn106($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else($this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn110($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn111($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment);
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = 'array';
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = 'callable';
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn120($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn121($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment);
    }

    protected function yyn122($line, $docComment) {
         $this->yyval = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment);
    }

    protected function yyn123($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn127($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment);
    }

    protected function yyn131($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn132($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod($this->yyastk[$this->yysp-(8-4)], array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment);
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUse($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn141($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Precedence($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn143($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(5-1)][0], $this->yyastk[$this->yysp-(5-1)][1], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment);
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], $this->yyastk[$this->yysp-(4-3)], null, $line, $docComment);
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TraitUseAdaptation_Alias($this->yyastk[$this->yysp-(4-1)][0], $this->yyastk[$this->yysp-(4-1)][1], null, $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)]);
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = array(null, $this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn150($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn151($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn154($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn156($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED;
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE;
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC;
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn164($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment);
    }

    protected function yyn166($line, $docComment) {
        $this->yyval = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn167($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment);
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment);
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment);
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment);
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment);
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn236($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn241($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => false, 'byRef' => $this->yyastk[$this->yysp-(9-2)], 'params' => $this->yyastk[$this->yysp-(9-4)], 'uses' => $this->yyastk[$this->yysp-(9-6)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment);
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Closure(array('static' => true, 'byRef' => $this->yyastk[$this->yysp-(10-3)], 'params' => $this->yyastk[$this->yysp-(10-5)], 'uses' => $this->yyastk[$this->yysp-(10-7)], 'stmts' => $this->yyastk[$this->yysp-(10-9)]), $line, $docComment);
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn251($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(4-4)], 1), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)];
    }

    protected function yyn252($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Expr_ClosureUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment));
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(8-1)], $this->yyastk[$this->yysp-(8-4)], $this->yyastk[$this->yysp-(8-7)], $line, $docComment);
    }

    protected function yyn256($line, $docComment) {

            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }

    }

    protected function yyn257($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment);
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn262($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn271() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`'));
    }

    protected function yyn281($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber(PHPParser_Node_Scalar_LNumber::parse($this->yyastk[$this->yysp-(1-1)]), $line, $docComment);
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber((double) $this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment);
    }

    protected function yyn288($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment);
    }

    protected function yyn289($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment);
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment);
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_TraitConst($line, $docComment);
    }

    protected function yyn292($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment);
    }

    protected function yyn293($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment);
    }

    protected function yyn294($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment);
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseDocString($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)]), $line, $docComment);
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment);
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn306($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn307($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->yysp-(3-2)]);; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn310() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn311() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn312($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(6-2)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn328($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn335($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment);
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn341($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn342($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn348($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn355($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn356($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn357($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn358($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn359($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment);
    }

    protected function yyn360($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment);
    }

    protected function yyn361($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn362($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn363($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn364($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]);
    }

    protected function yyn365($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn366($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn367($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn368($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn369($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn370($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment);
    }

    protected function yyn371($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn372($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn373($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn374($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }
}