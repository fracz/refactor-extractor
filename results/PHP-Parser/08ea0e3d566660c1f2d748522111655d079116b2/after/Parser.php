<?php

/* Prototype file of an object oriented PHP parser.
 * Written by Moriyoshi Koizumi, based on the work by Masato Bito.
 * This file is PUBLIC DOMAIN.
 */
class PHPParser_Parser
{
    const YYBADCH      = 146;
    const YYMAXLEX     = 383;
    const YYTERMS      = 146;
    const YYNONTERMS   = 90;
    const YYLAST       = 888;
    const YY2TBLSTATE  = 330;
    const YYGLAST      = 382;
    const YYSTATES     = 747;
    const YYNLSTATES   = 525;
    const YYINTERRTOK  = 1;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    // {{{ Tokens
    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_PLUS_EQUAL = 266;
    const T_MINUS_EQUAL = 267;
    const T_MUL_EQUAL = 268;
    const T_DIV_EQUAL = 269;
    const T_CONCAT_EQUAL = 270;
    const T_MOD_EQUAL = 271;
    const T_AND_EQUAL = 272;
    const T_OR_EQUAL = 273;
    const T_XOR_EQUAL = 274;
    const T_SL_EQUAL = 275;
    const T_SR_EQUAL = 276;
    const T_BOOLEAN_OR = 277;
    const T_BOOLEAN_AND = 278;
    const T_IS_EQUAL = 279;
    const T_IS_NOT_EQUAL = 280;
    const T_IS_IDENTICAL = 281;
    const T_IS_NOT_IDENTICAL = 282;
    const T_IS_SMALLER_OR_EQUAL = 283;
    const T_IS_GREATER_OR_EQUAL = 284;
    const T_SL = 285;
    const T_SR = 286;
    const T_INSTANCEOF = 287;
    const T_INC = 288;
    const T_DEC = 289;
    const T_INT_CAST = 290;
    const T_DOUBLE_CAST = 291;
    const T_STRING_CAST = 292;
    const T_ARRAY_CAST = 293;
    const T_OBJECT_CAST = 294;
    const T_BOOL_CAST = 295;
    const T_UNSET_CAST = 296;
    const T_NEW = 297;
    const T_CLONE = 298;
    const T_EXIT = 299;
    const T_IF = 300;
    const T_ELSEIF = 301;
    const T_ELSE = 302;
    const T_ENDIF = 303;
    const T_LNUMBER = 304;
    const T_DNUMBER = 305;
    const T_STRING = 306;
    const T_STRING_VARNAME = 307;
    const T_VARIABLE = 308;
    const T_NUM_STRING = 309;
    const T_INLINE_HTML = 310;
    const T_CHARACTER = 311;
    const T_BAD_CHARACTER = 312;
    const T_ENCAPSED_AND_WHITESPACE = 313;
    const T_CONSTANT_ENCAPSED_STRING = 314;
    const T_ECHO = 315;
    const T_DO = 316;
    const T_WHILE = 317;
    const T_ENDWHILE = 318;
    const T_FOR = 319;
    const T_ENDFOR = 320;
    const T_FOREACH = 321;
    const T_ENDFOREACH = 322;
    const T_DECLARE = 323;
    const T_ENDDECLARE = 324;
    const T_AS = 325;
    const T_SWITCH = 326;
    const T_ENDSWITCH = 327;
    const T_CASE = 328;
    const T_DEFAULT = 329;
    const T_BREAK = 330;
    const T_CONTINUE = 331;
    const T_GOTO = 332;
    const T_FUNCTION = 333;
    const T_CONST = 334;
    const T_RETURN = 335;
    const T_TRY = 336;
    const T_CATCH = 337;
    const T_THROW = 338;
    const T_USE = 339;
    const T_GLOBAL = 340;
    const T_STATIC = 341;
    const T_ABSTRACT = 342;
    const T_FINAL = 343;
    const T_PRIVATE = 344;
    const T_PROTECTED = 345;
    const T_PUBLIC = 346;
    const T_VAR = 347;
    const T_UNSET = 348;
    const T_ISSET = 349;
    const T_EMPTY = 350;
    const T_HALT_COMPILER = 351;
    const T_CLASS = 352;
    const T_TRAIT = 353;
    const T_INTERFACE = 354;
    const T_EXTENDS = 355;
    const T_IMPLEMENTS = 356;
    const T_OBJECT_OPERATOR = 357;
    const T_DOUBLE_ARROW = 358;
    const T_LIST = 359;
    const T_ARRAY = 360;
    const T_CALLABLE = 361;
    const T_CLASS_C = 362;
    const T_TRAIT_C = 363;
    const T_METHOD_C = 364;
    const T_FUNC_C = 365;
    const T_LINE = 366;
    const T_FILE = 367;
    const T_COMMENT = 368;
    const T_DOC_COMMENT = 369;
    const T_OPEN_TAG = 370;
    const T_OPEN_TAG_WITH_ECHO = 371;
    const T_CLOSE_TAG = 372;
    const T_WHITESPACE = 373;
    const T_START_HEREDOC = 374;
    const T_END_HEREDOC = 375;
    const T_DOLLAR_OPEN_CURLY_BRACES = 376;
    const T_CURLY_OPEN = 377;
    const T_PAAMAYIM_NEKUDOTAYIM = 378;
    const T_NAMESPACE = 379;
    const T_NS_C = 380;
    const T_DIR = 381;
    const T_NS_SEPARATOR = 382;
    // }}}

    protected static $yyterminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_THROW",
        "T_USE",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "']'",
        "'`'",
        "'\"'"
        , "???"
    );

    protected static $yytranslate = array(
            0,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,   47,  145,  146,  142,   46,   30,  146,
          140,  141,   44,   41,    7,   42,   43,   45,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,   25,  137,
           35,   12,   37,   24,   59,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,   60,  146,  143,   29,  146,  144,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  138,   28,  139,   49,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,  146,  146,  146,  146,
          146,  146,  146,  146,  146,  146,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   26,   27,   31,
           32,   33,   34,   36,   38,   39,   40,   48,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   61,   62,   63,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,  146,  146,   75,   76,   77,   78,   79,   80,   81,
           82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
           92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  146,  115,  116,  117,  118,  119,  120,
          121,  122,  123,  146,  124,  125,  126,  127,  146,  146,
          146,  146,  146,  146,  128,  129,  130,  131,  132,  133,
          134,  135,  136
    );

    protected static $yyaction = array(
           56,   57,  362,   58,   59,-32766,-32766,-32766,  245,   60,
        -32767,-32767,-32767,-32767,   99,  100,  101,  102,  103,  846,
          275,-32766,    0,-32766,-32766,   45,  107,  108,  109,  110,
          111,  112,  113,  114,  115,  116,  117,  296,   82,   61,
           62,  876,  268,  878,  877,   63,  226,   64,  235,  236,
           65,   66,   67,   68,   69,   70,   71,   72,   29,  237,
           73,  335,  363,  701,  703,  360,  790,  791,  364,  809,
          846,  619,  571,-32766,  792,   51,   26,  365,  416,  366,
          356,  367,  437,  368,  270,  480,  369,-32766,-32766,  268,
           40,   41,  370,  339,  336,   42,  371,  336,   74,  295,
          294,  337,   21,  372,  373,  207,  372,  373,  374,  375,
          376,  252,  554,  593,  377,  554,  593,  377,  378,  379,
          850,  796,  797,  798,  793,  794,  253,  199,   83,   84,
           85,  385,  799,  795,  338,  578,  503,  124,   75,  410,
          268,  332,  256,  260,   44,   54,   86,   87,   88,   89,
           90,   91,   92,   93,   94,   95,   96,   97,   98,   99,
          100,  101,  102,  103,  104,  105,  106,  568,  241,  672,
          673,  674,  671,  670,  669,  529,-32766,   52,-32766,-32766,
        -32766,   53,  529,  620,  242,  246,-32766,   55,  125,-32766,
        -32766,-32766,  268,-32766,-32766,-32766,-32766,-32766,  350,  760,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  492,  768,-32766,
        -32766,  197,-32766,  311,-32766,  768,   20,-32766,-32766,-32766,
        -32766,-32766,-32766,  120,  529,-32766,  243,  846,-32766,  538,
          846,-32766,-32766,-32766,  345,-32766,  505,-32766,  385,-32766,
          333,  338,-32766,  639,  640,  258,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,  664,-32766,  118,-32766,  768,  846,  119,
        -32766,   34,  208, -107,-32766,  121,  529,  347,  247,  569,
        -32766,   81,  240,-32766,-32766,-32766,  244,-32766,  413,-32766,
           39,-32766,   47,  591,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  268,-32766,  768,
          268,-32766,-32766,  104,  105,  106,-32766,  241,  529,  649,
          228,  351,-32766,  639,  640,-32766,-32766,-32766,  867,-32766,
          122,-32766,  209,-32766,  123,  846,-32766,  838,  268,  200,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  658,-32766,  839,
        -32766,  768,  333,  846,-32766,-32766,-32766,-32766,-32766,  520,
          529,  519,  238,  198,-32766,  664,  203,-32766,-32766,-32766,
          131,-32766,  204,-32766,  206,-32766,  589,  460,-32766,  101,
          102,  103,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  227,
        -32766,  867,-32766,  768,  515,  592,-32766,  511,  813,  127,
        -32766,  582,  529,  510,  261,  452,-32766,  276,  508,-32766,
        -32766,-32766,  128,-32766,  523,-32766,  241,-32766,  872,  277,
        -32766,  485,  486,  268,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,  801,-32766,  494,-32766,  768,  477,   27,-32766,  132,
          300,  488,-32766,  455,  529,  814,  661,  524,-32766,  535,
          506,-32766,-32766,-32766,  434,-32766,  433,-32766,  801,-32766,
          498,  396,-32766,  425,  407,  406,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,  543,-32766,  529,-32766,  768,  530,  427,
        -32766,  545,  808,  395,-32766,  346,  529,  417,  344,  761,
        -32766,  762, -138,-32766,-32766,-32766,  497,-32766,  491,-32766,
          490,-32766,  472,  444,-32766,  397,  484,  273,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,  783,-32766,  274,-32766,  768,
          867,  462,-32766,  403,  229,  443,-32766,  408,  529,   46,
          481,  359,-32766,  205,  314,-32766,-32766,-32766,-32766,-32766,
          470,-32766,  267,-32766,  659,  269,-32766,  737,  756,    0,
        -32766,-32766,-32766,-32766,-32766,-32766,-32766,  594,-32766, -244,
        -32766,  768,  595,  266,-32766,    0,  475,  257,-32766,  259,
          529,    0,    0,    0,-32766,  800,    0,-32766,-32766,-32766,
            0,-32766,  313,-32766,  287,-32766,  461,  286,-32766,  285,
          563,  284,-32766,-32766,-32766,  562,-32766,-32766,-32766,  400,
        -32766,  345,-32766,  768,  343,  522,-32766,  539,  570,   49,
        -32766,  580,  529,  567,  565,  605,-32766,  607,  557,-32766,
        -32766,-32766,  615,-32766,  614,-32766,  609,-32766,  622,  559,
        -32766,  573,  581,  514,-32766,-32766,-32766,  564,-32766,-32766,
        -32766,  513,-32766,   50,-32766,  768,  572,  613,-32766,  517,
          516,  512,-32766,  507,  529,  504,  129,   82,-32766,  130,
           36,-32766,-32766,-32766,  874,-32766,  875,-32766,  841,-32766,
          201,  202,-32766,  840,  851,  651,-32766,-32766,-32766,  566,
        -32766,-32766,-32766,  873,-32766,  847,-32766,  768,  845,  195,
        -32766,-32766,-32766,  830,-32766,  843,  781,  790,  791,  612,
          445,   76,   48,   35,   33,  792,-32766,   32,-32766,-32766,
        -32766,-32766,-32766,-32767,-32767,-32767,-32767,   31,-32766,-32766,
        -32766,-32766,-32766,  336,  331,   30,   43,   38,  342,  293,
          334,  271,  372,  373,-32766,  251,-32766,-32766,-32766,-32766,
        -32766,  534,  593,  377,  250,   78,  249,   79,   80,  126,
          440,  133,  796,  797,  798,  793,  794,  322,  239,  336,
          331,  272,  234,  799,  795,  293,  233,  537,  372,  373,
        -32766,-32766,-32766,  225,  336,  331,   37,  534,  593,  377,
          293,   77,  224,  372,  373,  196,-32766,  134,-32766,-32766,
        -32766,-32766,  534,  593,  377,  336,  856,  272,  336,  447,
          784,  336,  741,  536,  372,  373,  734,  372,  373,  500,
          372,  373,  272,  554,  593,  377,  554,  593,  377,  554,
          593,  377,  468,  807,  297,   28,   25,   19,  336,  478,
           23,  336,   22,   24,  738,  806,  765,  372,  373,  555,
          372,  373,  662,  764,  336,  590,  554,  593,  377,  554,
          593,  377,  827,  372,  373,  501,  789,  828,  767,  766,
          495,  763,  554,  593,  377,  754,  496,  469,  336,  352,
          301,  336,  585,  871,  336,  758,    0,  372,  373,    0,
          372,  373,  780,  372,  373,  842,  554,  593,  377,  554,
          593,  377,  554,  593,  377,  829,  844,  755
    );

    protected static $yycheck = array(
            2,    3,    4,    5,    6,    8,    9,   10,   61,   11,
           35,   36,   37,   38,   39,   40,   41,   42,   43,   72,
           60,   24,    0,   26,   27,   12,   13,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,    7,  138,   41,
           42,   70,  142,   72,   73,   47,    7,   49,   50,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           62,   63,   64,   50,   51,    7,   68,   69,   70,   71,
           72,   25,   74,    8,   76,   77,   78,   79,  118,   81,
          119,   83,    7,   85,    7,   86,   88,    8,    9,  142,
           92,   93,   94,   95,   95,   97,   98,   95,  100,    7,
          102,  103,  141,  104,  105,   12,  104,  105,  110,  111,
          112,    7,  113,  114,  115,  113,  114,  115,  120,  121,
           70,  123,  124,  125,  126,  127,  128,   12,    8,    9,
           10,  133,  134,  135,  136,  137,  138,   25,  140,    7,
          142,  139,  144,  145,   24,   60,   26,   27,   28,   29,
           30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
           40,   41,   42,   43,   44,   45,   46,  137,   48,  103,
          104,  105,  106,  107,  108,   70,   64,   60,    8,    9,
           10,   60,   70,  137,   30,   30,   74,   60,  138,   77,
           78,   79,  142,   81,   24,   83,   26,   85,   25,  141,
           88,    8,    9,   10,   92,   93,   94,    7,  103,   97,
           98,    7,  100,   72,  102,  103,  141,   24,   64,   26,
           27,   28,  110,  138,   70,  103,   30,   72,   74,  137,
           72,   77,   78,   79,  136,   81,  138,   83,  133,   85,
           96,  136,   88,  121,  122,  118,   92,   93,   94,  137,
          138,   97,   98,  109,  100,  138,  102,  103,   72,  138,
           64,  140,   12,  141,  110,  138,   70,    7,   30,  137,
           74,  130,  131,   77,   78,   79,    7,   81,  120,   83,
            7,   85,    7,  139,   88,    8,    9,   10,   92,   93,
           94,  137,  138,   97,   98,  103,  100,  142,  102,  103,
          142,   24,   64,   44,   45,   46,  110,   48,   70,   72,
           30,  138,   74,  121,  122,   77,   78,   79,   75,   81,
            7,   83,   12,   85,  138,   72,   88,   72,  142,   12,
           92,   93,   94,  137,  138,   97,   98,  137,  100,   72,
          102,  103,   96,   72,   64,    8,    9,   10,  110,   25,
           70,   25,   30,   12,   74,  109,   12,   77,   78,   79,
           12,   81,   12,   83,   12,   85,   30,   75,   88,   41,
           42,   43,   92,   93,   94,  137,  138,   97,   98,  142,
          100,   75,  102,  103,   25,  139,   64,   25,  145,   60,
          110,   25,   70,   25,   75,  142,   74,  142,   25,   77,
           78,   79,   25,   81,   25,   83,   48,   85,   70,  142,
           88,   65,   66,  142,   92,   93,   94,  137,  138,   97,
           98,  129,  100,   67,  102,  103,   65,   66,   64,   90,
           91,   89,  110,   70,   70,  129,  137,  138,   74,  137,
          138,   77,   78,   79,   70,   81,   70,   83,  129,   85,
           70,   70,   88,   70,   70,   70,   92,   93,   94,  137,
          138,   97,   98,   70,  100,   70,  102,  103,   70,   70,
           64,   70,   70,   70,  110,   70,   70,   71,   70,   72,
           74,   72,   72,   77,   78,   79,   72,   81,   72,   83,
           72,   85,   72,   72,   88,   72,   72,   75,   92,   93,
           94,  137,  138,   97,   98,  141,  100,   75,  102,  103,
           75,   99,   64,   79,   87,   87,  110,   87,   70,  119,
           89,   95,   74,  119,  132,   77,   78,   79,  103,   81,
          101,   83,  117,   85,  137,  116,   88,  141,  144,   -1,
           92,   93,   94,  137,  138,   97,   98,  114,  100,  132,
          102,  103,  114,  116,   64,   -1,  143,  118,  110,  118,
           70,   -1,   -1,   -1,   74,  129,   -1,   77,   78,   79,
           -1,   81,  132,   83,  132,   85,  132,  132,   88,  132,
          137,  132,   92,   93,   94,  137,  138,   97,   98,  136,
          100,  136,  102,  103,  136,  138,   64,  137,  137,  137,
          110,  137,   70,  137,  137,  137,   74,  137,  137,   77,
           78,   79,  137,   81,  137,   83,  137,   85,  137,  137,
           88,  137,  137,  137,   92,   93,   94,  137,  138,   97,
           98,  137,  100,  137,  102,  103,  137,  139,   64,  138,
          138,  138,  110,  138,   70,  138,  138,  138,   74,  138,
          140,   77,   78,   79,  139,   81,  139,   83,  139,   85,
           41,   42,   88,  139,  139,  139,   92,   93,   94,  137,
          138,   97,   98,  139,  100,  139,  102,  103,  139,   60,
            8,    9,   10,  139,  110,  139,  139,   68,   69,  139,
          141,  140,  140,  140,  140,   76,   24,  140,   26,   27,
           28,   29,   30,   31,   32,   33,   34,  140,    8,    9,
           10,  137,  138,   95,   96,  140,  140,  140,  140,  101,
          140,  140,  104,  105,   24,  140,   26,   27,   28,   29,
           30,  113,  114,  115,  140,  140,  140,  140,  140,  140,
          121,  140,  123,  124,  125,  126,  127,  128,  140,   95,
           96,  133,  140,  134,  135,  101,  140,  139,  104,  105,
            8,    9,   10,  140,   95,   96,  140,  113,  114,  115,
          101,  140,  140,  104,  105,  140,   24,  140,   26,   27,
           28,   29,  113,  114,  115,   95,  141,  133,   95,  141,
          141,   95,  141,  139,  104,  105,  141,  104,  105,  141,
          104,  105,  133,  113,  114,  115,  113,  114,  115,  113,
          114,  115,  141,  143,  141,  141,  141,  141,   95,   80,
          141,   95,  141,  141,  141,  141,  141,  104,  105,  139,
          104,  105,  139,  141,   95,  139,  113,  114,  115,  113,
          114,  115,  141,  104,  105,   82,  141,  141,  141,  141,
           84,  141,  113,  114,  115,  141,  141,  141,   95,  141,
          141,   95,  139,  143,   95,  139,   -1,  104,  105,   -1,
          104,  105,  143,  104,  105,  143,  113,  114,  115,  113,
          114,  115,  113,  114,  115,  143,  143,  143
    );

    protected static $yybase = array(
            0,  618,  654,  669,  690,    2,  739,   -1,  766,  696,
          726,  763,  723,  693,  769,  769,  769,  769,  769,  368,
          362,  359,  359,  324,  359,  373,   -2,   -2,   -2,  322,
          322,  154,  154,  154,  154,  154,  154,  154,  154,  322,
          448,  490,  532,  364,  112,  280,  196,  238,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  406,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
          574,  574,  574,  574,  574,   46,  499,  400,  443,  467,
          466,  464,  655,  651,  649,  675,  676,  427,  673,  534,
          536,  377,  539,  544,  546,  547,  526,  525,  671,  413,
          524,  519,  674,  658,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,   65,   79,  337,  337,  337,  337,
          337,  337,  337,  337,  337,  337,  337,  337,  337,  337,
          337,  277,  277,  170,   -3,  619,  619,  619,  619,  619,
          619,  619,  619,  619,  619,  619,  619,  619,  619,  619,
          193,  752,  700,  672,  672,  672,  672,   13,  -25,  -25,
          -25,  -25,  246,  144,  158,  158,  158,  186,  -53,  155,
          410,  328,  328,  271,  271,  271,  271,  271,  271,  271,
          271,  271,  271,  271,  271,  271,  271,  271,  271,  122,
          122,  122,  192,  319,  306,  243,  422,   50,   50,   50,
          432,  436,  435,  259,  259,  259,  425,  425, -100,  425,
          425,  425,   98,  141,  141,  -29,  508,  511,  447,  121,
          442,  392,  127,  302,  383,  399,  376,  374,  -39,  431,
          550,  342,  498,  458,  237,  458,  237,  173,  361,  346,
           46,  299,  417,   85,  461,  384,  460,  430,   92,   30,
          132,  -40,  117,  255,  267,   75,  428,  549,  396,  683,
          648,  517,  292,  117,  117,  645,  681,  397,  200,  682,
           58,  381,  412,  381,  336,  576,  336,  423,  395,  336,
          273,  553,  385,  395,  437,  395,  419,  381,  415,  336,
          494,  486,  429,  204,  412,  553,  336,  336,  424,  336,
          336,   22,  551,  631,  366,  595,  552,  597,  578,  598,
          403,  507,  433,  438,  616,  612,  608,  408,  632,  575,
          453,  405,  449,  557,  554,  455,  358,  439,  567,  445,
          439,  744,  440,  441,  434,  485,  341,  115,  453,  394,
          398,  596,  439,  599,  462,  313,  317,  594,  393,  439,
          421,  439,  505,  623,  439,  714,  338,  329,  453,  358,
          358,  358,  510,  710,  275,  626,  743,  577,  708,  707,
          742,  706,  732,  626,  577,  705,  729,  363,  718,  104,
          635,  417,  444,  401,  344,  484,   77,  348,  720,  439,
          439,  503,  509,  439,  496,  350,  716,  420,  404,  670,
          436,  402,  581,  439,  701,   77,  692,  685,  482,  502,
          580,  501,  352,  684,  426,  515,  439,  601,  481,  679,
          479,  477,  418,  416,   93,  637,  326,  356,  475,  409,
          250,  715,  414,  380,  471,  470,  457,  310,  585,  407,
          379,  468,  719,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,    0,    0,    0,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
          105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
          105,  105,  105,  105,  105,  120,  120,  120,  120,  120,
          120,  120,  439,  259,  259,  259,  259,   66,   66,  105,
          105,  105,  105,  105,  105,   66,  259,  259,  105,  105,
          105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
          105,  105,  105,  105,  105,  105,  105,  105,  141,  141,
          141,  141,  253,  253,  253,  141,  141,  141,    0,    0,
            0,  105,  105,  253,  105,  105,  105,  395,    0,    0,
            0,  253,  253,  117,    0,  117,  117,    0,  453,  255,
          267,  255,  267,  439,  339,  339,  339,  339,  395,    0,
          395,    0,    0,    0,    0,    0,    0,  567,    0,  313,
          596,  260,  453,    0,    0,    0,    0,    0,    0,    0,
            0,  453,  269,  269,  439,   39,  439,    0,    0,    0,
           39,  439,  260,    0,  439
    );

    protected static $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  100,   93,  105,   92,  101,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  333,
          333,  117,  117,  117,  117,  117,  117,  117,  117,  293,
        32767,32767,32767,32767,32767,32767,32767,32767,  156,  156,
          156,32767,  323,  323,  323,  323,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  338,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  214,  215,  217,  218,  155,  118,
          324,  337,  154,  120,  182,  184,  232,  183,  160,  165,
          166,  167,  168,  169,  170,  171,  172,  173,  174,  175,
          159,  211,  210,  180,  181,  290,  290,  293,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          185,  187,  186,  202,  203,  200,  201,  158,  204,  205,
          206,  207,  140,  140,  332,  332,  332,32767,32767,32767,
          141,  194,  195,32767,32767,32767,32767,  252,32767,32767,
        32767,  252,32767,32767,32767,  252,32767,32767,32767,  112,
          112,  112,  112,32767,32767,32767,  260,32767,32767,32767,
        32767,32767,  262,  189,  190,  188,32767,32767,32767,32767,
        32767,32767,32767,  261,32767,32767,32767,32767,  306,  298,
          306,  306,  250,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  102,  104,
        32767,32767,  286,  312,32767,32767,32767,   17,32767,32767,
        32767,  345,  306,32767,32767,32767,   19,32767,32767,32767,
        32767,32767,32767,  310,  311,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,   63,  257,   63,  243,32767,   63,
          292,  263,32767,32767,   73,32767,   71,32767,   75,   63,
           91,   91,  234,  292,   54,  263,   63,   63,32767,   63,
           63,32767,32767,32767,    4,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          245,32767,32767,  309,  308,32767,  198,  177,  244,32767,
          179,32767,  248,  251,32767,32767,32767,  129,  246,32767,
        32767,32767,  340,32767,32767,  157,32767,32767,32767,  125,
        32767,   61,32767,32767,  330,32767,32767,  284,  247,  191,
          192,  193,  301,32767,  116,  354,32767,  355,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  106,
        32767,  278,32767,32767,  127,32767,   74,32767,32767,  161,
          119,32767,32767,  339,32767,32767,32767,32767,  297,32767,
        32767,32767,32767,   62,32767,   76,32767,32767,32767,32767,
        32767,32767,  108,32767,32767,32767,  121,32767,32767,32767,
        32767,32767,32767,32767,  152,32767,32767,32767,32767,32767,
          110,32767,32767,32767,32767,32767,32767,  150,32767,32767,
        32767,32767,32767,   25,   25,    3,    3,  132,   25,   98,
           25,   25,  132,   91,   91,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25
    );

    protected static $yygoto = array(
          137,  137,  169,  169,  169,  169,  169,  169,  169,  169,
          137,  138,  139,  140,  144,  151,  178,  171,  173,  168,
          168,  168,  168,  170,  170,  170,  170,  164,  165,  166,
          167,  176,  721,  722,  386,  724,  744,  745,  746,  747,
          748,  749,  750,  752,  689,  141,  142,  143,  145,  146,
          147,  148,  149,  150,  174,  175,  177,  193,  194,  210,
          211,  212,  213,  214,  215,  216,  218,  219,  220,  221,
          231,  232,  263,  264,  265,  419,  420,  421,  179,  180,
          181,  182,  183,  184,  185,  186,  187,  188,  189,  152,
          153,  154,  155,  172,  156,  191,  157,  158,  159,  192,
          160,  161,  190,  135,  162,  163,  441,  441,  441,  441,
          441,  441,  441,  441,  441,  441,  441,  441,  441,  441,
          441,  548,  655,  610,  804,  805,  653,  611,  821,  634,
          678,  636,  676,  454,  479,  388,  388,  388,  388,  388,
          388,  532,  532,  532,  388,  388,  388,  388,  769,  388,
          388,  388,  769,  388,  388,  388,  769,  388,  388,  388,
          638,  638,  638,  638,  428,  429,  431,  435,  464,  466,
          467,  834,  533,  533,  533,  834,  415,  602,  602,  834,
          597,  603,  483,  442,  442,  442,  442,  442,  442,  442,
          442,  442,  442,  442,  442,  442,  442,  442,  290,  866,
          866,  393,  430,  432,  436,  393,  869,  866,  575,  393,
          576,  860,  389,  389,  389,  389,  389,  389,  869,  869,
          304,  389,  389,  389,  389,  392,  389,  389,  389,  392,
          389,  389,  389,  392,  389,  389,  389,  280,  280,  280,
          280,  280,  280,  456,  502,  473,  280,  280,  280,  280,
          281,  280,  280,  280,  281,  280,  280,  280,  281,  280,
          280,  280,  779,  778,  414,  414,  414,  409,  449,  288,
          312,  312,  312,  411,  411,  387,  390,  819,  402,  319,
          321,  312,  450,  453,  463,  325,  326,  476,  329,  323,
          324,  802,  802,  802,  802,  802,  802,  802,  802,  802,
          802,  802,  802,  802,  802,  802,    5,  733,  283,  853,
           14,  355,    6,    7,  531,  531,  531,    8,    9,   10,
           15,   16,   11,   17,   12,   18,   13,    1,    2,  307,
          668,  307,  621,  608,  606,  606,  604,  606,  509,  394,
          628,  624,  833,  262,  318,  305,  833,  255,  401,  357,
          833,  540,  465,  647,  518,  327,  816,  546,  457,  584,
          291,  292,  852,  852,  852,  248,  482,  687,  493,  499,
          223,    0,    0,  832,  398,    0,    0,    0,    0,  316,
            0,  418
    );

    protected static $yygcheck = array(
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   12,   12,   12,   12,   12,   12,   12,   12,   12,
           12,   12,   12,   21,   21,   35,   35,   35,   35,   35,
           35,    6,    6,    6,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
           35,   35,   35,   35,   47,   47,   47,   47,   47,   47,
           47,   69,    7,    7,    7,   69,   62,   35,   35,   69,
           35,   35,   35,   67,   67,   67,   67,   67,   67,   67,
           67,   67,   67,   67,   67,   67,   67,   67,   43,   88,
           88,   73,   75,   75,   75,   73,   88,   88,   29,   73,
           29,   87,   67,   67,   67,   67,   67,   67,   88,   88,
           26,   67,   67,   67,   67,   67,   67,   67,   67,   67,
           67,   67,   67,   67,   67,   67,   67,   68,   68,   68,
           68,   68,   68,   36,   36,   78,   68,   68,   68,   68,
           68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
           68,   68,   74,   74,   28,   28,   28,   28,   28,   28,
           68,   68,   68,   28,   28,   28,   28,   82,   28,   28,
           28,   68,   28,   28,   28,   57,   28,   28,   28,   68,
           68,   77,   77,   77,   77,   77,   77,   77,   77,   77,
           77,   77,   77,   77,   77,   77,   13,   58,    4,   85,
           13,   58,   13,   13,    5,    5,    5,   13,   13,   13,
           13,   13,   13,   13,   13,   13,   13,    2,    2,    4,
           56,    4,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,   70,   76,   27,   30,   70,   76,   30,   46,
           70,   10,   42,   49,   44,    9,   81,   11,   30,   34,
           43,   43,   70,   70,   70,   30,   30,   59,   30,   30,
           40,   -1,   -1,   70,    4,   -1,   -1,   -1,   -1,    4,
           -1,    4
    );

    protected static $yygbase = array(
            0,    0, -178,    0,   36,  313,  140,  171,    0,   22,
           56,   10,  -77, -198,    0,  -29,    0,    0,    0,    0,
            0,   84,    0,    0,    0,    0,  169,  110,   40,  186,
            9,    0,    0,    0,    5,  -89,   -7,    0,    0,    0,
         -142,    0,   85, -153,   54,    0,   97,  132,    0,   57,
            0,    0,    0,    0,    0,    0,  100,   60,   66,   12,
            0,    0,  146,    0,    0,    0,    0,  -12,   13,  -66,
          105,    0,    0,  -36,    4,  149,   87,   96,   49,    0,
            0,    3,   80,    0,    0,   83,    0,  172,  -55,    0
    );

    protected static $yygdefault = array(
        -32768,  361,    3,  527,  380,  551,  552,  553,  308,  306,
          541,  547,  458,    4,  549,  136,  298,  556,  299,  487,
          558,  404,  560,  561,  309,  310,  405,  317,  217,  574,
          489,  315,  577,  354,  583,  302,  438,  381,  348,  451,
          222,  412,  446,  289,  521,  439,  349,  423,  424,  648,
          656,  358,  328,  474,  660,  230,  667,  320,  341,  688,
          751,  753,  391,  399,  471,  330,  825,  382,  278,  383,
          384,  774,  282,  824,  422,  426,  254,  812,  459,  810,
          353,  859,  820,  279,  303,  854,  340,  861,  868,  448
    );

    protected static $yylhs = array(
            0,    1,    2,    2,    4,    4,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    8,    8,   10,   10,   10,
           10,    9,    9,   11,   13,   13,   14,   14,   14,   14,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,   33,   33,
           34,   27,   27,   30,   30,    6,    7,    7,   37,   37,
           37,   38,   38,   41,   41,   39,   39,   42,   42,   22,
           22,   29,   29,   32,   32,   31,   31,   23,   23,   23,
           23,   43,   43,   43,   44,   44,   20,   20,   16,   16,
           18,   18,   17,   17,   19,   19,   36,   36,   45,   45,
           45,   45,   46,   46,   46,   46,   47,   47,   48,   48,
           48,   48,   24,   24,   49,   49,   49,   25,   25,   25,
           25,   40,   40,   50,   50,   50,   54,   54,   51,   51,
           53,   53,   55,   55,   56,   56,   56,   56,   56,   56,
           52,   52,   52,   52,   26,   26,   21,   21,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
           15,   15,   15,   15,   64,   64,   65,   65,   66,   66,
           66,   66,   66,   67,   67,   35,   35,   35,   58,   58,
           71,   71,   72,   72,   72,   72,   72,   60,   60,   60,
           63,   63,   63,   59,   59,   77,   77,   77,   77,   77,
           77,   77,   77,   77,   77,   77,   77,   12,   12,   12,
           12,   12,   12,   12,   61,   61,   61,   61,   61,   61,
           78,   78,   81,   81,   80,   80,   82,   82,   28,   28,
           28,   83,   83,   83,   83,   83,   70,   70,   73,   73,
           69,   69,   69,   84,   84,   84,   84,   84,   84,   68,
           68,   68,   68,   75,   75,   74,   74,   74,   57,   57,
           85,   85,   85,   62,   62,   86,   86,   87,   87,   87,
           87,   76,   76,   76,   76,   88,   88,   88,   88,   88,
           88,   89,   89,   89,   79,   79
    );

    protected static $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            3,    5,    4,    3,    3,    3,    1,    1,    3,    2,
            4,    3,    1,    3,    2,    0,    1,    1,    1,    1,
            3,    7,   10,    5,    7,    9,    5,    2,    3,    2,
            3,    2,    3,    3,    3,    3,    1,    2,    5,    7,
            8,   10,    5,    1,    5,    3,    3,    2,    1,    2,
            8,    1,    3,    0,    1,    9,    7,    6,    1,    2,
            2,    0,    2,    0,    2,    0,    2,    1,    3,    1,
            4,    1,    4,    1,    4,    3,    5,    3,    4,    4,
            5,    0,    5,    4,    1,    1,    1,    4,    0,    6,
            0,    7,    0,    2,    0,    3,    1,    0,    3,    5,
            5,    7,    0,    1,    1,    1,    1,    0,    1,    2,
            3,    4,    3,    1,    1,    2,    4,    3,    5,    1,
            3,    2,    0,    3,    3,    8,    1,    3,    1,    1,
            0,    1,    1,    2,    1,    1,    1,    1,    1,    1,
            3,    5,    1,    3,    3,    1,    0,    1,    1,    6,
            3,    4,    6,    3,    2,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    2,    2,    2,    2,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    2,    2,    2,    2,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            5,    4,    4,    4,    2,    2,    4,    2,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    1,    4,
            3,    3,    2,    9,    0,    4,    4,    2,    4,    6,
            6,    4,    4,    1,    1,    1,    2,    3,    1,    1,
            1,    1,    0,    3,    3,    4,    4,    0,    2,    3,
            0,    1,    1,    0,    3,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    3,    2,    1,    1,    2,
            2,    4,    3,    3,    1,    1,    1,    1,    3,    3,
            0,    2,    0,    1,    3,    1,    3,    1,    1,    1,
            1,    3,    6,    4,    4,    4,    1,    2,    1,    1,
            4,    4,    1,    3,    3,    6,    6,    4,    4,    4,
            4,    1,    4,    0,    1,    1,    3,    1,    3,    1,
            1,    4,    0,    0,    2,    3,    1,    3,    1,    4,
            2,    2,    2,    1,    2,    1,    4,    3,    3,    6,
            3,    1,    1,    1,    3,    3
    );

    protected $yyval;
    protected $yyastk;
    protected $yysp;
    protected $lexer;

    /**
     * Parses PHP code into a node tree.
     *
     * @param PHPParser_Lexer $lexer A lexer
     *
     * @return array Array of statements
     */
    public function parse(PHPParser_Lexer $lexer) {
        $this->lexer  = $lexer;

        $this->yysp   = 0;                   // Stack pos
        $yysstk       = array($yystate = 0); // State stack
        $this->yyastk = array();             // AST   stack (?)
        $yylstk       = array($yyline  = 1); // Line  stack
        $yydstk       = array($yyDC = null); // Doc comment stack

        $yychar       = -1;

        for (;;) {
            if (self::$yybase[$yystate] == 0) {
                $yyn = self::$yydefault[$yystate];
            } else {
                if ($yychar < 0) {
                    if (($yychar = $lexer->lex($yylval, $yyline, $yyDC)) < 0)
                        $yychar = 0;
                    $yychar = $yychar < self::YYMAXLEX ?
                        self::$yytranslate[$yychar] : self::YYBADCH;
                    $yylstk[$this->yysp] = $yyline;
                    $yydstk[$this->yysp] = $yyDC;
                }
                if ((($yyn = self::$yybase[$yystate] + $yychar) >= 0
                     && $yyn < self::YYLAST && self::$yycheck[$yyn] == $yychar
                     || ($yystate < self::YY2TBLSTATE
                        && ($yyn = self::$yybase[$yystate + self::YYNLSTATES]
                            + $yychar) >= 0
                        && $yyn < self::YYLAST
                        && self::$yycheck[$yyn] == $yychar))
                    && ($yyn = self::$yyaction[$yyn]) != self::YYDEFAULT) {
                    /*
                     * >= YYNLSTATE: shift and reduce
                     * > 0: shift
                     * = 0: accept
                     * < 0: reduce
                     * = -YYUNEXPECTED: error
                     */
                    if ($yyn > 0) {
                        /* shift */
                        ++$this->yysp;

                        $yysstk[$this->yysp]       = $yystate = $yyn;
                        $this->yyastk[$this->yysp] = $yylval;
                        $yylstk[$this->yysp]       = $yyline;
                        $yydstk[$this->yysp]       = $yyDC;
                        $yychar = -1;

                        if ($yyn < self::YYNLSTATES)
                            continue;

                        /* $yyn >= YYNLSTATES means shift-and-reduce */
                        $yyn -= self::YYNLSTATES;
                    } else {
                        $yyn = -$yyn;
                    }
                } else {
                    $yyn = self::$yydefault[$yystate];
                }
            }

            for (;;) {
                /* reduce/error */
                if ($yyn == 0) {
                    /* accept */
                    return $this->yyval;
                } elseif ($yyn != self::YYUNEXPECTED) {
                    /* reduce */
                    try {
                        $this->{'yyn' . $yyn}(
                            $yylstk[$this->yysp - self::$yylen[$yyn]],
                            $yydstk[$this->yysp - self::$yylen[$yyn]]
                        );
                    } catch (PHPParser_Error $e) {
                        $e->setRawLine($yyline);

                        throw $e;
                    }

                    /* Goto - shift nonterminal */
                    $this->yysp -= self::$yylen[$yyn];
                    $yyn = self::$yylhs[$yyn];
                    if (($yyp = self::$yygbase[$yyn] + $yysstk[$this->yysp]) >= 0
                         && $yyp < self::YYGLAST
                         && self::$yygcheck[$yyp] == $yyn) {
                        $yystate = self::$yygoto[$yyp];
                    } else {
                        $yystate = self::$yygdefault[$yyn];
                    }

                    ++$this->yysp;

                    $yysstk[$this->yysp] = $yystate;
                    $this->yyastk[$this->yysp] = $this->yyval;
                    $yylstk[$this->yysp]       = $yyline;
                    $yydstk[$this->yysp]       = $yyDC;
                } else {
                    /* error */
                    throw new PHPParser_Error(
                        'Unexpected token ' . self::$yyterminals[$yychar],
                        $yyline
                    );
                }

                if ($yystate < self::YYNLSTATES)
                    break;
                /* >= YYNLSTATES means shift-and-reduce */
                $yyn = $yystate - self::YYNLSTATES;
            }
        }
    }

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn1($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Namespace::postprocess($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn2($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn3($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn4($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn5($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn6($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn7($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn8($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn9($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_HaltCompiler($this->lexer->handleHaltCompiler(), $line, $docComment);
    }

    protected function yyn10($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(array('name' => new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-2)], $line, $docComment), 'stmts' => null), $line, $docComment);
    }

    protected function yyn11($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(array('name' => new PHPParser_Node_Name($this->yyastk[$this->yysp-(5-2)], $line, $docComment), 'stmts' => $this->yyastk[$this->yysp-(5-4)]), $line, $docComment);
    }

    protected function yyn12($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Namespace(array('name' => null, 'stmts' => $this->yyastk[$this->yysp-(4-3)]), $line, $docComment);
    }

    protected function yyn13($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Use($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn14($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Const($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn15($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn16($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn17($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn18($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(3-1)], $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn19($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(2-2)], $line, $docComment), null, $line, $docComment);
    }

    protected function yyn20($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_UseUse(new PHPParser_Node_Name($this->yyastk[$this->yysp-(4-2)], $line, $docComment), $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn21($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn22($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn23($line, $docComment) {
         $this->yyval = new PHPParser_Node_Const($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn24($line, $docComment) {
         if (is_array($this->yyastk[$this->yysp-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); } else { $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)]; };
    }

    protected function yyn25($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn26($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn27($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn28($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn29($line, $docComment) {
         throw new PHPParser_Error('__halt_compiler() can only be used from the outermost scope');
    }

    protected function yyn30($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn31($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If(array('cond' => $this->yyastk[$this->yysp-(7-3)], 'stmts' => is_array($this->yyastk[$this->yysp-(7-5)]) ? $this->yyastk[$this->yysp-(7-5)] : array($this->yyastk[$this->yysp-(7-5)]), 'elseifList' => $this->yyastk[$this->yysp-(7-6)], 'else' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment);
    }

    protected function yyn32($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_If(array('cond' => $this->yyastk[$this->yysp-(10-3)], 'stmts' => $this->yyastk[$this->yysp-(10-6)], 'elseifList' => $this->yyastk[$this->yysp-(10-7)], 'else' => $this->yyastk[$this->yysp-(10-8)]), $line, $docComment);
    }

    protected function yyn33($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_While($this->yyastk[$this->yysp-(5-3)], is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)]), $line, $docComment);
    }

    protected function yyn34($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Do(array('stmts' => is_array($this->yyastk[$this->yysp-(7-2)]) ? $this->yyastk[$this->yysp-(7-2)] : array($this->yyastk[$this->yysp-(7-2)]), 'cond' => $this->yyastk[$this->yysp-(7-5)]), $line, $docComment);
    }

    protected function yyn35($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_For(array('init' => $this->yyastk[$this->yysp-(9-3)], 'cond' => $this->yyastk[$this->yysp-(9-5)], 'loop' => $this->yyastk[$this->yysp-(9-7)], 'stmts' => is_array($this->yyastk[$this->yysp-(9-9)]) ? $this->yyastk[$this->yysp-(9-9)] : array($this->yyastk[$this->yysp-(9-9)])), $line, $docComment);
    }

    protected function yyn36($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Switch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn37($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break(null, $line, $docComment);
    }

    protected function yyn38($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Break($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn39($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue(null, $line, $docComment);
    }

    protected function yyn40($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Continue($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn41($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return(null, $line, $docComment);
    }

    protected function yyn42($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Return($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn43($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Global($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn44($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Static($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn45($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Echo($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn46($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_InlineHTML($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn47($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn48($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Unset($this->yyastk[$this->yysp-(5-3)], $line, $docComment);
    }

    protected function yyn49($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach(array('expr' => $this->yyastk[$this->yysp-(7-3)], 'keyVar' => null, 'byRef' => false, 'valueVar' => $this->yyastk[$this->yysp-(7-5)], 'stmts' => is_array($this->yyastk[$this->yysp-(7-7)]) ? $this->yyastk[$this->yysp-(7-7)] : array($this->yyastk[$this->yysp-(7-7)])), $line, $docComment);
    }

    protected function yyn50($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach(array('expr' => $this->yyastk[$this->yysp-(8-3)], 'keyVar' => null, 'byRef' => true, 'valueVar' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => is_array($this->yyastk[$this->yysp-(8-8)]) ? $this->yyastk[$this->yysp-(8-8)] : array($this->yyastk[$this->yysp-(8-8)])), $line, $docComment);
    }

    protected function yyn51($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Foreach(array('expr' => $this->yyastk[$this->yysp-(10-3)], 'keyVar' => $this->yyastk[$this->yysp-(10-5)], 'byRef' => $this->yyastk[$this->yysp-(10-7)], 'valueVar' => $this->yyastk[$this->yysp-(10-8)], 'stmts' => is_array($this->yyastk[$this->yysp-(10-10)]) ? $this->yyastk[$this->yysp-(10-10)] : array($this->yyastk[$this->yysp-(10-10)])), $line, $docComment);
    }

    protected function yyn52($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Declare(array('declares' => $this->yyastk[$this->yysp-(5-3)], 'stmts' => is_array($this->yyastk[$this->yysp-(5-5)]) ? $this->yyastk[$this->yysp-(5-5)] : array($this->yyastk[$this->yysp-(5-5)])), $line, $docComment);
    }

    protected function yyn53($line, $docComment) {
         $this->yyval = array(); /* means: no statement */
    }

    protected function yyn54($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_TryCatch($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn55($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Throw($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn56($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Goto($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn57($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Label($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn58($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn59($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn60($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Catch($this->yyastk[$this->yysp-(8-3)], substr($this->yyastk[$this->yysp-(8-4)], 1), $this->yyastk[$this->yysp-(8-7)], $line, $docComment);
    }

    protected function yyn61($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn62($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn63($line, $docComment) {
         $this->yyval = false;
    }

    protected function yyn64($line, $docComment) {
         $this->yyval = true;
    }

    protected function yyn65($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Func(array('byRef' => $this->yyastk[$this->yysp-(9-2)], 'name' => $this->yyastk[$this->yysp-(9-3)], 'params' => $this->yyastk[$this->yysp-(9-5)], 'stmts' => $this->yyastk[$this->yysp-(9-8)]), $line, $docComment);
    }

    protected function yyn66($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Class(array('type' => $this->yyastk[$this->yysp-(7-1)], 'name' => $this->yyastk[$this->yysp-(7-2)], 'extends' => $this->yyastk[$this->yysp-(7-3)], 'implements' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-6)]), $line, $docComment);
    }

    protected function yyn67($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Interface(array('name' => $this->yyastk[$this->yysp-(6-2)], 'extends' => $this->yyastk[$this->yysp-(6-3)], 'stmts' => $this->yyastk[$this->yysp-(6-5)]), $line, $docComment);
    }

    protected function yyn68($line, $docComment) {
         $this->yyval = 0;
    }

    protected function yyn69($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn70($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn71($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn72($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn73($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn74($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn75($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn76($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn77($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn78($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn79($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn80($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn81($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn82($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn83($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn84($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn85($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_DeclareDeclare(array('key' => $this->yyastk[$this->yysp-(3-1)], 'value' => $this->yyastk[$this->yysp-(3-3)]), $line, $docComment));
    }

    protected function yyn86($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_DeclareDeclare(array('key' => $this->yyastk[$this->yysp-(5-3)], 'value' => $this->yyastk[$this->yysp-(5-5)]), $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn87($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn88($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn89($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn90($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(5-3)];
    }

    protected function yyn91($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn92($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_Case($this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn93($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Stmt_Case(null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)];
    }

    protected function yyn94() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn95() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn96($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn97($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-2)];
    }

    protected function yyn98($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn99($line, $docComment) {
         $this->yyastk[$this->yysp-(6-1)][] = new PHPParser_Node_Stmt_ElseIf(array('cond' => $this->yyastk[$this->yysp-(6-4)], 'stmts' => is_array($this->yyastk[$this->yysp-(6-6)]) ? $this->yyastk[$this->yysp-(6-6)] : array($this->yyastk[$this->yysp-(6-6)])), $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(6-1)];
    }

    protected function yyn100($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn101($line, $docComment) {
         $this->yyastk[$this->yysp-(7-1)][] = new PHPParser_Node_Stmt_ElseIf(array('cond' => $this->yyastk[$this->yysp-(7-4)], 'stmts' => $this->yyastk[$this->yysp-(7-7)]), $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(7-1)];
    }

    protected function yyn102($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn103($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(array('stmts' => is_array($this->yyastk[$this->yysp-(2-2)]) ? $this->yyastk[$this->yysp-(2-2)] : array($this->yyastk[$this->yysp-(2-2)])), $line, $docComment);
    }

    protected function yyn104($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn105($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Else(array('stmts' => $this->yyastk[$this->yysp-(3-3)]), $line, $docComment);
    }

    protected function yyn106($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn107($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn108($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment));
    }

    protected function yyn109($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-2)], $line, $docComment));
    }

    protected function yyn110($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(5-5)], 1), null, $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn111($line, $docComment) {
         $this->yyastk[$this->yysp-(7-1)][] = new PHPParser_Node_Param(substr($this->yyastk[$this->yysp-(7-5)], 1), $this->yyastk[$this->yysp-(7-7)], $this->yyastk[$this->yysp-(7-3)], $this->yyastk[$this->yysp-(7-4)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(7-1)];
    }

    protected function yyn112($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn113($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn114($line, $docComment) {
         $this->yyval = 'array';
    }

    protected function yyn115($line, $docComment) {
         $this->yyval = 'callable';
    }

    protected function yyn116($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn117($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn118($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Arg($this->yyastk[$this->yysp-(1-1)], false, $line, $docComment));
    }

    protected function yyn119($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Arg($this->yyastk[$this->yysp-(2-2)], true, $line, $docComment));
    }

    protected function yyn120($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(3-3)], false, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn121($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Arg($this->yyastk[$this->yysp-(4-4)], true, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)];
    }

    protected function yyn122($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn123($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn124($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn125($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn126($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn127($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn128($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn129($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment));
    }

    protected function yyn130($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_StaticVar(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment));
    }

    protected function yyn131($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn132($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn133($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_Property($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn134($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassConst($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn135($line, $docComment) {
         $this->yyval = new PHPParser_Node_Stmt_ClassMethod(array('type' => $this->yyastk[$this->yysp-(8-1)], 'byRef' => $this->yyastk[$this->yysp-(8-3)], 'name' => $this->yyastk[$this->yysp-(8-4)], 'params' => $this->yyastk[$this->yysp-(8-6)], 'stmts' => $this->yyastk[$this->yysp-(8-8)]), $line, $docComment);
    }

    protected function yyn136($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn137($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn138($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn139($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn140($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn141($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn142($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn143($line, $docComment) {
         PHPParser_Node_Stmt_Class::verifyModifier($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]); $this->yyval = $this->yyastk[$this->yysp-(2-1)] | $this->yyastk[$this->yysp-(2-2)];
    }

    protected function yyn144($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PUBLIC;
    }

    protected function yyn145($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PROTECTED;
    }

    protected function yyn146($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_PRIVATE;
    }

    protected function yyn147($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_STATIC;
    }

    protected function yyn148($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_ABSTRACT;
    }

    protected function yyn149($line, $docComment) {
         $this->yyval = PHPParser_Node_Stmt_Class::MODIFIER_FINAL;
    }

    protected function yyn150($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-3)], 1), null, $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn151($line, $docComment) {
         $this->yyastk[$this->yysp-(5-1)][] = new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(5-3)], 1), $this->yyastk[$this->yysp-(5-5)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(5-1)];
    }

    protected function yyn152($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(1-1)], 1), null, $line, $docComment));
    }

    protected function yyn153($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Stmt_PropertyProperty(substr($this->yyastk[$this->yysp-(3-1)], 1), $this->yyastk[$this->yysp-(3-3)], $line, $docComment));
    }

    protected function yyn154($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn155($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn156($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn157($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn158($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn159($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignList($this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment);
    }

    protected function yyn160($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn161($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignRef($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn162($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Assign($this->yyastk[$this->yysp-(6-1)], new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(6-5)], $this->yyastk[$this->yysp-(6-6)], $line, $docComment), $line, $docComment);
    }

    protected function yyn163($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_New($this->yyastk[$this->yysp-(3-2)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn164($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Clone($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn165($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignPlus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn166($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMinus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn167($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn168($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignDiv($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn169($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignConcat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn170($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignMod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn171($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn172($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn173($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignBitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn174($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn175($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_AssignShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn176($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostInc($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn177($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreInc($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn178($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PostDec($this->yyastk[$this->yysp-(2-1)], $line, $docComment);
    }

    protected function yyn179($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PreDec($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn180($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn181($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn182($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn183($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn184($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LogicalXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn185($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseOr($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn186($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseAnd($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn187($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseXor($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn188($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Concat($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn189($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Plus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn190($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Minus($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn191($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mul($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn192($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Div($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn193($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Mod($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn194($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftLeft($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn195($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShiftRight($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn196($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn197($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn198($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BooleanNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn199($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_BitwiseNot($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn200($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Identical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn201($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotIdentical($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn202($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Equal($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn203($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_NotEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn204($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Smaller($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn205($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_SmallerOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn206($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Greater($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn207($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_GreaterOrEqual($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn208($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Instanceof($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn209($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn210($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(5-1)], $this->yyastk[$this->yysp-(5-3)], $this->yyastk[$this->yysp-(5-5)], $line, $docComment);
    }

    protected function yyn211($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Ternary($this->yyastk[$this->yysp-(4-1)], null, $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn212($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Isset($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn213($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Empty($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn214($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE, $line, $docComment);
    }

    protected function yyn215($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_INCLUDE_ONCE, $line, $docComment);
    }

    protected function yyn216($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Eval($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn217($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE, $line, $docComment);
    }

    protected function yyn218($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Include($this->yyastk[$this->yysp-(2-2)], PHPParser_Node_Expr_Include::TYPE_REQUIRE_ONCE, $line, $docComment);
    }

    protected function yyn219($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Int($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn220($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Double($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn221($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_String($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn222($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Array($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn223($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Object($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn224($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Bool($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn225($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Cast_Unset($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn226($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Exit($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn227($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ErrorSuppress($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn228($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn229($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn230($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn231($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ShellExec($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn232($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Print($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn233($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_LambdaFunc($this->yyastk[$this->yysp-(9-8)], $this->yyastk[$this->yysp-(9-4)], $this->yyastk[$this->yysp-(9-6)], $this->yyastk[$this->yysp-(9-2)], $line, $docComment);
    }

    protected function yyn234($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn235($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn236($line, $docComment) {
         $this->yyastk[$this->yysp-(4-1)][] = new PHPParser_Node_Expr_LambdaFuncUse(substr($this->yyastk[$this->yysp-(4-4)], 1), $this->yyastk[$this->yysp-(4-3)], $line, $docComment); $this->yyval = $this->yyastk[$this->yysp-(4-1)];
    }

    protected function yyn237($line, $docComment) {
         $this->yyval = array(new PHPParser_Node_Expr_LambdaFuncUse(substr($this->yyastk[$this->yysp-(2-2)], 1), $this->yyastk[$this->yysp-(2-1)], $line, $docComment));
    }

    protected function yyn238($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn239($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn240($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn241($line, $docComment) {

            if ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_StaticPropertyFetch) {
                $this->yyval = new PHPParser_Node_Expr_StaticCall($this->yyastk[$this->yysp-(4-1)]->class, new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-1)]->name, $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
            } elseif ($this->yyastk[$this->yysp-(4-1)] instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                $tmp = $this->yyastk[$this->yysp-(4-1)];
                while ($tmp->var instanceof PHPParser_Node_Expr_ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new PHPParser_Node_Expr_StaticCall($tmp->var->class, $this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
                $tmp->var = new PHPParser_Node_Expr_Variable($tmp->var->name, $line, $docComment);
            } else {
                throw new Exception;
            }

    }

    protected function yyn242($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn243($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name('static', $line, $docComment);
    }

    protected function yyn244($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn245($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn246($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_FullyQualified($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn247($line, $docComment) {
         $this->yyval = new PHPParser_Node_Name_Relative($this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn248($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn249($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn250($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn251($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn252() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn253($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn254($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn255($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn256($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn257($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn258($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn259($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn260($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn261($line, $docComment) {
         $this->yyval = array(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(1-1)], '`'));
    }

    protected function yyn262($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(1-1)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn263($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn264($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn265($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber((int) $this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn266($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DNumber((double) $this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn267($line, $docComment) {
         $this->yyval = PHPParser_Node_Scalar_String::create($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn268($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LineConst($line, $docComment);
    }

    protected function yyn269($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FileConst($line, $docComment);
    }

    protected function yyn270($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_DirConst($line, $docComment);
    }

    protected function yyn271($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_ClassConst($line, $docComment);
    }

    protected function yyn272($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_MethodConst($line, $docComment);
    }

    protected function yyn273($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_FuncConst($line, $docComment);
    }

    protected function yyn274($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_NSConst($line, $docComment);
    }

    protected function yyn275($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String(PHPParser_Node_Scalar_String::parseEscapeSequences($this->yyastk[$this->yysp-(3-2)], null), $line, $docComment);
    }

    protected function yyn276($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String('', $line, $docComment);
    }

    protected function yyn277($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn278($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn279($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryPlus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn280($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_UnaryMinus($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn281($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn282($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Array($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn283($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn284($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn285($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn286($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ConstFetch($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn287($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn288($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, '"'); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn289($line, $docComment) {
         foreach ($this->yyastk[$this->yysp-(3-2)] as &$s) { if (is_string($s)) { $s = PHPParser_Node_Scalar_String::parseEscapeSequences($s, null); } }; $this->yyval = new PHPParser_Node_Scalar_Encapsed($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn290($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn291($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn292() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn293() {
        $this->yyval = $this->yyastk[$this->yysp];
    }

    protected function yyn294($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn295($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn296($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn297($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn298($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn299($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn300($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn301($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn302($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_MethodCall($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-3)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn303($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_FuncCall($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn304($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn305($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn306($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn307($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(2-2)], $line, $docComment);
    }

    protected function yyn308($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn309($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn310($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn311($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-4)], $line, $docComment);
    }

    protected function yyn312($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn313($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment);
    }

    protected function yyn314($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(3-1)], substr($this->yyastk[$this->yysp-(3-3)], 1), $line, $docComment);
    }

    protected function yyn315($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn316($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_StaticPropertyFetch($this->yyastk[$this->yysp-(6-1)], $this->yyastk[$this->yysp-(6-5)], $line, $docComment);
    }

    protected function yyn317($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn318($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn319($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn320($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch($this->yyastk[$this->yysp-(4-1)], $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn321($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn322($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn323($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn324($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn325($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn326($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn327($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn328($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn329($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn330($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(1-1)];
    }

    protected function yyn331($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(4-3)];
    }

    protected function yyn332($line, $docComment) {
         $this->yyval = null;
    }

    protected function yyn333($line, $docComment) {
         $this->yyval = array();
    }

    protected function yyn334($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn335($line, $docComment) {
         $this->yyastk[$this->yysp-(3-1)][] = $this->yyastk[$this->yysp-(3-3)]; $this->yyval = $this->yyastk[$this->yysp-(3-1)];
    }

    protected function yyn336($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn337($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(3-3)], $this->yyastk[$this->yysp-(3-1)], false, $line, $docComment);
    }

    protected function yyn338($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(1-1)], null, false, $line, $docComment);
    }

    protected function yyn339($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(4-4)], $this->yyastk[$this->yysp-(4-1)], true, $line, $docComment);
    }

    protected function yyn340($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayItem($this->yyastk[$this->yysp-(2-2)], null, true, $line, $docComment);
    }

    protected function yyn341($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn342($line, $docComment) {
         $this->yyastk[$this->yysp-(2-1)][] = $this->yyastk[$this->yysp-(2-2)]; $this->yyval = $this->yyastk[$this->yysp-(2-1)];
    }

    protected function yyn343($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(1-1)]);
    }

    protected function yyn344($line, $docComment) {
         $this->yyval = array($this->yyastk[$this->yysp-(2-1)], $this->yyastk[$this->yysp-(2-2)]);
    }

    protected function yyn345($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn346($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(4-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(4-3)], $line, $docComment);
    }

    protected function yyn347($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_PropertyFetch(new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(3-1)], 1), $line, $docComment), $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn348($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(3-2)], $line, $docComment);
    }

    protected function yyn349($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ArrayDimFetch(new PHPParser_Node_Expr_Variable($this->yyastk[$this->yysp-(6-2)], $line, $docComment), $this->yyastk[$this->yysp-(6-4)], $line, $docComment);
    }

    protected function yyn350($line, $docComment) {
         $this->yyval = $this->yyastk[$this->yysp-(3-2)];
    }

    protected function yyn351($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_String($this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn352($line, $docComment) {
         $this->yyval = new PHPParser_Node_Scalar_LNumber((int) $this->yyastk[$this->yysp-(1-1)], $line, $docComment);
    }

    protected function yyn353($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_Variable(substr($this->yyastk[$this->yysp-(1-1)], 1), $line, $docComment);
    }

    protected function yyn354($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }

    protected function yyn355($line, $docComment) {
         $this->yyval = new PHPParser_Node_Expr_ClassConstFetch($this->yyastk[$this->yysp-(3-1)], $this->yyastk[$this->yysp-(3-3)], $line, $docComment);
    }
}