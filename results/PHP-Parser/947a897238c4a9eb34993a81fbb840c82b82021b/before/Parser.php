<?php

namespace PhpParser;

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the grammar file grammar/zend_language_parser.phpy
 *  * the skeleton file grammar/kymacc.php.parser
 *  * the preprocessing script grammar/rebuildParser.php
 */
class Parser extends ParserAbstract
{
    const TOKEN_INVALID = 154;
    const TOKEN_MAP_SIZE = 389;

    const YYLAST       = 1091;
    const YY2TBLSTATE  = 400;
    const YYGLAST      = 570;
    const YYNLSTATES   = 626;
    const YYUNEXPECTED = 32767;
    const YYDEFAULT    = -32766;

    const YYERRTOK = 256;
    const T_INCLUDE = 257;
    const T_INCLUDE_ONCE = 258;
    const T_EVAL = 259;
    const T_REQUIRE = 260;
    const T_REQUIRE_ONCE = 261;
    const T_LOGICAL_OR = 262;
    const T_LOGICAL_XOR = 263;
    const T_LOGICAL_AND = 264;
    const T_PRINT = 265;
    const T_YIELD = 266;
    const T_PLUS_EQUAL = 267;
    const T_MINUS_EQUAL = 268;
    const T_MUL_EQUAL = 269;
    const T_DIV_EQUAL = 270;
    const T_CONCAT_EQUAL = 271;
    const T_MOD_EQUAL = 272;
    const T_AND_EQUAL = 273;
    const T_OR_EQUAL = 274;
    const T_XOR_EQUAL = 275;
    const T_SL_EQUAL = 276;
    const T_SR_EQUAL = 277;
    const T_POW_EQUAL = 278;
    const T_BOOLEAN_OR = 279;
    const T_BOOLEAN_AND = 280;
    const T_IS_EQUAL = 281;
    const T_IS_NOT_EQUAL = 282;
    const T_IS_IDENTICAL = 283;
    const T_IS_NOT_IDENTICAL = 284;
    const T_IS_SMALLER_OR_EQUAL = 285;
    const T_IS_GREATER_OR_EQUAL = 286;
    const T_SL = 287;
    const T_SR = 288;
    const T_INSTANCEOF = 289;
    const T_INC = 290;
    const T_DEC = 291;
    const T_INT_CAST = 292;
    const T_DOUBLE_CAST = 293;
    const T_STRING_CAST = 294;
    const T_ARRAY_CAST = 295;
    const T_OBJECT_CAST = 296;
    const T_BOOL_CAST = 297;
    const T_UNSET_CAST = 298;
    const T_POW = 299;
    const T_NEW = 300;
    const T_CLONE = 301;
    const T_EXIT = 302;
    const T_IF = 303;
    const T_ELSEIF = 304;
    const T_ELSE = 305;
    const T_ENDIF = 306;
    const T_LNUMBER = 307;
    const T_DNUMBER = 308;
    const T_STRING = 309;
    const T_STRING_VARNAME = 310;
    const T_VARIABLE = 311;
    const T_NUM_STRING = 312;
    const T_INLINE_HTML = 313;
    const T_CHARACTER = 314;
    const T_BAD_CHARACTER = 315;
    const T_ENCAPSED_AND_WHITESPACE = 316;
    const T_CONSTANT_ENCAPSED_STRING = 317;
    const T_ECHO = 318;
    const T_DO = 319;
    const T_WHILE = 320;
    const T_ENDWHILE = 321;
    const T_FOR = 322;
    const T_ENDFOR = 323;
    const T_FOREACH = 324;
    const T_ENDFOREACH = 325;
    const T_DECLARE = 326;
    const T_ENDDECLARE = 327;
    const T_AS = 328;
    const T_SWITCH = 329;
    const T_ENDSWITCH = 330;
    const T_CASE = 331;
    const T_DEFAULT = 332;
    const T_BREAK = 333;
    const T_CONTINUE = 334;
    const T_GOTO = 335;
    const T_FUNCTION = 336;
    const T_CONST = 337;
    const T_RETURN = 338;
    const T_TRY = 339;
    const T_CATCH = 340;
    const T_FINALLY = 341;
    const T_THROW = 342;
    const T_USE = 343;
    const T_INSTEADOF = 344;
    const T_GLOBAL = 345;
    const T_STATIC = 346;
    const T_ABSTRACT = 347;
    const T_FINAL = 348;
    const T_PRIVATE = 349;
    const T_PROTECTED = 350;
    const T_PUBLIC = 351;
    const T_VAR = 352;
    const T_UNSET = 353;
    const T_ISSET = 354;
    const T_EMPTY = 355;
    const T_HALT_COMPILER = 356;
    const T_CLASS = 357;
    const T_TRAIT = 358;
    const T_INTERFACE = 359;
    const T_EXTENDS = 360;
    const T_IMPLEMENTS = 361;
    const T_OBJECT_OPERATOR = 362;
    const T_DOUBLE_ARROW = 363;
    const T_LIST = 364;
    const T_ARRAY = 365;
    const T_CALLABLE = 366;
    const T_CLASS_C = 367;
    const T_TRAIT_C = 368;
    const T_METHOD_C = 369;
    const T_FUNC_C = 370;
    const T_LINE = 371;
    const T_FILE = 372;
    const T_COMMENT = 373;
    const T_DOC_COMMENT = 374;
    const T_OPEN_TAG = 375;
    const T_OPEN_TAG_WITH_ECHO = 376;
    const T_CLOSE_TAG = 377;
    const T_WHITESPACE = 378;
    const T_START_HEREDOC = 379;
    const T_END_HEREDOC = 380;
    const T_DOLLAR_OPEN_CURLY_BRACES = 381;
    const T_CURLY_OPEN = 382;
    const T_PAAMAYIM_NEKUDOTAYIM = 383;
    const T_NAMESPACE = 384;
    const T_NS_C = 385;
    const T_DIR = 386;
    const T_NS_SEPARATOR = 387;
    const T_ELLIPSIS = 388;

    protected $terminals = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "T_YIELD",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "T_POW_EQUAL",
        "'?'",
        "':'",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "T_POW",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_FINALLY",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_DOUBLE_ARROW",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "T_ELLIPSIS",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'$'",
        "'`'",
        "']'",
        "'\"'"
        , "???"
    );

    protected $translate = array(
            0,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,   49,  153,  154,  150,   48,   32,  154,
          148,  149,   46,   43,    7,   44,   45,   47,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,   27,  145,
           37,   13,   39,   26,   61,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,   63,  154,  152,   31,  154,  151,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  146,   30,  147,   51,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
          154,  154,  154,  154,  154,  154,    1,    2,    3,    4,
            5,    6,    8,    9,   10,   11,   12,   14,   15,   16,
           17,   18,   19,   20,   21,   22,   23,   24,   25,   28,
           29,   33,   34,   35,   36,   38,   40,   41,   42,   50,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   62,
           64,   65,   66,   67,   68,   69,   70,   71,   72,   73,
           74,   75,   76,   77,  154,  154,   78,   79,   80,   81,
           82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
           92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
          122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
          132,  133,  134,  154,  154,  154,  154,  154,  154,  135,
          136,  137,  138,  139,  140,  141,  142,  143,  144
    );

    protected $yyaction = array(
           59,   60,  410,   61,   62,-32766,-32766,-32766,-32766,   63,
           64,  215,  216,  217,  218,  219,  220,  221,  222,  223,
          224,  225,  226,  227,  228,  229,  230,  231,  232,  233,
          234,  235,-32766,-32766,-32766,-32766,-32766,-32767,-32767,-32767,
        -32767,   65,   66,   57,  445,  236,  237,   67,  369,   68,
          289,  290,   69,   70,   71,   72,   73,   74,   75,   76,
          730,   32,  299,   77,  402,  411,  435,  409,  407,  939,
          940,  447, 1030, 1030,  328,  676,  427,  448,   46,   27,
          412,  598,  449,  794,  450,    0,  451,  214,  580,  413,
          755,  756,   53,   36,   37,  452,  418,  414,   38,  453,
          347,  348,   78,  183,  320,  350,  351,  305,  454,  455,
           39,  292, -122,  456,  457,  458,  699,  658,  702,  459,
          460,  280,  891,   31,  461,  462,  124,  945,  946,  947,
          948,  942,  943,  306,   82,   83,   84,  125,  474,  949,
          944,  415,  293,  682,  599,  406,   47,  331,  331,  318,
           35,  322,   40,  786,   85,   86,   87,   88,   89,   90,
           91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
          101,  102,  103,  104,  105,  120,  300,-32766,  731,-32766,
        -32766,-32766,  776,  630,  212,  213,  214,-32766,  106,  296,
        -32766,-32766,-32766,  203,-32766,  428,-32766,-32766,-32766,-32766,
        -32766,-32766,  183, 1024,  333,-32766,-32766,-32766,   22,  905,
        -32766,-32766,  293,  432,-32766,  349,  430,-32766,  473,-32766,
        -32766,-32766,-32766,-32766,  891,-32766,  131,  212,  213,  214,
           41,  107,  108,  109,  110,  111,  112,  113,  114,  115,
          116,  117,  118,  589,  281,  183, 1052,-32766,  630,  212,
          213,  214,  429,  630,  128,-32766,-32766,-32766,  357,  996,
        -32766,-32766,-32766, 1037,-32766,  758,-32766,  183,-32766,  832,
          834,-32766,  212,  213,  214,-32766,-32766,-32766,  339,-32766,
        -32766,-32766,  295,  461,-32766,  630,  129,-32766,  473,-32766,
          183,  891,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  407,
        -32766,  238,   54,-32766,  205,  328,   56,-32766,-32766,-32766,
         1059,  291,-32766,-32766,  794,  474,-32766,  781,  415,-32766,
          473,  993,  414,  891,  128,-32766,-32766,-32766,  414,  757,
        -32766,-32766,-32766,  454,  455,-32766,-32766,-32766,  127,  454,
          455, -390,  658,  702,  459,  460,-32766,  700,  658,  702,
          459,  460,  630,-32766,  674,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,  338,-32766,  183,-32766,  407,-32766,  990,  767,
        -32766,  893,  328,  206,-32766,-32766,-32766,  691,-32766,-32766,
        -32766,  794,  241,-32766,  630,  121,-32766,  473,-32766,  122,
          891,-32766,-32766,-32766,-32766,-32766,  673,-32766,  242,-32766,
          213,  214,-32766,-32766,-32766,-32766,-32766,-32766,-32766,  556,
          294,-32766,-32766,  119,  701,-32766,  989,  183,-32766,  473,
          204,-32766,  891,  521,-32766,-32766,-32766,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,-32766,-32767,-32767,-32767,-32767,
         1062, 1052, 1064, 1063,  282,-32766,-32766,-32766,-32766,  434,
          323,  630,  212,  213,  214,-32766,-32766,-32766,-32766,-32766,
        -32766,  615,-32766, 1034,-32766,  891,-32766,  951,  686,-32766,
          183,  240,  611,-32766,-32766,-32766,  278,-32766,-32766,-32766,
        -32766,-32766,-32766,  630,  379,-32766,  473,-32766,-32766,-32766,
        -32766,-32766,-32766,-32766,-32766,  604,-32766,  891,-32766,  994,
         -118,-32766,  230,  231,  232,-32766,-32766,-32766,  951,  602,
        -32766,-32766,  133,  995,-32766,-32766,  548,-32766,  473,  132,
        -32766,  695,  129,-32766,-32766,-32766,  630,  103,  104,  105,
        -32766,  300,  621,-32766,-32766,-32766,  130,-32766,  614,-32766,
          891,-32766,  106,  106,-32766,  100,  101,  102,-32766,-32766,
        -32766,  623,-32766,-32766,-32766,-32766,-32766,-32766,  630,  996,
        -32766,  473,-32766,  236,  237,-32766,-32766,-32766,-32766,-32766,
          300,-32766,  891,-32766,  424,   58,-32766,  601,  442,  562,
        -32766,-32766,-32766,  437,   28,-32766,-32766,  134,  358,-32766,
          571,  572,-32766,  473,   55,-32766,  755,  756,  666,-32766,
        -32766,  630,  791,  625,   52,-32766,  780,  620,-32766,-32766,
        -32766,   51,-32766,   49,-32766,   50,-32766,  299,  788,-32766,
          637,  606,  630,-32766,-32766,-32766,  576,-32766,-32766,-32766,
        -32766,-32766,-32766,  630,  586,-32766,  473,-32766,  512,  511,
        -32766,-32766,-32766,-32766,-32766,  499,-32766,  495,-32766,  494,
          649,-32766,  631,  425,  647,-32766,-32766,-32766,  423, 1057,
        -32766,-32766,  597,  239,-32766,  573, -167,-32766,  473,  588,
        -32766,-32766,-32766,  670,-32766,-32766,  581,  908,  498,  207,
          208,  426,-32766,-32766,-32766,  209, 1052,  210,-32766,  336,
        -32766,-32766,-32766,-32766,-32766,-32767,-32767,-32767,-32767,  201,
        -32766,  337,-32766,-32766,-32766,  668,-32766,  939,  940,  277,
        -32766,-32766,  541,  207,  208,  941,  630,  514,  298,  209,
        -32766,  210, -164,-32766,-32766,-32766,  553,-32766,  422,-32766,
          565,-32766,  329,  201,-32766,  444,  567,  703,-32766,-32766,
        -32766,  939,  940,-32766,-32766,-32766,  332,-32766,  704,  941,
        -32766,  473,  802,  803,  804,  801,  800,  799,-32766,  319,
          359,  326,  607,  538,  327,  945,  946,  947,  948,  942,
          943,  385,  321,-32766,-32766,-32766, -391,  949,  944, -390,
          461,  123,   42,  950,  211,  372,-32766,  608,-32766,-32766,
          594,-32766,  932,-32766,-32766,-32766,-32766,  538,  325,  945,
          946,  947,  948,  942,  943,  385,  309, -290, -299,-32766,
         -298,  949,  944,  441,  955,  630,  424,  672,  211,-32766,
        -32766,  504,-32766,-32766,-32766,  406,-32766,  697,-32766,  663,
        -32766,   44,  678,-32766,  785,  724,  777,-32766,-32766,-32766,
          685,  725,-32766,-32766,  414,  403,-32766,  661,  718,-32766,
          473,  317,  643,  642,  716,  454,  455,-32766,  233,  234,
          235,  414,  403,  641,  636,  702,  459,  460,  317,  640,
          784,  675,  454,  455,  236,  237,  714,   45,  414,  403,
          787,  636,  702,  459,  460,  317,  330,-32766,-32766,  454,
          455,  610,  733,  638,-32766,-32766,-32766,  684,  636,  702,
          459,  460,  671,  330,  669,  667,  677,  759,   81,    0,
          639, 1058,-32766,  617,-32766,-32766,-32766,-32766,-32766,  414,
          330,-32767,-32767,-32767,-32767,   98,   99,  100,  101,  102,
          454,  455,  414,  618,  619,  622,  414,  600,  605,  658,
          702,  459,  460,  454,  455,  624,  126,  454,  455,  414,
          612,  302,  658,  702,  459,  460,  658,  702,  459,  460,
          454,  455, 1031, 1029, 1060, 1061,  414,  723,  892,  658,
          702,  459,  460, 1015, 1027,  930,  769,  454,  455,  414,
         1025,  698,  550, 1035,  722,  659,  658,  702,  459,  460,
          454,  455,  301,  303,  630,  304, 1030,  414,  609,  658,
          702,  459,  460,  334,-32766,  288,  287,  401,  454,  455,
          596,  405,  279,  202,   80,  689,  587,  658,  702,  459,
          460,   79,   48,  414,   43,   34,   33,  414,  792,  915,
           30,  889,  898,    0,  454,  455,  895,  593,  454,  455,
          566,  533,  443,  658,  702,  459,  460,  658,  702,  459,
          460,  438,  380,  360,  414,   25,   24,   23, -119,  870,
          542,  474,  894,  871,  415,  454,  455, -118,  574,  419,
            0,  331, 1009,    0,  658,  702,  459,  460,  956, 1056,
          929,    0, 1026, 1010, 1014, 1028,  914,  902,  900,  901,
          899
    );

    protected $yycheck = array(
            2,    3,    4,    5,    6,   28,   29,   30,   31,   11,
           12,   28,   29,   30,   31,   32,   33,   34,   35,   36,
           37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
           47,   48,   28,   29,   30,   31,   32,   33,   34,   35,
           36,   43,   44,   63,    7,   62,   63,   49,   75,   51,
           52,   53,   54,   55,   56,   57,   58,   59,   60,   61,
           27,   63,   64,   65,   66,   67,    7,    7,   99,   71,
           72,   73,   75,   75,  105,   77,   27,   79,   80,   81,
           82,   73,   84,  114,   86,    0,   88,   10,   89,   91,
          127,  128,   63,   95,   96,   97,   98,   98,  100,  101,
           98,   99,  104,   26,  124,  107,  108,    7,  109,  110,
          137,  138,  149,  115,  116,  117,  147,  118,  119,  120,
          121,    7,   12,    7,  126,  127,  146,  129,  130,  131,
          132,  133,  134,  135,    8,    9,   10,    7,  140,  141,
          142,  143,   32,  145,  146,  143,  148,  150,  150,  151,
            7,  153,   26,  145,   28,   29,   30,   31,   32,   33,
           34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
           44,   45,   46,   47,   48,  146,   50,   67,  145,    8,
            9,   10,  145,   73,    8,    9,   10,   77,   62,   32,
           80,   81,   82,    7,   84,  146,   86,   26,   88,   28,
           29,   91,   26,   75,    7,   95,   96,   97,  149,  149,
          100,  101,   32,   73,  104,    7,    7,  107,  108,   28,
           29,   30,   31,   32,   12,  115,   63,    8,    9,   10,
           13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
           23,   24,   25,   73,   32,   26,   78,   67,   73,    8,
            9,   10,    7,   73,  144,  145,  146,   77,    7,  119,
           80,   81,   82,  149,   84,  149,   86,   26,   88,   52,
           53,   91,    8,    9,   10,   95,   96,   97,  150,   67,
          100,  101,    7,  126,  104,   73,  146,  107,  108,   77,
           26,   12,   80,   81,   82,  115,   84,    8,   86,   99,
           88,  125,   63,   91,   13,  105,   63,   95,   96,   97,
          147,   32,  100,  101,  114,  140,  104,  147,  143,  107,
          108,  153,   98,   12,  144,  145,  146,  115,   98,  149,
            8,    9,   10,  109,  110,    8,    9,   10,   27,  109,
          110,  124,  118,  119,  120,  121,   67,  147,  118,  119,
          120,  121,   73,   26,  145,   28,   77,  145,  146,   80,
           81,   82,   63,   84,   26,   86,   99,   88,  149,   75,
           91,  147,  105,   13,   95,   96,   97,  147,   67,  100,
          101,  114,   13,  104,   73,  146,  107,  108,   77,  146,
           12,   80,   81,   82,  115,   84,  145,   86,   13,   88,
            9,   10,   91,    8,    9,   10,   95,   96,   97,   78,
           32,  100,  101,   13,  147,  104,  152,   26,  107,  108,
           13,   26,   12,  124,  145,  146,  115,   28,   29,   30,
           31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
           73,   78,   75,   76,  150,   67,   28,   29,   30,   73,
           78,   73,    8,    9,   10,   77,  145,  146,   80,   81,
           82,   27,   84,   73,   86,   12,   88,  136,   27,   91,
           26,   27,   27,   95,   96,   97,  125,   67,  100,  101,
            8,    9,  104,   73,   74,  107,  108,   77,   28,   29,
           80,   81,   82,  115,   84,   27,   86,   12,   88,  136,
          149,   91,   43,   44,   45,   95,   96,   97,  136,   27,
          100,  101,  146,   73,  104,   28,  150,  107,  108,   27,
           67,   32,  146,  145,  146,  115,   73,   46,   47,   48,
           77,   50,   27,   80,   81,   82,  146,   84,   27,   86,
           12,   88,   62,   62,   91,   43,   44,   45,   95,   96,
           97,   27,   67,  100,  101,  145,  146,  104,   73,  119,
          107,  108,   77,   62,   63,   80,   81,   82,  115,   84,
           50,   86,   12,   88,  143,   63,   91,  146,   68,   69,
           95,   96,   97,   68,   69,  100,  101,   93,   94,  104,
          102,  103,  107,  108,   63,   67,  127,  128,  145,  146,
          115,   73,  145,  146,   63,   77,  145,  146,   80,   81,
           82,   63,   84,   63,   86,   63,   88,   64,   73,   91,
          145,  146,   73,   95,   96,   97,   70,   67,  100,  101,
          145,  146,  104,   73,   73,  107,  108,   77,   73,   73,
           80,   81,   82,  115,   84,   73,   86,   73,   88,   73,
           73,   91,   73,   73,   73,   95,   96,   97,   73,   73,
          100,  101,   73,   27,  104,   75,   75,  107,  108,   75,
            8,    9,   10,  145,  146,  115,   75,   75,   75,   43,
           44,   82,    8,    9,   10,   49,   78,   51,   26,   78,
           28,   29,   30,   31,   32,   33,   34,   35,   36,   63,
           26,   78,   28,   29,   30,  145,  146,   71,   72,   90,
           67,   75,   90,   43,   44,   79,   73,   90,   90,   49,
           77,   51,   90,   80,   81,   82,   92,   84,   98,   86,
           92,   88,  106,   63,   91,   98,  105,  119,   95,   96,
           97,   71,   72,  100,  101,   75,  122,  104,  119,   79,
          107,  108,  108,  109,  110,  111,  112,  113,  115,  124,
          139,  122,  145,  127,  123,  129,  130,  131,  132,  133,
          134,  135,  124,    8,    9,   10,  124,  141,  142,  124,
          126,  125,  125,  136,  148,  139,  150,  145,  145,  146,
          139,   26,  149,   28,   29,   30,   31,  127,  139,  129,
          130,  131,  132,  133,  134,  135,  139,  139,  139,   67,
          139,  141,  142,  147,  149,   73,  143,  145,  148,   77,
          150,  143,   80,   81,   82,  143,   84,  144,   86,  145,
           88,  145,  145,   91,  145,  145,  145,   95,   96,   97,
          145,  145,  100,  101,   98,   99,  104,  145,  145,  107,
          108,  105,  145,  145,  145,  109,  110,  115,   46,   47,
           48,   98,   99,  145,  118,  119,  120,  121,  105,  145,
          145,  145,  109,  110,   62,   63,  145,  145,   98,   99,
          145,  118,  119,  120,  121,  105,  140,  145,  146,  109,
          110,  146,  145,  147,    8,    9,   10,  145,  118,  119,
          120,  121,  145,  140,  145,  145,  145,  149,  146,   -1,
          147,  147,   26,  146,   28,   29,   30,   31,   32,   98,
          140,   37,   38,   39,   40,   41,   42,   43,   44,   45,
          109,  110,   98,  146,  146,  146,   98,  146,  146,  118,
          119,  120,  121,  109,  110,  146,  146,  109,  110,   98,
          146,  148,  118,  119,  120,  121,  118,  119,  120,  121,
          109,  110,  147,  147,  147,  147,   98,  147,  147,  118,
          119,  120,  121,  147,  147,  147,  147,  109,  110,   98,
          147,  147,   83,  147,  147,  147,  118,  119,  120,  121,
          109,  110,  148,  148,   73,  148,   75,   98,  147,  118,
          119,  120,  121,  148,  148,  148,  148,  148,  109,  110,
           85,  148,  148,  148,  148,  147,   87,  118,  119,  120,
          121,  148,  148,   98,  148,  148,  148,   98,  147,  108,
          148,  151,  149,   -1,  109,  110,  149,  149,  109,  110,
          149,  149,  149,  118,  119,  120,  121,  118,  119,  120,
          121,  149,  149,  149,   98,  149,  149,  149,  149,  149,
          149,  140,  149,  149,  143,  109,  110,  149,  152,  148,
           -1,  150,  152,   -1,  118,  119,  120,  121,  152,  152,
          152,   -1,  152,  152,  152,  152,  152,  152,  152,  152,
          152
    );

    protected $yybase = array(
            0,  763,  746,  780,  838,  851,  899,   -1,  929,  834,
          821,  230,  224,  925,  868,  881,  956,  956,  956,  956,
          956,  468,  445,  434,  524,  434,  482,   -2,   -2,   -2,
          180,  110,  279,  279,  643,  279,  453,  560,  528,  410,
          311,  212,  378,  485,  485,  485,  485,  742,  742,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
          485,  485,  485,  485,  485,   33,  761,  656,  657,  760,
          759,  757,  752,  913,  619,  914,  764,  815,  492,  816,
          826,  827,  828,  829,  666,  836,  176,  219,  916,  833,
          444,  264,  126,  126,  126,  126,  126,  126,  126,  126,
          126,  126,  241,  241,  126,  241,  241,  241,  241,  289,
          391,  472,   77,  636,  322,  322,  322,  322,  322,  322,
          322,  322,  322,  322,  322,  322,  322,  322,  322,  322,
          338,  670,  670,  670,  670,  670,  670,  670,  670,  670,
          670,  670,  670,  670,  670,  670,  670,  670,  670,  670,
          670,  670,  670,  670,  670,  670,  670,  670,  670,  670,
          670,  670,  670,  670,  670,  670,  670,  670,  670,  670,
          670,  670,  670,  395,  395,  -17,  -17,  327,  487,  171,
          460,  674,  418,  765,  -23,  886,  662,  662,  662,  662,
          191,    4,    4,    4,    4,  217,  884,  884,  884,  884,
          399,  399,  399,  399,  267,  200,  -31,  157,  157,  654,
          654,  553,  800,  502,  502,  459,  459,  921,  921,  921,
          921,  921,  921,  921,  921,  921,  921,  591,  589,  856,
          856,  -37,  -37,  -37,  -37,  469,  372,  363,  168,  140,
          481,  481,  481,  812,  812,  812,  170,    2,  611,  390,
          390,  390,  623,  647,  608,  376,  175,  175,  175,  175,
          431,  762,  175,  175,  175,  239,  -27,  -27,  367,  366,
          634,  837,  638,  820,  461,  669,  -20,  682,  682,  682,
          294,  630,  515,  510,  488,  668,   49,  294,   33,  440,
          457,  243,  520,  726,  565,  707,  724,  251,  209,  299,
          475,   29,  128,   59,  718,  708,  911,  910,  114,  163,
          652,  520,  520,  520,  116,  331,   29,  351,  501,  501,
          501,  501,  501,  501,  501,  501,  691,   37,   60,  725,
            8,  489,  877,  574,  882,  566,  549,  574,  590,  489,
          874,  874,  874,  874,  489,  549,  882,  882,  489,  553,
          882,  143,  489,  639,  549,  624,  874,  617,  642,  574,
          603,  641,  882,  882,  882,  566,  489,  874,  631,  683,
          186,  882,  874,  631,  489,  590,   85,  441,  550,  876,
          873,  863,  576,  791,  618,  629,  858,  857,  866,  572,
          585,  864,  878,  678,  672,  580,  400,  552,  548,  541,
          667,  531,  635,  630,  673,  480,  480,  480,  655,  659,
          655,  480,  480,  480,  480,  480,  480,  480,  480,  938,
          646,  671,  648,  599,  695,  407,  678,  627,  291,  792,
          678,  887,  903,  880,  579,  844,  892,  655,  937,  686,
          130,  360,  803,  622,  581,  655,  845,  655,  745,  655,
          883,  586,  818,  678,  480,  758,  936,  935,  934,  933,
          932,  931,  930,  512,  928,  684,  902,  100,  865,  668,
          621,  577,  687,  197,  927,  655,  655,  804,  762,  655,
          747,  732,  908,  690,  891,  926,  647,  893,  655,  637,
          920,  197,  511,  556,  909,  696,  767,  859,  787,  601,
          665,  855,  788,  369,  817,  505,  702,  907,  906,  918,
          703,  385,  789,  561,  602,  594,  847,  709,  888,  632,
          651,  626,  628,  799,  545,  904,  731,  735,  689,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,    0,    0,    0,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
           -2,  126,  126,  126,  126,  126,  126,  126,  126,  126,
          126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
          126,  126,  -17,  -17,  126,  126,  -17,  -17,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,  -17,  -17,
            0,  -17,  -17,  -17,  -17,  126,  -17,  126,  -17,  921,
          126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
          126,  126,  126,  126,  126,  126,  -17,  921,  921,  921,
          921,  921,  921,  921,  921,  921,  921,  921,  921,  921,
          921,  921,  921,  921,  921,  921,  921,  921,  921,  921,
          921,  921,  921,  921,  921,  921,  921,  921,  921,  921,
          921,  921,  921,  921,  921,  921,  921,  921,  921,  126,
          126,    0,    0,  126,  -17,  126,  -17,  126,  -17,  126,
          -17,  126,  126,  126,  126,  126,  -17,  -17,  -17,  -17,
          -17,    0,  481,  481,  481,  481,  -17,  -17,  -17,  -17,
          644,  644,  644,  921,  921,  921,  921,  921,  921,  481,
          481,  812,  812,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  644,  644,  921,  921,  175,  175,  175,
          175,  175,  -27,  -27,  -27,  128,    0,    0,    0,    0,
            0,    0,  175,  549,  -27,   -3,   -3,   -3,  -27,  -27,
          -27,  128,    0,    0,    0,    0,  549,   -3,    0,    0,
            0,  882,    0,    0,    0,   -3,  494,  494,  494,  494,
          197,   29,    0,  549,  549,  549,    0,  603,    0,    0,
            0,  882,    0,    0,    0,    0,    0,    0,  480,  130,
          844,  245,  208,    0,    0,    0,    0,    0,    0,    0,
          208,  208,  275,  275,    0,    0,  512,  480,  480,  480,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,  245,    0,    0,  197
    );

    protected $yydefault = array(
            3,32767,32767,    1,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  111,  103,  117,  102,
          113,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  417,  417,32767,  374,32767,32767,32767,32767,
        32767,32767,32767,  185,  185,  185,32767,32767,32767,  406,
          406,  406,  406,  406,  406,  406,  406,  406,  406,32767,
        32767,32767,32767,32767,  265,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  270,  422,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  378,32767,32767,32767,
        32767,32767,  246,  247,  249,  250,  184,  407,  136,  271,
          421,  183,   26,  147,  138,   95,  377,  182,  126,  212,
          334,  214,  336,32767,  264,  213,  189,  194,  195,  196,
          197,  198,  199,  200,  201,  202,  203,  204,  205,  188,
          335,  371,  371,  374,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  243,  242,  362,  361,  210,  332,  211,
          333,  215,  337,  217,  339,  216,  233,  234,  231,  232,
          338,  355,  356,  353,  354,  187,  235,  236,  237,  238,
          357,  358,  359,  360,  169,  169,  169,32767,32767,  416,
          416,32767,32767,  224,  225,  346,  347,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  170,32767,  300,
          300,  127,  127,  127,  127,  127,32767,32767,32767,32767,
          219,  220,  218,  341,  342,  340,32767,32767,  308,32767,
        32767,32767,32767,32767,  310,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,  379,  309,32767,32767,32767,
        32767,32767,32767,32767,32767,  392,  296,32767,32767,32767,
        32767,  289,  114,  116,   64,  326,32767,32767,32767,32767,
        32767,  397,  229,32767,32767,32767,32767,32767,32767,  429,
        32767,  392,32767,32767,32767,32767,32767,32767,32767,32767,
          241,  221,  222,  223,32767,32767,  396,  390,  349,  350,
          351,  352,  343,  344,  345,  348,32767,32767,32767,32767,
        32767,   68,  305,32767,  311,32767,32767,32767,32767,   68,
        32767,32767,32767,32767,   68,32767,  395,  394,   68,32767,
          290,  373,   68,   81,32767,   79,32767,  100,  100,32767,
        32767,   83,  369,  385,32767,32767,   68,32767,  278,   70,
          373,32767,32767,  278,   68,32767,32767,    4,  315,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  291,32767,32767,32767,  261,  262,  381,
        32767,  382,32767,  289,32767,  227,  228,  230,  207,32767,
          209,  251,  252,  253,  254,  255,  256,  257,  259,32767,
        32767,  294,  297,32767,32767,32767,    6,   20,  146,32767,
          292,32767,  192,32767,32767,32767,32767,  424,32767,32767,
          186,32767,32767,   22,32767,  142,32767,   66,32767,  414,
        32767,32767,  390,  293,  226,32767,32767,32767,32767,32767,
        32767,32767,32767,  391,32767,32767,32767,  121,32767,  326,
        32767,32767,32767,   82,32767,  190,  137,32767,32767,  423,
        32767,32767,32767,32767,32767,32767,32767,32767,   67,32767,
        32767,   84,32767,32767,  390,32767,32767,32767,32767,32767,
        32767,32767,32767,  181,32767,32767,32767,32767,32767,  390,
        32767,  125,32767,32767,32767,32767,32767,32767,32767,    4,
        32767,  163,32767,32767,32767,32767,32767,32767,32767,   28,
           28,    3,   28,  108,   28,  149,    3,  100,  100,   61,
          149,   28,  149,   28,   28,   28,   28,   28,   28,   28,
          156,   28,   28,   28,   28,   28
    );

    protected $yygoto = array(
          168,  168,  138,  138,  143,  138,  139,  140,  141,  146,
          148,  186,  170,  166,  166,  166,  166,  143,  143,  167,
          167,  167,  167,  167,  167,  167,  167,  167,  167,  162,
          163,  164,  165,  184,  137,  475,  476,  362,  477,  481,
          482,  483,  484,  485,  486,  487,  488,  819,  142,  144,
          145,  147,  179,  181,  185,  247,  249,  251,  253,  255,
          256,  257,  258,  259,  266,  267,  268,  269,  283,  284,
          310,  311,  312,  381,  382,  383,  524,  187,  188,  189,
          190,  191,  192,  193,  194,  195,  196,  197,  198,  199,
          149,  150,  151,  169,  152,  171,  153,  243,  174,  154,
          155,  158,  244,  159,  135,  539,  680,  526,  527,  528,
          529,  530,  531,  532,  534,  560,  746,  746, 1041, 1041,
          634,  634,  634,  539,  539,  539,  539,  539,  539,  539,
          539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
          539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
          539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
          539,  539,  539,  539,  539,  479,  479,  479,  479,  479,
          479,  502,  341, 1020, 1020,  479,  479,  479,  479,  479,
          479,  479,  479,  479,  479,  324,  761,  490,  490,  308,
         1051, 1051,  520, 1036, 1036, 1036,  635,  635,  635,  420,
          420,  420,  420,  420,  420, 1019, 1054, 1051, 1045,  420,
          420,  420,  420,  420,  420,  420,  420,  420,  420, 1054,
         1054,  916,  916,  754,  754,  754,  754,  754,  554,  557,
          595,  370,  371,  371,  371,  561,  344,  399,  590,  540,
            1,  275,  363,  276,  371,    2,  551,  577,  711,  711,
          711,  711,  386,  570,  706,  712,  585,  540,  540,  540,
          540,  540,  540,  540,  540,  540,  540,  540,  540,  540,
          540,  540,  540,  540,  540,  540,  540,  540,  540,  540,
          540,  540,  540,  540,  540,  540,  540,  540,  540,  540,
          540,  540,  540,  540,  540,  540,  540,  540,  540,    5,
         1001,   16,  578,    6,  798,  400,  377,  513, 1021, 1021,
            7, 1038,   17,   18,    8,   19,    9,   10,   11,  865,
           20,   12,   13,   14,   15,  492,  492,  750,  928,  927,
          387,  579,  519,  519,  545,  515,  374,  375,  765,  953,
          517,  517,  478,  480,  507,  522,  546,  549,  558,  564,
          644,  342,  343,  613,  396,  491,  491,  953,  953,  953,
          953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
          953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
          953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
          953,  953,  953,  953,  953,  953,  953,  953,  953,  160,
          525,  954,  907,  650,  501,  817,  770, 1013,  720,  998,
          582,  806,    0,    0,    0,    0,    0,  501,  501,    0,
          172,  173,  175,  388,  389,  390,  391,  157,  180,  182,
          200,  248,  250,  252,  254,  260,  261,  262,  263,  264,
          270,  271,  272,  273,  285,  286,  313,  314,  315,  392,
          393,  394,  395,  161,  176,  245,  246,  177,  178,  633,
          633,  633,  496,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,  496,  938,    0,    0,  732,
          717,  715,  713,  715,  603,  493,  741,  736,  912,  913,
          933,    0,  496,  496,  496,    0,    0,    0,  874,   26,
           21,  356,    0,    0,  910, 1012,  910,  364,    0,    0,
            0,  505,    0,  911,  535,  516,    0,    0,    0,    0,
            0,    0,    0,    0,    0,   29,    0,    0,    0,  439,
          575,    0,    0,    0,    0,    0,    0,  583,    0,    0,
            0,    0,    0,  506,    0,    0,    0,    0,    0,    0,
            0,  496,    0,    0,    0,    0,    0,    0,    0,    0,
          500,    0,    0,    0,    0,    0,    0,    0,    0,  523
    );

    protected $yygcheck = array(
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   39,   32,   86,   86,   86,
           86,   86,   86,   86,   86,   86,   55,   55,   55,   55,
            7,    7,    7,   39,   39,   39,   39,   39,   39,   39,
           39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
           39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
           39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
           39,   39,   39,   39,   39,   91,   91,   91,   91,   91,
           91,   77,   50,   93,   93,   91,   91,   91,   91,   91,
           91,   91,   91,   91,   91,  100,   61,   91,   91,  100,
          116,  116,   85,   93,   93,   93,    8,    8,    8,   39,
           39,   39,   39,   39,   39,   93,  116,  116,  115,   39,
           39,   39,   39,   39,   39,   39,   39,   39,   39,  116,
          116,   39,   39,   39,   39,   39,   39,   39,   42,   42,
           42,    5,   98,   98,   98,   48,   48,   48,   39,   94,
            2,   46,   29,   46,   98,    2,   22,   22,   39,   39,
           39,   39,   98,  103,   39,   39,   39,   94,   94,   94,
           94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
           94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
           94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
           94,   94,   94,   94,   94,   94,   94,   94,   94,   14,
          107,   14,   31,   14,   74,   74,   30,    5,   92,   92,
           14,  113,   14,   14,   14,   14,   14,   14,   14,   78,
           14,   14,   14,   14,   14,   97,   97,   57,   99,   99,
           33,   33,   33,   33,   33,   33,    9,    9,   62,  101,
           33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
           11,   50,   50,   52,   10,   94,   94,  101,  101,  101,
          101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
          101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
          101,  101,  101,  101,  101,  101,  101,  101,  101,  101,
          101,  101,  101,  101,  101,  101,  101,  101,  101,   13,
           26,  102,   89,   12,   26,   77,   63,   59,   49,  106,
           84,   76,   -1,   -1,   -1,   -1,   -1,   26,   26,   -1,
           13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
           13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
           13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
           13,   13,   13,   13,   13,   13,   13,   13,   13,    6,
            6,    6,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,    4,   59,   -1,   -1,    6,
            6,    6,    6,    6,    6,    6,    6,    6,   59,   59,
           16,   -1,    4,    4,    4,   -1,   -1,   -1,   16,   16,
           16,   16,   -1,   -1,   59,   59,   59,   40,   -1,   -1,
           -1,   40,   -1,   59,   16,   40,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   16,   -1,   -1,   -1,   40,
           16,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,
           -1,   -1,   -1,   77,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,    4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
            4,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    4
    );

    protected $yygbase = array(
            0,    0, -361,    0,  145,  -99,  458,  119,  195,  -11,
          -53,    1,  -26,  216, -301,    0,   88,    0,    0,    0,
            0,    0,  202,    0,    0,  -30,  370,    0,    0,  196,
           18,   24,   81,   53,    0,    0,    0,    0,    0,  -78,
           93,    0,  -74,    0,    0,    0, -369,    0,  -92,  -27,
         -256,    0,   -5,    0,    0, -161,    0,   22,    0,   72,
            0,  155,  -19,  -24,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    7,    0,  -34,  124,   19,    0,
            0,    0,    0,    0,  -33,  159,   57,    0,    0,   -7,
            0, -112,    9, -126,   56,    0,    0,   26,  -87,    8,
         -133,  156,   42,   51,    0,    0,  -31,   97,    0,    0,
            0,    0,    0,   31,    0,  173, -117,    0
    );

    protected $yygdefault = array(
        -32768,  446,    3,  628,  463,  497,  655,  656,  657,  366,
          365,  645,  651,  156,    4,  653,  866,  352,  660,  353,
          563,  662,  509,  664,  665,  136,  464,  367,  368,  510,
          376,  552,  679,  265,  373,  681,  354,  683,  688,  355,
          584,  569,  536,  465,  431,  547,  274,  518,  543,  719,
          340,  727,  616,  735,  738,  466,  537,  749,  436,  909,
          384,  760,  766,  771,  774,  408,  397,  559,  778,  779,
          316,  783,  591,  592,  797,  297,  805,  818,  404,  884,
          886,  467,  468,  503,  568,  489,  508,  903,  398,  906,
          469,  470,  416,  417,  924,  921,  346, 1006,  345,  433,
          307,  991,  992,  555,  957,  440, 1044, 1002,  335,  471,
          472,  361,  378, 1039,  421, 1046, 1053,  544
    );

    protected $yylhs = array(
            0,    1,    2,    2,    4,    4,    5,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    9,    9,
           11,   11,   11,   11,   10,   10,   12,   14,   14,   15,
           15,   15,   15,    6,    6,    6,    6,    6,    6,    6,
            6,    6,    6,    6,    6,    6,    6,    6,    6,    6,
            6,    6,    6,    6,    6,    6,    6,    6,    6,    6,
            6,   36,   36,   38,   37,   37,   30,   30,   40,   40,
           41,   41,    7,    8,    8,    8,   43,   43,   43,   44,
           44,   47,   47,   45,   45,   48,   48,   23,   23,   32,
           32,   35,   35,   34,   34,   49,   24,   24,   24,   24,
           50,   50,   51,   51,   52,   52,   21,   21,   17,   17,
           53,   19,   19,   54,   18,   18,   20,   20,   31,   31,
           31,   42,   42,   56,   56,   57,   57,   58,   58,   58,
           58,   59,   59,   59,   60,   60,   61,   61,   61,   27,
           27,   62,   62,   62,   28,   28,   63,   63,   46,   46,
           64,   64,   64,   64,   69,   69,   70,   70,   71,   71,
           71,   71,   72,   73,   73,   68,   68,   65,   65,   67,
           67,   75,   75,   74,   74,   74,   74,   74,   74,   66,
           66,   76,   76,   29,   29,   22,   22,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
           25,   25,   25,   25,   25,   25,   25,   25,   16,   16,
           26,   26,   81,   81,   82,   82,   82,   77,   84,   84,
           88,   88,   89,   90,   90,   90,   90,   90,   90,   94,
           94,   39,   39,   39,   78,   78,   95,   95,   91,   91,
           96,   96,   96,   96,   96,   79,   79,   79,   83,   83,
           83,   87,   87,  101,  101,  101,  101,  101,  101,  101,
          101,  101,  101,  101,  101,  101,  101,   13,   13,   13,
           13,   13,  104,  104,  104,  104,  104,  104,  104,  104,
          104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
          104,  104,  104,  104,  104,  104,  104,  104,  104,  104,
          104,  104,  104,  104,  104,   80,   80,   80,   80,  102,
          102,  103,  103,  106,  106,  105,  105,  107,  107,   33,
           33,   33,   33,  109,  109,  108,  108,  108,  108,  108,
          110,  110,   93,   93,   97,   97,   92,   92,  111,  111,
          111,  111,   98,   98,   98,   98,   86,   86,   99,   99,
           99,   55,  112,  112,  113,  113,  113,   85,   85,  114,
          114,  115,  115,  115,  115,  100,  100,  100,  100,  116,
          116,  116,  116,  116,  116,  116,  117,  117,  117
    );

    protected $yylen = array(
            1,    1,    2,    0,    1,    3,    1,    1,    1,    1,
            1,    3,    5,    4,    3,    4,    4,    3,    3,    1,
            1,    3,    2,    4,    3,    1,    3,    2,    0,    1,
            1,    1,    1,    3,    5,    8,    3,    5,    9,    3,
            2,    3,    2,    3,    2,    3,    2,    3,    3,    3,
            1,    2,    5,    7,    9,    5,    1,    6,    3,    3,
            2,    0,    2,    8,    0,    4,    1,    3,    0,    1,
            0,    1,    9,    7,    6,    5,    1,    2,    2,    0,
            2,    0,    2,    0,    2,    1,    3,    1,    4,    1,
            4,    1,    4,    1,    3,    3,    3,    4,    4,    5,
            0,    2,    4,    3,    1,    1,    1,    4,    0,    2,
            3,    0,    2,    4,    0,    2,    0,    3,    1,    2,
            1,    1,    0,    1,    3,    4,    6,    0,    1,    1,
            1,    2,    3,    3,    1,    3,    1,    2,    2,    3,
            1,    1,    2,    4,    3,    1,    1,    3,    2,    0,
            3,    3,    8,    3,    1,    3,    0,    2,    4,    5,
            4,    4,    3,    1,    1,    1,    3,    1,    1,    0,
            1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
            3,    1,    3,    3,    1,    0,    1,    1,    3,    3,
            4,    4,    1,    2,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    2,    2,    2,    2,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    2,    2,    2,
            2,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            1,    3,    5,    4,    4,    4,    2,    2,    2,    2,
            2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
            1,    1,    1,    3,    2,    1,    9,   10,    3,    3,
            2,    4,    4,    3,    4,    4,    4,    3,    0,    4,
            1,    3,    2,    2,    4,    6,    2,    2,    4,    1,
            1,    1,    2,    3,    1,    1,    1,    1,    1,    1,
            0,    3,    3,    4,    4,    0,    2,    1,    0,    1,
            1,    0,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    3,    2,    1,    1,    3,    4,
            3,    1,    3,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    5,    4,    4,    3,    1,    3,    3,    3,    1,
            1,    0,    2,    0,    1,    3,    1,    3,    1,    1,
            1,    1,    1,    6,    4,    3,    4,    2,    4,    4,
            1,    3,    1,    2,    1,    1,    4,    1,    3,    6,
            4,    4,    4,    4,    1,    4,    0,    1,    1,    3,
            1,    4,    3,    1,    1,    1,    0,    0,    2,    3,
            1,    3,    1,    4,    2,    2,    2,    1,    2,    1,
            4,    3,    3,    3,    6,    3,    1,    1,    1
    );

    protected function yyn0() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn1($attributes) {
         $this->yyval = Node\Stmt\Namespace_::postprocess($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn2($attributes) {
         if (is_array($this->yyastk[$this->stackPos-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)]); } else { $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)]; };
    }

    protected function yyn3($attributes) {
         $this->yyval = array();
    }

    protected function yyn4($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn5($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn6($attributes) {
         $this->yyval = new Node\Name($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn7($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn8($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn9($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn10($attributes) {
         $this->yyval = new Node\Stmt\HaltCompiler($this->lexer->handleHaltCompiler(), $attributes);
    }

    protected function yyn11($attributes) {
         $this->yyval = new Node\Stmt\Namespace_($this->yyastk[$this->stackPos-(3-2)], null, $attributes);
    }

    protected function yyn12($attributes) {
         $this->yyval = new Node\Stmt\Namespace_($this->yyastk[$this->stackPos-(5-2)], $this->yyastk[$this->stackPos-(5-4)], $attributes);
    }

    protected function yyn13($attributes) {
         $this->yyval = new Node\Stmt\Namespace_(null, $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn14($attributes) {
         $this->yyval = new Node\Stmt\Use_($this->yyastk[$this->stackPos-(3-2)], Node\Stmt\Use_::TYPE_NORMAL, $attributes);
    }

    protected function yyn15($attributes) {
         $this->yyval = new Node\Stmt\Use_($this->yyastk[$this->stackPos-(4-3)], Node\Stmt\Use_::TYPE_FUNCTION, $attributes);
    }

    protected function yyn16($attributes) {
         $this->yyval = new Node\Stmt\Use_($this->yyastk[$this->stackPos-(4-3)], Node\Stmt\Use_::TYPE_CONSTANT, $attributes);
    }

    protected function yyn17($attributes) {
         $this->yyval = new Node\Stmt\Const_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn18($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn19($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn20($attributes) {
         $this->yyval = new Node\Stmt\UseUse($this->yyastk[$this->stackPos-(1-1)], null, $attributes);
    }

    protected function yyn21($attributes) {
         $this->yyval = new Node\Stmt\UseUse($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn22($attributes) {
         $this->yyval = new Node\Stmt\UseUse($this->yyastk[$this->stackPos-(2-2)], null, $attributes);
    }

    protected function yyn23($attributes) {
         $this->yyval = new Node\Stmt\UseUse($this->yyastk[$this->stackPos-(4-2)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn24($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn25($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn26($attributes) {
         $this->yyval = new Node\Const_($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn27($attributes) {
         if (is_array($this->yyastk[$this->stackPos-(2-2)])) { $this->yyval = array_merge($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)]); } else { $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)]; };
    }

    protected function yyn28($attributes) {
         $this->yyval = array();
    }

    protected function yyn29($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn30($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn31($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn32($attributes) {
         throw new Error('__HALT_COMPILER() can only be used from the outermost scope');
    }

    protected function yyn33($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn34($attributes) {
         $this->yyval = new Node\Stmt\If_($this->yyastk[$this->stackPos-(5-2)], array('stmts' => is_array($this->yyastk[$this->stackPos-(5-3)]) ? $this->yyastk[$this->stackPos-(5-3)] : array($this->yyastk[$this->stackPos-(5-3)]), 'elseifs' => $this->yyastk[$this->stackPos-(5-4)], 'else' => $this->yyastk[$this->stackPos-(5-5)]), $attributes);
    }

    protected function yyn35($attributes) {
         $this->yyval = new Node\Stmt\If_($this->yyastk[$this->stackPos-(8-2)], array('stmts' => $this->yyastk[$this->stackPos-(8-4)], 'elseifs' => $this->yyastk[$this->stackPos-(8-5)], 'else' => $this->yyastk[$this->stackPos-(8-6)]), $attributes);
    }

    protected function yyn36($attributes) {
         $this->yyval = new Node\Stmt\While_($this->yyastk[$this->stackPos-(3-2)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn37($attributes) {
         $this->yyval = new Node\Stmt\Do_($this->yyastk[$this->stackPos-(5-4)], is_array($this->yyastk[$this->stackPos-(5-2)]) ? $this->yyastk[$this->stackPos-(5-2)] : array($this->yyastk[$this->stackPos-(5-2)]), $attributes);
    }

    protected function yyn38($attributes) {
         $this->yyval = new Node\Stmt\For_(array('init' => $this->yyastk[$this->stackPos-(9-3)], 'cond' => $this->yyastk[$this->stackPos-(9-5)], 'loop' => $this->yyastk[$this->stackPos-(9-7)], 'stmts' => $this->yyastk[$this->stackPos-(9-9)]), $attributes);
    }

    protected function yyn39($attributes) {
         $this->yyval = new Node\Stmt\Switch_($this->yyastk[$this->stackPos-(3-2)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn40($attributes) {
         $this->yyval = new Node\Stmt\Break_(null, $attributes);
    }

    protected function yyn41($attributes) {
         $this->yyval = new Node\Stmt\Break_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn42($attributes) {
         $this->yyval = new Node\Stmt\Continue_(null, $attributes);
    }

    protected function yyn43($attributes) {
         $this->yyval = new Node\Stmt\Continue_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn44($attributes) {
         $this->yyval = new Node\Stmt\Return_(null, $attributes);
    }

    protected function yyn45($attributes) {
         $this->yyval = new Node\Stmt\Return_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn46($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn47($attributes) {
         $this->yyval = new Node\Stmt\Global_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn48($attributes) {
         $this->yyval = new Node\Stmt\Static_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn49($attributes) {
         $this->yyval = new Node\Stmt\Echo_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn50($attributes) {
         $this->yyval = new Node\Stmt\InlineHTML($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn51($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn52($attributes) {
         $this->yyval = new Node\Stmt\Unset_($this->yyastk[$this->stackPos-(5-3)], $attributes);
    }

    protected function yyn53($attributes) {
         $this->yyval = new Node\Stmt\Foreach_($this->yyastk[$this->stackPos-(7-3)], $this->yyastk[$this->stackPos-(7-5)][0], array('keyVar' => null, 'byRef' => $this->yyastk[$this->stackPos-(7-5)][1], 'stmts' => $this->yyastk[$this->stackPos-(7-7)]), $attributes);
    }

    protected function yyn54($attributes) {
         $this->yyval = new Node\Stmt\Foreach_($this->yyastk[$this->stackPos-(9-3)], $this->yyastk[$this->stackPos-(9-7)][0], array('keyVar' => $this->yyastk[$this->stackPos-(9-5)], 'byRef' => $this->yyastk[$this->stackPos-(9-7)][1], 'stmts' => $this->yyastk[$this->stackPos-(9-9)]), $attributes);
    }

    protected function yyn55($attributes) {
         $this->yyval = new Node\Stmt\Declare_($this->yyastk[$this->stackPos-(5-3)], $this->yyastk[$this->stackPos-(5-5)], $attributes);
    }

    protected function yyn56($attributes) {
         $this->yyval = array(); /* means: no statement */
    }

    protected function yyn57($attributes) {
         $this->yyval = new Node\Stmt\TryCatch($this->yyastk[$this->stackPos-(6-3)], $this->yyastk[$this->stackPos-(6-5)], $this->yyastk[$this->stackPos-(6-6)], $attributes);
    }

    protected function yyn58($attributes) {
         $this->yyval = new Node\Stmt\Throw_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn59($attributes) {
         $this->yyval = new Node\Stmt\Goto_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn60($attributes) {
         $this->yyval = new Node\Stmt\Label($this->yyastk[$this->stackPos-(2-1)], $attributes);
    }

    protected function yyn61($attributes) {
         $this->yyval = array();
    }

    protected function yyn62($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn63($attributes) {
         $this->yyval = new Node\Stmt\Catch_($this->yyastk[$this->stackPos-(8-3)], substr($this->yyastk[$this->stackPos-(8-4)], 1), $this->yyastk[$this->stackPos-(8-7)], $attributes);
    }

    protected function yyn64($attributes) {
         $this->yyval = null;
    }

    protected function yyn65($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-3)];
    }

    protected function yyn66($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn67($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn68($attributes) {
         $this->yyval = false;
    }

    protected function yyn69($attributes) {
         $this->yyval = true;
    }

    protected function yyn70($attributes) {
         $this->yyval = false;
    }

    protected function yyn71($attributes) {
         $this->yyval = true;
    }

    protected function yyn72($attributes) {
         $this->yyval = new Node\Stmt\Function_($this->yyastk[$this->stackPos-(9-3)], array('byRef' => $this->yyastk[$this->stackPos-(9-2)], 'params' => $this->yyastk[$this->stackPos-(9-5)], 'stmts' => $this->yyastk[$this->stackPos-(9-8)]), $attributes);
    }

    protected function yyn73($attributes) {
         $this->yyval = new Node\Stmt\Class_($this->yyastk[$this->stackPos-(7-2)], array('type' => $this->yyastk[$this->stackPos-(7-1)], 'extends' => $this->yyastk[$this->stackPos-(7-3)], 'implements' => $this->yyastk[$this->stackPos-(7-4)], 'stmts' => $this->yyastk[$this->stackPos-(7-6)]), $attributes);
    }

    protected function yyn74($attributes) {
         $this->yyval = new Node\Stmt\Interface_($this->yyastk[$this->stackPos-(6-2)], array('extends' => $this->yyastk[$this->stackPos-(6-3)], 'stmts' => $this->yyastk[$this->stackPos-(6-5)]), $attributes);
    }

    protected function yyn75($attributes) {
         $this->yyval = new Node\Stmt\Trait_($this->yyastk[$this->stackPos-(5-2)], $this->yyastk[$this->stackPos-(5-4)], $attributes);
    }

    protected function yyn76($attributes) {
         $this->yyval = 0;
    }

    protected function yyn77($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function yyn78($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_FINAL;
    }

    protected function yyn79($attributes) {
         $this->yyval = null;
    }

    protected function yyn80($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-2)];
    }

    protected function yyn81($attributes) {
         $this->yyval = array();
    }

    protected function yyn82($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-2)];
    }

    protected function yyn83($attributes) {
         $this->yyval = array();
    }

    protected function yyn84($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-2)];
    }

    protected function yyn85($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn86($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn87($attributes) {
         $this->yyval = is_array($this->yyastk[$this->stackPos-(1-1)]) ? $this->yyastk[$this->stackPos-(1-1)] : array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn88($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-2)];
    }

    protected function yyn89($attributes) {
         $this->yyval = is_array($this->yyastk[$this->stackPos-(1-1)]) ? $this->yyastk[$this->stackPos-(1-1)] : array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn90($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-2)];
    }

    protected function yyn91($attributes) {
         $this->yyval = is_array($this->yyastk[$this->stackPos-(1-1)]) ? $this->yyastk[$this->stackPos-(1-1)] : array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn92($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-2)];
    }

    protected function yyn93($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn94($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn95($attributes) {
         $this->yyval = new Node\Stmt\DeclareDeclare($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn96($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn97($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-3)];
    }

    protected function yyn98($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-2)];
    }

    protected function yyn99($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(5-3)];
    }

    protected function yyn100($attributes) {
         $this->yyval = array();
    }

    protected function yyn101($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn102($attributes) {
         $this->yyval = new Node\Stmt\Case_($this->yyastk[$this->stackPos-(4-2)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn103($attributes) {
         $this->yyval = new Node\Stmt\Case_(null, $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn104() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn105() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn106($attributes) {
         $this->yyval = is_array($this->yyastk[$this->stackPos-(1-1)]) ? $this->yyastk[$this->stackPos-(1-1)] : array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn107($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-2)];
    }

    protected function yyn108($attributes) {
         $this->yyval = array();
    }

    protected function yyn109($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn110($attributes) {
         $this->yyval = new Node\Stmt\ElseIf_($this->yyastk[$this->stackPos-(3-2)], is_array($this->yyastk[$this->stackPos-(3-3)]) ? $this->yyastk[$this->stackPos-(3-3)] : array($this->yyastk[$this->stackPos-(3-3)]), $attributes);
    }

    protected function yyn111($attributes) {
         $this->yyval = array();
    }

    protected function yyn112($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn113($attributes) {
         $this->yyval = new Node\Stmt\ElseIf_($this->yyastk[$this->stackPos-(4-2)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn114($attributes) {
         $this->yyval = null;
    }

    protected function yyn115($attributes) {
         $this->yyval = new Node\Stmt\Else_(is_array($this->yyastk[$this->stackPos-(2-2)]) ? $this->yyastk[$this->stackPos-(2-2)] : array($this->yyastk[$this->stackPos-(2-2)]), $attributes);
    }

    protected function yyn116($attributes) {
         $this->yyval = null;
    }

    protected function yyn117($attributes) {
         $this->yyval = new Node\Stmt\Else_($this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn118($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)], false);
    }

    protected function yyn119($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(2-2)], true);
    }

    protected function yyn120($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)], false);
    }

    protected function yyn121($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn122($attributes) {
         $this->yyval = array();
    }

    protected function yyn123($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn124($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn125($attributes) {
         $this->yyval = new Node\Param(substr($this->yyastk[$this->stackPos-(4-4)], 1), null, $this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-2)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn126($attributes) {
         $this->yyval = new Node\Param(substr($this->yyastk[$this->stackPos-(6-4)], 1), $this->yyastk[$this->stackPos-(6-6)], $this->yyastk[$this->stackPos-(6-1)], $this->yyastk[$this->stackPos-(6-2)], $this->yyastk[$this->stackPos-(6-3)], $attributes);
    }

    protected function yyn127($attributes) {
         $this->yyval = null;
    }

    protected function yyn128($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn129($attributes) {
         $this->yyval = 'array';
    }

    protected function yyn130($attributes) {
         $this->yyval = 'callable';
    }

    protected function yyn131($attributes) {
         $this->yyval = array();
    }

    protected function yyn132($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn133($attributes) {
         $this->yyval = array(new Node\Arg($this->yyastk[$this->stackPos-(3-2)], false, false, $attributes));
    }

    protected function yyn134($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn135($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn136($attributes) {
         $this->yyval = new Node\Arg($this->yyastk[$this->stackPos-(1-1)], false, false, $attributes);
    }

    protected function yyn137($attributes) {
         $this->yyval = new Node\Arg($this->yyastk[$this->stackPos-(2-2)], true, false, $attributes);
    }

    protected function yyn138($attributes) {
         $this->yyval = new Node\Arg($this->yyastk[$this->stackPos-(2-2)], false, true, $attributes);
    }

    protected function yyn139($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn140($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn141($attributes) {
         $this->yyval = new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(1-1)], 1), $attributes);
    }

    protected function yyn142($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn143($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn144($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn145($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn146($attributes) {
         $this->yyval = new Node\Stmt\StaticVar(substr($this->yyastk[$this->stackPos-(1-1)], 1), null, $attributes);
    }

    protected function yyn147($attributes) {
         $this->yyval = new Node\Stmt\StaticVar(substr($this->yyastk[$this->stackPos-(3-1)], 1), $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn148($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn149($attributes) {
         $this->yyval = array();
    }

    protected function yyn150($attributes) {
         $this->yyval = new Node\Stmt\Property($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn151($attributes) {
         $this->yyval = new Node\Stmt\ClassConst($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn152($attributes) {
         $this->yyval = new Node\Stmt\ClassMethod($this->yyastk[$this->stackPos-(8-4)], array('type' => $this->yyastk[$this->stackPos-(8-1)], 'byRef' => $this->yyastk[$this->stackPos-(8-3)], 'params' => $this->yyastk[$this->stackPos-(8-6)], 'stmts' => $this->yyastk[$this->stackPos-(8-8)]), $attributes);
    }

    protected function yyn153($attributes) {
         $this->yyval = new Node\Stmt\TraitUse($this->yyastk[$this->stackPos-(3-2)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn154($attributes) {
         $this->yyval = array();
    }

    protected function yyn155($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn156($attributes) {
         $this->yyval = array();
    }

    protected function yyn157($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn158($attributes) {
         $this->yyval = new Node\Stmt\TraitUseAdaptation\Precedence($this->yyastk[$this->stackPos-(4-1)][0], $this->yyastk[$this->stackPos-(4-1)][1], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn159($attributes) {
         $this->yyval = new Node\Stmt\TraitUseAdaptation\Alias($this->yyastk[$this->stackPos-(5-1)][0], $this->yyastk[$this->stackPos-(5-1)][1], $this->yyastk[$this->stackPos-(5-3)], $this->yyastk[$this->stackPos-(5-4)], $attributes);
    }

    protected function yyn160($attributes) {
         $this->yyval = new Node\Stmt\TraitUseAdaptation\Alias($this->yyastk[$this->stackPos-(4-1)][0], $this->yyastk[$this->stackPos-(4-1)][1], $this->yyastk[$this->stackPos-(4-3)], null, $attributes);
    }

    protected function yyn161($attributes) {
         $this->yyval = new Node\Stmt\TraitUseAdaptation\Alias($this->yyastk[$this->stackPos-(4-1)][0], $this->yyastk[$this->stackPos-(4-1)][1], null, $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn162($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)]);
    }

    protected function yyn163($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn164($attributes) {
         $this->yyval = array(null, $this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn165($attributes) {
         $this->yyval = null;
    }

    protected function yyn166($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn167($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn168($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function yyn169($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function yyn170($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn171($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn172($attributes) {
         Node\Stmt\Class_::verifyModifier($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)]); $this->yyval = $this->yyastk[$this->stackPos-(2-1)] | $this->yyastk[$this->stackPos-(2-2)];
    }

    protected function yyn173($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function yyn174($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_PROTECTED;
    }

    protected function yyn175($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_PRIVATE;
    }

    protected function yyn176($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_STATIC;
    }

    protected function yyn177($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function yyn178($attributes) {
         $this->yyval = Node\Stmt\Class_::MODIFIER_FINAL;
    }

    protected function yyn179($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn180($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn181($attributes) {
         $this->yyval = new Node\Stmt\PropertyProperty(substr($this->yyastk[$this->stackPos-(1-1)], 1), null, $attributes);
    }

    protected function yyn182($attributes) {
         $this->yyval = new Node\Stmt\PropertyProperty(substr($this->yyastk[$this->stackPos-(3-1)], 1), $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn183($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn184($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn185($attributes) {
         $this->yyval = array();
    }

    protected function yyn186($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn187($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn188($attributes) {
         $this->yyval = new Node\Expr\Assign($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn189($attributes) {
         $this->yyval = new Node\Expr\Assign($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn190($attributes) {
         $this->yyval = new Node\Expr\AssignRef($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn191($attributes) {
         $this->yyval = new Node\Expr\AssignRef($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn192($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn193($attributes) {
         $this->yyval = new Node\Expr\Clone_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn194($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Plus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn195($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Minus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn196($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Mul($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn197($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Div($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn198($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Concat($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn199($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Mod($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn200($attributes) {
         $this->yyval = new Node\Expr\AssignOp\BitwiseAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn201($attributes) {
         $this->yyval = new Node\Expr\AssignOp\BitwiseOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn202($attributes) {
         $this->yyval = new Node\Expr\AssignOp\BitwiseXor($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn203($attributes) {
         $this->yyval = new Node\Expr\AssignOp\ShiftLeft($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn204($attributes) {
         $this->yyval = new Node\Expr\AssignOp\ShiftRight($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn205($attributes) {
         $this->yyval = new Node\Expr\AssignOp\Pow($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn206($attributes) {
         $this->yyval = new Node\Expr\PostInc($this->yyastk[$this->stackPos-(2-1)], $attributes);
    }

    protected function yyn207($attributes) {
         $this->yyval = new Node\Expr\PreInc($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn208($attributes) {
         $this->yyval = new Node\Expr\PostDec($this->yyastk[$this->stackPos-(2-1)], $attributes);
    }

    protected function yyn209($attributes) {
         $this->yyval = new Node\Expr\PreDec($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn210($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BooleanOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn211($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BooleanAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn212($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn213($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn214($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalXor($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn215($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn216($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn217($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseXor($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn218($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Concat($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn219($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Plus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn220($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Minus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn221($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Mul($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn222($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Div($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn223($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Mod($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn224($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\ShiftLeft($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn225($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\ShiftRight($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn226($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Pow($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn227($attributes) {
         $this->yyval = new Node\Expr\UnaryPlus($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn228($attributes) {
         $this->yyval = new Node\Expr\UnaryMinus($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn229($attributes) {
         $this->yyval = new Node\Expr\BooleanNot($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn230($attributes) {
         $this->yyval = new Node\Expr\BitwiseNot($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn231($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Identical($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn232($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\NotIdentical($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn233($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Equal($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn234($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\NotEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn235($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Smaller($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn236($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\SmallerOrEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn237($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Greater($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn238($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\GreaterOrEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn239($attributes) {
         $this->yyval = new Node\Expr\Instanceof_($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn240($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn241($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn242($attributes) {
         $this->yyval = new Node\Expr\Ternary($this->yyastk[$this->stackPos-(5-1)], $this->yyastk[$this->stackPos-(5-3)], $this->yyastk[$this->stackPos-(5-5)], $attributes);
    }

    protected function yyn243($attributes) {
         $this->yyval = new Node\Expr\Ternary($this->yyastk[$this->stackPos-(4-1)], null, $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn244($attributes) {
         $this->yyval = new Node\Expr\Isset_($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn245($attributes) {
         $this->yyval = new Node\Expr\Empty_($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn246($attributes) {
         $this->yyval = new Node\Expr\Include_($this->yyastk[$this->stackPos-(2-2)], Node\Expr\Include_::TYPE_INCLUDE, $attributes);
    }

    protected function yyn247($attributes) {
         $this->yyval = new Node\Expr\Include_($this->yyastk[$this->stackPos-(2-2)], Node\Expr\Include_::TYPE_INCLUDE_ONCE, $attributes);
    }

    protected function yyn248($attributes) {
         $this->yyval = new Node\Expr\Eval_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn249($attributes) {
         $this->yyval = new Node\Expr\Include_($this->yyastk[$this->stackPos-(2-2)], Node\Expr\Include_::TYPE_REQUIRE, $attributes);
    }

    protected function yyn250($attributes) {
         $this->yyval = new Node\Expr\Include_($this->yyastk[$this->stackPos-(2-2)], Node\Expr\Include_::TYPE_REQUIRE_ONCE, $attributes);
    }

    protected function yyn251($attributes) {
         $this->yyval = new Node\Expr\Cast\Int($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn252($attributes) {
         $this->yyval = new Node\Expr\Cast\Double($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn253($attributes) {
         $this->yyval = new Node\Expr\Cast\String($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn254($attributes) {
         $this->yyval = new Node\Expr\Cast\Array_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn255($attributes) {
         $this->yyval = new Node\Expr\Cast\Object($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn256($attributes) {
         $this->yyval = new Node\Expr\Cast\Bool($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn257($attributes) {
         $this->yyval = new Node\Expr\Cast\Unset_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn258($attributes) {
         $this->yyval = new Node\Expr\Exit_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn259($attributes) {
         $this->yyval = new Node\Expr\ErrorSuppress($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn260($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn261($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn262($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn263($attributes) {
         $this->yyval = new Node\Expr\ShellExec($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn264($attributes) {
         $this->yyval = new Node\Expr\Print_($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn265($attributes) {
         $this->yyval = new Node\Expr\Yield_(null, null, $attributes);
    }

    protected function yyn266($attributes) {
         $this->yyval = new Node\Expr\Closure(array('static' => false, 'byRef' => $this->yyastk[$this->stackPos-(9-2)], 'params' => $this->yyastk[$this->stackPos-(9-4)], 'uses' => $this->yyastk[$this->stackPos-(9-6)], 'stmts' => $this->yyastk[$this->stackPos-(9-8)]), $attributes);
    }

    protected function yyn267($attributes) {
         $this->yyval = new Node\Expr\Closure(array('static' => true, 'byRef' => $this->yyastk[$this->stackPos-(10-3)], 'params' => $this->yyastk[$this->stackPos-(10-5)], 'uses' => $this->yyastk[$this->stackPos-(10-7)], 'stmts' => $this->yyastk[$this->stackPos-(10-9)]), $attributes);
    }

    protected function yyn268($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn269($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn270($attributes) {
         $this->yyval = new Node\Expr\Yield_($this->yyastk[$this->stackPos-(2-2)], null, $attributes);
    }

    protected function yyn271($attributes) {
         $this->yyval = new Node\Expr\Yield_($this->yyastk[$this->stackPos-(4-4)], $this->yyastk[$this->stackPos-(4-2)], $attributes);
    }

    protected function yyn272($attributes) {
         $this->yyval = new Node\Expr\Array_($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn273($attributes) {
         $this->yyval = new Node\Expr\Array_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn274($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn275($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch(new Node\Scalar\String(Node\Scalar\String::parse($this->yyastk[$this->stackPos-(4-1)]), $attributes), $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn276($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn277($attributes) {
         $this->yyval = new Node\Expr\New_($this->yyastk[$this->stackPos-(3-2)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn278($attributes) {
         $this->yyval = array();
    }

    protected function yyn279($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(4-3)];
    }

    protected function yyn280($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn281($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn282($attributes) {
         $this->yyval = new Node\Expr\ClosureUse(substr($this->yyastk[$this->stackPos-(2-2)], 1), $this->yyastk[$this->stackPos-(2-1)], $attributes);
    }

    protected function yyn283($attributes) {
         $this->yyval = new Node\Expr\FuncCall($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn284($attributes) {
         $this->yyval = new Node\Expr\StaticCall($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn285($attributes) {
         $this->yyval = new Node\Expr\StaticCall($this->yyastk[$this->stackPos-(6-1)], $this->yyastk[$this->stackPos-(6-4)], $this->yyastk[$this->stackPos-(6-6)], $attributes);
    }

    protected function yyn286($attributes) {

            if ($this->yyastk[$this->stackPos-(2-1)] instanceof Node\Expr\StaticPropertyFetch) {
                $this->yyval = new Node\Expr\StaticCall($this->yyastk[$this->stackPos-(2-1)]->class, new Node\Expr\Variable($this->yyastk[$this->stackPos-(2-1)]->name, $attributes), $this->yyastk[$this->stackPos-(2-2)], $attributes);
            } elseif ($this->yyastk[$this->stackPos-(2-1)] instanceof Node\Expr\ArrayDimFetch) {
                $tmp = $this->yyastk[$this->stackPos-(2-1)];
                while ($tmp->var instanceof Node\Expr\ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                $this->yyval = new Node\Expr\StaticCall($tmp->var->class, $this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)], $attributes);
                $tmp->var = new Node\Expr\Variable($tmp->var->name, $attributes);
            } else {
                throw new \Exception;
            }

    }

    protected function yyn287($attributes) {
         $this->yyval = new Node\Expr\FuncCall($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn288($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn289($attributes) {
         $this->yyval = new Node\Name('static', $attributes);
    }

    protected function yyn290($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn291($attributes) {
         $this->yyval = new Node\Name($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn292($attributes) {
         $this->yyval = new Node\Name\FullyQualified($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn293($attributes) {
         $this->yyval = new Node\Name\Relative($this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn294($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn295($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn296($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn297($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn298($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn299($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn300() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn301($attributes) {
         $this->yyval = new Node\Expr\PropertyFetch($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn302($attributes) {
         $this->yyval = new Node\Expr\PropertyFetch($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn303($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn304($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn305($attributes) {
         $this->yyval = null;
    }

    protected function yyn306($attributes) {
         $this->yyval = null;
    }

    protected function yyn307($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn308($attributes) {
         $this->yyval = array();
    }

    protected function yyn309($attributes) {
         $this->yyval = array(Node\Scalar\String::parseEscapeSequences($this->yyastk[$this->stackPos-(1-1)], '`'));
    }

    protected function yyn310($attributes) {
         foreach ($this->yyastk[$this->stackPos-(1-1)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String::parseEscapeSequences($s, '`'); } }; $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn311($attributes) {
         $this->yyval = array();
    }

    protected function yyn312($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn313($attributes) {
         $this->yyval = new Node\Scalar\LNumber(Node\Scalar\LNumber::parse($this->yyastk[$this->stackPos-(1-1)]), $attributes);
    }

    protected function yyn314($attributes) {
         $this->yyval = new Node\Scalar\DNumber(Node\Scalar\DNumber::parse($this->yyastk[$this->stackPos-(1-1)]), $attributes);
    }

    protected function yyn315($attributes) {
         $this->yyval = new Node\Scalar\String(Node\Scalar\String::parse($this->yyastk[$this->stackPos-(1-1)]), $attributes);
    }

    protected function yyn316($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Line($attributes);
    }

    protected function yyn317($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\File($attributes);
    }

    protected function yyn318($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Dir($attributes);
    }

    protected function yyn319($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Class_($attributes);
    }

    protected function yyn320($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Trait_($attributes);
    }

    protected function yyn321($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Method($attributes);
    }

    protected function yyn322($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Function_($attributes);
    }

    protected function yyn323($attributes) {
         $this->yyval = new Node\Scalar\MagicConst\Namespace_($attributes);
    }

    protected function yyn324($attributes) {
         $this->yyval = new Node\Scalar\String(Node\Scalar\String::parseDocString($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-2)]), $attributes);
    }

    protected function yyn325($attributes) {
         $this->yyval = new Node\Scalar\String('', $attributes);
    }

    protected function yyn326($attributes) {
         $this->yyval = new Node\Expr\ConstFetch($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn327($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn328($attributes) {
         $this->yyval = new Node\Expr\ClassConstFetch($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn329($attributes) {
         $this->yyval = new Node\Expr\Array_($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn330($attributes) {
         $this->yyval = new Node\Expr\Array_($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn331($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn332($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BooleanOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn333($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BooleanAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn334($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn335($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn336($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\LogicalXor($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn337($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseOr($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn338($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseAnd($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn339($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\BitwiseXor($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn340($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Concat($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn341($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Plus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn342($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Minus($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn343($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Mul($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn344($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Div($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn345($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Mod($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn346($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\ShiftLeft($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn347($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\ShiftRight($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn348($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Pow($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn349($attributes) {
         $this->yyval = new Node\Expr\UnaryPlus($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn350($attributes) {
         $this->yyval = new Node\Expr\UnaryMinus($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn351($attributes) {
         $this->yyval = new Node\Expr\BooleanNot($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn352($attributes) {
         $this->yyval = new Node\Expr\BitwiseNot($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn353($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Identical($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn354($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\NotIdentical($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn355($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Equal($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn356($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\NotEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn357($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Smaller($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn358($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\SmallerOrEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn359($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\Greater($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn360($attributes) {
         $this->yyval = new Node\Expr\BinaryOp\GreaterOrEqual($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn361($attributes) {
         $this->yyval = new Node\Expr\Ternary($this->yyastk[$this->stackPos-(5-1)], $this->yyastk[$this->stackPos-(5-3)], $this->yyastk[$this->stackPos-(5-5)], $attributes);
    }

    protected function yyn362($attributes) {
         $this->yyval = new Node\Expr\Ternary($this->yyastk[$this->stackPos-(4-1)], null, $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn363($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn364($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn365($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn366($attributes) {
         $this->yyval = new Node\Expr\ClassConstFetch($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn367($attributes) {
         foreach ($this->yyastk[$this->stackPos-(3-2)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String::parseEscapeSequences($s, '"'); } }; $this->yyval = new Node\Scalar\Encapsed($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn368($attributes) {
         foreach ($this->yyastk[$this->stackPos-(3-2)] as &$s) { if (is_string($s)) { $s = Node\Scalar\String::parseEscapeSequences($s, null); } } $s = preg_replace('~(\r\n|\n|\r)$~', '', $s); if ('' === $s) array_pop($this->yyastk[$this->stackPos-(3-2)]);; $this->yyval = new Node\Scalar\Encapsed($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn369($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn370($attributes) {
         $this->yyval = 'class';
    }

    protected function yyn371($attributes) {
         $this->yyval = array();
    }

    protected function yyn372($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn373() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn374() {
        $this->yyval = $this->yyastk[$this->stackPos];
    }

    protected function yyn375($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn376($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn377($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(3-3)], $this->yyastk[$this->stackPos-(3-1)], false, $attributes);
    }

    protected function yyn378($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(1-1)], null, false, $attributes);
    }

    protected function yyn379($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn380($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn381($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn382($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn383($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(6-2)], $this->yyastk[$this->stackPos-(6-5)], $attributes);
    }

    protected function yyn384($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn385($attributes) {
         $this->yyval = new Node\Expr\PropertyFetch($this->yyastk[$this->stackPos-(3-1)], $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn386($attributes) {
         $this->yyval = new Node\Expr\MethodCall($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn387($attributes) {
         $this->yyval = new Node\Expr\FuncCall($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn388($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn389($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn390($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn391($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn392($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn393($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(2-2)], $attributes);
    }

    protected function yyn394($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn395($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn396($attributes) {
         $this->yyval = new Node\Expr\StaticPropertyFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-4)], $attributes);
    }

    protected function yyn397($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn398($attributes) {
         $this->yyval = new Node\Expr\StaticPropertyFetch($this->yyastk[$this->stackPos-(3-1)], substr($this->yyastk[$this->stackPos-(3-3)], 1), $attributes);
    }

    protected function yyn399($attributes) {
         $this->yyval = new Node\Expr\StaticPropertyFetch($this->yyastk[$this->stackPos-(6-1)], $this->yyastk[$this->stackPos-(6-5)], $attributes);
    }

    protected function yyn400($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn401($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn402($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn403($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch($this->yyastk[$this->stackPos-(4-1)], $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn404($attributes) {
         $this->yyval = new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(1-1)], 1), $attributes);
    }

    protected function yyn405($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn406($attributes) {
         $this->yyval = null;
    }

    protected function yyn407($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn408($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn409($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn410($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn411($attributes) {
         $this->yyval = new Node\Expr\List_($this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn412($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn413($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn414($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn415($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(1-1)];
    }

    protected function yyn416($attributes) {
         $this->yyval = null;
    }

    protected function yyn417($attributes) {
         $this->yyval = array();
    }

    protected function yyn418($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn419($attributes) {
         $this->yyastk[$this->stackPos-(3-1)][] = $this->yyastk[$this->stackPos-(3-3)]; $this->yyval = $this->yyastk[$this->stackPos-(3-1)];
    }

    protected function yyn420($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn421($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(3-3)], $this->yyastk[$this->stackPos-(3-1)], false, $attributes);
    }

    protected function yyn422($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(1-1)], null, false, $attributes);
    }

    protected function yyn423($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(4-4)], $this->yyastk[$this->stackPos-(4-1)], true, $attributes);
    }

    protected function yyn424($attributes) {
         $this->yyval = new Node\Expr\ArrayItem($this->yyastk[$this->stackPos-(2-2)], null, true, $attributes);
    }

    protected function yyn425($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn426($attributes) {
         $this->yyastk[$this->stackPos-(2-1)][] = $this->yyastk[$this->stackPos-(2-2)]; $this->yyval = $this->yyastk[$this->stackPos-(2-1)];
    }

    protected function yyn427($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(1-1)]);
    }

    protected function yyn428($attributes) {
         $this->yyval = array($this->yyastk[$this->stackPos-(2-1)], $this->yyastk[$this->stackPos-(2-2)]);
    }

    protected function yyn429($attributes) {
         $this->yyval = new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(1-1)], 1), $attributes);
    }

    protected function yyn430($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch(new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(4-1)], 1), $attributes), $this->yyastk[$this->stackPos-(4-3)], $attributes);
    }

    protected function yyn431($attributes) {
         $this->yyval = new Node\Expr\PropertyFetch(new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(3-1)], 1), $attributes), $this->yyastk[$this->stackPos-(3-3)], $attributes);
    }

    protected function yyn432($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn433($attributes) {
         $this->yyval = new Node\Expr\Variable($this->yyastk[$this->stackPos-(3-2)], $attributes);
    }

    protected function yyn434($attributes) {
         $this->yyval = new Node\Expr\ArrayDimFetch(new Node\Expr\Variable($this->yyastk[$this->stackPos-(6-2)], $attributes), $this->yyastk[$this->stackPos-(6-4)], $attributes);
    }

    protected function yyn435($attributes) {
         $this->yyval = $this->yyastk[$this->stackPos-(3-2)];
    }

    protected function yyn436($attributes) {
         $this->yyval = new Node\Scalar\String($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn437($attributes) {
         $this->yyval = new Node\Scalar\String($this->yyastk[$this->stackPos-(1-1)], $attributes);
    }

    protected function yyn438($attributes) {
         $this->yyval = new Node\Expr\Variable(substr($this->yyastk[$this->stackPos-(1-1)], 1), $attributes);
    }
}