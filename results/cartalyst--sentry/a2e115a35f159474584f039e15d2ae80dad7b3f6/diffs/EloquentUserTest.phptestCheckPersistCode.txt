||||||||	public function testCheckPersistCode()
	{
		$user = m::mock('Cartalyst\Sentry\Users\Eloquent\User[toJson,checkHash]');
		$user->setHasher($hasher = m::mock('Cartalyst\Sentry\Hashing\HasherInterface'));

		$user->shouldReceive('toJson')->once()->andReturn('{"key":"value"}');

		$user->shouldReceive('checkHash')->with('{"key":"value"}', 'persist_code')->andReturn(true);

		$this->assertTrue($user->checkPersistCode('persist_code'));
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (SCALAR)
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))