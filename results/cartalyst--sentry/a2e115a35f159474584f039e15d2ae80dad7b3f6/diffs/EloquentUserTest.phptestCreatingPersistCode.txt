||||||||	public function testCreatingPersistCode()
	{
		$user = m::mock('Cartalyst\Sentry\Users\Eloquent\User[toJson,hash]');

		$user->shouldReceive('toJson')->once()->andReturn('{"key":"value"}');

		$user->shouldReceive('hash')->with('{"key":"value"}')->once()->andReturn('hashed_user');

		$this->assertEquals('hashed_user', $user->createPersistCode());
	}

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (
                    (SCALAR))))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)))))