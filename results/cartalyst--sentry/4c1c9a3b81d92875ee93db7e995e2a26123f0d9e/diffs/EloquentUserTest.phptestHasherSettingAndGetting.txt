	public function testHasherSettingAndGetting()
	{
		$hasher = m::mock('Cartalyst\Sentry\Hashing\HasherInterface');
		$user = new User;
		$this->assertNull($user->getHasher());
		$user->setHasher($hasher);
		$this->assertEquals($hasher, $user->getHasher());
	}

	/**
	 * @expectedException RuntimeException
	 */
||||||||	public function testHasherSettingAndGetting()
	{
		$this->assertNull(User::getHasher());
		User::setHasher($hasher = m::mock('Cartalyst\Sentry\Hashing\HasherInterface'));
		$this->assertEquals($hasher, User::getHasher());
	}

	/**
	 * @expectedException RuntimeException
	 */
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL)))
    (AST_STATIC_CALL
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_STATIC_CALL))))