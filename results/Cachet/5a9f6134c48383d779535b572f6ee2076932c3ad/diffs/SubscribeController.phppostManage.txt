    public function postManage($code = null)
    {
        if ($code === null) {
            throw new NotFoundHttpException();
        }

        $subscriber = Subscriber::where('verify_code', '=', $code)->first();

        if (!$subscriber) {
            throw new BadRequestHttpException();
        }

        try {
            dispatch(new UpdateSubscriberSubscriptionCommand($subscriber, Binput::get('subscriptions')));
        } catch (ValidationException $e) {
            return Redirect::route('subscribe.manage', $subscriber->verify_code)
                ->withInput(Binput::all())
                ->withTitle(sprintf('%s %s', trans('dashboard.notifications.whoops'), trans('cachet.subscriber.email.failure')))
                ->withErrors($e->getMessageBag());
        }

        return Redirect::route('subscribe.manage', $subscriber->verify_code)
            ->withSuccess(sprintf('%s %s', trans('dashboard.notifications.awesome'), trans('cachet.subscriber.email.subscribed')));
    }
}||||||||    public function postManage($code = null)
    {
        if ($code === null) {
            throw new NotFoundHttpException();
        }

        $subscriber = Subscriber::where('verify_code', '=', $code)->first();

        if (!$subscriber) {
            throw new BadRequestHttpException();
        }

        try {
            dispatch(new UpdateSubscriberSubscriptionCommand($subscriber, Binput::get('subscriptions')));
        } catch (ValidationException $e) {
            return cachet_route('subscribe.manage', $subscriber->verify_code)
                ->withInput(Binput::all())
                ->withTitle(sprintf('%s %s', trans('dashboard.notifications.whoops'), trans('cachet.subscriber.email.failure')))
                ->withErrors($e->getMessageBag());
        }

        return cachet_route('subscribe.manage', $subscriber->verify_code)
            ->withSuccess(sprintf('%s %s', trans('dashboard.notifications.awesome'), trans('cachet.subscriber.email.subscribed')));
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_TRY
        (
            (AST_CALL
                (
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_STATIC_CALL)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (NULL))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (SCALAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW)))))
    (AST_TRY
        (
            (AST_CALL
                (
                    (AST_NEW
                        (
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_RETURN
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR))))
                                    (
                                        (AST_STATIC_CALL)))
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_CALL
                                                (
                                                    (SCALAR)))
                                            (AST_CALL
                                                (
                                                    (SCALAR)))))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))))))
        (NULL))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))))))