    public function postTwoFactor()
    {
        // Check that we have a session.
        if ($userId = Session::pull('2fa_id')) {
            $code = Binput::get('code');

            // Maybe a temp login here.
            Auth::loginUsingId($userId);

            $valid = Google2FA::verifyKey(Auth::user()->google_2fa_secret, $code);

            if ($valid) {
                event(new UserPassedTwoAuthEvent(Auth::user()));

                event(new UserLoggedInEvent(Auth::user()));

                return Redirect::intended('dashboard');
            } else {
                event(new UserFailedTwoAuthEvent(Auth::user()));

                // Failed login, log back out.
                Auth::logout();

                return Redirect::route('auth.login')->withError(trans('forms.login.invalid-token'));
            }
        }

        return Redirect::route('auth.login')->withError(trans('forms.login.invalid-token'));
    }

    /**
     * Logs the user out, deleting their session etc.
     *
     * @return \Illuminate\Http\RedirectResponse
     */
||||||||    public function postTwoFactor()
    {
        // Check that we have a session.
        if ($userId = Session::pull('2fa_id')) {
            $code = Binput::get('code');

            // Maybe a temp login here.
            Auth::loginUsingId($userId);

            $valid = Google2FA::verifyKey(Auth::user()->google_2fa_secret, $code);

            if ($valid) {
                event(new UserPassedTwoAuthEvent(Auth::user()));

                event(new UserLoggedInEvent(Auth::user()));

                return Redirect::intended('dashboard');
            } else {
                event(new UserFailedTwoAuthEvent(Auth::user()));

                // Failed login, log back out.
                Auth::logout();

                return cachet_route('auth.login')->withError(trans('forms.login.invalid-token'));
            }
        }

        return cachet_route('auth.login')->withError(trans('forms.login.invalid-token'));
    }

    /**
     * Logs the user out, deleting their session etc.
     *
     * @return \Illuminate\Http\RedirectResponse
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_PROP
                                (AST_STATIC_CALL))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_STATIC_CALL)
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_PROP
                                (AST_STATIC_CALL))
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_RETURN
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (AST_NEW
                                        (
                                            (AST_STATIC_CALL)))))
                            (AST_STATIC_CALL)
                            (AST_RETURN
                                (AST_METHOD_CALL
                                    (AST_CALL
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)))))))