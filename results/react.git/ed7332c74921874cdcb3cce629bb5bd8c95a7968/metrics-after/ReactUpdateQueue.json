[
  {
    "edges": 9,
    "nodes": 6,
    "exits": 1,
    "c": 0,
    "shortName": "[[ReactUpdateQueue.js]]",
    "name": "[[ReactUpdateQueue.js]]",
    "s": 107,
    "b": 4,
    "anons": 0,
    "depth": 0,
    "blockDepth": 1,
    "lineStart": 1,
    "comments": 69,
    "lineEnd": 264,
    "operatorCount": 94,
    "operandCount": 157,
    "operators": {
      "=": true,
      "{": true,
      "(": true,
      "===": true,
      "+": true,
      "if": true,
      ".": true,
      "[": true,
      "||": true
    },
    "operands": {
      "module": true,
      "exports": true,
      "use strict": true,
      "ReactLifeCycle": true,
      "require": true,
      "ReactCurrentOwner": true,
      "ReactElement": true,
      "ReactInstanceMap": true,
      "ReactUpdates": true,
      "assign": true,
      "Object.assign": true,
      "invariant": true,
      "ReactUpdateQueue": true,
      "function": true,
      "internalInstance": true,
      "callback": true,
      "typeof": true,
      "enqueueCallback(...): You called `setProps`, `replaceProps`, ": true,
      "`setState`, `replaceState`, or `forceUpdate` with a callback that ": true,
      "isn't callable.": true,
      "_pendingCallbacks": true,
      "push": true,
      "publicInstance": true,
      "getInternalInstanceReadyForUpdate": true,
      "forceUpdate": true,
      "_pendingForceUpdate": true,
      "true": true,
      "enqueueUpdate": true,
      "completeState": true,
      "replaceState": true,
      "_pendingState": true,
      "partialState": true,
      "setState": true,
      "_instance": true,
      "state": true,
      "partialProps": true,
      "setProps": true,
      "_isTopLevel": true,
      "setProps(...): You called `setProps` on a ": true,
      "component with a parent. This is an anti-pattern since props will ": true,
      "get reactively updated when rendered. Instead, change the owner's ": true,
      "`render` method to pass the correct value as props to the component ": true,
      "where it is created.": true,
      "element": true,
      "_pendingElement": true,
      "_currentElement": true,
      "props": true,
      "cloneAndReplaceProps": true,
      "replaceProps": true,
      "replaceProps(...): You called `replaceProps` on a ": true,
      "newElement": true
    },
    "ins": 0,
    "complexity": 5,
    "mi": "122.80",
    "halsteadLevel": "0.00315",
    "lines": 264,
    "commentPct": 0.26136363636363635,
    "halsteadVolume": "1510",
    "halsteadPotential": "4.75"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 1,
    "c": 0,
    "shortName": "require",
    "name": "[[ReactUpdateQueue.js]].require",
    "s": 0,
    "b": 0,
    "parent": "[[ReactUpdateQueue.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 1,
    "comments": 0,
    "lineEnd": 1,
    "operatorCount": 0,
    "operandCount": 0,
    "operators": {},
    "operands": {},
    "ins": 0,
    "complexity": 1,
    "mi": "NaN.00",
    "halsteadLevel": 0,
    "lines": 1,
    "commentPct": 0,
    "halsteadVolume": 0,
    "halsteadPotential": 0
  },
  {
    "edges": 3,
    "nodes": 3,
    "exits": 1,
    "c": 0,
    "shortName": "enqueueUpdate",
    "name": "[[ReactUpdateQueue.js]].enqueueUpdate",
    "s": 3,
    "b": 1,
    "parent": "[[ReactUpdateQueue.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 23,
    "comments": 4,
    "lineEnd": 29,
    "operatorCount": 5,
    "operandCount": 7,
    "operators": {
      "if": true,
      "!==": true,
      ".": true,
      "(": true
    },
    "operands": {
      "internalInstance": true,
      "_compositeLifeCycleState": true,
      "ReactLifeCycle": true,
      "MOUNTING": true,
      "ReactUpdates": true,
      "enqueueUpdate": true
    },
    "ins": 1,
    "complexity": 2,
    "mi": "129.90",
    "halsteadLevel": "0.175",
    "lines": 7,
    "commentPct": 0.5714285714285714,
    "halsteadVolume": "45.7",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 2,
    "c": 0,
    "shortName": "getInternalInstanceReadyForUpdate",
    "name": "[[ReactUpdateQueue.js]].getInternalInstanceReadyForUpdate",
    "s": 14,
    "b": 0,
    "parent": "[[ReactUpdateQueue.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 33,
    "comments": 0,
    "lineEnd": 58,
    "operatorCount": 15,
    "operandCount": 28,
    "operators": {
      "(": true,
      "==": true,
      ".": true,
      "+": true,
      "=": true,
      "!==": true,
      "return": true
    },
    "operands": {
      "invariant": true,
      "ReactCurrentOwner": true,
      "current": true,
      "null": true,
      "%s(...): Cannot update during an existing state transition ": true,
      "(such as within `render`). Render methods should be a pure function ": true,
      "of props and state.": true,
      "callerName": true,
      "internalInstance": true,
      "ReactInstanceMap": true,
      "get": true,
      "publicInstance": true,
      "%s(...): Can only update a mounted or mounting component. ": true,
      "This usually means you called %s() on an unmounted ": true,
      "component.": true,
      "_compositeLifeCycleState": true,
      "ReactLifeCycle": true,
      "UNMOUNTING": true,
      "%s(...): Cannot call %s() on an unmounting component.": true
    },
    "ins": 2,
    "complexity": 2,
    "mi": "99.455",
    "halsteadLevel": "0.0550",
    "lines": 26,
    "commentPct": 0,
    "halsteadVolume": "211",
    "halsteadPotential": "11.6"
  },
  {
    "edges": 5,
    "nodes": 4,
    "exits": 2,
    "c": 0,
    "shortName": "ReactUpdateQueue.enqueueCallback",
    "name": "[[ReactUpdateQueue.js]].ReactUpdateQueue.enqueueCallback",
    "s": 14,
    "b": 2,
    "parent": "[[ReactUpdateQueue.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 75,
    "comments": 12,
    "lineEnd": 99,
    "operatorCount": 20,
    "operandCount": 29,
    "operators": {
      "(": true,
      "===": true,
      "+": true,
      "=": true,
      "if": true,
      ".": true,
      "return": true,
      "[": true
    },
    "operands": {
      "invariant": true,
      "typeof": true,
      "callback": true,
      "function": true,
      "enqueueCallback(...): You called `setProps`, `replaceProps`, ": true,
      "`setState`, `replaceState`, or `forceUpdate` with a callback that ": true,
      "isn't callable.": true,
      "internalInstance": true,
      "ReactInstanceMap": true,
      "get": true,
      "publicInstance": true,
      "Cannot enqueue a callback on an instance that is unmounted.": true,
      "_compositeLifeCycleState": true,
      "ReactLifeCycle": true,
      "MOUNTING": true,
      "_pendingCallbacks": true,
      "push": true,
      "enqueueUpdate": true
    },
    "ins": 2,
    "complexity": 4,
    "mi": "111.07",
    "halsteadLevel": "0.0483",
    "lines": 25,
    "commentPct": 0.48,
    "halsteadVolume": "240",
    "halsteadPotential": "11.6"
  }
]