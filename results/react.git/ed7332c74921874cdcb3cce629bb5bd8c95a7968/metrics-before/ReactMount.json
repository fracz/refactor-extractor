[
  {
    "edges": 57,
    "nodes": 30,
    "exits": 15,
    "c": 0,
    "shortName": "[[ReactMount.js]]",
    "name": "[[ReactMount.js]]",
    "s": 422,
    "b": 28,
    "anons": 0,
    "depth": 0,
    "blockDepth": 3,
    "lineStart": 1,
    "comments": 178,
    "lineEnd": 828,
    "operatorCount": 278,
    "operandCount": 473,
    "operators": {
      "=": true,
      "{": true,
      "(": true,
      ".": true,
      "if": true,
      "[": true,
      "return": true,
      "&&": true,
      "||": true,
      "===": true,
      "==": true,
      "+": true,
      "?": true,
      "!=": true,
      "!==": true,
      "!": true,
      "-": true
    },
    "operands": {
      "0": true,
      "1": true,
      "9": true,
      "20": true,
      "module": true,
      "exports": true,
      "DOMProperty": true,
      "require": true,
      "ReactBrowserEventEmitter": true,
      "ReactCurrentOwner": true,
      "ReactElement": true,
      "ReactElementValidator": true,
      "ReactEmptyComponent": true,
      "ReactInstanceHandles": true,
      "ReactInstanceMap": true,
      "ReactMarkupChecksum": true,
      "ReactPerf": true,
      "ReactReconciler": true,
      "ReactUpdates": true,
      "emptyObject": true,
      "containsNode": true,
      "getReactRootElementInContainer": true,
      "instantiateReactComponent": true,
      "invariant": true,
      "setInnerHTML": true,
      "shouldUpdateReactComponent": true,
      "warning": true,
      "SEPARATOR": true,
      "ATTR_NAME": true,
      "ID_ATTRIBUTE_NAME": true,
      "nodeCache": true,
      "ELEMENT_NODE_TYPE": true,
      "DOC_NODE_TYPE": true,
      "instancesByReactRootID": true,
      "containersByReactRootID": true,
      "__DEV__": true,
      "rootElementsByReactRootID": true,
      "findComponentRootReusableArray": true,
      "deepestNodeSoFar": true,
      "null": true,
      "ReactMount": true,
      "function": true,
      "container": true,
      "renderCallback": true,
      "prevComponent": true,
      "nextElement": true,
      "callback": true,
      "checkAndWarnForMutatedProps": true,
      "nextProps": true,
      "props": true,
      "scrollMonitor": true,
      "replaceProps": true,
      "getReactRootID": true,
      "nextComponent": true,
      "nodeType": true,
      "_registerComponent(...): Target container is not a DOM element.": true,
      "ensureScrollValueMonitoring": true,
      "reactRootID": true,
      "registerContainer": true,
      "shouldReuseMarkup": true,
      "current": true,
      "_renderNewRootComponent(): Render methods should be a pure function ": true,
      "of props and state; triggering nested component updates from ": true,
      "render is not allowed. If necessary, trigger nested updates in ": true,
      "componentDidUpdate.": true,
      "componentInstance": true,
      "_registerComponent": true,
      "transaction": true,
      "ReactReconcileTransaction": true,
      "getPooled": true,
      "perform": true,
      "mountComponentIntoNode": true,
      "release": true,
      "isValidElement": true,
      "React.render(): Invalid component element.%s": true,
      "typeof": true,
      "string": true,
      " Instead of passing an element string, make sure to instantiate ": true,
      "it by passing it to React.createElement.": true,
      " Instead of passing a component class, make sure to instantiate ": true,
      "undefined": true,
      " This may be caused by unintentionally loading two independent ": true,
      "copies of React.": true,
      "": true,
      "prevElement": true,
      "_currentElement": true,
      "_updateRootComponent": true,
      "getPublicInstance": true,
      "unmountComponentAtNode": true,
      "reactRootElement": true,
      "containerHasReactMarkup": true,
      "isRenderedByReact": true,
      "component": true,
      "_renderNewRootComponent": true,
      "call": true,
      "constructor": true,
      "element": true,
      "createElement": true,
      "render": true,
      "id": true,
      "domNode": true,
      "document": true,
      "getElementById": true,
      "Tried to get element with id of \"%s\" but it is not present on the page.": true,
      "constructAndRenderComponent": true,
      "getReactRootIDFromNodeID": true,
      "createReactRootID": true,
      "unmountComponentAtNode(): Render methods should be a pure function of ": true,
      "props and state; triggering nested component updates from render is ": true,
      "not allowed. If necessary, trigger nested updates in ": true,
      "unmountComponentAtNode(...): Target container is not a DOM element.": true,
      "false": true,
      "unmountComponentFromNode": true,
      "delete": true,
      "true": true,
      "reactRoot": true,
      "findReactContainerForID": true,
      "findComponentRoot": true,
      "node": true,
      "getID": true,
      "charAt": true,
      "markup": true,
      "mountComponentIntoNode(...): Target container is not valid.": true,
      "rootElement": true,
      "canReuseMarkup": true,
      "checksum": true,
      "getAttribute": true,
      "CHECKSUM_ATTR_NAME": true,
      "removeAttribute": true,
      "rootMarkup": true,
      "outerHTML": true,
      "setAttribute": true,
      "diffIndex": true,
      "firstDifferenceIndex": true,
      "difference": true,
      " (client) ": true,
      "substring": true,
      "\n (server) ": true,
      "You're trying to render a component to the document using ": true,
      "server rendering but the checksum was invalid. This usually ": true,
      "means you rendered a different component type or props on ": true,
      "the client from the one on the server, or your render() ": true,
      "methods are impure. React cannot handle this case due to ": true,
      "cross-browser quirks by rendering at the document root. You ": true,
      "should look for environment dependent code in your components ": true,
      "and ensure the props are the same client and server side:\n%s": true,
      "console": true,
      "warn": true,
      "React attempted to reuse markup in a container but the ": true,
      "checksum was invalid. This generally means that you are ": true,
      "using server rendering and the markup generated on the ": true,
      "server was not what the client was expecting. React injected ": true,
      "new markup to compensate which works but you have lost many ": true,
      "of the benefits of server rendering. Instead, figure out ": true,
      "why the markup being generated is different on the client ": true,
      "or server:\n": true,
      "You're trying to render a component to the document but ": true,
      "you didn't use server rendering. We can't do this ": true,
      "without using server rendering due to cross-browser quirks. ": true,
      "See React.renderToString() for server rendering.": true,
      "setID": true,
      "getNode": true,
      "getNodeFromInstance": true,
      "purgeID": true,
      "measureMethods": true,
      "_mountImageIntoNode": true
    },
    "ins": 0,
    "complexity": 43,
    "mi": "198.92",
    "halsteadLevel": "0.000838",
    "lines": 828,
    "commentPct": 0.21497584541062803,
    "halsteadVolume": "5670",
    "halsteadPotential": "4.75"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 1,
    "c": 0,
    "shortName": "require",
    "name": "[[ReactMount.js]].require",
    "s": 0,
    "b": 0,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 1,
    "comments": 0,
    "lineEnd": 1,
    "operatorCount": 0,
    "operandCount": 0,
    "operators": {},
    "operands": {},
    "ins": 0,
    "complexity": 1,
    "mi": "NaN.00",
    "halsteadLevel": 0,
    "lines": 1,
    "commentPct": 0,
    "halsteadVolume": 0,
    "halsteadPotential": 0
  },
  {
    "edges": 5,
    "nodes": 4,
    "exits": 3,
    "c": 0,
    "shortName": "firstDifferenceIndex",
    "name": "[[ReactMount.js]].firstDifferenceIndex",
    "s": 12,
    "b": 2,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 2,
    "lineStart": 64,
    "comments": 6,
    "lineEnd": 71,
    "operatorCount": 19,
    "operandCount": 25,
    "operators": {
      "=": true,
      "(": true,
      ".": true,
      "for": true,
      "<": true,
      "++": true,
      "if": true,
      "!==": true,
      "return": true,
      "?": true,
      "===": true,
      "-": true
    },
    "operands": {
      "0": true,
      "1": true,
      "minLen": true,
      "Math": true,
      "min": true,
      "string1": true,
      "length": true,
      "string2": true,
      "i": true,
      "charAt": true
    },
    "ins": 2,
    "complexity": 5,
    "mi": "123.87",
    "halsteadLevel": "0.0560",
    "lines": 8,
    "commentPct": 0.75,
    "halsteadVolume": "207",
    "halsteadPotential": "11.6"
  },
  {
    "edges": 3,
    "nodes": 3,
    "exits": 2,
    "c": 0,
    "shortName": "getReactRootID",
    "name": "[[ReactMount.js]].getReactRootID",
    "s": 3,
    "b": 1,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 78,
    "comments": 0,
    "lineEnd": 80,
    "operatorCount": 5,
    "operandCount": 7,
    "operators": {
      "=": true,
      "(": true,
      "return": true,
      "&&": true
    },
    "operands": {
      "rootElement": true,
      "getReactRootElementInContainer": true,
      "container": true,
      "ReactMount": true,
      "getID": true
    },
    "ins": 1,
    "complexity": 3,
    "mi": "139.54",
    "halsteadLevel": "0.180",
    "lines": 3,
    "commentPct": 0,
    "halsteadVolume": "44.4",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 7,
    "nodes": 5,
    "exits": 2,
    "c": 0,
    "shortName": "getID",
    "name": "[[ReactMount.js]].getID",
    "s": 17,
    "b": 3,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 3,
    "lineStart": 93,
    "comments": 0,
    "lineEnd": 112,
    "operatorCount": 17,
    "operandCount": 26,
    "operators": {
      "=": true,
      "(": true,
      "if": true,
      "[": true,
      "!==": true,
      "!": true,
      "return": true
    },
    "operands": {
      "id": true,
      "internalGetID": true,
      "node": true,
      "nodeCache": true,
      "hasOwnProperty": true,
      "cached": true,
      "invariant": true,
      "isValid": true,
      "ReactMount: Two valid but unequal nodes with the same `%s`: %s": true,
      "ATTR_NAME": true
    },
    "ins": 1,
    "complexity": 5,
    "mi": "103.39",
    "halsteadLevel": "0.0423",
    "lines": 20,
    "commentPct": 0,
    "halsteadVolume": "189",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 7,
    "nodes": 5,
    "exits": 2,
    "c": 0,
    "shortName": "internalGetID",
    "name": "[[ReactMount.js]].internalGetID",
    "s": 2,
    "b": 3,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 115,
    "comments": 3,
    "lineEnd": 119,
    "operatorCount": 6,
    "operandCount": 7,
    "operators": {
      "return": true,
      "&&": true,
      ".": true,
      "||": true,
      "(": true
    },
    "operands": {
      "node": true,
      "getAttribute": true,
      "ATTR_NAME": true,
      "": true
    },
    "ins": 1,
    "complexity": 5,
    "mi": "133.50",
    "halsteadLevel": "0.166",
    "lines": 5,
    "commentPct": 0.6,
    "halsteadVolume": "48.1",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 3,
    "nodes": 3,
    "exits": 1,
    "c": 0,
    "shortName": "setID",
    "name": "[[ReactMount.js]].setID",
    "s": 8,
    "b": 1,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 128,
    "comments": 0,
    "lineEnd": 134,
    "operatorCount": 8,
    "operandCount": 15,
    "operators": {
      "=": true,
      "(": true,
      "if": true,
      "!==": true,
      "[": true
    },
    "operands": {
      "oldID": true,
      "internalGetID": true,
      "node": true,
      "id": true,
      "delete": true,
      "nodeCache": true,
      "setAttribute": true,
      "ATTR_NAME": true
    },
    "ins": 2,
    "complexity": 2,
    "mi": "123.48",
    "halsteadLevel": "0.123",
    "lines": 7,
    "commentPct": 0,
    "halsteadVolume": "94.0",
    "halsteadPotential": "11.6"
  },
  {
    "edges": 5,
    "nodes": 4,
    "exits": 2,
    "c": 0,
    "shortName": "getNode",
    "name": "[[ReactMount.js]].getNode",
    "s": 6,
    "b": 2,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 144,
    "comments": 0,
    "lineEnd": 148,
    "operatorCount": 12,
    "operandCount": 14,
    "operators": {
      "if": true,
      "||": true,
      "!": true,
      "(": true,
      "[": true,
      "=": true,
      "return": true
    },
    "operands": {
      "nodeCache": true,
      "hasOwnProperty": true,
      "id": true,
      "isValid": true,
      "ReactMount": true,
      "findReactNodeByID": true
    },
    "ins": 1,
    "complexity": 4,
    "mi": "128.06",
    "halsteadLevel": "0.0755",
    "lines": 5,
    "commentPct": 0,
    "halsteadVolume": "106",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 7,
    "nodes": 5,
    "exits": 3,
    "c": 0,
    "shortName": "getNodeFromInstance",
    "name": "[[ReactMount.js]].getNodeFromInstance",
    "s": 11,
    "b": 3,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 158,
    "comments": 0,
    "lineEnd": 166,
    "operatorCount": 18,
    "operandCount": 23,
    "operators": {
      "=": true,
      ".": true,
      "(": true,
      "if": true,
      "return": true,
      "||": true,
      "!": true,
      "[": true
    },
    "operands": {
      "id": true,
      "ReactInstanceMap": true,
      "get": true,
      "instance": true,
      "_rootNodeID": true,
      "ReactEmptyComponent": true,
      "isNullComponentID": true,
      "null": true,
      "nodeCache": true,
      "hasOwnProperty": true,
      "isValid": true,
      "ReactMount": true,
      "findReactNodeByID": true
    },
    "ins": 1,
    "complexity": 6,
    "mi": "116.08",
    "halsteadLevel": "0.0421",
    "lines": 9,
    "commentPct": 0,
    "halsteadVolume": "190",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 7,
    "nodes": 5,
    "exits": 3,
    "c": 0,
    "shortName": "isValid",
    "name": "[[ReactMount.js]].isValid",
    "s": 13,
    "b": 3,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 2,
    "lineStart": 179,
    "comments": 0,
    "lineEnd": 193,
    "operatorCount": 11,
    "operandCount": 17,
    "operators": {
      "if": true,
      "(": true,
      "===": true,
      "=": true,
      "&&": true,
      "return": true
    },
    "operands": {
      "node": true,
      "invariant": true,
      "internalGetID": true,
      "id": true,
      "ReactMount: Unexpected modification of `%s`": true,
      "ATTR_NAME": true,
      "container": true,
      "ReactMount": true,
      "findReactContainerForID": true,
      "containsNode": true,
      "true": true,
      "false": true
    },
    "ins": 2,
    "complexity": 6,
    "mi": "109.24",
    "halsteadLevel": "0.0928",
    "lines": 15,
    "commentPct": 0,
    "halsteadVolume": "125",
    "halsteadPotential": "11.6"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 1,
    "c": 0,
    "shortName": "purgeID",
    "name": "[[ReactMount.js]].purgeID",
    "s": 2,
    "b": 0,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 201,
    "comments": 0,
    "lineEnd": 202,
    "operatorCount": 1,
    "operandCount": 3,
    "operators": {
      "[": true
    },
    "operands": {
      "delete": true,
      "nodeCache": true,
      "id": true
    },
    "ins": 1,
    "complexity": 1,
    "mi": "151.04",
    "halsteadLevel": "0.667",
    "lines": 2,
    "commentPct": 0,
    "halsteadVolume": "12.0",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 5,
    "nodes": 4,
    "exits": 2,
    "c": 0,
    "shortName": "findDeepestCachedAncestorImpl",
    "name": "[[ReactMount.js]].findDeepestCachedAncestorImpl",
    "s": 7,
    "b": 2,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 206,
    "comments": 2,
    "lineEnd": 213,
    "operatorCount": 7,
    "operandCount": 10,
    "operators": {
      "=": true,
      "[": true,
      "if": true,
      "&&": true,
      "(": true,
      "return": true
    },
    "operands": {
      "ancestor": true,
      "nodeCache": true,
      "ancestorID": true,
      "isValid": true,
      "deepestNodeSoFar": true,
      "false": true
    },
    "ins": 1,
    "complexity": 4,
    "mi": "123.94",
    "halsteadLevel": "0.118",
    "lines": 8,
    "commentPct": 0.25,
    "halsteadVolume": "68.0",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 2,
    "c": 0,
    "shortName": "findDeepestCachedAncestor",
    "name": "[[ReactMount.js]].findDeepestCachedAncestor",
    "s": 7,
    "b": 0,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 220,
    "comments": 0,
    "lineEnd": 229,
    "operatorCount": 5,
    "operandCount": 11,
    "operators": {
      "=": true,
      "(": true,
      "return": true
    },
    "operands": {
      "deepestNodeSoFar": true,
      "null": true,
      "ReactInstanceHandles": true,
      "traverseAncestors": true,
      "targetID": true,
      "findDeepestCachedAncestorImpl": true,
      "foundNode": true
    },
    "ins": 1,
    "complexity": 2,
    "mi": "119.18",
    "halsteadLevel": "0.131",
    "lines": 10,
    "commentPct": 0,
    "halsteadVolume": "60.9",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 1,
    "nodes": 2,
    "exits": 1,
    "c": 0,
    "shortName": "mountComponentIntoNode",
    "name": "[[ReactMount.js]].mountComponentIntoNode",
    "s": 8,
    "b": 0,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 0,
    "lineStart": 240,
    "comments": 0,
    "lineEnd": 249,
    "operatorCount": 5,
    "operandCount": 15,
    "operators": {
      "=": true,
      "(": true,
      ".": true
    },
    "operands": {
      "markup": true,
      "ReactReconciler": true,
      "mountComponent": true,
      "this": true,
      "rootID": true,
      "transaction": true,
      "emptyObject": true,
      "_isTopLevel": true,
      "true": true,
      "ReactMount": true,
      "_mountImageIntoNode": true,
      "container": true,
      "shouldReuseMarkup": true
    },
    "ins": 4,
    "complexity": 1,
    "mi": "118.22",
    "halsteadLevel": "0.228",
    "lines": 10,
    "commentPct": 0,
    "halsteadVolume": "86.4",
    "halsteadPotential": "19.7"
  },
  {
    "edges": 3,
    "nodes": 3,
    "exits": 1,
    "c": 0,
    "shortName": "ReactMount.unmountComponentFromNode",
    "name": "[[ReactMount.js]].ReactMount.unmountComponentFromNode",
    "s": 7,
    "b": 1,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 558,
    "comments": 10,
    "lineEnd": 567,
    "operatorCount": 9,
    "operandCount": 16,
    "operators": {
      "(": true,
      "if": true,
      "===": true,
      ".": true,
      "=": true
    },
    "operands": {
      "ReactReconciler": true,
      "unmountComponent": true,
      "instance": true,
      "container": true,
      "nodeType": true,
      "DOC_NODE_TYPE": true,
      "documentElement": true,
      "while": true,
      "lastChild": true,
      "removeChild": true
    },
    "ins": 2,
    "complexity": 2,
    "mi": "127.19",
    "halsteadLevel": "0.109",
    "lines": 10,
    "commentPct": 1,
    "halsteadVolume": "106",
    "halsteadPotential": "11.6"
  },
  {
    "edges": 11,
    "nodes": 7,
    "exits": 2,
    "c": 0,
    "shortName": "ReactMount.findReactContainerForID",
    "name": "[[ReactMount.js]].ReactMount.findReactContainerForID",
    "s": 17,
    "b": 5,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 3,
    "lineStart": 578,
    "comments": 13,
    "lineEnd": 609,
    "operatorCount": 26,
    "operandCount": 37,
    "operators": {
      "=": true,
      "(": true,
      "[": true,
      "if": true,
      "&&": true,
      "!==": true,
      ".": true,
      "===": true,
      "+": true,
      "return": true
    },
    "operands": {
      "reactRootID": true,
      "ReactInstanceHandles": true,
      "getReactRootIDFromNodeID": true,
      "id": true,
      "container": true,
      "containersByReactRootID": true,
      "__DEV__": true,
      "rootElement": true,
      "rootElementsByReactRootID": true,
      "parentNode": true,
      "invariant": true,
      "internalGetID": true,
      "ReactMount: Root element ID differed from reactRootID.": true,
      "containerChild": true,
      "firstChild": true,
      "console": true,
      "warn": true,
      "ReactMount: Root element has been removed from its original ": true,
      "container. New container:": true
    },
    "ins": 1,
    "complexity": 7,
    "mi": "106.41",
    "halsteadLevel": "0.0252",
    "lines": 32,
    "commentPct": 0.40625,
    "halsteadVolume": "318",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 5,
    "nodes": 4,
    "exits": 3,
    "c": 0,
    "shortName": "ReactMount.getFirstReactDOM",
    "name": "[[ReactMount.js]].ReactMount.getFirstReactDOM",
    "s": 10,
    "b": 2,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 1,
    "lineStart": 647,
    "comments": 8,
    "lineEnd": 655,
    "operatorCount": 10,
    "operandCount": 15,
    "operators": {
      "=": true,
      "&&": true,
      "!==": true,
      ".": true,
      "if": true,
      "(": true,
      "return": true
    },
    "operands": {
      "current": true,
      "node": true,
      "while": true,
      "parentNode": true,
      "ReactMount": true,
      "isRenderedByReact": true,
      "null": true
    },
    "ins": 1,
    "complexity": 5,
    "mi": "126.29",
    "halsteadLevel": "0.0769",
    "lines": 9,
    "commentPct": 0.8888888888888888,
    "halsteadVolume": "104",
    "halsteadPotential": "8.00"
  },
  {
    "edges": 11,
    "nodes": 7,
    "exits": 2,
    "c": 0,
    "shortName": "ReactMount.findComponentRoot",
    "name": "[[ReactMount.js]].ReactMount.findComponentRoot",
    "s": 33,
    "b": 5,
    "parent": "[[ReactMount.js]]",
    "anons": 0,
    "depth": 1,
    "blockDepth": 3,
    "lineStart": 668,
    "comments": 26,
    "lineEnd": 733,
    "operatorCount": 45,
    "operandCount": 72,
    "operators": {
      "=": true,
      "||": true,
      "(": true,
      "[": true,
      ".": true,
      "<": true,
      "++": true,
      "if": true,
      "===": true,
      "return": true,
      "+": true
    },
    "operands": {
      "0": true,
      "1": true,
      "firstChildren": true,
      "findComponentRootReusableArray": true,
      "childIndex": true,
      "deepestAncestor": true,
      "findDeepestCachedAncestor": true,
      "targetID": true,
      "ancestorNode": true,
      "firstChild": true,
      "length": true,
      "while": true,
      "child": true,
      "childID": true,
      "ReactMount": true,
      "getID": true,
      "targetChild": true,
      "ReactInstanceHandles": true,
      "isAncestorIDOf": true,
      "push": true,
      "nextSibling": true,
      "invariant": true,
      "false": true,
      "findComponentRoot(..., %s): Unable to find element. This probably ": true,
      "means the DOM was unexpectedly mutated (e.g., by the browser), ": true,
      "usually due to forgetting a <tbody> when using tables, nesting tags ": true,
      "like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ": true,
      "parent. ": true,
      "Try inspecting the child nodes of the element with React ID `%s`.": true
    },
    "ins": 2,
    "complexity": 7,
    "mi": "105.16",
    "halsteadLevel": "0.0182",
    "lines": 66,
    "commentPct": 0.3939393939393939,
    "halsteadVolume": "639",
    "halsteadPotential": "11.6"
  }
]