||||||||    public function it_can_persist_a_style_on_the_table()
    {
        ob_start();

        $this->cli->redTable([
                [
                    'cell1' => 'Cell 1',
                    'cell2' => 'Cell 2',
                    'cell3' => 'Cell 3',
                    'cell4' => 'Cell 4',
                ],
            ]);

        $result = ob_get_contents();

        ob_end_clean();

        $should_be = "\e[31m-------------------------------------\e[0m\n";
        $should_be .= "\e[31m| cell1  | cell2  | cell3  | cell4  |\e[0m\n";
        $should_be .= "\e[31m=====================================\e[0m\n";
        $should_be .= "\e[31m| Cell 1 | Cell 2 | Cell 3 | Cell 4 |\e[0m\n";
        $should_be .= "\e[31m-------------------------------------\e[0m\n";

        $this->assertSame($should_be, $result);
    }

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL)
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))