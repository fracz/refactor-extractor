    public function tagReplace()
    {
        $start_code = $this->start($this->currentStyleCode());

        return array_map(function ($item) use ($start_code) {
            // We have to re-start the parent style after each tag is replaced
            if ($item == $this->end()) {
                return $item . $start_code;
            }

            return $item;
        }, $this->tag_replace);
    }

    /**
     * Add a color to the available colors
     *
     * @param string $color
     * @param string $code
     */

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (
                                    (AST_RETURN
                                        (AST_BINARY_OP
                                            (AST_VAR)
                                            (AST_VAR))))))
                        (AST_RETURN
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR))))))||||||||