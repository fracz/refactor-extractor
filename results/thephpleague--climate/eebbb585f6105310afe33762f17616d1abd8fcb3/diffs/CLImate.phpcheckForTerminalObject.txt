    protected function checkForTerminalObject( $name, $arguments )
    {
        $object_class = 'JoeTannenbaum\\CLImate\\TerminalObject\\' . ucwords( $name );

        if ( class_exists( $object_class ) )
        {
            $reflect     = new \ReflectionClass( $object_class );
            $obj         = $reflect->newInstanceArgs( $arguments );

            $results = $obj->result();

            if ( !is_array( $results ) )
            {
                $results = [ $results ];
            }

            $this->style->persistant();

            foreach ( $results as $result )
            {
                $this->out( $result );
            }

            $this->style->resetPersistant();

            return TRUE;
        }

        return FALSE;
    }

    /**
     * Magic method for anything called that doesn't exist
     *
     *
     * @param string $name
     * @param array $arguments
     */

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_VAR)
                                        (NULL)))))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||