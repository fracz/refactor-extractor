||||||||    protected function configure()
    {
        $this->setName('project:parse')
            ->setDescription('')
            ->setHelp(
<<<HELP
The parse task uses the source files defined either by -f or -d options and
generates a structure file (structure.xml) at the target location.
HELP
            )
            ->addOption(
                'target', 't',
                InputOption::VALUE_REQUIRED,
                'Path where to store the generated output'
            )
            ->addOption(
                'filename', 'f',
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Comma-separated list of files to parse. The wildcards ? and * '
                .'are supported'
            )
            ->addOption(
                'directory', 'd',
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Comma-separated list of directories to (recursively) parse'
            )
            ->addOption(
                'extensions', 'e',
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Path where to store the generated output',
                array('php','php3','phtml')
            )
            ->addOption(
                'ignore', 'i',
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Comma-separated list of file(s) and directories that will be '
                . 'ignored. Wildcards * and ? are supported'
            )
            ->addOption(
                'ignore-tags', null,
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Comma-separated list of tags that will be ignored, defaults to '
                .'none. package, subpackage and ignore may not be ignored.'
            )
            ->addOption(
                'hidden', null,
                InputOption::VALUE_NONE,
                'set to on to descend into hidden directories '
                . '(directories starting with \'.\'), default is on'
            )
            ->addOption(
                'ignore-symlinks', null,
                InputOption::VALUE_NONE,
                'Ignore symlinks to other files or directories, default is on'
            )
            ->addOption(
                'markers', 'm',
                InputOption::VALUE_OPTIONAL | InputOption::VALUE_IS_ARRAY,
                'Comma-separated list of markers/tags to filter',
                array('TODO', 'FIXME')
            )
            ->addOption(
                'title', null,
                InputOption::VALUE_OPTIONAL,
                'Sets the title for this project; default is the phpDocumentor '
                .'logo'
            )
            ->addOption(
                'force', null,
                InputOption::VALUE_NONE,
                'Forces a full build of the documentation, does not increment '
                .'existing documentation'
            )
            ->addOption(
                'validate', null,
                InputOption::VALUE_NONE,
                'Validates every processed file using PHP Lint, costs a lot of '
                .'performance'
            )
            ->addOption(
                'visibility', null,
                InputOption::VALUE_OPTIONAL,
                'Specifies the parse visibility that should be displayed in the '
                .'documentation (comma seperated e.g. "public,protected")'
            )
            ->addOption(
                'defaultpackagename', null,
                InputOption::VALUE_OPTIONAL,
                'Name to use for the default package.',
                'Default'
            )
            ->addOption(
                'sourcecode', null,
                InputOption::VALUE_NONE,
                'Whether to include syntax highlighted source code'
            )
            ->addOption(
                'progressbar', 'p',
                InputOption::VALUE_NONE,
                'Whether to show a progress bar; will automatically quiet logging '
                .'to stdout'
            );
    }

    /**
    * Returns the target location where to store the structure.xml.
    *
    * @throws \InvalidArgumentException
    *
    * @return string
    */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_METHOD_CALL
                                                        (AST_METHOD_CALL
                                                            (AST_METHOD_CALL
                                                                (AST_METHOD_CALL
                                                                    (AST_METHOD_CALL
                                                                        (AST_METHOD_CALL
                                                                            (AST_METHOD_CALL
                                                                                (AST_VAR)
                                                                                (
                                                                                    (SCALAR)))
                                                                            (
                                                                                (SCALAR)))
                                                                        (
                                                                            (SCALAR)))
                                                                    (
                                                                        (SCALAR)
                                                                        (SCALAR)
                                                                        (AST_CLASS_CONST
                                                                            (SCALAR))
                                                                        (SCALAR)))
                                                                (
                                                                    (SCALAR)
                                                                    (SCALAR)
                                                                    (AST_BINARY_OP
                                                                        (AST_CLASS_CONST
                                                                            (SCALAR))
                                                                        (AST_CLASS_CONST
                                                                            (SCALAR)))
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (SCALAR))))
                                                            (
                                                                (SCALAR)
                                                                (SCALAR)
                                                                (AST_BINARY_OP
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))
                                                                (SCALAR)))
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_BINARY_OP
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))
                                                                (AST_CLASS_CONST
                                                                    (SCALAR)))
                                                            (SCALAR)
                                                            (AST_ARRAY
                                                                (AST_ARRAY_ELEM
                                                                    (SCALAR)
                                                                    (NULL))
                                                                (AST_ARRAY_ELEM
                                                                    (SCALAR)
                                                                    (NULL))
                                                                (AST_ARRAY_ELEM
                                                                    (SCALAR)
                                                                    (NULL)))))
                                                    (
                                                        (SCALAR)
                                                        (SCALAR)
                                                        (AST_BINARY_OP
                                                            (AST_CLASS_CONST
                                                                (SCALAR))
                                                            (AST_CLASS_CONST
                                                                (SCALAR)))
                                                        (AST_BINARY_OP
                                                            (SCALAR)
                                                            (SCALAR))))
                                                (
                                                    (SCALAR)
                                                    (AST_CONST)
                                                    (AST_BINARY_OP
                                                        (AST_CLASS_CONST
                                                            (SCALAR))
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))
                                                    (AST_BINARY_OP
                                                        (SCALAR)
                                                        (SCALAR))))
                                            (
                                                (SCALAR)
                                                (AST_CONST)
                                                (AST_CLASS_CONST
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (SCALAR))))
                                        (
                                            (SCALAR)
                                            (AST_CONST)
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (AST_CLASS_CONST
                                                (SCALAR)))
                                        (SCALAR)
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (NULL)))))
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))))
                            (
                                (SCALAR)
                                (AST_CONST)
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (SCALAR))))
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CLASS_CONST
                                (SCALAR))
                            (AST_BINARY_OP
                                (SCALAR)
                                (SCALAR))))
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (SCALAR))))
                (
                    (SCALAR)
                    (AST_CONST)
                    (AST_CLASS_CONST
                        (SCALAR))
                    (SCALAR)
                    (SCALAR)))
            (
                (SCALAR)
                (AST_CONST)
                (AST_CLASS_CONST
                    (SCALAR))
                (SCALAR)))
        (
            (SCALAR)
            (SCALAR)
            (AST_CLASS_CONST
                (SCALAR))
            (AST_BINARY_OP
                (SCALAR)
                (SCALAR)))))