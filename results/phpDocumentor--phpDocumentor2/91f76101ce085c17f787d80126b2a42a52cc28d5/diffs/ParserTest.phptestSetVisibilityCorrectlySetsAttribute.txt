    public function testSetVisibilityCorrectlySetsAttribute()
    {
        $this->fixture->setVisibility('public,protected,private');

        $this->assertAttributeEquals(
            array('public', 'protected', 'private'), 'visibility', $this->fixture
        );
    }
}||||||||    public function testSetVisibilityCorrectlySetsAttribute()
    {
        $visibility = array('public', 'protected', 'private');

        $this->fixture->setVisibility(implode(',', $visibility));

        $this->assertAttributeEquals($visibility, 'visibility', $this->fixture);
        $this->assertEquals($visibility, $this->fixture->getVisibility());
    }

    /**
     * Tests whether the exporter defaults to a predefined exporter if none is provided and whether one can be set
     * using setExporter.
     *
     * @covers phpDocumentor\Parser\Parser::setExporter
     * @covers phpDocumentor\Parser\Parser::getExporter
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))