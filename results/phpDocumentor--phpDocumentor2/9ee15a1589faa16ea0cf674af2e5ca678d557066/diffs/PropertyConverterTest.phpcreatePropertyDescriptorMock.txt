||||||||    protected function createPropertyDescriptorMock()
    {
        $property = m::mock('phpDocumentor\\Descriptor\\PropertyDescriptor');
        $property->shouldReceive('getLine')->andReturn(100);
        $property->shouldReceive('isStatic')->andReturn(false);
        $property->shouldReceive('getVisibility')->andReturn('protected');
        $property->shouldReceive('getName')->andReturn('Property');
        $property->shouldReceive('getFullyQualifiedStructuralElementName')->andReturn('phpDocumentor\Class::$Property');
        $property->shouldReceive('getDefault')->andReturn('defaultString');
        $property->shouldIgnoreMissing();

        return $property;
    }

    /**
     * Creates the PropertyConverter fixture with a DocBlock mock.
     *
     * @param PropertyDescriptor $property
     *
     * @return PropertyConverter
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))