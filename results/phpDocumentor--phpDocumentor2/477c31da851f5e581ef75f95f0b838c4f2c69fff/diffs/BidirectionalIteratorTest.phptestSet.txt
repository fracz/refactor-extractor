  public function testSet()
  {
    $this->assertEquals(10, $this->fixture[9]);
    $this->fixture[9] = 100;
    $this->assertEquals(100, $this->fixture[9]);

    $this->setExpectedException('Exception');
    $this->fixture[11] = 11;
  }

  /**
   * Tests whether unsetting throws an exception.
   *
   * @return void
   */
||||||||  public function testSet()
  {
    $this->assertEquals(10, $this->fixture[9]);
    $this->fixture[9] = 100;
    $this->assertEquals(100, $this->fixture[9]);

//    $this->setExpectedException('Exception');
//    $this->fixture[11] = 11;
  }

  /**
   * Tests whether unsetting throws an exception.
   *
   * @return void
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR)))))