||||||||    public function testClearingReferencesClearsMethodsConstantsAndProperties()
    {
        $constants = m::mock('phpDocumentor\Descriptor\Collection');
        $properties = clone $constants;
        $methods = clone $constants;
        $constants->shouldReceive('clearReferences')->once();
        $properties->shouldReceive('clearReferences')->once();
        $methods->shouldReceive('clearReferences')->once();

        $this->fixture->setConstants($constants);
        $this->fixture->setMethods($methods);
        $this->fixture->setProperties($properties);

        // without an assert PHPUnit thinks this test is incomplete; but we only want to check mocks,
        // so we make a faux assert
        $this->assertNull($this->fixture->clearReferences());
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLONE
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))))))