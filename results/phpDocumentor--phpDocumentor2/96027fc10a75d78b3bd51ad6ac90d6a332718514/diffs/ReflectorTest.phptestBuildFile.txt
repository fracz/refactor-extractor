||||||||    public function testBuildFile()
    {
        $path = '/my/path.txt';

        $reflector = $this->createFileReflectorMock($path);

        $test = $this;
        $file_descriptor_test = m::on(function($file_descriptor) use ($path, $test) {
            $test->assertInstanceOf('phpDocumentor\Descriptor\FileDescriptor', $file_descriptor);
            $test->assertEquals($path, $file_descriptor->getPath());
            $test->assertEquals(0, $file_descriptor->getLine());
            $test->assertEquals('path.txt', $file_descriptor->getName());
            $test->assertEquals('short', $file_descriptor->getSummary());
            $test->assertEquals('long', $file_descriptor->getDescription());
            $test->assertCount(1, $file_descriptor->getTags());
            $test->assertEquals('contents', $file_descriptor->getSource());
            return true;
        });

        $project = m::mock('phpDocumentor\Descriptor\ProjectDescriptor')
            ->shouldReceive('getFiles')->andReturn(
                m::mock('ArrayObject')->shouldReceive('offsetSet')->once()->with($path, $file_descriptor_test)->getMock()
            )
            ->getMock();

        $fixture = new Reflector($project);
        $fixture->buildFile($reflector);
    }

    /**
     * @param $path
     * @return mixed
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR)
                        (AST_CLOSURE_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (AST_RETURN
                            (AST_CONST)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))
                (
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR))))
                            (
                                (AST_VAR)
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))