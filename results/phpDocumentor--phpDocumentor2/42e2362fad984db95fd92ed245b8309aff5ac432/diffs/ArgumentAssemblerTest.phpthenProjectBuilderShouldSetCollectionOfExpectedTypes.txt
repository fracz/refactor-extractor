||||||||    protected function thenProjectBuilderShouldSetCollectionOfExpectedTypes($expected)
    {
        $types = new Collection($expected);
        $this->builderMock->shouldReceive('buildDescriptor')
            ->with(
                m::on(
                    function ($value) use ($expected) {
                        return $value instanceof Collection && $value->getArrayCopy() == $expected;
                    }
                )
            )
            ->andReturn($types);
        return $types;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_CLOSURE
                            (NO_PARAM_TYPENO_PARAM_DEFAULT)
                            (AST_CLOSURE_USES
                                (AST_CLOSURE_VAR))
                            (
                                (AST_RETURN
                                    (AST_BINARY_OP
                                        (AST_INSTANCEOF
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (AST_VAR))))))))))
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))