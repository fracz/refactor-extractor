||||||||    protected function overwriteTypeAndDescriptionFromParamTag(
        ArgumentReflector  $argument,
        ParamDescriptor    $paramDescriptor,
        ArgumentDescriptor $argumentDescriptor
    ) {
        if ($paramDescriptor->getVariableName() != $argument->getName()) {
            return;
        }

        $argumentDescriptor->setDescription($paramDescriptor->getDescription());
        $argumentDescriptor->setTypes(
            $paramDescriptor->getTypes() ?: $this->builder->buildDescriptor(
                new Collection(array($argument->getType() ?: 'mixed'))
            )
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONDITIONAL
                (AST_METHOD_CALL
                    (AST_VAR))
                (NULL)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_NEW
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CONDITIONAL
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (NULL)
                                            (SCALAR))
                                        (NULL)))))))))))