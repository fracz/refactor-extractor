    public function getIgnorePatterns()
    {
        // extract first element; second is a count
        $result = array();
        foreach ($this->ignore_patterns as $pattern) {
            $result[] = $pattern[0];
        }
        return $result;
    }

    /**
     * Adds an ignore pattern to the collection.
     *
     * @param string $pattern Glob-like pattern to filter files with.
     *
     * @return void
     */
||||||||    public function getIgnorePatterns()
    {
        return $this->ignore_patterns;
    }

    /**
     * Adds an ignore pattern to the collection.
     *
     * @param string $pattern Glob-like pattern to filter files with.
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))