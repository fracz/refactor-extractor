    protected function addPlugins()
    {
        /** @var Configuration $config */
        $config = $this['config2'];

        if (! $config->getPlugins()) {
            $this->register(new Plugin\Core\ServiceProvider());
            $this->register(new Plugin\Scrybe\ServiceProvider());
            return;
        }

        $app = $this;

        array_walk(
            $config->getPlugins(),
            function ($plugin) use ($app) {
                /** @var Configuration\Plugin $plugin */
                $provider = (strpos($plugin->getPath(), '\\') === false)
                    ? sprintf('phpDocumentor\\Plugin\\%s\\ServiceProvider', $plugin->getPath())
                    : $plugin->getPath();
                if (!class_exists($provider)) {
                    throw new \RuntimeException('Loading Service Provider for ' . $provider . ' failed.');
                }

                try {
                    $app->register(new $provider);
                } catch (\InvalidArgumentException $e) {
                    throw new \RuntimeException($e->getMessage());
                }
            }
        );
    }

    /**
     * If the timezone is not set anywhere, set it to UTC.
     *
     * This is done to prevent any warnings being outputted in relation to using
     * date/time functions. What is checked is php.ini, and if the PHP version
     * is prior to 5.4, the TZ environment variable.
     *
     * @link http://php.net/manual/en/function.date-default-timezone-get.php for more information how PHP determines the
     *     default timezone.
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_NEW)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_VAR))
    (AST_CALL
        (
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (AST_CLOSURE_USES
                    (AST_CLOSURE_VAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONDITIONAL
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (SCALAR)))
                                (AST_CONST))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR))))
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_THROW
                                    (AST_NEW
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))))))))
                    (AST_TRY
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_NEW
                                        (AST_VAR)))))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))))
                        (NULL)))))))||||||||