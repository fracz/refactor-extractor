||||||||    public function addTranslationFolder($folder, array $domains = array())
    {
        if (empty($domains)) {
            $domains = array(self::DEFAULT_DOMAIN);
        }

        foreach ($domains as $domain) {
            $this->addTranslationsUsingPattern($folder, $domain);
        }

        return $this;
    }

    /**
     * Adds a series of translation files given a pattern.
     *
     * This method will search the base directory for a series of files matching the given pattern (where %s is replaces
     * by the two-letter locale shorthand) and adds any translations to the translation table.
     *
     * @param string $baseDir    Directory to search in (not-recursive)
     * @param string $textDomain The domain to assign the translation messages to.
     * @param string $pattern    The pattern used to load files for all languages, one variable `%s` is supported and
     *     is replaced with the {@link http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes ISO-639-1 code} for each
     *     locale that is requested by the translate method.
     *
     * @internal this method is not to be used by consumers; it is an extension of the Zend Translator component
     *     and is overridden to clear the messages caching array so it may be rebuild.
     *
     * @see self::addTranslationFolder() to provide a series of translation files.
     *
     * @return $this|ZendTranslator
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (NULL)))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))