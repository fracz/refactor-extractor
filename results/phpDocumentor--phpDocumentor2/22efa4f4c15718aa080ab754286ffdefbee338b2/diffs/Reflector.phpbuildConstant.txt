    public function buildConstant($data, $container = null)
    {
        $assembler = new ConstantAssembler();
        $constantDescriptor = $assembler->create($data);

        $constantDescriptor->setFullyQualifiedStructuralElementName(
            (($container)
                ? $container->getFullyQualifiedStructuralElementName() . '::'
                : '\\' . $data->getNamespace() . '\\')
            . $constantDescriptor->getFullyQualifiedStructuralElementName()
        );

        $constantDescriptor = $this->filterInternalTag($constantDescriptor);

        if ($constantDescriptor) {
            if ($container) {
                $constantDescriptor->setParent($container);
                $this->addToContainer($constantDescriptor, $container->getConstants());
            }

            $this->validateElement($data, $constantDescriptor);
        }

        return $constantDescriptor;
    }

    /**
     * @param FunctionReflector $data
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_VAR)))||||||||