    protected function filterSubpackageInheritance(DocBlockNode $parent, array &$tags)
    {
        // find the name of the super's package
        /** @var \DOMElement $super_package  */
        $super_package = current($parent->getTagsByName('package'));
        $super_package_name = $super_package
                ? $super_package->getAttribute('description') : null;

        /** @var \DOMElement $local_package  */
        $local_package = current($this->getTagsByName('package'));
        $local_package_name = $local_package
                ? $local_package->getAttribute('description') : null;

        // if the package names do not match; do not inherit the subpackage
        if ($super_package_name != $local_package_name) {
            foreach ($tags as $key => $type) {
                if ($type == 'subpackage') {
                    unset($tags[$key]);
                    break;
                }
            }
        }
    }

    /**
     * Copies tag nodes from the given $parent to this DocBlock if the name
     * occurs in the given $tags array.
     *
     * @param DocBlockNode $parent Parent node to inherit tags from.
     * @param string[]     $tags   List of inheritable tags.
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_UNSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_BREAK
                                        (NULL)))))))))))||||||||