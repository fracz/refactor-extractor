    protected function inheritConstants(ClassNode $parent)
    {
        /** @var ConstantNode[] $constants */
        $constants = $this->getConstants();

        /** @var ConstantNode $parent_constant */
        foreach ($parent->getConstants() as $key => $parent_constant) {
            if (isset($constants[$key])) {
                $constants[$key]->inherit($parent_constant);
            } else {
                $parent_constant->copyTo($this);
            }
        }
    }

    /**
     * Inherits the given parent as if it was an interface.
     *
     * @param ClassNode $parent Parent interface to inherit from.
     *
     * @todo this method and inheritClass should be separated into different objects
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (
                                (AST_VAR)))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)))))))))||||||||