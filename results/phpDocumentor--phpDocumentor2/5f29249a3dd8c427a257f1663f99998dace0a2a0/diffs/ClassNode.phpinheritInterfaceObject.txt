    protected function inheritInterfaceObject(ClassNode $parent)
    {
        // if the implemented interface has not processed yet; do so. This will
        // cause a recurring effect which makes sure the tree is traversed
        // bottom-to-top
        if (!$parent->is_processed) {
            $parent->inherit(null);
        }

        $this->inheritConstants($parent);
        $this->inheritMethods($parent);
    }

    /**
     * Inherits the given parent as if it was an class.
     *
     * @param ClassNode $parent Parent class to inherit from.
     *
     * @todo this method and inheritInterface should be separated into
     *     different objects
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||