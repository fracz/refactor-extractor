    protected function inheritClassObject(ClassNode $parent)
    {
        // if the parent class has not processed yet; do so. This will cause
        // a recurring effect which makes sure the tree is traversed bottom-to-top
        if (!$parent->is_processed) {
            $parent->setNodes($this->nodes);
            $parent->inherit(null);
        }

        $docblock = $this->getDocBlock();
        $docblock->inherited_tags[] = 'package';
        $docblock->inherited_tags[] = 'subpackage';
        $docblock->inherit($parent->getDocBlock());

        $this->inheritConstants($parent);
        $this->inheritProperties($parent);
        $this->inheritMethods($parent);
    }

    /**
     * Imports a method that is obtained via reflection.
     *
     * @param \ReflectionMethod $method Method that is to be imported.
     *
     * @see self::reflectInternalClass for a complete description.
     *
     * @return \DOMElement|null
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CONST))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (SCALAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (NULL))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||