    protected function processInlineLinkTags(\DOMXPath $xpath)
    {
        $this->log('Adding link information to inline @link tags');

        $qry = $xpath->query('//long-description[contains(., "{@link ")]');

        // variables are used to clarify function and improve readability
        $without_description_pattern = '/\{@link\s+([^\s]+)\s*\}/';
        $with_description_pattern    = '/\{@link\s+([^\s]+)\s+([^\}]+)\}/';

        /** @var \DOMElement $element */
        foreach ($qry as $element) {
            $element->nodeValue = preg_replace(
                array($without_description_pattern, $with_description_pattern),
                array('<a href="$1">$1</a>', '<a href="$1">$2</a>'),
                $element->nodeValue
            );
        }
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_CALL
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (AST_PROP
                            (AST_VAR))))))))||||||||