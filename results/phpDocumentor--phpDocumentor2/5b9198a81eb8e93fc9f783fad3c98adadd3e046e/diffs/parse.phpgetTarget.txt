||||||||  public function getTarget()
  {
    $target = parent::getTarget();
    $target = ($target === null)
      ? trim(DocBlox_Abstract::config()->target)
      : trim($target);

    if (($target == '') || ($target == DIRECTORY_SEPARATOR))
    {
      throw new Zend_Console_Getopt_Exception('Either an empty path or root was given');
    }

    if (!is_dir($target))
    {
      throw new Zend_Console_Getopt_Exception('The given location "' . $target . '" is not a folder');
    }

    if (!is_writable($target))
    {
      throw new Zend_Console_Getopt_Exception('The given path "' . $target . '" either does not exist or is not writable.');
    }

    return $target;
  }

  /**
   * Retrieves a list of allowed extensions.
   *
   * @return string[]
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_STATIC_CALL))))
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR))))))))
    (AST_RETURN
        (AST_VAR)))