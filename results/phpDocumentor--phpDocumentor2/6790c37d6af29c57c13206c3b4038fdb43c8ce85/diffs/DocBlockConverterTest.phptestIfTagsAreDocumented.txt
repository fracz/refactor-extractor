||||||||    public function testIfTagsAreDocumented()
    {
        // Arrange
        $parent           = $this->prepareParentXMLElement();
        $tag              = m::mock('phpDocumentor\Descriptor\TagDescriptor');
        $tagConverterMock = m::mock('phpDocumentor\Plugin\Core\Transformer\Writer\Xml\TagConverter');
        $tagConverterMock->shouldReceive('convert')->with(m::type('DOMElement'), $tag);
        $docBlockConverter = new DocBlockConverter($tagConverterMock);
        $docBlock          = $this->createGenericDescriptorMock();
        $docBlock->shouldReceive('getTags')->andReturn(array(array($tag)));

        // Act
        $docBlockConverter->convert($parent, $docBlock);

        // Assert, no assertions needed as this is covered in the mocks above
    }

    /**
     * Creates an XML Element that can serve as parent.
     *
     * @return \DOMElement
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_STATIC_CALL
                (
                    (SCALAR)))
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))