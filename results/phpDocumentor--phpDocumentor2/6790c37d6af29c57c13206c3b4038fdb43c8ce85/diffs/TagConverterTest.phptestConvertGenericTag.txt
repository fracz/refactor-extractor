||||||||    public function testConvertGenericTag($name, $description, $resultName, $resultDescription)
    {
        // Arrange
        $tagConverter = new TagConverter();
        $parent       = $this->prepareDocBlockXMLElement();
        $tag          = $this->createTagDescriptorMock($name, $description);

        // Act
        $convertedElement = $tagConverter->convert($parent, $tag);

        // Assert
        $this->assertSame($resultName, $convertedElement->getAttribute('name'));
        $this->assertSame($resultDescription, $convertedElement->getAttribute('description'));
        $this->assertSame((string)self::TEST_LINENUMBER, $convertedElement->getAttribute('line'));
    }

    /**
     * Tests whether type information is stored when a tag is processed with type information.
     *
     * @covers phpDocumentor\Plugin\Core\Transformer\Writer\Xml\TagConverter::convert
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CAST
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))