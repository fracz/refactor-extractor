||||||||    public function testIfByReferenceIsDocumented()
    {
        // Arrange
        $argumentConverter = new ArgumentConverter();
        $parent            = $this->prepareParentXMLElement();
        $tag               = $this->createArgumentDescriptorMock();
        $tag->shouldReceive('isByReference')->andReturn(true);
        $tag->shouldReceive('getTypes')->andReturn(array());

        // Act
        $convertedElement = $argumentConverter->convert($parent, $tag);

        // Assert
        $this->assertSame('true', $convertedElement->getAttribute('by_reference'));
    }

    /**
     * Tests whether the type information for an argument is documented.
     *
     * @covers phpDocumentor\Plugin\Core\Transformer\Writer\Xml\ArgumentConverter::convert
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))