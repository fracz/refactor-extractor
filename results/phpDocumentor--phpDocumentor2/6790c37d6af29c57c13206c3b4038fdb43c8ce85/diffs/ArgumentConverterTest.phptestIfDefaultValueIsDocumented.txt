||||||||    public function testIfDefaultValueIsDocumented()
    {
        // Arrange
        $default           = 'This is a default';
        $argumentConverter = new ArgumentConverter();
        $parent            = $this->prepareParentXMLElement();
        $tag               = $this->createArgumentDescriptorMock();
        $tag->shouldReceive('getDefault')->andReturn($default);
        $tag->shouldReceive('getTypes')->andReturn(array());

        // Act
        $convertedElement = $argumentConverter->convert($parent, $tag);

        // Assert
        $this->assertSame($default, $convertedElement->getElementsByTagName('default')->item(0)->nodeValue);
    }

    /**
     * Creates an XML Element that can serve as parent.
     *
     * @return \DOMElement
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (AST_ARRAY)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_PROP
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (
                        (SCALAR)))))))