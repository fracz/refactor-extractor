||||||||    public function buildDocBlockTag(\DOMElement $parent, $tag)
    {
        $child = new \DOMElement('tag');
        $parent->appendChild($child);

        $child->setAttribute('line', $parent->getAttribute('line'));

//        if (class_exists('phpDocumentor\Event\Dispatcher')) {
//            \phpDocumentor\Event\Dispatcher::getInstance()->dispatch(
//                'reflection.docblock.tag.export',
//                \phpDocumentor\Reflection\Event\ExportDocBlockTagEvent
//                    ::createInstance($element)->setObject($tag)
//                    ->setXml($child)
//            );
//        }
    }

    /**
     * Adds the short description of $docblock to the given node as description
     * field.
     *
     * @param \DOMElement        $node
     * @param DescriptorAbstract $element
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR))))))