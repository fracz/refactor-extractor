||||||||    public function buildDocBlock(\DOMElement $parent, DescriptorAbstract $element)
    {
        $child = new \DOMElement('docblock');
        $parent->appendChild($child);

        $child->setAttribute('line', $element->getLine());
        $parent->setAttribute('package', $element->getPackage());

        $this->addDescription($child, $element);
        $this->addLongDescription($child, $element);
        $this->addTags($child, $element);
    }

    /**
     * Export this tag to the given DocBlock.
     *
     * This method also invokes the 'reflection.docblock.tag.export' which can
     * be used to augment the data. This is useful for plugins so that they
     * can provide custom tags.
     *
     * @param \DOMElement   $parent  Element to augment.
     * @param Tag           $tag     The tag to export.
     * @param BaseReflector $element Element to log from.
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))