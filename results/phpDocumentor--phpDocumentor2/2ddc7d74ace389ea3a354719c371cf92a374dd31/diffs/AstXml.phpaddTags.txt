||||||||    protected function addTags(\DOMElement $xml_node, $element)
    {
        foreach ($element->getTags() as $tag) {
            $this->buildDocBlockTag($xml_node, $tag);
        }
    }

    /**
     * Sets the package of the parent element.
     *
     * This method inspects the current DocBlock and extract an @package
     * element. If that tag is present than the associated element's package
     * name is set to that value.
     *
     * If no @package tag is present in the DocBlock then the default package
     * name is set.
     *
     * @param \DOMElement   $parent
     * @param DocBlock      $docblock
     * @param BaseReflector $element
     *
     * @return void
     */
//    protected function setParentsPackage(\DOMElement $parent, DocBlock $docblock, $element)
//    {
//        /** @var \phpDocumentor\Reflection\DocBlock\Tag $package */
//        $package = current($docblock->getTagsByName('package'));
//
//        /** @var \phpDocumentor\Reflection\DocBlock\Tag $subpackage */
//        $subpackage = current($docblock->getTagsByName('subpackage'));
//
//        $package_name = '';
//        if ($package) {
//            $package_name = str_replace(
//                array('.', '_'),
//                '\\',
//                $package->getContent() . ($subpackage ? '\\' . $subpackage->getContent() : '')
//            );
//        }
//
//        if (!$package_name) {
//            $package_name = $element->getDefaultPackageName();
//        }
//
//        $parent->setAttribute('package', $package_name);
//    }

    /**
     * Finalizes the processing and executing all post-processing actions.
     *
     * This method is responsible for extracting and manipulating the data that
     * is global to the project, such as:
     *
     * - Package tree
     * - Namespace tree
     * - Marker list
     * - Deprecated elements listing
     * - Removal of objects related to visibility
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR))))))