||||||||    private function givenAnApplication($mockCollection, $mockLogger)
    {
        $mockApplication = m::mock('Cilex\Application');

        $mockApplication->shouldReceive('offsetGet')
            ->once()
            ->with('transformer.writer.collection')
            ->andReturn($mockCollection);

        $mockApplication->shouldReceive('offsetGet')->once()->with('monolog')->andReturn($mockLogger);

        return $mockApplication;
    }

    /**
     * Returns a mock of the Writer Collection.
     *
     * @return m\MockInterface
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (SCALAR)))
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))