  protected function getRelativeFilename($filename)
  {
    // strip path from filename
    $filename = substr($filename, strlen($this->path));

    return ltrim($filename,'/');
  }

  /**
   * Generates a hierarchical array of namespaces with their singular name from a single level list of namespaces
   * with their full name.
   *
   * @param array $namespaces
   *
   * @return array
   */
||||||||  public function getRelativeFilename($filename)
  {
    // strip path from filename
    $result = ltrim(substr($filename, strlen($this->path)), '/');
    if ($result === '')
    {
      throw new InvalidArgumentException('File is not present in the given project path: '.$filename);
    }

    return $result;
  }

  /**
   * Runs a file through the static reflectors, generates an XML file element and returns it.
   *
   * @param string $filename The filename to parse.
   *
   * @return string|bool The XML element or false if none could be made.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))))))))
    (AST_RETURN
        (AST_VAR)))