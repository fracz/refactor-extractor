||||||||    protected function findOrCreateIndexItemForElement($indexKey, $parentClassName, $newClassDescriptor)
    {
        $classes = $this->project->getIndexes()->get($indexKey, new Collection());

        /** @var ClassDescriptor $parentDescriptor */
        $parentDescriptor = $classes->get($parentClassName, $newClassDescriptor);
        if (!$parentDescriptor->getFullyQualifiedStructuralElementName()) {
            // on a new descriptor, set the name and store it in the structure
            $parentDescriptor->setFullyQualifiedStructuralElementName($parentClassName);
            $parentDescriptor->setName(substr($parentClassName, strrpos($parentClassName, '\\') + 1));

            $this->storeClassDescriptor($parentDescriptor);
            return $parentDescriptor;
        }
        return $parentDescriptor;
    }

    /**
     * Stores the given Class Descriptor in the correct namespace and in the 'classes' index.
     *
     * @param ClassDescriptor $classDescriptor
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_VAR)
                (AST_NEW))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (SCALAR)))
                                    (SCALAR))))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))