||||||||    private function initializeWriter(WriterAbstract $writer, ProjectDescriptor $project)
    {
        $event = WriterInitializationEvent::createInstance($this)->setWriter($writer);
        Dispatcher::getInstance()->dispatch(self::EVENT_PRE_INITIALIZATION, $event);

        if ($writer instanceof Initializable) {
            $writer->initialize($project);
        }

        Dispatcher::getInstance()->dispatch(self::EVENT_POST_INITIALIZATION, $event);
    }

    /**
     * Applies all given transformations to the provided project.
     *
     * @param ProjectDescriptor $project
     * @param Transformation[]  $transformations
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_INSTANCEOF
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_CLASS_CONST
                (SCALAR))
            (AST_VAR))))