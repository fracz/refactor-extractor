    private function registerDefaultVariables(Transformation $transformation, $proc, $structure)
    {
        $proc->setParameter('', 'title', $structure->documentElement->getAttribute('title'));

        if ($transformation->getParameter('search') !== null) {
            $proc->setParameter(
                '',
                'search_template',
                $transformation->getParameter('search')->getValue() ?
                $transformation->getParameter('search')->getValue() :
                'none'
            );
        } else {
            $proc->setParameter('', 'search_template', 'none');
        }

        $proc->setParameter('', 'version', Application::$VERSION);
        $proc->setParameter('', 'generated_datetime', date('r'));
    }

    /**
     * @param $filename
     * @param $proc
     * @param $structure
     */
||||||||    private function registerDefaultVariables(Transformation $transformation, $proc, $structure)
    {
        $proc->setParameter('', 'title', $structure->documentElement->getAttribute('title'));

        if ($transformation->getParameter('search') !== null && $transformation->getParameter('search')->getValue()) {
            $proc->setParameter('', 'search_template', $transformation->getParameter('search')->getValue());
        } else {
            $proc->setParameter('', 'search_template', 'none');
        }

        $proc->setParameter('', 'version', Application::$VERSION);
        $proc->setParameter('', 'generated_datetime', date('r'));
    }

    /**
     * @param $filename
     * @param $proc
     * @param $structure
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CONDITIONAL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR))))
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_STATIC_PROP)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_CONST))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_STATIC_PROP)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR))))))