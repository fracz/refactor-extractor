||||||||	public function get_remote_changes( $false, $action, $response ) {
//fb('get_remote_changes');
		$this->github_plugin->sections =  array( 'changelog' => 'No changelog is available via GitHub Updater.' );

		if ( 'query_plugins' == $action ) return false;

		$url = '/repos/' . trailingslashit( $this->github_plugin->owner ) . trailingslashit( $this->github_plugin->repo ) . 'contents/CHANGES.md';

		$remote = get_site_transient( md5( $this->github_plugin->repo . 'changes' ) );
		if ( ! $remote ) {
			$remote = $this->api( $url );

			if ( $remote )
				set_site_transient( md5( $this->github_plugin->repo . 'changes' ), $remote, HOUR_IN_SECONDS );
		}

		if ( false != $remote ) {
			foreach ( $remote as $key => $value ) {
				if ( $key == 'content' ) {
					$this->github_plugin->sections = base64_decode( $value );
				}
			}
		}

		$response->sections = ( 'plugin_information' == $action ) ? $this->github_plugin->sections : array();
//fb($response);
		return $response;
	}

	/**
	 * Parse the remote info to find what the default branch is.
	 *
	 * If we've had to call this method, we know that a branch header has not been provided.
	 * As such the remote info was retrieved with a ?ref=... query argument.
	 *
	 * @since 1.5.0
	 * @param array API object
	 *
	 * @return string Default branch name.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (SCALAR))))
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_VAR))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR))))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_ARRAY)))
    (AST_RETURN
        (AST_VAR)))