	protected function get_remote_info() {
		$remote = get_site_transient( md5( $this->github_plugin['slug'] ) );

		if ( ! $remote ) {
			$remote = $this->api( '/repos/:owner/:repo/contents/' . basename( $this->github_plugin['slug'] ) );

			if ( $remote )
				set_site_transient( md5( $this->github_plugin['slug'] ), $remote, HOUR_IN_SECONDS );
		}
		return $remote;
	}

	/**
	 * Retrieve the remote version from the file header of the plugin
	 *
	 * @since 1.0.0
	 *
	 * @return string|boolean Version of remote plugin, false if not determined.
	 */
||||||||	protected function get_remote_info() {
		$remote = get_site_transient( md5( $this->github_plugin->slug ) );
		if ( ! $remote ) {
			$remote = $this->api( '/repos/:owner/:repo/contents/' . basename( $this->github_plugin->slug ) );

			if ( $remote )
				set_site_transient( md5( $this->github_plugin->slug ), $remote, HOUR_IN_SECONDS );
		}

		if ( ! $remote ) return;

		preg_match( '/^[ \t\/*#@]*Version\:\s*(.*)$/im', base64_decode( $remote->content ), $matches );

		if ( ! empty( $matches[1] ) )
			$this->github_plugin->remote_version = $matches[1];

		$this->github_plugin->branch = $this->github_plugin->branch ? $this->github_plugin->branch : $this->get_default_branch( $remote );

		$this->github_plugin->newest_tag = $this->get_remote_tag();

//		return $remote;
	}

	/**
	 * Read the remote CHANGES.md file
	 *
	 * Uses a transient to limit calls to the API.
	 *
	 * @since 1.9.0
	 * @return base64 decoded CHANGES.md or false
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_PROP
                                                    (AST_VAR)))))
                                    (AST_VAR)
                                    (AST_CONST)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_CONDITIONAL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (AST_METHOD_CALL
            (AST_VAR))))