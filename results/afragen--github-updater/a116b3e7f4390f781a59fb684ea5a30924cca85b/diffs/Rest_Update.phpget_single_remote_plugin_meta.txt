	protected function get_single_remote_plugin_meta( $plugin ) {
		$this->repo_api = null;
		switch ( $plugin->type ) {
			case 'github_plugin':
				$this->repo_api = new GitHub_API( $plugin );
				break;
			case 'bitbucket_plugin':
				$this->repo_api = new Bitbucket_API( $plugin );
				break;
			case 'gitlab_plugin';
				$this->repo_api = new GitLab_API( $plugin );
				break;
			default:
				return;
		}

		$this->{$plugin->type} = $plugin;
		$this->set_defaults( $plugin->type );

		if ( $this->repo_api->get_remote_info( basename( $plugin->slug ) ) ) {
			$this->repo_api->get_repo_meta();
			$this->repo_api->get_remote_tag();
			$changelog = $this->get_changelog_filename( $plugin->type );
			if ( $changelog ) {
				$this->repo_api->get_remote_changes( $changelog );
			}
			$this->repo_api->get_remote_readme();
			$plugin->download_link = $this->repo_api->construct_download_link();
		}
	}

	/**
	 * Update plugin.
	 *
	 * @param  string $plugin_slug
	 * @param string  $tag
	 *
	 * @throws \Exception
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_SWITCH
        (AST_PROP
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (NULL))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_VAR))))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))))))||||||||