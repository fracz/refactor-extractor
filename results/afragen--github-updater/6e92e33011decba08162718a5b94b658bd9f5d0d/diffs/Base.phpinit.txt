	public function init() {
		global $pagenow;

		// Set $force_meta_update = true on appropriate admin pages.
		$force_meta_update = false;
		$admin_pages  = array(
			'plugins.php', 'plugin-install.php',
			'themes.php', 'theme-install.php',
			'update-core.php', 'update.php',
			'options-general.php', 'settings.php',
		);
		foreach ( array_keys( Settings::$remote_management ) as $key ) {
			// Remote management only needs to be active for admin pages.
			if ( is_admin() && ! empty( self::$options_remote[ $key ] ) ) {
				$admin_pages = array_merge( $admin_pages, array( 'index.php' ) );
			}
		}

		if ( in_array( $pagenow, array_unique( $admin_pages ) ) ) {
			$force_meta_update = true;
		}

		if ( current_user_can( 'update_plugins' ) ) {
			Plugin::$object = Plugin::instance( $force_meta_update );
		}
		if ( current_user_can( 'update_themes' ) ) {
			Theme::$object = Theme::instance( $force_meta_update );
		}
		if ( is_admin() &&
		     ( current_user_can( 'update_plugins' ) || current_user_can( 'update_themes' ) ) &&
		     ! apply_filters( 'github_updater_hide_settings', false )
		) {
			new Settings();
		}

		return true;
	}

	/**
	 * Piggyback on built-in update function to get metadata.
	 */
||||||||	public function init() {
		global $pagenow;

		// Set $force_meta_update = true on appropriate admin pages.
		$force_meta_update = false;
		$admin_pages  = array(
			'plugins.php', 'plugin-install.php',
			'themes.php', 'theme-install.php',
			'update-core.php', 'update.php',
			'options-general.php', 'settings.php',
		);
		foreach ( array_keys( Settings::$remote_management ) as $key ) {
			// Remote management only needs to be active for admin pages.
			if ( is_admin() && ! empty( self::$options_remote[ $key ] ) ) {
				$admin_pages = array_merge( $admin_pages, array( 'index.php' ) );
			}
		}

		if ( in_array( $pagenow, array_unique( $admin_pages ) ) ) {
			$force_meta_update = true;
		}

		if ( current_user_can( 'update_plugins' ) ) {
			Plugin::$object = Plugin::instance();
			if ( $force_meta_update ) {
				Plugin::$object->get_remote_plugin_meta();
			}
		}
		if ( current_user_can( 'update_themes' ) ) {
			Theme::$object = Theme::instance();
			if ( $force_meta_update ) {
				Theme::$object->get_remote_theme_meta();
			}
		}
		if ( is_admin() &&
		     ( current_user_can( 'update_plugins' ) || current_user_can( 'update_themes' ) ) &&
		     ! apply_filters( 'github_updater_hide_settings', false )
		) {
			new Settings();
		}

		return true;
	}

	/**
	 * Piggyback on built-in update function to get metadata.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_STATIC_PROP)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)))))
            (
                (AST_NEW))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_STATIC_PROP)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL)
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_STATIC_PROP))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_STATIC_CALL))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_STATIC_PROP))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL)
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)))))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_CONST)))))
            (
                (AST_NEW))))
    (AST_RETURN
        (AST_CONST)))