	public function admin_pages_update_transient() {
		global $pagenow;

		$admin_pages   = array( 'plugins.php', 'themes.php' );
		$is_admin_page = in_array( $pagenow, $admin_pages ) ? true : false;
		$capability    = 'update_' . rtrim( $pagenow, '.php' );

		if ( current_user_can( $capability ) && $is_admin_page ) {
			$current = get_site_transient( $capability );
			if ( 'plugins.php' === $pagenow ) {
				Plugin::instance()->forced_meta_update_plugins( true );
				$current = Plugin::instance()->pre_set_site_transient_update_plugins( $current );
			}
			if ( 'themes.php' === $pagenow ) {
				Theme::instance()->forced_meta_update_themes( true );
				$current = Theme::instance()->pre_set_site_transient_update_themes( $current );
			}
			set_site_transient( $capability, $current );
		}
		remove_filter( 'admin_init', array( &$this, 'admin_pages_update_transient' ) );
	}

	/**
	 * Checks to see if a heartbeat is resulting in activity.
	 *
	 * @return bool
	 */
||||||||	public function admin_pages_update_transient() {
		global $pagenow;

		$admin_pages   = array( 'plugins.php', 'themes.php', 'update-core.php' );
		$is_admin_page = in_array( $pagenow, $admin_pages ) ? true : false;
		$transient     = 'update_' . rtrim( $pagenow, '.php' );
		$transient     = 'update_update-core' === $transient ? 'update_core' : $transient;

		if ( $is_admin_page ) {
			$this->make_update_transient_current( $transient );
		}

		remove_filter( 'admin_init', array( &$this, 'admin_pages_update_transient' ) );
	}

	/**
	 * Checks user capabilities then updates the update transient to ensure
	 * our repositories display update notices correctly.
	 *
	 * @param string $transient ( 'update_plugins' | 'update_themes' | 'update_core' )
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_CONST)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL)
                                    (
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL)
                                (
                                    (AST_CONST)))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_STATIC_CALL)
                                    (
                                        (AST_VAR)))))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_CONST)
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (SCALAR)
                (AST_VAR))
            (SCALAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))