||||||||	public function handle(HttpExceptionInterface $exception)
	{
		foreach ($this->handlers as $hint => $handler)
		{
			if ($exception instanceof $hint)
			{
				$response = call_user_func($handler, $exception);

				if ( ! $response instanceof Response)
				{
					$response = new Response($response, $exception->getStatusCode());
				}

				return $response;
			}
		}
	}

	/**
	 * Determine if the handler will handle the given exception.
	 *
	 * @param  \Symfony\Component\HttpKernel\Exception\HttpExceptionInterface  $exception
	 * @return bool
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR)
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW
                                            (
                                                (AST_VAR)
                                                (AST_METHOD_CALL
                                                    (AST_VAR))))))))
                        (AST_RETURN
                            (AST_VAR))))))))