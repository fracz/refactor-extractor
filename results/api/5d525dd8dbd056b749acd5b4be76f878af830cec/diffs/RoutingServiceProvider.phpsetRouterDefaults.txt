    public function setRouterDefaults()
    {
        $config = $this->app['config']['api::config'];

        $this->app['router']->setDefaultVersion($config['version']);
        $this->app['router']->setDefaultPrefix($config['prefix']);
        $this->app['router']->setDefaultDomain($config['domain']);
        $this->app['router']->setDefaultFormat($config['default_format']);
        $this->app['router']->setVendor($config['vendor']);
        $this->app['router']->setConditionalRequest($config['conditional_request']);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||