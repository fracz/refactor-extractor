||||||||    protected function replaceBoundRouter()
    {
        $this->app->bindShared('router', function ($app) {
            $router = new Router($app['events'], $app['api.routing.config'], $app);

            if ($app['env'] == 'testing') {
                $router->disableFilters();
            }

            $router->setControllerDispatcher(new ControllerDispatcher($router, $app));
            $router->setConditionalRequest($app['config']->get('api::conditional_request'));

            return $router;
        });
    }

    /**
     * Replace the bound URL generator.
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CLOSURE
                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW
                                (
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (SCALAR)))))
                    (AST_RETURN
                        (AST_VAR)))))))