    public static function getGlobalScope($scope)
    {
        $modelScopes = Arr::get(static::$globalScopes, static::class, []);

        if (is_string($scope)) {
            return isset($modelScopes[$scope]) ? $modelScopes[$scope] : null;
        }

        return Arr::first($modelScopes, function ($key, $value) use ($scope) {
            return $scope instanceof $value;
        });
    }

    /**
     * Get the global scopes for this class instance.
     *
     * @return array
     */
||||||||    public static function getGlobalScope($scope)
    {
        if (! is_string($scope)) {
            $scope = get_class($scope);
        }

        return Arr::get(static::$globalScopes, static::class.'.'.$scope);
    }

    /**
     * Get the global scopes for this class instance.
     *
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_ARRAY))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_DIM
                            (AST_VAR)
                            (AST_VAR))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_RETURN
                            (AST_INSTANCEOF
                                (AST_VAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_STATIC_PROP)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR))
                    (AST_VAR))))))