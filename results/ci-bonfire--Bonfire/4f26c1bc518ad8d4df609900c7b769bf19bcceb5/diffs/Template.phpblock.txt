    public static function block($block_name = '', $default_view = '', $data = array(), $themed = false)
		{
        if (empty($block_name)) {
			self::debug_message('No block name provided.');
			return;
		}

        // Use $default_view if the block has not been set.
		$block_view_name = isset(self::$blocks[$block_name]) ? self::$blocks[$block_name] : $default_view;

        if (empty($block_view_name) && empty($default_view)) {
            self::debug_message("No default block provided for `{$block_name}`");
			return;
		}

        self::debug_message("Looking for block: <b>{$block_view_name}</b>.");

        $output = '';
        self::load_view($block_view_name, $data, false, $themed, $output);

		echo $output;
    }

    //--------------------------------------------------------------------------
	// !THEME PATHS
    //--------------------------------------------------------------------------

	/**
     * Theme paths allow you to have multiple locations for themes to be stored.
     * This might be used for separating themes for different sub-applications,
     * or a core theme and user-submitted themes.
	 *
	 * @param string $path A new path where themes can be found.
	 *
     * @return bool Returns true if the path already exists. Otherwise, returns
     * false, even if the path was successfully added...
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_STATIC_CALL
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_STATIC_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_CONST)
            (AST_VAR)
            (AST_VAR)))
    (AST_ECHO
        (AST_VAR)))||||||||