    public function num_login_attempts($login = null)
		{
        $this->ci->db->select('1', false)
                     ->where('ip_address', $this->ip_address);

        if (strlen($login) > 0) {
            $this->ci->db->or_where('login', $login);
        }

        $query = $this->ci->db->get('login_attempts');

        return $query->num_rows();
		}

	/**
     * Clear all login attempts for this user, as well as expired logins.
	 *
     * @param string $login   The login credentials (typically email).
     * @param int    $expires The expiration time (in seconds). Attempts older
     * than this value will be deleted.
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR)
                (AST_CONST)))
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR))))||||||||