    public static function assets_url($type = null, $modulePath = false)
    {
        $url = '';

        // Get resource type folder
        if ($type !== null && $type !== 'base'
            && array_key_exists($type, self::$directories)
           ) {
            $url = self::path(base_url(), self::$directories['base'], self::$directories[$type]) . '/';
        } else {
            // Get Assets Base Folder
            $url = self::path(base_url(), self::$directories['base']) . '/';
        }

        if ($modulePath && ! in_array($type, array('base', 'cache', 'image', 'module'))) {
            $url = self::path($url, self::$directories['module']) . '/';
        }

        // Cleanup, just to be safe
        $url = str_replace('//', '/', $url);
        $url = str_replace(':/', '://', $url);

        return $url;
    }

    /**
     * Deletes all asset cache files from the assets/cache folder.
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_STATIC_PROP))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_CALL)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_CALL)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (NULL)))))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||