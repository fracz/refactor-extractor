    public function send($data = array(), $queueOverride = null)
    {
        // Ensure the required information is supplied.
        if (empty($data['to'])
            || ! isset($data['message'])
            || ! isset($data['subject'])
            || (empty($data['from']) && settings_item('sender_email') == false)
        ) {
            $this->error = lang('emailer_missing_data');
            return false;
        }

        $to      = $data['to'];
        $subject = $data['subject'];
        $message = $data['message'];

        $from        = empty($data['from']) ? settings_item('sender_email') : $data['from'];
        $altMessage  = isset($data['alt_message']) ? $data['alt_message'] : false;
        $attachments = isset($data['attachments']) ? $data['attachments'] : false;

        // Wrap the $message in the email template, or strip HTML.
        $mailtype  = settings_item('mailtype');
        $templated = '';
        if ($mailtype == 'html') {
            $templated  = $this->ci->load->view('emailer/email/_header', null, true);
            $templated .= $message;
            $templated .= $this->ci->load->view('emailer/email/_footer', null, true);
        } else {
            $templated = html_entity_decode(strip_tags($message), ENT_QUOTES, 'UTF-8');
        }

        // Are emails queued?
        if ($queueOverride === true
            || ($queueOverride !== false && $this->queue_emails == true)
        ) {
            return $this->queueEmail($to, $from, $subject, $templated, $altMessage, $attachments);
        }

        // Otherwise, send it.
        return $this->sendEmail($to, $from, $subject, $templated, $altMessage, $attachments);
    }

    /**
     * Add the email to the database to be sent out during a cron job.
     *
     * @todo Update this code to use the emailer_model
     *
     * @param string $to          The email to send the message to
     * @param string $from        The from email (Ignored in this method, but
     * kept for consistency with the send_email method).
     * @param string $subject     The subject line of the email
     * @param string $message     The message for the email, with the template
     * already applied if HTML emails are enabled.
     * @param string $altMessage An optional text-only version of the message
     * to be sent with HTML emails.
     * @param array  $attachments An optional array containing the location of
     * any files to be attached.
     *
     * @return bool true on success, else false
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (AST_BINARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (SCALAR)))
                        (AST_CONST))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CALL
                        (
                            (SCALAR))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_EMPTY
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_CALL
                (
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CONST))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_VAR))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_CONST)
                            (AST_CONST))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CONST)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)))))||||||||