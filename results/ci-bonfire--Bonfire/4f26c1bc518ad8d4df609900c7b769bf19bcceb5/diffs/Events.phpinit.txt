	public static function init()
	{
        if (! function_exists('read_config')) {
            self::$ci =& get_instance();
            self::$ci->load->helper('config_file');
		}

        self::$events = read_config('events', true, null, false);

        // Merge events from indivdual modules.
        foreach (Modules::list_modules(true) as $module) {
            $module_events = read_config('events', true, $module, true);
            if (is_array($module_events)) {
                self::$events = array_merge_recursive(self::$events, $module_events);
            }
        }

        if (self::$events == false) {
			self::$events = array();
		}
    }

	/**
	 * Triggers an individual event.
	 *
	 * NOTE: The payload sent to the event method is a pointer to the actual data.
	 * This means that any operations on the data will affect the original data.
	 * Use with care.
	 *
	 * @param string $event_name A string with the name of the event to trigger. Case sensitive.
	 * @param mixed  $payload    (optional) A variable pointer to send to the event method.
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN_REF
                    (AST_STATIC_PROP)
                    (AST_CALL))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST)
                (AST_CONST)
                (AST_CONST))))
    (AST_FOREACH
        (AST_STATIC_CALL
            (
                (AST_CONST)))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CONST)
                        (AST_VAR)
                        (AST_CONST))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_ARRAY))))))||||||||