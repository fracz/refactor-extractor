    private function buildDbSql($data)
    {
        $field_total = $data['field_total'];
        if (is_null($field_total)) {
            return false;
        }

        // There are no doubt more types where a value/length isn't possible
        // - needs investigating
        $data['no_length'] = array_merge(
            $this->objectTypes,
            $this->booleanTypes,
            $this->dateTypes,
            $this->timeTypes
        );

        // Types where a value/length is optional, will not output a constraint
        // if the field is empty
        $data['optional_length'] = array_diff($this->integerTypes, $this->booleanTypes);

        return $this->CI->load->view('files/db_migration', $data, true);
    }

    /**
     * Generate the content of a model file
     *
     * @param array $data The data to use when building the model:
     *  int    'field_total'       The number of fields to add to the table
     *  string 'module_name_lower' The name given to the module
     *  array  'action_names'      An array of the controller actions (methods) required
     *  string 'primary_key_field' The name of the primary key
     *  string 'table_name'        The name of the table in the database
     *
     * @return string|bool The content of the model file or false on error
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR)
                (AST_VAR)
                (AST_CONST)))))||||||||