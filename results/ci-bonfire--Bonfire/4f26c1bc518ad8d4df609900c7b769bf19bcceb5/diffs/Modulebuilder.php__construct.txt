    public function __construct()
    {
        $this->CI = &get_instance();
        $this->CI->load->config('modulebuilder');
        $this->options = $this->CI->config->item('modulebuilder');

        if (! empty($this->options['languages_available'])
            && is_array($this->options['languages_available'])
           ) {
            $this->languages_available = $this->options['languages_available'];
        }

        if (! empty($this->options['database_types'])) {
            $this->databaseTypes = $this->options['database_types'];
        }

        foreach ($this->databaseTypes as $key => $dataTypes) {
            foreach ($dataTypes as $typeVal) {
                // The order below is based on the number of occurrences of each
                // type in the default set of values, from highest to lowest.
                switch ($typeVal) {
                    case 'integer':
                        $this->integerTypes[] = $key;
                        break;

                    case 'string':
                        $this->stringTypes[] = $key;
                        break;

                    case 'object':
                        $this->objectTypes[] = $key;
                        break;

                    case 'real':
                        $this->realNumberTypes[] = $key;
                        break;

                    case 'date':
                        $this->dateTypes[] = $key;
                        break;

                    case 'time':
                        $this->timeTypes[] = $key;
                        break;

                    case 'boolean':
                        $this->booleanTypes[] = $key;
                        break;

                    case 'list':
                        $this->listTypes[] = $key;
                        break;
                }
            }
        }

        $this->textTypes = array_intersect($this->objectTypes, $this->stringTypes);

        $this->files = array(
            'model'      => 'myform_model',
            'view'       => 'myform_view',
            'controller' => 'myform',
            'migration'  => 'migration',
        );
    }

    /**
     * Generate the files required for the module
     *
     * @param array $data The data required to build the module
     *  int    'field_total'           The number of fields to add to the table
     *  string 'module_name'           The name given to the module
     *  array  'contexts'              An array of contexts selected
     *  array  'action_names'          An array of the controller actions (methods) required
     *  string 'primary_key_field'     The name of the primary key
     *  string 'db_required'           The database requirement setting (new, existing or none)
     *  array  'form_error_delimiters' An array with the html delimiters for error messages
     *  string 'module_description'    A description for the module which appears in the config file
     *  int    'role_id'               The id of the role which receives full access to the module
     *  string 'table_name'            The name of the table in the database
     *  int    'table_as_field_prefix' Use table name as field prefix
     *
     * @return array An array with the content for the generated files
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN_REF
        (AST_PROP
            (AST_VAR))
        (AST_CALL))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))))))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_SWITCH
                        (AST_VAR)
                        (AST_SWITCH_LIST
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))
                            (AST_SWITCH_CASE
                                (SCALAR)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))
                                        (AST_VAR))
                                    (AST_BREAK
                                        (NULL))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR)))))||||||||