    public static function load_view($view = null, $data = null, $override = '', $is_themed = true, &$output)
	{
        if (empty($view)) {
            return '';
        }

        if (empty($data)) {
            $data = self::$data;
        }

			$output = '';
        if ($is_themed) {
			// First check for the overridden file...
            if (! empty($override)) {
				$output = self::find_file($override, $data);
			}

            // If it wasn't found, try the standard view
            if (empty($output)) {
				$output = self::find_file($view, $data);
			}

			// Should it be parsed?
            if (self::$parse_views === true) {
                if (! class_exists('CI_Parser')) {
                    self::$ci->load->library('parser');
                }

                $output = self::$ci->parser->parse($output, $data, true, false);
            }
        } else {
		// Just a normal view (possibly from a module, though.)

            // First check within the themes...
			$output = self::find_file($view, $data);

            // If it wasn't found, go for the default.
            if (empty($output)) {
				self::$ci->load->_ci_view_path = self::$orig_view_path;

                if (self::$parse_views === true) {
                    if (! class_exists('CI_Parser')) {
						self::$ci->load->library('parser');
					}

                    $output = self::$ci->parser->parse($view, $data, true);
                } else {
                    $output = self::$ci->load->view($view, $data, true);
				}
			}
			self::$ci->load->_ci_view_path = self::$orig_view_path;
        }
    }

    //--------------------------------------------------------------------------
	// !PRIVATE METHODS
    //--------------------------------------------------------------------------

	/**
	 * Searches through the the active theme and the default theme to try to find
	 * a view file. If found, it returns the rendered view.
	 *
	 * @access private
	 *
	 * @param string $view The name of the view to find.
	 * @param array  $data An array of key/value pairs to pass to the views.
	 *
	 * @return string The content of the file, if found, else empty.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_PROP)))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_STATIC_PROP)
                            (AST_CONST))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (SCALAR))))
                                    (
                                        (AST_METHOD_CALL
                                            (AST_PROP
                                                (AST_STATIC_PROP))
                                            (
                                                (SCALAR))))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_STATIC_PROP))
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_CONST)
                                        (AST_CONST)))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_PROP
                                        (AST_STATIC_PROP)))
                                (AST_STATIC_PROP))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_STATIC_PROP)
                                        (AST_CONST))
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_CALL
                                                        (
                                                            (SCALAR))))
                                                (
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_STATIC_PROP))
                                                        (
                                                            (SCALAR))))))
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_STATIC_PROP))
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_CONST))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_STATIC_PROP))
                                                (
                                                    (AST_VAR)
                                                    (AST_VAR)
                                                    (AST_CONST))))))))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_PROP
                            (AST_STATIC_PROP)))
                    (AST_STATIC_PROP))))))||||||||