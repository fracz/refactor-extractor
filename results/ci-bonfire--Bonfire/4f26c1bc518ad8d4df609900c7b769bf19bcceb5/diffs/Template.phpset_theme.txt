    public static function set_theme($theme = null, $default_theme = null)
		{
        if (empty($theme) || ! is_string($theme)) {
			return;
		}

		// Make sure a trailing slash is there
        if (substr($theme, -1) !== '/') {
			$theme .= '/';
		}

		self::$active_theme = $theme;

		// Default theme?
        if (! empty($default_theme) && is_string($default_theme)) {
			self::set_default_theme($default_theme);
		}
    }

	/**
     * Stores the name of the default theme to use. This theme should be relative
     * to one of the template.theme_paths folders.
	 *
	 * @param string $theme The name of the desired default theme to use.
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_VAR))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_UNARY_OP
                            (SCALAR))))
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR)))))))||||||||