	public function is_installed()
	{
		// If 'install/installed.txt' exists, the app is installed
		if (is_file(APPPATH . 'config/installed.txt')) {
			return true;
		}

		// If the database config doesn't exist, the app is not installed
		if ( ! is_file(APPPATH . 'config/development/database.php')) {
			$this->db_settings_exist = false;
			return false;
		}
		require(APPPATH . '/config/development/database.php');

		// If $db['default'] doesn't exist, the app can't load the database
		if ( ! isset($db) || ! isset($db['default'])) {
			$this->db_settings_exist = false;
			return false;
		}
		$this->db_settings_exist = true;

		// Make sure the database name is specified
		if (empty($db['default']['database'])) {
			$this->db_exists = false;
			return false;
		}
		$this->db_exists = true;

		$this->ci->load->database($db['default']);

		// Does the users table exist?
		if ( ! $this->ci->db->table_exists('users')) {
			return false;
		}

		// Make sure at least one row exists in the users table.
		$query = $this->ci->db->get('users');
		if ($query->num_rows() == 0) {
			return false;
		}

		defined('BF_INSTALLED') || define('BF_INSTALLED', true);

		return true;
	}

    /**
     * Verify that cURL is enabled as a PHP extension
     *
     * @return bool    true if cURL is enabled, else false
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_BINARY_OP
                            (AST_CONST)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_INCLUDE_OR_EVAL
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_CONST))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR))
                (SCALAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_BINARY_OP
        (AST_CALL
            (
                (SCALAR)))
        (AST_CALL
            (
                (SCALAR)
                (AST_CONST))))
    (AST_RETURN
        (AST_CONST)))||||||||