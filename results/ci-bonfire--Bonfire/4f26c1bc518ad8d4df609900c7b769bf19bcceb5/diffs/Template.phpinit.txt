	public static function init()
	{
		// If the application config file hasn't been loaded, do it now
        if (! self::$ci->config->item('template.theme_paths')) {
			self::$ci->config->load('application');
		}

		// Store our settings
		self::$default_theme 	= self::$ci->config->item('template.default_theme');
        self::$layout        = self::$ci->config->item('template.default_layout');
		self::$parse_views		= self::$ci->config->item('template.parse_views');
        self::$site_path     = self::$ci->config->item('template.site_path');
        self::$theme_paths   = self::$ci->config->item('template.theme_paths');

        log_message('debug', 'Template library loaded');
    }

	/**
     * Get the name of the layout into which the views will be rendered.
     *
     * The default layout is stored in the config file as 'template.default_layout'.
	 *
     * @return string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))
            (
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)
            (SCALAR))))||||||||