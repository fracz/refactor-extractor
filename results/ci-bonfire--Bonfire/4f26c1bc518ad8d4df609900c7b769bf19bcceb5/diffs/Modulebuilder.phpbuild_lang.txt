    private function build_lang($field_total, $module_name, $module_name_lower)
    {
        $data['field_total'] = $field_total;
        $data['module_name'] = $module_name;
        $data['module_name_lower'] = $module_name_lower;

        $lang = array();
        foreach ($this->languages_available as $language_file) {
            $lang[$language_file] = $this->CI->load->view("files/languages/{$language_file}", $data, true);
        }

        return $lang;
    }

    /**
     * Custom Form Validation Callback Rule
     *
     * Checks that one field doesn't match all the others.
     *
     * This code is not really portable. Would have been nice to create a rule
     * that accepted an array.
     *
     * @param string $str     Name of the field
     * @param int    $fieldno The position number of this field
     *
     * @return bool
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_PROP
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR))
                        (AST_VAR)
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||