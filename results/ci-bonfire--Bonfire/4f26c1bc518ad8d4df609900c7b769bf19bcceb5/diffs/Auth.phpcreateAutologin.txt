    private function createAutologin($user_id, $old_token = null)
	{
        if (! $this->allowRemember()) {
            return false;
		}

        // Generate a random string for the token.
        if (! function_exists('random_string')) {
		$this->ci->load->helper('string');
        }
		$token = random_string('alnum', 128);

        // If an old token was not provided, create a new one.
        if (empty($old_token)) {
			// Create a new token
            $this->ci->db->insert(
                'user_cookies',
                array(
				'user_id'		=> $user_id,
				'token'			=> $token,
                    'created_on' => $this->getLoginTimestamp(),
                )
			);
        } else {
            // Refresh the token.
            $this->ci->db->where('user_id', $user_id)
                         ->where('token', $old_token)
                         ->set('token', $token)
                         ->set('created_on', $this->getLoginTimestamp())
                         ->update('user_cookies');
		}

        if ($this->ci->db->affected_rows()) {
			// Create the autologin cookie
            $this->ci->input->set_cookie(
                'autologin',
                $user_id .'~'. $token,
                $this->ci->settings_lib->item('auth.remember_length')
            );

            return true;
		}

        return false;
    }

	/**
     * Delete the autologin cookie for the current user.
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (SCALAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (SCALAR)
                                        (AST_VAR)))
                                (
                                    (SCALAR)
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (AST_VAR)))
                        (
                            (SCALAR)
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (SCALAR))
                            (AST_VAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (SCALAR)))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_RETURN
        (AST_CONST)))||||||||