    private function setupSession(
        $user_id,
        $username,
        $password_hash,
        $email,
        $role_id,
        $remember = false,
        $old_token = null,
        $user_name = ''
    ) {
        // What are we using as login identity?

        // If "both", defaults to email, unless we display usernames globally
        if ($this->ci->settings_lib->item('auth.login_type') == 'both') {
            $login = $this->ci->settings_lib->item('auth.use_usernames') ? $username : $email;
        } else {
            $login = $this->ci->settings_lib->item('auth.login_type') == 'username' ? $username : $email;
		}

        // @todo consider taking this out of setupSession()
        if ($this->ci->settings_lib->item('auth.use_usernames') == 0
            && $this->ci->settings_lib->item('auth.login_type') == 'username'
        ) {
            // If we've a username at identity, and don't want made user name, let's have an email nearby.
            $us_custom = $email;
        } else {
            // For backward compatibility, default to username.
            $us_custom = $this->ci->settings_lib->item('auth.use_usernames') == 2 ? $user_name : $username;
		}

        // Save the user's session info

        // load do_hash()
        $this->ci->load->helper('security');

        $this->ci->session->set_userdata(array(
            'user_id'     => $user_id,
            'auth_custom' => $us_custom,
            'user_token'  => do_hash($user_id . $password_hash),
            'identity'    => $login,
            'role_id'     => $role_id,
            'logged_in'   => true,
        ));

        // Should we remember the user?
        if ($remember === true) {
            return $this->createAutologin($user_id, $old_token);
        }

        return true;
	}

    //--------------------------------------------------------------------------
    // Permissions
    //--------------------------------------------------------------------------

	/**
     * Load the permission names from the database.
	 *
     * @return array Permissions: key - lowercase name, value - permission ID.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (
                        (SCALAR)))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (SCALAR)))
                        (AST_VAR)
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (SCALAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_PROP
                (AST_VAR)))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_VAR))))
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (SCALAR))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||