    protected function no_match($str, $fieldno)
    {
        for ($counter = 1; $this->field_total >= $counter; $counter++) {
            // Nothing has been entered into this field or the field being
            // checked is the same as the field it will be checked against
            if ($_POST["view_field_name$counter"] == '' || $fieldno == $counter) {
                continue;
            }

            if ($str == $_POST["view_field_name$counter"]) {
                $this->CI->form_validation->set_message('no_match', "Field names must be unique!");
                return false;
            }
        }

        return true;
    }

    //--------------------------------------------------------------------------
    // Deprecated Methods (do not use)
    //--------------------------------------------------------------------------

    /**
     * Generate the files required for the module
     *
     * @deprecated since 0.7.1 Use buildFiles().
     *
     * @param int    $field_total           The number of fields to add to the table
     * @param string $module_name           The name given to the module
     * @param array  $contexts              An array of contexts selected
     * @param array  $action_names          An array of the controller actions (methods) required
     * @param string $primary_key_field     The name of the primary key
     * @param string $db_required           The database requirement setting (new, existing or none)
     * @param array  $form_error_delimiters An array with the html delimiters for error messages
     * @param string $module_description    A description for the module which appears in the config file
     * @param int    $role_id               The id of the role which receives full access to the module
     * @param string $table_name            The name of the table in the database
     * @param int    $table_as_field_prefix Use table name as field prefix
     *
     * @return array An array with the content for the generated files
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOR
        (AST_EXPR_LIST
            (AST_ASSIGN
                (AST_VAR)
                (SCALAR)))
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))
        (AST_EXPR_LIST
            (AST_POST_INC
                (AST_VAR)))
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_DIM
                            (AST_VAR)
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR))))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_CONST)))||||||||