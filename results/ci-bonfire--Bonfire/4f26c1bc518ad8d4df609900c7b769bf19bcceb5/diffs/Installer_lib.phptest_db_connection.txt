	public function test_db_connection()
	{
		if ( ! $this->db_available()) {
			return false;
		}

		$db_name  = $this->ci->input->post('database');
		$driver   = $this->ci->input->post('driver');
		$hostname = $this->ci->input->post('hostname');
		$password = $this->ci->input->post('password');
		$port     = $this->ci->input->post('port');
		$username = $this->ci->input->post('username');

		switch ($driver) {
			case 'mysql':
				return @mysql_connect("$hostname:$port", $username, $password);

			case 'mysqli':
				$mysqli = new mysqli($hostname, $username, $password, '', $port);
				if ( ! $mysqli->connect_error) {
					return true;
				}
				return false;

			case 'cubrid':
				return @cubrid_connect($hostname, $port, $db_name, $username, $password);

			case 'mongodb': // deprecated
				$connect_string = $this->get_mongo_connection_string($hostname, $port, $username, $password, $db_name);
				try {
					$mongo = new Mongo($connect_string);
					return true;
				} catch (MongoConnectionException $e) {
					show_error('Unable to connect to MongoDB.', 500);
				}
				return false;
                break;

			case 'mongoclient': // no driver support at this time
				$connect_string = $this->get_mongo_connection_string($hostname, $port, $username, $password, $db_name);
				try {
					$mongo = new MongoClient($connect_string);
					return true;
				} catch (MongoConnectionException $e) {
					show_error('Unable to connect MongoClient.', 500);
				}
				return false;
				break;

			case 'mssql':
				return @mssql_connect("$hostname,$port", $username, $password);

			case 'oci8':
				$connect_string = $this->get_oracle_connection_string($hostname, $port);
				return @oci_connect($username, $password, $connect_string);

			case 'odbc':
				$connect_string = $this->get_odbc_connection_string($hostname);
				return @odbc_connect($connect_string, $username, $password);

			case 'pdo':
				$connect_string = $this->get_pdo_connection_string($hostname, $db_name);
				try {
					$pdo = new PDO($connect_string, $username, $password);
					return true;
				} catch (PDOException $e) {
					show_error('Unable to connect using PDO.', 500);
				}
				return false;
				break;

			case 'postgre':
				$connect_string = $this->get_postgre_connection_string($hostname, $port, $username, $password, $db_name);
				return @pg_connect($connect_string);

			case 'sqlite':
				if ( ! $sqlite = @sqlite_open($db_name, FILE_WRITE_MODE, $error)) {
					show_error($error, 500);
					return false;
				}
				return $sqlite;

			case 'sqlsrv':
				$connection = $this->get_sqlsrv_connection($username, $password, $db_name);
				return sqlsrv_connect($hostname, $connection);

			default:
				return false;
		}
	}

    /**
     * Perform some basic checks to see if the user has already installed the
     * application and just hasn't moved the install folder...
     *
     * @return bool    true if the application is installed, else false
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (SCALAR)
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_RETURN
                        (AST_CONST))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_TRY
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONST)))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR))))))
                        (NULL))
                    (AST_RETURN
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_TRY
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONST)))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR))))))
                        (NULL))
                    (AST_RETURN
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_TRY
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_VAR)
                                        (AST_VAR)
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONST)))
                        (AST_CATCH_LIST
                            (AST_CATCH
                                (AST_NAME_LIST)
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (SCALAR))))))
                        (NULL))
                    (AST_RETURN
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_CONST)
                                                (AST_VAR))))))
                            (
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR)))
                                (AST_RETURN
                                    (AST_CONST)))))
                    (AST_RETURN
                        (AST_VAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_VAR))))
                    (AST_RETURN
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST)))))))||||||||