    public static function inline_js()
    {
        // Are there any scripts to include?
        if (empty(self::$scripts['inline'])) {
            return;
        }

        // Create the shell opening
        $output = "<script type='text/javascript'>\n" .
            self::$ci->config->item('assets.js_opener') . "\n";

        // Loop through all available scripts, inserting them inside the shell.
        foreach (self::$scripts['inline'] as $script) {
            $output .= $script . "\n";
        }

        // Close the shell.
        $output .= "\n" . self::$ci->config->item('assets.js_closer') .
            "\n</script>\n";

        return $output;
    }

    /**
     * Generates the combined js code.
     *
     * Called by the external_js() and module_js() methods.
     *
     * @param array $files       An array of files to be combined.
     * @param string $scriptType Either a string ('module') or empty. Used in
     * generating the file name.
     *
     * @return string
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_DIM
                    (AST_STATIC_PROP)
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_FOREACH
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))
            (SCALAR)))
    (AST_RETURN
        (AST_VAR)))||||||||