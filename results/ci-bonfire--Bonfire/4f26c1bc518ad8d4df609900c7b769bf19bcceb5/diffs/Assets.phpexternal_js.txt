    public static function external_js($extJs = null, $list = false, $addExtension = true, $bypassGlobals = false)
    {
        $return = '';
        $scripts = array();
        $renderSingleScript = false;

        if (empty($extJs)) {
            $scripts = self::$scripts['external'];
        } elseif (is_string($extJs)) {
            // If scripts were passed, they override all other scripts.
            $scripts[] = $extJs;
            $renderSingleScript = true;
        } elseif (is_array($extJs)) {
            $scripts = $extJs;
        }

        // Make sure we check for a 'global.js' file.
        if ($bypassGlobals == false && self::$globals) {
            $scripts[] = 'global';
        }

        // Add a style named for the controller so it will be looked for.
        $scripts[] = self::$ci->router->fetch_class();

        // Prep scripts array with only files that can actually be found.
        $scripts = self::find_files($scripts, 'js');

        // Either combine the files into one...
        if (! $renderSingleScript
            && ! $list
            && self::$ci->config->item('assets.js_combine')
        ) {
            $attr = array('type'  => 'text/javascript');
            $attr['src'] = self::combine_js($scripts);

            $return .= '<script' . self::attributes($attr) . "></script>\n";
        } else {
            // Or generate individual links
            $http_protocol = is_https() ? 'https' : 'http';

            foreach ($scripts as $script) {
                if ($addExtension && substr($script, -3) != '.js') {
                    $script .= '.js';
                }
                $attr = array('type' => 'text/javascript');

                // If $script has a full url built in, leave it alone
                if (strpos($script, $http_protocol . ':') !== false // Absolute URL with current protocol, which should be more likely
                    || strpos($script, '//') === 0                  // Protocol-relative URL
                    || strpos($script, 'https:') !== false          // We should assume $http_protocol is most likely 'http', so check 'https' next
                    || strpos($script, 'http:') !== false           // Finally, check 'http' in case $http_protocol is 'https'
                ) {
                    $attr['src'] = $script;
                } elseif (strpos($script, base_url()) === 0) {
                    // Otherwise, build the full url
                    $attr['src'] = self::path(site_url(), $script);
                } else {
                    $attr['src'] = self::path(site_url(), self::$directories['base'], self::$directories['js'], $script);
                }

                if ($list) {
                    $return .= '"' . $attr['src'] . '", ';
                } else {
                    $return .= '<script' . self::attributes($attr) . "></script>\n";
                }
            }
        }

        return trim($return, ', ');
    }

    /**
     * Returns a link for js files contained in modules' assets folders.
     *
     * Note: all module js files are currently combined and output as a single script,
     * since the module directories are not normally in a location accessible to
     * the browser.
     *
     * @param boolean $list If true, will echo out the script name enclosed in quotes.
     * Convenient for using with third-party js loaders.
     *
     * @return string A string with the link(s) to the script files.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (SCALAR)))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))))
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CONST))
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_STATIC_PROP))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_UNARY_OP
                        (AST_VAR))
                    (AST_UNARY_OP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_STATIC_PROP))
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_STATIC_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR))))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_CALL)
                        (SCALAR)
                        (SCALAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_UNARY_OP
                                                    (SCALAR))))
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))))
                                                (AST_CONST))
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (SCALAR)))
                                        (AST_BINARY_OP
                                            (AST_CALL
                                                (
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_CONST)))
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)))
                                        (AST_CONST)))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_CALL)))
                                    (SCALAR))
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_CALL)
                                                (AST_VAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_STATIC_CALL
                                            (
                                                (AST_CALL)
                                                (AST_DIM
                                                    (AST_STATIC_PROP)
                                                    (SCALAR))
                                                (AST_DIM
                                                    (AST_STATIC_PROP)
                                                    (SCALAR))
                                                (AST_VAR)))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_VAR)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (SCALAR)))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR))))
                                            (SCALAR)))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)))))||||||||