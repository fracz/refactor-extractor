	public function db_available()
	{
		$driver = $this->ci->input->post('driver');

		switch ($driver) {
			case 'mysql':
				return function_exists('mysql_connect');

			case 'mysqli':
				return class_exists('Mysqli');

			case 'cubrid':
				return function_exists('cubrid_connect');

			case 'mongodb': // deprecated
				return class_exists('Mongo');

			case 'mongoclient': // I don't believe we have a driver for this, yet
				return class_exists('MongoClient');

			case 'mssql':
				return function_exists('mssql_connect');

			case 'oci8':
				return function_exists('oci_connect');

			case 'odbc':
				return function_exists('odbc_connect');

			case 'pdo':
				return class_exists('PDO');

			case 'postgre':
				return function_exists('pg_connect');

			case 'sqlite':
				return function_exists('sqlite_open');

			case 'sqlsrv':
				return function_exists('sqlsrv_connect');

			default:
				return false;
		}
	}

	/**
	 *	Attempts to connect to the database given the existing $_POST vars.
	 *
	 * @return	boolean
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (SCALAR))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_CALL
                            (
                                (SCALAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_CONST)))))))||||||||