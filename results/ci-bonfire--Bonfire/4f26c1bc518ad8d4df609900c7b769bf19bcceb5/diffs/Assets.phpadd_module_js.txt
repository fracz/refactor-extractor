    public static function add_module_js($module = '', $file = '')
    {
        if (empty($file)) {
            return;
        }

        // Add a string
        if (is_string($file)) {
            $file = array($file);
        }

        // Add an array
        if (is_array($file) && count($file)) {
            foreach ($file as $s) {
                self::$scripts['module'][] = array(
                    'module' => $module,
                    'file'   => $s,
                );
            }
        }
    }

    /**
     * Renders links to all javascript files including External, Module, and
     * Inline
     *
     * If a single filename is passed, it will only create a single link for
     * that file, otherwise, it will include any javascript files that have been
     * added with add_js().
     *
     * When passing a filename, the filepath should be relative to the site root
     * (where index.php resides).
     *
     * @param mixed  $script The name of the script to link to (optional)
     * @param string $type Whether the script should be linked to externally or
     * rendered inline. Acceptable values: 'external' or 'inline'
     *
     * @return string Returns all Scripts located in External JS, Module JS, and
     * Inline JS in that order.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (SCALAR))
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))))))))||||||||