	public function find_all($return_type=0)
	{
		if (empty($this->selects))
		{
			$this->select($this->table .'.*, role_name');
		}

		$this->db->join($this->roles_table, $this->roles_table . '.role_id = ' . $this->table . '.role_id', 'left');

		return parent::find_all($return_type);

	}//end find_all()

	//--------------------------------------------------------------------

	/**
	 * Locates a single user based on a field/value match, with their role information.
	 * If the $field string is 'both', then it will attempt to find the user
	 * where their $value field matches either the username or email on record.
	 *
	 * @access public
	 *
	 * @param string $field A string with the field to match.
	 * @param string $value A string with the value to search for.
	 * @param string $type  The type of where clause to create. Either 'and' or 'or'.
	 * @param int $return_type Choose the type of return type. 0 - Object, 1 - Array
	 *
	 * @return bool|object An object with the user's info, or FALSE on failure.
	 */
||||||||	public function find_all($return_type=0)
	{
		if (empty($this->selects))
		{
			$this->select($this->table .'.*, role_name');
		}

		$this->db->join($this->roles_table, $this->roles_table . '.role_id = ' . $this->table . '.role_id', 'left');

		if ($return_type == 0)
		{
			parent::as_object();
		}
		else
		{
			parent::as_array();
		}
		return parent::find_all();

	}//end find_all()

	//--------------------------------------------------------------------

	/**
	 * Locates a single user based on a field/value match, with their role information.
	 * If the $field string is 'both', then it will attempt to find the user
	 * where their $value field matches either the username or email on record.
	 *
	 * @access public
	 *
	 * @param string $field A string with the field to match.
	 * @param string $value A string with the value to search for.
	 * @param string $type  The type of where clause to create. Either 'and' or 'or'.
	 * @param int $return_type Choose the type of return type. 0 - Object, 1 - Array
	 *
	 * @return bool|object An object with the user's info, or FALSE on failure.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (SCALAR)))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_PROP
                        (AST_VAR)))
                (SCALAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_STATIC_CALL)))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL))))
    (AST_RETURN
        (AST_STATIC_CALL)))