	public function purge($users=array())
	{
		if (!is_array($users))
		{
			$users = array($users);
		}

		if (!empty($users))
		{
			$this->auth->restrict('Bonfire.Users.Manage');

			foreach ($users as $id)
			{
				$this->user_model->delete($id, TRUE);
			}
			Template::set_message(lang('us_action_purged'), 'success');
		}
		else
		{
			Template::set_message(lang('us_empty_id'), 'error');
		}

		Template::redirect(SITE_AREA .'/settings/users');

	}//end purge()

	//--------------------------------------------------------------------

	/**
	 * Restore the deleted user
	 *
	 * @access public
	 *
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_VAR)
                                (AST_CONST)))))
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)))
                        (SCALAR))))))
    (AST_STATIC_CALL
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR)))))||||||||