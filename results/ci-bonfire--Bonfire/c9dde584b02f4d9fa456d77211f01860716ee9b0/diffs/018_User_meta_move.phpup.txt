	public function up()
	{
		if ( ! $this->db->table_exists($this->meta_table))
		{
			$this->dbforge->add_field($this->meta_fields);
			$this->dbforge->add_key('meta_id', TRUE);
			$this->dbforge->create_table($this->meta_table);
		}

		/*
			Backup our users table

			...assuming BFPATH is set. It's not in the installer,
			but we don't actually want a backup for fresh installs
		*/
		// Only MySQL supports backups currently
		if (defined('BFPATH') && $this->db->dbdriver == 'mysql')
		{
			$filename = BFPATH .'/db/backups/backup_meta_users_table.txt';

			$this->load->dbutil();

			$prefs = array(
				'tables'		=> $this->db->dbprefix .'users',
				'format'		=> 'txt',
				'filename'		=> $filename,
				'add_drop'		=> true,
				'add_insert'	=> true
			);

			$backup =& $this->dbutil->backup($prefs);

			$this->load->helper('file');
			write_file($filename, $backup);

			if (file_exists($filename))
			{
				log_message('info', 'Backup file successfully saved. It can be found at <a href="/'. $filename .'">'. $filename . '</a>.');
			}
			else
			{
				log_message('error', 'There was a problem saving the backup file.');
				die('There was a problem saving the backup file.');
			}
		}

		/*
			Move User data to meta table
		*/

		// If there are users, loop through them and create meta entries
		// then remove all 'non-core' columns as they will now be in the meta table.
		if ($this->db->count_all_results($this->table))
		{
			$query = $this->db->get($this->table);
			$rows = $query->result();
			$meta_data = array();

			foreach ($rows as $row)
			{
				foreach ($this->default_fields as $field)
				{
					// We don't want to store the field if it doesn't exist in the user profile.
					if ( ! empty($row->$field))
					{
						$meta_data[] = array(
							'user_id'		=> $row->id,
							'meta_key'		=> $field,
							'meta_value'	=> $row->$field,
						);
					}
				}
			}
			$query->free_result();

			if ( ! empty($meta_data))
			{
				$this->db->insert_batch($this->meta_table, $meta_data);
			}

			unset($meta_data);
			unset($rows);
		}

		// run a quick query against the users table, then use the query to get the field list
		$user_query = $this->db->get_where($this->table, array('id' => 0));
		$fields = $user_query->list_fields();

		// Drop existing columns from users table.
		foreach ($fields as $field)
		{
			if ( ! in_array($field, $this->core_user_fields))
			{
				$this->dbforge->drop_column($this->table, $field);
			}
		}
		unset($fields);

		// Add new fields to users table
		$this->dbforge->add_column($this->table, $this->user_new_fields);

		// Add new settings
		$this->db->insert_batch($this->settings_table, $this->settings_data);
	}

	/**
	 * Uninstall this migration
	 * Note: this method does not fully support reverting to
	 * anything near the previous state of the database
	 */
||||||||	public function up()
	{
		if ( ! $this->db->table_exists($this->meta_table))
		{
			$this->dbforge->add_field($this->meta_fields);
			$this->dbforge->add_key('meta_id', TRUE);
			$this->dbforge->create_table($this->meta_table);
		}

		/*
			Backup our users table

			...assuming BFPATH is set. It's not in the installer,
			but we don't actually want a backup for fresh installs
		*/
		// Only MySQL supports backups currently
		if (defined('BFPATH') && $this->db->dbdriver == 'mysql')
		{
			$filename = BFPATH . '/db/backups/backup_meta_users_table.txt';

			$this->load->dbutil();

			$prefs = array(
				'tables'		=> $this->db->dbprefix . 'users',
				'format'		=> 'txt',
				'filename'		=> $filename,
				'add_drop'		=> true,
				'add_insert'	=> true,
			);

			$backup =& $this->dbutil->backup($prefs);

			$this->load->helper('file');
			write_file($filename, $backup);

			if (file_exists($filename))
			{
				log_message('info', 'Backup file successfully saved. It can be found at <a href="/'. $filename .'">'. $filename . '</a>.');
			}
			else
			{
				log_message('error', 'There was a problem saving the backup file.');
				die('There was a problem saving the backup file.');
			}
		}

		/*
			Move User data to meta table
		*/

		// If there are users, loop through them and create meta entries
		// then remove all 'non-core' columns as they will now be in the meta table.
		if ($this->db->count_all_results($this->table))
		{
			$query = $this->db->get($this->table);
			$rows = $query->result();
			$meta_data = array();

			foreach ($rows as $row)
			{
				foreach ($this->default_fields as $field)
				{
					// We don't want to store the field if it doesn't exist in the user profile.
					if ( ! empty($row->$field))
					{
						$meta_data[] = array(
							'user_id'		=> $row->id,
							'meta_key'		=> $field,
							'meta_value'	=> $row->$field,
						);
					}
				}
			}
			$query->free_result();

			if ( ! empty($meta_data))
			{
				$this->db->insert_batch($this->meta_table, $meta_data);
			}

			unset($meta_data, $rows);
		}

		// $this->db->list_fields uses $this->result_id, which may be
		// incorrect due to insert_batch() or free_result() above,
		// so we run a quick query against the correct table to fix
		// the result_id
		$query = $this->db->get_where($this->table, array('id' => 0));

		// Drop existing columns from users table.
		$fields = $query->list_fields();
		foreach ($fields as $field)
		{
			if ( ! in_array($field, $this->core_user_fields))
			{
				$this->dbforge->drop_column($this->table, $field);
			}
		}
		unset($fields);
		$query->free_result();

		// Add new fields to users table
		$this->dbforge->add_column($this->table, $this->user_new_fields);

		// Add new settings
		$this->db->insert_batch($this->settings_table, $this->settings_data);
	}

	/**
	 * Uninstall this migration
	 * Note: this method does not fully support reverting to
	 * anything near the previous state of the database
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_EXIT
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))))
                (AST_UNSET
                    (AST_VAR))
                (AST_UNSET
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_UNSET
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_CONST)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_CONST)
                        (SCALAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CONST)
                            (SCALAR))))
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_VAR))
                                        (SCALAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)))
                            (AST_EXIT
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_FOREACH
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)
                            (NULL)
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (NULL))
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (AST_ARRAY_ELEM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))))))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_EMPTY
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR))))))
                (AST_UNSET
                    (AST_VAR))
                (AST_UNSET
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_UNSET
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR)))))