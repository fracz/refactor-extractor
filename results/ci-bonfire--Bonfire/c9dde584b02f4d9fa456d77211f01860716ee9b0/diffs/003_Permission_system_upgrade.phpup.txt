	public function up()
	{
		/* Take care of a few preliminaries before updating */
		// Add new Site.Signin.Offline permission
        if ( ! $this->db->field_exists('Site.Signin.Offline', $this->permissions_table))
        {
            $this->dbforge->add_column($this->permissions_table, $this->permissions_fields);
        }
//		$this->db->where('role_id', 1)->update($this->permissions_table, $this->permissions_data);
		$prefix = $this->db->dbprefix;
		$this->db->query("UPDATE {$prefix}permissions SET `Site.Signin.Offline`=1 WHERE `role_id`=1");

		// Rename Site.Statistics.View to Site.Reports.View
        if ($this->db->field_exists('Site.Statistics.View', $this->permissions_table))
        {
//		    $this->dbforge->modify_column($this->permissions_table, $this->permissions_modify_fields);
            $this->db->query("ALTER TABLE {$prefix}permissions CHANGE `Site.Statistics.View` `Site.Reports.View` TINYINT(1) DEFAULT 0 NOT NULL");
        }

		// Remove Site.Appearance.View
        if ($this->db->field_exists('Site.Appearance.View', $this->permissions_table))
        {
/*		    foreach ($this->permissions_drop_fields as $column_name => $column_def)
            {
            	$this->dbforge->drop_column($this->permissions_table, $column_name);
            }
 */
            $this->db->query("ALTER TABLE {$prefix}permissions DROP COLUMN `Site.Appearance.View`");
        }

		/* Do the actual update. */
		// get the current permissions assigned to each role
		$permission_query = $this->db->get($this->permissions_table);

		// get the field names in the current permissions table
		$permissions_fields = $permission_query->list_fields();

		$old_permissions_array = array();
		foreach ($permission_query->result_array() as $row)
		{
			$old_permissions_array[$row['role_id']] = $row;
		}

		// modify the permissions table
		$this->dbforge->rename_table($this->permissions_table, $this->permissions_old_table);

		$this->dbforge->add_field($this->permissions_new_fields);
		$this->dbforge->add_key('permission_id', TRUE);
		$this->dbforge->create_table($this->permissions_table);

		// add records for each of the old permissions
		$old_permissions_records = array();
		foreach ($permissions_fields as $field)
		{
			if ($field != 'role_id' && $field != 'permission_id')
			{
				$old_permissions_records[] = array(
					'name' => $field,
					'description' => '',
				);
			}
		}
		$old_permissions_records[] = array(
			'name' 			=> 'Permissions.Settings.View',
			'description'	=> 'Allow access to view the Permissions menu unders Settings Context'
		);
		$old_permissions_records[] = array(
			'name'			=> 'Permissions.Settings.Manage',
			'description'	=> 'Allow access to manage the Permissions in the system',
		);
		$this->db->insert_batch($this->permissions_table, $old_permissions_records);

		// create the new role_permissions table
		$this->dbforge->add_field($this->role_permissions_fields);
		$this->dbforge->add_key('role_id', TRUE);
		$this->dbforge->add_key('permission_id', TRUE);
		$this->dbforge->create_table($this->role_permissions_table);

		// add records to allow access to the permissions by the roles - adding records to role_permissions
		// get the current list of permissions
		$new_permission_query = $this->db->get($this->permissions_table);
		$role_permissions_records = array();
		// loop through the current permissions
		foreach ($new_permission_query->result_array() as $permission_rec)
		{
			// loop through the old permissions
			foreach ($old_permissions_array as $role_id => $role_permissions)
			{
				// if the role had access to this permission then give it access again
				if (isset($role_permissions[$permission_rec['name']]) && $role_permissions[$permission_rec['name']] == 1)
				{
					$role_permissions_records[] = array(
						'role_id' => $role_id,
						'permission_id' => $permission_rec['permission_id'],
					);
				}

				// specific case for the administrator to get access to - Bonfire.Permissions.Manage
				if ($role_id == 1 && $permission_rec['name'] == 'Bonfire.Permissions.Manage')
				{
					$role_permissions_records[] = array(
						'role_id' => $role_id,
						'permission_id' => $permission_rec['permission_id'],
					);
				}
			}

			// give the administrator access to the new "Permissions" permissions
			if ($permission_rec['name'] == 'Permissions.Settings.View' || $permission_rec['name'] == 'Permissions.Settings.Manage')
			{
				$role_permissions_records[] = array(
					'role_id' => 1,
					'permission_id' => $permission_rec['permission_id'],
				);
			}
		}

		$this->db->insert_batch($this->role_permissions_table, $role_permissions_records);
	}

	/**
	 * Uninstall this migration
	 */
||||||||	public function up()
	{
		/* Take care of a few preliminaries before updating */
		// Add new Site_Signin_Offline permission
        if ( ! $this->db->field_exists('Site_Signin_Offline', $this->permissions_table))
        {
            $this->dbforge->add_column($this->permissions_table, $this->permissions_fields);

    		$this->db->where('role_id', $this->admin_role_id)
                ->update($this->permissions_table, $this->permissions_data);
/*		    $prefix = $this->db->dbprefix;
            $this->db->query("UPDATE {$prefix}permissions SET `Site.Signin.Offline`=1 WHERE `role_id`=1");
*/
        }

		// Rename Site_Statistics_View to Site_Reports_View
        if ($this->db->field_exists('Site_Statistics_View', $this->permissions_table))
        {
		    $this->dbforge->modify_column($this->permissions_table, $this->permissions_modify_fields);
//            $this->db->query("ALTER TABLE {$prefix}permissions CHANGE `Site.Statistics.View` `Site.Reports.View` TINYINT(1) DEFAULT 0 NOT NULL");
        }

		// Remove Site.Appearance.View
        if ($this->db->field_exists('Site_Appearance_View', $this->permissions_table))
        {
		    foreach ($this->permissions_drop_fields as $column_name => $column_def)
            {
            	$this->dbforge->drop_column($this->permissions_table, $column_name);
            }
//            $this->db->query("ALTER TABLE {$prefix}permissions DROP COLUMN `Site.Appearance.View`");
        }

		/* Do the actual update. */
		// get the current permissions assigned to each role
		$permission_query = $this->db->get($this->permissions_table);

		// get the field names in the current permissions table
		$permissions_fields = $permission_query->list_fields();

		$old_permissions_array = array();
		foreach ($permission_query->result_array() as $row)
		{
			$old_permissions_array[$row['role_id']] = $row;
		}

		// modify the permissions table
		$this->dbforge->rename_table($this->permissions_table, $this->permissions_old_table);

        // create the new permissions table
		$this->dbforge->add_field($this->permissions_new_fields);
		$this->dbforge->add_key('permission_id', TRUE);
		$this->dbforge->create_table($this->permissions_table);

		// add records for each of the old permissions
		$old_permissions_records = array();
		foreach ($permissions_fields as $field)
		{
            // if this is not the role_id or permission_id field,
            // replace underscores with '.' to generate the permission names
			if ($field != 'role_id' && $field != 'permission_id')
			{
                $permission_name = str_replace('_', '.', $field);
				$old_permissions_records[] = array(
					'name' => $permission_name,
					'description' => '',
				);
			}
		}

        // Add permissions to access permissions settings
		$old_permissions_records[] = array(
			'name' 			=> 'Permissions.Settings.View',
			'description'	=> 'Allow access to view the Permissions menu unders Settings Context'
		);
		$old_permissions_records[] = array(
			'name'			=> 'Permissions.Settings.Manage',
			'description'	=> 'Allow access to manage the Permissions in the system',
		);
		$this->db->insert_batch($this->permissions_table, $old_permissions_records);

		// create the new role_permissions table
		$this->dbforge->add_field($this->role_permissions_fields);
		$this->dbforge->add_key('role_id', TRUE);
		$this->dbforge->add_key('permission_id', TRUE);
		$this->dbforge->create_table($this->role_permissions_table);

		// add records to allow access to the permissions by the roles - adding records to role_permissions
		// get the current list of permissions
		$new_permission_query = $this->db->get($this->permissions_table);
		$role_permissions_records = array();

		// loop through the current permissions
		foreach ($new_permission_query->result_array() as $permission_rec)
		{
            $old_permission_name = str_replace('.', '_', $permission_rec['name']);

			// loop through the old permissions
			foreach ($old_permissions_array as $role_id => $role_permissions)
			{
				// if the role had access to this permission then give it access again
				if (isset($role_permissions[$old_permission_name]) && $role_permissions[$old_permission_name] == 1)
				{
					$role_permissions_records[] = array(
						'role_id' => $role_id,
						'permission_id' => $permission_rec['permission_id'],
					);
				}
			}

			// give the administrator access to the new "Permissions" permissions
			if ($permission_rec['name'] == 'Permissions.Settings.View'
                || $permission_rec['name'] == 'Permissions.Settings.Manage'
                || $permission_rec['name'] == 'Bonfire.Permissions.Manage'
                )
			{
				$role_permissions_records[] = array(
					'role_id' => $this->admin_role_id,
					'permission_id' => $permission_rec['permission_id'],
				);
			}
		}

		$this->db->insert_batch($this->role_permissions_table, $role_permissions_records);
	}

	/**
	 * Uninstall this migration
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (AST_PROP
                                (AST_VAR))))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (SCALAR)
                                    (SCALAR)))))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (SCALAR)
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_BINARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (SCALAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR))
                            (AST_BINARY_OP
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))