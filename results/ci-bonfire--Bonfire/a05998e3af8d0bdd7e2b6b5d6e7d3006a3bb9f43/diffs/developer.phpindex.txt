	public function index($transLang = 'english')
	{
		// Selecting a different language?
		if (isset($_POST['select_lang'])) {
			$transLang = $this->input->post('trans_lang') == 'other' ? $this->input->post('new_lang') : $this->input->post('trans_lang');
		}

		if ( ! in_array($transLang, $this->langs)) {
			$this->langs[] = $transLang;
		}

		// Check whether there are custom modules
		$allLangFiles = list_lang_files();

		if (isset($allLangFiles['custom'])) {
			Template::set('modules', $allLangFiles['custom']);
		}

		Template::set('lang_files', $allLangFiles['core']);
		Template::set('languages', $this->langs);
		Template::set('trans_lang', $transLang);
		Template::set('toolbar_title', sprintf(lang('tr_translate_title'), ucfirst($transLang)));
		Template::render();
	}

	/**
	 * Allow the user to edit a language file
	 *
	 * @param string $transLang The target language for translation
	 * @param string $langFile  The file to translate
	 *
	 * @return void
	 */
||||||||	public function index($transLang = '')
	{
		if (empty($transLang)) {
			$config =& get_config();
			$transLang = ( ! isset($config['language'])) ? 'english' : $config['language'];
		}
		// Selecting a different language?
		if (isset($_POST['select_lang'])) {
			$transLang = $this->input->post('trans_lang') == 'other' ? $this->input->post('new_lang') : $this->input->post('trans_lang');
		}

		if ( ! in_array($transLang, $this->langs)) {
			$this->langs[] = $transLang;
		}

		// Check whether there are custom modules
		$allLangFiles = list_lang_files();

		if (isset($allLangFiles['custom'])) {
			Template::set('modules', $allLangFiles['custom']);
		}

		Template::set('lang_files', $allLangFiles['core']);
		Template::set('languages', $this->langs);
		Template::set('trans_lang', $transLang);
		Template::set('toolbar_title', sprintf(lang('tr_translate_title'), ucfirst($transLang)));
		Template::render();
	}

	/**
	 * Allow the user to edit a language file
	 *
	 * @param string $transLang The target language for translation
	 * @param string $langFile  The file to translate
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_STATIC_CALL))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN_REF
                    (AST_VAR)
                    (AST_CALL))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR)))
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_DIM
                (AST_VAR)
                (SCALAR))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_PROP
                (AST_VAR))))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_VAR)))
    (AST_STATIC_CALL
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)))
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_STATIC_CALL))