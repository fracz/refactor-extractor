    public function testIsColumnChar()
    {
        $column = array();
        $column['Type'] = 'char(10)';
        $this->assertEquals('char(10)', PMA_iscolumnchar($column));

        $column['Type'] = 'VarChar(20)';
        $this->assertEquals('Char(20)', PMA_iscolumnchar($column));

        $column['Type'] = 'foochar';
        $this->assertFalse(PMA_iscolumnchar($column));
    }

    /**
     * Test for PMA_getEnumSetAndTimestampColumns
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CALL
                (
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR))))))||||||||