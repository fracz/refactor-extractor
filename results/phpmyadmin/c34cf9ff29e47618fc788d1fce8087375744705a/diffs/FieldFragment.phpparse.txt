    public static function parse(Parser $parser, TokensList $list, array $options = array())
    {
        $ret = new FieldFragment();

        /**
         * Whether current tokens make an expression or a table reference.
         * @var bool
         */
        $isExpr = false;

        /**
         * Whether a period was previously found.
         * @var bool
         */
        $period = false;

        /**
         * Whether an alias is expected. Is 2 if `AS` keyword was found.
         * @var int
         */
        $alias = 0;

        /**
         * Counts brackets.
         * @var int
         */
        $brackets = 0;

        /**
         * Keeps track of the previous token.
         * Possible values:
         *     string, if function was previously found;
         *     true, if open bracket was previously found;
         *     null, in any other case.
         * @var string|bool
         */
        $prev = null;

        for (; $list->idx < $list->count; ++$list->idx) {
            /**
             * Token parsed at this moment.
             * @var Token
             */
            $token = $list->tokens[$list->idx];

            // End of statement.
            if ($token->type === Token::TYPE_DELIMITER) {
                break;
            }

            // Skipping whitespaces and comments.
            if (($token->type === Token::TYPE_WHITESPACE) || ($token->type === Token::TYPE_COMMENT)) {
                if (($isExpr) && (!$alias)) {
                    $ret->expr .= $token->token;
                }
                if (($alias === 0) && (!$isExpr) && (!$period) && (!empty($ret->expr))) {
                    $alias = 1;
                }
                continue;
            }

            if (($token->type === Token::TYPE_KEYWORD) && ($token->flags & Token::FLAG_KEYWORD_RESERVED)) {
                // Keywords may be found only between brackets.
                if ($brackets === 0) {
                    if ($token->value === 'AS') {
                        $alias = 2;
                        continue;
                    }
                    if (!($token->flags & Token::FLAG_KEYWORD_FUNCTION)) {
                        break;
                    }
                } elseif ($prev === true) {
                    if ((empty($ret->subquery) && (!empty(Parser::$STATEMENT_PARSERS[$token->value])))) {
                        // A `(` was previously found and this keyword is the
                        // beginning of a statement, so this is a subquery.
                        $ret->subquery = $token->value;
                    }
                }
            }

            if ($token->type === Token::TYPE_OPERATOR) {
                if ($token->value === '(') {
                    ++$brackets;
                    // We don't check to see if `$prev` is `true` (open bracke
                    // was found before) because the brackets count is one (the
                    // only bracket we found is this one).
                    if (($brackets === 1) && (empty($ret->function)) && ($prev !== null) && ($prev !== true)) {
                        // A function name was previously found and now an open
                        // bracket, so this is a function call.
                        $ret->function = $prev;
                    }
                    $isExpr = true;
                } elseif ($token->value === ')') {
                    --$brackets;
                    if ($brackets < 0) {
                        $parser->error('Unexpected bracket.', $token);
                        $brackets = 0;
                    }
                } elseif ($token->value === ',') {
                    if ($brackets === 0) {
                        break;
                    }
                }
            }

            if (($token->type === Token::TYPE_NUMBER) || ($token->type === Token::TYPE_BOOL)
                || (($token->type === Token::TYPE_SYMBOL) && ($token->flags & Token::FLAG_SYMBOL_VARIABLE))
                || (($token->type === Token::TYPE_OPERATOR)) && ($token->value !== '.')
            ) {
                // Numbers, booleans and operators are usually part of expressions.
                $isExpr = true;
            }

            if ($alias) {
                // An alias is expected (the keyword `AS` was previously found).
                $ret->alias = $token->value;
                $alias = 0;
            } else {
                if (!$isExpr) {
                    if (($token->type === Token::TYPE_OPERATOR) && ($token->value === '.')) {
                        // Found a `.` which means we expect a column name and
                        // the column name we parsed is actually the table name
                        // and the table name is actually a database name.
                        if ((!empty($ret->database)) || ($period)) {
                            $parser->error('Unexpected dot.', $token);
                        }
                        $ret->database = $ret->table;
                        $ret->table = $ret->column;
                        $period = true;
                    } else {
                        // We found the name of a column (or table if column
                        // field should be skipped; used to parse table names).
                        if (!empty($options['skipColumn'])) {
                            $ret->table = $token->value;
                        } else {
                            $ret->column = $token->value;
                        }
                        $period = false;
                    }
                } else {
                    // Parsing aliases without `AS` keyword.
                    // Example: SELECT 'foo' `bar`
                    if ($brackets === 0) {
                        if (($token->type === Token::TYPE_NONE) || ($token->type === Token::TYPE_STRING)
                            || (($token->type === Token::TYPE_SYMBOL) && ($token->flags & Token::FLAG_SYMBOL_BACKTICK))
                        ) {
                            $ret->alias = $token->value;
                        }
                    }
                }

                $ret->expr .= $token->token;
            }

            if (($token->type === Token::TYPE_KEYWORD) && ($token->flags & Token::FLAG_KEYWORD_FUNCTION)) {
                $prev = strtoupper($token->value);
            } elseif (($token->type === Token::TYPE_OPERATOR) || ($token->value === '(')) {
                $prev = true;
            } else {
                $prev = null;
            }

        }

        if ($alias === 2) {
            $parser->error('Alias was expected.');
        }

        // Whitespaces might be added at the end.
        $ret->expr = trim($ret->expr);

        if (empty($ret->expr)) {
            return null;
        }

        --$list->idx;
        return $ret;
    }

    /**
     * @param FieldFragment $fragment The fragment to be built.
     *
     * @return string
     */
||||||||    public static function parse(Parser $parser, TokensList $list, array $options = array())
    {
        $ret = new FieldFragment();

        /**
         * Whether current tokens make an expression or a table reference.
         * @var bool
         */
        $isExpr = false;

        /**
         * Whether a period was previously found.
         * @var bool
         */
        $period = false;

        /**
         * Whether an alias is expected. Is 2 if `AS` keyword was found.
         * @var int
         */
        $alias = 0;

        /**
         * Counts brackets.
         * @var int
         */
        $brackets = 0;

        /**
         * Keeps track of the previous token.
         * Possible values:
         *     string, if function was previously found;
         *     true, if open bracket was previously found;
         *     null, in any other case.
         * @var string|bool
         */
        $prev = null;

        for (; $list->idx < $list->count; ++$list->idx) {
            /**
             * Token parsed at this moment.
             * @var Token
             */
            $token = $list->tokens[$list->idx];

            // End of statement.
            if ($token->type === Token::TYPE_DELIMITER) {
                break;
            }

            // Skipping whitespaces and comments.
            if (($token->type === Token::TYPE_WHITESPACE) || ($token->type === Token::TYPE_COMMENT)) {
                if (($isExpr) && (!$alias)) {
                    $ret->expr .= $token->token;
                }
                if (($alias === 0) && (!$isExpr) && (!$period) && (!empty($ret->expr))) {
                    $alias = 1;
                }
                continue;
            }

            if (($token->type === Token::TYPE_KEYWORD) && ($token->flags & Token::FLAG_KEYWORD_RESERVED)) {
                // Keywords may be found only between brackets.
                if ($brackets === 0) {
                    if ((empty($options['noAlias'])) && ($token->value === 'AS')) {
                        $alias = 2;
                        continue;
                    }
                    if (!($token->flags & Token::FLAG_KEYWORD_FUNCTION)) {
                        break;
                    }
                } elseif ($prev === true) {
                    if ((empty($ret->subquery) && (!empty(Parser::$STATEMENT_PARSERS[$token->value])))) {
                        // A `(` was previously found and this keyword is the
                        // beginning of a statement, so this is a subquery.
                        $ret->subquery = $token->value;
                    }
                }
            }

            if ($token->type === Token::TYPE_OPERATOR) {
                if ((!empty($options['noBrackets'])) &&
                    (($token->value === '(') || ($token->value === ')'))
                ) {
                    break;
                }
                if ($token->value === '(') {
                    ++$brackets;
                    // We don't check to see if `$prev` is `true` (open bracke
                    // was found before) because the brackets count is one (the
                    // only bracket we found is this one).
                    if (($brackets === 1) && (empty($ret->function)) && ($prev !== null) && ($prev !== true)) {
                        // A function name was previously found and now an open
                        // bracket, so this is a function call.
                        $ret->function = $prev;
                    }
                    $isExpr = true;
                } elseif ($token->value === ')') {
                    --$brackets;
                    if ($brackets < 0) {
                        $parser->error('Unexpected bracket.', $token);
                        $brackets = 0;
                    }
                } elseif ($token->value === ',') {
                    if ($brackets === 0) {
                        break;
                    }
                }
            }

            if (($token->type === Token::TYPE_NUMBER) || ($token->type === Token::TYPE_BOOL)
                || (($token->type === Token::TYPE_SYMBOL) && ($token->flags & Token::FLAG_SYMBOL_VARIABLE))
                || (($token->type === Token::TYPE_OPERATOR)) && ($token->value !== '.')
            ) {
                // Numbers, booleans and operators are usually part of expressions.
                $isExpr = true;
            }

            if ($alias) {
                // An alias is expected (the keyword `AS` was previously found).
                $ret->alias = $token->value;
                $alias = 0;
            } else {
                if (!$isExpr) {
                    if (($token->type === Token::TYPE_OPERATOR) && ($token->value === '.')) {
                        // Found a `.` which means we expect a column name and
                        // the column name we parsed is actually the table name
                        // and the table name is actually a database name.
                        if ((!empty($ret->database)) || ($period)) {
                            $parser->error('Unexpected dot.', $token);
                        }
                        $ret->database = $ret->table;
                        $ret->table = $ret->column;
                        $period = true;
                    } else {
                        // We found the name of a column (or table if column
                        // field should be skipped; used to parse table names).
                        if (!empty($options['skipColumn'])) {
                            $ret->table = $token->value;
                        } else {
                            $ret->column = $token->value;
                        }
                        $period = false;
                    }
                } else {
                    // Parsing aliases without `AS` keyword.
                    // Example: SELECT 'foo' `bar`
                    if ($brackets === 0) {
                        if (($token->type === Token::TYPE_NONE) || ($token->type === Token::TYPE_STRING)
                            || (($token->type === Token::TYPE_SYMBOL) && ($token->flags & Token::FLAG_SYMBOL_BACKTICK))
                        ) {
                            $ret->alias = $token->value;
                        }
                    }
                }

                $ret->expr .= $token->token;
            }

            if (($token->type === Token::TYPE_KEYWORD) && ($token->flags & Token::FLAG_KEYWORD_FUNCTION)) {
                $prev = strtoupper($token->value);
            } elseif (($token->type === Token::TYPE_OPERATOR) || ($token->value === '(')) {
                $prev = true;
            } else {
                $prev = null;
            }

        }

        if ($alias === 2) {
            $parser->error('Alias was expected.');
        }

        // Whitespaces might be added at the end.
        $ret->expr = trim($ret->expr);

        if (empty($ret->expr)) {
            return null;
        }

        --$list->idx;
        return $ret;
    }

    /**
     * @param FieldFragment $fragment The fragment to be built.
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOR
        (NULL)
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_UNARY_OP
                                                (AST_VAR)))
                                        (AST_UNARY_OP
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))
                                            (
                                                (AST_BREAK
                                                    (NULL)))))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_EMPTY
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_DIM
                                                            (AST_STATIC_PROP)
                                                            (AST_PROP
                                                                (AST_VAR))))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR))))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_PRE_INC
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_EMPTY
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CONST)))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_VAR)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_PRE_DEC
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_BREAK
                                                    (NULL)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_UNARY_OP
                                                                (AST_EMPTY
                                                                    (AST_PROP
                                                                        (AST_VAR))))
                                                            (AST_VAR))
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR))))))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_EMPTY
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR)))))
                                                    (AST_IF_ELEM
                                                        (NULL)
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR))))
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))))))))))))
                        (AST_ASSIGN_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_PRE_DEC
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOR
        (NULL)
        (AST_EXPR_LIST
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))))
        (AST_EXPR_LIST
            (AST_PRE_INC
                (AST_PROP
                    (AST_VAR))))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_PROP
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_BREAK
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_UNARY_OP
                                        (AST_VAR)))
                                (
                                    (AST_ASSIGN_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_PROP
                                            (AST_VAR))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_UNARY_OP
                                                (AST_VAR)))
                                        (AST_UNARY_OP
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_PROP
                                                (AST_VAR)))))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (SCALAR)))))
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_EMPTY
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR))))
                                            (
                                                (AST_BREAK
                                                    (NULL)))))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONST))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_EMPTY
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_DIM
                                                            (AST_STATIC_PROP)
                                                            (AST_PROP
                                                                (AST_VAR))))))
                                            (
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR))))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR))))
                                (
                                    (AST_BREAK
                                        (NULL)))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_PRE_INC
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (AST_EMPTY
                                                            (AST_PROP
                                                                (AST_VAR))))
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CONST)))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_CONST)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_VAR)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_PRE_DEC
                                        (AST_VAR))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (SCALAR)))))))
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_BREAK
                                                    (NULL)))))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR))))
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CLASS_CONST
                                        (SCALAR)))))
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CLASS_CONST
                                    (SCALAR)))
                            (AST_BINARY_OP
                                (AST_PROP
                                    (AST_VAR))
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (SCALAR))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_VAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CLASS_CONST
                                                        (SCALAR)))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (SCALAR)))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_UNARY_OP
                                                                (AST_EMPTY
                                                                    (AST_PROP
                                                                        (AST_VAR))))
                                                            (AST_VAR))
                                                        (
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (SCALAR)
                                                                    (AST_VAR))))))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_EMPTY
                                                                (AST_DIM
                                                                    (AST_VAR)
                                                                    (SCALAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR)))))
                                                    (AST_IF_ELEM
                                                        (NULL)
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR))))
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))
                                                                (AST_BINARY_OP
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR)))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_PROP
                                                                    (AST_VAR))
                                                                (AST_PROP
                                                                    (AST_VAR))))))))))))
                        (AST_ASSIGN_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_PROP
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_PRE_DEC
        (AST_PROP
            (AST_VAR)))
    (AST_RETURN
        (AST_VAR)))