    public function testDoImport()
    {
        //$import_notice will show the import detail result
        global $import_notice;

        //mock DBI
        $dbi = $this->getMockBuilder('PMA_DatabaseInterface')
            ->disableOriginalConstructor()
            ->getMock();
        $dbi->expects($this->once())
            ->method('isSuperuser')
            ->with(true);
        $GLOBALS['dbi'] = $dbi;

        //Test function called
        $this->object->doImport();

        //If import successfully, PMA will show all databases and tables imported as following HTML Page
        /*
           The following structures have either been created or altered. Here you can:
           View a structure's contents by clicking on its name
           Change any of its settings by clicking the corresponding "Options" link
           Edit structure by following the "Structure" link

           phpmyadmin (Options)
           pma_bookmark (Structure) (Options)
        */
        $import_succesful_display_message =
               '<br /><br /><strong>The following structures have either '
             . 'been created or altered. Here you can:</strong><br /><ul>'
             . '<li>View a structure\'s contents by clicking on its name</li>'
             . '<li>Change any of its settings by clicking the corresponding "Options" link</li>'
             . '<li>Edit structure by following the "Structure" link</li>'
             . '<br />'
             . '<li><a href="db_structure.php?db=phpmyadmin&amp;lang=en&amp;'
             . 'token=token" title="Go to database: `phpmyadmin`">phpmyadmin</a> (<a href="db_op'
             . 'erations.php?db=phpmyadmin&amp;lang=en&amp;token=token" title="Edit settings for'
             . ' `phpmyadmin`">Options</a>)</li>'
             . '<ul><li><a href="sql.php?db=phpmyadmin&amp;table'
             . '=pma_bookmark&amp;lang=en&amp;token=token" title="Go to table: `pma_bookmark`">pma_bookmark'
             . '</a> (<a href="tbl_structure.php?db=phpmyadmin&amp;table=pma_bookmark'
             . '&amp;lang=en&amp;token=token" title="Structure of `pma_bookmark`">Structure</a>)'
             . ' (<a href="tbl_operations.php?db=phpmyadmin&amp;table=pma_bookmark&amp;lang=en&amp;'
             . 'token=token" title="Edit settings for `pma_bookmark`">Options</a>)'
             . '</li></ul></ul>';

        //asset that all databases and tables are imported
        $this->assertEquals(
            $import_succesful_display_message,
            $import_notice
        );
        $this->assertEquals(
            true,
            $GLOBALS['finished']
        );

    }
}||||||||    public function testDoImport()
    {
        //$import_notice will show the import detail result
        global $import_notice;

        //Mock DBI
        $dbi = $this->getMockBuilder('PMA_DatabaseInterface')
            ->disableOriginalConstructor()
            ->getMock();
        $GLOBALS['dbi'] = $dbi;

        //Test function called
        $this->object->doImport();

        //If import successfully, PMA will show all databases and tables imported as following HTML Page
        /*
           The following structures have either been created or altered. Here you can:
           View a structure's contents by clicking on its name
           Change any of its settings by clicking the corresponding "Options" link
           Edit structure by following the "Structure" link

           phpmyadmintest (Options)
           pma_bookmarktest (Structure) (Options)
        */
        $import_succesful_display_message =
               '<br /><br /><strong>The following structures have either '
             . 'been created or altered. Here you can:</strong>'
             . '<br />'

             . '<ul>'
             .    '<li>View a structure\'s contents by clicking on its name</li>'
             .    '<li>Change any of its settings by clicking the corresponding "Options" link</li>'
             .    '<li>Edit structure by following the "Structure" link</li>'

             . '<br />'
             .    '<li><a href="db_structure.php?db=phpmyadmintest&amp;lang=en&amp;token=token" '
             .    'title="Go to database: `phpmyadmintest`">phpmyadmintest</a> (<a href="'
             .    'db_operations.php?db=phpmyadmintest&amp;lang=en&amp;token=token" '
             .    'title="Edit settings for `phpmyadmintest`">Options</a>)'
             .    '</li>'

             . '<ul>'
             .     '<li>'
             .     '<a href="sql.php?db=phpmyadmintest&amp;table=pma_bookmarktest&amp;lang=en&amp;token=token"'
             .     ' title="Go to table: `pma_bookmarktest`">pma_bookmarktest</a> '
             .     '(<a href="tbl_structure.php?db=phpmyadmintest&amp;table=pma_bookmarktest&amp;lang=en&amp;token=token"'
             .     ' title="Structure of `pma_bookmarktest`">Structure</a>) (<a href="tbl_operations.php?'
             .     'db=phpmyadmintest&amp;table=pma_bookmarktest&amp;lang=en&amp;token=token" title="Edit settings'
             .     ' for `pma_bookmarktest`">Options</a>)'
             .     '</li>'
             . '</ul>'
             . '</ul>';

        //asset that all databases and tables are imported
        $this->assertEquals(
            $import_succesful_display_message,
            $import_notice
        );
        $this->assertEquals(
            true,
            $GLOBALS['finished']
        );

    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_CONST)))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (SCALAR)
                                                                        (SCALAR))
                                                                    (SCALAR))
                                                                (SCALAR))
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (SCALAR))
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_BINARY_OP
                                                            (AST_BINARY_OP
                                                                (AST_BINARY_OP
                                                                    (AST_BINARY_OP
                                                                        (AST_BINARY_OP
                                                                            (AST_BINARY_OP
                                                                                (AST_BINARY_OP
                                                                                    (AST_BINARY_OP
                                                                                        (AST_BINARY_OP
                                                                                            (AST_BINARY_OP
                                                                                                (AST_BINARY_OP
                                                                                                    (SCALAR)
                                                                                                    (SCALAR))
                                                                                                (SCALAR))
                                                                                            (SCALAR))
                                                                                        (SCALAR))
                                                                                    (SCALAR))
                                                                                (SCALAR))
                                                                            (SCALAR))
                                                                        (SCALAR))
                                                                    (SCALAR))
                                                                (SCALAR))
                                                            (SCALAR))
                                                        (SCALAR))
                                                    (SCALAR))
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR))
                        (SCALAR))
                    (SCALAR))
                (SCALAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)
            (AST_DIM
                (AST_VAR)
                (SCALAR)))))