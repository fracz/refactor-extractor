||||||||    function run() {
        // HowTo: A simple Advisory system in 3 easy steps.

        // Step 1: Get some variables to evaluate on
        $this->variables = array_merge(PMA_DBI_fetch_result('SHOW GLOBAL STATUS', 0, 1), PMA_DBI_fetch_result('SHOW GLOBAL VARIABLES', 0, 1));
        // Step 2: Read and parse the list of rules
        $this->parseResult = $this->parseRulesFile();
        // Step 3: Feed the variables to the rules and let them fire. Sets $runResult
        $this->runRules();

      /*  echo '<br/><hr>';
        echo 'Total rules: '.count($this->parseResult['rules']).' <br><br>';
        echo '<b>Possible performance issues</b><br/>';
        foreach($this->runResult['fired'] as $rule) {
            echo $rule['issue'].'<br />';
        }
        echo '<br/><b>Rules not checked due to unmet preconditions</b><br/>';
        foreach($this->runResult['unchecked'] as $rule) {
            echo $rule['name'].'<br />';
        }
        echo '<br/><b>Rules that didn\'t fire</b><br/>';
        foreach($this->runResult['notfired'] as $rule) {
            echo $rule['name'].'<br />';
        }

        if($this->runResult['errors'])
            echo 'There were errors while testing the rules.';
          */
        return $this->runResult;
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))