||||||||    function testPMADisplayTablesInEditPrivs()
    {
        // Setup for the test
        $GLOBALS['dbi']->expects($this->any())->method('fetchRow')
            ->will($this->onConsecutiveCalls(array('t<bl'), array('ab"c')));

        // Test case 1
        $actual = PMA_displayTablesInEditPrivs('testdb', array());
        $this->assertTag(
            PMA_getTagArray('<input type="hidden" name="dbname" value="testdb"/>'),
            $actual
        );
        $this->assertTag(
            PMA_getTagArray(
                '<label for="text_tablename">',
                array('content' => 'Add privileges on the following table:')
            ),
            $actual
        );
        $this->assertTag(
            PMA_getTagArray(
                '<input type="text" id="text_tablename" name="tablename" />'
            ),
            $actual
        );
        $this->assertTag(
            PMA_getTagArray('<select name="pred_tablename" class="autosubmit">'),
            $actual
        );
        $this->assertTag(
            PMA_getTagArray(
                '<option value="" selected="selected">',
                array('content' => 'Use text field:')
            ),
            $actual
        );
        // assertTag doesn't seems to work with content having escaped html chars
        $this->assertContains(
            '<option value="t&lt;bl">t&lt;bl</option>', $actual
        );
        $this->assertContains(
            '<option value="ab&quot;c">ab&quot;c</option>', $actual
        );
        $this->assertContains(
            '<input type="text" id="text_tablename" name="tablename" />',
            $actual
        );
    }

    /**
     * Tests for PMA_getHtmlForInitials
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (NULL)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_ARRAY))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))