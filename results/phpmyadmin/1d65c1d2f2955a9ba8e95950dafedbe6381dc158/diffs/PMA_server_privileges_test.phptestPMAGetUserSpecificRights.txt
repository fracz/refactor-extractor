||||||||    function testPMAGetUserSpecificRights()
    {
        // Setup for the test
        $GLOBALS['dbi']->expects($this->any())->method('fetchAssoc')
            ->will(
                $this->onConsecutiveCalls(
                    array('Db' => 'y'), false, array('Db' => 'y'), false,
                    false, array('Table_name' => 't')
                )
            );

        // Test case 1
        $tables = array('columns_priv');
        $user_host_condition = '';
        $dbname = '';
        $expected = array(
            'y' => array(
                'privs' => array('USAGE'),
                'Db' => 'y',
                'Grant_priv' => 'N',
                'Column_priv' => true,
                'can_delete' => true
            )
        );
        $actual = PMA_getUserSpecificRights($tables, $user_host_condition, $dbname);
        $this->assertEquals($expected, $actual);

        // Test case 2
        $dbname = 'db';
        $expected = array(
            't' => array(
                'Table_name' => 't'
            )
        );
        $actual = PMA_getUserSpecificRights($tables, $user_host_condition, $dbname);
        $this->assertEquals($expected, $actual);
    }

    /**
     * Tests for PMA_getHtmlForUserProperties
     *
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (AST_CONST)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))
                    (AST_CONST)
                    (AST_CONST)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (SCALAR)
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))