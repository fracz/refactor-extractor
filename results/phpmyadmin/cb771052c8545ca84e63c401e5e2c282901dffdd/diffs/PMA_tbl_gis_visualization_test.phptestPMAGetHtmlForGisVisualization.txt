    public function testPMAGetHtmlForGisVisualization()
    {
        $url_params = array("url_params");
        $labelCandidates = array("option1", "option2");
        $spatialCandidates = array("option2", "option3");
        $visualizationSettings = array(
            'width' => 10,
            'height' => 12,
            'labelColumn' => 'labelColumn',
            'spatialColumn' => 'spatialColumn',
            'choice' => 'choice',
        );
        $sql_query = "sql_query";
        $visualization = "visualization";
        $svg_support = array();
        $data = array();

        $html = PMA_getHtmlForGisVisualization(
            $url_params, $labelCandidates, $spatialCandidates,
            $visualizationSettings, $sql_query,
            $visualization, $svg_support, $data
        );

        $this->assertContains(
            '<legend>' . __('Display GIS Visualization') . '</legend>',
            $html
        );

        /**
         * @todo Find out a better method to test for HTML
         *
         * $this->assertContains(
         *     PMA_URL_getHiddenInputs($url_params),
         *     $html
         * );
         */

        $this->assertContains(
            htmlspecialchars($sql_query),
            $html
        );

        $this->assertContains(
            '>PNG</a>',
            $html
        );

        $this->assertContains(
            '>PDF</a>',
            $html
        );

        $this->assertContains(
            htmlspecialchars($visualizationSettings['width']),
            $html
        );

        $this->assertContains(
            htmlspecialchars($visualizationSettings['height']),
            $html
        );

        $this->assertContains(
            $visualization,
            $html
        );
    }
}

/**
 * Mock class for PMA_Config
 *
 * @package PhpMyAdmin-test
 */
class PMA_MockConfig
{
    /**
     * isHttps() method.
     *
     * @return bool
     * @test
     */
    public function isHttps()
    {
        return true;
    }
}
?>||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (SCALAR))))
                (SCALAR))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_VAR)))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||