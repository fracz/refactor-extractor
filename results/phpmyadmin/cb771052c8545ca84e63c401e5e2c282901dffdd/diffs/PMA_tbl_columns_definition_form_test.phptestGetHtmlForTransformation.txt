    public function testGetHtmlForTransformation()
    {
        $cmeta = array(
            'Field' => 'fieldname'
        );

        $mime = array(
            'fieldname' => array(
                'transformation' => 'Text_Plain_Preappend.class.php',
                'transformation_options' => 'transops'
            )
        );

        $avail_mime = array(
            'transformation' => array(
                'foo' => 'text/plain: bar'
            ),
            'transformation_file' => array(
                'foo' => 'Text_Plain_Preappend.class.php'
            )
        );
        $result = PMA_getHtmlForTransformation(
            2, 0, 0, $avail_mime, $cmeta, $mime, ''
        );

        /**
         * @todo Find out a better method to test for HTML
         *
         * $this->assertContains(
         *     '<select id="field_2_0" size="1" name="field_transformation[2]">',
         *     $result
         * );
         */

        $this->assertContains(
            'selected ',
            $result
        );
    }

    /**
     * Test for PMA_getHtmlForMoveColumn
     *
     * @return void
     */
||||||||    public function testGetHtmlForTransformation()
    {
        /**
         * @todo Find out a better method to test for HTML
         *
         * $cmeta = array(
         *     'Field' => 'fieldname'
         * );
         *
         * $mime = array(
         *     'fieldname' => array(
         *         'transformation' => 'Text_Plain_Preappend.class.php',
         *         'transformation_options' => 'transops'
         *     )
         * );
         *
         * $avail_mime = array(
         *     'transformation' => array(
         *         'foo' => 'text/plain: bar'
         *     ),
         *     'transformation_file' => array(
         *         'foo' => 'Text_Plain_Preappend.class.php'
         *     )
         * );
         * $result = PMA_getHtmlForTransformation(
         * 2, 0, 0, $avail_mime, $cmeta, $mime, ''
         * );
         *
         * $this->assertContains(
         *     '<select id="field_2_0" size="1" name="field_transformation[2]">',
         *     $result
         * );
         *
         * $this->assertContains(
         *     'selected ',
         *     $result
         * );
         */
    }

    /**
     * Test for PMA_getHtmlForMoveColumn
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR)
                (SCALAR)
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE