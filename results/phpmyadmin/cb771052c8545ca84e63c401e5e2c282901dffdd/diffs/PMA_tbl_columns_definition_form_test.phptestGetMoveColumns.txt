    public function testGetMoveColumns()
    {
        $dbi = $this->getMockBuilder('PMA_DatabaseInterface')
            ->disableOriginalConstructor()
            ->getMock();

        $dbi->expects($this->once())
            ->method('tryQuery')
            ->with("SELECT * FROM `db`.`table` LIMIT 1")
            ->will($this->returnValue('v1'));

        $dbi->expects($this->once())
            ->method('getFieldsMeta')
            ->with("v1")
            ->will($this->returnValue('movecols'));

        $GLOBALS['dbi'] = $dbi;

        $this->assertEquals(
            PMA_getMoveColumns('db', 'table'),
            'movecols'
        );
    }

    /**
     * Test for PMA_getRowDataForRegeneration
     *
     * @return void
     */
||||||||    public function testGetMoveColumns()
    {
        /**
         * @todo Test against PMA_Table::getColumnsMeta
         * $dbi = $this->getMockBuilder('PMA_DatabaseInterface')
         *     ->disableOriginalConstructor()
         *     ->getMock();
         *
         * $dbi->expects($this->once())
         *     ->method('tryQuery')
         *     ->with("SELECT * FROM `db`.`table` LIMIT 1")
         *     ->will($this->returnValue('v1'));
         *
         * $dbi->expects($this->once())
         *     ->method('getFieldsMeta')
         *     ->with("v1")
         *     ->will($this->returnValue('movecols'));
         *
         * $GLOBALS['dbi'] = $dbi;
         *
         * $this->assertEquals(
         *     PMA_getMoveColumns('db', 'table'),
         *     'movecols'
         * );
         */
    }

    /**
     * Test for PMA_getRowDataForRegeneration
     *
     * @return void
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))))
                (
                    (SCALAR)))
            (
                (SCALAR)))
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CALL
                (
                    (SCALAR)
                    (SCALAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE