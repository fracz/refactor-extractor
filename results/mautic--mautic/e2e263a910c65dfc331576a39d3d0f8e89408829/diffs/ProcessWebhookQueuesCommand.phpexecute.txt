    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->factory = $this->getContainer()->get('mautic.factory');

        $queueMode = $this->factory->getParameter('queue_mode');

        // check to make sure we are in queue mode
        if ($queueMode != 'command_process') {
            $output->writeLn('Webhook Bundle is in immediate process mode. To use the command function change to command mode.');
            return 0;
        }

        $id = $input->getOption('webhook-id');

        /** @var \Mautic\WebhookBundle\Model\WebhookModel $model */
        $model = $this->factory->getModel('webhook');

        if ($id) {
            $webhook  = $model->getEntity($id);
            $webhooks = ($webhook !== null && $webhook->isPublished()) ? array($id => $webhook) : array();
        } else {
            // make sure we only get published webhook entities
            $webhooks = $model->getEntities(
                array(
                    'filter' => array(
                        'force' => array(
                            array(
                                'column' => 'e.isPublished',
                                'expr'   => 'eq',
                                'value'  => 1
                            )
                        )
                    )
                )
            );
        }

        if (!count ($webhooks)) {
            $output->writeln('<error>No published webhooks found. Try again later.</error>');
            return;
        }

        $output->writeLn('<info>Processing Webhooks</info>');

        try {
            $model->processWebhooks($webhooks);
        } catch (\Exception $e) {
            $output->writeLn('<error>' . $e->getMessage() . '</error>');
        }
        $output->writeLn('<info>Webhook Processing Complete</info>');
    }
}||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->factory = $this->getContainer()->get('mautic.factory');

        $output = new ConsoleDatetimeOutput();

        $queueMode = $this->factory->getParameter('queue_mode');

        // check to make sure we are in queue mode
        if ($queueMode != 'command_process') {
            $output->writeLn('Webhook Bundle is in immediate process mode. To use the command function change to command mode.');
            return 0;
        }

        $id = $input->getOption('webhook-id');

        /** @var \Mautic\WebhookBundle\Model\WebhookModel $model */
        $model = $this->factory->getModel('webhook');

        if ($id) {
            $webhook  = $model->getEntity($id);
            $webhooks = ($webhook !== null && $webhook->isPublished()) ? array($id => $webhook) : array();
        } else {
            // make sure we only get published webhook entities
            $webhooks = $model->getEntities(
                array(
                    'filter' => array(
                        'force' => array(
                            array(
                                'column' => 'e.isPublished',
                                'expr'   => 'eq',
                                'value'  => 1
                            )
                        )
                    )
                )
            );
        }

        if (!count ($webhooks)) {
            $output->writeln('<error>No published webhooks found. Try again later.</error>');
            return;
        }

        $output->writeLn('<info>Processing Webhooks</info>');

        try {
            $model->processWebhooks($webhooks);
        } catch (\Exception $e) {
            $output->writeLn('<error>' . $e->getMessage() . '</error>');
        }
        $output->writeLn('<info>Webhook Processing Complete</info>');
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ARRAY)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (NULL)))
                                            (SCALAR)))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_VAR)
                                (AST_CONST))
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ARRAY)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_ARRAY
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR))
                                                        (AST_ARRAY_ELEM
                                                            (SCALAR)
                                                            (SCALAR)))
                                                    (NULL)))
                                            (SCALAR)))
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (SCALAR)))))))
        (NULL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR))))