    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $options    = $input->getOptions();
        $env        =  (!empty($options['env'])) ? $options['env'] : 'dev';
        $container  = $this->getContainer();
        $dispatcher = $container->get('event_dispatcher');

        $skipClear  = $input->getOption('do-not-clear');
        $quiet      = $input->getOption('quiet');
        $timeout    = $input->getOption('clear-timeout');

        $factory    = $container->get('mautic.factory');
        $queueMode  = $factory->getParameter('mailer_spool_type');

        if ($queueMode != 'file') {
            $output->writeln('Mautic is not set to queue email.');

            return 0;
        }

        if (empty($timeout)) {
            $timeout = $container->getParameter('mautic.mailer_spool_clear_timeout');
        }

        if (!$skipClear) {
            //Swift mailer's send command does not handle failed messages well rather it will retry sending forever
            //so let's first handle emails stuck in the queue and remove them if necessary
            $transport = $this->getContainer()->get('swiftmailer.transport.real');
            if (!$transport->isStarted()) {
                $transport->start();
            }

            $spoolPath = $container->getParameter('mautic.mailer_spool_path');
            if (file_exists($spoolPath)) {
                $finder = Finder::create()->in($spoolPath)->name('*.{finalretry,sending,tryagain}');

                foreach ($finder as $failedFile) {
                    $file = $failedFile->getRealPath();

                    $lockedtime = filectime($file);
                    if (!(time() - $lockedtime) > $timeout) {
                        //the file is not old enough to be resent yet
                        continue;
                    }

                    //rename the file so no other process tries to find it
                    $tmpFilename = str_replace(array('.finalretry','.sending','.tryagain'), '', $failedFile);
                    $tmpFilename .= '.finalretry';
                    rename($failedFile, $tmpFilename);

                    $message = unserialize(file_get_contents($tmpFilename));
                    if ($message !== false && is_object($message) && get_class($message) === 'Swift_Message') {
                        $tryAgain = false;
                        if ($dispatcher->hasListeners(EmailEvents::EMAIL_RESEND)) {
                            $event = new QueueEmailEvent($message);
                            $dispatcher->dispatch(EmailEvents::EMAIL_RESEND, $event);
                            $tryAgain = $event->shouldTryAgain();
                        }

                        try {
                            $transport->send($message);
                        } catch (\Swift_TransportException $e) {
                            if ($dispatcher->hasListeners(EmailEvents::EMAIL_FAILED)) {
                                $event = new QueueEmailEvent($message);
                                $dispatcher->dispatch(EmailEvents::EMAIL_FAILED, $event);
                            }
                        }
                    } else {
                        // $message isn't a valid message file
                        $tryAgain = false;
                    }
                    if ($tryAgain) {
                        $retryFilename = str_replace('.finalretry', '.tryagain', $tmpFilename);
                        rename($tmpFilename, $retryFilename);
                    } else {
                        //delete the file, either because it sent or because it failed
                        unlink($tmpFilename);
                    }
                }
            }
        }

        //now process new emails
        if (!$quiet) {
            $output->setVerbosity(OutputInterface::VERBOSITY_QUIET);
        }

        $command = $this->getApplication()->find('swiftmailer:spool:send');
        $commandArgs = array(
            'command'           => 'swiftmailer:spool:send',
            '--env'             => $env
        );
        if ($quiet) {
            $commandArgs['--quiet'] = true;
        }

        //set spool message limit
        if ($msgLimit = $input->getOption('message-limit')) {
            $commandArgs['--message-limit'] = $msgLimit;
        } elseif ($msgLimit = $container->getParameter('mautic.mailer_spool_msg_limit')) {
            $commandArgs['--message-limit'] = $msgLimit;
        }

        //set time limit
        if ($timeLimit = $input->getOption('time-limit')) {
            $commandArgs['--time-limit'] = $timeLimit;
        } elseif ($timeLimit = $container->getParameter('mautic.mailer_spool_time_limit')) {
            $commandArgs['--time-limit'] = $timeLimit;
        }

        //set the recover timeout
        if ($timeout = $input->getOption('recover-timeout')) {
            $commandArgs['--recover-timeout'] = $timeout;
        } elseif ($timeout = $container->getParameter('mautic.mailer_spool_recover_timeout')) {
            $commandArgs['--recover-timeout'] = $timeout;
        }
        $input = new ArrayInput($commandArgs);
        $returnCode = $command->run($input, $output);

        if ($returnCode !== 0) {
            return $returnCode;
        }

        return 0;
    }
}||||||||    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $options    = $input->getOptions();
        $env        =  (!empty($options['env'])) ? $options['env'] : 'dev';
        $container  = $this->getContainer();
        $dispatcher = $container->get('event_dispatcher');

        $output = new ConsoleDatetimeOutput();

        $skipClear  = $input->getOption('do-not-clear');
        $quiet      = $input->getOption('quiet');
        $timeout    = $input->getOption('clear-timeout');

        $factory    = $container->get('mautic.factory');
        $queueMode  = $factory->getParameter('mailer_spool_type');

        if ($queueMode != 'file') {
            $output->writeln('Mautic is not set to queue email.');

            return 0;
        }

        if (empty($timeout)) {
            $timeout = $container->getParameter('mautic.mailer_spool_clear_timeout');
        }

        if (!$skipClear) {
            //Swift mailer's send command does not handle failed messages well rather it will retry sending forever
            //so let's first handle emails stuck in the queue and remove them if necessary
            $transport = $this->getContainer()->get('swiftmailer.transport.real');
            if (!$transport->isStarted()) {
                $transport->start();
            }

            $spoolPath = $container->getParameter('mautic.mailer_spool_path');
            if (file_exists($spoolPath)) {
                $finder = Finder::create()->in($spoolPath)->name('*.{finalretry,sending,tryagain}');

                foreach ($finder as $failedFile) {
                    $file = $failedFile->getRealPath();

                    $lockedtime = filectime($file);
                    if (!(time() - $lockedtime) > $timeout) {
                        //the file is not old enough to be resent yet
                        continue;
                    }

                    //rename the file so no other process tries to find it
                    $tmpFilename = str_replace(array('.finalretry','.sending','.tryagain'), '', $failedFile);
                    $tmpFilename .= '.finalretry';
                    rename($failedFile, $tmpFilename);

                    $message = unserialize(file_get_contents($tmpFilename));
                    if ($message !== false && is_object($message) && get_class($message) === 'Swift_Message') {
                        $tryAgain = false;
                        if ($dispatcher->hasListeners(EmailEvents::EMAIL_RESEND)) {
                            $event = new QueueEmailEvent($message);
                            $dispatcher->dispatch(EmailEvents::EMAIL_RESEND, $event);
                            $tryAgain = $event->shouldTryAgain();
                        }

                        try {
                            $transport->send($message);
                        } catch (\Swift_TransportException $e) {
                            if ($dispatcher->hasListeners(EmailEvents::EMAIL_FAILED)) {
                                $event = new QueueEmailEvent($message);
                                $dispatcher->dispatch(EmailEvents::EMAIL_FAILED, $event);
                            }
                        }
                    } else {
                        // $message isn't a valid message file
                        $tryAgain = false;
                    }
                    if ($tryAgain) {
                        $retryFilename = str_replace('.finalretry', '.tryagain', $tmpFilename);
                        rename($tmpFilename, $retryFilename);
                    } else {
                        //delete the file, either because it sent or because it failed
                        unlink($tmpFilename);
                    }
                }
            }
        }

        //now process new emails
        if (!$quiet) {
            $output->setVerbosity(OutputInterface::VERBOSITY_QUIET);
        }

        $command = $this->getApplication()->find('swiftmailer:spool:send');
        $commandArgs = array(
            'command'           => 'swiftmailer:spool:send',
            '--env'             => $env
        );
        if ($quiet) {
            $commandArgs['--quiet'] = true;
        }

        //set spool message limit
        if ($msgLimit = $input->getOption('message-limit')) {
            $commandArgs['--message-limit'] = $msgLimit;
        } elseif ($msgLimit = $container->getParameter('mautic.mailer_spool_msg_limit')) {
            $commandArgs['--message-limit'] = $msgLimit;
        }

        //set time limit
        if ($timeLimit = $input->getOption('time-limit')) {
            $commandArgs['--time-limit'] = $timeLimit;
        } elseif ($timeLimit = $container->getParameter('mautic.mailer_spool_time_limit')) {
            $commandArgs['--time-limit'] = $timeLimit;
        }

        //set the recover timeout
        if ($timeout = $input->getOption('recover-timeout')) {
            $commandArgs['--recover-timeout'] = $timeout;
        } elseif ($timeout = $container->getParameter('mautic.mailer_spool_recover_timeout')) {
            $commandArgs['--recover-timeout'] = $timeout;
        }
        $input = new ArrayInput($commandArgs);
        $returnCode = $command->run($input, $output);

        if ($returnCode !== 0) {
            return $returnCode;
        }

        return 0;
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CALL)
                                                        (AST_VAR)))
                                                (AST_VAR))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CONST))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (SCALAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_NEW
                                                                    (
                                                                        (AST_VAR))))
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR))
                                                                    (AST_VAR)))
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))))))
                                                (AST_TRY
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))
                                                    (AST_CATCH_LIST
                                                        (AST_CATCH
                                                            (AST_NAME_LIST)
                                                            (AST_VAR)
                                                            (
                                                                (AST_IF
                                                                    (AST_IF_ELEM
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR)
                                                                            (
                                                                                (AST_CLASS_CONST
                                                                                    (SCALAR))))
                                                                        (
                                                                            (AST_ASSIGN
                                                                                (AST_VAR)
                                                                                (AST_NEW
                                                                                    (
                                                                                        (AST_VAR))))
                                                                            (AST_METHOD_CALL
                                                                                (AST_VAR)
                                                                                (
                                                                                    (AST_CLASS_CONST
                                                                                        (SCALAR))
                                                                                    (AST_VAR)))))))))
                                                    (NULL))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_VAR))))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (AST_DIM
                (AST_VAR)
                (SCALAR))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR)))
                                    (
                                        (SCALAR))))
                            (AST_FOREACH
                                (AST_VAR)
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_CALL)
                                                        (AST_VAR)))
                                                (AST_VAR))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_ARRAY
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL))
                                                    (AST_ARRAY_ELEM
                                                        (SCALAR)
                                                        (NULL)))
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CONST))
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (SCALAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST))
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_CLASS_CONST
                                                                    (SCALAR))))
                                                        (
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_NEW
                                                                    (
                                                                        (AST_VAR))))
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_CLASS_CONST
                                                                        (SCALAR))
                                                                    (AST_VAR)))
                                                            (AST_ASSIGN
                                                                (AST_VAR)
                                                                (AST_METHOD_CALL
                                                                    (AST_VAR))))))
                                                (AST_TRY
                                                    (
                                                        (AST_METHOD_CALL
                                                            (AST_VAR)
                                                            (
                                                                (AST_VAR))))
                                                    (AST_CATCH_LIST
                                                        (AST_CATCH
                                                            (AST_NAME_LIST)
                                                            (AST_VAR)
                                                            (
                                                                (AST_IF
                                                                    (AST_IF_ELEM
                                                                        (AST_METHOD_CALL
                                                                            (AST_VAR)
                                                                            (
                                                                                (AST_CLASS_CONST
                                                                                    (SCALAR))))
                                                                        (
                                                                            (AST_ASSIGN
                                                                                (AST_VAR)
                                                                                (AST_NEW
                                                                                    (
                                                                                        (AST_VAR))))
                                                                            (AST_METHOD_CALL
                                                                                (AST_VAR)
                                                                                (
                                                                                    (AST_CLASS_CONST
                                                                                        (SCALAR))
                                                                                    (AST_VAR)))))))))
                                                    (NULL))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CALL
                                                        (
                                                            (SCALAR)
                                                            (SCALAR)
                                                            (AST_VAR))))
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)
                                                        (AST_VAR)))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_CALL
                                                    (
                                                        (AST_VAR))))))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CONST)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR))))
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (SCALAR)))