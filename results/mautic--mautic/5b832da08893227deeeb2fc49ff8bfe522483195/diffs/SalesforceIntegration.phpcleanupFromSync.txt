||||||||    protected function cleanupFromSync(&$leadsToSync, &$integrationEntities, &$deletedSFLeads, &$mauticDuplicates, &$totalIgnored, $error = false)
    {
        if ($mauticDuplicates) {
            // Create integration entities for these to be ignored until they are updated
            foreach ($mauticDuplicates as $id => $dup) {
                $integrationEntities[] = $this->createIntegrationEntity('Lead', null, $dup, $id, [], false);
                ++$totalIgnored;
            }

            $mauticDuplicates = [];
        }

        $integrationEntityRepo = $this->getIntegrationEntityRepository();
        if (!empty($leadsToSync)) {
            $this->leadModel->saveEntities($leadsToSync);
            $this->em->clear(Lead::class);
            $leadsToSync = [];
        }

        if ($integrationEntities) {
            // Persist updated entities if applicable
            $integrationEntityRepo->saveEntities($integrationEntities);
            $this->em->clear(IntegrationEntity::class);
            $integrationEntities = [];
        }

        // If there are any deleted, mark it as so to prevent them from being queried over and over or recreated
        if ($deletedSFLeads) {
            $integrationEntityRepo->markAsDeleted($deletedSFLeads, $this->getName(), 'lead');
            $deletedSFLeads = [];
        }

        if ($error) {
            if ($error instanceof \Exception) {
                throw $error;
            }

            throw new ApiErrorException($error);
        }
    }

    /**
     * @param      $mauticData
     * @param      $checkEmailsInSF
     * @param      $processedLeads
     * @param      $integrationEntities
     * @param      $salesforceIdMapping
     * @param      $trackedContacts
     * @param      $requiredFields
     * @param      $objectFields
     * @param      $sfObject
     * @param      $sfEntityRecords
     * @param null $progress
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_CONST)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_ARRAY)
                                    (AST_CONST))))
                        (AST_PRE_INC
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_INSTANCEOF
                            (AST_VAR))
                        (
                            (AST_THROW
                                (AST_VAR)))))
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_VAR))))))))