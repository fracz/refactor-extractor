||||||||    public function processWebhook(Webhook $webhook, $http)
    {
        // get the webhook payload
        $payload = ($this->getWebhookPayload($webhook));

        /** @var Logger $log */
        $log = $this->factory->getLogger();

        /** @var \Mautic\WebhookBundle\Entity\Webhook $webhook */
        try {
            /** @var \Joomla\Http\Http $http */
            $response = $http->post($webhook->getWebhookUrl(), json_encode($payload));
            $this->addLog($webhook, $response);
            if ($response->code != 200) {
                throw new \ErrorException($webhook->getWebhookUrl() . ' returned ' . $response->code);
            }
        } catch (\Exception $e) {
            $log->addError($e->getMessage());
        }
    }

    /*
     * Add a log for the webhook response and save it
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_PROP
                                            (AST_VAR))))))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)))))))
        (NULL)))