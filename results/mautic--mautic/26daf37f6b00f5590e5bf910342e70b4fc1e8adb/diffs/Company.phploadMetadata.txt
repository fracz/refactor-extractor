    public static function loadMetadata (ORM\ClassMetadata $metadata)
    {
        $builder = new ClassMetadataBuilder($metadata);
        $builder->setTable('companies')
            ->setCustomRepositoryClass('Mautic\LeadBundle\Entity\CompanyRepository');

        $builder->createField('id', 'integer')
            ->isPrimaryKey()
            ->generatedValue()
            ->build();

        $builder->createManyToMany('leads', 'Mautic\LeadBundle\Entity\Lead')
            ->setJoinTable('company_leads_xref')
            ->addInverseJoinColumn('lead_id', 'id', false)
            ->addJoinColumn('company_id', 'id', false, false, 'CASCADE')
            ->setIndexBy('company')
            ->cascadeMerge()
            ->cascadePersist()
            ->cascadeDetach()
            ->build();

        $builder->createManyToOne('owner', 'Mautic\UserBundle\Entity\User')
            ->addJoinColumn('owner_id', 'id', true, false, 'SET NULL')
            ->build();

        $builder->addPublishDates();
    }

    /**
     * Prepares the metadata for API usage
     *
     * @param $metadata
     */
||||||||    public static function loadMetadata (ORM\ClassMetadata $metadata)
    {
        $builder = new ClassMetadataBuilder($metadata);
        $builder->setTable('companies')
            ->setCustomRepositoryClass('Mautic\LeadBundle\Entity\CompanyRepository');

        $builder->createField('id', 'integer')
            ->isPrimaryKey()
            ->generatedValue()
            ->build();

        $builder->createManyToMany('leads', 'Mautic\LeadBundle\Entity\Lead')
            ->setJoinTable('company_leads_xref')
            ->addInverseJoinColumn('lead_id', 'id', false)
            ->addJoinColumn('company_id', 'id', false, false, 'CASCADE')
            ->cascadeMerge()
            ->cascadePersist()
            ->cascadeDetach()
            ->fetchExtraLazy()
            ->build();

        $builder->createManyToOne('owner', 'Mautic\UserBundle\Entity\User')
            ->addJoinColumn('owner_id', 'id', true, false, 'SET NULL')
            ->build();

        $builder->addPublishDates();
    }

    /**
     * Prepares the metadata for API usage
     *
     * @param $metadata
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_CONST)))
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CONST)
                                (AST_CONST)
                                (SCALAR)))
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))
            (
                (SCALAR)
                (SCALAR)
                (AST_CONST)
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)
                                    (SCALAR)
                                    (AST_CONST)))
                            (
                                (SCALAR)
                                (SCALAR)
                                (AST_CONST)
                                (AST_CONST)
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)
                    (SCALAR)))
            (
                (SCALAR)
                (SCALAR)
                (AST_CONST)
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)))