    protected function addSearchCommandWhereClause(&$q, $filter)
    {
        $command         = $filter->command;
        $string          = $filter->string;
        $unique          = $this->generateRandomParameterName();
        $returnParameter = true; //returning a parameter that is not used will lead to a Doctrine error
        $expr            = false;
        $parameters      = [];

        //DBAL QueryBuilder does not have an expr()->not() function; boo!!
        if ($filter->not) {
            $xFunc      = 'orX';
            $existsFunc = 'NOT EXISTS';
            $eqFunc     = 'neq';
            $nullFunc   = 'isNotNull';
            $likeFunc   = 'notLike';
        } else {
            $xFunc      = 'andX';
            $existsFunc = 'EXISTS';
            $eqFunc     = 'eq';
            $nullFunc   = 'isNull';
            $likeFunc   = 'like';
        }
        switch ($command) {
            case $this->translator->trans('mautic.lead.lead.searchcommand.isanonymous'):
                $expr = $q->expr()->$xFunc(
                    $q->expr()->$nullFunc('l.date_identified')
                );
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.core.searchcommand.ismine'):
                $expr            = $q->expr()->$eqFunc('l.owner_id', $this->currentUser->getId());
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.isunowned'):
                $expr = $q->expr()->orX(
                    $q->expr()->$eqFunc('l.owner_id', 0),
                    $q->expr()->$nullFunc('l.owner_id')
                );
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.owner'):
                $expr = $q->expr()->orX(
                    $q->expr()->$likeFunc('LOWER(u.first_name)', ':'.$unique),
                    $q->expr()->$likeFunc('LOWER(u.last_name)', ':'.$unique)
                );
                break;
            case $this->translator->trans('mautic.core.searchcommand.name'):
                $expr = $q->expr()->orX(
                    $q->expr()->$likeFunc('LOWER(l.firstname)', ":$unique"),
                    $q->expr()->$likeFunc('LOWER(l.lastname)', ":$unique")
                );
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.list'):
                //obtain the list details
                $list = $this->_em->getRepository('MauticLeadBundle:LeadList')->findOneByAlias($string);

                if (!empty($list)) {
                    $listId = (int) $list->getId();
                } else {
                    //force a bad expression as the list doesn't exist
                    $listId = 0;
                }

                $sq = $this->_em->getConnection()->createQueryBuilder()
                    ->select('null')
                    ->from(MAUTIC_TABLE_PREFIX.'lead_lists_leads', 'll');

                $sq->where(
                    $sq->expr()->andX(
                        $sq->expr()->eq('l.id', 'll.lead_id'),
                        $sq->expr()->eq('ll.leadlist_id', $listId),
                        $sq->expr()->orX(
                            $sq->expr()->isNull('ll.manually_removed'),
                            $sq->expr()->eq('ll.manually_removed', ":$unique")
                        )
                    )
                );

                $filter->string = false;
                $filter->strict = false;

                $expr = $q->expr()->andX(sprintf('%s (%s)', $existsFunc, $sq->getSQL()));

                break;
            case $this->translator->trans('mautic.core.searchcommand.ip'):
                // search by IP
                $sq = $this->_em->getConnection()->createQueryBuilder();
                $sq->select('null')
                    ->from(MAUTIC_TABLE_PREFIX.'lead_ips_xref', 'lip')
                    ->join('lip', MAUTIC_TABLE_PREFIX.'ip_addresses', 'ip', 'lip.ip_id = ip.id')
                    ->where(
                        $sq->expr()->andX(
                            $sq->expr()->eq('l.id', 'lip.lead_id'),
                            $sq->expr()->$likeFunc('ip.ip_address', ":$unique")
                        )
                    );

                $expr = $q->expr()->andX(sprintf('%s (%s)', $existsFunc, $sq->getSQL()));

                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.duplicate'):
                $prateek = explode('+', $string);

                $imploder = [];

                foreach ($prateek as $key => $value) {
                    $list       = $this->_em->getRepository('MauticLeadBundle:LeadList')->findOneByAlias($value);
                    $imploder[] = ((!empty($list)) ? (int) $list->getId() : 0);
                }

                //logic. In query, Sum(manuall_removed should be less than the current)
                $pluck = sizeof($imploder) - 1;

                $imploder = (string) (implode(',', $imploder));

                $sq = $this->_em->getConnection()->createQueryBuilder();
                $sq->select('lll.lead_id')
                    ->from(MAUTIC_TABLE_PREFIX.'lead_lists_leads', 'lll')
                    ->where('lll.leadlist_id in ( '.$imploder.' )')
                    //-> where("lll.leadlist_id in ( :imploder )")
                    ->groupBy('lll.lead_id')
                    ->having('COUNT(lll.lead_id) > :counting AND SUM(lll.manually_removed) < :counting')
                    ->setParameter('counting', $pluck)
                    //-> setParameter('imploder', $imploder)
                ;

                $results = $sq->execute()->fetchAll();

                $leadIds = [];
                foreach ($results as $row) {
                    $leadIds[] = $row['lead_id'];
                }
                if (!sizeof($leadIds)) {
                    $leadIds[0] = 0;
                }
                $expr = $q->expr()->in('l.id', $leadIds);

                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.tag'):
                // search by tag
                $sq = $this->_em->getConnection()->createQueryBuilder();
                $sq->select('null')
                    ->from(MAUTIC_TABLE_PREFIX.'lead_tags_xref', 'x')
                    ->join('x', MAUTIC_TABLE_PREFIX.'lead_tags', 't', 'x.tag_id = t.id')
                    ->where(
                        $sq->expr()->andX(
                            $sq->expr()->eq('l.id', 'x.lead_id'),
                            $sq->expr()->$likeFunc('t.tag', ":$unique")
                        )
                    );

                $expr = $q->expr()->andX(sprintf('%s (%s)', $existsFunc, $sq->getSQL()));

                break;
            case $this->translator->trans('mautic.core.searchcommand.email'):
                $expr = $q->expr()->$likeFunc('LOWER(l.email)', ":$unique");
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.company'):
                $expr = $q->expr()->$likeFunc('LOWER(l.company)', ":$unique");
                break;
            case $this->translator->trans('mautic.company.lead.searchcommand.company'):
                // search by company entity
                $sq = $this->_em->getConnection()->createQueryBuilder();
                $sq->select('null')
                    ->from(MAUTIC_TABLE_PREFIX.'companies_leads', 'cl')
                    ->join('cl', MAUTIC_TABLE_PREFIX.'companies', 'comp', 'comp.id = cl.company_id')
                    ->where(
                        $sq->expr()->andX(
                            $sq->expr()->eq('l.id', 'cl.lead_id'),
                            $sq->expr()->$likeFunc('comp.companyname', ":$unique")
                        )
                    );

                $expr = $q->expr()->andX(sprintf('%s (%s)', $existsFunc, $sq->getSQL()));
                break;
            default:
                if (in_array($command, $this->availableSearchFields)) {
                    $expr = $q->expr()->$likeFunc('LOWER(l.'.$command.')', ":$unique");
                }
                break;
        }

        $string              = ($filter->strict) ? $filter->string : "%{$filter->string}%";
        $parameters[$unique] = $string;

        return [
            $expr,
            ($returnParameter) ? $parameters : [],
        ];
    }

    /**
     * Returns the array of search commands.
     *
     * @return array
     */
||||||||    protected function addSearchCommandWhereClause(&$q, $filter)
    {
        $command         = $filter->command;
        $string          = $filter->string;
        $unique          = $this->generateRandomParameterName();
        $returnParameter = true; //returning a parameter that is not used will lead to a Doctrine error
        $expr            = false;
        $parameters      = [];
        $joins           = $q->getQueryPart('join');

        //DBAL QueryBuilder does not have an expr()->not() function; boo!!
        if ($filter->not) {
            $xFunc      = 'orX';
            $existsFunc = 'NOT EXISTS';
            $eqFunc     = 'neq';
            $nullFunc   = 'isNotNull';
            $likeFunc   = 'notLike';
        } else {
            $xFunc      = 'andX';
            $existsFunc = 'EXISTS';
            $eqFunc     = 'eq';
            $nullFunc   = 'isNull';
            $likeFunc   = 'like';
        }
        switch ($command) {
            case $this->translator->trans('mautic.lead.lead.searchcommand.isanonymous'):
                $expr = $q->expr()->$xFunc(
                    $q->expr()->$nullFunc('l.date_identified')
                );
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.core.searchcommand.ismine'):
                $expr            = $q->expr()->$eqFunc('l.owner_id', $this->currentUser->getId());
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.isunowned'):
                $expr = $q->expr()->orX(
                    $q->expr()->$eqFunc('l.owner_id', 0),
                    $q->expr()->$nullFunc('l.owner_id')
                );
                $returnParameter = false;
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.owner'):
                $expr = $q->expr()->orX(
                    $q->expr()->$likeFunc('u.first_name', ':'.$unique),
                    $q->expr()->$likeFunc('u.last_name', ':'.$unique)
                );
                break;
            case $this->translator->trans('mautic.core.searchcommand.name'):
                $expr = $q->expr()->orX(
                    $q->expr()->$likeFunc('l.firstname', ":$unique"),
                    $q->expr()->$likeFunc('l.lastname', ":$unique")
                );
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.list'):
                if (!array_key_exists('list_lead', $joins)) {
                    $q->join('l', MAUTIC_TABLE_PREFIX.'lead_lists_leads', 'list_lead', 'l.id = list_lead.lead_id')
                        ->join('list_lead', MAUTIC_TABLE_PREFIX.'lead_lists', 'list', 'list_lead.leadlist_id = list.id');
                }

                $expr = $q->expr()->andX(
                    $q->expr()->eq('list_lead.manually_removed', 0),
                    $q->expr()->$likeFunc('list.alias', ":$unique")
                );

                break;
            case $this->translator->trans('mautic.core.searchcommand.ip'):
                if (!array_key_exists('ip_lead', $joins)) {
                    $q->join('l', MAUTIC_TABLE_PREFIX.'lead_ips_xref', 'ip_lead', 'l.id = ip_lead.lead_id')
                        ->join('ip_lead', MAUTIC_TABLE_PREFIX.'ip_addresses', 'ip', 'ip_lead.ip_id = ip.id');
                }

                $expr = $q->expr()->$likeFunc('ip.ip_address', ":$unique");

                // Unique leads in case they are in multiple matching companies
                $q->groupBy('l.id');
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.duplicate'):
                if (!array_key_exists('list_lead', $joins)) {
                    $q->join('l', MAUTIC_TABLE_PREFIX.'lead_lists_leads', 'list_lead', 'l.id = list_lead.lead_id')
                        ->join('list_lead', MAUTIC_TABLE_PREFIX.'lead_lists', 'list', 'list_lead.leadlist_id = list.id');
                }

                $prateek = explode('+', $string);

                $imploder = [];

                foreach ($prateek as $key => $value) {
                    $list       = $this->_em->getRepository('MauticLeadBundle:LeadList')->findOneByAlias($value);
                    $imploder[] = ((!empty($list)) ? (int) $list->getId() : 0);
                }

                //logic. In query, Sum(manuall_removed should be less than the current)
                $pluck = sizeof($imploder) - 1;

                $imploder = (string) (implode(',', $imploder));

                $sq = $this->_em->getConnection()->createQueryBuilder();
                $sq->select('lll.lead_id')
                    ->from(MAUTIC_TABLE_PREFIX.'lead_lists_leads', 'lll')
                    ->where('lll.leadlist_id in ( '.$imploder.' )')
                    //-> where("lll.leadlist_id in ( :imploder )")
                    ->groupBy('lll.lead_id')
                    ->having('COUNT(lll.lead_id) > :counting AND SUM(lll.manually_removed) < :counting')
                    ->setParameter('counting', $pluck)
                    //-> setParameter('imploder', $imploder)
                ;

                $results = $sq->execute()->fetchAll();

                $leadIds = [];
                foreach ($results as $row) {
                    $leadIds[] = $row['lead_id'];
                }
                if (!sizeof($leadIds)) {
                    $leadIds[0] = 0;
                }
                $expr = $q->expr()->in('l.id', $leadIds);

                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.tag'):
                if (!array_key_exists('tag', $joins)) {
                    $q->join('l', MAUTIC_TABLE_PREFIX.'lead_tags_xref', 'xtag', 'l.id = xtag.lead_id')
                        ->join('xtag', MAUTIC_TABLE_PREFIX.'lead_tags', 'tag', 'xtag.tag_id = tag.id');
                }

                $expr = $q->expr()->$likeFunc('tag.tag', ":$unique");

                // Unique leads in case they are in multiple matching companies
                $q->groupBy('l.id');
                break;
            case $this->translator->trans('mautic.core.searchcommand.email'):
                $expr = $q->expr()->$likeFunc('l.email', ":$unique");
                break;
            case $this->translator->trans('mautic.lead.lead.searchcommand.company'):
                $expr = $q->expr()->$likeFunc('l.company', ":$unique");
                break;
            case $this->translator->trans('mautic.company.lead.searchcommand.company'):
                if (!array_key_exists('comp_lead', $joins)) {
                    $q->join('l', MAUTIC_TABLE_PREFIX.'companies_leads', 'comp_lead', 'l.id = comp_lead.lead_id')
                        ->join('comp_lead', MAUTIC_TABLE_PREFIX.'companies', 'comp', 'comp_lead.company_id = comp.id');
                }

                $expr = $q->expr()->$likeFunc('comp.companyname', ":$unique");

                // Unique leads in case they are in multiple matching companies
                $q->groupBy('l.id');
                break;
            default:
                if (in_array($command, $this->availableSearchFields)) {
                    $expr = $q->expr()->$likeFunc('LOWER(l.'.$command.')', ":$unique");
                }
                break;
        }

        $string              = ($filter->strict) ? $filter->string : "{$filter->string}%";
        $parameters[$unique] = $string;

        return [
            $expr,
            ($returnParameter) ? $parameters : [],
        ];
    }

    /**
     * Returns the array of search commands.
     *
     * @return array
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_EMPTY
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CAST
                                        (AST_METHOD_CALL
                                            (AST_VAR))))))
                        (AST_IF_ELEM
                            (NULL)
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))))
                                (
                                    (SCALAR)))
                            (
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (SCALAR)))
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR))
                                                (
                                                    (SCALAR)
                                                    (AST_ENCAPS_LIST
                                                        (SCALAR)
                                                        (AST_VAR))))))))))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CONDITIONAL
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (AST_CAST
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CAST
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)))
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (AST_BINARY_OP
                                        (AST_CONST)
                                        (SCALAR))
                                    (SCALAR)))
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (SCALAR)
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (SCALAR)))
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (SCALAR)
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_VAR)
                    (AST_ARRAY))
                (NULL)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR)))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CONST))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR))))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (SCALAR)))
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (SCALAR)
                                        (AST_ENCAPS_LIST
                                            (SCALAR)
                                            (AST_VAR)))))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR))
                                        (
                                            (SCALAR)))
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_CONDITIONAL
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_VAR)))
                                    (AST_CAST
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CAST
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)))
                                    (
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))))
                                (
                                    (SCALAR)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY))
                    (AST_FOREACH
                        (AST_VAR)
                        (AST_VAR)
                        (NULL)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (NULL))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_VAR))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (SCALAR)))
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (SCALAR)
                                            (SCALAR)))
                                    (
                                        (SCALAR)
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))
                                        (SCALAR)
                                        (SCALAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (
                                (SCALAR)
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_PROP
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR))
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR))))))))
                    (AST_BREAK
                        (NULL))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_PROP
                (AST_VAR))
            (AST_PROP
                (AST_VAR))
            (AST_ENCAPS_LIST
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CONDITIONAL
                    (AST_VAR)
                    (AST_VAR)
                    (AST_ARRAY))
                (NULL)))))