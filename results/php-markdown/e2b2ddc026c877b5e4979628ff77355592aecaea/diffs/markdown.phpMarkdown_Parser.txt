	function Markdown_Parser() {
	#
	# Constructor function. Initialize appropriate member variables.
	#
		$this->_initDetab();

		$this->nested_brackets =
			str_repeat('(?>[^\[\]]+|\[', $this->nested_brackets_depth).
			str_repeat('\])*', $this->nested_brackets_depth);

		$this->nested_url_parenthesis =
			str_repeat('(?>[^()\s]+|\(', $this->nested_url_parenthesis_depth).
			str_repeat('(?>\)))*', $this->nested_url_parenthesis_depth);

		# Create an identical table but for escaped characters.
		foreach (preg_split('/(?!^|$)/', $this->escape_chars) as $char) {
			$entity = "&#". ord($char). ";";
//			$this->escape_table[$char] = $entity;
			$this->backslash_escape_table["\\$char"] = $entity;
		}

		# Sort document, block, and span gamut in ascendent priority order.
		asort($this->document_gamut);
		asort($this->block_gamut);
		asort($this->span_gamut);
	}


	# Internal hashes used during transformation.
||||||||	function Markdown_Parser() {
	#
	# Constructor function. Initialize appropriate member variables.
	#
		$this->_initDetab();

		$this->nested_brackets =
			str_repeat('(?>[^\[\]]+|\[', $this->nested_brackets_depth).
			str_repeat('\])*', $this->nested_brackets_depth);

		$this->nested_url_parenthesis =
			str_repeat('(?>[^()\s]+|\(', $this->nested_url_parenthesis_depth).
			str_repeat('(?>\)))*', $this->nested_url_parenthesis_depth);

		# Sort document, block, and span gamut in ascendent priority order.
		asort($this->document_gamut);
		asort($this->block_gamut);
		asort($this->span_gamut);
	}


	# Internal hashes used during transformation.
||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_FOREACH
        (AST_CALL
            (
                (SCALAR)
                (AST_PROP
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (SCALAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_PROP
                        (AST_VAR))))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_PROP
                (AST_VAR)))))