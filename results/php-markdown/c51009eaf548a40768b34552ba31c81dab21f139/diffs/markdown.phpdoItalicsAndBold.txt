	function doItalicsAndBold($text) {
	#
	# Redefined to change emphasis by underscore behaviour so that it does not
	# work in the middle of a word.
	#
		# <strong> must go first:
		$text = preg_replace(array(
			'{
				( (?<!\w) __ )			# $1: Marker (not preceded by alphanum)
				(?=\S) 					# Not followed by whitespace
				(?!__)					#   or two others marker chars.
				(						# $2: Content
					(?>
						[^_]+?			# Anthing not em markers.
					|
										# Balence any regular _ emphasis inside.
						(?<![a-zA-Z0-9])_ (?=\S) (?! _) (.+?)
						(?<=\S) _ (?![a-zA-Z0-9])
					)+?
				)
				(?<=\S) __				# End mark not preceded by whitespace.
				(?!\w)					# Not followed by alphanum.
			}sx',
			'{
				( (?<!\*\*) \*\* )		# $1: Marker (not preceded by two *)
				(?=\S) 					# Not followed by whitespace
				(?!\1)					#   or two others marker chars.
				(						# $2: Content
					(?>
						[^*]+?			# Anthing not em markers.
					|
										# Balence any regular * emphasis inside.
						\* (?=\S) (?! \*) (.+?) (?<=\S) \*
					)+?
				)
				(?<=\S) \*\*			# End mark not preceded by whitespace.
			}sx',
			),
			'<strong>\2</strong>', $text);
		# Then <em>:
		$text = preg_replace(array(
			'{ ( (?<!\w) _ ) (?=\S) (?! _)  (.+?) (?<=\S) _ (?!\w) }sx',
			'{ ( (?<!\*)\* ) (?=\S) (?! \*) (.+?) (?<=\S) \* }sx',
			),
			'<em>\2</em>', $text);

		return $text;
	}


||||||||	function doItalicsAndBold($text) {
	#
	# Redefined to change emphasis by underscore behaviour so that it does not
	# work in the middle of a word.
	#
		# <strong> must go first:
		$text = preg_replace_callback(array(
			'{
				( (?<!\w) __ )			# $1: Marker (not preceded by alphanum)
				(?=\S) 					# Not followed by whitespace
				(?!__)					#   or two others marker chars.
				(						# $2: Content
					(?>
						[^_]+?			# Anthing not em markers.
					|
										# Balence any regular _ emphasis inside.
						(?<![a-zA-Z0-9])_ (?=\S) (?! _) (.+?)
						(?<=\S) _ (?![a-zA-Z0-9])
					)+?
				)
				(?<=\S) __				# End mark not preceded by whitespace.
				(?!\w)					# Not followed by alphanum.
			}sx',
			'{
				( (?<!\*\*) \*\* )		# $1: Marker (not preceded by two *)
				(?=\S) 					# Not followed by whitespace
				(?!\1)					#   or two others marker chars.
				(						# $2: Content
					(?>
						[^*]+?			# Anthing not em markers.
					|
										# Balence any regular * emphasis inside.
						\* (?=\S) (?! \*) (.+?) (?<=\S) \*
					)+?
				)
				(?<=\S) \*\*			# End mark not preceded by whitespace.
			}sx',
			),
			array(&$this, '_doItalicAndBold_strong_callback'), $text);
		# Then <em>:
		$text = preg_replace_callback(array(
			'{ ( (?<!\w) _ ) (?=\S) (?! _)  (.+?) (?<=\S) _ (?!\w) }sx',
			'{ ( (?<!\*)\* ) (?=\S) (?! \*) (.+?) (?<=\S) \* }sx',
			),
			array(&$this, '_doItalicAndBold_em_callback'), $text);

		return $text;
	}


||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (SCALAR)
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL)))
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))