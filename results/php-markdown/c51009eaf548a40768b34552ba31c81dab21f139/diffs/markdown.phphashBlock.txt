	function hashBlock($text) {
	#
	# Called whenever a tag must be hashed when a function insert a block-level
	# tag in $text, it pass through this function and is automaticaly escaped,
	# which remove the need to call _HashHTMLBlocks at every step.
	#
		# Swap back any tag hash found in $text so we do not have to _UnhashTags
		# multiple times at the end.
		$text = $this->unhashTags($text);

		# Then hash the block as usual.
		$text = $this->_hashHTMLBlocks_HashBlock($text);

		return $text;
	}


||||||||	function hashBlock($text) {
	#
	# Called whenever a tag must be hashed when a function insert a block-level
	# tag in $text, it pass through this function and is automaticaly escaped,
	# which remove the need to call _HashHTMLBlocks at every step.
	#
		# Swap back any tag hash found in $text so we do not have to `unhash`
		# multiple times at the end.
		$text = $this->unhash($text);

		# Then hash the block.
		$key = md5($text);
		$this->html_hashes[$key] = $text;
		$this->html_blocks[$key] = $text;
		return $key; # String that will replace the tag.
	}


||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))
        (AST_VAR))
    (AST_RETURN
        (AST_VAR)))