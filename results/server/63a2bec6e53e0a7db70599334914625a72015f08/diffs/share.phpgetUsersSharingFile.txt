	public static function getUsersSharingFile($path, $user, $includeOwner = false) {

		$shares = array();
		$publicShare = false;
		$view = new \OC\Files\View('/' . $user . '/files/');
		$meta = $view->getFileInfo(\OC_Filesystem::normalizePath($path));
		$source = $meta['fileid'];
		$parent = $meta['parent'];
		$cache = new \OC\Files\Cache\Cache($meta['storage']);

		while ($path !== 'files' && $parent !== '-1') {

			// Fetch all shares of this file path from DB
			$query = \OC_DB::prepare(
				'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
			);

			$result = $query->execute(array($source, self::SHARE_TYPE_USER));

			if (\OC_DB::isError($result)) {
				\OC_Log::write('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
			}

			while ($row = $result->fetchRow()) {
				$shares[] = $row['share_with'];
			}

			// We also need to take group shares into account

			$query = \OC_DB::prepare(
				'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
			);

			$result = $query->execute(array($source, self::SHARE_TYPE_GROUP));

			if (\OC_DB::isError($result)) {
				\OC_Log::write('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
			}

			while ($row = $result->fetchRow()) {
				$usersInGroup = \OC_Group::usersInGroup($row['share_with']);
				$shares = array_merge($shares, $usersInGroup);
			}

			//check for public link shares
			if (!$publicShare) {
				$query = \OC_DB::prepare(
						'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
				);

				$result = $query->execute(array($source, self::SHARE_TYPE_LINK));

				if (\OC_DB::isError($result)) {
					\OC_Log::write('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
				}

				if ($result->fetchRow()) {
					$publicShare = true;
				}
			}

			// let's get the parent for the next round
			$meta = $cache->get((int)$source);
			$parent = $meta['parent'];
			$parentMeta = $cache->get((int)$parent);
			$path = $parentMeta['path'];
			$source = $parent;
		}
		// Include owner in list of users, if requested
		if ($includeOwner) {
			$shares[] = $user;
		}

		return array("users" => array_unique($shares), "public" => $publicShare);
	}

	/**
	* @brief Get the items of item type shared with the current user
	* @param string Item type
	* @param int Format (optional) Format type must be defined by the backend
	* @param int Number of items to return (optional) Returns all by default
	* @return Return depends on format
	*/
||||||||	public static function getUsersSharingFile($path, $user, $includeOwner = false) {

		$shares = array();
		$publicShare = false;
		$view = new \OC\Files\View('/' . $user . '/files/');
		$meta = $view->getFileInfo(\OC_Filesystem::normalizePath($path));
		$source = $meta['fileid'];
		$parent = $meta['parent'];
		$cache = new \OC\Files\Cache\Cache($meta['storage']);

		while ($parent !== '-1') {

			// Fetch all shares of this file path from DB
			$query = \OC_DB::prepare(
				'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
			);

			$result = $query->execute(array($source, self::SHARE_TYPE_USER));

			if (\OCP\DB::isError($result)) {
				\OCP\Util::writeLog('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
			} else {
				while ($row = $result->fetchRow()) {
					$shares[] = $row['share_with'];
				}
			}
			// We also need to take group shares into account

			$query = \OC_DB::prepare(
				'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
			);

			$result = $query->execute(array($source, self::SHARE_TYPE_GROUP));

			if (\OCP\DB::isError($result)) {
				\OCP\Util::writeLog('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
			} else {
				while ($row = $result->fetchRow()) {
					$usersInGroup = \OC_Group::usersInGroup($row['share_with']);
					$shares = array_merge($shares, $usersInGroup);
				}
			}

			//check for public link shares
			if (!$publicShare) {
				$query = \OC_DB::prepare(
						'SELECT share_with
				FROM
				`*PREFIX*share`
				WHERE
				item_source = ? AND share_type = ?'
				);

				$result = $query->execute(array($source, self::SHARE_TYPE_LINK));

				if (\OCP\DB::isError($result)) {
					\OCP\Util::writeLog('OCP\Share', \OC_DB::getErrorMessage($result), \OC_Log::ERROR);
				} else {
					if ($result->fetchRow()) {
						$publicShare = true;
					}
				}
			}

			// let's get the parent for the next round
			$meta = $cache->get((int)$source);
			$parent = $meta['parent'];
			$source = $parent;
		}
		// Include owner in list of users, if requested
		if ($includeOwner) {
			$shares[] = $user;
		}

		return array("users" => array_unique($shares), "public" => $publicShare);
	}

	/**
	* @brief Get the items of item type shared with the current user
	* @param string Item type
	* @param int Format (optional) Format type must be defined by the backend
	* @param int Number of items to return (optional) Returns all by default
	* @return Return depends on format
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR)))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))))))
            (AST_WHILE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_VAR)
                            (NULL))
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR)))))))
            (AST_WHILE
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (NULL))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)))
                                            (AST_CLASS_CONST
                                                (SCALAR)))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CONST))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CAST
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CAST
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))))
    (AST_WHILE
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR))
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_WHILE
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (SCALAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CLASS_CONST
                                    (SCALAR))
                                (NULL))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CLASS_CONST
                                    (SCALAR))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_WHILE
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_STATIC_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_VAR)))))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_VAR))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_CLASS_CONST
                                                (SCALAR))
                                            (NULL))))))
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_STATIC_CALL
                                        (
                                            (SCALAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (AST_VAR)))
                                            (AST_CLASS_CONST
                                                (SCALAR))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_CONST)))))))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CAST
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR)))))