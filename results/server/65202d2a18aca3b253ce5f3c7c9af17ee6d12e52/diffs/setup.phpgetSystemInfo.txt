	public function getSystemInfo($allowAllDatabases = false) {
		$databases = $this->getSupportedDatabases($allowAllDatabases);

		$dataDir = $this->config->getSystemValue('datadirectory', \OC::$SERVERROOT.'/data');

		$errors = array();

		// Create data directory to test whether the .htaccess works
		// Notice that this is not necessarily the same data directory as the one
		// that will effectively be used.
		@mkdir($dataDir);
		$htAccessWorking = true;
		if (is_dir($dataDir) && is_writable($dataDir)) {
			// Protect data directory here, so we can test if the protection is working
			\OC\Setup::protectDataDirectory();

			try {
				$htAccessWorking = \OC_Util::isHtaccessWorking();
			} catch (\OC\HintException $e) {
				$errors[] = array(
					'error' => $e->getMessage(),
					'hint' => $e->getHint()
				);
				$htAccessWorking = false;
			}
		}

		if (\OC_Util::runningOnMac()) {
			$errors[] = array(
				'error' => $this->l10n->t(
					'Mac OS X is not supported and %s will not work properly on this platform. ' .
					'Use it at your own risk! ',
					$this->defaults->getName()
				),
				'hint' => $this->l10n->t('For the best results, please consider using a GNU/Linux server instead.')
			);
		}

		if($this->iniWrapper->getString('open_basedir') !== '' && PHP_INT_SIZE === 4) {
			$errors[] = array(
				'error' => $this->l10n->t(
					'It seems that this %s instance is running on a 32-bit PHP environment and the open_basedir has been configured in php.ini. ' .
					'This will lead to problems with files over 4 GB and is highly discouraged.',
					$this->defaults->getName()
				),
				'hint' => $this->l10n->t('Please remove the open_basedir setting within your php.ini or switch to 64-bit PHP.')
			);
		}

		return array(
			'hasSQLite' => isset($databases['sqlite']),
			'hasMySQL' => isset($databases['mysql']),
			'hasPostgreSQL' => isset($databases['pgsql']),
			'hasOracle' => isset($databases['oci']),
			'hasMSSQL' => isset($databases['mssql']),
			'databases' => $databases,
			'directory' => $dataDir,
			'htaccessWorking' => $htAccessWorking,
			'errors' => $errors,
		);
	}

	/**
	 * @param $options
	 * @return array
	 */
||||||||	public function getSystemInfo($allowAllDatabases = false) {
		$databases = $this->getSupportedDatabases($allowAllDatabases);

		$dataDir = $this->config->getSystemValue('datadirectory', \OC::$SERVERROOT.'/data');

		$errors = array();

		// Create data directory to test whether the .htaccess works
		// Notice that this is not necessarily the same data directory as the one
		// that will effectively be used.
		@mkdir($dataDir);
		$htAccessWorking = true;
		if (is_dir($dataDir) && is_writable($dataDir)) {
			// Protect data directory here, so we can test if the protection is working
			\OC\Setup::protectDataDirectory();

			try {
				$util = new \OC_Util();
				$htAccessWorking = $util->isHtaccessWorking(\OC::$server->getConfig());
			} catch (\OC\HintException $e) {
				$errors[] = array(
					'error' => $e->getMessage(),
					'hint' => $e->getHint()
				);
				$htAccessWorking = false;
			}
		}

		if (\OC_Util::runningOnMac()) {
			$errors[] = array(
				'error' => $this->l10n->t(
					'Mac OS X is not supported and %s will not work properly on this platform. ' .
					'Use it at your own risk! ',
					$this->defaults->getName()
				),
				'hint' => $this->l10n->t('For the best results, please consider using a GNU/Linux server instead.')
			);
		}

		if($this->iniWrapper->getString('open_basedir') !== '' && PHP_INT_SIZE === 4) {
			$errors[] = array(
				'error' => $this->l10n->t(
					'It seems that this %s instance is running on a 32-bit PHP environment and the open_basedir has been configured in php.ini. ' .
					'This will lead to problems with files over 4 GB and is highly discouraged.',
					$this->defaults->getName()
				),
				'hint' => $this->l10n->t('Please remove the open_basedir setting within your php.ini or switch to 64-bit PHP.')
			);
		}

		return array(
			'hasSQLite' => isset($databases['sqlite']),
			'hasMySQL' => isset($databases['mysql']),
			'hasPostgreSQL' => isset($databases['pgsql']),
			'hasOracle' => isset($databases['oci']),
			'hasMSSQL' => isset($databases['mssql']),
			'databases' => $databases,
			'directory' => $dataDir,
			'htaccessWorking' => $htAccessWorking,
			'errors' => $errors,
		);
	}

	/**
	 * @param $options
	 * @return array
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL)
                (AST_TRY
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL)))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR)
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_STATIC_CALL)
                (AST_TRY
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_METHOD_CALL
                                        (AST_STATIC_PROP))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (NULL))
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))
                                        (AST_ARRAY_ELEM
                                            (AST_METHOD_CALL
                                                (AST_VAR))
                                            (SCALAR))))
                                (AST_ASSIGN
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL)
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)))
                    (SCALAR))
                (AST_BINARY_OP
                    (AST_CONST)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (SCALAR))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR))
                                (
                                    (SCALAR)))
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR)))))