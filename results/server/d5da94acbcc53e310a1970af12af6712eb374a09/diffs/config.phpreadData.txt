	private static function readData() {
		if( self::$init ) {
			return true;
		}

		// read all file in config dir ending by config.php
		$config_files = glob( OC::$SERVERROOT."/config/*.config.php");

		//Sort array naturally :
		natsort($config_files);

		//Filter only regular files
		$config_files = array_filter($config_files, 'is_file');

		// Add default config
		array_unshift($config_files,OC::$SERVERROOT."/config/config.php");

		//Include file and merge config
		foreach($config_files as $file){
			include $file;
			if( isset( $CONFIG ) && is_array( $CONFIG )) {
				self::$cache = array_merge(self::$cache, $CONFIG);
			}
		}

		// We cached everything
		self::$init = true;

		return true;
	}

	/**
	 * @brief Writes the config file
	 * @return bool
	 *
	 * Saves the config to the config file.
	 *
	 */
||||||||	private static function readData() {
		if( self::$init ) {
			return true;
		}

		// read all file in config dir ending by config.php
		$config_files = glob( OC::$SERVERROOT."/config/*.config.php");

		//Filter only regular files
		$config_files = array_filter($config_files, 'is_file');

		//Sort array naturally :
		natsort($config_files);

		// Add default config
		array_unshift($config_files,OC::$SERVERROOT."/config/config.php");

		//Include file and merge config
		foreach($config_files as $file){
			include $file;
			if( isset( $CONFIG ) && is_array( $CONFIG )) {
				self::$cache = array_merge(self::$cache, $CONFIG);
			}
		}

		// We cached everything
		self::$init = true;

		return true;
	}

	/**
	 * @brief Writes the config file
	 * @return bool
	 *
	 * Saves the config to the config file.
	 *
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_INCLUDE_OR_EVAL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_PROP)
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_STATIC_PROP)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_BINARY_OP
                (AST_STATIC_PROP)
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_INCLUDE_OR_EVAL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_STATIC_PROP)
                            (AST_CALL
                                (
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_CONST))
    (AST_RETURN
        (AST_CONST)))