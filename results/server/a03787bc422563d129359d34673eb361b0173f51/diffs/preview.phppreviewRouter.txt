	public static function previewRouter($params){
		OC_Util::checkLoggedIn();

		$file = '';
		$maxX = 0;
		$maxY = 0;
		/*
		 * use: ?scalingup=0 / ?scalingup = 1
		 * do not use ?scalingup=false / ?scalingup = true as these will always be true
		 */
		$scalingup = true;

		if(array_key_exists('file', $_GET)) $file = (string) urldecode($_GET['file']);
		if(array_key_exists('x', $_GET)) $maxX = (int) $_GET['x'];
		if(array_key_exists('y', $_GET)) $maxY = (int) $_GET['y'];
		if(array_key_exists('scalingup', $_GET)) $scalingup = (bool) $_GET['scalingup'];

		if($file !== '' && $maxX !== 0 && $maxY !== 0){
			$preview = new OC_Preview(OC_User::getUser(), 'files', $file,  $maxX, $maxY, $scalingup);
			$preview->showPreview();
		}else{
			OC_Response::setStatus(404);
			exit;
		}
	}

	/**
	 * @brief method that handles preview requests from users that are not logged in / view shared folders that are public
	 * @return void
	*/
||||||||	public static function previewRouter($params){
		OC_Util::checkLoggedIn();

		$file = '';
		$maxX = 0;
		$maxY = 0;
		/*
		 * use: ?scalingup=0 / ?scalingup = 1
		 * do not use ?scalingup=false / ?scalingup = true as these will always be true
		 */
		$scalingup = true;

		if(array_key_exists('file', $_GET)) $file = (string) urldecode($_GET['file']);
		if(array_key_exists('x', $_GET)) $maxX = (int) $_GET['x'];
		if(array_key_exists('y', $_GET)) $maxY = (int) $_GET['y'];
		if(array_key_exists('scalingup', $_GET)) $scalingup = (bool) $_GET['scalingup'];

		if($file !== '' && $maxX !== 0 && $maxY !== 0){
			try{
				$preview = new OC_Preview(OC_User::getUser(), 'files', $file,  $maxX, $maxY, $scalingup);
				$preview->showPreview();
			}catch(Exception $e){
				OC_Response::setStatus(404);
				OC_Log::write('core', $e->getmessage(), OC_Log::ERROR);
				exit;
			}
		}else{
			OC_Response::setStatus(404);
			exit;
		}
	}

	/**
	 * @brief method that handles preview requests from users that are not logged in / view shared folders that are public
	 * @return void
	*/
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (
                            (AST_STATIC_CALL)
                            (SCALAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR)
                            (AST_VAR))))
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_EXIT
                    (NULL))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CAST
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR))
                    (AST_BINARY_OP
                        (AST_VAR)
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_TRY
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_NEW
                                (
                                    (AST_STATIC_CALL)
                                    (SCALAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)
                            (
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)))
                                (AST_STATIC_CALL
                                    (
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_CLASS_CONST
                                            (SCALAR))))
                                (AST_EXIT
                                    (NULL)))))
                    (NULL))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)))
                (AST_EXIT
                    (NULL))))))