    function getOperator($op)
    {
        switch ($op) {
        case 'PLUS':
            return ' + ';
        case 'MINUS':
            return ' - ';
        case 'TIMES':
            return ' * ';
        case 'DIVIDED':
            return ' / ';
        case 'EQUAL':
            return ' = ';
        case 'NOT EQUAL':
            return ' != ';
        case 'LESS THAN':
            return ' < ';
        case 'GREATER THAN':
            return ' > ';
        case 'LESS THAN OR EQUAL':
            return ' <= ';
        case 'GREATER THAN OR EQUAL':
            return ' >= ';
        default:
            return ' '.$op.' ';
        }
    }

    // }}}
    // {{{ getInstructionFields()

    /**
     * Walks the parsed DML instruction array, field by field,
     * storing them and their processed values inside a new array.
     *
     * @param array $instruction       multi dimensional array that contains the
     *                                 structure of the current DML instruction.
     * @param array $fields_definition multi dimensional array that contains the
     *                                 definition for current table's fields
     *
     * @return array  array of strings in the form 'field_name' => 'value'
     *
     * @access public
     * @static
     * @see MDB2_Schema::initializeTable()
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_RETURN
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR))))))))||||||||