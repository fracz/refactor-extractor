    function Mail_mimePart($body = '', $params = array())
    {
        if (!defined('MAIL_MIMEPART_CRLF')) {
            define('MAIL_MIMEPART_CRLF', defined('MAIL_MIME_CRLF') ? MAIL_MIME_CRLF : "\r\n", TRUE);
        }

        foreach ($params as $key => $value) {
            switch ($key) {
                case 'content_type':
                    $headers['Content-Type'] = $value . (isset($charset) ? '; charset="' . $charset . '"' : '');
                    break;

                case 'encoding':
                    $this->_encoding = $value;
                    $headers['Content-Transfer-Encoding'] = $value;
                    break;

                case 'cid':
                    $headers['Content-ID'] = '<' . $value . '>';
                    break;

                case 'disposition':
                    $headers['Content-Disposition'] = $value . (isset($dfilename) ? '; filename="' . $dfilename . '"' : '');
                    break;

                case 'dfilename':
                    if (isset($headers['Content-Disposition'])) {
                        $headers['Content-Disposition'] .= '; filename="' . $value . '"';
                    } else {
                        $dfilename = $value;
                    }
                    break;

                case 'description':
                    $headers['Content-Description'] = $value;
                    break;

                case 'charset':
                    if (isset($headers['Content-Type'])) {
                        $headers['Content-Type'] .= '; charset="' . $value . '"';
                    } else {
                        $charset = $value;
                    }
                    break;
            }
        }

        // Default content-type
        if (!isset($headers['Content-Type'])) {
            $headers['Content-Type'] = 'text/plain';
        }

        //Default encoding
        if (!isset($this->_encoding)) {
            $this->_encoding = '7bit';
        }

        // Assign stuff to member variables
        $this->_encoded  = array();
        $this->_headers  = $headers;
        $this->_body     = $body;
    }

    /**
     * encode()
     *
     * Encodes and returns the email. Also stores
     * it in the encoded member variable
     *
     * @return An associative array containing two elements,
     *         body and headers. The headers element is itself
     *         an indexed array.
     * @access public
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR))))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_CONDITIONAL
                            (AST_CALL
                                (
                                    (SCALAR)))
                            (AST_CONST)
                            (SCALAR))
                        (AST_CONST))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_SWITCH
                (AST_VAR)
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONDITIONAL
                                        (AST_ISSET
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_VAR))
                                    (SCALAR)))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CONDITIONAL
                                        (AST_ISSET
                                            (AST_VAR))
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (SCALAR))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))
                                    (
                                        (AST_ASSIGN_OP
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_VAR))
                                                (SCALAR)))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_VAR)))))
                            (AST_BREAK
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_VAR)))||||||||