	public function sendTmpFile($tmp,$targetDir,$targetFile){
		$token=sha1(uniqid().$tmp);
		global $WEBROOT;
		$file=sys_get_temp_dir().'/'.'remoteCloudFile'.$token;
		rename($tmp,$file);
		if((isset($CONFIG_HTTPFORCESSL) and $CONFIG_HTTPFORCESSL) or isset($_SERVER['HTTPS']) and $_SERVER['HTTPS'] == 'on') {
			$url = "https://". $_SERVER['SERVER_NAME'] . $WEBROOT;
		}else{
			$url = "http://". $_SERVER['SERVER_NAME'] . $WEBROOT;
		}
		return $this->apiCall('pull',array('dir'=>$targetDir,'file'=>$targetFile,'token'=>$token,'source'=>$url),true);
	}
}

function OC_CONNECT_TEST($path,$user,$password){
	echo 'connecting...';
	$remote=OC_CONNECT::connect($path,$user,$password);
	if($remote->connected){
		echo 'done<br/>';
		if($remote->isLoggedIn()){
			echo 'logged in, session working<br/>';
			echo 'trying to get remote files...';
			$files=$remote->getFiles('');
			if($files){
				echo count($files).' files found:<br/>';
				foreach($files as $file){
					echo "{$file['type']} {$file['name']}: {$file['size']} bytes<br/>";
				}
				echo 'getting file "'.$file['name'].'"...';
				$size=$file['size'];
				$file=$remote->getFile('',$file['name']);
				if(file_exists($file)){
					$newSize=filesize($file);
					if($size!=$newSize){
						echo "fail<br/>Error: $newSize bytes received, $size expected.";
						echo '<br/><br/>Recieved file:<br/>';
						readfile($file);
						unlink($file);
						return;
					}
					OC_FILESYSTEM::fromTmpFile($file,'/remoteFile');
					echo 'done<br/>';
					echo 'sending file "burning_avatar.png"...';
					$res=$remote->sendFile('','burning_avatar.png','','burning_avatar.png');
					if($res){
						echo 'done<br/>';
					}else{
						echo 'fail<br/>';
					}
				}else{
					echo 'fail<br/>';
				}
			}else{
				echo 'fail<br/>';
			}
		}else{
			echo 'no longer logged in, session fail<br/>';
		}
	}else{
		echo 'fail<br/>';
	}
	$remote->disconnect();
	die();
}


?>||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_CALL)
                    (AST_VAR)))))
    (AST_GLOBAL
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_CALL)
                    (SCALAR))
                (SCALAR))
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_VAR))
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_BINARY_OP
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (SCALAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_VAR))))))
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST)))))||||||||