    function createTestClass() {
        // Instantiate the object.
        if (isset($this->configFile)) {
            require_once $this->configFile;
        }

        require_once $this->classPath;

        // Get the methods.
        $classMethods = get_class_methods($this->className);

        // Remove the parent methods if needed.
        if (!$this->includeParents) {
            $parentMethods = get_class_methods(get_parent_class($this->className));

            if (count($parentMethods)) {
                $classMethods = array_diff($classMethods, $parentMethods);
            }
        }

        // Create the class definition, constructor, setUp and tearDown.
        $this->_createDefinition();
        $this->_createConstructor();
        $this->_createSetUpTearDown();

        if (count($classMethods)) {
            // Foreach method create a test case.
            foreach ($classMethods as $method) {
                // Unless it is the constructor.
                if (strcasecmp($this->className, $method) !== 0) {
                  // Check for private methods.
                  if (!$this->includePrivate && strpos($method, '_') === 0) {
                      continue;
                  } else {
                      $this->_createMethod($method);
                  }
                }
            }
        }

        // Finis off the class.
        $this->_finishClass();
    }

    /**
     * Create the class definition.
     *
     * The definition consist of a header comment, require statment
     * for getting the PHPUnit file, the actual class definition,
     * and the definition of the class member variable.
     *
     * All of the code needed for the new class is stored in the
     * testClass member.
     *
     * @access private
     * @param  none
     * @return void
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_INCLUDE_OR_EVAL
                    (AST_PROP
                        (AST_VAR))))))
    (AST_INCLUDE_OR_EVAL
        (AST_PROP
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_PROP
                                        (AST_VAR)))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CALL
                                        (
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_VAR)))
                                    (SCALAR))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (SCALAR)))
                                                    (SCALAR)))
                                            (
                                                (AST_CONTINUE
                                                    (NULL))))
                                        (AST_IF_ELEM
                                            (NULL)
                                            (
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_VAR))))))))))))))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||