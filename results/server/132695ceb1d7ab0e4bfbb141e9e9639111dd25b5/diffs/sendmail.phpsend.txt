    function send($recipients, $headers, $body)
    {
        $recipients = $this->parseRecipients($recipients);
        if (PEAR::isError($recipients)) {
            return $recipients;
        }
        $recipients = escapeShellCmd(implode(' ', $recipients));

        $headerElements = $this->prepareHeaders($headers);
        if (PEAR::isError($headerElements)) {
            return $headerElements;
        }
        list($from, $text_headers) = $headerElements;

        if (!isset($from)) {
            return PEAR::raiseError('No from address given.');
        } elseif (strstr($from, ' ') ||
                  strstr($from, ';') ||
                  strstr($from, '&') ||
                  strstr($from, '`')) {
            return PEAR::raiseError('From address specified with dangerous characters.');
        }

        $result = 0;
        if (@is_file($this->sendmail_path)) {
            $from = escapeShellCmd($from);
            $mail = popen($this->sendmail_path . (!empty($this->sendmail_args) ? ' ' . $this->sendmail_args : '') . " -f$from -- $recipients", 'w');
            fputs($mail, $text_headers);
            fputs($mail, $this->sep);  // newline to end the headers section
            fputs($mail, $body);
            $result = pclose($mail);
            if (version_compare(phpversion(), '4.2.3') == -1) {
                // With older php versions, we need to shift the
                // pclose result to get the exit code.
                $result = $result >> 8 & 0xFF;
            }
        } else {
            return PEAR::raiseError('sendmail [' . $this->sendmail_path . '] is not a valid file');
        }

        if ($result != 0) {
            return PEAR::raiseError('sendmail returned error code ' . $result,
                                    $result);
        }

        return true;
    }

}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_STATIC_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL)))
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (SCALAR))))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR)))
                        (AST_CALL
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (SCALAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_CONDITIONAL
                                        (AST_UNARY_OP
                                            (AST_EMPTY
                                                (AST_PROP
                                                    (AST_VAR))))
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_PROP
                                                (AST_VAR)))
                                        (SCALAR)))
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)))
                            (SCALAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_CALL)
                                    (SCALAR)))
                            (AST_UNARY_OP
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (SCALAR))
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_STATIC_CALL
                        (
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CONST)))||||||||