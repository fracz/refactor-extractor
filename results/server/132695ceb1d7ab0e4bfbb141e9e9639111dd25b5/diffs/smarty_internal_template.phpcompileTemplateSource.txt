||||||||    public function compileTemplateSource ()
    {
        if (!$this->resource_object->isEvaluated) {
            $this->properties['file_dependency'] = array();
            $this->properties['file_dependency'][$this->templateUid] = array($this->getTemplateFilepath(), $this->getTemplateTimestamp(),$this->resource_type);
        }
        if ($this->smarty->debugging) {
            Smarty_Internal_Debug::start_compile($this);
        }
        // compile template
        if (!is_object($this->compiler_object)) {
            // load compiler
            $this->smarty->loadPlugin($this->resource_object->compiler_class);
            $this->compiler_object = new $this->resource_object->compiler_class($this->resource_object->template_lexer_class, $this->resource_object->template_parser_class, $this->smarty);
        }
        // compile locking
        if ($this->smarty->compile_locking && !$this->resource_object->isEvaluated) {
            if ($saved_timestamp = $this->getCompiledTimestamp()) {
                touch($this->getCompiledFilepath());
            }
        }
        // call compiler
        try {
            $this->compiler_object->compileTemplate($this);
        }
        catch (Exception $e) {
            // restore old timestamp in case of error
            if ($this->smarty->compile_locking && !$this->resource_object->isEvaluated && $saved_timestamp) {
                touch($this->getCompiledFilepath(), $saved_timestamp);
            }
            throw $e;
        }
        // compiling succeded
        if (!$this->resource_object->isEvaluated && $this->write_compiled_code) {
            // write compiled template
            Smarty_Internal_Write_File::writeFile($this->getCompiledFilepath(), $this->compiled_template, $this->smarty);
        }
        if ($this->smarty->debugging) {
            Smarty_Internal_Debug::end_compile($this);
        }
        // release objects to free memory
		Smarty_Internal_TemplateCompilerBase::$_tag_objects = array();
        unset($this->compiler_object->parser->root_buffer,
        	$this->compiler_object->parser->current_buffer,
        	$this->compiler_object->parser,
        	$this->compiler_object->lex,
        	$this->compiler_object->template,
        	$this->compiler_object
        	);
    }

    /**
     * Returns the filepath of the cached template output
     *
     * The filepath is determined by the actual cache resource
     *
     * @return string the cache filepath
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (AST_ARRAY))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_PROP
                            (AST_VAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (NULL)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_NEW
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_PROP
                                (AST_VAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))))))))))
    (AST_TRY
        (
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_UNARY_OP
                                        (AST_PROP
                                            (AST_PROP
                                                (AST_VAR)))))
                                (AST_VAR))
                            (
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_VAR))))))
                    (AST_THROW
                        (AST_VAR)))))
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_STATIC_PROP)
        (AST_ARRAY))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_UNSET
        (AST_PROP
            (AST_PROP
                (AST_VAR))))
    (AST_UNSET
        (AST_PROP
            (AST_VAR))))