||||||||    function isTrustedPHPDir($filepath)
    {
        $_rp = realpath($filepath);
        if (!empty($this->trusted_dir)) {
            foreach ((array)$this->trusted_dir as $curr_dir) {
                if (($_cd = realpath($curr_dir)) !== false) {
                    if ($_cd == $_rp) {
                        return true;
                    } elseif (strncmp($_rp, $_cd, strlen($_cd)) == 0 &&
                            substr($_rp, strlen($_cd), 1) == DS) {
                        return true;
                    }
                }
            }
        }

        throw new SmartyException ("directory '{$_rp}' not allowed by security setting");
        return false;
    }
}

?>||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_FOREACH
                    (AST_CAST
                        (AST_PROP
                            (AST_VAR)))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (AST_CONST))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (AST_VAR))
                                            (
                                                (AST_RETURN
                                                    (AST_CONST))))
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))))
                                                    (SCALAR))
                                                (AST_BINARY_OP
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_CALL
                                                                (
                                                                    (AST_VAR)))
                                                            (SCALAR)))
                                                    (AST_CONST)))
                                            (
                                                (AST_RETURN
                                                    (AST_CONST)))))))))))))
    (AST_THROW
        (AST_NEW
            (
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_RETURN
        (AST_CONST)))