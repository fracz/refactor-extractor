    function xmlFromInfo($pkginfo)
    {
        static $maint_map = array(
            "handle" => "user",
            "name" => "name",
            "email" => "email",
            "role" => "role",
            );
        $ret = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n";
        $ret .= "<!DOCTYPE package SYSTEM \"http://pear.php.net/dtd/package-1.0\">\n";
        $ret .= "<package version=\"1.0\">
  <name>$pkginfo[package]</name>
  <summary>".htmlspecialchars($pkginfo['summary'])."</summary>
  <description>".htmlspecialchars($pkginfo['description'])."</description>
  <maintainers>
";
        foreach ($pkginfo['maintainers'] as $maint) {
            $ret .= "    <maintainer>\n";
            foreach ($maint_map as $idx => $elm) {
                $ret .= "      <$elm>";
                $ret .= htmlspecialchars($maint[$idx]);
                $ret .= "</$elm>\n";
            }
            $ret .= "    </maintainer>\n";
        }
        $ret .= "  </maintainers>\n";
        $ret .= $this->_makeReleaseXml($pkginfo);
        if (@sizeof($pkginfo['changelog']) > 0) {
            $ret .= "  <changelog>\n";
            foreach ($pkginfo['changelog'] as $oldrelease) {
                $ret .= $this->_makeReleaseXml($oldrelease, true);
            }
            $ret .= "  </changelog>\n";
        }
        $ret .= "</package>\n";
        return $ret;
    }

    // }}}
    // {{{ _makeReleaseXml()

    /**
     * Generate part of an XML description with release information.
     *
     * @param array  $pkginfo    array with release information
     * @param bool   $changelog  whether the result will be in a changelog element
     *
     * @return string XML data
     *
     * @access private
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (SCALAR)))
    (AST_FOREACH
        (AST_DIM
            (AST_VAR)
            (SCALAR))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (SCALAR))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_ENCAPS_LIST
                            (SCALAR)
                            (AST_VAR)
                            (SCALAR)))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))))
                (SCALAR))
            (
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_FOREACH
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_ASSIGN_OP
                            (AST_VAR)
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST))))))
                (AST_ASSIGN_OP
                    (AST_VAR)
                    (SCALAR)))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (SCALAR))
    (AST_RETURN
        (AST_VAR)))||||||||