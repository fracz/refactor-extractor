    function addTestSuite($testClass) {
        if (class_exists($testClass)) {
            $methods       = get_class_methods($testClass);
            $parentClasses = array(strtolower($testClass));
            $parentClass   = $testClass;

            while(is_string($parentClass = get_parent_class($parentClass))) {
                $parentClasses[] = $parentClass;
            }

            foreach ($methods as $method) {
                if (substr($method, 0, 4) == 'test' &&
                    !in_array($method, $parentClasses)) {
                    $this->addTest(new $testClass($method));
                }
            }
        }
    }

    /**
    * Counts the number of test cases that will be run by this test.
    *
    * @return integer
    * @access public
    */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (NULL))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR))
                (AST_WHILE
                    (AST_CALL
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_VAR))))))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_VAR)
                                (NULL))
                            (AST_VAR))))
                (AST_FOREACH
                    (AST_VAR)
                    (AST_VAR)
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)
                                                (SCALAR)))
                                        (SCALAR))
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (AST_NEW
                                                (AST_VAR)
                                                (
                                                    (AST_VAR))))))))))))))||||||||