    function _get_ranges(&$options)
    {
        // process Range: header if present
        if (isset($_SERVER['HTTP_RANGE'])) {

            // we only support standard "bytes" range specifications for now
            if (preg_match('/bytes\s*=\s*(.+)/', $_SERVER['HTTP_RANGE'], $matches)) {
                $options["ranges"] = array();

                // ranges are comma separated
                foreach (explode(",", $matches[1]) as $range) {
                    // ranges are either from-to pairs or just end positions
                    list($start, $end) = explode("-", $range);
                    $options["ranges"][] = ($start==="")
                                         ? array("last"=>$end)
                                         : array("start"=>$start, "end"=>$end);
                }
            }
        }
    }

    /**
     * generate separator headers for multipart response
     *
     * first and last call happen without parameters to generate
     * the initial header and closing sequence, all calls inbetween
     * require content mimetype, start and end byte position and
     * optionaly the total byte length of the requested resource
     *
     * @param  string  mimetype
     * @param  int     start byte position
     * @param  int     end   byte position
     * @param  int     total resource byte size
     */
||||||||    function _get_ranges(&$options)
    {
        // process Range: header if present
        if (isset($this->_SERVER['HTTP_RANGE'])) {

            // we only support standard "bytes" range specifications for now
            if (preg_match('/bytes\s*=\s*(.+)/', $this->_SERVER['HTTP_RANGE'], $matches)) {
                $options["ranges"] = array();

                // ranges are comma separated
                foreach (explode(",", $matches[1]) as $range) {
                    // ranges are either from-to pairs or just end positions
                    list($start, $end) = explode("-", $range);
                    $options["ranges"][] = ($start==="")
                        ? array("last"=>$end)
                        : array("start"=>$start, "end"=>$end);
                }
            }
        }
    }

    /**
     * generate separator headers for multipart response
     *
     * first and last call happen without parameters to generate
     * the initial header and closing sequence, all calls inbetween
     * require content mimetype, start and end byte position and
     * optionaly the total byte length of the requested resource
     *
     * @param  string  mimetype
     * @param  int     start byte position
     * @param  int     end   byte position
     * @param  int     total resource byte size
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY))
                            (AST_FOREACH
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (NULL))
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR))))))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY))
                            (AST_FOREACH
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_VAR)
                                                (NULL)))
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_ASSIGN
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (NULL))
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_VAR)
                                                (SCALAR))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR)))
                                            (AST_ARRAY
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR))
                                                (AST_ARRAY_ELEM
                                                    (AST_VAR)
                                                    (SCALAR))))))))))))))