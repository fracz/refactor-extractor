	public function isEmpty() {
		$sql = 'SELECT COUNT(*) FROM `' . self::TAG_TABLE . '` '
			. 'WHERE `uid` = ? AND `type` = ?';
		try {
			$stmt = \OCP\DB::prepare($sql);
			$result = $stmt->execute(array($this->user, $this->type));
			if (\OCP\DB::isError($result)) {
				\OCP\Util::writeLog('core', __METHOD__. ', DB error: ' . \OCP\DB::getErrorMessage($result), \OCP\Util::ERROR);
				return false;
			}
			return ((int)$result->fetchOne() === 0);
		} catch(\Exception $e) {
			\OCP\Util::writeLog('core', __METHOD__.', exception: '.$e->getMessage(),
				\OCP\Util::ERROR);
			return false;
		}
	}

	/**
	* Get the tags for a specific user.
	*
	* This returns an array with id/name maps:
	* [
	* 	['id' => 0, 'name' = 'First tag'],
	* 	['id' => 1, 'name' = 'Second tag'],
	* ]
	*
	* @return array
	*/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (SCALAR))
            (SCALAR)))
    (AST_TRY
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_PROP
                                    (AST_VAR))
                                (NULL))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_STATIC_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_STATIC_CALL
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_MAGIC_CONST)
                                        (SCALAR))
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))
                                (AST_CLASS_CONST
                                    (SCALAR))))
                        (AST_RETURN
                            (AST_CONST)))))
            (AST_RETURN
                (AST_BINARY_OP
                    (AST_CAST
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (SCALAR))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_MAGIC_CONST)
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL)))||||||||