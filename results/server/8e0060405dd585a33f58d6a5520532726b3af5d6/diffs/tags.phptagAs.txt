	public function tagAs($objid, $tag) {
		if(is_string($tag) && !is_numeric($tag)) {
			$tag = trim($tag);
			if(!$this->hasTag($tag)) {
				$this->add($tag, true);
			}
			$tagId =  $this->array_searchi($tag, $this->tags);
		} else {
			$tagId = $tag;
		}
		try {
			\OCP\DB::insertIfNotExist(self::RELATION_TABLE,
				array(
					'objid' => $objid,
					'categoryid' => $tagId,
					'type' => $this->type,
				));
		} catch(\Exception $e) {
			\OCP\Util::writeLog('core', __METHOD__.', exception: '.$e->getMessage(),
				\OCP\Util::ERROR);
			return false;
		}
		return true;
	}

	/**
	* Delete single tag/object relation from the db
	*
	* @param int $objid The id of the object
	* @param int|string $tag The id or name of the tag
	* @return boolean
	*/
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_VAR)))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR)
                                    (AST_CONST))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR)
                            (AST_PROP
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_TRY
        (
            (AST_STATIC_CALL
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))))))
        (AST_CATCH_LIST
            (AST_CATCH
                (AST_NAME_LIST)
                (AST_VAR)
                (
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_MAGIC_CONST)
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_CLASS_CONST
                                (SCALAR))))
                    (AST_RETURN
                        (AST_CONST)))))
        (NULL))
    (AST_RETURN
        (AST_CONST)))||||||||