					public function before( $title = '' ) {

						// We are currently in the plugin installation loop, so set to true.
						$this->in_loop = true;

						printf( '<h4>' . wp_kses_post( $this->upgrader->strings['skin_before_update_header'] ). ' <img alt="" src="' . esc_url( admin_url( 'images/wpspin_light.gif' ) ) . '" class="hidden waiting-' . esc_attr( $this->upgrader->update_current ) . '" style="vertical-align:middle;" /></h4>', esc_html( $this->plugin_names[ $this->i ] ), absint( $this->upgrader->update_current ), absint( $this->upgrader->update_count ) );
						echo '<script type="text/javascript">jQuery(\'.waiting-', esc_js( $this->upgrader->update_current ), '\').show();</script>';
						echo '<div class="update-messages hide-if-js" id="progress-', esc_attr( $this->upgrader->update_current ), '"><p>';

						// Flush header output buffer.
						$this->before_flush_output();

					}

					/**
					 * Outputs the footer strings and necessary JS after each plugin installation.
					 *
					 * Checks for any errors and outputs them if they exist, else output
					 * success strings.
					 *
					 * @since 2.2.0
					 */
||||||||					public function before( $title = '' ) {

						// We are currently in the plugin installation loop, so set to true.
						$this->in_loop = true;

						printf(
							'<h4>' . wp_kses_post( $this->upgrader->strings['skin_before_update_header'] ). ' <img alt="" src="%4$s" class="hidden waiting-%5$s" style="vertical-align:middle;" /></h4>',
							esc_html( $this->plugin_names[ $this->i ] ),
							absint( $this->upgrader->update_current ),
							absint( $this->upgrader->update_count ),
							esc_url( admin_url( 'images/wpspin_light.gif' ) ),
							esc_attr( $this->upgrader->update_current )
						);
						echo '<script type="text/javascript">jQuery(\'.waiting-', esc_js( $this->upgrader->update_current ), '\').show();</script>',
							'<div class="update-messages hide-if-js" id="progress-', esc_attr( $this->upgrader->update_current ), '"><p>';

						// Flush header output buffer.
						$this->before_flush_output();

					}

					/**
					 * Outputs the footer strings and necessary JS after each plugin installation.
					 *
					 * Checks for any errors and outputs them if they exist, else output
					 * success strings.
					 *
					 * @since 2.2.0
					 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_PROP
                                                    (AST_PROP
                                                        (AST_VAR)))
                                                (SCALAR)))))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR))))))
                        (SCALAR))
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR))))))
                (SCALAR))
            (AST_CALL
                (
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_CONST))
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_DIM
                                (AST_PROP
                                    (AST_PROP
                                        (AST_VAR)))
                                (SCALAR)))))
                (SCALAR))
            (AST_CALL
                (
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))
            (AST_CALL
                (
                    (AST_CALL
                        (
                            (SCALAR)))))
            (AST_CALL
                (
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (AST_CALL
            (
                (AST_PROP
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ECHO
        (SCALAR))
    (AST_METHOD_CALL
        (AST_VAR)))