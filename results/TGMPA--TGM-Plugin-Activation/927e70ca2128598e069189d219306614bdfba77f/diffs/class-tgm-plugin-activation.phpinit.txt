		public function init() {
			/**
			 * By default TGMPA only loads on the WP back-end and not in an Ajax call. Using this filter
			 * you can overrule that behaviour.
			 *
			 * @since 2.5.0
			 *
			 * @param bool $load Whether or not TGMPA should load.
			 *                   Defaults to the return of `is_admin() && ! defined( 'DOING_AJAX' )`.
			 */
			if ( true !== apply_filters( 'tgmpa_load', ( is_admin() && ! defined( 'DOING_AJAX' ) ) ) ) {
				return;
			}

			// Load class strings.
			$this->strings = array(
				'page_title'                      => __( 'Install Required Plugins', 'tgmpa' ),
				'menu_title'                      => __( 'Install Plugins', 'tgmpa' ),
				'installing'                      => __( 'Installing Plugin: %s', 'tgmpa' ),
				'oops'                            => __( 'Something went wrong with the plugin API.', 'tgmpa' ),
				'notice_can_install_required'     => _n_noop(
					'This theme requires the following plugin: %1$s.',
					'This theme requires the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_can_install_recommended'  => _n_noop(
					'This theme recommends the following plugin: %1$s.',
					'This theme recommends the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_cannot_install'           => _n_noop(
					'Sorry, but you do not have the correct permissions to install the %1$s plugin.',
					'Sorry, but you do not have the correct permissions to install the %1$s plugins.',
					'tgmpa'
				),
				'notice_ask_to_update'            => _n_noop(
					'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.',
					'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.',
					'tgmpa'
				),
				'notice_ask_to_update_maybe'      => _n_noop(
					'There is an update available for: %1$s.',
					'There are updates available for the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_cannot_update'            => _n_noop(
					'Sorry, but you do not have the correct permissions to update the %1$s plugin.',
					'Sorry, but you do not have the correct permissions to update the %1$s plugins.',
					'tgmpa'
				),
				'notice_can_activate_required'    => _n_noop(
					'The following required plugin is currently inactive: %1$s.',
					'The following required plugins are currently inactive: %1$s.',
					'tgmpa'
				),
				'notice_can_activate_recommended' => _n_noop(
					'The following recommended plugin is currently inactive: %1$s.',
					'The following recommended plugins are currently inactive: %1$s.',
					'tgmpa'
				),
				'notice_cannot_activate'          => _n_noop(
					'Sorry, but you do not have the correct permissions to activate the %1$s plugin.',
					'Sorry, but you do not have the correct permissions to activate the %1$s plugins.',
					'tgmpa'
				),
				'install_link'                    => _n_noop(
					'Begin installing plugin',
					'Begin installing plugins',
					'tgmpa'
				),
				'update_link'                     => _n_noop(
					'Begin updating plugin',
					'Begin updating plugins',
					'tgmpa'
				),
				'activate_link'                   => _n_noop(
					'Begin activating plugin',
					'Begin activating plugins',
					'tgmpa'
				),
				'return'                          => __( 'Return to Required Plugins Installer', 'tgmpa' ),
				'dashboard'                       => __( 'Return to the dashboard', 'tgmpa' ),
				'plugin_activated'                => __( 'Plugin activated successfully.', 'tgmpa' ),
				'activated_successfully'          => __( 'The following plugin was activated successfully:', 'tgmpa' ),
				'plugin_already_active'           => __( 'No action taken. Plugin %1$s was already active.', 'tgmpa' ),
				'plugin_needs_higher_version'     => __( 'Plugin not activated. A higher version of %s is needed for this theme. Please update the plugin.', 'tgmpa' ),
				'complete'                        => __( 'All plugins installed and activated successfully. %1$s', 'tgmpa' ),
				'dismiss'                         => __( 'Dismiss this notice', 'tgmpa' ),
				'contact_admin'                   => __( 'Please contact the administrator of this site for help.', 'tgmpa' ),
			);

			do_action( 'tgmpa_register' );

			/* After this point, the plugins should be registered and the configuration set. */

			// Proceed only if we have plugins to handle.
			if ( empty( $this->plugins ) || ! is_array( $this->plugins ) ) {
				return;
			}

			// Set up the menu and notices if we still have outstanding actions.
			if ( true !== $this->is_tgmpa_complete() ) {
				// Sort the plugins.
				array_multisort( $this->sort_order, SORT_ASC, $this->plugins );

				add_action( 'admin_menu', array( $this, 'admin_menu' ) );
				add_action( 'admin_head', array( $this, 'dismiss' ) );

				// Prevent the normal links from showing underneath a single install/update page.
				add_filter( 'install_plugin_complete_actions', array( $this, 'actions' ) );
				add_filter( 'update_plugin_complete_actions', array( $this, 'actions' ) );

				if ( $this->has_notices ) {
					add_action( 'admin_notices', array( $this, 'notices' ) );
					add_action( 'admin_init', array( $this, 'admin_init' ), 1 );
					add_action( 'admin_enqueue_scripts', array( $this, 'thickbox' ) );
				}
			}

			// If needed, filter plugin action links.
			add_action( 'load-plugins.php', array( $this, 'add_plugin_action_link_filters' ), 1 );

			// Make sure things get reset on switch theme.
			add_action( 'switch_theme', array( $this, 'flush_plugins_cache' ) );

			if ( $this->has_notices ) {
				add_action( 'switch_theme', array( $this, 'update_dismiss' ) );
			}

			// Setup the force activation hook.
			if ( true === $this->has_forced_activation ) {
				add_action( 'admin_init', array( $this, 'force_activation' ) );
			}

			// Setup the force deactivation hook.
			if ( true === $this->has_forced_deactivation ) {
				add_action( 'switch_theme', array( $this, 'force_deactivation' ) );
			}
		}

		/**
		 * Hook in plugin action link filters for the WP native plugins page.
		 *
		 * - Prevent activation of plugins which don't meet the minimum version requirements.
		 * - Prevent deactivation of force-activated plugins.
		 * - Add update notice if update available.
		 *
		 * @since 2.5.0
		 */
||||||||		public function init() {
			/**
			 * By default TGMPA only loads on the WP back-end and not in an Ajax call. Using this filter
			 * you can overrule that behaviour.
			 *
			 * @since 2.5.0
			 *
			 * @param bool $load Whether or not TGMPA should load.
			 *                   Defaults to the return of `is_admin() && ! defined( 'DOING_AJAX' )`.
			 */
			if ( true !== apply_filters( 'tgmpa_load', ( is_admin() && ! defined( 'DOING_AJAX' ) ) ) ) {
				return;
			}

			// Load class strings.
			$this->strings = array(
				'page_title'                      => __( 'Install Required Plugins', 'tgmpa' ),
				'menu_title'                      => __( 'Install Plugins', 'tgmpa' ),
				'installing'                      => __( 'Installing Plugin: %s', 'tgmpa' ),
				'oops'                            => __( 'Something went wrong with the plugin API.', 'tgmpa' ),
				'notice_can_install_required'     => _n_noop(
					'This theme requires the following plugin: %1$s.',
					'This theme requires the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_can_install_recommended'  => _n_noop(
					'This theme recommends the following plugin: %1$s.',
					'This theme recommends the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_ask_to_update'            => _n_noop(
					'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.',
					'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.',
					'tgmpa'
				),
				'notice_ask_to_update_maybe'      => _n_noop(
					'There is an update available for: %1$s.',
					'There are updates available for the following plugins: %1$s.',
					'tgmpa'
				),
				'notice_can_activate_required'    => _n_noop(
					'The following required plugin is currently inactive: %1$s.',
					'The following required plugins are currently inactive: %1$s.',
					'tgmpa'
				),
				'notice_can_activate_recommended' => _n_noop(
					'The following recommended plugin is currently inactive: %1$s.',
					'The following recommended plugins are currently inactive: %1$s.',
					'tgmpa'
				),
				'install_link'                    => _n_noop(
					'Begin installing plugin',
					'Begin installing plugins',
					'tgmpa'
				),
				'update_link'                     => _n_noop(
					'Begin updating plugin',
					'Begin updating plugins',
					'tgmpa'
				),
				'activate_link'                   => _n_noop(
					'Begin activating plugin',
					'Begin activating plugins',
					'tgmpa'
				),
				'return'                          => __( 'Return to Required Plugins Installer', 'tgmpa' ),
				'dashboard'                       => __( 'Return to the dashboard', 'tgmpa' ),
				'plugin_activated'                => __( 'Plugin activated successfully.', 'tgmpa' ),
				'activated_successfully'          => __( 'The following plugin was activated successfully:', 'tgmpa' ),
				'plugin_already_active'           => __( 'No action taken. Plugin %1$s was already active.', 'tgmpa' ),
				'plugin_needs_higher_version'     => __( 'Plugin not activated. A higher version of %s is needed for this theme. Please update the plugin.', 'tgmpa' ),
				'complete'                        => __( 'All plugins installed and activated successfully. %1$s', 'tgmpa' ),
				'dismiss'                         => __( 'Dismiss this notice', 'tgmpa' ),
				'notice_cannot_install_activate'  => __( 'There are one or more required or recommended plugins to install, update or activate.', 'tgmpa' ),
				'contact_admin'                   => __( 'Please contact the administrator of this site for help.', 'tgmpa' ),
			);

			do_action( 'tgmpa_register' );

			/* After this point, the plugins should be registered and the configuration set. */

			// Proceed only if we have plugins to handle.
			if ( empty( $this->plugins ) || ! is_array( $this->plugins ) ) {
				return;
			}

			// Set up the menu and notices if we still have outstanding actions.
			if ( true !== $this->is_tgmpa_complete() ) {
				// Sort the plugins.
				array_multisort( $this->sort_order, SORT_ASC, $this->plugins );

				add_action( 'admin_menu', array( $this, 'admin_menu' ) );
				add_action( 'admin_head', array( $this, 'dismiss' ) );

				// Prevent the normal links from showing underneath a single install/update page.
				add_filter( 'install_plugin_complete_actions', array( $this, 'actions' ) );
				add_filter( 'update_plugin_complete_actions', array( $this, 'actions' ) );

				if ( $this->has_notices ) {
					add_action( 'admin_notices', array( $this, 'notices' ) );
					add_action( 'admin_init', array( $this, 'admin_init' ), 1 );
					add_action( 'admin_enqueue_scripts', array( $this, 'thickbox' ) );
				}
			}

			// If needed, filter plugin action links.
			add_action( 'load-plugins.php', array( $this, 'add_plugin_action_link_filters' ), 1 );

			// Make sure things get reset on switch theme.
			add_action( 'switch_theme', array( $this, 'flush_plugins_cache' ) );

			if ( $this->has_notices ) {
				add_action( 'switch_theme', array( $this, 'update_dismiss' ) );
			}

			// Setup the force activation hook.
			if ( true === $this->has_forced_activation ) {
				add_action( 'admin_init', array( $this, 'force_activation' ) );
			}

			// Setup the force deactivation hook.
			if ( true === $this->has_forced_deactivation ) {
				add_action( 'switch_theme', array( $this, 'force_deactivation' ) );
			}
		}

		/**
		 * Hook in plugin action link filters for the WP native plugins page.
		 *
		 * - Prevent activation of plugins which don't meet the minimum version requirements.
		 * - Prevent deactivation of force-activated plugins.
		 * - Add update notice if update available.
		 *
		 * @since 2.5.0
		 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR))))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST)
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_CALL)
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (SCALAR))))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)))
                (SCALAR))))
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_EMPTY
                    (AST_PROP
                        (AST_VAR)))
                (AST_UNARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST)
                        (AST_PROP
                            (AST_VAR))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))
                                    (SCALAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (SCALAR)
                                            (NULL)))))))))))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))
            (SCALAR)))
    (AST_CALL
        (
            (SCALAR)
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (AST_VAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL)))))))))