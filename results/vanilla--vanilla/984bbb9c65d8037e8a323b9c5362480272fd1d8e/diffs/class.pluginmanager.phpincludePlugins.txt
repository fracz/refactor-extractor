    public function includePlugins($EnabledPlugins = null) {

        // Include all of the plugins.
        if (is_null($EnabledPlugins)) {
            $EnabledPlugins = $this->enabledPlugins();
        }

        $PluginManager = &$this;
        // Get a list of files to include.
        foreach ($EnabledPlugins as $PluginName => $Trash) {
            $PluginInfo = $this->getPluginInfo($PluginName);

            $ClassName = val('ClassName', $PluginInfo, false);
            $ClassFile = val('RealFile', $PluginInfo, false);

            if ($ClassName !== false && !class_exists($ClassName, false)) {
                if (file_exists($ClassFile)) {
                    include_once($ClassFile);
                }
            }

        }
    }

    /**
     *
     *
     * @param $SearchPath
     * @param $PluginInfo
     * @param $ClassInfo
     * @param null $PathListing
     * @return bool|string
     */
||||||||    public function includePlugins($EnabledPlugins = null) {
        deprecated('Gdn_PluginManager->includePlugins()');
        // Include all of the plugins.
        if (is_null($EnabledPlugins)) {
            $EnabledPlugins = $this->enabledPlugins();
        }

        $PluginManager = &$this;
        // Get a list of files to include.
        foreach ($EnabledPlugins as $PluginName => $Trash) {
            $PluginInfo = $this->getPluginInfo($PluginName);

            $ClassName = val('ClassName', $PluginInfo, false);
            $ClassFile = val('RealFile', $PluginInfo, false);

            if ($ClassName !== false && !class_exists($ClassName, false)) {
                if (file_exists($ClassFile)) {
                    include_once($ClassFile);
                }
            }

        }
    }

    /**
     *
     *
     * @param $SearchPath
     * @param $PluginInfo
     * @param $ClassInfo
     * @param null $PathListing
     * @return bool|string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_INCLUDE_OR_EVAL
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_CALL
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR))))))
    (AST_ASSIGN_REF
        (AST_VAR)
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (AST_CONST))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CONST))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (
                                    (AST_INCLUDE_OR_EVAL
                                        (AST_VAR)))))))))))