||||||||   public function WakeUp() {
      $ForeignIdentityUrl = C('Garden.Authenticator.AuthenticateURL');
      if (!$ForeignIdentityUrl) return FALSE;

      // Allow the entry/handshake method to function
      Gdn::Authenticator()->AllowHandshake();

      $HaveHandshake = Gdn_CookieIdentity::CheckCookie($this->_CookieName);
      if ($HaveHandshake) return;

      $CurrentStep = $this->CurrentStep();

//      if (substr(Gdn::Request()->Path(),0,6) != 'entry/') {

         // Shortcircuit to prevent pointless work when the access token has already been handled and we already have a session
         if ($CurrentStep == Gdn_Authenticator::MODE_REPEAT)
            return;

         // Don't try to wakeup when we've already tried once this session
         if ($CurrentStep == Gdn_Authenticator::MODE_NOAUTH)
            return;

//      }

      $this->Authenticate();
   }

}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CONST)))))
    (AST_METHOD_CALL
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)))