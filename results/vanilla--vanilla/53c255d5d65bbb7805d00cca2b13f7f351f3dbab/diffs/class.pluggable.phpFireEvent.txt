   public function FireEvent($EventName) {
      // Look to the PluginManager to see if there are related event handlers and call them
      Gdn::PluginManager()->CallEventHandlers($this, $this->ClassName, $EventName);
   }


   /**
    * Used to extend any method
    *
    * There are two types of extended method calls:
    *  1. Declared: The method was declared with the lowercase "x" prefix and called without it.
    *     ie. Declaration: public function xMethodName() {}
    *         Call: $Object->MethodName();
    *
    *  2. Called: The method was declared without the lowercase "x" prefix and called with it.
    *     ie. Declaration: public function MethodName() {}
    *         Call: $Object->xMethodName();
    *
    * Note: Plugins will always refer to the method name without the "x"
    * regardless of the type. So, $ReferenceMethodName is declared below without
    * the "x".
    *
    *
    * @param string $MethodName
    * @param array $Arguments
    * @return mixed
    *
    */
||||||||   public function FireEvent($EventName) {
      // Look to the PluginManager to see if there are related event handlers and call them
      return Gdn::PluginManager()->CallEventHandlers($this, $this->ClassName, $EventName);
   }


   /**
    * Used to extend any method
    *
    * There are two types of extended method calls:
    *  1. Declared: The method was declared with the lowercase "x" prefix and called without it.
    *     ie. Declaration: public function xMethodName() {}
    *         Call: $Object->MethodName();
    *
    *  2. Called: The method was declared without the lowercase "x" prefix and called with it.
    *     ie. Declaration: public function MethodName() {}
    *         Call: $Object->xMethodName();
    *
    * Note: Plugins will always refer to the method name without the "x"
    * regardless of the type. So, $ReferenceMethodName is declared below without
    * the "x".
    *
    *
    * @param string $MethodName
    * @param array $Arguments
    * @return mixed
    *
    */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_STATIC_CALL)
        (
            (AST_VAR)
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_METHOD_CALL
            (AST_STATIC_CALL)
            (
                (AST_VAR)
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))))