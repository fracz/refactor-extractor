||||||||    public function emailStyles() {
	$this->permission('Garden.Settings.Manage');
	$this->addSideMenu('dashboard/settings/emailstyles');
	$this->addJsFile('email.js');
	// Get the current logo.
	$image = c('Garden.Email.Styles.Image');
	if ($image) {
	    $image = ltrim($image, '/');
	    $this->setData('EmailImage', Gdn_UploadImage::url($image));
	}
	$this->Form = new Gdn_Form();
	$validation = new Gdn_Validation();
	$configurationModel = new Gdn_ConfigurationModel($validation);
	$configurationModel->setField(array(
	    'Garden.Email.Styles.BackgroundColor',
	    'Garden.Email.Styles.ButtonBackgroundColor',
	    'Garden.Email.Styles.LinkColor'
	));
	// Set the model on the form.
	$this->Form->setModel($configurationModel);
	// If seeing the form for the first time...
	if ($this->Form->authenticatedPostBack() === false) {
	    // Apply the config settings to the form.
	    $this->Form->setData($configurationModel->Data);
	} else {
	    if ($this->Form->save() !== false) {
		$this->informMessage(t("Your settings have been saved."));
	    }
	}
	$this->render();
    }

    /**
     * Remove the email image from config & delete it.
     *
     * @param $tk Security token.
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR))))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_CONST))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_CALL
                                        (
                                            (SCALAR)))))))))))
    (AST_METHOD_CALL
        (AST_VAR)))