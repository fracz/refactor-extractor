   public function GetIdentity($ForceHandshake = FALSE) {
      // Check to see if the identity has us logged in.
      if ($ForceHandshake === FALSE) {
         $Id = $this->_Identity->GetIdentity();
         if ($Id > 0)
            return $Id;
      }

      // Get the handshake data to authenticate.
      $Data = $this->GetHandshakeData();
      // var_dump($Data);
      // die();

      // Fire an event in case people want to do something based on the data returned from the external system.
      $this->EventArguments['HandshakeData'] = $Data;
      $this->FireEvent('AfterGetHandshakeData');

      if (!array_key_exists('UniqueID', $Data)) {
         // There was some problem getting the userID.
         // The user was probably signed out on the handshake system.
         $this->_Identity->SetIdentity(self::SignedOut, FALSE);
         return 0;
      }

      $UserModel = Gdn::UserModel();
      $UserID = $UserModel->Synchronize($Data['UniqueID'], $Data);
      if ($UserID) {
         $this->_Identity->SetIdentity($UserID, FALSE);
         // Wipe the QuickIn cookie
         setcookie('QuickIn', ' ', time() - 3600, C('Garden.Cookie.Path', '/'), C('Garden.Cookie.Domain', ''));
         unset($_COOKIE['QuickIn']);
      } else {
         $this->_Identity->SetIdentity(self::HandshakeError, FALSE);
      }

      return $UserID;
   }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (SCALAR))
                        (
                            (AST_RETURN
                                (AST_VAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CONST)))
                (AST_RETURN
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_BINARY_OP
                            (AST_CALL)
                            (SCALAR))
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)))))
                (AST_UNSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_CLASS_CONST
                            (SCALAR))
                        (AST_CONST))))))
    (AST_RETURN
        (AST_VAR)))||||||||