    public function isNotModified(Request $request)
    {
        $lastModified = $request->headers->get('If-Modified-Since');
        $notModified = false;
        if ($etags = $request->getEtags()) {
            $notModified = (in_array($this->getEtag(), $etags) || in_array('*', $etags)) && (!$lastModified || $this->headers->get('Last-Modified') == $lastModified);
        } elseif ($lastModified) {
            $notModified = $lastModified == $this->headers->get('Last-Modified');
        }

        if ($notModified) {
            $this->setNotModified();
        }

        return $notModified;
    }

    // http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
    /**
     * @api
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_BINARY_OP
                            (AST_UNARY_OP
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_METHOD_CALL
                                    (AST_PROP
                                        (AST_VAR))
                                    (
                                        (SCALAR)))
                                (AST_VAR)))))))
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))||||||||