||||||||  function paintException($exception) {
    parent::paintException($exception);
    $message = 'Unexpected exception of type ['. get_class($exception) .'] with message ['. $exception->getMessage() .'] in ['. $exception->getFile() .' line '. $exception->getLine() .']';
    print "Exception ". $this->getExceptionCount() ."!\n$message\n";
    $breadcrumb = $this->getTestList();
    array_shift($breadcrumb);
    print "\tin ". implode("\n\tin ", array_reverse($breadcrumb));
    print "\n";
  }

  /**
   *    Prints the message for skipping tests.
   *    @param string $message    Text of skip condition.
   *    @access public
   */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (SCALAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (SCALAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (SCALAR))
                (AST_METHOD_CALL
                    (AST_VAR)))
            (SCALAR)))
    (AST_PRINT
        (AST_BINARY_OP
            (AST_BINARY_OP
                (SCALAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_ENCAPS_LIST
                (SCALAR)
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_PRINT
        (AST_BINARY_OP
            (SCALAR)
            (AST_CALL
                (
                    (SCALAR)
                    (AST_CALL
                        (
                            (AST_VAR)))))))
    (AST_PRINT
        (SCALAR)))