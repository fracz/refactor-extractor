  public function buildContent(array $entities = array(), $view_mode = 'full', $langcode = NULL) {
    // Allow modules to change the view mode.
    $context = array('langcode' => $langcode);

    $view_modes = array();
    $displays = array();

    foreach ($entities as $entity) {
      // Remove previously built content, if exists.
      $entity->content = array();

      drupal_alter('entity_view_mode', $view_mode, $entity, $context);
      $entity->content['#view_mode'] = $view_mode;
      $view_modes[$view_mode][$entity->id()] = $entity;

      $bundle = $entity->bundle();

      // Load the corresponding display settings if not stored yet.
      if (!isset($displays[$view_mode][$bundle])) {
        // Get the display object to use for rendering the entity..
        $display = entity_get_render_display($entity, $view_mode);

        // Let modules alter the display.
        // Note: if config entities get a static cache at some point, the
        // objects should be cloned before running drupal_alter().
        $display_context = array(
          'entity_type' => $this->entityType,
          'bundle' => $bundle,
          'view_mode' => $view_mode,
        );
        drupal_alter('entity_display', $display, $display_context);

        $displays[$view_mode][$bundle] = $display;
      }

      // Assigning weights to 'extra fields' is done in a pre_render callback.
      $entity->content['#pre_render'] = array('_entity_view_pre_render');
      $entity->content['#entity_display'] = $displays[$view_mode][$bundle];
    }

    // Prepare and build field content, grouped by view mode.
    foreach ($view_modes as $view_mode => $view_mode_entities) {
      $call_prepare = array();
      // To ensure hooks are only run once per entity, check for an
      // entity_view_prepared flag and only process relevant entities.
      foreach ($view_mode_entities as $entity) {
        if (empty($entity->entity_view_prepared) || $entity->entity_view_prepared != $view_mode) {
          // Add this entity to the items to be prepared.
          $call_prepare[$entity->id()] = $entity;

          // Mark this item as prepared for this view mode.
          $entity->entity_view_prepared = $view_mode;
        }
      }

      if (!empty($call_prepare)) {
        field_attach_prepare_view($this->entityType, $call_prepare, $displays[$view_mode], $langcode);
        module_invoke_all('entity_prepare_view', $call_prepare, $this->entityType);
      }

      foreach ($view_mode_entities as $entity) {
        $entity->content += field_attach_view($this->entityType, $entity, $displays[$view_mode][$entity->bundle()], $langcode);
      }
    }
  }

  /**
   * Provides entity-specific defaults to the build process.
   *
   * @param Drupal\Core\Entity\EntityInterface $entity
   *   The entity for which the defaults should be provided.
   * @param string $view_mode
   *   The view mode that should be used.
   * @param string $langcode
   *   (optional) For which language the entity should be prepared, defaults to
   *   the current content language.
   *
   * @return array
   */
||||||||  public function buildContent(array $entities = array(), $view_mode = 'full', $langcode = NULL) {
    // Allow modules to change the view mode.
    $context = array('langcode' => $langcode);

    $view_modes = array();
    $displays = array();

    foreach ($entities as $entity) {
      // Remove previously built content, if exists.
      $entity->content = array();

      drupal_alter('entity_view_mode', $view_mode, $entity, $context);
      $entity->content['#view_mode'] = $view_mode;
      $view_modes[$view_mode][$entity->id()] = $entity;

      $bundle = $entity->bundle();

      // Load the corresponding display settings if not stored yet.
      if (!isset($displays[$view_mode][$bundle])) {
        // Get the display object to use for rendering the entity..
        $display = entity_get_render_display($entity, $view_mode);

        // Let modules alter the display.
        // Note: if config entities get a static cache at some point, the
        // objects should be cloned before running drupal_alter().
        $display_context = array(
          'entity_type' => $this->entityType,
          'bundle' => $bundle,
          'view_mode' => $view_mode,
        );
        drupal_alter('entity_display', $display, $display_context);

        $displays[$view_mode][$bundle] = $display;
      }

      // Assigning weights to 'extra fields' is done in a pre_render callback.
      $entity->content['#pre_render'] = array('_entity_view_pre_render');
      $entity->content['#entity_display'] = $displays[$view_mode][$bundle];
    }

    // Prepare and build field content, grouped by view mode.
    foreach ($view_modes as $view_mode => $view_mode_entities) {
      field_attach_prepare_view($this->entityType, $view_mode_entities, $displays[$view_mode], $langcode);
      module_invoke_all('entity_prepare_view', $view_mode_entities, $this->entityType);

      foreach ($view_mode_entities as $entity) {
        $entity->content += field_attach_view($this->entityType, $entity, $displays[$view_mode][$entity->bundle()], $langcode);
      }
    }
  }

  /**
   * Provides entity-specific defaults to the build process.
   *
   * @param Drupal\Core\Entity\EntityInterface $entity
   *   The entity for which the defaults should be provided.
   * @param string $view_mode
   *   The view mode that should be used.
   * @param string $langcode
   *   (optional) For which language the entity should be prepared, defaults to
   *   the current content language.
   *
   * @return array
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_ARRAY))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_EMPTY
                                    (AST_PROP
                                        (AST_VAR)))
                                (AST_BINARY_OP
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR)))
                                    (AST_VAR))
                                (AST_ASSIGN
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_VAR)))
                    (
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_PROP
                                    (AST_VAR)))))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_PROP
                    (AST_VAR))
                (AST_ARRAY))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_VAR)
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_VAR))
            (AST_ASSIGN
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_VAR))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_PROP
                                        (AST_VAR))
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (SCALAR))))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (AST_VAR))
                            (AST_VAR)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (NULL))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_CALL
                (
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_VAR)))
            (AST_CALL
                (
                    (SCALAR)
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (NULL)
                (
                    (AST_ASSIGN_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)
                                (AST_DIM
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_VAR)))))))))