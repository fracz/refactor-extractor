  public function language() {
    // Keep a local cache of the language object and clear it if the langcode
    // gets changed, see EntityNG::onChange().
    if (!isset($this->language)) {
      // Get the language code if the property exists.
      if ($this->getPropertyDefinition('langcode')) {
        $this->language = $this->get('langcode')->language;
      }
      if (empty($this->language)) {
        // Make sure we return a proper language object.
        $this->language = new Language(array('id' => Language::LANGCODE_NOT_SPECIFIED));
      }
    }
    return $this->language;
  }

  /**
   * {@inheritdoc}
   */
||||||||  public function language() {
    if ($this->activeLangcode != Language::LANGCODE_DEFAULT) {
      if (!isset($this->languages[$this->activeLangcode])) {
        $this->languages += language_list(Language::STATE_ALL);
      }
      return $this->languages[$this->activeLangcode];
    }
    else {
      return $this->language ?: $this->getDefaultLanguage();
    }
  }

  /**
   * Returns the entity original language.
   *
   * @return \Drupal\Core\Language\Language
   *   A language object.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_NEW
                                    (
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_CLASS_CONST
                                                    (SCALAR))
                                                (SCALAR))))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_ISSET
                                (AST_DIM
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR)))))
                        (
                            (AST_ASSIGN_OP
                                (AST_PROP
                                    (AST_VAR))
                                (AST_CALL
                                    (
                                        (AST_CLASS_CONST
                                            (SCALAR))))))))
                (AST_RETURN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_PROP
                            (AST_VAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_PROP
                            (AST_VAR))
                        (NULL)
                        (AST_METHOD_CALL
                            (AST_VAR))))))))