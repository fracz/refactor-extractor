  protected function postProcessExtension(array &$cache, ActiveTheme $theme) {
    $grouped_functions = $this->getPrefixGroupedUserFunctions();

    // Gather prefixes. This will be used to limit the found functions to the
    // expected naming conventions.
    $prefixes = array_keys((array) $this->moduleHandler->getModuleList());
    foreach (array_reverse($theme->getBaseThemes()) as $base) {
      $prefixes[] = $base->getName();
    }
    if ($theme->getEngine()) {
      $prefixes[] = $theme->getEngine() . '_engine';
    }
    $prefixes[] = $theme->getName();

    // Collect all variable preprocess functions in the correct order.
    $suggestion_level = [];
    $matches = [];
    // Look for functions named according to the pattern and add them if they
    // have matching hooks in the registry.
    foreach ($prefixes as $prefix) {
      // Grep only the functions which are within the prefix group.
      list($first_prefix,) = explode('_', $prefix, 2);
      if (!isset($grouped_functions[$first_prefix])) {
        continue;
      }
      // Add the function and the name of the associated theme hook to the list
      // of preprocess functions grouped by suggestion specificity if a matching
      // base hook is found.
      foreach ($grouped_functions[$first_prefix] as $candidate) {
        if (preg_match("/^{$prefix}_preprocess_(((?:[^_]++|_(?!_))+)__.*)/", $candidate, $matches)) {
          if (isset($cache[$matches[2]])) {
            $level = substr_count($matches[1], '__');
            $suggestion_level[$level][$candidate] = $matches[1];
          }
        }
      }
    }

    // Add missing variable preprocessors. This is needed for modules that do
    // not explicitly register the hook. For example, when a theme contains a
    // variable preprocess function but it does not implement a template, it
    // will go missing. This will add the expected function. It also allows
    // modules or themes to have a variable process function based on a pattern
    // even if the hook does not exist.
    ksort($suggestion_level);
    foreach ($suggestion_level as $level => $item) {
      foreach ($item as $preprocessor => $hook) {
        if (isset($cache[$hook]['preprocess functions']) && !in_array($hook, $cache[$hook]['preprocess functions'])) {
          // Add missing preprocessor to existing hook.
          $cache[$hook]['preprocess functions'][] = $preprocessor;
        }
        elseif (!isset($cache[$hook]) && strpos($hook, '__')) {
          // Process non-existing hook and register it.
          // Look for a previously defined hook that is either a less specific
          // suggestion hook or the base hook.
          $this->completeSuggestion($hook, $cache);
          $cache[$hook]['preprocess functions'][] = $preprocessor;
        }
      }
    }
    // Inherit all base hook variable preprocess functions into suggestion
    // hooks. This ensures that derivative hooks have a complete set of variable
    // preprocess functions.
    foreach ($cache as $hook => $info) {
      // The 'base hook' is only applied to derivative hooks already registered
      // from a pattern. This is typically set from
      // drupal_find_theme_functions() and drupal_find_theme_templates().
      if (isset($info['incomplete preprocess functions'])) {
        $this->completeSuggestion($hook, $cache);
        unset($cache[$hook]['incomplete preprocess functions']);
      }

      // Optimize the registry.
      if (isset($cache[$hook]['preprocess functions']) && empty($cache[$hook]['preprocess functions'])) {
        unset($cache[$hook]['preprocess functions']);
      }
      // Ensure uniqueness.
      if (isset($cache[$hook]['preprocess functions'])) {
        $cache[$hook]['preprocess functions'] = array_unique($cache[$hook]['preprocess functions']);
      }
    }
  }

  /**
   * Invalidates theme registry caches.
   *
   * To be called when the list of enabled extensions is changed.
   */
||||||||  protected function postProcessExtension(array &$cache, ActiveTheme $theme) {
    // Gather prefixes. This will be used to limit the found functions to the
    // expected naming conventions.
    $prefixes = array_keys((array) $this->moduleHandler->getModuleList());
    foreach (array_reverse($theme->getBaseThemes()) as $base) {
      $prefixes[] = $base->getName();
    }
    if ($theme->getEngine()) {
      $prefixes[] = $theme->getEngine() . '_engine';
    }
    $prefixes[] = $theme->getName();

    $grouped_functions = $this->getPrefixGroupedUserFunctions($prefixes);

    // Collect all variable preprocess functions in the correct order.
    $suggestion_level = [];
    $matches = [];
    // Look for functions named according to the pattern and add them if they
    // have matching hooks in the registry.
    foreach ($prefixes as $prefix) {
      // Grep only the functions which are within the prefix group.
      list($first_prefix,) = explode('_', $prefix, 2);
      if (!isset($grouped_functions[$first_prefix])) {
        continue;
      }
      // Add the function and the name of the associated theme hook to the list
      // of preprocess functions grouped by suggestion specificity if a matching
      // base hook is found.
      foreach ($grouped_functions[$first_prefix] as $candidate) {
        if (preg_match("/^{$prefix}_preprocess_(((?:[^_]++|_(?!_))+)__.*)/", $candidate, $matches)) {
          if (isset($cache[$matches[2]])) {
            $level = substr_count($matches[1], '__');
            $suggestion_level[$level][$candidate] = $matches[1];
          }
        }
      }
    }

    // Add missing variable preprocessors. This is needed for modules that do
    // not explicitly register the hook. For example, when a theme contains a
    // variable preprocess function but it does not implement a template, it
    // will go missing. This will add the expected function. It also allows
    // modules or themes to have a variable process function based on a pattern
    // even if the hook does not exist.
    ksort($suggestion_level);
    foreach ($suggestion_level as $level => $item) {
      foreach ($item as $preprocessor => $hook) {
        if (isset($cache[$hook]['preprocess functions']) && !in_array($hook, $cache[$hook]['preprocess functions'])) {
          // Add missing preprocessor to existing hook.
          $cache[$hook]['preprocess functions'][] = $preprocessor;
        }
        elseif (!isset($cache[$hook]) && strpos($hook, '__')) {
          // Process non-existing hook and register it.
          // Look for a previously defined hook that is either a less specific
          // suggestion hook or the base hook.
          $this->completeSuggestion($hook, $cache);
          $cache[$hook]['preprocess functions'][] = $preprocessor;
        }
      }
    }
    // Inherit all base hook variable preprocess functions into suggestion
    // hooks. This ensures that derivative hooks have a complete set of variable
    // preprocess functions.
    foreach ($cache as $hook => $info) {
      // The 'base hook' is only applied to derivative hooks already registered
      // from a pattern. This is typically set from
      // drupal_find_theme_functions() and drupal_find_theme_templates().
      if (isset($info['incomplete preprocess functions'])) {
        $this->completeSuggestion($hook, $cache);
        unset($cache[$hook]['incomplete preprocess functions']);
      }

      // Optimize the registry.
      if (isset($cache[$hook]['preprocess functions']) && empty($cache[$hook]['preprocess functions'])) {
        unset($cache[$hook]['preprocess functions']);
      }
      // Ensure uniqueness.
      if (isset($cache[$hook]['preprocess functions'])) {
        $cache[$hook]['preprocess functions'] = array_unique($cache[$hook]['preprocess functions']);
      }
    }
  }

  /**
   * Invalidates theme registry caches.
   *
   * To be called when the list of enabled extensions is changed.
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_FOREACH
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR))))
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (SCALAR)))
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))
                                    (AST_VAR))))
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))
                                    (AST_VAR)))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (AST_EMPTY
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (SCALAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CAST
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR)))))))
    (AST_FOREACH
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))))
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_BINARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR))
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_DIM
            (AST_VAR)
            (NULL))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_VAR)
                        (NULL)))
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_FOREACH
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_VAR)
                (NULL)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_CALL
                                (
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_VAR)
                                        (SCALAR))
                                    (AST_VAR)
                                    (AST_VAR)))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_ISSET
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR))))
                                        (
                                            (AST_ASSIGN
                                                (AST_VAR)
                                                (AST_CALL
                                                    (
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))
                                                        (SCALAR))))
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (AST_VAR))
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (SCALAR)))))))))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (SCALAR)))
                                (AST_UNARY_OP
                                    (AST_CALL
                                        (
                                            (AST_VAR)
                                            (AST_DIM
                                                (AST_DIM
                                                    (AST_VAR)
                                                    (AST_VAR))
                                                (SCALAR))))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))
                                    (AST_VAR))))
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_ISSET
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))))
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (SCALAR))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_DIM
                                                (AST_VAR)
                                                (AST_VAR))
                                            (SCALAR))
                                        (NULL))
                                    (AST_VAR)))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_ISSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (AST_EMPTY
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))
                    (
                        (AST_UNSET
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_ISSET
                        (AST_DIM
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))
                            (SCALAR)))
                    (
                        (AST_ASSIGN
                            (AST_DIM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (SCALAR))
                            (AST_CALL
                                (
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (SCALAR)))))))))))