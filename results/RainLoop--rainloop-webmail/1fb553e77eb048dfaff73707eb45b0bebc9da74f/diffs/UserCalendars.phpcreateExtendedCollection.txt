||||||||    public function createExtendedCollection($name, array $resourceType, array $properties) {

        $isCalendar = false;
        foreach($resourceType as $rt) {
            switch ($rt) {
                case '{DAV:}collection' :
                case '{http://calendarserver.org/ns/}shared-owner' :
                    // ignore
                    break;
                case '{urn:ietf:params:xml:ns:caldav}calendar' :
                    $isCalendar = true;
                    break;
                default :
                    throw new DAV\Exception\InvalidResourceType('Unknown resourceType: ' . $rt);
            }
        }
        if (!$isCalendar) {
            throw new DAV\Exception\InvalidResourceType('You can only create calendars in this collection');
        }
        $this->caldavBackend->createCalendar($this->principalInfo['uri'], $name, $properties);

    }

    /**
     * Returns the owner principal
     *
     * This must be a url to a principal, or null if there's no owner
     *
     * @return string|null
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_SWITCH
                (AST_VAR)
                (AST_SWITCH_LIST
                    (AST_SWITCH_CASE
                        (SCALAR))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (SCALAR)
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CONST))
                            (AST_BREAK
                                (NULL))))
                    (AST_SWITCH_CASE
                        (NULL)
                        (
                            (AST_THROW
                                (AST_NEW
                                    (
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_VAR)))))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR)))))))
    (AST_METHOD_CALL
        (AST_PROP
            (AST_VAR))
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)
            (AST_VAR))))