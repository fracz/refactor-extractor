    public function chgrp($files, $group, $recursive = false)
    {
        foreach ($this->toIterator($files) as $file) {
            if ($recursive && is_dir($file) && !is_link($file)) {
                $this->chgrp(new \FilesystemIterator($file), $group, true);
            }
            if (is_link($file) && function_exists('lchgrp')) {
                if (true !== @lchgrp($file, $group)) {
                    throw new IOException(sprintf('Failed to chgrp file "%s".', $file), 0, null, $file);
                }
            } else {
                if (true !== @chgrp($file, $group)) {
                    throw new IOException(sprintf('Failed to chgrp file "%s".', $file), 0, null, $file);
                }
            }
        }
    }

    /**
     * Renames a file or a directory.
     *
     * @param string  $origin    The origin filename or directory
     * @param string  $target    The new filename or directory
     * @param Boolean $overwrite Whether to overwrite the target if it already exists
     *
     * @throws IOException When target file or directory already exists
     * @throws IOException When origin cannot be renamed
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR)))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_NEW
                                    (
                                        (AST_VAR)))
                                (AST_VAR)
                                (AST_CONST))))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_CALL
                            (
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (SCALAR)
                                                (AST_CONST)
                                                (AST_VAR)))))))))
                (AST_IF_ELEM
                    (NULL)
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))
                                (
                                    (AST_THROW
                                        (AST_NEW
                                            (
                                                (AST_CALL
                                                    (
                                                        (SCALAR)
                                                        (AST_VAR)))
                                                (SCALAR)
                                                (AST_CONST)
                                                (AST_VAR)))))))))))))||||||||