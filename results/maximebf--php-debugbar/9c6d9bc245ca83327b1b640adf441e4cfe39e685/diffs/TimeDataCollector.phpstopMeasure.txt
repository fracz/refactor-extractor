    public function stopMeasure($name)
    {
        $end = microtime(true);
        $this->measures[$name]['end'] = $end;
        $this->measures[$name]['relative_end'] = $end - $this->requestEndTime;
        $this->measures[$name]['duration'] = $end - $this->measures[$name]['start'];
        $this->measures[$name]['duration_str'] = $this->formatDuration($this->measures[$name]['duration']);
    }

    /**
     * Utility function to measure the execution of a Closure
     *
     * @param Closure $closure
     */
||||||||    public function stopMeasure($name)
    {
        $end = microtime(true);
        if (!isset($this->startedMeasures[$name])) {
            throw new DebugBarException("Failed stopping measure '$name' because it hasn't been started");
        }
        $this->addMeasure($name, $this->startedMeasures[$name]['start'], $end, $this->startedMeasures[$name]['label']);
        unset($this->startedMeasures[$name]);
    }

    /**
     * Adds a measure
     *
     * @param string $name
     * @param float $start
     * @param float $end
     * @param string $label
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))
        (AST_VAR))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))
        (AST_BINARY_OP
            (AST_VAR)
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))
        (AST_BINARY_OP
            (AST_VAR)
            (AST_DIM
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_DIM
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))
            (SCALAR))
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_DIM
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (SCALAR))
            (AST_VAR)
            (AST_DIM
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR))
                (SCALAR))))
    (AST_UNSET
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))