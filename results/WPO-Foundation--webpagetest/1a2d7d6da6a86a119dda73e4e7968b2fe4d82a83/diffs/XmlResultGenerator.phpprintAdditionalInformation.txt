  private function printAdditionalInformation($testResult, $forMedian) {
    $testId = $this->testInfo->getId();
    $testRoot = $this->testInfo->getRootDirectory();
    $run = $testResult->getRunNumber();
    $cached = $testResult->isCachedRun();

    xmlDomains($testId, $testRoot, $run, $cached ? 1 : 0);
    xmlBreakdown($testId, $testRoot, $run, $cached ? 1 : 0);
    if ($this->shouldPrintInfo(self::INFO_REQUESTS) ||
        ($forMedian && $this->shouldPrintInfo(self::INFO_MEDIAN_REQUESTS))
       ) {
      xmlRequests($testId, $testRoot, $run, $cached ? 1 : 0);
    }

    StatusMessages($testId, $testRoot, $run, $cached ? 1 : 0);
    ConsoleLog($testId, $testRoot, $run, $cached ? 1 : 0);
  }

  /**
   * @param int $infotype The kind of info to check for (see INFO_* constants)
   * @return bool True if this type of information should be printed, false otherwise
   */
||||||||  private function printAdditionalInformation($testResult, $forMedian) {
    $testId = $this->testInfo->getId();
    $testRoot = $this->testInfo->getRootDirectory();
    $run = $testResult->getRunNumber();
    $cached = $testResult->isCachedRun();

    xmlDomains($testId, $testRoot, $run, $cached ? 1 : 0);
    xmlBreakdown($testId, $testRoot, $run, $cached ? 1 : 0);
    $this->printRequests($testResult, $forMedian);

    StatusMessages($testId, $testRoot, $run, $cached ? 1 : 0);
    ConsoleLog($testId, $testRoot, $run, $cached ? 1 : 0);
  }

  /**
   * @param int $infotype The kind of info to check for (see INFO_* constants)
   * @return bool True if this type of information should be printed, false otherwise
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CLASS_CONST
                                (SCALAR))))))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR)
                        (AST_CONDITIONAL
                            (AST_VAR)
                            (SCALAR)
                            (SCALAR)))))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_VAR)
            (AST_VAR)
            (AST_CONDITIONAL
                (AST_VAR)
                (SCALAR)
                (SCALAR)))))