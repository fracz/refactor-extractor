  private function _createBreakdownRow($stepResult) {
    $urlGenerator = $stepResult->createUrlGenerator("", FRIENDLY_URLS);
    $b = getBreakdownForStep($stepResult->createTestPaths(), $urlGenerator, $requests);
    if (is_array($b)) {
      $this->breakdown[] = array('run' => $stepResult->getRunNumber(), 'data' => $b);
    }
    echo "<tr>\n";

    echo "<td align=\"left\" valign=\"middle\">\n";
    $breakdownUrl = $urlGenerator->resultPage("breakdown");
    echo "<a href=\"$breakdownUrl\">Content Breakdown</a>";
    echo "</td>";

    $span = 2;
    if ($stepResult->getMetric('optimization_checked'))
      $span++;
    if ($this->hasScreenshots)
      $span++;
    if ($this->hasVideo)
      $span++;

    echo "<td align=\"left\" valign=\"middle\" colspan=\"$span\">";
    $run = $stepResult->getRunNumber();
    echo "<table><tr><td style=\"border:none;\"><div id=\"requests_$run\"></div></td>";
    echo "<td style=\"border:none;\"><div id=\"bytes_$run\"></div></td></tr></table>";
    echo "</td>\n";

    echo "</tr>\n";
  }

||||||||  private function _createBreakdownRow($stepResult, $tableColumns) {
    $urlGenerator = $stepResult->createUrlGenerator("", FRIENDLY_URLS);
    $b = getBreakdownForStep($stepResult->createTestPaths(), $urlGenerator, $requests);
    if (is_array($b)) {
      $this->breakdown[] = array('run' => $stepResult->getRunNumber(), 'data' => $b);
    }
    echo "<tr>\n";

    echo "<td align=\"left\" valign=\"middle\">\n";
    $breakdownUrl = $urlGenerator->resultPage("breakdown");
    echo "<a href=\"$breakdownUrl\">Content Breakdown</a>";
    echo "</td>";

    $span = $tableColumns - 1;
    echo "<td align=\"left\" valign=\"middle\" colspan=\"$span\">";
    $run = $stepResult->getRunNumber();
    echo "<table><tr><td style=\"border:none;\"><div id=\"requests_$run\"></div></td>";
    echo "<td style=\"border:none;\"><div id=\"bytes_$run\"></div></td></tr></table>";
    echo "</td>\n";

    echo "</tr>\n";
  }

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_POST_INC
                    (AST_VAR)))))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (NULL))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_METHOD_CALL
                                (AST_VAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_ECHO
        (SCALAR))
    (AST_ECHO
        (SCALAR)))