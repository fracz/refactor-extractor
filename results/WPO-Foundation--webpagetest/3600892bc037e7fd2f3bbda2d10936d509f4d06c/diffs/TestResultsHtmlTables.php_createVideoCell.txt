  private function _createVideoCell($stepResult) {
    $localPaths = $stepResult->createTestPaths();
    echo '<td align="center" valign="middle">';
    if (is_dir($localPaths->videoDir())) {
      $urlGenerator = $stepResult->createUrlGenerator("", false);
      $end = null;
      if (!$stepResult->isCachedRun() && $stepResult->getRunNumber() == $this->firstViewMedianRun && array_key_exists('end', $_REQUEST)) {
        $end = $_REQUEST['end'];
      }

      $filmstripUrl = $urlGenerator->filmstripView($end);
      echo "<a href=\"$filmstripUrl\">Filmstrip View</a><br>-<br>";

      $createUrl = $urlGenerator->createVideo($end);
      echo "<a href=\"$createUrl\">Watch Video</a>";

      $rawVideoPath = $localPaths->rawDeviceVideo();
      if (is_file($rawVideoPath))
        echo "<br>-<br><a href=\"/$rawVideoPath\">Raw Device Video</a>";
    } else {
      echo "not available";
    }
    echo '</td>';
  }

}||||||||  private function _createVideoCell($stepResult, $even) {
    $localPaths = $stepResult->createTestPaths();
    $class = $even ? 'class="even"' : '';
    echo "<td align=\"center\" valign=\"middle\" $class>";
    if (is_dir($localPaths->videoDir())) {
      $urlGenerator = $stepResult->createUrlGenerator("", false);
      $end = $this->getRequestEndParam($stepResult);

      $filmstripUrl = $urlGenerator->filmstripView($end);
      echo "<a href=\"$filmstripUrl\">Filmstrip View</a><br>-<br>";

      $createUrl = $urlGenerator->createVideo($end);
      echo "<a href=\"$createUrl\">Watch Video</a>";

      $rawVideoPath = $localPaths->rawDeviceVideo();
      if (is_file($rawVideoPath))
        echo "<br>-<br><a href=\"/$rawVideoPath\">Raw Device Video</a>";
    } else {
      echo "not available";
    }
    echo '</td>';
  }

  /**
   * @param TestStepResult $stepResult
   * @param bool $even
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ECHO
        (SCALAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONST))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_UNARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR)))
                                (AST_BINARY_OP
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ECHO
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ECHO
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ECHO
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_ECHO
        (AST_ENCAPS_LIST
            (SCALAR)
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_METHOD_CALL
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ECHO
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_VAR))))
                (AST_ECHO
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_VAR)
                        (SCALAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_ECHO
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ECHO
                    (SCALAR)))))
    (AST_ECHO
        (SCALAR)))