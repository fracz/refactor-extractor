  private function printStatusMessages($testResult) {
    $localPaths = new TestPaths($this->testInfo->getRootDirectory(), $testResult->getRunNumber(),
                                $testResult->isCachedRun());
    $statusFile = $localPaths->statusFile();
    if (!$this->fileHandler->gzFileExists($statusFile)) {
      return;
    }
    echo "<status>\n";
    $lines = $this->fileHandler->gzReadFile($statusFile);
    foreach($lines as $line) {
      $line = trim($line);
      if (strlen($line)) {
        $parts = explode("\t", $line);
        $time = xml_entities(trim($parts[0]));
        $message = xml_entities(trim($parts[1]));
        echo "<entry>\n";
        echo "<time>$time</time>\n";
        echo "<message>$message</message>\n";
        echo "</entry>\n";
      }
    }
    echo "</status>\n";
  }

  /**
   * Print the console log if requested
   * @param TestRunResult $testResult Result data of affected run
   */
||||||||  private function printStatusMessages($testResult) {
    $messages = $testResult->getStatusMessages();
    if (!$messages) {
      return;
    }
    echo "<status>\n";
    foreach($messages as $message) {
      echo "<entry>\n";
      echo "<time>" . xml_entities($message["time"]) . "</time>\n";
      echo "<message>" . xml_entities($message["message"]) . "</message>\n";
      echo "</entry>\n";
    }
    echo "</status>\n";
  }

  /**
   * Print the console log if requested
   * @param TestRunResult $testResult Result data of affected run
   */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR)))
                (AST_METHOD_CALL
                    (AST_VAR))
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_PROP
                        (AST_VAR))
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ECHO
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (AST_CALL
                                        (
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR)))))))
                        (AST_ECHO
                            (SCALAR))
                        (AST_ECHO
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ECHO
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ECHO
                            (SCALAR)))))))
    (AST_ECHO
        (SCALAR)))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ECHO
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ECHO
                (SCALAR))
            (AST_ECHO
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (SCALAR)))
            (AST_ECHO
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))))
                    (SCALAR)))
            (AST_ECHO
                (SCALAR))))
    (AST_ECHO
        (SCALAR)))