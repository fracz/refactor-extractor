  public function testMissingAppOrAccessTokensOnRequestObjectsWillFallbackToBatchDefaults()
  {
    $app = new FacebookApp('123', 'foo_secret');
    $batchRequest = new FacebookBatchRequest($app, 'foo_token');

    $requestTotallyEmpty = new FacebookRequest();
    $batchRequest->addFallbackDefaults($requestTotallyEmpty);
    $appTotallyEmpty = $requestTotallyEmpty->getApp();
    $accessTokenTotallyEmpty = $requestTotallyEmpty->getAccessToken();

    $this->assertSame($app, $appTotallyEmpty);
    $this->assertEquals('foo_token', $accessTokenTotallyEmpty);

    $requestTokenOnly = new FacebookRequest(null, 'bar_token');
    $batchRequest->addFallbackDefaults($requestTokenOnly);
    $appTokenOnly = $requestTokenOnly->getApp();
    $accessTokenTokenOnly = $requestTokenOnly->getAccessToken();

    $this->assertSame($app, $appTokenOnly);
    $this->assertEquals('bar_token', $accessTokenTokenOnly);

    $myApp = new FacebookApp('1337', 'bar_secret');
    $requestAppOnly = new FacebookRequest($myApp);
    $batchRequest->addFallbackDefaults($requestAppOnly);
    $appAppOnly = $requestAppOnly->getApp();
    $accessTokenAppOnly = $requestAppOnly->getAccessToken();

    $this->assertSame($myApp, $appAppOnly);
    $this->assertEquals('foo_token', $accessTokenAppOnly);
  }

  /**
   * @expectedException \Facebook\Exceptions\FacebookSDKException
   */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_CONST)
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_VAR))))||||||||