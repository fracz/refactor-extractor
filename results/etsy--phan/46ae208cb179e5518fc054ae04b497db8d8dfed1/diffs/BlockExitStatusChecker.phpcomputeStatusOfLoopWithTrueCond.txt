||||||||    private function computeStatusOfLoopWithTrueCond(Node $node) : int
    {
        // only know how to analyze "while (1) {exprs}" or "for (; true; ) {exprs}"
        // TODO: identify infinite loops, mark those as STATUS_NO_PROCEED or STATUS_RETURN.
        if (!self::isTruthyLiteral($node->children['cond'])) {
            return self::STATUS_PROCEED;
        }
        $status = $this->check($node->children['stmts']);
        if ($status === self::STATUS_RETURN || $status === self::STATUS_THROW) {
            return $status;
        }
        return self::STATUS_PROCEED;
    }

    // A return statement unconditionally returns (Assume expression doesn't throw)
||||||||||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_STATIC_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR)))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_CLASS_CONST
                        (SCALAR))))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_CLASS_CONST
            (SCALAR))))