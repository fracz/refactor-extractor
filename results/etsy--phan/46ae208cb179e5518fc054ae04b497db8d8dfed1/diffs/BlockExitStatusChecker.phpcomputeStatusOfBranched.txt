||||||||    public function computeStatusOfBranched(Node $node) : int {
        // A do-while statement and an if branch are executed at least once (or exactly once)
        // TODO: deduplicate
        $stmts = $node->children['stmts'];
        if (\is_null($stmts)) {
            return self::STATUS_PROCEED;
        }
        // We can have a single statement in the 'stmts' field when no braces exist?
        // TODO: no longer the case in ast version 40?
        if (!($stmts instanceof Node)) {
            return self::STATUS_PROCEED;
        }
        // This may be a statement list (or in rare cases, a statement?)
        $status = $this->check($stmts);
        if ($node->kind === \ast\AST_DO_WHILE) {
            // ignore break/continue within a do{}while ($cond);
            return in_array($status, [self::STATUS_THROW, self::STATUS_RETURN]) ? $status : self::STATUS_PROCEED;
        }
        return $status;
    }

    /**
     * Analyzes a node with kind \ast\AST_IF
     * @return int the exit status of a block (whether or not it would unconditionally exit, return, throw, etc.
     * @override
     */
||||||||||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_INSTANCEOF
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_CLASS_CONST
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (NULL))
                                    (AST_ARRAY_ELEM
                                        (AST_CLASS_CONST
                                            (SCALAR))
                                        (NULL)))))
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_RETURN
        (AST_VAR)))