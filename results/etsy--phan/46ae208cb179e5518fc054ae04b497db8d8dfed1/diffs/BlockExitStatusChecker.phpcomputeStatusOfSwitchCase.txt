||||||||    private function computeStatusOfSwitchCase(Node $case_node, int $index, array $siblings) : int
    {
        $status = $this->visitStmtList($case_node->children['stmts']);
        if ($status & self::STATUS_CERTAIN_BITMASK) {
            return $status;
        }
        $next_sibling = $siblings[$index + 1] ?? null;
        if (!$next_sibling) {
            return $status;
        }
        $next_status = self::getStatusOfSwitchCase($case_node, $index + 1, $siblings);
        if ($status & self::STATUS_MAYBE_BITMASK) {
            if ($next_status & self::STATUS_MAYBE_BITMASK) {
                return min($status, $next_status);
            } else if ($next_status & self::STATUS_CERTAIN_BITMASK) {
                return min($status << self::BITSHIFT_FOR_MAYBE, $next_status);
            }
            // next_status === STATUS_PROCEED
            return $status;
        }
        // STATUS_PROCEED | self::STATUS_CERTAIN_BITMASK
        return $status;
    }

||||||||||||||||NO_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_DIM
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR)))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_VAR)
                            (AST_CLASS_CONST
                                (SCALAR)))
                        (
                            (AST_RETURN
                                (AST_CALL
                                    (
                                        (AST_VAR)
                                        (AST_VAR))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CLASS_CONST
                                            (SCALAR)))
                                    (
                                        (AST_RETURN
                                            (AST_CALL
                                                (
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CLASS_CONST
                                                            (SCALAR)))
                                                    (AST_VAR))))))))))
                (AST_RETURN
                    (AST_VAR)))))
    (AST_RETURN
        (AST_VAR)))