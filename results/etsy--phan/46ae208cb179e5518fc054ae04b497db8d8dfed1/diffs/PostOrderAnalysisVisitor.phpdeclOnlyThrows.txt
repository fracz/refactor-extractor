    private function declOnlyThrows(Decl $node) {
        $stmts = $node->children['stmts'] ?? null;
        return isset($stmts)
            && $stmts->kind === \ast\AST_STMT_LIST
            && \count($stmts->children) === 1
            && $stmts->children[0]->kind === \ast\AST_THROW;
    }
}||||||||    private function declOnlyThrows(Decl $node) : bool {
        return BlockExitStatusChecker::willUnconditionallyThrowOrReturn($node->children['stmts']);
    }
}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_ISSET
                        (AST_VAR))
                    (AST_BINARY_OP
                        (AST_PROP
                            (AST_VAR))
                        (AST_CONST)))
                (AST_BINARY_OP
                    (AST_CALL
                        (
                            (AST_PROP
                                (AST_VAR))))
                    (SCALAR)))
            (AST_BINARY_OP
                (AST_PROP
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR)))
                (AST_CONST)))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))))