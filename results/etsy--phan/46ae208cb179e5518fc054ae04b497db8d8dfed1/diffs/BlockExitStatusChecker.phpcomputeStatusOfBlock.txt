||||||||    private function computeStatusOfBlock(array $block) : int
    {
        $maybe_status = 0;
        foreach ($block as $child) {
            if ($child === null) {
                continue;
            }
            // e.g. can be non-Node for statement lists such as `if ($a) { return; }echo "X";2;` (under unknown conditions)
            if (!($child instanceof Node)) {
                continue;
            }
            $status = $this->check($child);
            if ($status !== self::STATUS_PROCEED) {
                if ($status & self::STATUS_MAYBE_BITMASK) {
                    if (!$maybe_status || $status < $maybe_status) {
                        $maybe_status = $status;
                    }
                } else {
                    if ($maybe_status) {
                        // E.g. if this statement is guaranteed to throw, but an earlier statement may break,
                        // then the statement list is guarenteed to break/throw.
                        $equivalent_status = $maybe_status << self::BITSHIFT_FOR_MAYBE;
                        return min($status, $equivalent_status);
                    }
                    // The statement after this one is unreachable, due to unconditional continue/break/throw/return.
                    return $status;
                }
            }
        }
        return self::STATUS_PROCEED;
    }

||||||||||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_VAR)
                                    (AST_CLASS_CONST
                                        (SCALAR)))
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_UNARY_OP
                                                    (AST_VAR))
                                                (AST_BINARY_OP
                                                    (AST_VAR)
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_VAR)))))))
                            (AST_IF_ELEM
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_VAR)
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_BINARY_OP
                                                        (AST_VAR)
                                                        (AST_CLASS_CONST
                                                            (SCALAR))))
                                                (AST_RETURN
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR)))))))
                                    (AST_RETURN
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_CLASS_CONST
            (SCALAR))))