    private function getStatusOfBlock(array $block) : int
    {
        foreach ($block as $child) {
            if ($child === null) {
                continue;
            }
            // e.g. can be non-Node for statement lists such as `if ($a) { return; }echo "X";2;` (under unknown conditions)
            if (!($child instanceof Node)) {
                continue;
            }
            $status = $this->check($child);
            if ($status !== self::STATUS_PROCEED) {
                // The statement after this one is unreachable, due to unconditional continue/break/throw/return.
                return $status;
            }
        }
        return self::STATUS_PROCEED;
    }
}||||||||||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CONST))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_INSTANCEOF
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_VAR)
                        (AST_CLASS_CONST
                            (SCALAR)))
                    (
                        (AST_RETURN
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_CLASS_CONST
            (SCALAR))))||||||||