    public function getSeverityName() : string
    {
        switch ($this->getSeverity()) {
        case self::SEVERITY_LOW:
            return 'low';
        case self::SEVERITY_NORMAL:
            return 'normal';
        case self::SEVERITY_CRITICAL:
            return 'critical';
        }
    }

    /**
     * @return int
     */
||||||||    public function getSeverityName() : string
    {
        switch ($this->getSeverity()) {
        case self::SEVERITY_LOW:
            return 'low';
        case self::SEVERITY_NORMAL:
            return 'normal';
        case self::SEVERITY_CRITICAL:
            return 'critical';
        default:
            throw new \AssertionError('Unknown severity ' . $this->getSeverity());
        }
    }

    /**
     * @return int
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_SWITCH
        (AST_METHOD_CALL
            (AST_VAR))
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_RETURN
                        (SCALAR))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_BINARY_OP
                                    (SCALAR)
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))