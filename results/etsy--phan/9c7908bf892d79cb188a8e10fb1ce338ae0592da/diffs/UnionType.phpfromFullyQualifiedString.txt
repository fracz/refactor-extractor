    public static function fromFullyQualifiedString(
        string $fully_qualified_string
    ) : UnionType {
        if ($fully_qualified_string === '') {
            return new UnionType();
        }

        return new UnionType(
            \array_map(function (string $type_name) {
                return Type::fromFullyQualifiedString($type_name);
            }, \explode('|', $fully_qualified_string))
        );
    }

    /**
     * @param string $type_string
     * A '|' delimited string representing a type in the form
     * 'int|string|null|ClassName'.
     *
     * @param Context $context
     * The context in which the type string was
     * found
     *
     * @param int $source one of the constants in Type::FROM_*
     *
     * @return UnionType
     */
||||||||    public static function fromFullyQualifiedString(
        string $fully_qualified_string
    ) : UnionType {
        if ($fully_qualified_string === '') {
            return new UnionType();
        }

        static $memoize_map = [];
        $types_set = $memoize_map[$fully_qualified_string] ?? null;

        if (!isset($types_set)) {
            $types_set = ArraySet::from_list(\array_map(function (string $type_name) {
                return Type::fromFullyQualifiedString($type_name);
            }, \explode('|', $fully_qualified_string)));
            $memoize_map[$fully_qualified_string] = $types_set;
        }

        return new UnionType($types_set, true);
    }

    /**
     * @param string $type_string
     * A '|' delimited string representing a type in the form
     * 'int|string|null|ClassName'.
     *
     * @param Context $context
     * The context in which the type string was
     * found
     *
     * @param int $source one of the constants in Type::FROM_*
     *
     * @return UnionType
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_CALL
                    (
                        (AST_CLOSURE
                            (PARAM_TYPENO_PARAM_DEFAULT)
                            (NULL)
                            (
                                (AST_RETURN
                                    (AST_STATIC_CALL
                                        (
                                            (AST_VAR))))))
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (SCALAR))
            (
                (AST_RETURN
                    (AST_NEW)))))
    (AST_STATIC
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_DIM
                (AST_VAR)
                (AST_VAR))
            (AST_CONST)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_CLOSURE
                                        (PARAM_TYPENO_PARAM_DEFAULT)
                                        (NULL)
                                        (
                                            (AST_RETURN
                                                (AST_STATIC_CALL
                                                    (
                                                        (AST_VAR))))))
                                    (AST_CALL
                                        (
                                            (SCALAR)
                                            (AST_VAR))))))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_VAR)
                (AST_CONST)))))