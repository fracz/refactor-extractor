    public function hasStaticType() : bool
    {
        static $static_type;
        static $static_nullable_type;
        if ($static_type === null) {
            $static_type = StaticType::instance(false);
            $static_nullable_type = StaticType::instance(true);
        }
        return $this->type_set->contains($static_type) ||
            $this->type_set->contains($static_nullable_type);
    }

    /**
     * @return UnionType
     * A new UnionType with any references to 'static' resolved
     * in the given context.
     */
||||||||    public function hasStaticType() : bool
    {
        static $static_types = null;
        if ($static_types === null) {
            $static_types = [
                StaticType::instance(false),
                StaticType::instance(true),
            ];
        }
        return ArraySet::containsAny($this->type_set, $static_types);
    }

    /**
     * @return UnionType
     * A new UnionType with any references to 'static' resolved
     * in the given context.
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_STATIC
        (AST_VAR)
        (NULL))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CONST))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CONST)))))))
    (AST_RETURN
        (AST_BINARY_OP
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_PROP
                    (AST_VAR))
                (
                    (AST_VAR))))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(
    (AST_STATIC
        (AST_VAR)
        (AST_CONST))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_CONST)))
                            (NULL))
                        (AST_ARRAY_ELEM
                            (AST_STATIC_CALL
                                (
                                    (AST_CONST)))
                            (NULL)))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR)))))