    private function classExistsOrIsNative(Node $node) : bool {
        if (!$this->classExists()) {
            if (!Type::typeFromString($this->class_name)->isNativeType()) {
                Log::err(
                    Log::EUNDEF,
                    "static call to undeclared class {$this->class_name}",
                    $this->context->getFile(),
                    $node->lineno
                );
                assert(false, "nope");
                return false;
            }
        }

        return true;
    }

}||||||||    private function classExistsOrIsNative(Node $node) : bool {
        if (!$this->classExists()) {
            if (!Type::typeFromString($this->class_name)->isNativeType()) {
                Log::err(
                    Log::EUNDEF,
                    "static call to undeclared class {$this->class_name}",
                    $this->context->getFile(),
                    $node->lineno
                );
                return false;
            }
        }

        return true;
    }

}||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_CALL
                                (
                                    (AST_CONST)
                                    (SCALAR)))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_METHOD_CALL
                                (AST_STATIC_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR))))))
                        (
                            (AST_STATIC_CALL
                                (
                                    (AST_CLASS_CONST
                                        (SCALAR))
                                    (AST_ENCAPS_LIST
                                        (SCALAR)
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))
                                    (AST_PROP
                                        (AST_VAR))))
                            (AST_RETURN
                                (AST_CONST))))))))
    (AST_RETURN
        (AST_CONST)))