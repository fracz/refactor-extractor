||||||||    private function analyzeVarIsNotIdentical(Node $var_node, $expr) : Context
    {
        $var_name = $var_node->children['name'] ?? null;
        $context = $this->context;
        if (\is_string($var_name)) {
            try {
                if ($expr instanceof Node && $expr->kind === \ast\AST_CONST) {
                    $exprNameNode = $expr->children['name'];
                    if ($exprNameNode->kind === \ast\AST_NAME) {
                        // Currently, only add this inference when we're absolutely sure this is a check rejecting null/false/true
                        $exprName = $exprNameNode->children['name'];
                        switch(\strtolower($exprName)) {
                        case 'null':
                            return $this->removeNullFromVariable($var_node, $context);
                        case 'false':
                            return $this->removeFalseFromVariable($var_node, $context);
                        case 'true':
                            return $this->removeTrueFromVariable($var_node, $context);
                        }
                    }
                }
            } catch (\Exception $e) {
                // Swallow it (E.g. IssueException for undefined variable)
            }
        }
        return $context;
    }


    /**
     * @param Node $node
     * A node to parse
     *
     * @return Context
     * A new or an unchanged context resulting from
     * parsing the node
     */
||||||||||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CONST)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_PROP
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_TRY
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_BINARY_OP
                                    (AST_INSTANCEOF
                                        (AST_VAR))
                                    (AST_BINARY_OP
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONST)))
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_PROP
                                                (AST_VAR))
                                            (SCALAR)))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))
                                                (AST_SWITCH
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR)))
                                                    (AST_SWITCH_LIST
                                                        (AST_SWITCH_CASE
                                                            (SCALAR)
                                                            (
                                                                (AST_RETURN
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)
                                                                        (
                                                                            (AST_VAR)
                                                                            (AST_VAR))))))
                                                        (AST_SWITCH_CASE
                                                            (SCALAR)
                                                            (
                                                                (AST_RETURN
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)
                                                                        (
                                                                            (AST_VAR)
                                                                            (AST_VAR))))))
                                                        (AST_SWITCH_CASE
                                                            (SCALAR)
                                                            (
                                                                (AST_RETURN
                                                                    (AST_METHOD_CALL
                                                                        (AST_VAR)
                                                                        (
                                                                            (AST_VAR)
                                                                            (AST_VAR)))))))))))))))
                    (AST_CATCH_LIST
                        (AST_CATCH
                            (AST_NAME_LIST)
                            (AST_VAR)))
                    (NULL)))))
    (AST_RETURN
        (AST_VAR)))