||||||||    private static function getPrinter()
    {
        if (null === self::$printer) {

            $output = new ConsoleOutput();

            $log = Log::getInstance();
            if (null !== $log->output_filename) {
                $output = new StreamOutput(fopen($log->output_filename, 'w'));
            } else {
                if (Config::get()->progress_bar) {
                    fwrite(STDERR, "\n");
                }
            }

            self::$printer = self::getPrinterFactory()->getPrinter($log->output_mode, $output);
        }

        return self::$printer;
    }

    /**
     * @param IssueCollectorInterface $collector
     */
||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CONST)
                (AST_STATIC_PROP))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CONST)
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_NEW
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR))
                                                (SCALAR))))))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_PROP
                                        (AST_STATIC_CALL))
                                    (
                                        (AST_CALL
                                            (
                                                (AST_CONST)
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_STATIC_PROP)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL)
                        (
                            (AST_PROP
                                (AST_VAR))
                            (AST_VAR)))))))
    (AST_RETURN
        (AST_STATIC_PROP)))