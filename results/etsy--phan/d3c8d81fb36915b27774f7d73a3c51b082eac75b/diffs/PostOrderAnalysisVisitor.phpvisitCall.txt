    public function visitCall(Node $node) : Context {
        $expression = $node->children['expr'];

        (new ContextNode(
            $this->code_base,
            $this->context,
            $node
        ))->analyzeBackwardCompatibility();

        foreach($node->children['args']->children ?? [] as $arg_node) {
            if($arg_node instanceof Node) {
                (new ContextNode(
                    $this->code_base,
                    $this->context,
                    $arg_node
                ))->analyzeBackwardCompatibility();
            }
        }

        if ($expression->kind == \ast\AST_VAR) {
            $variable_name = (new ContextNode(
                $this->code_base,
                $this->context,
                $expression
            ))->getVariableName();

            if(empty($variable_name)) {
                return $this->context;
            }

            // $var() - hopefully a closure, otherwise we don't know
            if ($this->context->getScope()->hasVariableWithName(
                $variable_name
            )) {
                $variable = $this->context->getScope()
                    ->getVariableWithName($variable_name);

                $union_type = $variable->getUnionType();
                if ($union_type->isEmpty()) {
                    return $this->context;
                }

                foreach ($union_type->getTypeSet() as $type) {
                    if (!($type instanceof CallableType)) {
                        continue;
                    }

                    $closure_fqsen =
                        FullyQualifiedFunctionName::fromFullyQualifiedString(
                            (string)$type->asFQSEN()
                        );

                    if ($this->code_base->hasMethod(
                        $closure_fqsen
                    )) {
                        // Get the closure
                        $method = $this->code_base->getMethod(
                            $closure_fqsen
                        );

                        // Check the call for paraemter and argument types
                        $this->analyzeCallToMethod(
                            $this->code_base,
                            $method,
                            $node
                        );
                    }
                }
            }
        } else if (
            $expression->kind == \ast\AST_NAME
        ){
            try {
                $method = (new ContextNode(
                    $this->code_base,
                    $this->context,
                    $expression
                ))->getFunction(
                    $expression->children['name']
                        ?? $expression->children['method']
                );
            } catch (IssueException $exception) {
                $exception->getIssueInstance()();
                return $this->context;
            }

            // Check the call for paraemter and argument types
            $this->analyzeCallToMethod(
                $this->code_base,
                $method,
                $node
            );
        } else if (
            $expression->kind == \ast\AST_CALL
            || $expression->kind == \ast\AST_STATIC_CALL
            || $expression->kind == \ast\AST_NEW
            || $expression->kind == \ast\AST_METHOD_CALL
        ) {
            $class_list = (new ContextNode(
                $this->code_base,
                $this->context,
                $expression
            ))->getClassList();

            foreach ($class_list as $class) {
                if (!$class->hasMethodWithName(
                    $this->code_base, '__invoke'
                )) {
                    continue;
                }

                $method = $class->getMethodByNameInContext(
                    $this->code_base,
                    '__invoke',
                    $this->context
                );

                // Check the call for paraemter and argument types
                $this->analyzeCallToMethod(
                    $this->code_base,
                    $method,
                    $node
                );
            }

        }

        return $this->context;
    }

    /*
    public function visitArgList(Node $node) : Context {
        Debug::printNode($node);
        return $this->context;
    }
     */

    /**
     * @param Node $node
     * A node to parse
     *
     * @return Context
     * A new or an unchanged context resulting from
     * parsing the node
     */
||||||||    public function visitCall(Node $node) : Context {
        $expression = $node->children['expr'];

        (new ContextNode(
            $this->code_base,
            $this->context,
            $node
        ))->analyzeBackwardCompatibility();

        foreach($node->children['args']->children ?? [] as $arg_node) {
            if($arg_node instanceof Node) {
                (new ContextNode(
                    $this->code_base,
                    $this->context,
                    $arg_node
                ))->analyzeBackwardCompatibility();
            }
        }

        if ($expression->kind == \ast\AST_VAR) {
            $variable_name = (new ContextNode(
                $this->code_base,
                $this->context,
                $expression
            ))->getVariableName();

            if(empty($variable_name)) {
                return $this->context;
            }

            // $var() - hopefully a closure, otherwise we don't know
            if ($this->context->getScope()->hasVariableWithName(
                $variable_name
            )) {
                $variable = $this->context->getScope()
                    ->getVariableWithName($variable_name);

                $union_type = $variable->getUnionType();
                if ($union_type->isEmpty()) {
                    return $this->context;
                }

                foreach ($union_type->getTypeSet() as $type) {
                    if (!($type instanceof CallableType)) {
                        continue;
                    }

                    $closure_fqsen =
                        FullyQualifiedFunctionName::fromFullyQualifiedString(
                            (string)$type->asFQSEN()
                        );

                    if ($this->code_base->hasMethod(
                        $closure_fqsen
                    )) {
                        // Get the closure
                        $method = $this->code_base->getMethod(
                            $closure_fqsen
                        );

                        // Check the call for paraemter and argument types
                        $this->analyzeCallToMethod(
                            $this->code_base,
                            $method,
                            $node
                        );
                    }
                }
            }
        } else if (
            $expression->kind == \ast\AST_NAME
        ){
            try {
                $method = (new ContextNode(
                    $this->code_base,
                    $this->context,
                    $expression
                ))->getFunction(
                    $expression->children['name']
                        ?? $expression->children['method']
                );
            } catch (IssueException $exception) {
                $exception->getIssueInstance()->collect();
                return $this->context;
            }

            // Check the call for paraemter and argument types
            $this->analyzeCallToMethod(
                $this->code_base,
                $method,
                $node
            );
        } else if (
            $expression->kind == \ast\AST_CALL
            || $expression->kind == \ast\AST_STATIC_CALL
            || $expression->kind == \ast\AST_NEW
            || $expression->kind == \ast\AST_METHOD_CALL
        ) {
            $class_list = (new ContextNode(
                $this->code_base,
                $this->context,
                $expression
            ))->getClassList();

            foreach ($class_list as $class) {
                if (!$class->hasMethodWithName(
                    $this->code_base, '__invoke'
                )) {
                    continue;
                }

                $method = $class->getMethodByNameInContext(
                    $this->code_base,
                    '__invoke',
                    $this->context
                );

                // Check the call for paraemter and argument types
                $this->analyzeCallToMethod(
                    $this->code_base,
                    $method,
                    $node
                );
            }

        }

        return $this->context;
    }

    /*
    public function visitArgList(Node $node) : Context {
        Debug::printNode($node);
        return $this->context;
    }
     */

    /**
     * @param Node $node
     * A node to parse
     *
     * @return Context
     * A new or an unchanged context resulting from
     * parsing the node
     */
||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_FOREACH
        (AST_BINARY_OP
            (AST_PROP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_ARRAY))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_NEW
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_PROP
                                                (AST_VAR))))))
                            (AST_FOREACH
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_INSTANCEOF
                                                    (AST_VAR)))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_CAST
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_VAR))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (
                                                            (AST_VAR))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)
                                                        (AST_VAR)))))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_TRY
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_NEW
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_VAR)))
                                            (
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_RETURN
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST)))
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST)))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_NEW
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)))))
                                        (AST_FOREACH
                                            (AST_VAR)
                                            (AST_VAR)
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (SCALAR))))
                                                        (
                                                            (AST_CONTINUE
                                                                (NULL)))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)
                                                        (AST_VAR))))))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))||||||||HAS_DOC_COMMENTHAS_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_NEW
            (
                (AST_PROP
                    (AST_VAR))
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_FOREACH
        (AST_BINARY_OP
            (AST_PROP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR)))
            (AST_ARRAY))
        (AST_VAR)
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_INSTANCEOF
                        (AST_VAR))
                    (
                        (AST_METHOD_CALL
                            (AST_NEW
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)))))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_PROP
                    (AST_VAR))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_NEW
                            (
                                (AST_PROP
                                    (AST_VAR))
                                (AST_PROP
                                    (AST_VAR))
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_EMPTY
                            (AST_VAR))
                        (
                            (AST_RETURN
                                (AST_PROP
                                    (AST_VAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_PROP
                                    (AST_VAR)))
                            (
                                (AST_VAR)))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_PROP
                                            (AST_VAR)))
                                    (
                                        (AST_VAR))))
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_METHOD_CALL
                                        (AST_VAR))
                                    (
                                        (AST_RETURN
                                            (AST_PROP
                                                (AST_VAR))))))
                            (AST_FOREACH
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (AST_VAR)
                                (NULL)
                                (
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_UNARY_OP
                                                (AST_INSTANCEOF
                                                    (AST_VAR)))
                                            (
                                                (AST_CONTINUE
                                                    (NULL)))))
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_STATIC_CALL
                                            (
                                                (AST_CAST
                                                    (AST_METHOD_CALL
                                                        (AST_VAR))))))
                                    (AST_IF
                                        (AST_IF_ELEM
                                            (AST_METHOD_CALL
                                                (AST_PROP
                                                    (AST_VAR))
                                                (
                                                    (AST_VAR)))
                                            (
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (
                                                            (AST_VAR))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)
                                                        (AST_VAR)))))))))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONST))
                        (
                            (AST_TRY
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_METHOD_CALL
                                            (AST_NEW
                                                (
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_VAR)))
                                            (
                                                (AST_BINARY_OP
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR))
                                                    (AST_DIM
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (SCALAR)))))))
                                (AST_CATCH_LIST
                                    (AST_CATCH
                                        (AST_NAME_LIST)
                                        (AST_VAR)
                                        (
                                            (AST_METHOD_CALL
                                                (AST_METHOD_CALL
                                                    (AST_VAR)))
                                            (AST_RETURN
                                                (AST_PROP
                                                    (AST_VAR))))))
                                (NULL))
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_VAR)
                                    (AST_VAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST))
                                                (AST_BINARY_OP
                                                    (AST_PROP
                                                        (AST_VAR))
                                                    (AST_CONST)))
                                            (AST_BINARY_OP
                                                (AST_PROP
                                                    (AST_VAR))
                                                (AST_CONST)))
                                        (AST_BINARY_OP
                                            (AST_PROP
                                                (AST_VAR))
                                            (AST_CONST)))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_METHOD_CALL
                                                (AST_NEW
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)))))
                                        (AST_FOREACH
                                            (AST_VAR)
                                            (AST_VAR)
                                            (NULL)
                                            (
                                                (AST_IF
                                                    (AST_IF_ELEM
                                                        (AST_UNARY_OP
                                                            (AST_METHOD_CALL
                                                                (AST_VAR)
                                                                (
                                                                    (AST_PROP
                                                                        (AST_VAR))
                                                                    (SCALAR))))
                                                        (
                                                            (AST_CONTINUE
                                                                (NULL)))))
                                                (AST_ASSIGN
                                                    (AST_VAR)
                                                    (AST_METHOD_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_PROP
                                                                (AST_VAR))
                                                            (SCALAR)
                                                            (AST_PROP
                                                                (AST_VAR)))))
                                                (AST_METHOD_CALL
                                                    (AST_VAR)
                                                    (
                                                        (AST_PROP
                                                            (AST_VAR))
                                                        (AST_VAR)
                                                        (AST_VAR))))))))))))))
    (AST_RETURN
        (AST_PROP
            (AST_VAR))))