    public function logToConsole($path, $result, $reason = '')
    {
        $name = basename($path);

        if ($result === true) {
            if ($this->option('verbose')) {
                $this->line("$name has no changes – ignoring");
            }

            ++$this->ignored;
        } elseif ($result === false) {
            if ($this->option('verbose')) {
                $this->error("$name is not a valid media file because: ".$reason);
            }

            ++$this->invalid;
        } else {
            if ($this->option('verbose')) {
                $this->info("$name synced");
            }

            ++$this->synced;
        }
    }

    /**
     * Create a progress bar.
     *
     * @param int $max Max steps
     */
||||||||    public function logToConsole($path, $result, $reason = '')
    {
        $name = basename($path);

        if ($result === File::SYNC_RESULT_UNMODIFIED) {
            if ($this->option('verbose')) {
                $this->line("$name has no changes – ignoring");
            }

            ++$this->ignored;
        } elseif ($result === File::SYNC_RESULT_BAD_FILE) {
            if ($this->option('verbose')) {
                $this->error("$name is not a valid media file because: ".$reason);
            }

            ++$this->invalid;
        } else {
            if ($this->option('verbose')) {
                $this->info("$name synced");
            }

            ++$this->synced;
        }
    }

    /**
     * Create a progress bar.
     *
     * @param int $max Max steps
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (AST_ENCAPS_LIST
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CLASS_CONST
                    (SCALAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_BINARY_OP
                                        (AST_ENCAPS_LIST
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (AST_METHOD_CALL
                                (AST_VAR)
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR)))))))
                (AST_PRE_INC
                    (AST_PROP
                        (AST_VAR)))))))