||||||||    public function getPhpIniConfigPath()
    {
        return get_cfg_var('cfg_file_path');
    }
}

/**
 * Represents a single PHP requirement, e.g. an installed extension
 * or a php.ini configuration.
 *
 * @author Tobias Schultze <http://tobion.de>
 */
class Requirement
{
    private $fulfilled;
    private $testMessage;
    private $helpText;
    private $helpHtml;
    private $optional;
    private $phpIniConfig;

    /**
     * Constructor that initializes the requirement.
     *
     * @param Boolean $fulfilled     Whether the requirement is fulfilled
     * @param string  $testMessage   The message for testing the requirement
     * @param string  $helpText      The help text for resolving the problem
     * @param string  $helpHtml      The help text formatted in HTML (when null, it will be the same as $helpText)
     * @param Boolean $optional      Whether this is only an optional recommendation not a mandatory requirement
     * @param Boolean $phpIniConfig  Whether this requirement is part of the php.ini configuration
     */
    public function __construct($fulfilled, $testMessage, $helpText, $helpHtml = null, $optional = false, $phpIniConfig = false)
    {
        $this->fulfilled = (Boolean) $fulfilled;
        $this->testMessage = $testMessage;
        $this->helpText = $helpText;
        $this->helpHtml = $helpHtml ?: $helpText;
        $this->optional = $optional;
        $this->phpIniConfig = $phpIniConfig;
    }

    /**
     * Returns whether the requirement is fulfilled.
     *
     * @return Boolean true if fulfilled, otherwise false
     */
    public function isFulfilled()
    {
        return $this->fulfilled;
    }

    /**
     * Returns the message for testing the requirement.
     *
     * @return string The test message
     */
    public function getTestMessage()
    {
        return $this->testMessage;
    }

    /**
     * Returns the help text for resolving the problem
     *
     * @return string The help text
     */
    public function getHelpText()
    {
        return $this->helpText;
    }

    /**
     * Returns the help text formatted in HTML.
     *
     * @return string The HTML help
     */
    public function getHelpHtml()
    {
        return $this->helpHtml;
    }

    /**
     * Returns whether this is only an optional recommendation and not a mandatory requirement.
     *
     * @return Boolean true if optional, false if mandatory
     */
    public function isOptional()
    {
        return $this->optional;
    }

    /**
     * Returns whether this requirement is part of the php.ini configuration.
     *
     * @return Boolean true if part of php.ini config, otherwise false
     */
    public function isPhpIniConfig()
    {
        return $this->phpIniConfig;
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)))))