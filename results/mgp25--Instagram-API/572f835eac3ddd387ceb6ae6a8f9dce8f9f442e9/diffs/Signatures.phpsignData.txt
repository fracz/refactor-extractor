||||||||    public static function signData(
        array $data)
    {
        // Typecast all scalar values to string.
        foreach ($data as &$value) {
            if (!is_scalar($value)) {
                continue;
            }
            $value = (string) $value;
        }
        unset($value);
        // Reorder and convert data to JSON string.
        $data = json_encode(Utils::reorderByHashCode($data));
        // Return value must be reordered.
        return Utils::reorderByHashCode([
            'ig_sig_key_version' => Constants::SIG_KEY_VERSION,
            'signed_body'        => self::generateSignature($data).'.'.$data,
        ]);
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_FOREACH
        (AST_VAR)
        (AST_REF
            (AST_VAR))
        (NULL)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_CALL
                            (
                                (AST_VAR))))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CAST
                    (AST_VAR)))))
    (AST_UNSET
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_VAR))))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CLASS_CONST
                            (SCALAR))
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR))
                            (AST_VAR))
                        (SCALAR)))))))