||||||||    protected function _getProxyConnector(
        $proxyAddress,
        ConnectorInterface $connector,
        LoopInterface $loop)
    {
        if (strpos($proxyAddress, '://') === false) {
            $scheme = 'http';
        } else {
            $scheme = parse_url($proxyAddress, PHP_URL_SCHEME);
        }

        switch ($scheme) {
            case 'socks':
            case 'socks4':
            case 'socks4a':
            case 'socks5':
                return new SocksProxy($proxyAddress, $connector);
            case 'http':
                return new HttpConnectProxy($proxyAddress, $connector);
            case 'https':
                $ssl = new SecureConnector($connector, $loop, $this->_getSecureContext());

                return new HttpConnectProxy($proxyAddress, $ssl);
            default:
                throw new \InvalidArgumentException(sprintf('Unsupported proxy scheme: %s', $scheme));
        }
    }

    /**
     * Fetch secure context from parent Instagram object.
     *
     * @return array
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (SCALAR)))
                (AST_CONST))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (SCALAR))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST)))))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (SCALAR)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_METHOD_CALL
                                    (AST_VAR)))))
                    (AST_RETURN
                        (AST_NEW
                            (
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_THROW
                        (AST_NEW
                            (
                                (AST_CALL
                                    (
                                        (SCALAR)
                                        (AST_VAR)))))))))))