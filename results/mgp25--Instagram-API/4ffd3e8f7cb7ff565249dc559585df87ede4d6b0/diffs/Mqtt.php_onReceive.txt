||||||||    protected function _onReceive(
        Message $msg)
    {
        $topic = $msg->getTopic();
        $payload = zlib_decode($msg->getPayload());
        if ($payload === false) {
            $this->debug('Failed to inflate payload');

            return;
        }
        switch ($topic) {
            case self::PUBSUB_TOPIC:
            case self::PUBSUB_TOPIC_ID:
                $skywalker = new Client\Mqtt\Skywalker($payload);
                if (!in_array($skywalker->getType(), [Client\Mqtt\Skywalker::TYPE_DIRECT, Client\Mqtt\Skywalker::TYPE_LIVE])) {
                    $this->debug('Received skywalker message with unknown type %d', $skywalker->getType());

                    return;
                }
                $payload = $skywalker->getPayload();
                break;
            case self::SEND_MESSAGE_RESPONSE_TOPIC:
            case self::SEND_MESSAGE_RESPONSE_TOPIC_ID:
                break;
            default:
                $this->debug('Received message from unknown topic "%s"', $topic);

                return;
        }
        $this->_processMessage($payload);
    }

    /** {@inheritdoc} */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_METHOD_CALL
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_CONST))
            (
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (SCALAR)))
                (AST_RETURN
                    (NULL)))))
    (AST_SWITCH
        (AST_VAR)
        (AST_SWITCH_LIST
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW
                            (
                                (AST_VAR))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_CALL
                                    (
                                        (AST_METHOD_CALL
                                            (AST_VAR))
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (AST_CLASS_CONST
                                                    (SCALAR))
                                                (NULL))
                                            (AST_ARRAY_ELEM
                                                (AST_CLASS_CONST
                                                    (SCALAR))
                                                (NULL))))))
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)
                                        (AST_METHOD_CALL
                                            (AST_VAR))))
                                (AST_RETURN
                                    (NULL)))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR)))
            (AST_SWITCH_CASE
                (AST_CLASS_CONST
                    (SCALAR))
                (
                    (AST_BREAK
                        (NULL))))
            (AST_SWITCH_CASE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_RETURN
                        (NULL))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))