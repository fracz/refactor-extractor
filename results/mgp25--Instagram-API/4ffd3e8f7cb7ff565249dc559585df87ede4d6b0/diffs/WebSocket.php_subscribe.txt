||||||||    protected function _subscribe()
    {
        if ($this->_isSubscribed) {
            return;
        }
        $this->debug('Subscribing to "%s"', $this->_subscription->topic);
        $this->_sendCommand(Realtime::jsonEncode([
            'auth'     => $this->_subscription->auth,
            'command'  => self::COMMAND_SUBSCRIBE,
            'sequence' => $this->_subscription->sequence,
            'topic'    => $this->_subscription->topic,
        ]));
    }

    /**
     * Runs self::COMMAND_UNSUBSCRIBE.
     *
     * @param string $topic
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_CLASS_CONST
                                (SCALAR))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (SCALAR))))))))