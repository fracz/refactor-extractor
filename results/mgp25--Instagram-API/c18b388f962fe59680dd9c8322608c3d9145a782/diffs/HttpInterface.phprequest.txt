    public function request($endpoint, $post = null, $login = false)
    {
        if (!$this->parent->isLoggedIn && !$login) {
            throw new InstagramException("Not logged in\n");

            return;
        }

        $headers = [
        'Connection: close',
        'Accept: */*',
        'X-IG-Capabilities: 3QI=',
        'Content-type: application/x-www-form-urlencoded; charset=UTF-8',
        'Cookie2: $Version=1',
        'Accept-Language: en-US',
    ];

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, Constants::API_URL.$endpoint);
        curl_setopt($ch, CURLOPT_USERAGENT, $this->userAgent);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($ch, CURLOPT_VERBOSE, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, $this->verifyPeer);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, $this->verifyHost);
        curl_setopt($ch, CURLOPT_COOKIEFILE, $this->parent->IGDataPath.$this->parent->username.'-cookies.dat');
        curl_setopt($ch, CURLOPT_COOKIEJAR, $this->parent->IGDataPath.$this->parent->username.'-cookies.dat');


        if ($post) {
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
        }

        if ($this->parent->proxy) {
            curl_setopt($ch, CURLOPT_PROXY, $this->parent->proxyHost);
            if ($this->parent->proxyAuth) {
                curl_setopt($ch, CURLOPT_PROXYUSERPWD, $this->parent->proxyAuth);
            }
        }

        $resp = curl_exec($ch);
        $header_len = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
        $header = substr($resp, 0, $header_len);
        $body = substr($resp, $header_len);

        if ($this->parent->debug) {
            if ($post) {
                echo Utils::colouredString('POST:  ', 'light_blue').$endpoint."\n";
            } else {
                echo Utils::colouredString('GET:  ', 'light_blue').$endpoint."\n";
            }
            if (!is_null($post)) {
                if (!is_array($post)) {
                    echo 'DATA: '.urldecode($post)."\n";
                }
            }
            $bytes = Utils::formatBytes(curl_getinfo($ch, CURLINFO_SIZE_DOWNLOAD));
            $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
            echo Utils::colouredString("← $httpCode \t $bytes", 'green')."\n";

            if ($this->parent->truncatedDebug && strlen($body) > 1000) {
                echo Utils::colouredString('RESPONSE: ', 'cyan').substr($body, 0, 1000)."...\n\n";
            } else {
                echo Utils::colouredString('RESPONSE: ', 'cyan').$body."\n\n";
            }
        }

        curl_close($ch);

        return [$header, json_decode($body, true)];
    }

||||||||    public function request($endpoint, $post = null, $login = false)
    {
        if (!$this->parent->isLoggedIn && !$login) {
            throw new InstagramException("Not logged in\n");

            return;
        }

        $headers = [
        'Connection: close',
        'Accept: */*',
        'X-IG-Capabilities: 3QI=',
        'Content-type: application/x-www-form-urlencoded; charset=UTF-8',
        'Cookie2: $Version=1',
        'Accept-Language: en-US',
    ];

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, Constants::API_URL.$endpoint);
        curl_setopt($ch, CURLOPT_USERAGENT, $this->userAgent);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($ch, CURLOPT_VERBOSE, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, $this->verifyPeer);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, $this->verifyHost);
        curl_setopt($ch, CURLOPT_COOKIEFILE, $this->parent->IGDataPath.$this->parent->username.'-cookies.dat');
        curl_setopt($ch, CURLOPT_COOKIEJAR, $this->parent->IGDataPath.$this->parent->username.'-cookies.dat');


        if ($post) {
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
        }

        if ($this->parent->proxy) {
            curl_setopt($ch, CURLOPT_PROXY, $this->parent->proxyHost);
            if ($this->parent->proxyAuth) {
                curl_setopt($ch, CURLOPT_PROXYUSERPWD, $this->parent->proxyAuth);
            }
        }

        $resp = curl_exec($ch);
        $header_len = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
        $header = substr($resp, 0, $header_len);
        $body = substr($resp, $header_len);

        if ($this->parent->debug) {
            if ($post) {
                if (php_sapi_name() == "cli") {
                    $method = Utils::colouredString('POST:  ', 'light_blue');
                } else {
                    $method = 'POST:  ';
                }
                echo $method.$endpoint."\n";
            } else {
                if (php_sapi_name() == "cli") {
                    $method = Utils::colouredString('GET:  ', 'light_blue');
                } else {
                    $method = 'GET:  ';
                }
                echo $method.$endpoint."\n";
            }
            if (!is_null($post)) {
                if (!is_array($post)) {
                    echo 'DATA: '.urldecode($post)."\n";
                }
            }
            $bytes = Utils::formatBytes(curl_getinfo($ch, CURLINFO_SIZE_DOWNLOAD));
            $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
            if (php_sapi_name() == "cli") {
                echo Utils::colouredString("← $httpCode \t $bytes", 'green')."\n";
            } else {
                echo "← $httpCode \t $bytes\n";
            }

            if ($this->parent->truncatedDebug && strlen($body) > 1000) {
                if (php_sapi_name() == "cli") {
                    $res = Utils::colouredString('RESPONSE: ', 'cyan');
                } else {
                    $res = 'RESPONSE: ';
                }
                echo $res.substr($body, 0, 1000)."...\n\n";
            } else {
                if (php_sapi_name() == "cli") {
                    $res = Utils::colouredString('RESPONSE: ', 'cyan');
                } else {
                    $res = 'RESPONSE: ';
                }
                echo $res.$body."\n\n";
            }
        }

        curl_close($ch);

        return [$header, json_decode($body, true)];
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_CONST)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))
                                        (AST_VAR))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (
                                        (AST_ECHO
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST))))
                (AST_ECHO
                    (AST_BINARY_OP
                        (AST_STATIC_CALL
                            (
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR))
                                (SCALAR)))
                        (SCALAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)))
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_STATIC_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)))
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (NULL)))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (AST_UNARY_OP
                    (AST_VAR)))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (SCALAR))))
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_CLASS_CONST
                    (SCALAR))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_VAR)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_CONST)))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_PROP
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_CALL
        (
            (AST_VAR)
            (AST_CONST)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR)))
                    (AST_PROP
                        (AST_PROP
                            (AST_VAR))))
                (SCALAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_CONST)))
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_VAR))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_PROP
                                (AST_VAR)))
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST)
                                    (AST_PROP
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_CONST))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_IF
                    (AST_IF_ELEM
                        (AST_VAR)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_UNARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR))))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_CALL
                                            (
                                                (AST_VAR))))
                                    (
                                        (AST_ECHO
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))
                                                (SCALAR)))))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_CONST))))))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_CONST))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_CALL)
                            (SCALAR))
                        (
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_STATIC_CALL
                                        (
                                            (AST_ENCAPS_LIST
                                                (SCALAR)
                                                (AST_VAR)
                                                (SCALAR)
                                                (AST_VAR))
                                            (SCALAR)))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_ECHO
                                (AST_ENCAPS_LIST
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR)
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_PROP
                                (AST_PROP
                                    (AST_VAR)))
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (SCALAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (AST_VAR)
                                                (SCALAR)
                                                (SCALAR))))
                                    (SCALAR)))))
                    (AST_IF_ELEM
                        (NULL)
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_BINARY_OP
                                        (AST_CALL)
                                        (SCALAR))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_STATIC_CALL
                                                (
                                                    (SCALAR)
                                                    (SCALAR))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (SCALAR)))))
                            (AST_ECHO
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_VAR)
                                        (AST_VAR))
                                    (SCALAR)))))))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_RETURN
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_VAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_CONST)))
                (NULL)))))