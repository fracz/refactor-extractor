	protected function _attributes($params, $method = null, array $options = array()) {
		if (!is_array($params)) {
			return empty($params) ? '' : ' ' . $params;
		}
		$defaults = array('escape' => true, 'prepend' => ' ', 'append' => '');
		$options += $defaults;
		$result = array();

		foreach ($params as $key => $value) {
			$result[] = $this->_attribute($key, $value, $options);
		}
		return $result ? $options['prepend'] . implode(' ', $result) . $options['append'] : '';
	}

	/**
	 * Convert a key/value pair to a valid HTML attribute.
	 *
	 * @param string $key The key name of the HTML attribute.
	 * @param mixed $value The HTML attribute value.
	 * @param array $options The options used when converting the key/value pair to attributes:
	 *              - `'escape'` _boolean_: Indicates whether `$key` and `$value` should be
	 *                HTML-escaped. Defaults to `true`.
	 *              - `'format'` _string_: The format string. Defaults to `'%s="%s"'`.
	 * @return string Returns an HTML attribute/value pair, in the form of `'$key="$value"'`.
	 */
||||||||	protected function _attributes($params, $method = null, array $options = array()) {
		if (!is_array($params)) {
			return !$params ? '' : ' ' . $params;
		}
		$defaults = array('escape' => true, 'prepend' => ' ', 'append' => '');
		$options += $defaults;
		$result = array();

		foreach ($params as $key => $value) {
			$result[] = $this->_attribute($key, $value, $options);
		}
		return $result ? $options['prepend'] . implode(' ', $result) . $options['append'] : '';
	}

	/**
	 * Convert a key/value pair to a valid HTML attribute.
	 *
	 * @param string $key The key name of the HTML attribute.
	 * @param mixed $value The HTML attribute value.
	 * @param array $options The options used when converting the key/value pair to attributes:
	 *              - `'escape'` _boolean_: Indicates whether `$key` and `$value` should be
	 *                HTML-escaped. Defaults to `true`.
	 *              - `'format'` _string_: The format string. Defaults to `'%s="%s"'`.
	 * @return string Returns an HTML attribute/value pair, in the form of `'$key="$value"'`.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_EMPTY
                            (AST_VAR))
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_CONDITIONAL
                        (AST_UNARY_OP
                            (AST_VAR))
                        (SCALAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (NULL))
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_VAR)
            (AST_BINARY_OP
                (AST_BINARY_OP
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CALL
                        (
                            (SCALAR)
                            (AST_VAR))))
                (AST_DIM
                    (AST_VAR)
                    (SCALAR)))
            (SCALAR))))