	public static function set($env, $config = null) {
		if (is_null($config)) {
			switch(true) {
				case is_object($env) || is_array($env):
					static::$_current = static::_detector()->__invoke($env);
				break;
				case isset(static::$_configurations[$env]):
					static::$_current = $env;
				break;
			}
			return;
		}

		if (isset(static::$_configurations[$env]) && $base = static::$_configurations[$env]) {
			return static::$_configurations[$env] = Set::merge($base, $config);
		}
	}

||||||||	public static function set($env, $config = null) {
		if (is_null($config)) {
			switch(true) {
				case is_object($env) || is_array($env):
					static::$_current = static::_detector()->__invoke($env);
				break;
				case isset(static::$_configurations[$env]):
					static::$_current = $env;
				break;
			}
			return;
		}
		if (isset(static::$_configurations[$env])) {
			$base = static::$_configurations[$env];
			return static::$_configurations[$env] = Set::merge($base, $config);
		}
	}

	/**
	 * Accessor method for `Environment::$_detector`. If `$_detector` is unset, returns the default
	 * detector built into the class. For more information on setting and using `$_detector`, see
	 * the documentation for `Environment::is()`. The `_detector()` method is called at the
	 * beginning of the application's life-cycle, when `Environment::set()` is passed either an
	 * instance of a `Request` object, or the `$_SERVER` or `$_ENV` array. This object (or array)
	 * is then passed onto `$_detector`, which returns the correct environment.
	 *
	 * @see lithium\core\Environment::is()
	 * @see lithium\core\Environment::set()
	 * @see lithium\core\Environment::$_detector
	 * @return object Returns a callable object (anonymous function) which detects the application's
	 *         current environment.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_SWITCH
                    (AST_CONST)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_ISSET
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_VAR))
                                (AST_BREAK
                                    (NULL))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))
            (
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)))
            (
                (AST_SWITCH
                    (AST_CONST)
                    (AST_SWITCH_LIST
                        (AST_SWITCH_CASE
                            (AST_BINARY_OP
                                (AST_CALL
                                    (
                                        (AST_VAR)))
                                (AST_CALL
                                    (
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_METHOD_CALL
                                        (AST_STATIC_CALL)
                                        (
                                            (AST_VAR))))
                                (AST_BREAK
                                    (NULL))))
                        (AST_SWITCH_CASE
                            (AST_ISSET
                                (AST_DIM
                                    (AST_STATIC_PROP)
                                    (AST_VAR)))
                            (
                                (AST_ASSIGN
                                    (AST_STATIC_PROP)
                                    (AST_VAR))
                                (AST_BREAK
                                    (NULL))))))
                (AST_RETURN
                    (NULL)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR)))
                (AST_RETURN
                    (AST_ASSIGN
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (AST_VAR))
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)))))))))