||||||||	public static function rules($name = null) {
		if (!$name) {
			return array_keys(static::$_rules);
		}
		return isset(static::$_rules[$name]) ? static::$_rules[$name] : null;
	}

	/**
	 * Runs pre- or post-filters for a given rule and returns the result.
	 *
	 * If a pre-filter returns true or false, the validation immediately succeeds.  If a pre-filter
	 * returns null, validation continues.  If a pre-filter returns any other value, the value to be
	 * validated is modified, and all subsequent filters and validation rules will run against this
	 * new value.
	 *
	 * If a post-filter returns any true value, validation succeeds, or continues to the next
	 * filter.  If a post-filter returns any false value, validation immediately fails.
	 *
	 * Both pre- and post-filters take the same 3 parameters:
	 * - `$value`: The value to be validated.
	 * - `$format`: The format or list of formats against which this rule is being validated,
	 *   or null, if the rule is not format-dependent.
	 * - `$options`: Any other options associated with the rule.
	 *
	 * @param string $type Either 'before' or 'after', that indicate which filters to run.
	 * @param string $rule The name of the rule to run the filters for.
	 * @param string $params An array containing `'value'`, `'format'` and `'options'` keys (in
	 *               that order), corresponding to the parameters required by the filters.
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_VAR))
            (
                (AST_RETURN
                    (AST_CALL
                        (
                            (AST_STATIC_PROP)))))))
    (AST_RETURN
        (AST_CONDITIONAL
            (AST_ISSET
                (AST_DIM
                    (AST_STATIC_PROP)
                    (AST_VAR)))
            (AST_DIM
                (AST_STATIC_PROP)
                (AST_VAR))
            (AST_CONST))))