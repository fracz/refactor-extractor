	public static function check($values, $rules, $options = array()) {
		$rule = 'isNotEmpty';
		$__check = function($field, $rules) use ($values, $rule, &$__check) {
			$data = isset($values[$field]) ? array($values[$field]) : array();
			$errors = array();
			if (is_array($rules)) {
				if (!empty($rules[0])) {
					$multiple = array();
					foreach ($rules as $rule) {
						$multiple[] = $__check($field, $rule);
					}
					return array_values(array_filter($multiple));
				} else if (!empty($rules['rule'])) {
					if (is_string($rules['rule'])) {
						$rule = $rules['rule'];
					} else {
						$rule = array_shift((array) $rules['rule']);
						$data += $rules['rule'];
					}
				}
			}

			if (Validator::invokeMethod($rule, $data) !== true) {
				if (is_string($rules)) {
					return $rules;
				}
				if (!empty($rules['message'])) {
					return $rules['message'];
				}
				return "{$field} is invalid.";
			}
			return null;
		};
		$errors = array();
		foreach ($rules as $field => $rules) {
			$errors[$field] = $__check($field, $rules);
		}
		return array_filter($errors);
	}

	/**
	 * Adds to or replaces built-in validation rules specified in `Validator::$_rules`.  Any new
	 * validation rules created are automatically callable as validation methods.
	 *
	 * For example:
	 * {{{
	 * Validator::add('zeroToNine', '/^[0-9]$/');
	 * $isValid = Validator::isZeroToNine("5"); // true
	 * $isValid = Validator::isZeroToNine("20"); // false
	 * }}}
	 *
	 * Alternatively, the first parameter may be an array of rules expressed as key/value pairs,
	 * as in the following:
	 * {{{
	 * Validator::add(array(
	 * 	'zeroToNine' => '/^[0-9]$/',
	 * 	'tenToNineteen' => '/^1[0-9]$/',
	 * ));
	 * }}}
	 *
	 * @param mixed $name The name of the validation rule (string), or an array of key/value pairs
	 *              of names and rules.
	 * @param string $rule If $name is a string, this should be a string regular expression, or a
	 *               closure that returns a boolean indicating success. Should be left blank if
	 *               `$name` is an array.
	 * @param array $options The default options for validating this rule. An option which applies
	 *              to all regular expression rules is `'contains'` which, if set to true, allows
	 *              validated values to simply _contain_ a match to a rule, rather than exactly
	 *              matching it in whole.
	 * @return void
	 */
||||||||	public static function check($values, $rules) {
		$defaults = array(
			'notEmpty',
			'message' => null,
			'required' => true,
			'skipEmpty' => false,
			'format' => 'any',
			'last' => false
		);
		$errors = array();

		foreach ($rules as $field => $rules) {
			$rules = is_string($rules) ? array('message' => $rules) : $rules;
			$rules = is_array(current($rules)) ? $rules : array($rules);
			$errors[$field] = array();

			foreach ($rules as $key => $rule) {
				$rule += $defaults;
				list($name) = $rule;

				if (!isset($values[$field])) {
					if ($rule['required']) {
						$errors[$field][] = $rule['message'] ?: $key;
					}
					continue;
				}
				if (empty($values[$field]) && $rules['skipEmpty']) {
					continue;
				}
				if (!static::rule($name, $values[$field], $rule['format'], $rule)) {
					$errors[$field][] = $rule['message'] ?: $key;
				}
			}
		}
		return array_filter($errors);
	}

	/**
	 * Adds to or replaces built-in validation rules specified in `Validator::$_rules`.  Any new
	 * validation rules created are automatically callable as validation methods.
	 *
	 * For example:
	 * {{{
	 * Validator::add('zeroToNine', '/^[0-9]$/');
	 * $isValid = Validator::isZeroToNine("5"); // true
	 * $isValid = Validator::isZeroToNine("20"); // false
	 * }}}
	 *
	 * Alternatively, the first parameter may be an array of rules expressed as key/value pairs,
	 * as in the following:
	 * {{{
	 * Validator::add(array(
	 * 	'zeroToNine' => '/^[0-9]$/',
	 * 	'tenToNineteen' => '/^1[0-9]$/',
	 * ));
	 * }}}
	 *
	 * @param mixed $name The name of the validation rule (string), or an array of key/value pairs
	 *              of names and rules.
	 * @param string $rule If $name is a string, this should be a string regular expression, or a
	 *               closure that returns a boolean indicating success. Should be left blank if
	 *               `$name` is an array.
	 * @param array $options The default options for validating this rule. An option which applies
	 *              to all regular expression rules is `'contains'` which, if set to true, allows
	 *              validated values to simply _contain_ a match to a rule, rather than exactly
	 *              matching it in whole.
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CLOSURE
            (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
            (AST_CLOSURE_USES
                (AST_CLOSURE_VAR)
                (AST_CLOSURE_VAR)
                (AST_CLOSURE_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_CONDITIONAL
                        (AST_ISSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_DIM
                                    (AST_VAR)
                                    (AST_VAR))
                                (NULL)))
                        (AST_ARRAY)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_ARRAY))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_ASSIGN
                                            (AST_VAR)
                                            (AST_ARRAY))
                                        (AST_FOREACH
                                            (AST_VAR)
                                            (AST_VAR)
                                            (NULL)
                                            (
                                                (AST_ASSIGN
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (NULL))
                                                    (AST_CALL
                                                        (AST_VAR)
                                                        (
                                                            (AST_VAR)
                                                            (AST_VAR))))))
                                        (AST_RETURN
                                            (AST_CALL
                                                (
                                                    (AST_CALL
                                                        (
                                                            (AST_VAR))))))))
                                (AST_IF_ELEM
                                    (NULL)
                                    (
                                        (AST_IF
                                            (AST_IF_ELEM
                                                (AST_UNARY_OP
                                                    (AST_EMPTY
                                                        (AST_DIM
                                                            (AST_VAR)
                                                            (SCALAR))))
                                                (
                                                    (AST_IF
                                                        (AST_IF_ELEM
                                                            (AST_CALL
                                                                (
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR))))
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR)))))
                                                        (AST_IF_ELEM
                                                            (NULL)
                                                            (
                                                                (AST_ASSIGN
                                                                    (AST_VAR)
                                                                    (AST_CALL
                                                                        (
                                                                            (AST_CAST
                                                                                (AST_DIM
                                                                                    (AST_VAR)
                                                                                    (SCALAR))))))
                                                                (AST_ASSIGN_OP
                                                                    (AST_VAR)
                                                                    (AST_DIM
                                                                        (AST_VAR)
                                                                        (SCALAR)))))))))))))))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_BINARY_OP
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)))
                            (AST_CONST))
                        (
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_CALL
                                        (
                                            (AST_VAR)))
                                    (
                                        (AST_RETURN
                                            (AST_VAR)))))
                            (AST_IF
                                (AST_IF_ELEM
                                    (AST_UNARY_OP
                                        (AST_EMPTY
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))
                                    (
                                        (AST_RETURN
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))))))
                            (AST_RETURN
                                (AST_ENCAPS_LIST
                                    (AST_VAR)
                                    (SCALAR))))))
                (AST_RETURN
                    (AST_CONST)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_VAR))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (SCALAR)
                (NULL))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))
            (AST_ARRAY_ELEM
                (SCALAR)
                (SCALAR))
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_VAR)))
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (SCALAR)))
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CONDITIONAL
                    (AST_CALL
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))))
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_VAR)
                            (NULL)))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_ARRAY))
            (AST_FOREACH
                (AST_VAR)
                (AST_VAR)
                (AST_VAR)
                (
                    (AST_ASSIGN_OP
                        (AST_VAR)
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (NULL)))
                        (AST_VAR))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_ISSET
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR))))
                            (
                                (AST_IF
                                    (AST_IF_ELEM
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (
                                            (AST_ASSIGN
                                                (AST_DIM
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (AST_VAR))
                                                    (NULL))
                                                (AST_CONDITIONAL
                                                    (AST_DIM
                                                        (AST_VAR)
                                                        (SCALAR))
                                                    (NULL)
                                                    (AST_VAR))))))
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_BINARY_OP
                                (AST_EMPTY
                                    (AST_DIM
                                        (AST_VAR)
                                        (AST_VAR)))
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR)))
                            (
                                (AST_CONTINUE
                                    (NULL)))))
                    (AST_IF
                        (AST_IF_ELEM
                            (AST_UNARY_OP
                                (AST_STATIC_CALL
                                    (
                                        (AST_VAR)
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (AST_VAR))))
                            (
                                (AST_ASSIGN
                                    (AST_DIM
                                        (AST_DIM
                                            (AST_VAR)
                                            (AST_VAR))
                                        (NULL))
                                    (AST_CONDITIONAL
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))
                                        (NULL)
                                        (AST_VAR))))))))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_VAR)))))