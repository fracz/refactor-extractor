	public static function path($class, $options = array()) {
		if (array_key_exists($class, static::$_cachedPaths)) {
			return static::$_cachedPaths[$class];
		}
		$class = ($class[0] == '\\') ? substr($class, 1) : $class;

		foreach (static::$_configurations as $name => $options) {
			if (strpos($class, $options['prefix']) !== 0) {
				continue;
			}

			if (!empty($options['transform'])) {
				if (is_object($options['transform'])) {
					return $options['transform']($class, $options);
				}
				list($match, $replace) = $options['transform'];
				return preg_replace($match, $replace, $class);
			}
			$path = str_replace("\\", '/', substr($class, strlen($options['prefix'])));
			return $options['path'] . '/' . $path . $options['suffix'];
		}
	}

	/**
	 * Performs service location for an object of a specific type.
	 *
	 * @param string $type
	 * @param string $name
	 * @return string
	 * @see lithium\core\Libraries::$_classPaths
	 */
||||||||	public static function path($class, $options = array()) {
		if (array_key_exists($class, static::$_cachedPaths)) {
			return static::$_cachedPaths[$class];
		}
		$class = ($class[0] == '\\') ? substr($class, 1) : $class;

		foreach (static::$_configurations as $name => $params) {
			$options += $params;
			if (strpos($class, $options['prefix']) !== 0) {
				continue;
			}
			if (!empty($options['transform'])) {
				if (is_callable($options['transform'])) {
					return $options['transform']($class, $options);
				}
				list($match, $replace) = $options['transform'];
				return preg_replace($match, $replace, $class);
			}
			$path = str_replace("\\", '/', substr($class, strlen($options['prefix'])));
			return $options['path'] . '/' . $path . $options['suffix'];
		}
	}

	/**
	 * Performs service location lookups by library, based on the library's `'defer'` flag.
	 * Libraries with `'defer'` set to `true` will be searched last when looking up services.
	 *
	 * @param boolean $defer A boolean flag indicating which libraries to search, either the ones
	 *                with the `'defer'` flag set, or the ones without.
	 * @param array $paths The list of paths to be searched for the given service (class).  These
	 *              are defined in `lithium\core\Libraries::$_classPaths`, and are organized by
	 *              class type.
	 * @param array $params The list of insert parameters to be injected into each path format
	 *              string when searching for classes.
	 * @param array $options
	 * @return string Returns a class path as a string if a given class is found, or null if no
	 *                class in any path matching any of the parameters is located.
	 * @see lithium\core\Libraries::$_classPaths
	 * @see lithium\core\Libraries::locate()
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_RETURN
                                        (AST_CALL
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))))
                        (AST_ASSIGN
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))))
            (AST_RETURN
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_CALL
                (
                    (AST_VAR)
                    (AST_STATIC_PROP)))
            (
                (AST_RETURN
                    (AST_DIM
                        (AST_STATIC_PROP)
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (AST_CALL
                (
                    (AST_VAR)
                    (SCALAR)))
            (AST_VAR)))
    (AST_FOREACH
        (AST_STATIC_PROP)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_DIM
                                    (AST_VAR)
                                    (SCALAR))))
                        (SCALAR))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_EMPTY
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))
                                (
                                    (AST_RETURN
                                        (AST_CALL
                                            (AST_DIM
                                                (AST_VAR)
                                                (SCALAR))
                                            (
                                                (AST_VAR)
                                                (AST_VAR)))))))
                        (AST_ASSIGN
                            (AST_ARRAY
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL))
                                (AST_ARRAY_ELEM
                                    (AST_VAR)
                                    (NULL)))
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_RETURN
                            (AST_CALL
                                (
                                    (AST_VAR)
                                    (AST_VAR)
                                    (AST_VAR)))))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (SCALAR)
                        (AST_CALL
                            (
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR)))))))))
            (AST_RETURN
                (AST_BINARY_OP
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR))
                            (SCALAR))
                        (AST_VAR))
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))))))