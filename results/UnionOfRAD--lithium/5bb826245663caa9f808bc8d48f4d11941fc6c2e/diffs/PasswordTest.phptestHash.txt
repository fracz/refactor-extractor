||||||||	public function testHash() {
		$this->skipIf(!CRYPT_BLOWFISH, 'Blowfish is not supported.');

		$salt = '$2a$07$l1th1um1saw3some12345678$';
		$expected = '$2a$07$l1th1um1saw3some12345uDt5Wuw5uzI5lCIn3HM1QkB7cJLou4Hy';
		$result = Password::hash($this->_password, $salt);
		$this->assertEqual($expected, $result);

		$result = Password::hash($this->_password);
		$this->assertNotEqual($expected, $result);
	}

	/**
	 * Tests the `Password::check()` method to make sure that it returns
	 * either true or false, depending on the input.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))