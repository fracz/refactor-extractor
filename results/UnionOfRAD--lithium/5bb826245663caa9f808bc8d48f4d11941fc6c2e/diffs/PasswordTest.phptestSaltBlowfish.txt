||||||||	public function testSaltBlowfish() {
		$this->skipIf(!CRYPT_BLOWFISH, 'Blowfish is not supported.');

		$saltPattern = "{^\\$2a\\$06\\$[0-9A-Za-z./]{22}$}";
		$hashPattern = "{^\\$2a\\$06\\$[0-9A-Za-z./]{53}$}";

		$log2 = 6;
		$salt = Password::salt('bf', $log2);
		$this->assertPattern($saltPattern, $salt);
		$this->assertNotEqual($salt, Password::salt('bf', $log2));

		$hash = Password::hash($this->_password, $salt);
		$hash2 = Password::hash($this->_password, Password::salt('bf', $log2));
		$this->assertPattern($hashPattern, $hash);
		$this->assertNotEqual($hash, $hash2);

		$maxLength = 72;
		$salt = Password::salt('bf');
		$password = str_repeat('a', $maxLength);
		$expected = Password::hash($password, $salt);
		$result = Password::hash($password . 'a',  $salt);
		$this->assertIdentical($expected, $result);
	}

	/**
	 * Tests salting passwords with the Extended-DES algorithm.
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_UNARY_OP
                (AST_CONST))
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_STATIC_CALL
                (
                    (SCALAR)
                    (AST_VAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_PROP
                    (AST_VAR))
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_BINARY_OP
                    (AST_VAR)
                    (SCALAR))
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))