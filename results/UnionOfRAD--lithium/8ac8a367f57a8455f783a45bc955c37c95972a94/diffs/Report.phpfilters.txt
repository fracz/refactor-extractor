	public function filters($separator = null) {
		$output = false;
		foreach ($this->results['filters'] as $filter => $analysis) {
			$filterClass = explode("\\", $filter);
			$filterClass = array_pop($filterClass);
			$output .= $separator . $this->render(strtolower($filterClass), compact('analysis'));
		}

		return $output;
	}
}

?>||||||||	public function filters(array $filters = array()) {
		if (!empty($this->_filters) && empty($filters)) {
			return $this->_filters;
		}
		$filters += (array) $this->_config['filters'];
		$results = array();
		foreach ($filters as $filter => $options) {
			if (!$class = Libraries::locate('test.filter', $filter)) {
				throw new Exception("{$class} is not a valid test filter.");
			}
			$options['name'] = strtolower(join('', array_slice(explode("\\", $class), -1)));
			$results[$class] = $options + array('apply' => array(), 'analyze' => array());
		}
		return $this->_filters = $results;
	}
}

?>||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONST))
    (AST_FOREACH
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR))
        (AST_VAR)
        (AST_VAR)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (SCALAR)
                        (AST_VAR))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR))))
            (AST_ASSIGN_OP
                (AST_VAR)
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_RETURN
        (AST_VAR)))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPEPARAM_DEFAULT)
(
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_PROP
                            (AST_VAR))))
                (AST_EMPTY
                    (AST_VAR)))
            (
                (AST_RETURN
                    (AST_PROP
                        (AST_VAR))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CAST
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_ENCAPS_LIST
                                        (AST_VAR)
                                        (SCALAR))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (AST_CALL
                    (
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (AST_VAR)))
                                        (AST_UNARY_OP
                                            (SCALAR)))))))))
            (AST_ASSIGN
                (AST_DIM
                    (AST_VAR)
                    (AST_VAR))
                (AST_BINARY_OP
                    (AST_VAR)
                    (AST_ARRAY
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR))
                        (AST_ARRAY_ELEM
                            (AST_ARRAY)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_ASSIGN
            (AST_PROP
                (AST_VAR))
            (AST_VAR))))