	public function set($values) {
		$this->__set($values);
	}

	/**
	 * Allows document fields to be accessed as array keys, i.e. `$document['_id']`.
	 *
	 * @param mixed $offset String or integer indicating the offset or index of a document in a set,
	 *              or the name of a field in an individual document.
	 * @return mixed Returns either a sub-object in the document, or a scalar field value.
	 */
||||||||	public function set(array $data, array $options = array()) {
		$defaults = array('init' => false);
		$options += $defaults;

		foreach ($data as $key => $val) {
			if (strpos($key, '.')) {
				$this->_setNested($key, $val);
				unset($data[$key]);
			}
			unset($this->_increment[$key]);
		}

		if ($data && $model = $this->_model) {
			$pathKey = $this->_pathKey;
			$data = $model::connection()->cast($this, $data, compact('pathKey'));
		}

		foreach ($data as $key => $value) {
			if (is_a($value, __CLASS__)) {
				if (!$options['init']) {
					$value->_exists = false;
				}
				$value->_pathKey = ($this->_pathKey ? "{$this->_pathKey}." : '') . $key;
				$value->_model = $value->_model ?: $this->_model;
				$value->_schema = $value->_schema ?: $this->_schema;
			}
		}
		$this->_updated = $data + $this->_updated;
	}

	/**
	 * Allows document fields to be accessed as array keys, i.e. `$document['_id']`.
	 *
	 * @param mixed $offset String or integer indicating the offset or index of a document in a set,
	 *              or the name of a field in an individual document.
	 * @return mixed Returns either a sub-object in the document, or a scalar field value.
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (SCALAR)))
                    (
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (AST_VAR)))
                        (AST_UNSET
                            (AST_DIM
                                (AST_VAR)
                                (AST_VAR))))))
            (AST_UNSET
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (AST_VAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_VAR)
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR))))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_PROP
                        (AST_VAR)))
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_METHOD_CALL
                        (AST_STATIC_CALL
                            (AST_VAR))
                        (
                            (AST_VAR)
                            (AST_VAR)
                            (AST_CALL
                                (
                                    (SCALAR)))))))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (AST_VAR)
        (
            (AST_IF
                (AST_IF_ELEM
                    (AST_CALL
                        (
                            (AST_VAR)
                            (AST_MAGIC_CONST)))
                    (
                        (AST_IF
                            (AST_IF_ELEM
                                (AST_UNARY_OP
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR)))
                                (
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CONST)))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_BINARY_OP
                                (AST_CONDITIONAL
                                    (AST_PROP
                                        (AST_VAR))
                                    (AST_ENCAPS_LIST
                                        (AST_PROP
                                            (AST_VAR))
                                        (SCALAR))
                                    (SCALAR))
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_PROP
                                    (AST_VAR))
                                (NULL)
                                (AST_PROP
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_CONDITIONAL
                                (AST_PROP
                                    (AST_VAR))
                                (NULL)
                                (AST_PROP
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_BINARY_OP
            (AST_VAR)
            (AST_PROP
                (AST_VAR)))))