	public function testEnvWorking() {
		chdir(LITHIUM_APP_PATH . '/tmp');
		$request = new Request();

		$result = isset($request->env['working']);
		$this->assertTrue($result);

		$expected = LITHIUM_APP_PATH . '/tmp';
		$result = $request->env['working'];
		$this->assertEqual($expected, $result);
	}

||||||||	public function testEnvWorking() {
		chdir(LITHIUM_APP_PATH . '/tmp');
		$request = new Request();

		$expected = LITHIUM_APP_PATH . '/tmp';
		$result = $request->env('working');
		$this->assertEqual($expected, $result);
	}

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ISSET
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_PROP
                (AST_VAR))
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_CALL
        (
            (AST_BINARY_OP
                (AST_CONST)
                (SCALAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_CONST)
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR)
            (AST_VAR))))