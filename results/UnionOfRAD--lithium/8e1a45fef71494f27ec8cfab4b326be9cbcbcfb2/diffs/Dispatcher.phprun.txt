	public static function run($request = null, $options = array()) {
		$defaults = array();
		$options += $defaults;

		if (empty($request)) {
			$request = new static::$_classes['request']($options);
		}
		$router = static::$_classes['router'];
		$request->params = static::_applyRules($router::parse($request));
		$class = $request->params['command'] ?: '\lithium\console\Command';

		if ($class[0] !== '\\') {
			$class = Libraries::locate('commands', Inflector::camelize($class));
		}

		$isRun = (
			$request->params['action'] != 'run'
			&& !method_exists($class, $request->params['action'])
		);

		if ($isRun) {
			array_unshift($request->params['passed'], $request->params['action']);
			$request->params['action'] = 'run';
		}

		if (!class_exists($class)) {
			throw new UnexpectedValueException("Command $class not found");
		}

		$command = new $class(compact('request'));
		return $command($request->params['action'], $request->params['passed']);
	}

	/**
	 * Attempts to apply a set of formatting rules from `$_rules` to a `$params` array, where each
	 * formatting rule is applied if the key of the rule in `$_rules` is present and not empty in
	 * `$params`.  Also performs sanity checking against `$params` to ensure that no value
	 * matching a rule is present unless the rule check passes.
	 *
	 * @param array $params An array of route parameters to which rules will be applied.
	 * @return array Returns the $params array with formatting rules applied to array values.
	 */
||||||||	public static function run($request = null, $options = array()) {
		$defaults = array('request' => array());
		$options += $defaults;
		$classes = static::$_classes;
		$params = compact('request', 'options');

		return static::_filter(__METHOD__, $params, function($self, $params, $chain) use ($classes) {
			extract($params);

			$router = $classes['router'];
			$request = $request ?: new $classes['request']($options['request']);
			$request->params = $router::parse($request);
			$params = $self::invokeMethod('_applyRules', array($request->params));
			$callable = $self::invokeMethod('_callable', array($request, $params, $options));
			return $self::invokeMethod('_call', array($callable, $request, $params));
		});
	}

||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_IF
        (AST_IF_ELEM
            (AST_EMPTY
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_NEW
                        (AST_DIM
                            (AST_STATIC_PROP)
                            (SCALAR))
                        (
                            (AST_VAR)))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_DIM
            (AST_STATIC_PROP)
            (SCALAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (NULL)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_DIM
                    (AST_VAR)
                    (SCALAR))
                (SCALAR))
            (
                (AST_ASSIGN
                    (AST_VAR)
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_STATIC_CALL
                                (
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_BINARY_OP
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (SCALAR))
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR)))))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))
                        (AST_DIM
                            (AST_PROP
                                (AST_VAR))
                            (SCALAR))))
                (AST_ASSIGN
                    (AST_DIM
                        (AST_PROP
                            (AST_VAR))
                        (SCALAR))
                    (SCALAR)))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_CALL
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_ENCAPS_LIST
                                (SCALAR)
                                (AST_VAR)
                                (SCALAR))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW
            (AST_VAR)
            (
                (AST_CALL
                    (
                        (SCALAR))))))
    (AST_RETURN
        (AST_CALL
            (AST_VAR)
            (
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))
                (AST_DIM
                    (AST_PROP
                        (AST_VAR))
                    (SCALAR))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPEPARAM_DEFAULTNO_PARAM_TYPEPARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ARRAY)
                (SCALAR))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_VAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_PROP))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (SCALAR)
                (SCALAR))))
    (AST_RETURN
        (AST_STATIC_CALL
            (
                (AST_MAGIC_CONST)
                (AST_VAR)
                (AST_CLOSURE
                    (NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
                    (AST_CLOSURE_USES
                        (AST_CLOSURE_VAR))
                    (
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_DIM
                                (AST_VAR)
                                (SCALAR)))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_CONDITIONAL
                                (AST_VAR)
                                (NULL)
                                (AST_NEW
                                    (AST_DIM
                                        (AST_VAR)
                                        (SCALAR))
                                    (
                                        (AST_DIM
                                            (AST_VAR)
                                            (SCALAR))))))
                        (AST_ASSIGN
                            (AST_PROP
                                (AST_VAR))
                            (AST_STATIC_CALL
                                (AST_VAR)
                                (
                                    (AST_VAR))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_PROP
                                                (AST_VAR))
                                            (NULL))))))
                        (AST_ASSIGN
                            (AST_VAR)
                            (AST_STATIC_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))))))
                        (AST_RETURN
                            (AST_STATIC_CALL
                                (AST_VAR)
                                (
                                    (SCALAR)
                                    (AST_ARRAY
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))
                                        (AST_ARRAY_ELEM
                                            (AST_VAR)
                                            (NULL))))))))))))