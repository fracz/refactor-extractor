	protected function _init() {
		parent::_init();
		if ($this->_result) {
			$this->_columns = $this->_columnMap();
			if ($this->_query) {
				$columns = array_filter(array_keys($this->_columns));
				$this->_dependencies = Set::expand(Set::normalize($columns));
				$this->_keyIndex = $this->_keyIndex('');
			}
		}
	}

	/**
	 * Extract the next item from the result ressource and wraps it into a `Record` object.
	 *
	 * @return mixed Returns the next `Record` if exists. Returns `null` otherwise
	 */
||||||||	protected function _init() {
		parent::_init();

		if (!$this->_result) {
			return;
		}
		$this->_columns = $this->_columnMap();

		if (!$this->_query) {
			return;
		}
		$this->_keyIndex = $this->_keyIndex();

		$this->_dependencies = Set::expand(Set::normalize(
			array_filter(array_keys($this->_columns))
		));
		$this->_relationships = $this->_query->relationships();
	}

	/**
	 * Extracts the next item from the result resource and wraps it into a `Record` object.
	 *
	 * @return mixed Returns the next `Record` if exists. Returns `null` otherwise
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_PROP
                (AST_VAR))
            (
                (AST_ASSIGN
                    (AST_PROP
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)))
                (AST_IF
                    (AST_IF_ELEM
                        (AST_PROP
                            (AST_VAR))
                        (
                            (AST_ASSIGN
                                (AST_VAR)
                                (AST_CALL
                                    (
                                        (AST_CALL
                                            (
                                                (AST_PROP
                                                    (AST_VAR)))))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_STATIC_CALL
                                    (
                                        (AST_STATIC_CALL
                                            (
                                                (AST_VAR))))))
                            (AST_ASSIGN
                                (AST_PROP
                                    (AST_VAR))
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_PROP
                    (AST_VAR)))
            (
                (AST_RETURN
                    (NULL)))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_STATIC_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_CALL
                            (
                                (AST_CALL
                                    (
                                        (AST_PROP
                                            (AST_VAR)))))))))))
    (AST_ASSIGN
        (AST_PROP
            (AST_VAR))
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR)))))