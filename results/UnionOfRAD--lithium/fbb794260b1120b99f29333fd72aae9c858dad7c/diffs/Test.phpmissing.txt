	public function missing() {
		$tests = Group::all();
		$this->header('Classes with no test case');
		$classFilter = '/\w+Test$|webroot|index$|^app\\\\config|^app\\\\views/';
		$classes = array_diff(
			Libraries::find(true, array('exclude' => $classFilter, 'recursive' => true)),
			$tests
		);
		sort($classes);
		$this->out($classes);
	}

	/**
	 * Show included files.
	 *
	 * @return void
	 */
||||||||	public function missing() {
		$this->header('Classes with no test case');

		$classes = Libraries::find(true, array(
			'recursive' => true,
			'exclude' => '/\w+Test$|webroot|index$|^app\\\\config|^app\\\\views/'
		));
		$tests = Group::all();
		$classes = array_diff($classes, $tests);

		sort($classes);
		$this->out($classes);
	}

	/**
	 * Show included files.
	 *
	 * @return void
	 */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (SCALAR))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_STATIC_CALL
                    (
                        (AST_CONST)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (AST_VAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR)))))
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_CONST)
                (AST_ARRAY
                    (AST_ARRAY_ELEM
                        (AST_CONST)
                        (SCALAR))
                    (AST_ARRAY_ELEM
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR)
                (AST_VAR))))
    (AST_CALL
        (
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_VAR))))