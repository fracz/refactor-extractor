||||||||	protected function _exception($error) {
		$exception = array(
			"Exception thrown in  {$error['class']}::{$error['method']}() ",
			"on line {$error['line']}: ",
			"{$error['message']}",
		);
		if (isset($error['trace']) && !empty($error['trace'])) {
			$exception[] = "Trace: {$error['trace']}";
		}
		return join("\n", $exception);
	}

	/**
	 * undocumented function
	 *
	 * @param string $filters
	 * @return void
	 */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_ENCAPS_LIST
                    (SCALAR)
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (SCALAR))
                (NULL))
            (AST_ARRAY_ELEM
                (AST_ENCAPS_LIST
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (NULL))))
    (AST_IF
        (AST_IF_ELEM
            (AST_BINARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR)))
                (AST_UNARY_OP
                    (AST_EMPTY
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))
            (
                (AST_ASSIGN
                    (AST_DIM
                        (AST_VAR)
                        (NULL))
                    (AST_ENCAPS_LIST
                        (SCALAR)
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR)))))))
    (AST_RETURN
        (AST_CALL
            (
                (SCALAR)
                (AST_VAR)))))