    public static function loadFromComposerFile($baseDir)
    {
        $filesystem = new Filesystem();
        $composerFile = $baseDir . '/composer.json';
        if (!$filesystem->exists($composerFile)) {
            throw new RuntimeException(sprintf('The composer.json file could not be found at %s.', $baseDir));
        }

        $composerData = json_decode(file_get_contents($composerFile), true);
        if (!isset($composerData['extra'][self::CONFIG_NAMESPACE])) {
            throw new RuntimeException(sprintf('No configuration could be found. There is no %s key in the composer.json file', self::CONFIG_NAMESPACE));
        }

        return new self($composerData['extra'][self::CONFIG_NAMESPACE]);
    }

    /**
     * @param string $path path to grumphp.yml
     *
     * @return GrumPHP
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_BINARY_OP
            (AST_VAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_VAR)))))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CONST))))
    (AST_IF
        (AST_IF_ELEM
            (AST_UNARY_OP
                (AST_ISSET
                    (AST_DIM
                        (AST_DIM
                            (AST_VAR)
                            (SCALAR))
                        (AST_CLASS_CONST
                            (SCALAR)))))
            (
                (AST_THROW
                    (AST_NEW
                        (
                            (AST_CALL
                                (
                                    (SCALAR)
                                    (AST_CLASS_CONST
                                        (SCALAR))))))))))
    (AST_RETURN
        (AST_NEW
            (
                (AST_DIM
                    (AST_DIM
                        (AST_VAR)
                        (SCALAR))
                    (AST_CLASS_CONST
                        (SCALAR)))))))||||||||