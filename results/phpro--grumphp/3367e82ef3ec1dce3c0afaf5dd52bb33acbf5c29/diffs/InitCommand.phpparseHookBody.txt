    protected function parseHookBody($config, $hook, $templateFile)
    {
        $content = file_get_contents($templateFile);
        $replacements = array(
          '$(HOOK_COMMAND)' => $this->generateHookCommand($config, 'git:' . $hook),
        );

        return str_replace(array_keys($replacements), array_values($replacements), $content);
    }

    /**
     * @param GrumPHP $config
     * @param $command
     *
     * @return string
     */
||||||||    protected function parseHookBody($hook, $templateFile)
    {
        $content = file_get_contents($templateFile);
        $replacements = array(
          '$(HOOK_COMMAND)' => $this->generateHookCommand('git:' . $hook),
        );

        return str_replace(array_keys($replacements), array_values($replacements), $content);
    }

    /**
     * @param $command
     *
     * @return string
     */
||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_VAR)
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (SCALAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR)))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_CALL
            (
                (AST_VAR))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_ARRAY
            (AST_ARRAY_ELEM
                (AST_METHOD_CALL
                    (AST_VAR)
                    (
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))))
                (SCALAR))))
    (AST_RETURN
        (AST_CALL
            (
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_CALL
                    (
                        (AST_VAR)))
                (AST_VAR)))))