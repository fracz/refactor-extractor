    function it_returns_all_task_result_messages(TaskInterface $task, ContextInterface $context)
    {
        $aTask = $task->getWrappedObject();
        $aContext = $context->getWrappedObject();
        $this->add(new TaskResult(TaskResult::FAILED, $aTask, $aContext, 'failed message'));
        $this->add(new TaskResult(TaskResult::PASSED, $aTask, $aContext));
        $this->add(new TaskResult(TaskResult::FAILED, $aTask, $aContext, 'another failed message'));

        $this->getAllMessages()->shouldReturn(array(
            'failed message',
            null,
            'another failed message',
        ));
    }

||||||||    function it_returns_all_task_result_messages(TaskInterface $task, ContextInterface $context)
    {
        $aTask = $task->getWrappedObject();
        $aContext = $context->getWrappedObject();
        $this->add(TaskResult::createFailed($aTask, $aContext, 'failed message'));
        $this->add(TaskResult::createPassed($aTask, $aContext));
        $this->add(TaskResult::createFailed($aTask, $aContext, 'another failed message'));

        $this->getAllMessages()->shouldReturn(array(
            'failed message',
            null,
            'another failed message',
        ));
    }

||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_NEW
                (
                    (AST_CLASS_CONST
                        (SCALAR))
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULTPARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_STATIC_CALL
                (
                    (AST_VAR)
                    (AST_VAR)
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_VAR))
        (
            (AST_ARRAY
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))
                (AST_ARRAY_ELEM
                    (AST_CONST)
                    (NULL))
                (AST_ARRAY_ELEM
                    (SCALAR)
                    (NULL))))))