    public function run(array $files)
    {
        $phpcsConfig = $this->config->getPhpcs();
        foreach ($files as $file) {
            $builder = new ProcessBuilder(array('php', $this->getCommandLocation()));
            $builder->add('--standard=' . $phpcsConfig->getStandard());
            $builder->add($file);
            $process = $builder->getProcess();
            $process->run();

            if (!$process->isSuccessful()) {
                throw new \RuntimeException($process->getOutput());
            }
        }
    }

    /**
     * @return bool
     */
||||||||    public function run(array $files)
    {
        $phpcsConfig = $this->config->getConfiguration('phpcs'); // TODO: task should have access to config
        foreach ($files as $file) {
            $suffix = substr($file, strlen($file) - 8);

            if ('Spec.php' === $suffix || 'Test.php' === $suffix) {
                continue;
            }

            $builder = new ProcessBuilder(array('php', $this->getCommandLocation()));
            $builder->add('--standard=' . $phpcsConfig->getStandard());
            $builder->add($file);
            $process = $builder->getProcess();
            $process->run();

            if (!$process->isSuccessful()) {
                throw new \RuntimeException($process->getOutput());
            }
        }
    }

}||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (NULL))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_PROP
                (AST_VAR))
            (
                (SCALAR))))
    (AST_FOREACH
        (AST_VAR)
        (AST_VAR)
        (NULL)
        (
            (AST_ASSIGN
                (AST_VAR)
                (AST_CALL
                    (
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_CALL
                                (
                                    (AST_VAR)))
                            (SCALAR)))))
            (AST_IF
                (AST_IF_ELEM
                    (AST_BINARY_OP
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR))
                        (AST_BINARY_OP
                            (SCALAR)
                            (AST_VAR)))
                    (
                        (AST_CONTINUE
                            (NULL)))))
            (AST_ASSIGN
                (AST_VAR)
                (AST_NEW
                    (
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_METHOD_CALL
                                    (AST_VAR))
                                (NULL))))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_BINARY_OP
                        (SCALAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))))
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (AST_VAR)))
            (AST_ASSIGN
                (AST_VAR)
                (AST_METHOD_CALL
                    (AST_VAR)))
            (AST_METHOD_CALL
                (AST_VAR))
            (AST_IF
                (AST_IF_ELEM
                    (AST_UNARY_OP
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (
                        (AST_THROW
                            (AST_NEW
                                (
                                    (AST_METHOD_CALL
                                        (AST_VAR)))))))))))