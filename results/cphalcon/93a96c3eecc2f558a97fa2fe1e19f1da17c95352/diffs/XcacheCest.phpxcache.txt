||||||||    public function xcache(UnitTester $I)
    {
        $I->wantTo('fetch metadata from xcache cache');

        /**
         * @var \Phalcon\Di\FactoryDefault $di
         * @var \Phalcon\Mvc\Model\MetaData\Xcache $md
         */
        $di = Di::getDefault();
        $md = $di->get('modelsMetadata');
        $md->reset();

        $I->assertTrue($md->isEmpty());

        Robots::findFirst();

        $I->assertEquals($this->data['meta-robots-robots'], xcache_get('$PMM$app\meta-phalcon\test\models\robots-robots'));
        $I->assertEquals($this->data['map-robots'], xcache_get('$PMM$app\map-phalcon\test\models\robots'));

        $I->assertFalse($md->isEmpty());

        $md->reset();
        $I->assertTrue($md->isEmpty());
    }
}||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL))
    (AST_ASSIGN
        (AST_VAR)
        (AST_METHOD_CALL
            (AST_VAR)
            (
                (SCALAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_STATIC_CALL)
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_DIM
                (AST_PROP
                    (AST_VAR))
                (SCALAR))
            (AST_CALL
                (
                    (SCALAR)))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR))))
    (AST_METHOD_CALL
        (AST_VAR))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)))))