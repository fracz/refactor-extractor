||||||||    public function testAssetsManagerOutputCssWithoutImplicitOutputFromCollection()
    {
        $this->specify(
            "The outputCss using a collection does not produce the correct result",
            function () {
                $assets = new Manager();
                $assets->collection('footer')->addCss('css/style1.css');

                $footer = $assets->collection('footer');
                $footer->addCss('css/style2.css');

                $expected = sprintf(
                    "%s\n%s\n",
                    '<link rel="stylesheet" type="text/css" href="/css/style1.css" />',
                    '<link rel="stylesheet" type="text/css" href="/css/style2.css" />'
                );

                $assets->useImplicitOutput(false);

                expect($assets->outputCss('footer'))->equals($expected);
            }
        );
    }

    /**
     * collection tests
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-13
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR))))))))