    public function testIssue1532()
    {
        $this->markTestIncomplete('To be checked');
        @unlink(__DIR__ . '/assets/production/1532.js');
        $di = new \Phalcon\DI\FactoryDefault();
        $assets = new \PhTAssetsManager();
        $assets->useImplicitOutput(false);
        $assets->collection('js')
            ->addJs('unit-tests/assets/jquery.js')
            ->join(true)
            ->addFilter(new Phalcon\Assets\Filters\Jsmin())
            ->setTargetPath(__DIR__ .'/assets/production/1532.js')
            ->setTargetLocal(false)
            ->setPrefix('//phalconphp.com/')
            ->setTargetUri('js/jquery.js');

        $this->assertEquals(
            $assets->outputJs('js'),
            '<script type="text/javascript" src="//phalconphp.com/js/jquery.js"></script>' .
            PHP_EOL
        );
    }

||||||||||||||||NO_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_UNARY_OP
        (AST_CALL
            (
                (AST_BINARY_OP
                    (AST_MAGIC_CONST)
                    (SCALAR)))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_ASSIGN
        (AST_VAR)
        (AST_NEW))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_CONST)))
    (AST_METHOD_CALL
        (AST_METHOD_CALL
            (AST_METHOD_CALL
                (AST_METHOD_CALL
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))
                                (
                                    (SCALAR)))
                            (
                                (AST_CONST)))
                        (
                            (AST_NEW)))
                    (
                        (AST_BINARY_OP
                            (AST_MAGIC_CONST)
                            (SCALAR))))
                (
                    (AST_CONST)))
            (
                (SCALAR)))
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (AST_METHOD_CALL
                (AST_VAR)
                (
                    (SCALAR)))
            (AST_BINARY_OP
                (SCALAR)
                (AST_CONST)))))||||||||