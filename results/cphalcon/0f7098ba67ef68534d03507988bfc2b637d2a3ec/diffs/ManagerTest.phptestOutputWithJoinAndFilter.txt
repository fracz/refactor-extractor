||||||||    public function testOutputWithJoinAndFilter()
    {
        $this->specify(
            "The outputJs using a collection and with enabled join and filter does not produce the correct result",
            function () {
                $assets = new Manager();

                $assets->useImplicitOutput(false);
                $assets->collection('js')
                    ->addJs(PATH_DATA. 'assets/jquery.js', false, false)
                    ->setTargetPath(PATH_OUTPUT . "tests/assets/combined.js")
                    ->setTargetUri('production/combined.js')
                    ->join(false)
                    ->addFilter(new None());

                $expected = sprintf(
                    '<script type="text/javascript" src="%s"></script>%s',
                    PATH_DATA. 'assets/jquery.js',
                    PHP_EOL
                );

                expect($assets->outputJs('js'))->equals($expected);
            }
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_METHOD_CALL
                                            (AST_VAR)
                                            (
                                                (SCALAR)))
                                        (
                                            (AST_BINARY_OP
                                                (AST_CONST)
                                                (SCALAR))
                                            (AST_CONST)
                                            (AST_CONST)))
                                    (
                                        (AST_BINARY_OP
                                            (AST_CONST)
                                            (SCALAR))))
                                (
                                    (SCALAR)))
                            (
                                (AST_CONST)))
                        (
                            (AST_NEW)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (AST_BINARY_OP
                                    (AST_CONST)
                                    (SCALAR))
                                (AST_CONST))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR)
                                    (
                                        (SCALAR)))))
                        (
                            (AST_VAR))))))))