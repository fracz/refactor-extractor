||||||||    public function testAssetsManagerOutputJsWithoutImplicitOutputFromCollectionRemote()
    {
        $this->specify(
            "The outputJs using a collection does not produce the correct result",
            function () {
                $assets = new Manager();

                $assets->collection('header')
                    ->setPrefix('http:://cdn.example.com/')
                    ->setLocal(false)
                    ->addJs('js/script1.js')
                    ->addJs('js/script2.js');

                $assets->useImplicitOutput(false);
                $actual = $assets->outputJs('header');

                $expected = sprintf(
                    "%s\n%s\n",
                    '<script type="text/javascript" src="http:://cdn.example.com/js/script1.js"></script>',
                    '<script type="text/javascript" src="http:://cdn.example.com/js/script2.js"></script>'
                );

                expect($actual)->equals($expected);
            }
        );
    }

    /**
     * Tests setting local target
     *
     * @issue  1532
     * @author Serghei Iakovlev <serghei@phalconphp.com>
     * @author Dreamszhu <dreamsxin@qq.com>
     * @since  2013-10-25
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_METHOD_CALL
                            (AST_METHOD_CALL
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))
                                    (
                                        (SCALAR)))
                                (
                                    (AST_CONST)))
                            (
                                (SCALAR)))
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_CONST)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR)
                                (SCALAR)
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))