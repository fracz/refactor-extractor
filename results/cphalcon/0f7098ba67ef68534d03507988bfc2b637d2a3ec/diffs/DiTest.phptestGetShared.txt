||||||||    public function testGetShared()
    {
        $this->specify(
            "Resolving shared service does now work correctly",
            function () {
                $this->phDi->set('dateObject', function() {
                    $object = new \stdClass();
                    $object->date = microtime(true);
                    return $object;
                });

                $dateObject = $this->phDi->getShared('dateObject');
                usleep(5000);
                $dateObject2 = $this->phDi->getShared('dateObject');

                expect($dateObject)->equals($dateObject2);
                expect($dateObject->date)->equals($dateObject2->date);
            }
        );
    }

    /**
     * Tests resolving service via magic __get
     *
     * @author Serghei Iakovlev <serghei@phalconphp.com>
     * @since  2016-01-29
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_PROP
                            (AST_VAR))
                        (
                            (SCALAR)
                            (AST_CLOSURE
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_NEW))
                                    (AST_ASSIGN
                                        (AST_PROP
                                            (AST_VAR))
                                        (AST_CALL
                                            (
                                                (AST_CONST))))
                                    (AST_RETURN
                                        (AST_VAR))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))
                    (AST_CALL
                        (
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_PROP
                                (AST_VAR))
                            (
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_PROP
                                    (AST_VAR))))
                        (
                            (AST_PROP
                                (AST_VAR)))))))))