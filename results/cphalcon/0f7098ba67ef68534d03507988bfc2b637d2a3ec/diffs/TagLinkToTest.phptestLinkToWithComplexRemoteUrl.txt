||||||||    public function testLinkToWithComplexRemoteUrl()
    {
        $this->specify(
            "linkTo with complex remote URL string parameter returns invalid HTML",
            function () {
                Tag::resetInput();
                $url      = "http://phalconphp.com/en/";
                $name     = 'x_name';
                $actual   = Tag::linkTo($url, $name, false);
                $expected = '<a href="http://phalconphp.com/en/">x_name</a>';

                expect($actual)->equals($expected);
            }
        );

        $this->specify(
            "linkTo with complex remote URL array parameter returns invalid HTML",
            function () {
                Tag::resetInput();
                $options  = [
                    "http://phalconphp.com/en/",
                    'x_name',
                    false,
                ];
                $actual   = Tag::linkTo($options);
                $expected = '<a href="http://phalconphp.com/en/">x_name</a>';

                expect($actual)->equals($expected);
            }
        );

        $this->specify(
            "linkTo with complex remote URL array named parameter returns invalid HTML",
            function () {
                Tag::resetInput();
                $options  = [
                    "http://phalconphp.com/en/",
                    'text'  => 'x_name',
                    'local' => false,
                ];
                $actual   = Tag::linkTo($options);
                $expected = '<a href="http://phalconphp.com/en/">x_name</a>';

                expect($actual)->equals($expected);
            }
        );

        $this->specify(
            "linkTo with mailto URL string parameter returns invalid HTML",
            function () {
                Tag::resetInput();
                $url  = "mailto:someone@phalconphp.com";
                $name = 'someone@phalconphp.com';
                $actual   = Tag::linkTo($url, $name, false);
                $expected = '<a href="mailto:someone@phalconphp.com">someone@phalconphp.com</a>';

                expect($actual)->equals($expected);
            }
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONST))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (NULL))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_ARRAY
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (NULL))
                            (AST_ARRAY_ELEM
                                (SCALAR)
                                (SCALAR))
                            (AST_ARRAY_ELEM
                                (AST_CONST)
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR)))))))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_STATIC_CALL)
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR)
                                (AST_VAR)
                                (AST_CONST))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))