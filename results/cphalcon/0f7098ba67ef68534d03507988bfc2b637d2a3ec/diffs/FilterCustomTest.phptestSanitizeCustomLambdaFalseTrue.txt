    public function testSanitizeCustomLambdaFalseTrue()
    {
        $this->specify(
            "lambda custom filter does not return true",
            function () {

                $filter = new PhTFilter();

                $filter->add(
                    'md5',
                    function ($value) {
                        $filtered = preg_replace('/[^0-9a-f]/', '', $value);

                        return (strlen($filtered) != 32) ? false : $value;
                    }
                );

                $expected = md5('why?');
                $actual   = $filter->sanitize($expected, 'md5');
                expect($actual)->equals($expected);
            }
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CLOSURE
                                (NO_PARAM_TYPENO_PARAM_DEFAULT)
                                (NULL)
                                (
                                    (AST_ASSIGN
                                        (AST_VAR)
                                        (AST_CALL
                                            (
                                                (SCALAR)
                                                (SCALAR)
                                                (AST_VAR))))
                                    (AST_RETURN
                                        (AST_CONDITIONAL
                                            (AST_BINARY_OP
                                                (AST_CALL
                                                    (
                                                        (AST_VAR)))
                                                (SCALAR))
                                            (AST_CONST)
                                            (AST_VAR)))))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL
                            (
                                (SCALAR))))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR)
                                (SCALAR))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))||||||||