    public function testAssetsManagerOutputCssWithImplicitOutput()
    {
        $this->markTestSkipped('To be tested');
        $this->specify(
            "The outputCss with implicitOutput does not produce the correct result",
            function () {

                $this->prepareDI();

                $assets = new PhTAssetsManager();

                $assets->addCss('css/style1.css');
                $assets->addCss('css/style2.css');

                $assets->addResource(new PhAssetsResourceCss('/css/style.css', false));

                ob_start();
                $assets->outputCss();
                $actual   = ob_get_clean();
                $expected = '<link rel="stylesheet" type="text/css" href="/css/style1.css" />'
                          . PHP_EOL
                          . '<link rel="stylesheet" type="text/css" href="/css/style2.css" />'
                          . PHP_EOL
                          . '<link rel="stylesheet" type="text/css" href="/css/style.css" />'
                          . PHP_EOL;

                expect($actual)->equals($expected);
            }
        );
    }

    /**
     * outputJs - implicitOutput tests
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-10-13
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)))
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (AST_NEW
                                (
                                    (SCALAR)
                                    (AST_CONST)))))
                    (AST_CALL)
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_CALL))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (SCALAR)
                                            (AST_CONST))
                                        (SCALAR))
                                    (AST_CONST))
                                (SCALAR))
                            (AST_CONST)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))||||||||