    public function testEscapeJs()
    {
        $this->specify(
            'The escaper with escapeJs does not return the correct result ',
            function () {

                $escaper = new PhTEscaper();

                $source   = "function createtoc () {"
                          . "var h2s = document.getElementsByTagName('H2');"
                          . "l = toc.appendChild(document.createElement('ol'));"
                          . "for (var i=0; i<h2s.length; i++) {"
                          . "var h2 = h2s[i].firstChild.innerHTML;"
                          . "var h = document.createElement('li');"
                          . "l.appendChild(h);"
                          . "}}";
                $expected = 'function createtoc () {'
                          . 'var h2s \x3d document.getElementsByTagName(\x27H2\x27);'
                          . 'l \x3d toc.appendChild(document.createElement(\x27ol\x27));'
                          . 'for (var i\x3d0; i\x3ch2s.length; i++) {'
                          . 'var h2 \x3d h2s[i].firstChild.innerHTML;'
                          . 'var h \x3d document.createElement(\x27li\x27);'
                          . 'l.appendChild(h);'
                          . '}}';
                $actual   = $escaper->escapeJs($source);

                expect($actual)->equals($expected);

            }
        );
    }

    /**
     * Tests the escapeUrl
     *
     * @author Nikolaos Dimopoulos <nikos@phalconphp.com>
     * @since  2014-09-16
     */
||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (SCALAR))
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (AST_BINARY_OP
                                    (AST_BINARY_OP
                                        (AST_BINARY_OP
                                            (AST_BINARY_OP
                                                (AST_BINARY_OP
                                                    (SCALAR)
                                                    (SCALAR))
                                                (SCALAR))
                                            (SCALAR))
                                        (SCALAR))
                                    (SCALAR))
                                (SCALAR))
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)
                            (
                                (AST_VAR))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))||||||||