||||||||    public function testResolvingService()
    {
        $this->specify(
            "Di does not resolves service correctly",
            function () {
                $di = new Di();
                $di->set('resolved', function() {
                    return new \SomeService();
                });
                $di->set('notResolved', function() {
                    return new \SomeService();
                });

                expect($di->getService('resolved')->isResolved())->false();
                expect($di->getService('notResolved')->isResolved())->false();

                $di->get('resolved');

                expect($di->getService('resolved')->isResolved())->true();
                expect($di->getService('notResolved')->isResolved())->false();
            }
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_NEW))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CLOSURE
                                (NULL)
                                (
                                    (AST_RETURN
                                        (AST_NEW))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (AST_CLOSURE
                                (NULL)
                                (
                                    (AST_RETURN
                                        (AST_NEW))))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR)))))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_METHOD_CALL
                                        (AST_VAR)
                                        (
                                            (SCALAR))))))))))))