||||||||    public function testTextAreaWithDisplayToAndNewlineInValue()
    {
        $this->specify(
            "textArea with displayTo and newline in value",
            function () {

                $options  = 'x_name';
                $value    = "\r\nx_content";
                $expected = '<textarea id="x_name" name="x_name">'
                          . $value
                          . '</textarea>';

                Tag::setDefault('x_name', $value);
                $actual = Tag::textArea($options);
                Tag::setDefault('x_name', '');

                expect($actual)->equals($expected);
            }
        );
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (SCALAR))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_BINARY_OP
                            (AST_BINARY_OP
                                (SCALAR)
                                (AST_VAR))
                            (SCALAR)))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (AST_VAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_VAR))))
                    (AST_STATIC_CALL
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_VAR)))
                        (
                            (AST_VAR))))))))