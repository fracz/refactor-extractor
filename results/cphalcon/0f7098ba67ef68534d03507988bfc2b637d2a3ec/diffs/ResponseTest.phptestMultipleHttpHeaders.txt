||||||||    public function testMultipleHttpHeaders()
    {
        $this->specify(
            "setStatusCode is not setting the header status properly",
            function () {
                $response = $this->getResponseObject();
                $response->resetHeaders();
                $response->setStatusCode(200, 'OK');
                $response->setStatusCode(404, 'Not Found');
                $response->setStatusCode(409, 'Conflict');

                $expected = Headers::__set_state(
                    [
                        '_headers' => [
                            'HTTP/1.1 409 Conflict' => '',
                            'Status'                 => '409 Conflict'
                        ]
                    ]
                );

                expect($response->getHeaders())->equals($expected);
            }
        );
    }

||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(
    (AST_METHOD_CALL
        (AST_VAR)
        (
            (SCALAR)
            (AST_CLOSURE
                (NULL)
                (
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_METHOD_CALL
                            (AST_VAR)))
                    (AST_METHOD_CALL
                        (AST_VAR))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_METHOD_CALL
                        (AST_VAR)
                        (
                            (SCALAR)
                            (SCALAR)))
                    (AST_ASSIGN
                        (AST_VAR)
                        (AST_STATIC_CALL
                            (
                                (AST_ARRAY
                                    (AST_ARRAY_ELEM
                                        (AST_ARRAY
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR))
                                            (AST_ARRAY_ELEM
                                                (SCALAR)
                                                (SCALAR)))
                                        (SCALAR))))))
                    (AST_METHOD_CALL
                        (AST_CALL
                            (
                                (AST_METHOD_CALL
                                    (AST_VAR))))
                        (
                            (AST_VAR))))))))