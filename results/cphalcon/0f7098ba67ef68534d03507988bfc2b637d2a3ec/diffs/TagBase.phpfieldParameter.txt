    public function fieldParameter($function, $options, $expected, $xhtml, $set = '')
    {
        PhTTag::resetInput();

        if ($xhtml) {
            PhTTag::setDocType(PhTTag::XHTML10_STRICT);
        } else {
            PhTTag::setDocType(PhTTag::HTML5);
        }

        $expected .= ($xhtml) ? ' />' : '>';

        if ($set) {
            PhTTag::displayTo('x_name', 'x_value');
        }
        $actual   = PhTTag::$function($options);
        if ($set) {
            PhTTag::$set('x_name', '');
        }

        expect($actual)->equals($expected);
    }
}||||||||||||||||HAS_DOC_COMMENTNO_RETURN_TYPE
(NO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULTNO_PARAM_TYPENO_PARAM_DEFAULT)
(
    (AST_STATIC_CALL)
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR))))))
        (AST_IF_ELEM
            (NULL)
            (
                (AST_STATIC_CALL
                    (
                        (AST_CLASS_CONST
                            (SCALAR)))))))
    (AST_ASSIGN_OP
        (AST_VAR)
        (AST_CONDITIONAL
            (AST_VAR)
            (SCALAR)
            (SCALAR)))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_ASSIGN
        (AST_VAR)
        (AST_STATIC_CALL
            (
                (AST_VAR))))
    (AST_IF
        (AST_IF_ELEM
            (AST_VAR)
            (
                (AST_STATIC_CALL
                    (
                        (SCALAR)
                        (SCALAR))))))
    (AST_METHOD_CALL
        (AST_CALL
            (
                (AST_VAR)))
        (
            (AST_VAR))))||||||||